<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowHow Interface CATIRuleSet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowHow.htm">This Framework</a>  <a href="interface_CATIRuleBaseFactory_72886.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowHow Interface CATIRuleSet</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../KnowHow/interface_CATIGenericRuleBaseComponent_159420.htm">KnowHow.CATIGenericRuleBaseComponent</a>
        |
        +---CATIRuleSet
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIRuleSet</b>
</p>
<p>
<b><i> Interface dedicated to elementary operations on a rule set.</i></b><br>


 <b>Role</b> Rule sets are used for the hierarchical organization of expert rules
 and expert checks. Under a rule base, one creates rule sets, and in rule sets,
 other rule sets, and so on ... The checks and rules can then be grouped in
 rule sets.

 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowHow/interface_CATIRuleBase_27828.htm">CATIRuleBase</a>, <a href="../KnowHow/interface_CATIRule_12410.htm">CATIRule</a>, <a href="../KnowHow/interface_CATICheck_15227.htm">CATICheck</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRuleBaseComponent(CATIRuleBaseComponent_var&amp;)"><b>AddRuleBaseComponent</b></a>(CATIRuleBaseComponent_var&amp;)
<dd>  Adds a rulebase component under this rule set, if a rulebase component with
 the same name does not already exist.
 <dt> o 
    <a href="#AddRuleSet(CATIRuleSet_var&amp;)"><b>AddRuleSet</b></a>(CATIRuleSet_var&amp;)
<dd>  Adds a ruleset under this rule set, if a ruleset with
 the same name does not already exist.
 <dt> o 
    <a href="#CreateCheck(CATICheck_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"><b>CreateCheck</b></a>(CATICheck_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)
<dd>  Creates a check under the current ruleset.
 <dt> o 
    <a href="#CreateRule(CATIRule_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"><b>CreateRule</b></a>(CATIRule_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)
<dd>  Creates a rule under the current ruleset.
 <dt> o 
    <a href="#CreateRuleset(CATIRuleSet_var&amp;,CATUnicodeString&amp;)"><b>CreateRuleset</b></a>(CATIRuleSet_var&amp;,CATUnicodeString&amp;)
<dd>  Creates a rule set under the current ruleset.
 <dt> o 
    <a href="#FindAnyRuleBaseComponent(CATListValCATIRuleBaseComponent_var&amp;,boolean)"><b>FindAnyRuleBaseComponent</b></a>(CATListValCATIRuleBaseComponent_var&amp;,boolean)
<dd>  Returns all the rulebase components (rules and checks) under this rule set.
 <dt> o 
    <a href="#FindAnyRuleSet(CATListValCATIRuleSet_var&amp;,boolean)"><b>FindAnyRuleSet</b></a>(CATListValCATIRuleSet_var&amp;,boolean)
<dd>  Returns all the rulesets under this rule set.
 <dt> o 
    <a href="#FindRuleBaseComponent(CATUnicodeString,boolean)"><b>FindRuleBaseComponent</b></a>(CATUnicodeString,boolean)
<dd>  Returns the first rulebase component (rule or check), under this rule set, with the according name.
 <dt> o 
    <a href="#FindRuleSet(CATUnicodeString,boolean)"><b>FindRuleSet</b></a>(CATUnicodeString,boolean)
<dd>  Returns the first ruleset under this rule set, with the according name.
 <dt> o 
    <a href="#GetAllGenericRuleBaseComponents(CATListValCATIGenericRuleBaseComponent_var&amp;)"><b>GetAllGenericRuleBaseComponents</b></a>(CATListValCATIGenericRuleBaseComponent_var&amp;)
<dd>  Returns all generic rule base components under this rule set, recursively.
 <dt> o 
    <a href="#GetDirectGenericRuleBaseComponents(CATListValCATIGenericRuleBaseComponent_var&amp;)"><b>GetDirectGenericRuleBaseComponents</b></a>(CATListValCATIGenericRuleBaseComponent_var&amp;)
<dd>  Returns all generic rule base components right under this rule set.
 <dt> o 
    <a href="#ImportRuleBaseComponent(CATIRuleBaseComponent_var&amp;,conflictingImportFunctionPtr)"><b>ImportRuleBaseComponent</b></a>(CATIRuleBaseComponent_var&amp;,conflictingImportFunctionPtr)
<dd>  Import one rulebase component (check or rule) into the current ruleset.
 <dt> o 
    <a href="#ImportRuleSet(CATIRuleSet_var&amp;,conflictingImportFunctionPtr)"><b>ImportRuleSet</b></a>(CATIRuleSet_var&amp;,conflictingImportFunctionPtr)
<dd>  Imports the contents of a ruleset into the current one.
 <dt> o 
    <a href="#RemoveRuleBaseComponent(CATIRuleBaseComponent_var&amp;)"><b>RemoveRuleBaseComponent</b></a>(CATIRuleBaseComponent_var&amp;)
<dd>  Removes a rule base component under this rule set.
 <dt> o 
    <a href="#RemoveRuleSet(CATIRuleSet_var&amp;)"><b>RemoveRuleSet</b></a>(CATIRuleSet_var&amp;)
<dd>  Removes a ruleset under this rule set.
 <dt> o 
    <a href="#Status()"><b>Status</b></a>()
<dd>  Returns the status of the ruleset.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRuleBaseComponent"></a><a name="AddRuleBaseComponent(CATIRuleBaseComponent_var&amp;)"></a> <dt> o <b>AddRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual <a href="../KnowHow/interface_CATIRuleBaseComponent_89947.htm">CATIRuleBaseComponent_var</a>  <b>AddRuleBaseComponent</b>(<td> const CATIRuleBaseComponent_var&amp; <td><tt>spRuleBaseComponent</tt>)=0   </table></dt>
<dl>
  <dd>
 Adds a rulebase component under this rule set, if a rulebase component with
 the same name does not already exist.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> spRuleBaseComponent</tt>
   <dd> a rulebase component. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the component under the rule set (the previous one if one with same name already exists)
</dl>
</dl>
<a name="AddRuleSet"></a><a name="AddRuleSet(CATIRuleSet_var&amp;)"></a> <dt> o <b>AddRuleSet</b>

<dt>  <table><tr><td>  public virtual <a href="../KnowHow/interface_CATIRuleSet_23867.htm">CATIRuleSet_var</a>  <b>AddRuleSet</b>(<td> const CATIRuleSet_var&amp; <td><tt>spRuleSet</tt>)=0  </table></dt>
<dl>
  <dd>
 Adds a ruleset under this rule set, if a ruleset with
 the same name does not already exist.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> spRuleSet</tt>
   <dd> a rulebase component. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the component under the rule set (the previous one if one with same name already exists)
</dl>
</dl>
<a name="CreateCheck"></a><a name="CreateCheck(CATICheck_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"></a> <dt> o <b>CreateCheck</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>CreateCheck</b>(<td>CATICheck_var&amp; <td><tt>oCreatedCheck</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iName</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iVariables</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iBody</tt>,<tr><td></td><td>CATIRuleBaseComponent::RuleBaseComponentLanguage <td><tt>iLanguage</tt><td><tt>= CATIRuleBaseComponent::KWELanguage</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates a check under the current ruleset.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCreatedCheck</tt>
   <dd> The created check. </dd>
    <dt><tt> iName</tt>
   <dd>      Name of the check. </dd>
    <dt><tt> iVariables</tt>
   <dd> Variables of the check. </dd>
    <dt><tt> iBody</tt>
   <dd>      Body of the check. </dd>
    <dt><tt> iLanguage</tt>
   <dd>  Language of the check. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="CreateRule"></a><a name="CreateRule(CATIRule_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"></a> <dt> o <b>CreateRule</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>CreateRule</b>(<td>CATIRule_var&amp; <td><tt>oCreatedRule</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iName</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iVariables</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iBody</tt>,<tr><td></td><td>CATIRuleBaseComponent::RuleBaseComponentLanguage <td><tt>iLanguage</tt><td><tt>= CATIRuleBaseComponent::KWELanguage</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates a rule under the current ruleset.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCreatedRule</tt>
   <dd> The created rule. </dd>
    <dt><tt> iName</tt>
   <dd>      Name of the rule. </dd>
    <dt><tt> iVariables</tt>
   <dd> Variables of the rule. </dd>
    <dt><tt> iBody</tt>
   <dd>      Body of the rule. </dd>
    <dt><tt> iLanguage</tt>
   <dd>  Language of the rule. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="CreateRuleset"></a><a name="CreateRuleset(CATIRuleSet_var&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CreateRuleset</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>CreateRuleset</b>(<td>CATIRuleSet_var&amp; <td><tt>oCreatedRuleSet</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iName</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates a rule set under the current ruleset.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCreatedRuleSet</tt>
   <dd> The created ruleset. </dd>
    <dt><tt> iName</tt>
   <dd> Name of the rule set. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="FindAnyRuleBaseComponent"></a><a name="FindAnyRuleBaseComponent(CATListValCATIRuleBaseComponent_var&amp;,boolean)"></a> <dt> o <b>FindAnyRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual void  <b>FindAnyRuleBaseComponent</b>(<td>CATListValCATIRuleBaseComponent_var&amp; <td><tt>iolListToBeFilled</tt>,<tr><td></td><td>boolean <td><tt>iRecursive</tt><td><tt>= FALSE</tt>)=0   </table></dt>
<dl>
  <dd>
 Returns all the rulebase components (rules and checks) under this rule set.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iolListToBeFilled</tt>
   <dd> list filled with the found rulebase components. </dd>
    <dt><tt> iRecursive</tt>
   <dd> TRUE for a recursive search, FALSE to a search limited at the current ruleset.</dd>
</dl>
</dl>
</dl>
<a name="FindAnyRuleSet"></a><a name="FindAnyRuleSet(CATListValCATIRuleSet_var&amp;,boolean)"></a> <dt> o <b>FindAnyRuleSet</b>

<dt>  <table><tr><td>  public virtual void  <b>FindAnyRuleSet</b>(<td>CATListValCATIRuleSet_var&amp; <td><tt>iolListToBeFilled</tt>,<tr><td></td><td>boolean <td><tt>iRecursive</tt><td><tt>= FALSE</tt>)=0  </table></dt>
<dl>
  <dd>
 Returns all the rulesets under this rule set.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iolListToBeFilled</tt>
   <dd> list filled with the found rulesets. </dd>
    <dt><tt> iRecursive</tt>
   <dd> TRUE for a recursive search, FALSE to a search limited at the current ruleset.</dd>
</dl>
</dl>
</dl>
<a name="FindRuleBaseComponent"></a><a name="FindRuleBaseComponent(CATUnicodeString,boolean)"></a> <dt> o <b>FindRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual <a href="../KnowHow/interface_CATIRuleBaseComponent_89947.htm">CATIRuleBaseComponent_var</a>  <b>FindRuleBaseComponent</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> <td><tt>iName</tt>,<tr><td></td><td>boolean <td><tt>iRecursive</tt><td><tt>= FALSE</tt>)=0   </table></dt>
<dl>
  <dd>
 Returns the first rulebase component (rule or check), under this rule set, with the according name.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> name of the component. </dd>
    <dt><tt> iRecursive</tt>
   <dd> TRUE for a recursive search, FALSE to a search limited at the current ruleset. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the found component or NULL_var if not found
</dl>
</dl>
<a name="FindRuleSet"></a><a name="FindRuleSet(CATUnicodeString,boolean)"></a> <dt> o <b>FindRuleSet</b>

<dt>  <table><tr><td>  public virtual <a href="../KnowHow/interface_CATIRuleSet_23867.htm">CATIRuleSet_var</a>  <b>FindRuleSet</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> <td><tt>iName</tt>,<tr><td></td><td>boolean <td><tt>iRecursive</tt><td><tt>= FALSE</tt>)=0  </table></dt>
<dl>
  <dd>
 Returns the first ruleset under this rule set, with the according name.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> name of the ruleset. </dd>
    <dt><tt> iRecursive</tt>
   <dd> TRUE for a recursive search, FALSE to a search limited at the current ruleset. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the found component or NULL_var if not found
</dl>
</dl>
<a name="GetAllGenericRuleBaseComponents"></a><a name="GetAllGenericRuleBaseComponents(CATListValCATIGenericRuleBaseComponent_var&amp;)"></a> <dt> o <b>GetAllGenericRuleBaseComponents</b>

<dt>  <table><tr><td>  public virtual void  <b>GetAllGenericRuleBaseComponents</b>(<td>CATListValCATIGenericRuleBaseComponent_var&amp; <td><tt>iolListToBeFilled</tt>)=0  </table></dt>
<dl>
  <dd>
 Returns all generic rule base components under this rule set, recursively.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iolListToBeFilled</tt>
   <dd> List filled with the components.</dd>
</dl>
</dl>
</dl>
<a name="GetDirectGenericRuleBaseComponents"></a><a name="GetDirectGenericRuleBaseComponents(CATListValCATIGenericRuleBaseComponent_var&amp;)"></a> <dt> o <b>GetDirectGenericRuleBaseComponents</b>

<dt>  <table><tr><td>  public virtual void  <b>GetDirectGenericRuleBaseComponents</b>(<td>CATListValCATIGenericRuleBaseComponent_var&amp; <td><tt>iolListToBeFilled</tt>)=0  </table></dt>
<dl>
  <dd>
 Returns all generic rule base components right under this rule set.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iolListToBeFilled</tt>
   <dd> List filled with the components.</dd>
</dl>
</dl>
</dl>
<a name="ImportRuleBaseComponent"></a><a name="ImportRuleBaseComponent(CATIRuleBaseComponent_var&amp;,conflictingImportFunctionPtr)"></a> <dt> o <b>ImportRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ImportRuleBaseComponent</b>(<td> const CATIRuleBaseComponent_var&amp; <td><tt>iRuleBaseComponentToImport</tt>,<tr><td></td><td><a href="../KnowHow/typedef_conflictingImportFunctionPtr_168422.htm">conflictingImportFunctionPtr</a> <td><tt>iFct</tt><td><tt>= NULL</tt>)=0  </table></dt>
<dl>
  <dd>
 Import one rulebase component (check or rule) into the current ruleset.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRuleBaseComponentToImport</tt>
   <dd> A rulebase component (check or rule) to import. </dd>
    <dt><tt> iFct</tt>
   <dd> A function triggered on conflicting objects. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="ImportRuleSet"></a><a name="ImportRuleSet(CATIRuleSet_var&amp;,conflictingImportFunctionPtr)"></a> <dt> o <b>ImportRuleSet</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ImportRuleSet</b>(<td> const CATIRuleSet_var&amp; <td><tt>iRuleSetToImport</tt>,<tr><td></td><td><a href="../KnowHow/typedef_conflictingImportFunctionPtr_168422.htm">conflictingImportFunctionPtr</a> <td><tt>iFct</tt><td><tt>= NULL</tt>)=0  </table></dt>
<dl>
  <dd>
 Imports the contents of a ruleset into the current one.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRuleSetToImport</tt>
   <dd> A ruleset to import the contents from. </dd>
    <dt><tt> iFct</tt>
   <dd> A function triggered on conflicting objects. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="RemoveRuleBaseComponent"></a><a name="RemoveRuleBaseComponent(CATIRuleBaseComponent_var&amp;)"></a> <dt> o <b>RemoveRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveRuleBaseComponent</b>(<td> const CATIRuleBaseComponent_var&amp; <td><tt>spRuleBaseComponent</tt>)=0   </table></dt>
<dl>
  <dd>
 Removes a rule base component under this rule set.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> spRuleBaseComponent</tt>
   <dd> a rule base component.</dd>
</dl>
</dl>
</dl>
<a name="RemoveRuleSet"></a><a name="RemoveRuleSet(CATIRuleSet_var&amp;)"></a> <dt> o <b>RemoveRuleSet</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveRuleSet</b>(<td> const CATIRuleSet_var&amp; <td><tt>spRuleSet</tt>)=0  </table></dt>
<dl>
  <dd>
 Removes a ruleset under this rule set.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> spRuleSet</tt>
   <dd> a rule base component.</dd>
</dl>
</dl>
</dl>
<a name="Status"></a><a name="Status()"></a> <dt> o <b>Status</b>

<dt>  <table><tr><td>  public virtual CATExpertReportEnum::ValidityTypeEnum  <b>Status</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Returns the status of the ruleset.

 For instance, if all objets under the ruleset are green, then the ruleset is green.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  status of the ruleset.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIRuleSet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATKWERule</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
