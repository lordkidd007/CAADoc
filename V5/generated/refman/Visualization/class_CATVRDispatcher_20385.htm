<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Visualization Class CATVRDispatcher</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../Visualization.htm" href="../Visualization.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "Visualization";	}
		function getCurrentObjectName() { 
 	return "CATVRDispatcher"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Visualization <script type="text/javascript" > writeClassCharacteristic(); </script> CATVRDispatcher</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATVRDispatcher_20385','CATVRDispatcher','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATVRDispatcher</b>
</p>
<p>
<b><i> Base class for creating device event dispatchers.</i></b><br>

 <p><tt>CATVRDispatcher</tt> supplies the methods to set/unset callbacks 
 on specified device events. You should not directly instantiate this object.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATVRDispatcher()"><b>~CATVRDispatcher</b></a>()
<dd>  Destruct the object.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddDeviceCallback(CATBaseUnknown*,CATListOfCATVRDeviceEvent&amp;,CATSubscriberMethod,CATSubscriberData)"><b>AddDeviceCallback</b></a>(CATBaseUnknown*,CATListOfCATVRDeviceEvent&amp;,CATSubscriberMethod,CATSubscriberData)
<dd>  Puts a Callback on given events.
 <dt> o 
    <a href="#RemoveDeviceCallback(CATCallback)"><b>RemoveDeviceCallback</b></a>(CATCallback)
<dd>  Removes a callback.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATVRDispatcher"></a><a name="~CATVRDispatcher()"></a> <dt> o <b>~CATVRDispatcher</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATVRDispatcher</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destruct the object.
 Deleting this object will remove all remaining callbacks.
</dl>
 <h2>Methods</h2> <br>
<a name="AddDeviceCallback"></a><a name="AddDeviceCallback(CATBaseUnknown*,CATListOfCATVRDeviceEvent&amp;,CATSubscriberMethod,CATSubscriberData)"></a> <dt> o <b>AddDeviceCallback</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCallback','CATCallback')</script>  <b>AddDeviceCallback</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iClient</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATVRDeviceEvent','CATListOfCATVRDeviceEvent&amp;')</script> <td><tt>iDeviceEventList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSubscriberMethod','CATSubscriberMethod')</script> <td><tt>iMethod</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSubscriberData','CATSubscriberData')</script> <td><tt>iData</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Puts a Callback on given events.
 When the @ref Dispatch method is called and at least one of the events specified
 in iDeviceEventList was generated by the device drivers since the last Dispatch call,
 the iMethod is called back with a 
<script type="text/javascript"> activateLinkAnchor('CATVRNotification','','CATVRNotification') </script> as argument. The 
<script type="text/javascript"> activateLinkAnchor('CATVRNotification','','CATVRNotification') </script> offers methods to iterate on all those generated events that had arrived between the current Dispatch and the previous one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClient</tt>
   <dd>   The object interested in the event
 </dd>
    <dt><tt> iDeviceEventList</tt>
   <dd>   The event types the </dd>
<script type="text/javascript"> activateLinkAnchor('CATVRNotification','','CATVRNotification') </script> will iterate on. 
    <dt><tt> iMethod</tt>
   <dd>   The method to be called back.
 </dd>
    <dt><tt> iData</tt>
   <dd>   The data to sent with the </dd>
<script type="text/javascript"> activateLinkAnchor('CATVRNotification','','CATVRNotification') </script>.   Default value is NULL
 
  <dt> <b>Returns:</b> 
  <dd>     The callback ID you may use to remove the callback. @see RemoveDeviceCallback.
</dl>
</dl>
</dl>
<a name="RemoveDeviceCallback"></a><a name="RemoveDeviceCallback(CATCallback)"></a> <dt> o <b>RemoveDeviceCallback</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveDeviceCallback</b>(<td><script type="text/javascript"> activateLink('CATCallback','CATCallback')</script> <td><tt>iID</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a callback.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iID</tt>
   <dd>   The callback ID. @see AddDeviceCallback.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATVRDispatcher.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisVR</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

