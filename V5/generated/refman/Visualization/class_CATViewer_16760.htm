<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Visualization Class CATViewer</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Visualization.htm">This Framework</a>  <a href="class_CATVRManager_28208.htm">Previous</a>  <a href="class_CATVisManager_34093.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Visualization Class CATViewer</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../System/class_CATEventSubscriber_67510.htm">System.CATEventSubscriber</a>
        |
        +---<a href="../System/class_CATCommand_20100.htm">System.CATCommand</a>
          |
          +---<a href="../Dialog/class_CATDialog_16070.htm">Dialog.CATDialog</a>
            |
            +---<a href="../Dialog/class_CATDlgBox_15746.htm">Dialog.CATDlgBox</a>
              |
              +---<a href="../Dialog/class_CATDlgFrame_23556.htm">Dialog.CATDlgFrame</a>
                |
                +---CATViewer
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATViewer</b>
</p>
<p>
<b><i> Class to display Graphic Representations on the screen.</i></b><br>

</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATViewer()"><b>~CATViewer</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRep(CAT2DRep*)"><b>AddRep</b></a>(CAT2DRep*)
<dd>   Adds a representation 2D in the main  CAT2DViewpoint.
 <dt> o 
    <a href="#AddRep(CAT3DRep*)"><b>AddRep</b></a>(CAT3DRep*)
<dd>   Adds a representation 3D in the Main 3D Viewpoint.
 <dt> o 
    <a href="#AddRepFurtive(CAT2DRep*)"><b>AddRepFurtive</b></a>(CAT2DRep*)
<dd>   Adds a furtive representation in the Main CAT2DViewpoint.
 <dt> o 
    <a href="#AddRepFurtive(CAT3DRep*)"><b>AddRepFurtive</b></a>(CAT3DRep*)
<dd>   Adds a 3D furtive representation in the main CAT3DViewpoint.
 <dt> o 
    <a href="#AddViewpoint(CATViewpoint*,CATViewerPlacement)"><b>AddViewpoint</b></a>(CATViewpoint*,CATViewerPlacement)
<dd>  Adds a new viewpoint in the Viewer's list with the highest/lowest priority.
 <dt> o 
    <a href="#CATDeclareCBEvent(VIEWER_FEEDBACK_UPDATE)"><b>CATDeclareCBEvent</b></a>(VIEWER_FEEDBACK_UPDATE)
<dd>  Event sent when something happens to the viewer.
 <dt> o 
    <a href="#ClassId()"><b>ClassId</b></a>()
<dd>    Returns the class identifier for which the given object is an instance.
 <dt> o 
    <a href="#DisplayNextViewpoint()"><b>DisplayNextViewpoint</b></a>()
<dd>   Restores the Viewpoint store after the current viepoint.
 <dt> o 
    <a href="#DisplayPreviousViewpoint()"><b>DisplayPreviousViewpoint</b></a>()
<dd>   Restores the Viewpoint store before the current viepoint.
 <dt> o 
    <a href="#Draw()"><b>Draw</b></a>()
<dd>   Asks for generating a new "image" displayed in the Viewer's screen.
 <dt> o 
    <a href="#DrawElement(CATRepPath&amp;)"><b>DrawElement</b></a>(CATRepPath&amp;)
<dd>   Draws a  CATRepPath without redrawing the entire screen .
 <dt> o 
    <a href="#DrawElements(list&lt;CATRepPath&gt;&amp;)"><b>DrawElements</b></a>(list&lt;CATRepPath&gt;&amp;)
<dd>   Draws a list of CATRepPath without redrawing the entire screen.
 <dt> o 
    <a href="#End2DRemoveReps()"><b>End2DRemoveReps</b></a>()
<dd>   Updates the 2D viewpoint to take into account the removal of reps.
 <dt> o 
    <a href="#End2DRemoveRepsFurtive()"><b>End2DRemoveRepsFurtive</b></a>()
<dd>   Updates the 2D viewpoint to take into account the removal of reps.
 <dt> o 
    <a href="#EndRemoveReps()"><b>EndRemoveReps</b></a>()
<dd>   Updates the 3D viewpoint to take into account the removal of reps.
 <dt> o 
    <a href="#EndRemoveRepsFurtive()"><b>EndRemoveRepsFurtive</b></a>()
<dd>   Updates the 3D viewpoint to take into account the removal of reps.
 <dt> o 
    <a href="#GetBackgroundColor(float*,float*,float*)"><b>GetBackgroundColor</b></a>(float*,float*,float*)
<dd>   Retreives the background color.
 <dt> o 
    <a href="#GetCATColormap()"><b>GetCATColormap</b></a>()
<dd>   Gets the CATColormMap.
 <dt> o 
    <a href="#GetContextualMenu()"><b>GetContextualMenu</b></a>()
<dd>  Gets the  CATDlgContextualMenu displayed when you right click on the viewer.
 <dt> o 
    <a href="#GetDefaultBackgroundIndicator()"><b>GetDefaultBackgroundIndicator</b></a>()
<dd>   Gets the default CATIndicator associated to the backGround.
 <dt> o 
    <a href="#GetFeedbackMode()"><b>GetFeedbackMode</b></a>()
<dd>  Returns the feedback mode.
 <dt> o 
    <a href="#GetGlobalAmbientLight(float*,float*,float*)"><b>GetGlobalAmbientLight</b></a>(float*,float*,float*)
<dd>   Retreives the global ambient light color.
 <dt> o 
    <a href="#GetGraphicSize(float*,float*)"><b>GetGraphicSize</b></a>(float*,float*)
<dd>   Gets the size in pixel of the viewer.
 <dt> o 
    <a href="#GetLightSourceReps(CAT3DLightSourceRep*&amp;,CAT3DLightSourceRep*&amp;)"><b>GetLightSourceReps</b></a>(CAT3DLightSourceRep*&amp;,CAT3DLightSourceRep*&amp;)
<dd>   Gets the two CAT3DLightSourceRep associated to the viewer.
 <dt> o 
    <a href="#GetMMInSupportUnit()"><b>GetMMInSupportUnit</b></a>()
<dd>  Gets the Inverse of the size(height) of a pixel in millimeter.
 <dt> o 
    <a href="#GetMain2DViewpoint()"><b>GetMain2DViewpoint</b></a>()
<dd>   Gets the main CAT2DViewopint.
 <dt> o 
    <a href="#GetMain3DViewpoint()"><b>GetMain3DViewpoint</b></a>()
<dd>   Gets the main CAT3DViewopint.
 <dt> o 
    <a href="#GetMainViewpoint()"><b>GetMainViewpoint</b></a>()
<dd>   Gets the main viewpoint.
 <dt> o 
    <a href="#GetManipulatorToActive()"><b>GetManipulatorToActive</b></a>()
<dd>   Gets the CATManipulator to activate.
 <dt> o 
    <a href="#GetOverlayViewpoint()"><b>GetOverlayViewpoint</b></a>()
<dd>   Gets the OverlayViewpoint.
 <dt> o 
    <a href="#GetPickingOptions()"><b>GetPickingOptions</b></a>()
<dd>   Gets the options attached to this viewer for picking.
 <dt> o 
    <a href="#GetSupport()"><b>GetSupport</b></a>()
<dd>   Gets the CATSupport associated to the CATViewer.
 <dt> o 
    <a href="#IsBackgroundGraduated()"><b>IsBackgroundGraduated</b></a>()
<dd>  Gets whether or not the background is graduated.
 <dt> o 
    <a href="#IsFullScreen()"><b>IsFullScreen</b></a>()
<dd>   Gets whether or not the Viewer is in fullScreen.
 <dt> o 
    <a href="#IsNextViewpoint()"><b>IsNextViewpoint</b></a>()
<dd>   Gets wether or not there is a viewpoint store after the current one.
 <dt> o 
    <a href="#IsPreviousViewpoint()"><b>IsPreviousViewpoint</b></a>()
<dd>  Gets wether or not there is a viewpoint store before the current one.
 <dt> o 
    <a href="#Pick(CATPickingStyle,CATMathPointf&amp;,CATMathDirectionf&amp;,float,float,float,float,CATPickPathList&amp;,CATRepPath*,int)"><b>Pick</b></a>(CATPickingStyle,CATMathPointf&amp;,CATMathDirectionf&amp;,float,float,float,float,CATPickPathList&amp;,CATRepPath*,int)
<dd>   Generates a CATPickPathList corresponding to all representations laying under
  the given position.
 <dt> o 
    <a href="#Pick(CATPickingStyle,float,float,float,float,CATPickPathList&amp;,CATRepPath*,float*,int,int)"><b>Pick</b></a>(CATPickingStyle,float,float,float,float,CATPickPathList&amp;,CATRepPath*,float*,int,int)
<dd>   Generates a CATPickPathList corresponding to all representations laying under
  the given position.
 <dt> o 
    <a href="#Reframe()"><b>Reframe</b></a>()
<dd>   Changes the Main Viewpoint to have all the repreentations visible on screen.
 <dt> o 
    <a href="#RemoveManipulatorToActive()"><b>RemoveManipulatorToActive</b></a>()
<dd>   Removes the CATManipulator to be activated.
 <dt> o 
    <a href="#RemoveRep(CAT2DRep*)"><b>RemoveRep</b></a>(CAT2DRep*)
<dd>   Removes a representation 2D from the main CAT2DViewpoint.
 <dt> o 
    <a href="#RemoveRep(CAT3DRep*)"><b>RemoveRep</b></a>(CAT3DRep*)
<dd>   Removes a representation 3D from the main CAT3DViewpoint.
 <dt> o 
    <a href="#RemoveRepFurtive(CAT2DRep*)"><b>RemoveRepFurtive</b></a>(CAT2DRep*)
<dd>   Removes a 2D furtive representation from Main 2D Viewpoint .
 <dt> o 
    <a href="#RemoveRepFurtive(CAT3DRep*)"><b>RemoveRepFurtive</b></a>(CAT3DRep*)
<dd>   Removes a 3D furtive representation from main 3D Viewpoint.
 <dt> o 
    <a href="#RemoveReps(CAT2DRep*)"><b>RemoveReps</b></a>(CAT2DRep*)
<dd>   Removes a representation 2D from the main CAT2DViewpoint.
 <dt> o 
    <a href="#RemoveReps(CAT3DRep*)"><b>RemoveReps</b></a>(CAT3DRep*)
<dd>   Removes a representation 3D from the Main CAT3DViewpoint to be visualized.
 <dt> o 
    <a href="#RemoveRepsFurtive(CAT2DRep*)"><b>RemoveRepsFurtive</b></a>(CAT2DRep*)
<dd>   Removes a furtive representation from the Main 2D Viewpoint.
 <dt> o 
    <a href="#RemoveRepsFurtive(CAT3DRep*)"><b>RemoveRepsFurtive</b></a>(CAT3DRep*)
<dd>   Removes a furtive representation from the main 3D Viewpoint.
 <dt> o 
    <a href="#RemoveViewpoint(CATViewpoint*)"><b>RemoveViewpoint</b></a>(CATViewpoint*)
<dd>   Removes the viewpoint from the viewer's list.
 <dt> o 
    <a href="#Resize(float,float)"><b>Resize</b></a>(float,float)
<dd>   Resize the viewer.
 <dt> o 
    <a href="#SaveViewpoint()"><b>SaveViewpoint</b></a>()
<dd>   Stores the Current MainViewpoint so that it can be restored later.
 <dt> o 
    <a href="#SetBackgroundColor(float,float,float,int)"><b>SetBackgroundColor</b></a>(float,float,float,int)
<dd>   Sets the background color.
 <dt> o 
    <a href="#SetCursor(CATDialog::CATDlgCursor)"><b>SetCursor</b></a>(CATDialog::CATDlgCursor)
<dd>   Sets the cursor displayed when the mouse is over the viewer.
 <dt> o 
    <a href="#SetFeedbackMode(CATBoolean)"><b>SetFeedbackMode</b></a>(CATBoolean)
<dd>  Sets the feedback mode.
 <dt> o 
    <a href="#SetFullScreen(int)"><b>SetFullScreen</b></a>(int)
<dd>   Sets the viewer's FullScreen state.
 <dt> o 
    <a href="#SetGlobalAmbientLight(float,float,float)"><b>SetGlobalAmbientLight</b></a>(float,float,float)
<dd>   Sets the global ambient light color.
 <dt> o 
    <a href="#SetGraduatedBackground(int)"><b>SetGraduatedBackground</b></a>(int)
<dd>   Sets whether or not the background is graduated.
 <dt> o 
    <a href="#SetIndicator(CATIndicator*,CATViewerPlacement)"><b>SetIndicator</b></a>(CATIndicator*,CATViewerPlacement)
<dd>  Sets the current indicator.
 <dt> o 
    <a href="#SetLightSourceReps(CAT3DLightSourceRep*,CAT3DLightSourceRep*)"><b>SetLightSourceReps</b></a>(CAT3DLightSourceRep*,CAT3DLightSourceRep*)
<dd>   Sets the two CAT3DLightSourceRep associated to the viewer.
 <dt> o 
    <a href="#SetMainViewpoint(CATViewpoint*)"><b>SetMainViewpoint</b></a>(CATViewpoint*)
<dd>   Sets the main viewpoint of the viewer.
 <dt> o 
    <a href="#SetManipulatorToActive(CATManipulator*)"><b>SetManipulatorToActive</b></a>(CATManipulator*)
<dd>   Sets the CATManipulator to activate on next mouse interaction.
 <dt> o 
    <a href="#SetViewMode(int,int)"><b>SetViewMode</b></a>(int,int)
<dd>  Sets the viewmode for viewer enclosed in the current CATSupport.
 <dt> o 
    <a href="#UndrawElement(CATRepPath&amp;)"><b>UndrawElement</b></a>(CATRepPath&amp;)
<dd>   Undraws  a CATRepPath if it is Furtive .
 <dt> o 
    <a href="#UndrawElements(list&lt;CATRepPath&gt;&amp;)"><b>UndrawElements</b></a>(list&lt;CATRepPath&gt;&amp;)
<dd>   Undraws  a list of CATRepPath if they are Furtive .
 <dt> o 
    <a href="#ViewMode(int)"><b>ViewMode</b></a>(int)
<dd>  Returns whether or not the given mode is active.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATViewer"></a><a name="~CATViewer()"></a> <dt> o <b>~CATViewer</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATViewer</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRep"></a><a name="AddRep(CAT2DRep*)"></a> <dt> o <b>AddRep</b>

<dt>  <table><tr><td>  public virtual void  <b>AddRep</b>(<td><a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Adds a representation 2D in the main  CAT2DViewpoint. 
 <br>The representation will appear only at the next 
<a href="../Visualization/class_CATViewer_16760.htm#Draw">CATViewer.Draw</a>  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>   The </dd>
<a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep</a> to add
</dl>
</dl>
</dl>
<a name="AddRep"></a><a name="AddRep(CAT3DRep*)"></a> <dt> o <b>AddRep</b>

<dt>  <table><tr><td>  public virtual void  <b>AddRep</b>(<td><a href="../VisualizationBase/class_CAT3DRep_11216.htm">CAT3DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Adds a representation 3D in the Main 3D Viewpoint. 
 <br>The representation will appears only at the next CATViewer::Draw 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>  The rep to Add</dd>
</dl>
</dl>
</dl>
<a name="AddRepFurtive"></a><a name="AddRepFurtive(CAT2DRep*)"></a> <dt> o <b>AddRepFurtive</b>

<dt>  <table><tr><td>  public virtual void  <b>AddRepFurtive</b>(<td><a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Adds a furtive representation in the Main CAT2DViewpoint.
 <br><b>Role:</b>The furtive representation will be displayed 
 with the XOR color. See the 
<a href="#DrawElement">DrawElement</a> method  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>   the </dd>
<a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep</a> to add
</dl>
</dl>
</dl>
<a name="AddRepFurtive"></a><a name="AddRepFurtive(CAT3DRep*)"></a> <dt> o <b>AddRepFurtive</b>

<dt>  <table><tr><td>  public virtual void  <b>AddRepFurtive</b>(<td><a href="../VisualizationBase/class_CAT3DRep_11216.htm">CAT3DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Adds a 3D furtive representation in the main CAT3DViewpoint. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>  The 3D Rep to add</dd>
</dl>
</dl>
</dl>
<a name="AddViewpoint"></a><a name="AddViewpoint(CATViewpoint*,CATViewerPlacement)"></a> <dt> o <b>AddViewpoint</b>

<dt>  <table><tr><td>  public void  <b>AddViewpoint</b>(<td><a href="../VisualizationBase/class_CATViewpoint_30780.htm">CATViewpoint*</a> <td><tt>iViewpoint</tt>,<tr><td></td><td> const <a href="../VisualizationBase/enum_CATViewerPlacement_67040.htm">CATViewerPlacement</a> <td><tt>iPlace</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Adds a new viewpoint in the Viewer's list with the highest/lowest priority.
 The representations of this viewpoint will be displayed behind the other viewpoints
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>  the Viewpoint to add
 </dd>
    <dt><tt> iPlace</tt>
   <dd>  <b>Legal values</b>: Foreground and Background</dd>
</dl>
</dl>
</dl>
<a name="CATDeclareCBEvent"></a><a name="CATDeclareCBEvent(VIEWER_FEEDBACK_UPDATE)"></a> <dt> o <b>CATDeclareCBEvent</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATDeclareCBEvent</b>(<td>VIEWER_FEEDBACK_UPDATE <td><tt></tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Event sent when something happens to the viewer. 
 <br><b>Role</b>: This event contains a
 
<a href="../Visualization/class_CATVisViewerFeedbackEvent_126491.htm">CATVisViewerFeedbackEvent</a> class pointer to describe itself. This event is not dispatched when the end user uses the Preselection Navigator. 
 <br>Sample of callback: 
 <pre>
::AddCallback(this,
         _myViewer,
          CATViewer::VIEWER_FEEDBACK_UPDATE(),
          (CATSubscriberMethod)&MyClass::MyCBMethod,
         NULL);
 <pre>
</dl>
<a name="ClassId"></a><a name="ClassId()"></a> <dt> o <b>ClassId</b>

<dt>  <table><tr><td>  public static <a href="../DNBSystem/struct__0.htm">const CLSID & __stdcall</a>  <b>ClassId</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
   Returns the class identifier for which the given object is an instance.
</dl>
<a name="DisplayNextViewpoint"></a><a name="DisplayNextViewpoint()"></a> <dt> o <b>DisplayNextViewpoint</b>

<dt>  <table><tr><td>  public virtual void  <b>DisplayNextViewpoint</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Restores the Viewpoint store after the current viepoint.
</dl>
<a name="DisplayPreviousViewpoint"></a><a name="DisplayPreviousViewpoint()"></a> <dt> o <b>DisplayPreviousViewpoint</b>

<dt>  <table><tr><td>  public virtual void  <b>DisplayPreviousViewpoint</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Restores the Viewpoint store before the current viepoint.
</dl>
<a name="Draw"></a><a name="Draw()"></a> <dt> o <b>Draw</b>

<dt>  <table><tr><td>  public virtual void  <b>Draw</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Asks for generating a new "image" displayed in the Viewer's screen. 
 <br>
 This image is composed of all representations attached to each viewpoint.
 This image is not computed immediately but as soon as possible.
</dl>
<a name="DrawElement"></a><a name="DrawElement(CATRepPath&amp;)"></a> <dt> o <b>DrawElement</b>

<dt>  <table><tr><td>  public virtual void  <b>DrawElement</b>(<td><a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath&amp;</a> <td><tt>iPath</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Draws a  CATRepPath without redrawing the entire screen .
 <br> if the  
<a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath</a> is furtive. The  
<a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath</a> is drawn in XOR mode  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>  the  CATRepPath to redraw</dd>
</dl>
</dl>
</dl>
<a name="DrawElements"></a><a name="DrawElements(list&lt;CATRepPath&gt;&amp;)"></a> <dt> o <b>DrawElements</b>

<dt>  <table><tr><td>  public virtual void  <b>DrawElements</b>(<td>list&lt;CATRepPath&gt;&amp; <td><tt>iPaths</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Draws a list of CATRepPath without redrawing the entire screen. 
  if the  
<a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath</a> is furtive. The  
<a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath</a> is drawn in XOR mode 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPaths</tt>
   <dd> the list of  </dd>
<a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath</a> to redraw
</dl>
</dl>
</dl>
<a name="End2DRemoveReps"></a><a name="End2DRemoveReps()"></a> <dt> o <b>End2DRemoveReps</b>

<dt>  <table><tr><td>  public virtual void  <b>End2DRemoveReps</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Updates the 2D viewpoint to take into account the removal of reps.
 <br>Call that method after removing many representations with RemoveReps
</dl>
<a name="End2DRemoveRepsFurtive"></a><a name="End2DRemoveRepsFurtive()"></a> <dt> o <b>End2DRemoveRepsFurtive</b>

<dt>  <table><tr><td>  public virtual void  <b>End2DRemoveRepsFurtive</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Updates the 2D viewpoint to take into account the removal of reps.
 Call that method after removing many representations with RemoveRepsFurtive
</dl>
<a name="EndRemoveReps"></a><a name="EndRemoveReps()"></a> <dt> o <b>EndRemoveReps</b>

<dt>  <table><tr><td>  public virtual void  <b>EndRemoveReps</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Updates the 3D viewpoint to take into account the removal of reps.
 <br>Call that method after removing many representations with RemoveReps
</dl>
<a name="EndRemoveRepsFurtive"></a><a name="EndRemoveRepsFurtive()"></a> <dt> o <b>EndRemoveRepsFurtive</b>

<dt>  <table><tr><td>  public virtual void  <b>EndRemoveRepsFurtive</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Updates the 3D viewpoint to take into account the removal of reps.
 <br>Call that method after removing many representations with RemoveRepsFurtive
</dl>
<a name="GetBackgroundColor"></a><a name="GetBackgroundColor(float*,float*,float*)"></a> <dt> o <b>GetBackgroundColor</b>

<dt>  <table><tr><td>  public void  <b>GetBackgroundColor</b>(<td>float* <td><tt>oR</tt>,<tr><td></td><td>float* <td><tt>oG</tt>,<tr><td></td><td>float* <td><tt>oB</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Retreives the background color.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oR</tt>
   <dd> the red composant color.
</dd>
    <dt><tt> oG</tt>
   <dd> the green composant color.
</dd>
    <dt><tt> oB</tt>
   <dd> the blue composant color.</dd>
</dl>
</dl>
</dl>
<a name="GetCATColormap"></a><a name="GetCATColormap()"></a> <dt> o <b>GetCATColormap</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CATColorMap_24151.htm">CATColorMap &</a>  <b>GetCATColormap</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Gets the CATColormMap. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the CATColorMap
</dl>
</dl>
<a name="GetContextualMenu"></a><a name="GetContextualMenu()"></a> <dt> o <b>GetContextualMenu</b>

<dt>  <table><tr><td>  public <a href="../Dialog/class_CATDlgContextualMenu_82906.htm">CATDlgContextualMenu *</a>  <b>GetContextualMenu</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Gets the  CATDlgContextualMenu displayed when you right click on the viewer.
</dl>
<a name="GetDefaultBackgroundIndicator"></a><a name="GetDefaultBackgroundIndicator()"></a> <dt> o <b>GetDefaultBackgroundIndicator</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CATIndicator_29772.htm">CATIndicator *</a>  <b>GetDefaultBackgroundIndicator</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets the default CATIndicator associated to the backGround.
</dl>
<a name="GetFeedbackMode"></a><a name="GetFeedbackMode()"></a> <dt> o <b>GetFeedbackMode</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>GetFeedbackMode</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the feedback mode.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The feedback mode. 
   <br><tt>TRUE</tt> if the feedback mode is active, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="GetGlobalAmbientLight"></a><a name="GetGlobalAmbientLight(float*,float*,float*)"></a> <dt> o <b>GetGlobalAmbientLight</b>

<dt>  <table><tr><td>  public void  <b>GetGlobalAmbientLight</b>(<td>float* <td><tt>oR</tt>,<tr><td></td><td>float* <td><tt>oG</tt>,<tr><td></td><td>float* <td><tt>oB</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Retreives the global ambient light color.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oR</tt>
   <dd> the red composant color.
</dd>
    <dt><tt> oG</tt>
   <dd> the green composant color.
</dd>
    <dt><tt> oB</tt>
   <dd> the blue composant color.</dd>
</dl>
</dl>
</dl>
<a name="GetGraphicSize"></a><a name="GetGraphicSize(float*,float*)"></a> <dt> o <b>GetGraphicSize</b>

<dt>  <table><tr><td>  public void  <b>GetGraphicSize</b>(<td>float* <td><tt>owidth</tt>,<tr><td></td><td>float* <td><tt>oheight</tt>) const  </table></dt>
<dl>
  <dd>
  Gets the size in pixel of the viewer. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> owidth</tt>
   <dd>  </dd>
    <dt><tt> oheight</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="GetLightSourceReps"></a><a name="GetLightSourceReps(CAT3DLightSourceRep*&amp;,CAT3DLightSourceRep*&amp;)"></a> <dt> o <b>GetLightSourceReps</b>

<dt>  <table><tr><td>  public void  <b>GetLightSourceReps</b>(<td> const <a href="../VisualizationBase/class_CAT3DLightSourceRep_71235.htm">CAT3DLightSourceRep*&amp;</a> <td><tt>lightRep1</tt>,<tr><td></td><td> const <a href="../VisualizationBase/class_CAT3DLightSourceRep_71235.htm">CAT3DLightSourceRep*&amp;</a> <td><tt>lightRep2</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Gets the two CAT3DLightSourceRep associated to the viewer.
</dl>
<a name="GetMMInSupportUnit"></a><a name="GetMMInSupportUnit()"></a> <dt> o <b>GetMMInSupportUnit</b>

<dt>  <table><tr><td>  public float  <b>GetMMInSupportUnit</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Gets the Inverse of the size(height) of a pixel in millimeter.
</dl>
<a name="GetMain2DViewpoint"></a><a name="GetMain2DViewpoint()"></a> <dt> o <b>GetMain2DViewpoint</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CAT2DViewpoint_39734.htm">CAT2DViewpoint &</a>  <b>GetMain2DViewpoint</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets the main CAT2DViewopint.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   the main 
<a href="../VisualizationBase/class_CAT2DViewpoint_39734.htm">CAT2DViewpoint</a>
</dl>
</dl>
<a name="GetMain3DViewpoint"></a><a name="GetMain3DViewpoint()"></a> <dt> o <b>GetMain3DViewpoint</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm">CAT3DViewpoint &</a>  <b>GetMain3DViewpoint</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets the main CAT3DViewopint.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   the main 
<a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm">CAT3DViewpoint</a>
</dl>
</dl>
<a name="GetMainViewpoint"></a><a name="GetMainViewpoint()"></a> <dt> o <b>GetMainViewpoint</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CATViewpoint_30780.htm">CATViewpoint &</a>  <b>GetMainViewpoint</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets the main viewpoint.
 <br>This viewpoint is the one being modified by local transformations
</dl>
<a name="GetManipulatorToActive"></a><a name="GetManipulatorToActive()"></a> <dt> o <b>GetManipulatorToActive</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CATManipulator_41648.htm">const CATManipulator *</a>  <b>GetManipulatorToActive</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets the CATManipulator to activate.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   the 
<a href="../VisualizationBase/class_CATManipulator_41648.htm">CATManipulator</a> to Activate
</dl>
</dl>
<a name="GetOverlayViewpoint"></a><a name="GetOverlayViewpoint()"></a> <dt> o <b>GetOverlayViewpoint</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CAT2DViewpoint_39734.htm">CAT2DViewpoint &</a>  <b>GetOverlayViewpoint</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets the OverlayViewpoint.
 <br><b>Role:</b>
 This viewpoint is a 
<a href="../VisualizationBase/class_CAT2DViewpoint_39734.htm">CAT2DViewpoint</a> displayed in front of any other representation  
<dl>
  <dt> <b>Returns:</b> 
  <dd>    the overlay 
<a href="../VisualizationBase/class_CAT2DViewpoint_39734.htm">CAT2DViewpoint</a>
</dl>
</dl>
<a name="GetPickingOptions"></a><a name="GetPickingOptions()"></a> <dt> o <b>GetPickingOptions</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CATPickOptions_40898.htm">CATPickOptions&</a>  <b>GetPickingOptions</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Gets the options attached to this viewer for picking.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   the options used for picking.
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport()"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CATSupport_21602.htm">CATSupport &</a>  <b>GetSupport</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets the CATSupport associated to the CATViewer.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the 
<a href="../VisualizationBase/class_CATSupport_21602.htm">CATSupport</a>
</dl>
</dl>
<a name="IsBackgroundGraduated"></a><a name="IsBackgroundGraduated()"></a> <dt> o <b>IsBackgroundGraduated</b>

<dt>  <table><tr><td>  public int  <b>IsBackgroundGraduated</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Gets whether or not the background is graduated.  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the result of the test
</dl>
</dl>
<a name="IsFullScreen"></a><a name="IsFullScreen()"></a> <dt> o <b>IsFullScreen</b>

<dt>  <table><tr><td>  public virtual int  <b>IsFullScreen</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets whether or not the Viewer is in fullScreen.
</dl>
<a name="IsNextViewpoint"></a><a name="IsNextViewpoint()"></a> <dt> o <b>IsNextViewpoint</b>

<dt>  <table><tr><td>  public virtual int  <b>IsNextViewpoint</b>(<td>)const  </table></dt>
<dl>
  <dd>
  Gets wether or not there is a viewpoint store after the current one.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the result of the test
</dl>
</dl>
<a name="IsPreviousViewpoint"></a><a name="IsPreviousViewpoint()"></a> <dt> o <b>IsPreviousViewpoint</b>

<dt>  <table><tr><td>  public virtual int  <b>IsPreviousViewpoint</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Gets wether or not there is a viewpoint store before the current one. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the result of the test
</dl>
</dl>
<a name="Pick"></a><a name="Pick(CATPickingStyle,CATMathPointf&amp;,CATMathDirectionf&amp;,float,float,float,float,CATPickPathList&amp;,CATRepPath*,int)"></a> <dt> o <b>Pick</b>

<dt>  <table><tr><td>  public void  <b>Pick</b>(<td> const <a href="../VisualizationBase/enum_CATPickingStyle_46614.htm">CATPickingStyle</a> <td><tt>istyle</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathPointf_34608.htm">CATMathPointf&amp;</a> <td><tt>iorg</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathDirectionf_59359.htm">CATMathDirectionf&amp;</a> <td><tt>idir</tt>,<tr><td></td><td> const float <td><tt>ineard</tt>,<tr><td></td><td> const float <td><tt>ifard</tt>,<tr><td></td><td> const float <td><tt>idx</tt>,<tr><td></td><td> const float <td><tt>idy</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATPickPathList_45402.htm">CATPickPathList&amp;</a> <td><tt>oPlist</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath*</a> <td><tt>irepp</tt><td><tt>= NULL</tt>,<tr><td></td><td> const int <td><tt>ipick_style</tt><td><tt>= 0</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Generates a CATPickPathList corresponding to all representations laying under
  the given position.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  istyle</tt>
   <dd>      A CATPickingStyle specifying the way the </dd>
<a href="../VisualizationBase/class_CATPickPathList_45402.htm">CATPickPathList</a> is generated  
    <dt><tt>  iorg</tt>
   <dd>        The Point from wich we pick  </dd>
    <dt><tt>  idir</tt>
   <dd>        The direction into wich we pick  </dd>
    <dt><tt>  ineard</tt>
   <dd>      The distance from iorg at wich we begin to pick  </dd>
    <dt><tt>  ifard</tt>
   <dd>       The distance from iorg at wich we stop to pick  </dd>
    <dt><tt>  oPlist</tt>
   <dd>      The </dd>
<a href="../VisualizationBase/class_CATPickPathList_45402.htm">CATPickPathList</a> generated  
    <dt><tt>  irepp</tt>
   <dd>       The </dd>
<a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath</a> we want to pick on. If this parameter is NULL, we pick on all representations  
    <dt><tt>  ipick_style</tt>
   <dd> The </dd>
<a href="../VisualizationBase/typedef_CATViewModeType_45804.htm">CATViewModeType</a> used to do the picking
</dl>
</dl>
</dl>
<a name="Pick"></a><a name="Pick(CATPickingStyle,float,float,float,float,CATPickPathList&amp;,CATRepPath*,float*,int,int)"></a> <dt> o <b>Pick</b>

<dt>  <table><tr><td>  public void  <b>Pick</b>(<td> const <a href="../VisualizationBase/enum_CATPickingStyle_46614.htm">CATPickingStyle</a> <td><tt>istyle</tt>,<tr><td></td><td> const float <td><tt>ix</tt>,<tr><td></td><td> const float <td><tt>iy</tt>,<tr><td></td><td> const float <td><tt>idx</tt>,<tr><td></td><td> const float <td><tt>idy</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATPickPathList_45402.htm">CATPickPathList&amp;</a> <td><tt>oPlist</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath*</a> <td><tt>irepp</tt><td><tt>= NULL</tt>,<tr><td></td><td> const float* <td><tt>ipolygon</tt><td><tt>= NULL</tt>,<tr><td></td><td> const int <td><tt>inb_point</tt><td><tt>= 0</tt>,<tr><td></td><td> const int <td><tt>ipick_style</tt><td><tt>= 0</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Generates a CATPickPathList corresponding to all representations laying under
  the given position.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  istyle</tt>
   <dd>       A CATPickingStyle specifying the way the </dd>
<a href="../VisualizationBase/class_CATPickPathList_45402.htm">CATPickPathList</a> is generated  
    <dt><tt>  ix</tt>
   <dd>           The x coordinate of the position at wich we want to pick
  </dd>
    <dt><tt>  iy</tt>
   <dd>           The y coordinate of the position at wich we want to pick
  </dd>
    <dt><tt>  idx</tt>
   <dd>          The width in pixel 
  </dd>
    <dt><tt>  idy</tt>
   <dd>          The height in pixel
  </dd>
    <dt><tt>  oPlist</tt>
   <dd>       The CATPickPathList generated
  </dd>
    <dt><tt>  irepp</tt>
   <dd>        The CATRepPath we want to pick on. If this parameter is NULL, we pick on all representations
  </dd>
    <dt><tt>  ipolygon</tt>
   <dd>     If the CATPickingStyle is CATPickingInsidePolygon, define the polygon used for the picking
  </dd>
    <dt><tt>  inb_point</tt>
   <dd>    If the CATPickingStyle is CATPickingInsidePolygon, define the number of points in the polygon
  </dd>
    <dt><tt>  ipick_style</tt>
   <dd>    The </dd>
<a href="../VisualizationBase/typedef_CATViewModeType_45804.htm">CATViewModeType</a> used to do the picking
</dl>
</dl>
</dl>
<a name="Reframe"></a><a name="Reframe()"></a> <dt> o <b>Reframe</b>

<dt>  <table><tr><td>  public virtual void  <b>Reframe</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Changes the Main Viewpoint to have all the repreentations visible on screen.
</dl>
<a name="RemoveManipulatorToActive"></a><a name="RemoveManipulatorToActive()"></a> <dt> o <b>RemoveManipulatorToActive</b>

<dt>  <table><tr><td>  public void  <b>RemoveManipulatorToActive</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes the CATManipulator to be activated.
</dl>
<a name="RemoveRep"></a><a name="RemoveRep(CAT2DRep*)"></a> <dt> o <b>RemoveRep</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveRep</b>(<td><a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes a representation 2D from the main CAT2DViewpoint.
  The representation will disappear at the next 
<a href="../Visualization/class_CATViewer_16760.htm#Draw">CATViewer.Draw</a>    
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> the </dd>
<a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep</a> to remove
</dl>
</dl>
</dl>
<a name="RemoveRep"></a><a name="RemoveRep(CAT3DRep*)"></a> <dt> o <b>RemoveRep</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveRep</b>(<td><a href="../VisualizationBase/class_CAT3DRep_11216.htm">CAT3DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes a representation 3D from the main CAT3DViewpoint.
 <br>The representation will appears at he next 
<a href="../Visualization/class_CATViewer_16760.htm#Draw">CATViewer.Draw</a>  Use this method in the process of removing many representations
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>  The 3D rep to remove</dd>
</dl>
</dl>
</dl>
<a name="RemoveRepFurtive"></a><a name="RemoveRepFurtive(CAT2DRep*)"></a> <dt> o <b>RemoveRepFurtive</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveRepFurtive</b>(<td><a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes a 2D furtive representation from Main 2D Viewpoint .
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>   the </dd>
<a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep</a> to remove
</dl>
</dl>
</dl>
<a name="RemoveRepFurtive"></a><a name="RemoveRepFurtive(CAT3DRep*)"></a> <dt> o <b>RemoveRepFurtive</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveRepFurtive</b>(<td><a href="../VisualizationBase/class_CAT3DRep_11216.htm">CAT3DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes a 3D furtive representation from main 3D Viewpoint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>  The 3D Rep to remove</dd>
</dl>
</dl>
</dl>
<a name="RemoveReps"></a><a name="RemoveReps(CAT2DRep*)"></a> <dt> o <b>RemoveReps</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveReps</b>(<td><a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes a representation 2D from the main CAT2DViewpoint.
 The representation will appears at the next 
<a href="../Visualization/class_CATViewer_16760.htm#Draw">CATViewer.Draw</a>  Use this method in the process of removing many representations
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> the </dd>
<a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep</a> to remove
</dl>
</dl>
</dl>
<a name="RemoveReps"></a><a name="RemoveReps(CAT3DRep*)"></a> <dt> o <b>RemoveReps</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveReps</b>(<td><a href="../VisualizationBase/class_CAT3DRep_11216.htm">CAT3DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes a representation 3D from the Main CAT3DViewpoint to be visualized.
 <br> The representation will appears at he next CATViewer::Draw 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>  the 3D Rep to remove</dd>
</dl>
</dl>
</dl>
<a name="RemoveRepsFurtive"></a><a name="RemoveRepsFurtive(CAT2DRep*)"></a> <dt> o <b>RemoveRepsFurtive</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveRepsFurtive</b>(<td><a href="../VisualizationBase/class_CAT2DRep_11200.htm">CAT2DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes a furtive representation from the Main 2D Viewpoint.
 <br><b>Role:</b>The representation will disappear at the next 
<a href="../Visualization/class_CATViewer_16760.htm#Draw">CATViewer.Draw</a>. Use this method in the process of removing many representations.
</dl>
<a name="RemoveRepsFurtive"></a><a name="RemoveRepsFurtive(CAT3DRep*)"></a> <dt> o <b>RemoveRepsFurtive</b>

<dt>  <table><tr><td>  public virtual void  <b>RemoveRepsFurtive</b>(<td><a href="../VisualizationBase/class_CAT3DRep_11216.htm">CAT3DRep*</a> <td><tt>iRep</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes a furtive representation from the main 3D Viewpoint.
 <br>The representation will disappear at the next 
<a href="../Visualization/class_CATViewer_16760.htm#Draw">CATViewer.Draw</a>  Use this method in the process of removing many representations
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>  The 3D Rep to remove</dd>
</dl>
</dl>
</dl>
<a name="RemoveViewpoint"></a><a name="RemoveViewpoint(CATViewpoint*)"></a> <dt> o <b>RemoveViewpoint</b>

<dt>  <table><tr><td>  public void  <b>RemoveViewpoint</b>(<td><a href="../VisualizationBase/class_CATViewpoint_30780.htm">CATViewpoint*</a> <td><tt>iViewpoint</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Removes the viewpoint from the viewer's list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>  </dd>
<a href="../VisualizationBase/class_CATViewpoint_30780.htm">CATViewpoint</a> to remove
</dl>
</dl>
</dl>
<a name="Resize"></a><a name="Resize(float,float)"></a> <dt> o <b>Resize</b>

<dt>  <table><tr><td>  public void  <b>Resize</b>(<td> const float <td><tt>iWidth</tt>,<tr><td></td><td> const float <td><tt>iHeight</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Resize the viewer.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWidth</tt>
   <dd> the new width in pixel for the viewer.
</dd>
    <dt><tt> iHeight</tt>
   <dd> the new width in pixel for the viewer.</dd>
</dl>
</dl>
</dl>
<a name="SaveViewpoint"></a><a name="SaveViewpoint()"></a> <dt> o <b>SaveViewpoint</b>

<dt>  <table><tr><td>  public virtual void  <b>SaveViewpoint</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Stores the Current MainViewpoint so that it can be restored later.
</dl>
<a name="SetBackgroundColor"></a><a name="SetBackgroundColor(float,float,float,int)"></a> <dt> o <b>SetBackgroundColor</b>

<dt>  <table><tr><td>  public virtual void  <b>SetBackgroundColor</b>(<td> const float <td><tt>iR</tt>,<tr><td></td><td> const float <td><tt>iG</tt>,<tr><td></td><td> const float <td><tt>iB</tt>,<tr><td></td><td> const int <td><tt>save</tt><td><tt>=1</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Sets the background color.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iR</tt>
   <dd> the red composant color.
</dd>
    <dt><tt> iG</tt>
   <dd> the green composant color.
</dd>
    <dt><tt> iB</tt>
   <dd> the blue composant color.</dd>
</dl>
</dl>
</dl>
<a name="SetCursor"></a><a name="SetCursor(CATDialog::CATDlgCursor)"></a> <dt> o <b>SetCursor</b>

<dt>  <table><tr><td>  public CATDialog::CATDlgCursor  <b>SetCursor</b>(<td>CATDialog::CATDlgCursor <td><tt>iCursor</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Sets the cursor displayed when the mouse is over the viewer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCursor</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="SetFeedbackMode"></a><a name="SetFeedbackMode(CATBoolean)"></a> <dt> o <b>SetFeedbackMode</b>

<dt>  <table><tr><td>  public void  <b>SetFeedbackMode</b>(<td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iOnOff</tt><td><tt>=FALSE</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the feedback mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnOff</tt>
   <dd>   The feedback mode.
   <br><b>Legal values</b>: 
    <ul>
     <li><tt>FALSE</tt>= Off (default value), no feedback </li>
     <li><tt>TRUE</tt>= On , a </dd>
<a href="../Visualization/class_CATVisViewerFeedbackEvent_126491.htm">CATVisViewerFeedbackEvent</a> is sent      when something appends in the viewer. </li>
    </ul>

</dl>
</dl>
</dl>
<a name="SetFullScreen"></a><a name="SetFullScreen(int)"></a> <dt> o <b>SetFullScreen</b>

<dt>  <table><tr><td>  public virtual void  <b>SetFullScreen</b>(<td> const int <td><tt>iOnOff</tt><td><tt>=1</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Sets the viewer's FullScreen state.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnOff</tt>
   <dd> the FullScreen mode</dd>
</dl>
</dl>
</dl>
<a name="SetGlobalAmbientLight"></a><a name="SetGlobalAmbientLight(float,float,float)"></a> <dt> o <b>SetGlobalAmbientLight</b>

<dt>  <table><tr><td>  public void  <b>SetGlobalAmbientLight</b>(<td> const float <td><tt>iR</tt>,<tr><td></td><td> const float <td><tt>iG</tt>,<tr><td></td><td> const float <td><tt>iB</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Sets the global ambient light color.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iR</tt>
   <dd> the red composant color.
</dd>
    <dt><tt> iG</tt>
   <dd> the green composant color.
</dd>
    <dt><tt> iB</tt>
   <dd> the blue composant color.</dd>
</dl>
</dl>
</dl>
<a name="SetGraduatedBackground"></a><a name="SetGraduatedBackground(int)"></a> <dt> o <b>SetGraduatedBackground</b>

<dt>  <table><tr><td>  public virtual void  <b>SetGraduatedBackground</b>(<td> const int <td><tt>iActive</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Sets whether or not the background is graduated. 

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActive</tt>
   <dd>   0 = off.
 1 = on.</dd>
</dl>
</dl>
</dl>
<a name="SetIndicator"></a><a name="SetIndicator(CATIndicator*,CATViewerPlacement)"></a> <dt> o <b>SetIndicator</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CATIndicator_29772.htm">CATIndicator *</a>  <b>SetIndicator</b>(<td><a href="../VisualizationBase/class_CATIndicator_29772.htm">CATIndicator*</a> <td><tt>iIndic</tt>,<tr><td></td><td> const <a href="../VisualizationBase/enum_CATViewerPlacement_67040.htm">CATViewerPlacement</a> <td><tt>iPlace</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the current indicator. The Background and foreground indicator are
 two uniques indicators. When you set the indicators, YOU MUST SAVE the 
 previous one to put yours. Then at the end of your use, you connect back
 the saved one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndic</tt>
   <dd> the </dd>
<a href="../VisualizationBase/class_CATIndicator_29772.htm">CATIndicator</a> 
    <dt><tt> iPlace</tt>
   <dd> Placement Background or Foregroung </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Previous Current indicator to save.
</dl>
</dl>
<a name="SetLightSourceReps"></a><a name="SetLightSourceReps(CAT3DLightSourceRep*,CAT3DLightSourceRep*)"></a> <dt> o <b>SetLightSourceReps</b>

<dt>  <table><tr><td>  public void  <b>SetLightSourceReps</b>(<td><a href="../VisualizationBase/class_CAT3DLightSourceRep_71235.htm">CAT3DLightSourceRep*</a> <td><tt>lightRep1</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CAT3DLightSourceRep_71235.htm">CAT3DLightSourceRep*</a> <td><tt>lightRep2</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Sets the two CAT3DLightSourceRep associated to the viewer.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> lightRep1</tt>
   <dd> the first light source </dd>
    <dt><tt> lightRep2</tt>
   <dd> the second light source</dd>
</dl>
</dl>
</dl>
<a name="SetMainViewpoint"></a><a name="SetMainViewpoint(CATViewpoint*)"></a> <dt> o <b>SetMainViewpoint</b>

<dt>  <table><tr><td>  public virtual void  <b>SetMainViewpoint</b>(<td><a href="../VisualizationBase/class_CATViewpoint_30780.htm">CATViewpoint*</a> <td><tt>viewpoint</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Sets the main viewpoint of the viewer. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> viewpoint</tt>
   <dd>  the viewpoint that is to be manipulated by local transformations</dd>
</dl>
</dl>
</dl>
<a name="SetManipulatorToActive"></a><a name="SetManipulatorToActive(CATManipulator*)"></a> <dt> o <b>SetManipulatorToActive</b>

<dt>  <table><tr><td>  public void  <b>SetManipulatorToActive</b>(<td><a href="../VisualizationBase/class_CATManipulator_41648.htm">CATManipulator*</a> <td><tt>iManip</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Sets the CATManipulator to activate on next mouse interaction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iManip</tt>
   <dd> the </dd>
<a href="../VisualizationBase/class_CATManipulator_41648.htm">CATManipulator</a> to activate
</dl>
</dl>
</dl>
<a name="SetViewMode"></a><a name="SetViewMode(int,int)"></a> <dt> o <b>SetViewMode</b>

<dt>  <table><tr><td>  public void  <b>SetViewMode</b>(<td> const int <td><tt>iMode</tt>,<tr><td></td><td> const int <td><tt>iActive</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the viewmode for viewer enclosed in the current CATSupport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> The viewer mode
 <br><b>Legal values:</b> </dd>
<a href="../VisualizationBase/typedef_CATViewModeType_45804.htm">CATViewModeType</a>  
    <dt><tt> iActive</tt>
   <dd> 0 = off.
 1 = on.
</dd>
</dl>
</dl>
</dl>
<a name="UndrawElement"></a><a name="UndrawElement(CATRepPath&amp;)"></a> <dt> o <b>UndrawElement</b>

<dt>  <table><tr><td>  public virtual void  <b>UndrawElement</b>(<td><a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath&amp;</a> <td><tt>iPath</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Undraws  a CATRepPath if it is Furtive .
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd> the </dd>
<a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath</a> to undraw
</dl>
</dl>
</dl>
<a name="UndrawElements"></a><a name="UndrawElements(list&lt;CATRepPath&gt;&amp;)"></a> <dt> o <b>UndrawElements</b>

<dt>  <table><tr><td>  public virtual void  <b>UndrawElements</b>(<td>list&lt;CATRepPath&gt;&amp; <td><tt>iPaths</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Undraws  a list of CATRepPath if they are Furtive .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPaths</tt>
   <dd> the list of </dd>
<a href="../VisualizationBase/class_CATRepPath_19828.htm">CATRepPath</a> to undraw
</dl>
</dl>
</dl>
<a name="ViewMode"></a><a name="ViewMode(int)"></a> <dt> o <b>ViewMode</b>

<dt>  <table><tr><td>  public int  <b>ViewMode</b>(<td> const int <td><tt>iMode</tt>) const  </table></dt>
<dl>
  <dd>
 Returns whether or not the given mode is active.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> the viewer mode.
 <br><b>Legal values:</b> </dd>
<a href="../VisualizationBase/typedef_CATViewModeType_45804.htm">CATViewModeType</a>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATViewer.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisualization</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
