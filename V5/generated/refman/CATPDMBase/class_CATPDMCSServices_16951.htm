<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPDMBase Class CATPDMCSServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPDMBase.htm" href="../CATPDMBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPDMBase";	}
		function getCurrentObjectName() { 
 	return "CATPDMCSServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPDMBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATPDMCSServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPDMCSServices_16951','CATPDMCSServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPDMCSServices</b>
</p>
<p>
<b><i> Services to interface with VPMNav client Models.</i></b><br>
 

 <br><b>Role:</b>Provide various services to support client Model 
 <br>
 The client model is one element of the MVC paradigm deployed on the client side.
 It is bridged with the server model by the means of CORBA-based protocol, 
 and provide support for mapping of objects between client and server.
 <br>
 Services are provided in the form of static methods 

</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#RunObjectService(CATString&amp;,CATLISTV(CATIPLMIdentificator_var)&amp;,char*,CATLISTV(CATIPLMIdentificator_var)&amp;,char**)"><b>RunObjectService</b></a>(CATString&amp;,CATLISTV(CATIPLMIdentificator_var)&amp;,char*,CATLISTV(CATIPLMIdentificator_var)&amp;,char**)
<dd>  Enable the client execution of a server service.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="RunObjectService"></a><a name="RunObjectService(CATString&amp;,CATLISTV(CATIPLMIdentificator_var)&amp;,char*,CATLISTV(CATIPLMIdentificator_var)&amp;,char**)"></a> <dt> o <b>RunObjectService</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RunObjectService</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iServName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATIPLMIdentificator_var)','CATLISTV(CATIPLMIdentificator_var)&amp;')</script> <td><tt>iObjectIds</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>ipString</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATIPLMIdentificator_var)','CATLISTV(CATIPLMIdentificator_var)&amp;')</script> <td><tt>oObjectIds</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('char','char**')</script> <td><tt>opString</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Enable the client execution of a server service.

<br><b>Role:</b>This method support a C/S execution exchanging object & related information   
<p> 
<br>this infrastructure does the marshalling of input and output arguments between the 2 process.
<br>It does the adequate RPC call in the server and executing the service in calling the ENOVIObjectServiceCode
    using the service name as an object late type
<br> <b>Notice to user</b>It is strongly adviced not to modify object through a server service 
       when the corresponding object is are already loaded in client through long transaction. 
       Instead the client modeler has to be used for client modification
        whose late type is the exact name of the invokable service. 
        This server object must implement interface ENOVIObjectServiceCode by which the execution takes place.
 <br>
 The Execution of the service only operates in a short transaction mode. 
 It cannot operates if server already contain uncomited information.
 In case of modification achieved in the server by the service, modifications will be automatically comitted by the infrastructure 
 otherwise if service fails to execute, a rollback will be insured by the infrastructure   
<p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iServName<p></tt>
   <dd> 
  Service Name to be invoked on server:
  <br> in this version only ENOVIA5 server is supported, thus all service names have to be prefixed with "ENOVIA5_Service_", 
       where "ENOVIA5" is the server logical name (as known from the client) 
       and "Service" is a key string that refer to the deployment of this protocol 
  <br> <b>Example</b>:"ENOVIA5_Service_CustoName"

  </dd>
    <dt><tt> iObjectIds</tt>
   <dd>    Input Object List for <tt>iServName</tt> Service.
  <br>It is marshalled to the server and passed in as an input to the customized code on server side.
      The same list order & position is maintained during the transfer

  </dd>
    <dt><tt> ipString</tt>
   <dd>    formatted char provided as an input information for <tt>iServName</tt> Service.
  <br>Contract for the string contain is established and documented by the service implementer, being it a xml or anything else
  <br>It is marshalled to the server and passed in as input to the customized code on server side.
 
  </dd>
    <dt><tt> oObjectIds</tt>
   <dd>    output Object List returned from <tt>iServName</tt> Service.
  <br>It is marshalled back to the client and provided as an output.

  </dd>
    <dt><tt> opString</tt>
   <dd>    formatted char provided as an output information for <tt>iServName</tt> Service.
  <br>Contract for the string contain is established and documented by the service implementer, being it a xml or anything else
  <br>It is marshalled back to the client and provided as an output.
  Standard life cycle rule applies, returned string must be deleted by the caller  

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul>
     <li><tt>S_OK</tt>: Service executed on server and returning output</li> 
     <li><tt>E_FAIL</tt>: The Services has failed to Execute. Possible error are: 
       <ul>
        <li>Connection to ENOVIA V5 Server cannot be established</li>
        <li>Service not found / not supported on Server</li>
        <li>Provided Objects does not exist on server</li>
        <li>Service does not execute correctly</li>
       </ul>
      </li>
  </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPDMCSServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPDMBaseEnoviaV5CAA</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

