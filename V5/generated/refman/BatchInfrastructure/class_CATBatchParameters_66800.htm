<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>BatchInfrastructure Class CATBatchParameters</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../BatchInfrastructure.htm">This Framework</a>  <a href="class_CATBatchLogCAA_34400.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>BatchInfrastructure Class CATBatchParameters</h1>
<pre>
CATBatchParameters
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATBatchParameters</b>
</p>
<p>
<b><i> Class generating the batch parameter XML file.</i></b><br>

 <b>Role</b>: This class allow you to generate the XML parameters file.
 It can be used in the UI of your batch when overloading the method CATBatchFrame::FillParametersFile
 One object represents one parameter file.
 Each method write in the file. To obtain a consistent XML file you must call the methods in the following order : 
 <ul>
 <li> BeginInput </li>
 <li> EndInput </li>
 <li> BeginOutput </li>
 <li> EndOutput </li>
 </ul>
 In the Input or Output section  ou can use the Insertxxx methods to describe the I/O of your batch.

   <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../BatchInfrastructure/interface_CATIBatchCAA_24332.htm">CATIBatchCAA</a>, <a href="../BatchInfrastructure/interface_CATIBatchElementsCAA_74572.htm">CATIBatchElementsCAA</a>, <a href="../BatchInfrastructure/class_CATBatchParameters_66800.htm">CATBatchParameters</a>, CATBatchFrame (for CATUTIL integration only)
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATBatchParameters()"><b>CATBatchParameters</b></a>()
<dd>  <dt> o 
    <a href="#~CATBatchParameters()"><b>~CATBatchParameters</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeginBuffer(char*,char*,char*,char*,char*,char*,char*)"><b>BeginBuffer</b></a>(char*,char*,char*,char*,char*,char*,char*)
<dd>  Initialize the XML input parameter file and generate the root tag
 <br><b>Role</b>: This method allows you to initialize an XML parameter file.
 <dt> o 
    <a href="#BeginInput()"><b>BeginInput</b></a>()
<dd>   Opens a Input section.
 <dt> o 
    <a href="#BeginOutput()"><b>BeginOutput</b></a>()
<dd>   Opens a Output section.
 <dt> o 
    <a href="#EndBuffer()"><b>EndBuffer</b></a>()
<dd>   Closes the XML input parameter file
 <br><b>Role</b>: This method close the XML input parameter file.
 <dt> o 
    <a href="#EndInput()"><b>EndInput</b></a>()
<dd>   Closes a Input section.
 <dt> o 
    <a href="#EndOutput()"><b>EndOutput</b></a>()
<dd>   Closes a Ouput section.
 <dt> o 
    <a href="#GetFullPath(CATUnicodeString&amp;)"><b>GetFullPath</b></a>(CATUnicodeString&amp;)
<dd>   Retrieves the full path of the current XML parameter file.
 <dt> o 
    <a href="#GetOutputParamFile()"><b>GetOutputParamFile</b></a>()
<dd>   Retrieves the current output parameter within a batch.
 <dt> o 
    <a href="#GetOutputParamPath(CATUnicodeString&amp;,char*)"><b>GetOutputParamPath</b></a>(CATUnicodeString&amp;,char*)
<dd>   Retrieves the path of the output XML file.
 <dt> o 
    <a href="#InsertFile(char*,char*,char*,CATComFileType,CATBatFileUploadable,int)"><b>InsertFile</b></a>(char*,char*,char*,CATComFileType,CATBatFileUploadable,int)
<dd>   Inserts a &ltfile&gt tag in your XML file.
 <dt> o 
    <a href="#InsertFolder(char*,char*,char*,CATComFileType,char*,CATBatFileUploadable,int)"><b>InsertFolder</b></a>(char*,char*,char*,CATComFileType,char*,CATBatFileUploadable,int)
<dd>   Inserts a &ltfolder&gt tag in your XML file.
 <dt> o 
    <a href="#InsertSimpleArg(char*,char*)"><b>InsertSimpleArg</b></a>(char*,char*)
<dd>   Inserts a &ltsimple_arg&gt tag in your XML file.
 <dt> o 
    <a href="#InsertTag(char*)"><b>InsertTag</b></a>(char*)
<dd>   Inserts a custom string  in your XML file.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATBatchParameters"></a><a name="CATBatchParameters()"></a> <dt> o <b>CATBatchParameters</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATBatchParameters</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATBatchParameters"></a><a name="~CATBatchParameters()"></a> <dt> o <b>~CATBatchParameters</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATBatchParameters</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="BeginBuffer"></a><a name="BeginBuffer(char*,char*,char*,char*,char*,char*,char*)"></a> <dt> o <b>BeginBuffer</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>BeginBuffer</b>(<td> const char* <td><tt>batch_name</tt>,<tr><td></td><td> const char* <td><tt>file_name</tt>,<tr><td></td><td> const char* <td><tt>user</tt><td><tt>=NULL</tt>,<tr><td></td><td> const char* <td><tt>pwd</tt><td><tt>=NULL </tt>,<tr><td></td><td> const char* <td><tt>env</tt><td><tt>=NULL</tt>,<tr><td></td><td> const char* <td><tt>dir</tt><td><tt>=NULL</tt>,<tr><td></td><td> const char* <td><tt>licfile</tt><td><tt>=NULL</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Initialize the XML input parameter file and generate the root tag
 <br><b>Role</b>: This method allows you to initialize an XML parameter file.

 
<dl>
</dl>
</dl>
<a name="BeginInput"></a><a name="BeginInput()"></a> <dt> o <b>BeginInput</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>BeginInput</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Opens a Input section.
 <br><b>Role</b>: This method open the input section of your XML parameter file where you can describe 
 the inputs of your batch.
 Do no forget to call EndInput to close the section.

</dl>
<a name="BeginOutput"></a><a name="BeginOutput()"></a> <dt> o <b>BeginOutput</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>BeginOutput</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Opens a Output section.
 <br><b>Role</b>: This method open the output section of your XML parameter file where you can describe 
 the outputs of your batch.
 Do no forget to call EndOutput to close the section.

</dl>
<a name="EndBuffer"></a><a name="EndBuffer()"></a> <dt> o <b>EndBuffer</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>EndBuffer</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Closes the XML input parameter file
 <br><b>Role</b>: This method close the XML input parameter file.

</dl>
<a name="EndInput"></a><a name="EndInput()"></a> <dt> o <b>EndInput</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>EndInput</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Closes a Input section.
 <br><b>Role</b>: This method close the input section of your XML parameter file if it has been previously opened.


</dl>
<a name="EndOutput"></a><a name="EndOutput()"></a> <dt> o <b>EndOutput</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>EndOutput</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Closes a Ouput section.
 <br><b>Role</b>: This method close the output section of your XML parameter file if it has been previously opened.


</dl>
<a name="GetFullPath"></a><a name="GetFullPath(CATUnicodeString&amp;)"></a> <dt> o <b>GetFullPath</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFullPath</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>full_path</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Retrieves the full path of the current XML parameter file.
 <br><b>Role</b>: This method retrieves the full path of the current XML parameter file.

</dl>
<a name="GetOutputParamFile"></a><a name="GetOutputParamFile()"></a> <dt> o <b>GetOutputParamFile</b>

<dt>  <table><tr><td>  public static <a href="../BatchInfrastructure/class_CATBatchParameters_66800.htm">CATBatchParameters*</a>  <b>GetOutputParamFile</b>(<td>)</table></dt>
<dl>
  <dd>
  Retrieves the current output parameter within a batch.
 <br><b>Role</b>: This method must be used in your batch if you need to descibe its output while it's running.
 Useful only if you don't know these outputs from the XML parameter file.

</dl>
<a name="GetOutputParamPath"></a><a name="GetOutputParamPath(CATUnicodeString&amp;,char*)"></a> <dt> o <b>GetOutputParamPath</b>

<dt>  <table><tr><td>  public static <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOutputParamPath</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oPath</tt>,<tr><td></td><td>char* <td><tt>uuid</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Retrieves the path of the output XML file. 
 <br><b>Role</b>: This method allows you to retrieve the path of the output XML file in a batch or even in the launcher process?

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> uuid</tt>
   <dd> the uuid identifying the batch, retrieved by CATBatClientMonitorCAA::StartV5Batch method
 </dd>
    <dt><tt> oPath</tt>
   <dd> the path of the output XML file</dd>
</dl>
</dl>
</dl>
<a name="InsertFile"></a><a name="InsertFile(char*,char*,char*,CATComFileType,CATBatFileUploadable,int)"></a> <dt> o <b>InsertFile</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>InsertFile</b>(<td> const char* <td><tt>id</tt>,<tr><td></td><td> const char* <td><tt>filePath</tt>,<tr><td></td><td> const char* <td><tt>dest</tt>,<tr><td></td><td><a href="../Communications/enum_CATComFileType_39238.htm">CATComFileType</a> <td><tt>type</tt>,<tr><td></td><td>CATBatFileUploadable <td><tt>fupload</tt>,<tr><td></td><td>int <td><tt>automatic</tt><td><tt>= 1</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Inserts a &ltfile&gt tag in your XML file. 
 <br><b>Role</b>: This method allows you to describe a file typed I/O.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> id</tt>
   <dd> Name for your tag, useful for an easy access from your batch using "ParametersCAA" methods. See CATIBatchElementCAA
 </dd>
    <dt><tt> filePath</tt>
   <dd> Absolute file path of your file.
 </dd>
    <dt><tt> dest</tt>
   <dd> Used for remote execution of your batch. Can be set to NULL for local execution or in remote only if "automatic" is set to 1. See below.
 Two cases 
 <ul>
 <li> For an input (InsertFile called in the intput section) : "dest"  represents the directory where the file is to be uploaded on the remote machine before the batch execution</li>
 <li> For an output (InsertFile called in the output section) : "dest"  represents the directory where the file is to be downloaded on the local machine after the remote batch execution</li>
 </ul>

 </dd>
    <dt><tt> type</tt>
   <dd> type of the file (for remote execution only)
 <b>Legal Values</b>:
  <ul>
    <li>COMM_FILE_ASCII  : for a text  file </li>
    <li>COMM_FILE_BINARY : for a binary file</li>
  </ul>
 
 </dd>
    <dt><tt> fupload</tt>
   <dd> download/upload mode (for remote execution only). 
 Unique Legal Value supported:
  <ul>
    <li> CATBatchRightNow</li>
  </ul>

  </dd>
    <dt><tt> automatic</tt>
   <dd>  used in remote only to determine the behaviour of "dest" (see above).
  If automatic = 0 means that in remote you have specify the directory "dest" yourself as explained above.
  If automatic = 1 means that you don't need to specify "dest" for a remote exection. The following rules will the be applied :
  <ul>
    <li>For an input <file> "dest", the upload directory target, will be a temporay directory on the remote machine </li>
    <li>For an output <file> "dest", the dowload directory will be equal to"filePath"  </li>
  </ul>
  The automatic mode is useful when you don't want to reference any specific target on the remote machine and then be able to run your batch anywhere.</dd>
</dl>
</dl>
</dl>
<a name="InsertFolder"></a><a name="InsertFolder(char*,char*,char*,CATComFileType,char*,CATBatFileUploadable,int)"></a> <dt> o <b>InsertFolder</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>InsertFolder</b>(<td> const char* <td><tt>id</tt>,<tr><td></td><td> const char* <td><tt>folderPath</tt>,<tr><td></td><td> const char* <td><tt>dest</tt>,<tr><td></td><td><a href="../Communications/enum_CATComFileType_39238.htm">CATComFileType</a> <td><tt>type</tt>,<tr><td></td><td> const char* <td><tt>extension</tt>,<tr><td></td><td>CATBatFileUploadable <td><tt>fupload</tt>,<tr><td></td><td>int <td><tt>automatic</tt><td><tt>= 1</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Inserts a &ltfolder&gt tag in your XML file. 
 <br><b>Role</b>: This method allows you to describe a folder typed I/O.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> id</tt>
   <dd> Name for your tag, useful for an easy access from your batch using "ParametersCAA" methods. See CATIBatchElementCAA
 </dd>
    <dt><tt> folderPath</tt>
   <dd> Absolute path of your folder.
 </dd>
    <dt><tt> dest</tt>
   <dd> see InsertFile method

 </dd>
    <dt><tt> type</tt>
   <dd> type of the file contained in your folder (for remote execution only)
 <b>Legal Values</b>:
  <ul>
    <li>COMM_FILE_ASCII  : for a text  file </li>
    <li>COMM_FILE_BINARY : for a binary file</li>
  </ul>
 
 </dd>
    <dt><tt> extension</tt>
   <dd> extension of the files in your folder (without the dot).(for remote execution only)

 </dd>
    <dt><tt> fupload</tt>
   <dd> download/upload mode (for remote execution only).
 Unique Legal Value supported:
  <ul>
    <li> CATBatchRightNow</li>
  </ul>

  </dd>
    <dt><tt> automatic</tt>
   <dd> see InsertFile method</dd>
</dl>
</dl>
</dl>
<a name="InsertSimpleArg"></a><a name="InsertSimpleArg(char*,char*)"></a> <dt> o <b>InsertSimpleArg</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>InsertSimpleArg</b>(<td> const char* <td><tt>id</tt>,<tr><td></td><td> const char* <td><tt>value</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Inserts a &ltsimple_arg&gt tag in your XML file. 
 <br><b>Role</b>: This method allows you to describe a simple typed I/O : int, double
 To be retrieved in your batch using the BoolArg, FloatArg, StringArg methods of CATIBatchElementCAA, depending of the type of your input.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> id</tt>
   <dd> Name for your tag, useful for an easy access from your batch using "ParametersCAA" methods. See CATIBatchElementCAA
 </dd>
    <dt><tt> value</tt>
   <dd> value of your I/O</dd>
</dl>
</dl>
</dl>
<a name="InsertTag"></a><a name="InsertTag(char*)"></a> <dt> o <b>InsertTag</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>InsertTag</b>(<td> const char* <td><tt>tag</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Inserts a custom string  in your XML file. 
 <br><b>Role</b>: This method allows you to write a sting in the XML file.
 This is to be used to insert your own tags and syntax. This string must be XML.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> tag</tt>
   <dd> The string to be written in the XML file
</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATBatchParameters.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATBatchUtils</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
