<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>XMLParser Interface CATISAXParser</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../XMLParser.htm" href="../XMLParser.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "XMLParser";	}
		function getCurrentObjectName() { 
 	return "CATISAXParser"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>XMLParser Interface CATISAXParser</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISAXParser_15058','CATISAXParser','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISAXParser</b>
</p>
<p>
<b><i> Interface for SAX (Simple API for XML) parsers.</i></b><br>


 All SAX parsers must implement this basic interface: it allows
 applications to register handlers for different types of events
 and to initiate a parse from a URI, or a character stream.

 All SAX parsers must also implement a zero-argument constructor
 (though other constructors are also allowed).

 SAX parsers are reusable but not re-entrant: the application
 may reuse a parser object (possibly with a different input source)
 once the first parse has completed successfully, but it may not
 invoke the <script type="text/javascript"> activateLinkAnchor('','Parse','Parse') </script> methods recursively within a parse.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISAXEntityResolver','','CATISAXEntityResolver') </script>, <script type="text/javascript"> activateLinkAnchor('CATISAXDTDHandler','','CATISAXDTDHandler') </script>, <script type="text/javascript"> activateLinkAnchor('CATISAXDocumentHandler','','CATISAXDocumentHandler') </script>, <script type="text/javascript"> activateLinkAnchor('CATISAXErrorHandler','','CATISAXErrorHandler') </script>, <script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script>, <script type="text/javascript"> activateLinkAnchor('CATISAXInputSource','','CATISAXInputSource') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Parse(CATUnicodeString&amp;)"><b>Parse</b></a>(CATUnicodeString&amp;)
<dd>  Parses an XML document from a system identifier (URI).
 <dt> o 
    <a href="#Parse(CATISAXInputSource_var&amp;)"><b>Parse</b></a>(CATISAXInputSource_var&amp;)
<dd>  Parses an XML document.
 <dt> o 
    <a href="#SetDTDHandler(CATISAXDTDHandler_var&amp;)"><b>SetDTDHandler</b></a>(CATISAXDTDHandler_var&amp;)
<dd>  Allows an application to register a DTD event handler.
 <dt> o 
    <a href="#SetDocumentHandler(CATISAXDocumentHandler_var&amp;)"><b>SetDocumentHandler</b></a>(CATISAXDocumentHandler_var&amp;)
<dd>  Allows an application to register a document event handler.
 <dt> o 
    <a href="#SetEntityResolver(CATISAXEntityResolver_var&amp;)"><b>SetEntityResolver</b></a>(CATISAXEntityResolver_var&amp;)
<dd>  Allows an application to register a custom entity resolver.
 <dt> o 
    <a href="#SetErrorHandler(CATISAXErrorHandler_var&amp;)"><b>SetErrorHandler</b></a>(CATISAXErrorHandler_var&amp;)
<dd>  Allows an application to register an error event handler.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Parse"></a><a name="Parse(CATUnicodeString&amp;)"></a> <dt> o <b>Parse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Parse</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSystemId</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Parses an XML document from a system identifier (URI).

 This method is a shortcut for the common case of reading a
 document from a system identifier. If the system identifier is a URL, it must be fully resolved
 by the application before it is passed to the parser.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSystemId</tt>
   <dd> The system identifier (URI).

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<script type="text/javascript"> activateLinkAnchor('CATSAXException','','CATSAXException') </script> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">If an error (such as a not well formed XML document) occurs during parse</td>
     </tr>
     <tr>
        <td class="errtd">
<script type="text/javascript"> activateLinkAnchor('CATSAXException','','CATSAXException') </script> </td>        <td class="errtd">XMLParserERR_2001</td>
        <td class="errtd">If an I/O error occurs during parse</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('','Parse','Parse') </script>
</dl>
</dl>
</dl>
<a name="Parse"></a><a name="Parse(CATISAXInputSource_var&amp;)"></a> <dt> o <b>Parse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Parse</b>(<td> const <script type="text/javascript"> activateLink('CATISAXInputSource_var','CATISAXInputSource_var&amp;')</script> <td><tt>iInputSource</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Parses an XML document.

 The application can use this method to instruct the SAX parser
 to begin parsing an XML document from any valid input
 source (a character stream, a byte stream, or a URI).

 Applications may not invoke this method while a parse is in
 progress (they should create a new 
<script type="text/javascript"> activateLinkAnchor('CATISAXParser','','CATISAXParser') </script> instead for each additional XML document).  Once a parse is complete, an
 application may reuse the same Parser object, possibly with a
 different input source.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInputSource</tt>
   <dd> The input source for the top-level of the               XML document.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<script type="text/javascript"> activateLinkAnchor('CATSAXException','','CATSAXException') </script> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">If an error (such as a not well formed XML document) occurs during parse</td>
     </tr>
     <tr>
        <td class="errtd">
<script type="text/javascript"> activateLinkAnchor('CATSAXException','','CATSAXException') </script> </td>        <td class="errtd">XMLParserERR_2001</td>
        <td class="errtd">If an I/O error occurs during parse</td>
     </tr>
   </table>
 </dd>

 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISAXInputSource','','CATISAXInputSource') </script>, <script type="text/javascript"> activateLinkAnchor('','SetEntityResolver','SetEntityResolver') </script>, <script type="text/javascript"> activateLinkAnchor('','SetDTDHandler','SetDTDHandler') </script>, <script type="text/javascript"> activateLinkAnchor('','SetDocumentHandler','SetDocumentHandler') </script>, <script type="text/javascript"> activateLinkAnchor('','SetErrorHandler','SetErrorHandler') </script>
</dl>
</dl>
</dl>
<a name="SetDTDHandler"></a><a name="SetDTDHandler(CATISAXDTDHandler_var&amp;)"></a> <dt> o <b>SetDTDHandler</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDTDHandler</b>(<td> const <script type="text/javascript"> activateLink('CATISAXDTDHandler_var','CATISAXDTDHandler_var&amp;')</script> <td><tt>iDTDHandler</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Allows an application to register a DTD event handler.

 If the application does not register a DTD handler, all DTD
 events reported by the SAX parser will be silently ignored (this
 is the default behaviour implemented by 
<script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script> ).
 Applications may register a new or different handler in the middle
 of a parse, and the SAX parser must begin using the new handler
 immediately.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDTDHandler</tt>
   <dd> The DTD handler.

 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISAXDTDHandler','','CATISAXDTDHandler') </script>, <script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script>
</dl>
</dl>
<a name="SetDocumentHandler"></a><a name="SetDocumentHandler(CATISAXDocumentHandler_var&amp;)"></a> <dt> o <b>SetDocumentHandler</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDocumentHandler</b>(<td> const <script type="text/javascript"> activateLink('CATISAXDocumentHandler_var','CATISAXDocumentHandler_var&amp;')</script> <td><tt>iDocumentHandler</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Allows an application to register a document event handler.

 If the application does not register a document handler, all
 document events reported by the SAX parser will be silently
 ignored (this is the default behaviour implemented by
 
<script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script> ).
 Applications may register a new or different handler in the
 middle of a parse, and the SAX parser must begin using the new
 handler immediately.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDocumentHandler</tt>
   <dd> The document handler.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISAXDocumentHandler','','CATISAXDocumentHandler') </script>, <script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script>
</dl>
</dl>
<a name="SetEntityResolver"></a><a name="SetEntityResolver(CATISAXEntityResolver_var&amp;)"></a> <dt> o <b>SetEntityResolver</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetEntityResolver</b>(<td> const <script type="text/javascript"> activateLink('CATISAXEntityResolver_var','CATISAXEntityResolver_var&amp;')</script> <td><tt>iEntityResolver</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Allows an application to register a custom entity resolver.

 If the application does not register an entity resolver, the
 SAX parser will resolve system identifiers and open connections
 to entities itself (this is the default behaviour implemented in
 
<script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script> ).
 Applications may register a new or different entity resolver
 in the middle of a parse, and the SAX parser must begin using
 the new resolver immediately.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEntityResolver</tt>
   <dd> The object for resolving entities.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISAXEntityResolver','','CATISAXEntityResolver') </script>, <script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script>
</dl>
</dl>
<a name="SetErrorHandler"></a><a name="SetErrorHandler(CATISAXErrorHandler_var&amp;)"></a> <dt> o <b>SetErrorHandler</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetErrorHandler</b>(<td> const <script type="text/javascript"> activateLink('CATISAXErrorHandler_var','CATISAXErrorHandler_var&amp;')</script> <td><tt>iErrorHandler</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Allows an application to register an error event handler.

 If the application does not register an error event handler,
 all error events reported by the SAX parser will be silently
 ignored, except for 
<script type="text/javascript"> activateLinkAnchor('CATISAXErrorHandler','FatalError','CATISAXErrorHandler.FatalError') </script>, which will raise a 
<script type="text/javascript"> activateLinkAnchor('CATSAXException','','CATSAXException') </script> error (this is the default behaviour implemented by 
<script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script> ).
 Applications may register a new or different handler in the
 middle of a parse, and the SAX parser must begin using the new
 handler immediately.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> handler</tt>
   <dd> The error handler. </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISAXErrorHandler','','CATISAXErrorHandler') </script>, <script type="text/javascript"> activateLinkAnchor('CATSAXException','','CATSAXException') </script>, <script type="text/javascript"> activateLinkAnchor('CATSAXHandlerBase','','CATSAXHandlerBase') </script>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISAXParser.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATXMLParserItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

