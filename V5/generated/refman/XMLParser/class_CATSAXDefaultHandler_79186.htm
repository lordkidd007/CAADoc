<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>XMLParser Class CATSAXDefaultHandler</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../XMLParser.htm">This Framework</a>  <a href="class_CATDOMNodeFilterType_79386.htm">Previous</a>  <a href="class_CATSAXDefaultXMLFilter_93514.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>XMLParser Class CATSAXDefaultHandler</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATSAXDefaultHandler
 </pre>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATSAXDefaultHandler</b>
</p>
<p>
<b><i> Default base class for SAX2 event handlers.</i></b><br>


<p>This class is available as a convenience base class for SAX2
 applications: it provides default implementations for all of the
 callbacks in the four core SAX2 handler classes:</p>

 <ul>
  <li><a href="../XMLParser/interface_CATISAXEntityResolver_90200.htm">CATISAXEntityResolver</a> </li>  <li>
<a href="../XMLParser/interface_CATISAXDTDHandler_52803.htm">CATISAXDTDHandler</a> </li>  <li>
<a href="../XMLParser/interface_CATISAXContentHandler_87332.htm">CATISAXContentHandler</a> </li>  <li>
<a href="../XMLParser/interface_CATISAXErrorHandler_70897.htm">CATISAXErrorHandler</a> </li> </ul>

 <p>Application writers can extend this class when they need to
 implement only part of an interface; parser writers can
 instantiate this class to provide default handlers when the
 application has not supplied its own.</p>

 <p>This class replaces the SAX1
 
<a href="../XMLParser/class_CATSAXHandlerBase_55505.htm">CATSAXHandlerBase</a> class.</p> <p>

 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/interface_CATISAXEntityResolver_90200.htm">CATISAXEntityResolver</a>, <a href="../XMLParser/interface_CATISAXDTDHandler_52803.htm">CATISAXDTDHandler</a>, <a href="../XMLParser/interface_CATISAXContentHandler_87332.htm">CATISAXContentHandler</a>, <a href="../XMLParser/interface_CATISAXErrorHandler_70897.htm">CATISAXErrorHandler</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATSAXDefaultHandler()"><b>CATSAXDefaultHandler</b></a>()
<dd>  Constructor
 <dt> o 
    <a href="#~CATSAXDefaultHandler()"><b>~CATSAXDefaultHandler</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Characters(CATUnicodeString&amp;)"><b>Characters</b></a>(CATUnicodeString&amp;)
<dd>  Receives notification of character data.
 <dt> o 
    <a href="#EndDocument()"><b>EndDocument</b></a>()
<dd>  Receives notification of the end of a document.
 <dt> o 
    <a href="#EndElement(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>EndElement</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Receives notification of the end of an element.
 <dt> o 
    <a href="#EndPrefixMapping(CATUnicodeString&amp;)"><b>EndPrefixMapping</b></a>(CATUnicodeString&amp;)
<dd>  Receives notification of the end of the scope of a prefix-URI Namespace mapping.
 <dt> o 
    <a href="#Error(CATSAXParseException*)"><b>Error</b></a>(CATSAXParseException*)
<dd>  Receives notification of a recoverable error.
 <dt> o 
    <a href="#FatalError(CATSAXParseException*)"><b>FatalError</b></a>(CATSAXParseException*)
<dd>  Receives notification of a non-recoverable error.
 <dt> o 
    <a href="#IgnorableWhiteSpace(CATUnicodeString&amp;)"><b>IgnorableWhiteSpace</b></a>(CATUnicodeString&amp;)
<dd>  Receives notification of ignorable whitespace in element content.
 <dt> o 
    <a href="#NotationDecl(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>NotationDecl</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Receives notification of a notation declaration event.
 <dt> o 
    <a href="#ProcessingInstruction(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>ProcessingInstruction</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Receives notification of a processing instruction.
 <dt> o 
    <a href="#ResolveEntity(CATUnicodeString&amp;,CATUnicodeString&amp;,CATISAXInputSource_var&amp;)"><b>ResolveEntity</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATISAXInputSource_var&amp;)
<dd>  Allows the application to resolve external entities.
 <dt> o 
    <a href="#SetDocumentLocator(CATISAXLocator_var&amp;)"><b>SetDocumentLocator</b></a>(CATISAXLocator_var&amp;)
<dd>  Receives an object for locating the origin of SAX content events.
 <dt> o 
    <a href="#SkippedEntity(CATUnicodeString&amp;)"><b>SkippedEntity</b></a>(CATUnicodeString&amp;)
<dd>  Receives notification of a skipped entity.
 <dt> o 
    <a href="#StartDocument()"><b>StartDocument</b></a>()
<dd>  Receives notification of the beginning of a document.
 <dt> o 
    <a href="#StartElement(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATISAXAttributes_var&amp;)"><b>StartElement</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATISAXAttributes_var&amp;)
<dd>  Receives notification of the beginning of an element.
 <dt> o 
    <a href="#StartPrefixMapping(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>StartPrefixMapping</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Receives notification of the beginning of the scope of a prefix-URI Namespace mapping.
 <dt> o 
    <a href="#UnparsedEntityDecl(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>UnparsedEntityDecl</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Receives notification of an unparsed entity declaration event.
 <dt> o 
    <a href="#Warning(CATSAXParseException*)"><b>Warning</b></a>(CATSAXParseException*)
<dd>  Receives notification of a warning.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATSAXDefaultHandler"></a><a name="CATSAXDefaultHandler()"></a> <dt> o <b>CATSAXDefaultHandler</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATSAXDefaultHandler</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructor
</dl>
<a name="~CATSAXDefaultHandler"></a><a name="~CATSAXDefaultHandler()"></a> <dt> o <b>~CATSAXDefaultHandler</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATSAXDefaultHandler</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="Characters"></a><a name="Characters(CATUnicodeString&amp;)"></a> <dt> o <b>Characters</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Characters</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iCharacters</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of character data.

 <p>The 
<a href="../XMLParser/interface_CATISAXXMLReader_46642.htm">CATISAXXMLReader</a> will call this method to report each chunk of character data.  SAX parsers may return all contiguous character
 data in a single chunk, or they may split it into several
 chunks; however, all of the characters in any single event
 must come from the same external entity, so that the 
<a href="../XMLParser/interface_CATISAXLocator_38000.htm">CATISAXLocator</a> provides useful information.</p>

 <p>Note that some parsers will report whitespace using the
 
<a href="#IgnorableWhiteSpace">IgnorableWhiteSpace</a> method rather than this one (validating parsers must do so).</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacters</tt>
   <dd>  The characters from the XML document.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <a href="#IgnorableWhiteSpace">IgnorableWhiteSpace</a>, <a href="../XMLParser/interface_CATISAXLocator_38000.htm">CATISAXLocator</a>
</dl>
</dl>
</dl>
<a name="EndDocument"></a><a name="EndDocument()"></a> <dt> o <b>EndDocument</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>EndDocument</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of the end of a document.

 <p>The SAX parser will invoke this method only once, and it will
 be the last method invoked during the parse.  The parser shall
 not invoke this method until it has either abandoned parsing
 (because of an unrecoverable error) or reached the end of
 input.</p>

 <dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 </dl>
 
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#StartDocument">StartDocument</a>
</dl>
</dl>
<a name="EndElement"></a><a name="EndElement(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>EndElement</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>EndElement</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iURI</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iLocalName</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iQualifiedName</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of the end of an element.

 <p>The SAX parser will invoke this method at the end of every
 element in the XML document; there will be a corresponding
 
<a href="#StartElement">StartElement</a> event for every 
<a href="#EndElement">EndElement</a> event (even when the element is empty).</p>
 
 <p>For information on the names, see 
<a href="#StartElement">StartElement</a>.</p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iURI</tt>
   <dd>  The Namespace URI, or the empty string if the element has no Namespace URI or if Namespace processing is not being performed.
 </dd>
    <dt><tt> iLocalName</tt>
   <dd>  The local name (without prefix), or the empty string if Namespace processing is not being performed.
 </dd>
    <dt><tt> iQualifiedName</tt>
   <dd>  The qualified name (with prefix), or the empty string if qualified names are not available.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 
 
  <dt> <b>See also:</b> 
  <dd> <a href="#StartElement">StartElement</a>
</dl>
</dl>
</dl>
<a name="EndPrefixMapping"></a><a name="EndPrefixMapping(CATUnicodeString&amp;)"></a> <dt> o <b>EndPrefixMapping</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>EndPrefixMapping</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iPrefix</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of the end of the scope of a prefix-URI Namespace mapping.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> The prefix that was being mapped.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 
 
  <dt> <b>See also:</b> 
  <dd> <a href="#StartPrefixMapping">StartPrefixMapping</a>
</dl>
</dl>
</dl>
<a name="Error"></a><a name="Error(CATSAXParseException*)"></a> <dt> o <b>Error</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Error</b>(<td><a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException*</a> <td><tt>iException</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of a recoverable error.

 <p>This corresponds to the definition of "error" in section 1.2
 of the W3C XML 1.0 Recommendation.  For example, a validating
 parser would use this callback to report the violation of a
 validity constraint.  The default behaviour is to take no
 action.</p>

 <p>The SAX parser must continue to provide normal parsing events
 after invoking this method: it should still be possible for the
 application to process the document through to the end.  If the
 application cannot do so, then the parser should report a fatal
 error even if the XML 1.0 recommendation does not require it to
 do so.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iException</tt>
   <dd> The error information encapsulated in a SAX parse exception.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a>
</dl>
</dl>
</dl>
<a name="FatalError"></a><a name="FatalError(CATSAXParseException*)"></a> <dt> o <b>FatalError</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>FatalError</b>(<td><a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException*</a> <td><tt>iException</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of a non-recoverable error.

 <p>This corresponds to the definition of "fatal error" in
 section 1.2 of the W3C XML 1.0 Recommendation.  For example, a
 parser would use this callback to report the violation of a
 well-formedness constraint.</p>

 <p>The application must assume that the document is unusable
 after the parser has invoked this method, and should continue
 (if at all) only for the sake of collecting addition error
 messages: in fact, SAX parsers are free to stop reporting any
 other events once this method has been invoked.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iException</tt>
   <dd>  The error information encapsulated in a SAX parse exception.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a>
</dl>
</dl>
</dl>
<a name="IgnorableWhiteSpace"></a><a name="IgnorableWhiteSpace(CATUnicodeString&amp;)"></a> <dt> o <b>IgnorableWhiteSpace</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IgnorableWhiteSpace</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iCharacters</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of ignorable whitespace in element content.

 <p>Validating 
<a href="../XMLParser/interface_CATISAXXMLReader_46642.htm">CATISAXXMLReader</a> s must use this method to report each chunk of ignorable whitespace (see the W3C XML 1.0 recommendation,
 section 2.10): non-validating parsers may also use this method
 if they are capable of parsing and using content models.</p>

 <p>SAX parsers may return all contiguous whitespace in a single
 chunk, or they may split it into several chunks; however, all of
 the characters in any single event must come from the same
 external entity, so that the 
<a href="../XMLParser/interface_CATISAXLocator_38000.htm">CATISAXLocator</a> provides useful information.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacters</tt>
   <dd>  The characters from the XML document.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 
 
  <dt> <b>See also:</b> 
  <dd> <a href="#Characters">Characters</a>
</dl>
</dl>
</dl>
<a name="NotationDecl"></a><a name="NotationDecl(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>NotationDecl</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>NotationDecl</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iName</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iPublicId</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iSystemId</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of a notation declaration event.

 <p>It is up to the application to record the notation for later
 reference, if necessary.</p>

 <p>At least one of publicId and systemId must be non-empty.</p>

 <p>If a system identifier is present, and it is a URL, the SAX
 parser must resolve it fully before passing it to the
 application.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> The notation name.
 </dd>
    <dt><tt> iPublicId</tt>
   <dd> The notation's public identifier (can be an empty </dd>
<a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> if no public identifier was given).
 
    <dt><tt> iSystemId</tt>
   <dd> The notation's system identifier (can be an empty </dd>
<a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> if no system identifier was given).

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>

 
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/interface_CATISAXAttributeList_80410.htm">CATISAXAttributeList</a>, <a href="#UnparsedEntityDecl">UnparsedEntityDecl</a>
</dl>
</dl>
</dl>
<a name="ProcessingInstruction"></a><a name="ProcessingInstruction(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>ProcessingInstruction</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ProcessingInstruction</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iTarget</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iData</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of a processing instruction.

 <p>The 
<a href="../XMLParser/interface_CATISAXXMLReader_46642.htm">CATISAXXMLReader</a> will invoke this method once for each processing instruction found: note that processing instructions may occur
 before or after the main document element.</p>

 <p>A SAX parser should never report an XML declaration (XML 1.0,
 section 2.8) or a text declaration (XML 1.0, section 4.3.1)
 using this method.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTarget</tt>
   <dd> The processing instruction target.
 </dd>
    <dt><tt> iData</tt>
   <dd>  The processing instruction data (can be an empty </dd>
<a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> if no processing instruction data was given).

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

</dl>
</dl>
</dl>
<a name="ResolveEntity"></a><a name="ResolveEntity(CATUnicodeString&amp;,CATUnicodeString&amp;,CATISAXInputSource_var&amp;)"></a> <dt> o <b>ResolveEntity</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ResolveEntity</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iPublicId</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iSystemId</tt>,<tr><td></td><td>CATISAXInputSource_var&amp; <td><tt>oInputSource</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Allows the application to resolve external entities.

 <p>The 
<a href="../XMLParser/interface_CATISAXParser_32446.htm">CATISAXParser</a> will call this method before opening any external entity except the top-level document entity (including the
 external DTD subset, external entities referenced within the
 DTD, and external entities referenced within the document
 element): the application may request that the parser resolve
 the entity itself, that it use an alternative URI, or that it
 use an entirely different input source.</p>

 <p>Application writers can use this method to redirect external
 system identifiers to secure and/or local URIs, to look up
 public identifiers in a catalogue, or to read an entity from a
 database or other input source (including, for example, a dialog
 box).</p>

 <p>If the system identifier is a URL, the SAX parser must
 resolve it fully before reporting it to the application.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPublicId</tt>
   <dd>  The public identifier of the external entity being referenced 
 (can be an empty </dd>
<a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> if no public identifier was given). 
    <dt><tt> iSystemId</tt>
   <dd>  The system identifier of the external entity being referenced.
 </dd>
    <dt><tt> oInputSource</tt>
   <dd> An InputSource object describing the new input source,
         or <tt>NULL</tt> to request that the parser open a regular
         URI connection to the system identifier.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXIOException_56699.htm">CATSAXIOException</a> </td>        <td class="errtd">XMLParserERR_2001</td>
        <td class="errtd">If an I/O error occurs, possibly the result of creating a new 
<a href="../XMLParser/interface_CATISAXInputSource_64700.htm">CATISAXInputSource</a> the method can raise this error.</td>
     </tr>
   </table>
 </dd>

 
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/interface_CATISAXInputSource_64700.htm">CATISAXInputSource</a>
</dl>
</dl>
</dl>
<a name="SetDocumentLocator"></a><a name="SetDocumentLocator(CATISAXLocator_var&amp;)"></a> <dt> o <b>SetDocumentLocator</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDocumentLocator</b>(<td> const CATISAXLocator_var&amp; <td><tt>iLocator</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives an object for locating the origin of SAX content events.

 <p>SAX parsers are strongly encouraged (though not absolutely
 required) to supply a locator: if it does so, it must supply
 the locator to the application by invoking this method before
 invoking any of the other methods in the 
<a href="../XMLParser/interface_CATISAXContentHandler_87332.htm">CATISAXContentHandler</a> interface.</p>

 <p>The locator allows the application to determine the end
 position of any document-related event, even if the parser is
 not reporting an error.  Typically, the application will
 use this information for reporting its own errors (such as
 character content that does not match an application's
 business rules).  The information returned by the locator
 is probably not sufficient for use with a search engine.</p>

 <p>Note that the locator will return correct information only
 during the invocation of the events in this interface.  The
 application should not attempt to use it at any other time.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocator</tt>
   <dd> An object that can return the location of any SAX document event.

 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/interface_CATISAXLocator_38000.htm">CATISAXLocator</a>
</dl>
</dl>
<a name="SkippedEntity"></a><a name="SkippedEntity(CATUnicodeString&amp;)"></a> <dt> o <b>SkippedEntity</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SkippedEntity</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iName</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of a skipped entity.

 <p>The 
<a href="../XMLParser/interface_CATISAXXMLReader_46642.htm">CATISAXXMLReader</a> will invoke this method once for each entity skipped.  Non-validating processors may skip entities if they
 have not seen the declarations (because, for example, the
 entity was declared in an external DTD subset).  All processors
 may skip external entities, depending on the values of the
 <tt>http://xml.org/sax/features/external-general-entities</tt>
 and the
 <tt>http://xml.org/sax/features/external-parameter-entities</tt>
 properties.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> The name of the skipped entity. If it is a parameter entity, the name will begin with <tt>'%'</tt>, and if it is the external DTD subset, it will be the string <tt>"[dtd]"</tt>.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
</dl>
</dl>
</dl>
<a name="StartDocument"></a><a name="StartDocument()"></a> <dt> o <b>StartDocument</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>StartDocument</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of the beginning of a document.

 <p>The SAX parser will invoke this method only once, before any
 other methods in this interface or in 
<a href="../XMLParser/interface_CATISAXDTDHandler_52803.htm">CATISAXDTDHandler</a> (except for 
<a href="#SetDocumentLocator">SetDocumentLocator</a> ).</p>
 <dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 </dl>
 
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#EndDocument">EndDocument</a>
</dl>
</dl>
<a name="StartElement"></a><a name="StartElement(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATISAXAttributes_var&amp;)"></a> <dt> o <b>StartElement</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>StartElement</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iURI</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iLocalName</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iQualifiedName</tt>,<tr><td></td><td> const CATISAXAttributes_var&amp; <td><tt>iAttributes</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of the beginning of an element.

 <p>The Parser will invoke this method at the beginning of every
 element in the XML document; there will be a corresponding 
<a href="#EndElement">EndElement</a>  event for every 
<a href="#StartElement">StartElement</a> event (even when the element is empty).</p>

 <p>All of the element content will be reported, in order,
 before the corresponding 
<a href="#EndElement">EndElement</a> event 
<a href="../DNBSystem/struct__0.htm#">.</a>.</p>
 <p>This event allows up to three name components for each
 element:</p>

 <ol>
 <li>the Namespace URI;</li>
 <li>the local name; and</li>
 <li>the qualified (prefixed) name.</li>
 </ol>

 <p>Any or all of these may be provided, depending on the
 values of the <tt>http://xml.org/sax/features/namespaces</tt>
 and the <tt>http://xml.org/sax/features/namespace-prefixes</tt>
 properties:</p>

 <ul>
 <li>the Namespace URI and local name are required when 
 the namespaces property is <tt>TRUE</tt> (the default), and are
 optional when the namespaces property is <tt>FALSE</tt> (if one is
 specified, both must be);</li>
 <li>the qualified name is required when the namespace-prefixes property
 is <tt>TRUE</tt>, and is optional when the namespace-prefixes property
 is <tt>FALSE</tt> (the default).</li>
 </ul>

 <p>Note that the attribute list provided will contain only
 attributes with explicit values (specified or defaulted):
 <tt>#IMPLIED</tt> attributes will be omitted.  The attribute list
 will contain attributes used for Namespace declarations
 (xmlns* attributes) only if the
 <tt>http://xml.org/sax/features/namespace-prefixes</tt>
 property is <tt>TRUE</tt> (it is <tt>FALSE</tt> by default, and support for a 
 <tt>TRUE</tt> value is optional).</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iURI</tt>
   <dd>  The Namespace URI, or the empty string if the element has no Namespace URI or if Namespace processing is not being performed.
 </dd>
    <dt><tt> iLocalName</tt>
   <dd>  The local name (without prefix), or the empty string if Namespace processing is not being performed.
 </dd>
    <dt><tt> iQualifiedName</tt>
   <dd>  The qualified name (with prefix), or the empty string if qualified names are not available.
 </dd>
    <dt><tt> iAttributes</tt>
   <dd>  The attributes attached to the element. If there are no attributes, it shall be an empty </dd>
<a href="../XMLParser/interface_CATISAXAttributes_58242.htm">CATISAXAttributes</a> object.
 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 
 
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/interface_CATISAXAttributes_58242.htm">CATISAXAttributes</a>, <a href="#EndElement">EndElement</a>
</dl>
</dl>
</dl>
<a name="StartPrefixMapping"></a><a name="StartPrefixMapping(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>StartPrefixMapping</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>StartPrefixMapping</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iPrefix</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iURI</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of the beginning of the scope of a prefix-URI Namespace mapping.

 <p>The information from this event is not necessary for
 normal Namespace processing: the 
<a href="../XMLParser/interface_CATISAXXMLReader_46642.htm">CATISAXXMLReader</a> will  automatically replace prefixes for element and attribute
 names when the <tt>http://xml.org/sax/features/namespaces</tt>
 feature is <tt>TRUE</tt> (the default).</p>

 <p>There are cases, however, when applications need to
 use prefixes in character data or in attribute values,
 where they cannot safely be expanded automatically; the
 
<a href="#StartPrefixMapping">StartPrefixMapping</a> / 
<a href="#EndPrefixMapping">EndPrefixMapping</a> events supply the information to the application to expand prefixes in those contexts
 itself, if necessary.</p>

 <p>Note that 
<a href="#StartPrefixMapping">StartPrefixMapping</a> / 
<a href="#EndPrefixMapping">EndPrefixMapping</a> events are not guaranteed to be properly nested relative to each-other:
 all 
<a href="#StartPrefixMapping">StartPrefixMapping</a> events will occur before the corresponding 
<a href="#StartElement">StartElement</a> event, and all 
<a href="#EndPrefixMapping">EndPrefixMapping</a> events will occur after the corresponding 
<a href="#StartElement">StartElement</a> event,  but their order is not otherwise guaranteed.</p>

 <p>There should never be 
<a href="#StartPrefixMapping">StartPrefixMapping</a> / 
<a href="#EndPrefixMapping">EndPrefixMapping</a> events for the "xml" prefix, since it is predeclared and immutable.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> The Namespace prefix being declared.
 </dd>
    <dt><tt> iURI</tt>
   <dd>  The Namespace URI the prefix is mapped to.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 
 
  <dt> <b>See also:</b> 
  <dd> <a href="#EndPrefixMapping">EndPrefixMapping</a>
</dl>
</dl>
</dl>
<a name="UnparsedEntityDecl"></a><a name="UnparsedEntityDecl(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>UnparsedEntityDecl</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>UnparsedEntityDecl</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iName</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iPublicId</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iSystemId</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iNotationName</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of an unparsed entity declaration event.

 <p>Note that the notation name corresponds to a notation
 reported by the 
<a href="#NotationDecl">NotationDecl</a> event.  It is up to the application to record the entity for later reference, if
 necessary.</p>

 <p>If the system identifier is a URL, the parser must resolve it
 fully before passing it to the application.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>  The unparsed entity's name.
 </dd>
    <dt><tt> iPublicId</tt>
   <dd>  The entity's public identifier (can be an empty </dd>
<a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> if no public identifier was given).
 
    <dt><tt> iSystemId</tt>
   <dd>  The entity's system identifier (it must always have one).
 </dd>
    <dt><tt> iNotationName</tt>
   <dd> name The name of the associated notation.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/interface_CATISAXAttributeList_80410.htm">CATISAXAttributeList</a>, <a href="#NotationDecl">NotationDecl</a>
</dl>
</dl>
</dl>
<a name="Warning"></a><a name="Warning(CATSAXParseException*)"></a> <dt> o <b>Warning</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Warning</b>(<td><a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException*</a> <td><tt>iException</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Receives notification of a warning.

 <p>SAX parsers will use this method to report conditions that
 are not errors or fatal errors as defined by the XML 1.0
 recommendation.  The default behaviour is to take no action.</p>

 <p>The SAX parser must continue to provide normal parsing events
 after invoking this method: it should still be possible for the
 application to process the document through to the end.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iException</tt>
   <dd> The warning information encapsulated in a SAX parse exception.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="../XMLParser/class_CATSAXException_45267.htm">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <a href="../XMLParser/class_CATSAXParseException_81058.htm">CATSAXParseException</a>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATSAXDefaultHandler.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATXMLParserItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
