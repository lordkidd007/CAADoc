<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>XMLParser Interface CATIDOMDocumentFragment</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../XMLParser.htm" href="../XMLParser.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "XMLParser";	}
		function getCurrentObjectName() { 
 	return "CATIDOMDocumentFragment"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>XMLParser Interface CATIDOMDocumentFragment</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDOMDocumentFragment_33231','CATIDOMDocumentFragment','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDOMDocumentFragment</b>
</p>
<p>
<b><i> Interface representing a "lightweight" or "minimal" 
 <code>CATIDOMDocument</code> object.</i></b><br>
 

 It is very common to want to be able to 
 extract a portion of a document's tree or to create a new fragment of a 
 document. Imagine implementing a user command like cut or rearranging a 
 document by moving fragments around. It is desirable to have an object 
 which can hold such fragments and it is quite natural to use a <script type="text/javascript"> activateLinkAnchor('CATIDOMNode','','CATIDOMNode') </script> for  this purpose. While it is true that a 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocument','','CATIDOMDocument') </script> object could  fulfil this role,  a 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocument','','CATIDOMDocument') </script> object can potentially be a  heavyweight  object, depending on the underlying implementation. What is 
 really needed for this is a very lightweight object.  
 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> is such an object. <p>Furthermore, various operations -- such as inserting nodes as children 
 of another 
<script type="text/javascript"> activateLinkAnchor('CATIDOMNode','','CATIDOMNode') </script> -- may take 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script>  objects as arguments;  this results in all the child nodes of the 
 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> being moved to the child list of this node. <p>The children of a 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> node are zero or more  nodes representing the tops of any sub-trees defining the structure of the 
 document. 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> nodes do not need to be  well-formed XML documents (although they do need to follow the rules 
 imposed upon well-formed XML parsed entities, which can have multiple top 
 nodes). For example, a 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> might have only one  child and that child node could be a 
<script type="text/javascript"> activateLinkAnchor('CATIDOMText','','CATIDOMText') </script> node. Such a  structure model  represents neither an HTML document nor a well-formed XML 
 document.  
 <p>When a 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> is inserted into a   
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocument','','CATIDOMDocument') </script> (or indeed any other 
<script type="text/javascript"> activateLinkAnchor('CATIDOMNode','','CATIDOMNode') </script> that may take  children) the children of the 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> and not the  
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> itself are inserted into the  
<script type="text/javascript"> activateLinkAnchor('CATIDOMNode','','CATIDOMNode') </script>. This makes the 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> very  useful when the user wishes to create nodes that are siblings; the 
 
<script type="text/javascript"> activateLinkAnchor('CATIDOMDocumentFragment','','CATIDOMDocumentFragment') </script> acts as the parent of these nodes so that the user can use the standard methods from the 
<script type="text/javascript"> activateLinkAnchor('CATIDOMNode','','CATIDOMNode') </script> interface,  such as 
<script type="text/javascript"> activateLinkAnchor('CATIDOMNode','InsertBefore','CATIDOMNode.InsertBefore') </script> and 
<script type="text/javascript"> activateLinkAnchor('CATIDOMNode','AppendChild','CATIDOMNode.AppendChild') </script>. 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIDOMDocument','','CATIDOMDocument') </script>, <script type="text/javascript"> activateLinkAnchor('CATIDOMNode','','CATIDOMNode') </script>
</dl>
</p>
<hr>
</dl>
<dl>
</dl>
<dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDOMDocumentFragment.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATXMLParserItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

