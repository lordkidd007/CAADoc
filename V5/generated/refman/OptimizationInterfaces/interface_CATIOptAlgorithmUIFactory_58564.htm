<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>OptimizationInterfaces Interface CATIOptAlgorithmUIFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../OptimizationInterfaces.htm" href="../OptimizationInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "OptimizationInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIOptAlgorithmUIFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OptimizationInterfaces Interface CATIOptAlgorithmUIFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIOptAlgorithmUIFactory_58564','CATIOptAlgorithmUIFactory','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../OptimizationInterfaces/class_CATOptAlgorithmUIFactoryAdapter_72833.htm">CATOptAlgorithmUIFactoryAdapter</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIOptAlgorithmUIFactory</b>
</p>
<p>
<b><i> Interface to give a way to edit the settings of an optimization algorithm.</i></b><br>

 Implement this interface to add an algorithm to the optimization dialog.

 <p><b>BOA information</b>: this interface CAN be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateAlgoSettingsFrame(CATDialog*,unsigned long)"><b>CreateAlgoSettingsFrame</b></a>(CATDialog*,unsigned long)
<dd>  Creates a frame and dialogs to edit the algorithm settings.
 <dt> o 
    <a href="#CreateStopAlgoDialog(CATDialog*,unsigned long,CATIOptOptimization_var&amp;)"><b>CreateStopAlgoDialog</b></a>(CATDialog*,unsigned long,CATIOptOptimization_var&amp;)
<dd>  Instantiates an interruption dialog.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateAlgoSettingsFrame"></a><a name="CreateAlgoSettingsFrame(CATDialog*,unsigned long)"></a> <dt> o <b>CreateAlgoSettingsFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDlgFrame','CATDlgFrame*')</script>  <b>CreateAlgoSettingsFrame</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iFather</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned long','unsigned long')</script> <td><tt>iStyle</tt><td><tt>= 786433</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a frame and dialogs to edit the algorithm settings.
 <br><b>Role</b>: This method builds a frame and fills it with dialog objects allowing
 interactive changes of the algorithm settings (radio buttons, check buttons, text editors, etc...).
 In your implementation, if you want to put callbacks
 on these different objects (in order to update the corresponding 
 algorithm settings as soon as the user changes something), you will
 have to create a class that derives from CATDlgFrame 
 (called "CATAlgoSettingsFrame" for example) in which you will insert
 your dialog objects and put the callbacks on them. Then
 this class will just instanciate your "CATAlgoSettingsFrame" object and return it.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFather</tt>
   <dd> The father dialog object. This argument is given by the optimization dialog and
 you will have to pass it to your "CATAlgoSettingsFrame" to respect the
 Optimizer dialog configuration.
 </dd>
    <dt><tt> iStyle</tt>
   <dd> The style of the created dialog object. This argument is given by the optimization dialog and
 you will have to pass it to your "CATAlgoSettingsFrame" to respect the
 Optimizer dialog configuration.
 Default value is CATDlgFraNoTitle|CATDlgFraNoFrame|CATDlgGridLayout
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the instanciated frame that will be destroyed by the Optimizer dialog as
 soon as it will become useless.
</dl>
</dl>
<a name="CreateStopAlgoDialog"></a><a name="CreateStopAlgoDialog(CATDialog*,unsigned long,CATIOptOptimization_var&amp;)"></a> <dt> o <b>CreateStopAlgoDialog</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDlgDialog','CATDlgDialog*')</script>  <b>CreateStopAlgoDialog</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iFather</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned long','unsigned long')</script> <td><tt>iStyle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIOptOptimization_var','CATIOptOptimization_var&amp;')</script> <td><tt>iOptim</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Instantiates an interruption dialog.
 <br><b>Role</b>: This method instantiates a dialog that will allow to stop the algorithm during its run
 as soon as :
 <ul>
 <li> - The user click on a STOP button (do not forget to provide this button).</li>
 <li> - One of the algorithm termination criteria is reached (if such criteria exist).</li>
 </ul>
 That is why you will have to create a class (called "CATStopAlgoDialog" for example) in which
 you will insert all the dialog objects ( among others : the STOP button) and put the
 needed callback on them (to update them while receiving the EndIterationNotification
 sent by the algorithm for example). Then, this class will just instanciate your 
 "CATStopAlgoDialog" object and return it.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFather</tt>
   <dd> The father dialog object. This argument is given by the optimization dialog and
 you will have to pass it to your "CATStopAlgoDialog" to respect the
 Optimizer dialogs configuration.
 </dd>
    <dt><tt> iStyle</tt>
   <dd> The style of the created dialog object. This argument is given by the optimization dialog and
 you will have to pass it to your "CATStopAlgoDialog" to respect the
 Optimizer dialogs configuration.
 </dd>
    <dt><tt> iOptim</tt>
   <dd> the optimization you are running.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the instanciated dialog object that will be destroyed by the Optimizer dialog as
 soon as it will become useless.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIOptAlgorithmUIFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>OptimizationItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

