<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AdvancedMathematics Class CATMathIntervalND</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../AdvancedMathematics.htm">This Framework</a>  <a href="class_CATMathInterval_46487.htm">Previous</a>  <a href="class_CATMathPolynomX_46370.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>AdvancedMathematics Class CATMathIntervalND</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---CATMathIntervalND
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathIntervalND</b>
</p>
<p>
<b><i> Class representing a closed bounded interval of <tt>R^N</tt>.</i></b><br>
 
 <br>A CATMathIntervalND is the set of the points whose each coordinate
 <tt>x_i ,i=0,..,N-1</tt> is lying between two 
 real bounds  <tt>Low_i</tt> and <tt>High_i</tt>: <tt>Low_i <= x_i <= High_i</tt>.
 If there exists one coordinate for which <tt>Low_i > High_i</tt>, 
 the interval is empty.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathIntervalND()"><b>CATMathIntervalND</b></a>()
<dd>  Constructs a CATMathIntervalND of dimension N=0, only containing <tt>0</tt>.
 <dt> o 
    <a href="#CATMathIntervalND(CATLONG32)"><b>CATMathIntervalND</b></a>(CATLONG32)
<dd>  Allocates a CATMathInterval of a given dimension.
 <dt> o 
    <a href="#CATMathIntervalND(CATLONG32,double*)"><b>CATMathIntervalND</b></a>(CATLONG32,double*)
<dd>  Constructs a CATMathIntervalND of a given dimension 
 from the array of the boundaries of each coordinates.
 <dt> o 
    <a href="#CATMathIntervalND(CATMathIntervalND&amp;)"><b>CATMathIntervalND</b></a>(CATMathIntervalND&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATMathIntervalND()"><b>~CATMathIntervalND</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Center(double*)"><b>Center</b></a>(double*)
<dd>  Returns the center point of <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#ContainsPoint(double*)"><b>ContainsPoint</b></a>(double*)
<dd>  Tests whether <tt>this</tt> CATMathIntervalND contains a given point (of 
 dimension N).
 <dt> o 
    <a href="#ContainsPoint(double*,double&amp;)"><b>ContainsPoint</b></a>(double*,double&amp;)
<dd>  Tests whether a point is inside <tt>this</tt> CATMathIntervalND at a given
 tolerance.
 <dt> o 
    <a href="#GetCoords()"><b>GetCoords</b></a>()
<dd>  Returns the limitations of <tt>this</tt> CATMathIntervalND in an array.
 <dt> o 
    <a href="#GetDimension()"><b>GetDimension</b></a>()
<dd>  Returns the dimension of <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#GetInterval(CATLONG32)"><b>GetInterval</b></a>(CATLONG32)
<dd>  Returns the CATMathInterval associated with a
 coordinate of <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#GetMax(CATLONG32)"><b>GetMax</b></a>(CATLONG32)
<dd>  Returns the high limitation of a coordinate of <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#GetMin(CATLONG32)"><b>GetMin</b></a>(CATLONG32)
<dd>  Returns the low limitation of a coordinate of <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#Intersection(double*,double*,double&amp;,CATLONG32&amp;)"><b>Intersection</b></a>(double*,double*,double&amp;,CATLONG32&amp;)
<dd>  Intersects <tt>this</tt> CATMathIntervalND with a segment.
 <dt> o 
    <a href="#IsEmpty()"><b>IsEmpty</b></a>()
<dd>  Tests whether <tt>this</tt> CATMathIntervalND is empty.
 <dt> o 
    <a href="#MinSquareDistance(double*,double*)"><b>MinSquareDistance</b></a>(double*,double*)
<dd>  Projects a given point onto <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#SetCoords(double*)"><b>SetCoords</b></a>(double*)
<dd>  Sets the limitations of <tt>this</tt> CATMathIntervalND with an array.
 <dt> o 
    <a href="#SetInterval(CATLONG32,CATMathInterval&amp;)"><b>SetInterval</b></a>(CATLONG32,CATMathInterval&amp;)
<dd>  Modifies the limitations associated with a
 coordinate of <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#SetMax(CATLONG32,double)"><b>SetMax</b></a>(CATLONG32,double)
<dd>  Modifies the high limitation of a
 coordinate of <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#SetMin(CATLONG32,double)"><b>SetMin</b></a>(CATLONG32,double)
<dd>  Modifies the low limitation of a
 coordinate of <tt>this</tt> CATMathIntervalND.
 <dt> o 
    <a href="#Width()"><b>Width</b></a>()
<dd>  Returns the sum of the interval width of each coordinate of <tt>this</tt>
 CATMathIntervalND.
 <dt> o 
    <a href="#operator =(CATMathIntervalND&amp;)"><b>operator =</b></a>(CATMathIntervalND&amp;)
<dd>  Assignement operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathIntervalND"></a><a name="CATMathIntervalND()"></a> <dt> o <b>CATMathIntervalND</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathIntervalND</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathIntervalND of dimension N=0, only containing <tt>0</tt>.
</dl>
<a name="CATMathIntervalND"></a><a name="CATMathIntervalND(CATLONG32)"></a> <dt> o <b>CATMathIntervalND</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathIntervalND</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iN</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Allocates a CATMathInterval of a given dimension.
 <br>Note that this does not initialize the <tt>Low_i</tt> and <tt>High_i</tt>
 boundaries of each coordinates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iN</tt>
   <dd> The dimension of the interval.</dd>
</dl>
</dl>
</dl>
<a name="CATMathIntervalND"></a><a name="CATMathIntervalND(CATLONG32,double*)"></a> <dt> o <b>CATMathIntervalND</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathIntervalND</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iN</tt>,<tr><td></td><td> const double* <td><tt>iMinMax</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathIntervalND of a given dimension 
 from the array of the boundaries of each coordinates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iN</tt>
   <dd> The dimension of the interval.
 </dd>
    <dt><tt> iMinMax</tt>
   <dd> The array <tt>[2,iN]</tt> of the boundaries.
<br> The domain is then 
 <tt>[iMinMax[0], iMinMax[1]] X ... X [iMinMax[2iN-2], iMinMax[2iN-1]]</tt></dd>
</dl>
</dl>
</dl>
<a name="CATMathIntervalND"></a><a name="CATMathIntervalND(CATMathIntervalND&amp;)"></a> <dt> o <b>CATMathIntervalND</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathIntervalND</b>(<td> const <a href="../AdvancedMathematics/class_CATMathIntervalND_56671.htm">CATMathIntervalND&amp;</a> <td><tt>iDomainToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="~CATMathIntervalND"></a><a name="~CATMathIntervalND()"></a> <dt> o <b>~CATMathIntervalND</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATMathIntervalND</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="Center"></a><a name="Center(double*)"></a> <dt> o <b>Center</b>

<dt>  <table><tr><td>  public void  <b>Center</b>(<td>double* <td><tt>ioCenter</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the center point of <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCenter</tt>
   <dd> The array (already allocated) of the coordinates of the interval center.</dd>
</dl>
</dl>
</dl>
<a name="ContainsPoint"></a><a name="ContainsPoint(double*)"></a> <dt> o <b>ContainsPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>ContainsPoint</b>(<td> const double* <td><tt>iPoint</tt>) const  </table></dt>
<dl>
  <dd>
 Tests whether <tt>this</tt> CATMathIntervalND contains a given point (of 
 dimension N).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array [N] of the coordinates of the point.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>:
 <dl><dt><tt>TRUE</tt><dd> if the point is inside the CATMathIntervalND.
     <dt><tt>FALSE</tt><dd> otherwise.</dl>
</dl>
</dl>
<a name="ContainsPoint"></a><a name="ContainsPoint(double*,double&amp;)"></a> <dt> o <b>ContainsPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>ContainsPoint</b>(<td> const double* <td><tt>iPoint</tt>,<tr><td></td><td> const double&amp; <td><tt>iTol</tt>) const  </table></dt>
<dl>
  <dd>
 Tests whether a point is inside <tt>this</tt> CATMathIntervalND at a given
 tolerance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array [N] of the coordinates of the point.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>:
 <dl><dt><tt>TRUE</tt><dd> if the point is inside the CATMathIntervalND defined by <tt>iTol</tt>.
     <dt><tt>FALSE</tt><dd> otherwise.</dl>
</dl>
</dl>
<a name="GetCoords"></a><a name="GetCoords()"></a> <dt> o <b>GetCoords</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">const double *</a>  <b>GetCoords</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the limitations of <tt>this</tt> CATMathIntervalND in an array.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The array <tt>[2,N]</tt> of the limitations.
 The domain is then 
 <tt>[iTab[0], iTab[1]] X ... X [iTab[2N-2], iTab[2N-1]]</tt>.
 <br>As part of the class, the array must not be deleted.
</dl>
</dl>
<a name="GetDimension"></a><a name="GetDimension()"></a> <dt> o <b>GetDimension</b>

<dt>  <table><tr><td>  public <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a>  <b>GetDimension</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the dimension of <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The dimension.
</dl>
</dl>
<a name="GetInterval"></a><a name="GetInterval(CATLONG32)"></a> <dt> o <b>GetInterval</b>

<dt>  <table><tr><td>  public <a href="../AdvancedMathematics/class_CATMathInterval_46487.htm">CATMathInterval</a>  <b>GetInterval</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iCoordIndex</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the CATMathInterval associated with a
 coordinate of <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex</tt>
   <dd> The index (<tt>0 <= iCoordIndex < N</tt>) of the coordinate.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The corresponding interval.
</dl>
</dl>
<a name="GetMax"></a><a name="GetMax(CATLONG32)"></a> <dt> o <b>GetMax</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetMax</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iCoordIndex</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the high limitation of a coordinate of <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex</tt>
   <dd> The index (<tt>0 <= iCoordIndex < N</tt>) of the coordinate.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The high limitation of <tt>iCoordIndex</tt>.
</dl>
</dl>
<a name="GetMin"></a><a name="GetMin(CATLONG32)"></a> <dt> o <b>GetMin</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetMin</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iCoordIndex</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the low limitation of a coordinate of <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex</tt>
   <dd> The index (<tt>0 <= iCoordIndex < N</tt>) of the coordinate.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The low limitation of <tt>iCoordIndex</tt>.
</dl>
</dl>
<a name="Intersection"></a><a name="Intersection(double*,double*,double&amp;,CATLONG32&amp;)"></a> <dt> o <b>Intersection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>Intersection</b>(<td> const double* <td><tt>iFirstPoint</tt>,<tr><td></td><td> const double* <td><tt>iSecondPoint</tt>,<tr><td></td><td>double&amp; <td><tt>oWeight</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>oPosition</tt>) const  </table></dt>
<dl>
  <dd>
 Intersects <tt>this</tt> CATMathIntervalND with a segment.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstPoint</tt>
   <dd> The array of the coordinates of the first point.
 </dd>
    <dt><tt> iSecondPoint</tt>
   <dd> The array of the coordinates of the second point.
 </dd>
    <dt><tt> oWeight</tt>
   <dd> The intersection parameter on the segment </tt>[iFirstPoint,iSecondPoint]</tt>.
 <br>
<tt>IntersectionPoint = iFirstPoint + oWeight * (iSecondPoint - iFirstPoint) </tt>.
 </dd>
    <dt><tt> oPosition</tt>
   <dd> 2*i + d
 <br><tt>i</tt> being the index of the first coordinate of 
 <tt>IntersectionPoint</tt> such as 
<ul><li>either <tt>IntersectionPoint_i=Low_i</tt> and then <tt>d = 0</tt>
    <li>or <tt>IntersectionPoint_i=High_i</tt> and then <tt>d = 1</tt></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl><dt><tt>TRUE</tt><dd> if <tt>this</tt> contains <tt>iFirstPoint</tt>  
  and does not contain <tt>iSecondPoint</tt>. 
     <dt><tt>FALSE</tt><dd> otherwise. </dl>
</dl>
</dl>
<a name="IsEmpty"></a><a name="IsEmpty()"></a> <dt> o <b>IsEmpty</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsEmpty</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Tests whether <tt>this</tt> CATMathIntervalND is empty.
 <br> A CATMathIntervalND is empty if there exists one coordinate 
 for which <tt>Low_i > High_i</tt>. Note that if <tt>Low_i = High_i</tt>,
 it does not make an empty interval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>:
 <dl><dt><tt>TRUE</tt><dd> if the interval is empty.
     <dt><tt>FALSE</tt><dd> otherwise.</dl>
</dl>
</dl>
<a name="MinSquareDistance"></a><a name="MinSquareDistance(double*,double*)"></a> <dt> o <b>MinSquareDistance</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>MinSquareDistance</b>(<td> const double* <td><tt>iPointToProject</tt>,<tr><td></td><td>double* <td><tt>ioSolution</tt>) const  </table></dt>
<dl>
  <dd>
 Projects a given point onto <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPointToProject</tt>
   <dd> The array of the coordinates of the point to project.
 </dd>
    <dt><tt> oSolution</tt>
   <dd> The array (already allocated) of coordinates of the point realizing the minimum distance between 
 <tt>iPointToProject</tt> and <tt>this</tt>.
 If <tt>iPointToProject</tt> belongs to <tt>this</tt>, 
 <tt>oSolution = iPointToProject</tt>. Otherwise,  <tt>oSolution</tt> is on
 <tt>this</tt> boundaries.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The square of the distance between <tt>oSolution</tt> and <tt>this</tt>.
</dl>
</dl>
<a name="SetCoords"></a><a name="SetCoords(double*)"></a> <dt> o <b>SetCoords</b>

<dt>  <table><tr><td>  public void  <b>SetCoords</b>(<td> const double* <td><tt>iMinMax</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the limitations of <tt>this</tt> CATMathIntervalND with an array.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMinMax[2,N]</tt>
   <dd> The array of the limitation.
<br> The domain is then 
 <tt>[iMinMax[0], iMinMax[1]] X ... X [iMinMax[2N-2], iMinMax[2N-1]]</tt></dd>
</dl>
</dl>
</dl>
<a name="SetInterval"></a><a name="SetInterval(CATLONG32,CATMathInterval&amp;)"></a> <dt> o <b>SetInterval</b>

<dt>  <table><tr><td>  public void  <b>SetInterval</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iCoordIndex</tt>,<tr><td></td><td> const <a href="../AdvancedMathematics/class_CATMathInterval_46487.htm">CATMathInterval&amp;</a> <td><tt>iNewLimit</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the limitations associated with a
 coordinate of <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex</tt>
   <dd> The index (<tt>0 <= iCoordIndex < N</tt>) of the coordinate.
 </dd>
    <dt><tt> iNewLimit</tt>
   <dd> The new corresponding interval.</dd>
</dl>
</dl>
</dl>
<a name="SetMax"></a><a name="SetMax(CATLONG32,double)"></a> <dt> o <b>SetMax</b>

<dt>  <table><tr><td>  public void  <b>SetMax</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iCoordIndex</tt>,<tr><td></td><td> const double <td><tt>iNewMax</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the high limitation of a
 coordinate of <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex</tt>
   <dd> The index (<tt>0 <= iCoordIndex < N</tt>) of the coordinate.
 </dd>
    <dt><tt> iNewMax</tt>
   <dd> The new high limitation of <tt>iCoordIndex</tt>.</dd>
</dl>
</dl>
</dl>
<a name="SetMin"></a><a name="SetMin(CATLONG32,double)"></a> <dt> o <b>SetMin</b>

<dt>  <table><tr><td>  public void  <b>SetMin</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iCoordIndex</tt>,<tr><td></td><td> const double <td><tt>iNewMin</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the low limitation of a
 coordinate of <tt>this</tt> CATMathIntervalND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex</tt>
   <dd> The index (<tt>0 <= iCoordIndex < N</tt>) of the coordinate.
 </dd>
    <dt><tt> iNewMin</tt>
   <dd> The new low limitation of <tt>iCoordIndex</tt>.</dd>
</dl>
</dl>
</dl>
<a name="Width"></a><a name="Width()"></a> <dt> o <b>Width</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>Width</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the sum of the interval width of each coordinate of <tt>this</tt>
 CATMathIntervalND.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The width:
 <tt>(High_1-Low_1) + ... + (High_N-Low_N)</tt>.
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATMathIntervalND&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <a href="../AdvancedMathematics/class_CATMathIntervalND_56671.htm">CATMathIntervalND &</a>  <b>operator =</b>(<td> const <a href="../AdvancedMathematics/class_CATMathIntervalND_56671.htm">CATMathIntervalND&amp;</a> <td><tt>iToAffect</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Assignement operator.
</dl>
<hr>
 This object is included in the file: <b>CATMathIntervalND.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAdvancedMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
