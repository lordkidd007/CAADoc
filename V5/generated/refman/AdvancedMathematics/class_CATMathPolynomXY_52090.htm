<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AdvancedMathematics Class CATMathPolynomXY</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../AdvancedMathematics.htm">This Framework</a>  <a href="class_CATMathPolynomX_46370.htm">Previous</a>  <a href="class_CATMathSetOfPointsND_78090.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>AdvancedMathematics Class CATMathPolynomXY</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../AdvancedMathematics/class_CATMathFunctionGeneral_99048.htm">AdvancedMathematics.CATMathFunctionGeneral</a>
    |
    +---<a href="../AdvancedMathematics/class_CATMathFunctionXY_58325.htm">AdvancedMathematics.CATMathFunctionXY</a>
      |
      +---<a href="../AdvancedMathematics/class_CATMathFoundationXY_73218.htm">AdvancedMathematics.CATMathFoundationXY</a>
        |
        +---CATMathPolynomXY
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathPolynomXY</b>
</p>
<p>
<b><i> Class defining the real polynom of two variables.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathPolynomXY(CATLONG32,CATLONG32,double**,double,double)"><b>CATMathPolynomXY</b></a>(CATLONG32,CATLONG32,double**,double,double)
<dd>  Constructs a CATMathPolynomXY from a double entry array.
 <dt> o 
    <a href="#CATMathPolynomXY(CATLONG32,CATLONG32,double*,double,double)"><b>CATMathPolynomXY</b></a>(CATLONG32,CATLONG32,double*,double,double)
<dd>  Constructs a CATMathPolynomXY from an array.
 <dt> o 
    <a href="#CATMathPolynomXY(CATMathPolynomXY&amp;)"><b>CATMathPolynomXY</b></a>(CATMathPolynomXY&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATMathPolynomXY()"><b>~CATMathPolynomXY</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Eval(CATMathIntervalND&amp;,CATLONG32*,CATMathOption,double*,double*,double*,double*,double*,double*)"><b>Eval</b></a>(CATMathIntervalND&amp;,CATLONG32*,CATMathOption,double*,double*,double*,double*,double*,double*)
<dd>  Simultaneously evaluates <tt>this</tt> CATMathPolynomXY or/and its partial derivatives 
 on a regular grid of points.
 <dt> o 
    <a href="#Eval(double&amp;,double&amp;)"><b>Eval</b></a>(double&amp;,double&amp;)
<dd>   Evaluates <tt>this</tt> CATMathPolynomXY.
 <dt> o 
    <a href="#Eval(double,double,CATMathOption,double*,double*,double*,double*,double*,double*)"><b>Eval</b></a>(double,double,CATMathOption,double*,double*,double*,double*,double*,double*)
<dd>  Simultaneously evaluates <tt>this</tt> CATMathPolynomXY or/and its partial derivatives.
 <dt> o 
    <a href="#EvalAllThirdDerivs(double,double,double&amp;,double&amp;,double&amp;,double&amp;)"><b>EvalAllThirdDerivs</b></a>(double,double,double&amp;,double&amp;,double&amp;,double&amp;)
<dd>   Evaluates simultaneously all third partial derivatives
 of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalFirstDerivX(double&amp;,double&amp;)"><b>EvalFirstDerivX</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the first partial derivative with respect to the first variable of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalFirstDerivY(double&amp;,double&amp;)"><b>EvalFirstDerivY</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the first partial derivative with respect to the second variable of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalSecondDerivX2(double&amp;,double&amp;)"><b>EvalSecondDerivX2</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the second partial derivative of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalSecondDerivXY(double&amp;,double&amp;)"><b>EvalSecondDerivXY</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the second partial derivative of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalSecondDerivY2(double&amp;,double&amp;)"><b>EvalSecondDerivY2</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the second partial derivative of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalThirdDerivX2Y(double&amp;,double&amp;)"><b>EvalThirdDerivX2Y</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the third partial derivative of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalThirdDerivX3(double&amp;,double&amp;)"><b>EvalThirdDerivX3</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the third partial derivative of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalThirdDerivXY2(double&amp;,double&amp;)"><b>EvalThirdDerivXY2</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the third partial derivative of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalThirdDerivY3(double&amp;,double&amp;)"><b>EvalThirdDerivY3</b></a>(double&amp;,double&amp;)
<dd>   Evaluates the third partial derivative of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#EvalUpToThirdDeriv(double,double,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)"><b>EvalUpToThirdDeriv</b></a>(double,double,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)
<dd>   Evaluates simultaneously the value, and all the first, second and third partial derivatives
 of <tt>this</tt> CATMathPolynomXY .
 <dt> o 
    <a href="#GetCoefficients()"><b>GetCoefficients</b></a>()
<dd>  Returns the coefficients of <tt>this</tt> CATMathPolynomXY.
 <dt> o 
    <a href="#GetDegreeX()"><b>GetDegreeX</b></a>()
<dd>  Returns the degree in the first variable.
 <dt> o 
    <a href="#GetDegreeY()"><b>GetDegreeY</b></a>()
<dd>  Returns the degree in the second variable.
 <dt> o 
    <a href="#IsA()"><b>IsA</b></a>()
<dd>  Returns the class name of <tt>this</tt>  CATMathPolynomXY.
 <dt> o 
    <a href="#IsAKindOf(CATMathClassId)"><b>IsAKindOf</b></a>(CATMathClassId)
<dd>  Tests whether <tt>this</tt> CATMathPolynomXY derives from a class (given by its name).
 <dt> o 
    <a href="#IsOption(CATMathOption)"><b>IsOption</b></a>(CATMathOption)
<dd>  Tests whether an evaluator is available for <tt>this</tt> CATMathPolynomXY.
 <dt> o 
    <a href="#SetCoefficients(CATLONG32,CATLONG32,double*)"><b>SetCoefficients</b></a>(CATLONG32,CATLONG32,double*)
<dd>  Modifies the coefficients of <tt>this</tt> CATMathPolynomXY.
 <dt> o 
    <a href="#SetCoefficients(CATLONG32,CATLONG32,double**)"><b>SetCoefficients</b></a>(CATLONG32,CATLONG32,double**)
<dd>  Modifies the coefficients of <tt>this</tt> CATMathPolynomXY.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathPolynomXY"></a><a name="CATMathPolynomXY(CATLONG32,CATLONG32,double**,double,double)"></a> <dt> o <b>CATMathPolynomXY</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathPolynomXY</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iDegX</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iDegY</tt>,<tr><td></td><td>double** <td><tt>iCoeff</tt>,<tr><td></td><td> const double <td><tt>iShiftX</tt><td><tt>=0.</tt>,<tr><td></td><td> const double <td><tt>iShiftY</tt><td><tt>=0.</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathPolynomXY from a double entry array.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegX</tt>
   <dd> The degree in the first variable
 </dd>
    <dt><tt> iDegY</tt>
   <dd> The degree in the second variable.
 </dd>
    <dt><tt> iCoeff</tt>
   <dd> The double entry array such that: 
 <br><tt>pol=Sum_{i=0..iDegX, j=0..iDegY}  iCoeff[i][j] X^i Y^j</tt>.
 </dd>
    <dt><tt> iShiftX,</tt>
   <dd> iShiftY Internal use.</dd>
</dl>
</dl>
</dl>
<a name="CATMathPolynomXY"></a><a name="CATMathPolynomXY(CATLONG32,CATLONG32,double*,double,double)"></a> <dt> o <b>CATMathPolynomXY</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathPolynomXY</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iDegX</tt><td><tt>= 0</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iDegY</tt><td><tt>= 0</tt>,<tr><td></td><td> const double* <td><tt>iCoeff</tt><td><tt>= 0</tt>,<tr><td></td><td> const double <td><tt>iShiftX</tt><td><tt>=0.</tt>,<tr><td></td><td> const double <td><tt>iShiftY</tt><td><tt>=0.</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathPolynomXY from an array.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegX</tt>
   <dd> The degree in the first variable
 </dd>
    <dt><tt> iDegY</tt>
   <dd> The degree in the second variable.
 </dd>
    <dt><tt> iCoeff</tt>
   <dd> The array such that: 
 <br><tt>pol=Sum_{i=0..iDegX, j=0..iDegY}  iCoeff[i*(degY+1)+j] X^i Y^j</tt>.</dd>
</dl>
</dl>
</dl>
<a name="CATMathPolynomXY"></a><a name="CATMathPolynomXY(CATMathPolynomXY&amp;)"></a> <dt> o <b>CATMathPolynomXY</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathPolynomXY</b>(<td> const <a href="../AdvancedMathematics/class_CATMathPolynomXY_52090.htm">CATMathPolynomXY&amp;</a> <td><tt>iToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="~CATMathPolynomXY"></a><a name="~CATMathPolynomXY()"></a> <dt> o <b>~CATMathPolynomXY</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATMathPolynomXY</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Eval"></a><a name="Eval(CATMathIntervalND&amp;,CATLONG32*,CATMathOption,double*,double*,double*,double*,double*,double*)"></a> <dt> o <b>Eval</b>

<dt>  <table><tr><td>  public virtual void  <b>Eval</b>(<td> const <a href="../AdvancedMathematics/class_CATMathIntervalND_56671.htm">CATMathIntervalND&amp;</a> <td><tt>iDomain</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32*</a> <td><tt>NbPoints</tt>,<tr><td></td><td> const <a href="../Mathematics/typedef_CATMathOption_34925.htm">CATMathOption</a> <td><tt>iOptions</tt>,<tr><td></td><td>double* <td><tt>ioF</tt>,<tr><td></td><td>double* <td><tt>ioFx</tt><td><tt>=0</tt>,<tr><td></td><td>double* <td><tt>ioFy</tt><td><tt>=0</tt>,<tr><td></td><td>double* <td><tt>ioFx2</tt><td><tt>=0</tt>,<tr><td></td><td>double* <td><tt>ioFxy</tt><td><tt>=0</tt>,<tr><td></td><td>double* <td><tt>ioFy2</tt><td><tt>=0</tt>) const  </table></dt>
<dl>
  <dd>
 Simultaneously evaluates <tt>this</tt> CATMathPolynomXY or/and its partial derivatives 
 on a regular grid of points.
 <br><b>Precondition</b>: The output arrays
 must have been previously allocated if you asked for the corresponding evaluation.
 <tt>oF[Ny*i+j]</tt> contains the evaluation of <tt>this</tt> at <tt>(x_i,y_j)</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDomain</tt>
   <dd> The 2D-interval of definition of the grid <tt>[xStart,xEnd] x [yStart,yEnd]</tt>. 
 </dd>
    <dt><tt> iNbPoints</tt>
   <dd> The array of 2 longs, stating the number of points of the grid in each direction <tt>x</tt>
 and <tt>y</tt>. If <tt>iNbPoints[0]=1</tt> and <tt>iNbPoints[1]=1</tt>, there is only one
 evaluation made at the parameter <tt>(xStart,xStart)</tt>
 </dd>
    <dt><tt> iOptions</tt>
   <dd> The type of evalution.
 <br><b>Legal values</b>:
 <dl> <dt>OptionEval   </dt>  <dd>  evaluation of the function
 <dt>OptionEvalFirstDeriv   </dt>  <dd>  evaluation of the first derivatives of the function
 <dt>OptionEvalSecondDeriv</dt>  <dd>  evaluation of the second derivatives of the function
 </dl>
 </dd>
    <dt><tt> ioF</tt>
   <dd> The array of the evaluations of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> ioFx</tt>
   <dd> The array of the first partial derivative of <tt>this</tt> CATMathPolynomXY at the grid points. 
 </dd>
    <dt><tt> ioFy</tt>
   <dd> The array of the first partial derivative of <tt>this</tt> CATMathPolynomXY at the grid points. 
 </dd>
    <dt><tt> ioFx2</tt>
   <dd> The array of the second partial derivative of <tt>this</tt> CATMathPolynomXY at the grid points.
 </dd>
    <dt><tt> ioFxy</tt>
   <dd> The array of the second partial derivative of <tt>this</tt> CATMathPolynomXY at the grid points.
 </dd>
    <dt><tt> ioFy2</tt>
   <dd> The array of the second partial derivative of <tt>this</tt> CATMathPolynomXY at the grid points.</dd>
</dl>
</dl>
</dl>
<a name="Eval"></a><a name="Eval(double&amp;,double&amp;)"></a> <dt> o <b>Eval</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>Eval</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates <tt>this</tt> CATMathPolynomXY.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the evaluation.
</dl>
</dl>
<a name="Eval"></a><a name="Eval(double,double,CATMathOption,double*,double*,double*,double*,double*,double*)"></a> <dt> o <b>Eval</b>

<dt>  <table><tr><td>  public virtual void  <b>Eval</b>(<td> const double <td><tt>iX</tt>,<tr><td></td><td> const double <td><tt>iY</tt>,<tr><td></td><td> const <a href="../Mathematics/typedef_CATMathOption_34925.htm">CATMathOption</a> <td><tt>iOptions</tt>,<tr><td></td><td>double* <td><tt>ioF</tt>,<tr><td></td><td>double* <td><tt>ioFx</tt><td><tt>=0</tt>,<tr><td></td><td>double* <td><tt>ioFy</tt><td><tt>=0</tt>,<tr><td></td><td>double* <td><tt>ioFx2</tt><td><tt>=0</tt>,<tr><td></td><td>double* <td><tt>ioFxy</tt><td><tt>=0</tt>,<tr><td></td><td>double* <td><tt>ioFy2</tt><td><tt>=0</tt>) const  </table></dt>
<dl>
  <dd>
 Simultaneously evaluates <tt>this</tt> CATMathPolynomXY or/and its partial derivatives.
 <br><b>Precondition</b>:The output arrays
 must have been previously allocated if you asked for the corresponding evaluation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOptions</tt>
   <dd> The type of evalution.
 <br><b>Legal values</b>:
 <dl> <dt>OptionEval   </dt>  <dd>  evaluation of the function
 <dt>OptionEvalFirstDeriv   </dt>  <dd>  evaluation of the first derivatives of the function
 <dt>OptionEvalSecondDeriv</dt>  <dd>  evaluation of the second derivatives of the function
 </dl>
 </dd>
    <dt><tt> ioF</tt>
   <dd> A pointer to the value of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> ioFx</tt>
   <dd> A pointer to the first partial derivative of <tt>this</tt> CATMathPolynomXY. 
 </dd>
    <dt><tt> ioFy</tt>
   <dd> A pointer to the first partial derivative of <tt>this</tt> CATMathPolynomXY. 
 </dd>
    <dt><tt> ioFx2</tt>
   <dd> A pointer to the second partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> ioFxy</tt>
   <dd> A pointer to the second partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> ioFy2</tt>
   <dd> A pointer to the second partial derivative of <tt>this</tt> CATMathPolynomXY.</dd>
</dl>
</dl>
</dl>
<a name="EvalAllThirdDerivs"></a><a name="EvalAllThirdDerivs(double,double,double&amp;,double&amp;,double&amp;,double&amp;)"></a> <dt> o <b>EvalAllThirdDerivs</b>

<dt>  <table><tr><td>  public virtual void  <b>EvalAllThirdDerivs</b>(<td> const double <td><tt>iX</tt>,<tr><td></td><td> const double <td><tt>iY</tt>,<tr><td></td><td>double&amp; <td><tt>oFx3</tt>,<tr><td></td><td>double&amp; <td><tt>oFx2y</tt>,<tr><td></td><td>double&amp; <td><tt>oFxy2</tt>,<tr><td></td><td>double&amp; <td><tt>oFy3</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates simultaneously all third partial derivatives
 of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> oFx3</tt>
   <dd> The value of the third partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFx2y</tt>
   <dd> The value of the third partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFxy2</tt>
   <dd> The value of the third partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFy3</tt>
   <dd> The value of the third partial derivative of <tt>this</tt> CATMathPolynomXY.</dd>
</dl>
</dl>
</dl>
<a name="EvalFirstDerivX"></a><a name="EvalFirstDerivX(double&amp;,double&amp;)"></a> <dt> o <b>EvalFirstDerivX</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalFirstDerivX</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the first partial derivative with respect to the first variable of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the first partial derivative with respect to the first variable.
</dl>
</dl>
<a name="EvalFirstDerivY"></a><a name="EvalFirstDerivY(double&amp;,double&amp;)"></a> <dt> o <b>EvalFirstDerivY</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalFirstDerivY</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the first partial derivative with respect to the second variable of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the first partial derivative with respect to the second variable.
</dl>
</dl>
<a name="EvalSecondDerivX2"></a><a name="EvalSecondDerivX2(double&amp;,double&amp;)"></a> <dt> o <b>EvalSecondDerivX2</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalSecondDerivX2</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the second partial derivative of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the second partial derivative.
</dl>
</dl>
<a name="EvalSecondDerivXY"></a><a name="EvalSecondDerivXY(double&amp;,double&amp;)"></a> <dt> o <b>EvalSecondDerivXY</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalSecondDerivXY</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the second partial derivative of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the second partial derivative.
</dl>
</dl>
<a name="EvalSecondDerivY2"></a><a name="EvalSecondDerivY2(double&amp;,double&amp;)"></a> <dt> o <b>EvalSecondDerivY2</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalSecondDerivY2</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the second partial derivative of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the second partial derivative.
</dl>
</dl>
<a name="EvalThirdDerivX2Y"></a><a name="EvalThirdDerivX2Y(double&amp;,double&amp;)"></a> <dt> o <b>EvalThirdDerivX2Y</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalThirdDerivX2Y</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the third partial derivative of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the third partial derivative.
</dl>
</dl>
<a name="EvalThirdDerivX3"></a><a name="EvalThirdDerivX3(double&amp;,double&amp;)"></a> <dt> o <b>EvalThirdDerivX3</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalThirdDerivX3</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the third partial derivative of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the third partial derivative.
</dl>
</dl>
<a name="EvalThirdDerivXY2"></a><a name="EvalThirdDerivXY2(double&amp;,double&amp;)"></a> <dt> o <b>EvalThirdDerivXY2</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalThirdDerivXY2</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the third partial derivative of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the third partial derivative.
</dl>
</dl>
<a name="EvalThirdDerivY3"></a><a name="EvalThirdDerivY3(double&amp;,double&amp;)"></a> <dt> o <b>EvalThirdDerivY3</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>EvalThirdDerivY3</b>(<td> const double&amp; <td><tt>iX</tt>,<tr><td></td><td> const double&amp; <td><tt>iY</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates the third partial derivative of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the third partial derivative.
</dl>
</dl>
<a name="EvalUpToThirdDeriv"></a><a name="EvalUpToThirdDeriv(double,double,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)"></a> <dt> o <b>EvalUpToThirdDeriv</b>

<dt>  <table><tr><td>  public virtual void  <b>EvalUpToThirdDeriv</b>(<td> const double <td><tt>iX</tt>,<tr><td></td><td> const double <td><tt>iY</tt>,<tr><td></td><td>double&amp; <td><tt>oF</tt>,<tr><td></td><td>double&amp; <td><tt>oFx</tt>,<tr><td></td><td>double&amp; <td><tt>oFy</tt>,<tr><td></td><td>double&amp; <td><tt>oFx2</tt>,<tr><td></td><td>double&amp; <td><tt>oFxy</tt>,<tr><td></td><td>double&amp; <td><tt>oFy2</tt>,<tr><td></td><td>double&amp; <td><tt>oFx3</tt>,<tr><td></td><td>double&amp; <td><tt>oFx2y</tt>,<tr><td></td><td>double&amp; <td><tt>oFxy2</tt>,<tr><td></td><td>double&amp; <td><tt>oFy3</tt>) const  </table></dt>
<dl>
  <dd>
  Evaluates simultaneously the value, and all the first, second and third partial derivatives
 of <tt>this</tt> CATMathPolynomXY .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The value of the first variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> iY</tt>
   <dd> The value of the second variable where <tt>this</tt> CATMathPolynomXY is evaluated.
 </dd>
    <dt><tt> oF</tt>
   <dd> The value of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFx</tt>
   <dd> The value of the first partial derivative of <tt>this</tt> CATMathPolynomXY. 
 </dd>
    <dt><tt> oFy</tt>
   <dd> The value of the first partial derivative of <tt>this</tt> CATMathPolynomXY. 
 </dd>
    <dt><tt> oFx2</tt>
   <dd> The value of the second partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFxy</tt>
   <dd> The value of the second partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFy2</tt>
   <dd> The value of the second partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFx3</tt>
   <dd> The value of the third partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFx2y</tt>
   <dd> The value of the third partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFxy2</tt>
   <dd> The value of the third partial derivative of <tt>this</tt> CATMathPolynomXY.
 </dd>
    <dt><tt> oFy3</tt>
   <dd> The value of the third partial derivative of <tt>this</tt> CATMathPolynomXY.</dd>
</dl>
</dl>
</dl>
<a name="GetCoefficients"></a><a name="GetCoefficients()"></a> <dt> o <b>GetCoefficients</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">const double *</a>  <b>GetCoefficients</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the coefficients of <tt>this</tt> CATMathPolynomXY.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The array of the coefficients. As part of <tt>this</tt>, it must not be deallocated.
</dl>
</dl>
<a name="GetDegreeX"></a><a name="GetDegreeX()"></a> <dt> o <b>GetDegreeX</b>

<dt>  <table><tr><td>  public <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a>  <b>GetDegreeX</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the degree in the first variable.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The degree.
</dl>
</dl>
<a name="GetDegreeY"></a><a name="GetDegreeY()"></a> <dt> o <b>GetDegreeY</b>

<dt>  <table><tr><td>  public <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a>  <b>GetDegreeY</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the degree in the second variable.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The degree.
</dl>
</dl>
<a name="IsA"></a><a name="IsA()"></a> <dt> o <b>IsA</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/typedef_CATMathClassId_38266.htm">CATMathClassId</a>  <b>IsA</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the class name of <tt>this</tt>  CATMathPolynomXY.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A pointer to the name <tt>CATMathPolynomX</tt>.
</dl>
</dl>
<a name="IsAKindOf"></a><a name="IsAKindOf(CATMathClassId)"></a> <dt> o <b>IsAKindOf</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsAKindOf</b>(<td> const <a href="../Mathematics/typedef_CATMathClassId_38266.htm">CATMathClassId</a> <td><tt>iClassId</tt>) const  </table></dt>
<dl>
  <dd>
 Tests whether <tt>this</tt> CATMathPolynomXY derives from a class (given by its name).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClassId</tt>
   <dd> The name of the class.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>TRUE</tt> if <tt>this</tt> CATMathPolynomXY is a kind of <tt>iClassId</tt>,
 <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="IsOption"></a><a name="IsOption(CATMathOption)"></a> <dt> o <b>IsOption</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsOption</b>(<td> const <a href="../Mathematics/typedef_CATMathOption_34925.htm">CATMathOption</a> <td><tt>iOption</tt>) const  </table></dt>
<dl>
  <dd>
 Tests whether an evaluator is available for <tt>this</tt> CATMathPolynomXY.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOption</tt>
   <dd> The type of evalution.
 <br><b>Legal values</b>:
 <dl> <dt>OptionEval   </dt>  <dd>  evaluation of the function
 <dt>OptionEvalFirstDeriv   </dt>  <dd>  evaluation of the first derivative of the function
 <dt>OptionEvalSecondDeriv</dt>  <dd>  evaluation of the second derivative of the function
 <dt>OptionEvalThirdDeriv</dt>  <dd>  evaluation of the third derivative of the function
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>TRUE</tt> if the evaluation is available for <tt>this</tt> CATMathPolynomXY,
 <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="SetCoefficients"></a><a name="SetCoefficients(CATLONG32,CATLONG32,double*)"></a> <dt> o <b>SetCoefficients</b>

<dt>  <table><tr><td>  public void  <b>SetCoefficients</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iDegX</tt><td><tt>= 0</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iDegY</tt><td><tt>= 0</tt>,<tr><td></td><td> const double* <td><tt>iCoef</tt><td><tt>= 0</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the coefficients of <tt>this</tt> CATMathPolynomXY.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegX</tt>
   <dd> The degree in the first variable
 </dd>
    <dt><tt> iDegY</tt>
   <dd> The degree in the second variable.
 </dd>
    <dt><tt> iCoef</tt>
   <dd> The array such that: 
 <br><tt>pol=Sum_{i=0..iDegX, j=0..iDegY}  iCoef[i*(degY+1)+j] X^i Y^j</tt>.</dd>
</dl>
</dl>
</dl>
<a name="SetCoefficients"></a><a name="SetCoefficients(CATLONG32,CATLONG32,double**)"></a> <dt> o <b>SetCoefficients</b>

<dt>  <table><tr><td>  public void  <b>SetCoefficients</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iDegX</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iDegY</tt>,<tr><td></td><td>double** <td><tt>iCoef</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the coefficients of <tt>this</tt> CATMathPolynomXY.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegX</tt>
   <dd> The degree in the first variable
 </dd>
    <dt><tt> iDegY</tt>
   <dd> The degree in the second variable.
 </dd>
    <dt><tt> iCoef</tt>
   <dd> The double entry array such that: 
 <br><tt>pol=Sum_{i=0..iDegX, j=0..iDegY}  iCoeff[i][j] X^i Y^j</tt>.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMathPolynomXY.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAdvancedMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
