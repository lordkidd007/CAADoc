<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MechanicalCommands Interface CATIUdfInstantiate</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../MechanicalCommands.htm">This Framework</a>  <a href="interface_CATIUdfFeatureUser_65484.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>MechanicalCommands Interface CATIUdfInstantiate</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIUdfInstantiate
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIUdfInstantiate</b>
</p>
<p>
<b><i> Interface to instantiate a template reference.</i></b><br>

 <br><b>Role</b>: Interface that enables the instantiation of a <tt>template</tt> reference.<br>
 <p>The <tt>template</tt> can be a <tt>User Feature</tt>, a <tt>Power Copy</tt>, a <tt>Document Template</tt>,
 and in that case, they have been created with the <a href="../MechanicalCommands/interface_CATIUdfFactory_39630.htm">CATIUdfFactory</a> interface and defined with the 
<a href="../MechanicalCommands/interface_CATIUdfFeature_39078.htm">CATIUdfFeature</a> interface.<br> But it can also be a <tt>Machining Process</tt>, an <tt>Action</tt>, or a
 set of features like an <tt>Ordered Geometrical Set</tt>, a <tt>Body</tt>, ...
 <p>The instantiation process depends on the reference: it can be based on a <tt>Copy/Paste</tt> mechanism,
 or on an <tt>Instance/Reference</tt> mechanism.
 Refer to the CAA Encyclopedia article entitled 'An Overview of Power Copies and User Features' for details
 about the different mechanisms of instantiation in the case of <tt>Power Copies</tt> and <tt>User Features</tt>.<br>
 <p>However the instantiation process remains identical: you need to call the methods of this interface in the right order:
 <ol>
 <li><b>First Step: Initialization</b>:<br>
 It is the step where you define the destination of instantiation.<br>
 There are two different methods: only one of them should be called depending on what you want to instantiate.<br>
 <ul>
 <li>
<a href="#SetDestinationPath">SetDestinationPath</a> :<br> This method should be called when you want to instantiate the reference <tt>template</tt>:<br>
 <ul>
 <li>in a Product context: where a new Part may be created on the fly.</li>
 <li>in a Part context, when you do not need to indicate the location of insertion of the created objects.</li>
 </ul></li>
 <li>
<a href="#SetDestinationPathOfInsertion">SetDestinationPathOfInsertion</a> :<br> This method should be called when you want to instantiate the reference <tt>template</tt> in a Part context and indicate
 the location of insertion of the created objects.<br>
 You can retrieve the default destination using the 
<a href="#GetDefaultDestinationOfInsertion">GetDefaultDestinationOfInsertion</a> method.</li> </ul></li>
 <li><b>Second Step: Input valuation</b>:<br>
 It is the step where you valuate the inputs, either manually or automatically.<br>
 Use 
<a href="#GetOldInputs">GetOldInputs</a> , 
<a href="#GetOldInput">GetOldInput</a> , 
<a href="#GetNewInput">GetNewInput</a> , 
<a href="#GetNewInputPathElement">GetNewInputPathElement</a> to retrieve the inputs values either on the reference or on the instance.<br> Use 
<a href="#FilterInput">FilterInput</a> , 
<a href="#SetNewInput">SetNewInput</a> , 
<a href="#UseIdenticalName">UseIdenticalName</a> to valuate the inputs.</li> <li><b>Third Step: Parameters modification</b>:<br>
 This step is optional: use the 
<a href="#GetParameters">GetParameters</a> method to retrieve the published parameters and modify their values.</li> <li><b>Fourth Step: Validation</b>:<br>
 It is the step where the reference is instantiated. After the 
<a href="#Instantiate">Instantiate</a> method, you can not modify the inputs and parameters values anymore.</li> <li><b>Fith Step: Analyse</b><br>
 This step is optional: use the 
<a href="#GetInstantiated">GetInstantiated</a> method to retrieve the created feature, and 
<a href="#SetDisplayName">SetDisplayName</a> to modify its name.<br> To retrieve this name, use 
<a href="#GetDisplayName">GetDisplayName</a> .</li> <li><b>Sixth Step: Ending of the instantiation process</b>:<br>
 Use 
<a href="#EndInstantiate">EndInstantiate</a> method to end the instantiation process.</li> </ol>
 </ul>
 Only the third and fifth steps are optional, while all others are <b>mandatory</b>.<br>
 Refer to the CAA Encyclopedia article entitled 'Instantiating a User Feature Reference'
 for details  about the usage of this interface.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../MechanicalCommands/interface_CATIUdfFactory_39630.htm">CATIUdfFactory</a>, <a href="../MechanicalCommands/interface_CATIUdfFeature_39078.htm">CATIUdfFeature</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#EndInstantiate()"><b>EndInstantiate</b></a>()
<dd>  Ends the instantiation process.
 <dt> o 
    <a href="#FilterInput(int,CATPathElement*,CATPathElement**)"><b>FilterInput</b></a>(int,CATPathElement*,CATPathElement**)
<dd>  Filters the selection for the valuation of one input of the instance.
 <dt> o 
    <a href="#GetDefaultDestinationOfInsertion(CATPathElement*,CATPathElement*&amp;,CATUnicodeString&amp;)"><b>GetDefaultDestinationOfInsertion</b></a>(CATPathElement*,CATPathElement*&amp;,CATUnicodeString&amp;)
<dd>   Retrieves the default destination path and its relative position.
 <dt> o 
    <a href="#GetDisplayName(CATUnicodeString&amp;)"><b>GetDisplayName</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the name of the reference template.
 <dt> o 
    <a href="#GetFilterInputMessage(CATUnicodeString&amp;)"><b>GetFilterInputMessage</b></a>(CATUnicodeString&amp;)
<dd>  Gets an information message explaining the FilterInput failure.
 <dt> o 
    <a href="#GetInstantiated(CATBaseUnknown_var)"><b>GetInstantiated</b></a>(CATBaseUnknown_var)
<dd>  Retrieves the instantiated feature.
 <dt> o 
    <a href="#GetNewInput(int)"><b>GetNewInput</b></a>(int)
<dd>  Retrieves one input of the instance.
 <dt> o 
    <a href="#GetNewInputPathElement(int,CATPathElement*&amp;)"><b>GetNewInputPathElement</b></a>(int,CATPathElement*&amp;)
<dd>  Retrieves the path of one input of the instance.
 <dt> o 
    <a href="#GetOldInput(int)"><b>GetOldInput</b></a>(int)
<dd>  Retrieves one input of the reference template.
 <dt> o 
    <a href="#GetOldInputs(CATListValCATBaseUnknown_var*&amp;,CATListOfCATUnicodeString*&amp;)"><b>GetOldInputs</b></a>(CATListValCATBaseUnknown_var*&amp;,CATListOfCATUnicodeString*&amp;)
<dd>  Retrieves the list of all the inputs of the reference along with their role.
 <dt> o 
    <a href="#GetParameters(CATListValCATBaseUnknown_var*&amp;,CATListOfCATUnicodeString*&amp;)"><b>GetParameters</b></a>(CATListValCATBaseUnknown_var*&amp;,CATListOfCATUnicodeString*&amp;)
<dd>  Retrieves the list of all published parameters along with their role.
 <dt> o 
    <a href="#Instantiate(CATBaseUnknown_var&amp;)"><b>Instantiate</b></a>(CATBaseUnknown_var&amp;)
<dd>  Validates the instantiation.
 <dt> o 
    <a href="#SetDestinationPath(CATPathElement*,CATPathElement*&amp;,CATBaseUnknown_var&amp;)"><b>SetDestinationPath</b></a>(CATPathElement*,CATPathElement*&amp;,CATBaseUnknown_var&amp;)
<dd>  Sets the destination path for the instantiation.
 <dt> o 
    <a href="#SetDestinationPathOfInsertion(CATPathElement*,CATUnicodeString&amp;)"><b>SetDestinationPathOfInsertion</b></a>(CATPathElement*,CATUnicodeString&amp;)
<dd>   Sets the destination path and position for the instantiation.
 <dt> o 
    <a href="#SetDisplayName(CATUnicodeString&amp;)"><b>SetDisplayName</b></a>(CATUnicodeString&amp;)
<dd>  Sets the name of the instantiated feature.
 <dt> o 
    <a href="#SetNewInput(int,CATPathElement*)"><b>SetNewInput</b></a>(int,CATPathElement*)
<dd>  Sets one input of the instance at a given position.
 <dt> o 
    <a href="#UseIdenticalName(CATBaseUnknown_var)"><b>UseIdenticalName</b></a>(CATBaseUnknown_var)
<dd>  Valuates automatically all the inputs of the instance.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="EndInstantiate"></a><a name="EndInstantiate()"></a> <dt> o <b>EndInstantiate</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>EndInstantiate</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Ends the instantiation process.
 <br><b>Role</b>: After this call, the instantiation is ended.<br>
 All the links to the reference are broken.
 In case of <tt>User Feature</tt> instantiation, you can modify the created instance using the 
<a href="../MechanicalCommands/interface_CATIUdfFeatureInstance_97960.htm">CATIUdfFeatureInstance</a> interface. 
<dl>
  <dt> <b>Returns:</b> 
  <dd> 
</dl>
</dl>
<a name="FilterInput"></a><a name="FilterInput(int,CATPathElement*,CATPathElement**)"></a> <dt> o <b>FilterInput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>FilterInput</b>(<td> const int <td><tt>iPos</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement*</a> <td><tt>iSelection</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement**</a> <td><tt>oFilteredSelection</tt>) = 0  </table></dt>
<dl>
  <dd>
 Filters the selection for the valuation of one input of the instance.
 <br><b>Role</b>: This method is called during the selection made by the user to valuate a given input at the <tt>iPos</tt> position.
 The filter is done on <tt>Replace</tt> compliancy.
 The output of this method is a new CATPathElement, <tt>oFilteredSelection</tt>, and if this path is not empty it is the new input.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPos</tt>
   <dd>  Input position, from 1 to the size of the list returned by </dd>
<a href="#GetOldInputs">GetOldInputs</a>  
    <dt><tt> iSelection</tt>
   <dd>  A <tt>CATPathElement</tt> with the new object, this path must contain the full selection
   path for a valid import mechanism in multidocument context.
 </dd>
    <dt><tt> oFilteredSelection</tt>
   <dd>  A subpath of <tt>iSelection</tt> containing the authorized feature for the </dd>
<a href="#SetNewInput">SetNewInput</a> method. 
  <dt> <b>Returns:</b> 
  <dd>   <code>E_FAIL</code> if the selection is not valid for the input valuation, <code>S_OK</code> otherwise.
</dl>
</dl>
</dl>
<a name="GetDefaultDestinationOfInsertion"></a><a name="GetDefaultDestinationOfInsertion(CATPathElement*,CATPathElement*&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetDefaultDestinationOfInsertion</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDefaultDestinationOfInsertion</b>(<td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement*</a> <td><tt>iPartPath</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement*&amp;</a> <td><tt>oDefaultDestinatioPath</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oDefaultRelativePosition</tt>) = 0  </table></dt>
<dl>
  <dd>
  Retrieves the default destination path and its relative position.
 <br><b>Role</b>: This method is used in combination with 
<a href="#SetDestinationPathOfInsertion">SetDestinationPathOfInsertion</a> . Use it to retrieve the default destination feature and the default position of the insertion when it is defined.<br>
 For example, in case of mechanical features, the default destination is the current feature. If this feature is a set of features, the relative
 position is <tt>Inside</tt>, otherwise it is <tt>After</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPartPath</tt>
   <dd>  The complete path of a Part where the instantiated elements will be created.<br>
 </dd>
    <dt><tt> oDefaultDestinatioPath</tt>
   <dd>  The complete path of the default destination feature.
 </dd>
    <dt><tt> oDefaultRelativePosition</tt>
   <dd>  The default destination position.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul><li><code>S_OK</code> when the default destination path is retrieved.</li>
  <li><code>E_FAIL</code> when no default destination is valid. In that case, a CATError is raised, explining why there is no valid destination.</li></ul>
</dl>
</dl>
<a name="GetDisplayName"></a><a name="GetDisplayName(CATUnicodeString&amp;)"></a> <dt> o <b>GetDisplayName</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDisplayName</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iReferenceName</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the name of the reference template.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReferenceName</tt>
   <dd>  It is the name of the reference <tt>template</tt>.<br>
  Note that this name is not modifiable even if you use the </dd>
<a href="#SetDisplayName">SetDisplayName</a> method as this last method applies on the instance and not on the reference.
 
  <dt> <b>Returns:</b> 
  <dd> 
</dl>
</dl>
</dl>
<a name="GetFilterInputMessage"></a><a name="GetFilterInputMessage(CATUnicodeString&amp;)"></a> <dt> o <b>GetFilterInputMessage</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFilterInputMessage</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oMsg</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets an information message explaining the FilterInput failure.
 <br><b>Role:</b> This method is called by standard instantiation command after the call of 
<a href="#FilterInput">FilterInput</a> . The goal is to customize the tooltip shown on selection agent to provide more information to the user. This can be used in customized
 instantiation commands to help the user in the instantiation process. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMsg</tt>
   <dd> The message that can be used as an help for the end user. 
 In the standard instantiation command, if this message is not empty after the call of this method,
 the tooltip of the selection agent is modified with it
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the method succeeds, E_FAIL otherwise
</dl>
</dl>
<a name="GetInstantiated"></a><a name="GetInstantiated(CATBaseUnknown_var)"></a> <dt> o <b>GetInstantiated</b>

<dt>  <table><tr><td>  public virtual <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown_var</a>  <b>GetInstantiated</b>(<td> const <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown_var</a> <td><tt>iFrom</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the instantiated feature.
 <br><b>Role</b>: Use this method to retrieve a pointer to the new instance.<br>
 You can call this method only after the 
<a href="#Instantiate">Instantiate</a> method, and only before the 
<a href="#EndInstantiate">EndInstantiate</a> method.<br> Use this method <b>only</b> in the case of a <tt>User Feature</tt> instantiation.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFrom</tt>
   <dd>   This.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The instantiated object.
</dl>
</dl>
<a name="GetNewInput"></a><a name="GetNewInput(int)"></a> <dt> o <b>GetNewInput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown_var</a>  <b>GetNewInput</b>(<td> const int <td><tt>iPos</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves one input of the instance.
 <br><b>Role</b>: Use this method to retrieve the input set by the 
<a href="#SetNewInput">SetNewInput</a> method or  after the 
<a href="#UseIdenticalName">UseIdenticalName</a> method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPos</tt>
   <dd>  Input position, from 1 to the size of the list returned by </dd>
<a href="#GetOldInputs">GetOldInputs</a>  
  <dt> <b>Returns:</b> 
  <dd>    NULL_var if the <tt>iPos</tt>th input is not valuated otherwise the input of the current instance.
</dl>
</dl>
</dl>
<a name="GetNewInputPathElement"></a><a name="GetNewInputPathElement(int,CATPathElement*&amp;)"></a> <dt> o <b>GetNewInputPathElement</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewInputPathElement</b>(<td>int <td><tt>iPos</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement*&amp;</a> <td><tt>oPath</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the path of one input of the instance.
 <br><b>Role</b>: Use this method to retrieve the path of an input set by the 
<a href="#SetNewInput">SetNewInput</a> method or  after the 
<a href="#UseIdenticalName">UseIdenticalName</a> method.<br> Warning, this path can be different from the one set in the 
<a href="#SetNewInput">SetNewInput</a> method: for example, the new input can be the result of an import  of the given input. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPos</tt>
   <dd>  The input position, from 1 to the size of the list returned by </dd>
<a href="#GetOldInputs">GetOldInputs</a> 
    <dt><tt> oPath</tt>
   <dd>  The returned path element. It has to be released after use if method returs S_OK.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    E_FAIL if <tt>iPos</tt> position is outside the authorized range, otherwise S_OK.
</dl>
</dl>
<a name="GetOldInput"></a><a name="GetOldInput(int)"></a> <dt> o <b>GetOldInput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown_var</a>  <b>GetOldInput</b>(<td> const int <td><tt>iPos</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves one input of the reference template.
 <br><b>Role</b>: Use this method to retrieve the input of the reference <tt>template</tt> located at the <tt>iPos</tt> position.<br>
 You get the same result when getting the <tt>iPos</tt>th element of the list given by the 
<a href="#GetOldInputs">GetOldInputs</a> method.  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPos</tt>
   <dd>  Input position, from 1 to the size of the list returned by </dd>
<a href="#GetOldInputs">GetOldInputs</a>  
  <dt> <b>Returns:</b> 
  <dd>    The <tt>iPos</tt>th input feature.
</dl>
</dl>
</dl>
<a name="GetOldInputs"></a><a name="GetOldInputs(CATListValCATBaseUnknown_var*&amp;,CATListOfCATUnicodeString*&amp;)"></a> <dt> o <b>GetOldInputs</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOldInputs</b>(<td>CATListValCATBaseUnknown_var*&amp; <td><tt>oOldValues</tt>,<tr><td></td><td><a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">CATListOfCATUnicodeString*&amp;</a> <td><tt>oRoleList</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the list of all the inputs of the reference along with their role.
 <br><b>Role</b>: Use this method to retrieve the inputs of the reference <tt>template</tt>
 along with their role (defined by the 
<a href="../MechanicalCommands/interface_CATIUdfFeature_39078.htm#SetInputRole">CATIUdfFeature.SetInputRole</a> method). 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOldValues</tt>
   <dd>  The list of inputs of the reference <tt>template</tt>.
 </dd>
    <dt><tt> oRoleList</tt>
   <dd>  The list of NLS texts to help the user to better understand the inputs.
  This list has always the same size as the oOldValues list.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <code>S_OK</code> if the inputs are retrieved correctly, <code>E_FAIL</code> if there is a problem while retrieving the inputs.
</dl>
</dl>
<a name="GetParameters"></a><a name="GetParameters(CATListValCATBaseUnknown_var*&amp;,CATListOfCATUnicodeString*&amp;)"></a> <dt> o <b>GetParameters</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetParameters</b>(<td>CATListValCATBaseUnknown_var*&amp; <td><tt>oParamList</tt>,<tr><td></td><td><a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">CATListOfCATUnicodeString*&amp;</a> <td><tt>oRoleList</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the list of all published parameters along with their role.
 <br><b>Role</b>: Use this method to retrieve all published parameters in order to change their value.
 But it is not necessary to modify them.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oParamList</tt>
   <dd>  The list of published parameters.
 </dd>
    <dt><tt> oRoleList</tt>
   <dd>  The list of roles dedicated to each published parameter. The list has the same size as <tt>oParamList</tt>.</dd>
</dl>
</dl>
</dl>
<a name="Instantiate"></a><a name="Instantiate(CATBaseUnknown_var&amp;)"></a> <dt> o <b>Instantiate</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Instantiate</b>(<td> const <a href="../System/class_CATBaseUnknown_var_67834.htm">CATBaseUnknown_var&amp;</a> <td><tt>iDestination</tt>) = 0  </table></dt>
<dl>
  <dd>
 Validates the instantiation.
 <br><b>Role</b>: The new instance is now created, you can get a pointer to this instance when it exists,
 using the 
<a href="#GetInstantiated">GetInstantiated</a> method (Indeed, for <tt>Power Copy</tt> instantiation in <tt>One Step</tt> mode, no instance is created).<br>
 After this call you can not modify its inputs and its parameters anymore.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDestination</tt>
   <dd>  The Part destination of instantiation.<br>
  <ul><li>For User Feature, there is no need to set a destination. Then the <tt>iDestination</tt> argument is NULL_var.</li>
  <li>For Power Copy, the destination is the Part where the instantiation should be done.<br>
  <ul><li>In case you use the </dd>
<a href="#SetDestinationPath">SetDestinationPath</a> method, it is the first argument of this method if it is a Part,  otherwise it is the last argument of the method if the first agument is a Product.</li>
  <li>In case you use the 
<a href="#SetDestinationPathOfInsertion">SetDestinationPathOfInsertion</a> method, it is the Part containing the destination feature of the first  argument of this method.</li></ul></ul>
 
  <dt> <b>Returns:</b> 
  <dd>   <code>E_FAIL</code> if the instantiation fails, <code>S_OK</code> otherwise.
</dl>
</dl>
</dl>
<a name="SetDestinationPath"></a><a name="SetDestinationPath(CATPathElement*,CATPathElement*&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetDestinationPath</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDestinationPath</b>(<td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement*</a> <td><tt>iPath</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement*&amp;</a> <td><tt>oDestinationPath</tt>,<tr><td></td><td><a href="../System/class_CATBaseUnknown_var_67834.htm">CATBaseUnknown_var&amp;</a> <td><tt>oDestination</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the destination path for the instantiation.
 <br><b>Role:</b> This is the first step of the instantiation process.<br>
 Use this method when you want to instantiate a <tt>template</tt> reference in a Product context
 or if you want to instantiate it in a Part context without specifying the location of insertion of the created features.<br>
 If you want to set this location, you should use the other method 
<a href="#SetDestinationPathOfInsertion">SetDestinationPathOfInsertion</a> . 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>  It is the complete path of a Part or a Product where the instantiated elements will be created.<br>
  The created features will be set in the current set of features of the active Part.<br>
  <ul><li>If <tt>iPath</tt> represents the path of a Part, this Part is the destination Part.</li>
  <li>If <tt>iPath</tt> represents the path of a Product, a new Part may be automatically created depending on the reference.</li></ul>
 </dd>
    <dt><tt> oDestinationPath</tt>
   <dd>  <ul>
  <li>This value is NULL if <tt>iPath</tt> is the complete path of a Part</li>
  <li>This value is the complete path of the created Part (when it exists).<tt>iPath</tt> is then the complete path of a Product.</li>
  </ul>
  The command must UIactivate this new path before modifying the inputs, this is mandatory
  to create links between documents (<tt>Reference Elements</tt> in the Part).
 </dd>
    <dt><tt> oDestination</tt>
   <dd>  <ul>
  <li>This value is NULL_var if <tt>iPath</tt> is the complete path of a Part.</li>
  <li>This Value is the pointer of the created Part (when it exists). <tt>iPath</tt> is then complete path of a Product.</li>
  </ul></dd>
</dl>
</dl>
</dl>
<a name="SetDestinationPathOfInsertion"></a><a name="SetDestinationPathOfInsertion(CATPathElement*,CATUnicodeString&amp;)"></a> <dt> o <b>SetDestinationPathOfInsertion</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDestinationPathOfInsertion</b>(<td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement*</a> <td><tt>iPathOfInsertion</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iRelativePosition</tt>) = 0  </table></dt>
<dl>
  <dd>
  Sets the destination path and position for the instantiation.
 <br><b>Role</b>: This is the first step of the instantiation process.<br>
 Use this method when you want to instantiate a <tt>template</tt> reference in a Part context and specify the location
 of insertion of the created features.<br>
 If you do not need to specify the location of insertion, or if you want to instantiate the <tt>template</tt> reference in a 
 Product context, you should use the other 
<a href="#SetDestinationPath">SetDestinationPath</a> method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathOfInsertion</tt>
   <dd>  The complete path of the feature where you want to insert the result of the instantiation.<br>
  <ul><li>If this destination feature is a set of features (like a <tt>Geometrical Set</tt>, a <tt>Body</tt>, ...), the instantiation is done
  either inside or after it, depending on the <tt>iRelativePosition</tt> argument.</li>
  <li>Otherwise if the destination feature is not a set of features, the instantiation is done after it and the <tt>iRelativePosition</tt> is
  imperatively positioned on <tt>After</tt>.</li></ul>
 </dd>
    <dt><tt> iRelativePosition</tt>
   <dd>  The position of insertion relatively to the destination feature.<br>
  For mechanical features, it is either <tt>After</tt> or <tt>Inside</tt>, depending on the destination feature.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul><li><code>S_OK</code> when the destination of insertion is valid.</li>
  <li><code>E_FAIL</code> when the destination of insertion is not valid. An error message is then raised with a CATError.<br>
  It is the case for example when you set a <tt>Body</tt> as destination of insertion of a <tt>Power Copy</tt> that contains a
  <tt>Geometrical Set</tt> and you use the <tt>Inside</tt> position. As a <tt>Geometrical Set</tt> can not be inserted inside a <tt>Body</tt>,
 the method returns E_FAIL and an error message explaining why the destination is not possible is raised.</li></ul>
</dl>
</dl>
<a name="SetDisplayName"></a><a name="SetDisplayName(CATUnicodeString&amp;)"></a> <dt> o <b>SetDisplayName</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDisplayName</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iName</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the name of the instantiated feature.
 <br><b>Role</b>: Use this method to modify the name of the instance in the case of a <tt>User Feature</tt> instantiation.<br>
 The default name is the name of the <tt>User Feature</tt> reference followed by a number. This name is returned by 
<a href="#GetDisplayName">GetDisplayName</a> .<br> This method is available <b>only</b> if the reference object is a single object (not available for <tt>PowerCopy</tt> with multiple features
 for example).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>  The new name of the instance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <code>S_OK</code>
</dl>
</dl>
<a name="SetNewInput"></a><a name="SetNewInput(int,CATPathElement*)"></a> <dt> o <b>SetNewInput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetNewInput</b>(<td> const int <td><tt>iPos</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement*</a> <td><tt>iSelection</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets one input of the instance at a given position.
 <br><b>Role</b>: Use this method to valuate the input located at the <tt>iPos</tt> position of the instance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPos</tt>
   <dd>  Input position, from 1 to the size of the list returned by </dd>
<a href="#GetOldInputs">GetOldInputs</a>  
    <dt><tt> iSelection</tt>
   <dd>  A <tt>CATPathElement</tt> with the object. This path must contain the full selection
  path for a valid import mechanism in multidocument context.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <code>E_FAIL</code> if the valuation fails, <code>S_OK</code> otherwise.
</dl>
</dl>
<a name="UseIdenticalName"></a><a name="UseIdenticalName(CATBaseUnknown_var)"></a> <dt> o <b>UseIdenticalName</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>UseIdenticalName</b>(<td> const <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown_var</a> <td><tt>iRoot</tt>) = 0  </table></dt>
<dl>
  <dd>
 Valuates automatically all the inputs of the instance.
 <br><b>Role</b>: This method tries to find a feature for each input, looking for features having
 the same 
<a href="../ObjectModelerBase/interface_CATIAlias_15531.htm">CATIAlias</a> name than the role of the input. <br>After this method, some inputs may be still unvaluated. Test the valuation 
 with the 
<a href="#GetNewInput">GetNewInput</a> method.  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRoot</tt>
   <dd>  The location where to search for the inputs.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <code>E_FAIL</code> if the <tt>iRoot</tt> argument is not valid, <code>S_OK</code> otherwise.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIUdfInstantiate.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATUdfInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
