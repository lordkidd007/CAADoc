<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisInterfaces Interface CATISamEditionCmd</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAnalysisInterfaces.htm" href="../CATAnalysisInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAnalysisInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATISamEditionCmd"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAnalysisInterfaces Interface CATISamEditionCmd</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISamEditionCmd_38995','CATISamEditionCmd','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATISamEditionCmd</b>
</p>
<p>
<b><i> Basic Component Edition.</i></b><br>

 <b>Role:</b> Basic components provide dialog entities to deal with their edition, <br>
 thanks to interfaces CATISamEditWithCmd or CATISamEditWithFrame.<br>
 This edition dialog entity can be of two kinds :
 <ul>
 <li><b>CATDlgFrame</b> 
 <li><b>CATStateCommand</b> if it needs to get the selection management to access 
 </ul>
 CATStateCommand corresponding to the second case must implement this interface.
 Interface providing services to integrate the implementing CATStateCommand
 to the Edition Command of the Analysis Entity.
 <p>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISamEditWithCmd','','CATISamEditWithCmd') </script>, <script type="text/javascript"> activateLinkAnchor('CATISamEditionFrame','','CATISamEditionFrame') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AnalyseSelection()"><b>AnalyseSelection</b></a>()
<dd>  Warns the implementing command that its Selection Agents are plugged on Selection Event.
 <dt> o 
    <a href="#GetFeature(CATISpecObject_var&amp;)"><b>GetFeature</b></a>(CATISpecObject_var&amp;)
<dd>  Retrieve the Basic Component associated the editor.
 <dt> o 
    <a href="#GetModificationFrame(CATDialog*)"><b>GetModificationFrame</b></a>(CATDialog*)
<dd>  Returns the Frame associated to the implementing CATStateCommand.
 <dt> o 
    <a href="#GetModificationNotification(CATCommand*&amp;,CATNotification*&amp;)"><b>GetModificationNotification</b></a>(CATCommand*&amp;,CATNotification*&amp;)
<dd>  Returns the notification that will be sent, each time the implementing command
 modify the value of the edited Basic Component.
 <dt> o 
    <a href="#GetQuerySelectFocusNotif(CATCommand*&amp;,CATSamQuerySelectFocusNotification*&amp;)"><b>GetQuerySelectFocusNotif</b></a>(CATCommand*&amp;,CATSamQuerySelectFocusNotification*&amp;)
<dd>  Returns the notification that will be sent, each time the implementing command
 wants to get the management of the selection in the document.
 <dt> o 
    <a href="#IgnoreSelection()"><b>IgnoreSelection</b></a>()
<dd>  Warns the implementing command that its Selection Agents aren't plugged on Selection Event 
 anymore.
 <dt> o 
    <a href="#IsAnalysingSelection()"><b>IsAnalysingSelection</b></a>()
<dd>  Warns if the selection have been checked.
 <dt> o 
    <a href="#SetFeature(CATISpecObject_var&amp;)"><b>SetFeature</b></a>(CATISpecObject_var&amp;)
<dd>  Associates the editor to  Basic Component.
 <dt> o 
    <a href="#UnreferenceFrame()"><b>UnreferenceFrame</b></a>()
<dd>  Informs the implementing CATStateCommand that its associated Frame doesn't exist anymore.
 <dt> o 
    <a href="#UpdateFrame()"><b>UpdateFrame</b></a>()
<dd>  Informs the implementing CATStateCommand that its associated Frame has to be updated according
 to the edited Basic component.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AnalyseSelection"></a><a name="AnalyseSelection()"></a> <dt> o <b>AnalyseSelection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AnalyseSelection</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Warns the implementing command that its Selection Agents are plugged on Selection Event. 
 That is to say, the implementing command deals with the selection management.
</dl>
<a name="GetFeature"></a><a name="GetFeature(CATISpecObject_var&amp;)"></a> <dt> o <b>GetFeature</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetFeature</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oFeature</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieve the Basic Component associated the editor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFeature</tt>
   <dd>  Basic component edited by the implemented CATStateCommand.</dd>
</dl>
</dl>
</dl>
<a name="GetModificationFrame"></a><a name="GetModificationFrame(CATDialog*)"></a> <dt> o <b>GetModificationFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDlgFrame','CATDlgFrame *')</script>  <b>GetModificationFrame</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iParent</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Frame associated to the implementing CATStateCommand.
 This Frame will be integrated to the Edition Command of the Analysis Entity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd> Active CATDialog in which the Frame will appear.</dd>
</dl>
</dl>
</dl>
<a name="GetModificationNotification"></a><a name="GetModificationNotification(CATCommand*&amp;,CATNotification*&amp;)"></a> <dt> o <b>GetModificationNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetModificationNotification</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*&amp;')</script> <td><tt>oFromCmd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*&amp;')</script> <td><tt>oNotif</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the notification that will be sent, each time the implementing command
 modify the value of the edited Basic Component.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFromCmd</tt>
   <dd> CATCommand that will send the notification.
 </dd>
    <dt><tt> oNotif</tt>
   <dd> CATNotification dedicated to warn the Edition Command of the Analysis Entity.</dd>
</dl>
</dl>
</dl>
<a name="GetQuerySelectFocusNotif"></a><a name="GetQuerySelectFocusNotif(CATCommand*&amp;,CATSamQuerySelectFocusNotification*&amp;)"></a> <dt> o <b>GetQuerySelectFocusNotif</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetQuerySelectFocusNotif</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*&amp;')</script> <td><tt>oFromCmd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamQuerySelectFocusNotification','CATSamQuerySelectFocusNotification*&amp;')</script> <td><tt>oNotif</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the notification that will be sent, each time the implementing command
 wants to get the management of the selection in the document.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFromCmd</tt>
   <dd> CATCommand that will send the notification.
 </dd>
    <dt><tt> oNotif</tt>
   <dd> CATNotification dedicated to warn the Edition Command of the Analysis Entity,
 that it must delegate the selection management to the implementing command.</dd>
</dl>
</dl>
</dl>
<a name="IgnoreSelection"></a><a name="IgnoreSelection()"></a> <dt> o <b>IgnoreSelection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>IgnoreSelection</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Warns the implementing command that its Selection Agents aren't plugged on Selection Event 
 anymore. That is to say, the implementing command doesn't deal with the selection management
 anymore.
</dl>
<a name="IsAnalysingSelection"></a><a name="IsAnalysingSelection()"></a> <dt> o <b>IsAnalysingSelection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsAnalysingSelection</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Warns if the selection have been checked.
 Return 1 if the implementing command deals with the selection management.
 Return 0 else.
</dl>
<a name="SetFeature"></a><a name="SetFeature(CATISpecObject_var&amp;)"></a> <dt> o <b>SetFeature</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFeature</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iFeature</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Associates the editor to  Basic Component.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFeature</tt>
   <dd>  Basic component edited by the implemented CATStateCommand.</dd>
</dl>
</dl>
</dl>
<a name="UnreferenceFrame"></a><a name="UnreferenceFrame()"></a> <dt> o <b>UnreferenceFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>UnreferenceFrame</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Informs the implementing CATStateCommand that its associated Frame doesn't exist anymore.
</dl>
<a name="UpdateFrame"></a><a name="UpdateFrame()"></a> <dt> o <b>UpdateFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>UpdateFrame</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Informs the implementing CATStateCommand that its associated Frame has to be updated according
 to the edited Basic component.
 WARNING ! This method must not send a Modification Notification.
</dl>
<hr>
 This object is included in the file: <b>CATISamEditionCmd.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAnalysisInterface</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

