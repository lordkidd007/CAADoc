<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPDMReconcile Class CATEpeFirstLevelInstance</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPDMReconcile.htm" href="../CATPDMReconcile.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPDMReconcile";	}
		function getCurrentObjectName() { 
 	return "CATEpeFirstLevelInstance"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPDMReconcile <script type="text/javascript" > writeClassCharacteristic(); </script> CATEpeFirstLevelInstance</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATEpeFirstLevelInstance_39828','CATEpeFirstLevelInstance','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATEpeFirstLevelInstance</b>
</p>
<p>
<b><i> Class representing an assembly relation between two parts.</i></b><br>


 <b>Role</b>:
 Define an Assembly relation between two <script type="text/javascript"> activateLinkAnchor('CATEpePartVersion','','CATEpePartVersion') </script>. They could be stored in CATIA & in VPDM repository.
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetChildPart()"><b>GetChildPart</b></a>()
<dd>  Gets child part in assembly relation.
 <dt> o 
    <a href="#GetExposedEntity()"><b>GetExposedEntity</b></a>()
<dd>  Access to object reconciliator internal object.
 <dt> o 
    <a href="#GetExposedEntity(CATScmFirstLevelInstance*)"><b>GetExposedEntity</b></a>(CATScmFirstLevelInstance*)
<dd>  Access to CAA reconciliator object from other reconciliator objects.
 <dt> o 
    <a href="#GetFatherPart()"><b>GetFatherPart</b></a>()
<dd>  Gets father part in assembly relation.
 <dt> o 
    <a href="#GetPosition()"><b>GetPosition</b></a>()
<dd>  Gets child part position.
 <dt> o 
    <a href="#SetChildPart(CATEpePartVersion* const)"><b>SetChildPart</b></a>(CATEpePartVersion* const)
<dd>  Sets child part in assembly relation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetChildPart"></a><a name="GetChildPart()"></a> <dt> o <b>GetChildPart</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATEpePartVersion','CATEpePartVersion *')</script>  <b>GetChildPart</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets child part in assembly relation.

 <br><b>Role</b>: Gets child part in assembly relation.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Child Part Version.
</dl>
</dl>
<a name="GetExposedEntity"></a><a name="GetExposedEntity()"></a> <dt> o <b>GetExposedEntity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATScmFirstLevelInstance','CATScmFirstLevelInstance *')</script>  <b>GetExposedEntity</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Access to object reconciliator internal object.

 <b>Role:</b> Access to object reconciliator internal object..
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns <b><i>NULL</i></b> if one error occur, otherwise provide access
 associated  <b><i>CATScmFirstLevelInstance</i></b>.
</dl>
</dl>
<a name="GetExposedEntity"></a><a name="GetExposedEntity(CATScmFirstLevelInstance*)"></a> <dt> o <b>GetExposedEntity</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATEpeFirstLevelInstance','CATEpeFirstLevelInstance *')</script>  <b>GetExposedEntity</b>(<td> const <script type="text/javascript"> activateLink('CATScmFirstLevelInstance','CATScmFirstLevelInstance*')</script> <td><tt>ixObj</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Access to CAA reconciliator object from other reconciliator objects.

 <b>Role:</b> Access to CAA reconciliator object from other reconciliator objects.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns <b><i>NULL</i></b> if one error occur, otherwise provide access
 associated <b><i>CATEpeFirstLevelInstance</i></b>. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixObj</tt>
   <dd>  Internal session entity.</dd>
</dl>
</dl>
</dl>
<a name="GetFatherPart"></a><a name="GetFatherPart()"></a> <dt> o <b>GetFatherPart</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATEpePartVersion','CATEpePartVersion *')</script>  <b>GetFatherPart</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets father part in assembly relation.

 <br><b>Role</b>: Gets father part in assembly relation.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Father Part Version.
</dl>
</dl>
<a name="GetPosition"></a><a name="GetPosition()"></a> <dt> o <b>GetPosition</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathTransformation','const CATMathTransformation &')</script>  <b>GetPosition</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets child part position.

 <br><b>Role</b>: Gets child part position relative to its part father.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Child position.
</dl>
</dl>
<a name="SetChildPart"></a><a name="SetChildPart(CATEpePartVersion* const)"></a> <dt> o <b>SetChildPart</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetChildPart</b>(<td><script type="text/javascript"> activateLink('CATEpePartVersion*','CATEpePartVersion* const')</script> <td><tt>ixChild</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets child part in assembly relation.

 <br><b>Role</b>: Sets child part in assembly relation.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixChild</tt>
   <dd> Child Part Version.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATEpeFirstLevelInstance.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPDMReconcileModel</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

