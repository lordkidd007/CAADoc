<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricOperators Class CATIntersectionCrvSur</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GeometricOperators.htm">This Framework</a>  <a href="class_CATIntersectionCrvCrv_91517.htm">Previous</a>  <a href="class_CATIntersectionSurSur_93177.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GeometricOperators Class CATIntersectionCrvSur</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../GeometricObjects/class_CATCGMOperator_38910.htm">GeometricObjects.CATCGMOperator</a>
    |
    +---<a href="../GeometricOperators/class_CATGeoOperator_40602.htm">GeometricOperators.CATGeoOperator</a>
      |
      +---CATIntersectionCrvSur
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATIntersectionCrvSur</b>
</p>
<p>
<b><i> Class defining the operator of the intersection of a curve and a surface.</i></b><br>

<br>The operator outputs the isolated solutions (points) and the
 overlapping solutions (curves).
<ul>
<li>The CATIntersectionCrvSur operator is created with the <tt>CreateIntersection</tt> method and 
 directly <tt>delete</tt>d with the usual C++ delete operator.
 It is is not streamable. 
<li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. The advanced mode also allows you to
 run the same operator with different curves or surfaces.
<li>In both cases, the result is accessed with two specific interators, one for the solution points,
 the other for the solution curves.
</ul></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATIntersectionCrvSur()"><b>~CATIntersectionCrvSur</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeginningCurve()"><b>BeginningCurve</b></a>()
<dd>  Initializes the iterator of the solution curves of <tt>this</tt> 
 CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#BeginningPoint()"><b>BeginningPoint</b></a>()
<dd>  Initializes the iterator of the resulting points.
 <dt> o 
    <a href="#GetCartesianPoint()"><b>GetCartesianPoint</b></a>()
<dd>  Createss the next solution point of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#GetCurveBoundaries()"><b>GetCurveBoundaries</b></a>()
<dd>  Returns the domain of the next resulting curve of <tt>this</tt>
 CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#GetCurveParam()"><b>GetCurveParam</b></a>()
<dd>  Returns the parameter on the curve of the next solution point of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#GetEdgeCurve()"><b>GetEdgeCurve</b></a>()
<dd>  Creates the next solution curve as an edge curve.
 <dt> o 
    <a href="#GetNumberOfCurves()"><b>GetNumberOfCurves</b></a>()
<dd>  Returns the number of solution curves of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#GetNumberOfPoints()"><b>GetNumberOfPoints</b></a>()
<dd>  Returns the number of isolated solution points of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#GetPCurve()"><b>GetPCurve</b></a>()
<dd>  Creates the next solution curve of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#GetPointOnCurve()"><b>GetPointOnCurve</b></a>()
<dd>  Creates the next solution point on curve of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#GetPointOnSurface()"><b>GetPointOnSurface</b></a>()
<dd>  Returns the next solution point on surface of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#GetSignatureOn()"><b>GetSignatureOn</b></a>()
<dd>  Returns the relative orientation of the curve tangent and the surface normal at the intersection point.
 <dt> o 
    <a href="#GetSurfaceParam()"><b>GetSurfaceParam</b></a>()
<dd>  Returns the parameter on the surface of the next solution point of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#NextCurve()"><b>NextCurve</b></a>()
<dd>  Skips to the next solution curve of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#NextPoint()"><b>NextPoint</b></a>()
<dd>  Skips to the next solution point of <tt>this</tt> CATIntersectionCrvSur operator.
 <dt> o 
    <a href="#SetCurve(CATCurve*)"><b>SetCurve</b></a>(CATCurve*)
<dd>  Defines the intersection with another curve (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetLimits(CATCrvLimits&amp;)"><b>SetLimits</b></a>(CATCrvLimits&amp;)
<dd>  Modifies the curve domain to take into account for <tt>this</tt> CATIntersectionCrvSur
 operator (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetLimits(CATSurLimits&amp;)"><b>SetLimits</b></a>(CATSurLimits&amp;)
<dd>  Modifies the surface domain to take into account for <tt>this</tt> CATIntersectionCrvSur
 operator (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetSurface(CATSurface*)"><b>SetSurface</b></a>(CATSurface*)
<dd>  Defines the intersection with another second surface (<tt>ADVANCED</tt> mode).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATIntersectionCrvSur"></a><a name="~CATIntersectionCrvSur()"></a> <dt> o <b>~CATIntersectionCrvSur</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATIntersectionCrvSur</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="BeginningCurve"></a><a name="BeginningCurve()"></a> <dt> o <b>BeginningCurve</b>

<dt>  <table><tr><td>  public virtual void  <b>BeginningCurve</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Initializes the iterator of the solution curves of <tt>this</tt> 
 CATIntersectionCrvSur operator.
<br>By default, the initialization is performed once the operator runs, 
 and this is therefore only used to read the solutions again.
</dl>
<a name="BeginningPoint"></a><a name="BeginningPoint()"></a> <dt> o <b>BeginningPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>BeginningPoint</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Initializes the iterator of the resulting points.
<br>By default, the initialization is performed once the operator runs, 
 and this is therefore only used to read the solutions again.
</dl>
<a name="GetCartesianPoint"></a><a name="GetCartesianPoint()"></a> <dt> o <b>GetCartesianPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricObjects/interface_CATCartesianPoint_59978.htm">CATCartesianPoint *</a>  <b>GetCartesianPoint</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Createss the next solution point of <tt>this</tt> CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetCurveBoundaries"></a><a name="GetCurveBoundaries()"></a> <dt> o <b>GetCurveBoundaries</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricObjects/class_CATCrvLimits_29800.htm">CATCrvLimits</a>  <b>GetCurveBoundaries</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the domain of the next resulting curve of <tt>this</tt>
 CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The corresponding limitations.
</dl>
</dl>
<a name="GetCurveParam"></a><a name="GetCurveParam()"></a> <dt> o <b>GetCurveParam</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricObjects/class_CATCrvParam_24184.htm">CATCrvParam</a>  <b>GetCurveParam</b>(<td>)const =0  </table></dt>
<dl>
  <dd>
 Returns the parameter on the curve of the next solution point of <tt>this</tt> CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter.
</dl>
</dl>
<a name="GetEdgeCurve"></a><a name="GetEdgeCurve()"></a> <dt> o <b>GetEdgeCurve</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricObjects/interface_CATEdgeCurve_28850.htm">CATEdgeCurve *</a>  <b>GetEdgeCurve</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates the next solution curve as an edge curve.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created edge curve, composed of a part of the initial curve, and the corresponding
 part as a curve on the surface. 
 A new curve is created each time this method is called.
 If you do not want to keep the created curve, use the 
<a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetNumberOfCurves"></a><a name="GetNumberOfCurves()"></a> <dt> o <b>GetNumberOfCurves</b>

<dt>  <table><tr><td>  public virtual <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a>  <b>GetNumberOfCurves</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the number of solution curves of <tt>this</tt> CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of solution curves.
</dl>
</dl>
<a name="GetNumberOfPoints"></a><a name="GetNumberOfPoints()"></a> <dt> o <b>GetNumberOfPoints</b>

<dt>  <table><tr><td>  public virtual <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a>  <b>GetNumberOfPoints</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the number of isolated solution points of <tt>this</tt> CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of isolated solution points.
</dl>
</dl>
<a name="GetPCurve"></a><a name="GetPCurve()"></a> <dt> o <b>GetPCurve</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricObjects/interface_CATPCurve_16231.htm">CATPCurve *</a>  <b>GetPCurve</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Creates the next solution curve of <tt>this</tt> CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created curve on surface. A new curve is created each time this method is called.
 If you do not want to keep the created curve, use the 
<a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetPointOnCurve"></a><a name="GetPointOnCurve()"></a> <dt> o <b>GetPointOnCurve</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricObjects/interface_CATPointOnCurve_46166.htm">CATPointOnCurve *</a>  <b>GetPointOnCurve</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Creates the next solution point on curve of <tt>this</tt> CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point on curve. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetPointOnSurface"></a><a name="GetPointOnSurface()"></a> <dt> o <b>GetPointOnSurface</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricObjects/interface_CATPointOnSurface_58772.htm">CATPointOnSurface *</a>  <b>GetPointOnSurface</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns the next solution point on surface of <tt>this</tt> CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point on surface. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetSignatureOn"></a><a name="GetSignatureOn()"></a> <dt> o <b>GetSignatureOn</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricOperators/enum_CATIntersectionSign_75388.htm">CATIntersectionSign</a>  <b>GetSignatureOn</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the relative orientation of the curve tangent and the surface normal at the intersection point.
<dl><dt><tt>CATIntersectionSignNegative</tt><dd> The scalar product between the curve tangent at the intersection point, 
 and the surface normal at the intersection point is negative. 
    <dt><tt>CATIntersectionSignPositive</tt><dd> The scalar product between the curve tangent at the intersection point, 
 and the surface normal at the intersection point is positive. 
</dl>
</dl>
<a name="GetSurfaceParam"></a><a name="GetSurfaceParam()"></a> <dt> o <b>GetSurfaceParam</b>

<dt>  <table><tr><td>  public virtual <a href="../GeometricObjects/class_CATSurParam_24459.htm">CATSurParam</a>  <b>GetSurfaceParam</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the parameter on the surface of the next solution point of <tt>this</tt> CATIntersectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter.
</dl>
</dl>
<a name="NextCurve"></a><a name="NextCurve()"></a> <dt> o <b>NextCurve</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>NextCurve</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Skips to the next solution curve of <tt>this</tt> CATIntersectionCrvSur operator.
<br>After <tt>BeginningCurve</tt>, it skips to the first curve. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The existence of the next solution.
 <br><b>Legal values</b>:
<dl><dt><tt>TRUE</tt> <dd>if there is a solution curve
    <dt><tt>FALSE</tt> <dd>no more solution curve.</dl>
</dl>
</dl>
<a name="NextPoint"></a><a name="NextPoint()"></a> <dt> o <b>NextPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>NextPoint</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Skips to the next solution point of <tt>this</tt> CATIntersectionCrvSur operator.
<br>After <tt>BeginningPoint</tt>, it skips to the first point. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The existence of the next solution.
 <br><b>Legal values</b>:
<dl><dt><tt>TRUE</tt> <dd>if there is a solution point
    <dt><tt>FALSE</tt> <dd>no more solution point.</dl>
</dl>
</dl>
<a name="SetCurve"></a><a name="SetCurve(CATCurve*)"></a> <dt> o <b>SetCurve</b>

<dt>  <table><tr><td>  public virtual void  <b>SetCurve</b>(<td> const <a href="../GeometricObjects/interface_CATCurve_13104.htm">CATCurve*</a> <td><tt>iNewCurve</tt>) = 0  </table></dt>
<dl>
  <dd>
 Defines the intersection with another curve (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewCurve</tt>
   <dd> The pointer to the new curve.</dd>
</dl>
</dl>
</dl>
<a name="SetLimits"></a><a name="SetLimits(CATCrvLimits&amp;)"></a> <dt> o <b>SetLimits</b>

<dt>  <table><tr><td>  public virtual void  <b>SetLimits</b>(<td> const <a href="../GeometricObjects/class_CATCrvLimits_29800.htm">CATCrvLimits&amp;</a> <td><tt>iNewLimits</tt>) = 0  </table></dt>
<dl>
  <dd>
 Modifies the curve domain to take into account for <tt>this</tt> CATIntersectionCrvSur
 operator (<tt>ADVANCED</tt> mode).
<br> It does not change the current curve 
 limitations.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewLimits</tt>
   <dd> The new limitations of the curve.</dd>
</dl>
</dl>
</dl>
<a name="SetLimits"></a><a name="SetLimits(CATSurLimits&amp;)"></a> <dt> o <b>SetLimits</b>

<dt>  <table><tr><td>  public virtual void  <b>SetLimits</b>(<td> const <a href="../GeometricObjects/class_CATSurLimits_30090.htm">CATSurLimits&amp;</a> <td><tt>iNewLimits</tt>) = 0  </table></dt>
<dl>
  <dd>
 Modifies the surface domain to take into account for <tt>this</tt> CATIntersectionCrvSur
 operator (<tt>ADVANCED</tt> mode).
<br> It does not change the current surface 
 limitations. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewLimits</tt>
   <dd> The new limitations of the surface.</dd>
</dl>
</dl>
</dl>
<a name="SetSurface"></a><a name="SetSurface(CATSurface*)"></a> <dt> o <b>SetSurface</b>

<dt>  <table><tr><td>  public virtual void  <b>SetSurface</b>(<td> const <a href="../GeometricObjects/interface_CATSurface_20172.htm">CATSurface*</a> <td><tt>iNewSurface</tt>) = 0  </table></dt>
<dl>
  <dd>
 Defines the intersection with another second surface (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewSurface</tt>
   <dd> The pointer to the new surface.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIntersectionCrvSur.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricOperators</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
