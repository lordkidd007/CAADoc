<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisResources Class CATEAnalysisUpgrade</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAnalysisResources.htm" href="../CATAnalysisResources.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAnalysisResources";	}
		function getCurrentObjectName() { 
 	return "CATEAnalysisUpgrade"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAnalysisResources <script type="text/javascript" > writeClassCharacteristic(); </script> CATEAnalysisUpgrade</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATEAnalysisUpgrade_39002','CATEAnalysisUpgrade','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATEAnalysisUpgrade</b>
</p>
<p>
<b><i> Adapter for the implementation of CATISamUpgrade interface.</i></b><br>

 It can be used for AnalysisEntity or AnalysisSet.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISamUpgrade','','CATISamUpgrade') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATEAnalysisUpgrade()"><b>CATEAnalysisUpgrade</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#~CATEAnalysisUpgrade()"><b>~CATEAnalysisUpgrade</b></a>()
<dd>  Default destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CheckMultiLayer(CATISamBasicComponent*)"><b>CheckMultiLayer</b></a>(CATISamBasicComponent*)
<dd>  Toolkit MultiLayerManager.
 <dt> o 
    <a href="#FindInList(CATUnicodeString&amp;,CATLISTV(CATBaseUnknown_var)&amp;)"><b>FindInList</b></a>(CATUnicodeString&amp;,CATLISTV(CATBaseUnknown_var)&amp;)
<dd>  Toolkit to retrieve if a basic component name is in the list.
 <dt> o 
    <a href="#GetValuesOnInstanceOrStartup(CATBoolean,CATISpecObject*)"><b>GetValuesOnInstanceOrStartup</b></a>(CATBoolean,CATISpecObject*)
<dd>  Retrieves the list of values attributes.
 <dt> o 
    <a href="#NeedToUpgrade()"><b>NeedToUpgrade</b></a>()
<dd>  Returns if the startup needs to be upgraded.
 <dt> o 
    <a href="#RemoveBasicComp(CATISamBasicComponent*)"><b>RemoveBasicComp</b></a>(CATISamBasicComponent*)
<dd>  Removes a basic componenent.
 <dt> o 
    <a href="#Upgrade()"><b>Upgrade</b></a>()
<dd>  Upgrade the instance.
 <dt> o 
    <a href="#UpgradeMultiLayer(CATISamBasicComponent*)"><b>UpgradeMultiLayer</b></a>(CATISamBasicComponent*)
<dd>  Toolkit MultiLayerManager.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATEAnalysisUpgrade"></a><a name="CATEAnalysisUpgrade()"></a> <dt> o <b>CATEAnalysisUpgrade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATEAnalysisUpgrade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="~CATEAnalysisUpgrade"></a><a name="~CATEAnalysisUpgrade()"></a> <dt> o <b>~CATEAnalysisUpgrade</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATEAnalysisUpgrade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="CheckMultiLayer"></a><a name="CheckMultiLayer(CATISamBasicComponent*)"></a> <dt> o <b>CheckMultiLayer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>CheckMultiLayer</b>(<td> const <script type="text/javascript"> activateLink('CATISamBasicComponent','CATISamBasicComponent*')</script> <td><tt>ipiBasicComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Toolkit MultiLayerManager. 
 <p>Allows to add new columns defined in the startup based on a comparison of the instance and it's startup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiBasicComp</tt>
   <dd> The  MultiLayerManager basic component.</dd>
</dl>
</dl>
</dl>
<a name="FindInList"></a><a name="FindInList(CATUnicodeString&amp;,CATLISTV(CATBaseUnknown_var)&amp;)"></a> <dt> o <b>FindInList</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>FindInList</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>iLCompThis</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Toolkit to retrieve if a basic component name is in the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> Name to Retrieve. </dd>
    <dt><tt> iLCompThis</tt>
   <dd> The list. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   TRUE is in the list. <br><b>Legal values</b>:
 <ul><li><font color="red">TRUE</font color="red"> Is in the list. </li>
     <li><font color="red">FALSE</font color="red"> Not in the list. </li> <ul>
</dl>
</dl>
<a name="GetValuesOnInstanceOrStartup"></a><a name="GetValuesOnInstanceOrStartup(CATBoolean,CATISpecObject*)"></a> <dt> o <b>GetValuesOnInstanceOrStartup</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATListValCATBaseUnknown','CATListValCATBaseUnknown_var*')</script>  <b>GetValuesOnInstanceOrStartup</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOnStartUp</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>ipiInstance</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of values attributes.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnStartUp</tt>
   <dd> informs is check is done on startup TRUE or on the instance FALSE </dd>
    <dt><tt> ipiInstance</tt>
   <dd> Instance pointer.</dd>
</dl>
</dl>
</dl>
<a name="NeedToUpgrade"></a><a name="NeedToUpgrade()"></a> <dt> o <b>NeedToUpgrade</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>NeedToUpgrade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns if the startup needs to be upgraded.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   Status of upgrade need. <br> The default implementation is based on a comparison of the instance and it's startup.
 <br><b>Legal values</b>:
 <ul><li><font color="red">TRUE</font color="red"> Instance needs to be upgraded. </li>
     <li><font color="red">FALSE</font color="red"> No need to upgrade. </li> <ul>
</dl>
</dl>
<a name="RemoveBasicComp"></a><a name="RemoveBasicComp(CATISamBasicComponent*)"></a> <dt> o <b>RemoveBasicComp</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveBasicComp</b>(<td> const <script type="text/javascript"> activateLink('CATISamBasicComponent','CATISamBasicComponent*')</script> <td><tt>ipiBasicComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a basic componenent.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiBasicComp</tt>
   <dd> Instance pointer.</dd>
</dl>
</dl>
</dl>
<a name="Upgrade"></a><a name="Upgrade()"></a> <dt> o <b>Upgrade</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Upgrade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Upgrade the instance.
 The default implementation is based on a comparison of the instance and it's startup.<br>
 It adds the basic components defined on the startup and missing on the instance.
</dl>
<a name="UpgradeMultiLayer"></a><a name="UpgradeMultiLayer(CATISamBasicComponent*)"></a> <dt> o <b>UpgradeMultiLayer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UpgradeMultiLayer</b>(<td> const <script type="text/javascript"> activateLink('CATISamBasicComponent','CATISamBasicComponent*')</script> <td><tt>ipiBasicComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Toolkit MultiLayerManager.
 <p>Allows to add new columns defined in the startup based on a comparison of the instance and it's startup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiBasicComp</tt>
   <dd> The  MultiLayerManager basic component.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATEAnalysisUpgrade.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAnalysisResources</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

