<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMHelix</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="interface_CATIGSMHealing_36840.htm">Previous</a>  <a href="interface_CATIGSMIntegratedLaw_78262.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMHelix</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIGSMHelix
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMHelix</b>
</p>
<p>
<b><i> Interface to helix feature.</i></b><br>

 <b>Role</b>: Allows you to access data of the Helix feature created by using 
 an axis, a starting point, a pitch, a height and 2 angle values.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMFactory_38152.htm#CreateHelix">CATIGSMFactory.CreateHelix</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAxis()"><b>GetAxis</b></a>()
<dd>  Gets the helix axis.
 <dt> o 
    <a href="#GetHeight(CATICkeParm_var&amp;)"><b>GetHeight</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the height of the helix.
 <dt> o 
    <a href="#GetHeight(double&amp;)"><b>GetHeight</b></a>(double&amp;)
<dd>  Gets the height of the helix.
 <dt> o 
    <a href="#GetInvertAxis(CATBoolean&amp;)"><b>GetInvertAxis</b></a>(CATBoolean&amp;)
<dd>  Gets the orientation.
 <dt> o 
    <a href="#GetPitch(CATICkeParm_var&amp;)"><b>GetPitch</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the pitch of the helix.
 <dt> o 
    <a href="#GetPitch(double&amp;)"><b>GetPitch</b></a>(double&amp;)
<dd>  Gets the pitch of the helix.
 <dt> o 
    <a href="#GetPitch2(CATICkeParm_var&amp;)"><b>GetPitch2</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the second pitch of the helix.
 <dt> o 
    <a href="#GetPitch2(double&amp;)"><b>GetPitch2</b></a>(double&amp;)
<dd>  Gets the second pitch of the helix.
 <dt> o 
    <a href="#GetPitchLawType(enum CATGSMBasicLawType&amp;)"><b>GetPitchLawType</b></a>(enum CATGSMBasicLawType&amp;)
<dd>  Gets pitch law type.
 <dt> o 
    <a href="#GetProfile()"><b>GetProfile</b></a>()
<dd>  Gets the profile of the helix.
 <dt> o 
    <a href="#GetRevolutions(CATICkeParm_var&amp;)"><b>GetRevolutions</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the revolution number of the helix.
 <dt> o 
    <a href="#GetRevolutions(double&amp;)"><b>GetRevolutions</b></a>(double&amp;)
<dd>  Gets the revolution number of the helix.
 <dt> o 
    <a href="#GetStartingAngle(CATICkeParm_var&amp;)"><b>GetStartingAngle</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the helix starting angle.
 <dt> o 
    <a href="#GetStartingAngle(double&amp;)"><b>GetStartingAngle</b></a>(double&amp;)
<dd>  Gets the helix starting angle.
 <dt> o 
    <a href="#GetStartingPoint()"><b>GetStartingPoint</b></a>()
<dd>  Gets the starting point of the helix.
 <dt> o 
    <a href="#GetTaperAngle(CATICkeParm_var&amp;)"><b>GetTaperAngle</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the helix taper angle.
 <dt> o 
    <a href="#GetTaperAngle(double&amp;)"><b>GetTaperAngle</b></a>(double&amp;)
<dd>  Gets the helix taper angle.
 <dt> o 
    <a href="#GetTaperOutward(CATBoolean&amp;)"><b>GetTaperOutward</b></a>(CATBoolean&amp;)
<dd>  Gets the taper angle sense of variation.
 <dt> o 
    <a href="#InvertAxis()"><b>InvertAxis</b></a>()
<dd>  Inverts the orientation of the axis.
 <dt> o 
    <a href="#SetAxis(CATISpecObject_var)"><b>SetAxis</b></a>(CATISpecObject_var)
<dd>  Sets the helix axis.
 <dt> o 
    <a href="#SetClockwiseRevolution(CATBoolean)"><b>SetClockwiseRevolution</b></a>(CATBoolean)
<dd>  Sets the sense of revolutions.
 <dt> o 
    <a href="#SetHeight(CATICkeParm_var)"><b>SetHeight</b></a>(CATICkeParm_var)
<dd>  Sets the helix height.
 <dt> o 
    <a href="#SetHeight(double)"><b>SetHeight</b></a>(double)
<dd>  Sets the helix height.
 <dt> o 
    <a href="#SetInvertAxis(CATBoolean)"><b>SetInvertAxis</b></a>(CATBoolean)
<dd>  Sets the orientation.
 <dt> o 
    <a href="#SetPitch(CATICkeParm_var)"><b>SetPitch</b></a>(CATICkeParm_var)
<dd>   Sets the helix pitch.
 <dt> o 
    <a href="#SetPitch(double)"><b>SetPitch</b></a>(double)
<dd>   Sets the helix pitch.
 <dt> o 
    <a href="#SetPitch2(CATICkeParm_var)"><b>SetPitch2</b></a>(CATICkeParm_var)
<dd>   Sets the helix second pitch.
 <dt> o 
    <a href="#SetPitch2(double)"><b>SetPitch2</b></a>(double)
<dd>   Sets the helix second pitch.
 <dt> o 
    <a href="#SetPitchLawType(enum CATGSMBasicLawType)"><b>SetPitchLawType</b></a>(enum CATGSMBasicLawType)
<dd>  Sets pitch law type.
 <dt> o 
    <a href="#SetProfile(CATISpecObject_var)"><b>SetProfile</b></a>(CATISpecObject_var)
<dd>  Sets the profile.
 <dt> o 
    <a href="#SetRevolutions(CATICkeParm_var)"><b>SetRevolutions</b></a>(CATICkeParm_var)
<dd>  Sets the revolution number.
 <dt> o 
    <a href="#SetRevolutions(double)"><b>SetRevolutions</b></a>(double)
<dd>  Sets the revolution number.
 <dt> o 
    <a href="#SetStartingAngle(CATICkeParm_var)"><b>SetStartingAngle</b></a>(CATICkeParm_var)
<dd>  Sets the starting angle.
 <dt> o 
    <a href="#SetStartingAngle(double)"><b>SetStartingAngle</b></a>(double)
<dd>  Sets the starting angle.
 <dt> o 
    <a href="#SetStartingPoint(CATISpecObject_var)"><b>SetStartingPoint</b></a>(CATISpecObject_var)
<dd>  Sets the starting point.
 <dt> o 
    <a href="#SetTaperAngle(CATICkeParm_var)"><b>SetTaperAngle</b></a>(CATICkeParm_var)
<dd>  Sets the taper angle.
 <dt> o 
    <a href="#SetTaperAngle(double)"><b>SetTaperAngle</b></a>(double)
<dd>  Sets the taper angle.
 <dt> o 
    <a href="#SetTaperOutward(CATBoolean)"><b>SetTaperOutward</b></a>(CATBoolean)
<dd>  Sets the taper angle sense of variation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAxis"></a><a name="GetAxis()"></a> <dt> o <b>GetAxis</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>GetAxis</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the helix axis.
 T<br> Note: he starting point must not be on the helix axis
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>       The helix axis
</dl>
</dl>
<a name="GetHeight"></a><a name="GetHeight(CATICkeParm_var&amp;)"></a> <dt> o <b>GetHeight</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetHeight</b>(<td>CATICkeParm_var&amp; <td><tt>oHeight</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the height of the helix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHeight</tt>
   <dd>      The helix height.</dd>
</dl>
</dl>
</dl>
<a name="GetHeight"></a><a name="GetHeight(double&amp;)"></a> <dt> o <b>GetHeight</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetHeight</b>(<td>double&amp; <td><tt>oHeight</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the height of the helix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHeight</tt>
   <dd>      The helix height.</dd>
</dl>
</dl>
</dl>
<a name="GetInvertAxis"></a><a name="GetInvertAxis(CATBoolean&amp;)"></a> <dt> o <b>GetInvertAxis</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetInvertAxis</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oInvert</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the orientation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInvert</tt>
   <dd>      <br>: FALSE   means that there is no invertion (natural orientation)
      <br>: TRUE    to invert this orientation</dd>
</dl>
</dl>
</dl>
<a name="GetPitch"></a><a name="GetPitch(CATICkeParm_var&amp;)"></a> <dt> o <b>GetPitch</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPitch</b>(<td>CATICkeParm_var&amp; <td><tt>oPitch</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the pitch of the helix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPitch</tt>
   <dd>      The helix pitch.</dd>
</dl>
</dl>
</dl>
<a name="GetPitch"></a><a name="GetPitch(double&amp;)"></a> <dt> o <b>GetPitch</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPitch</b>(<td>double&amp; <td><tt>oPitch</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the pitch of the helix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPitch</tt>
   <dd>      The helix pitch.</dd>
</dl>
</dl>
</dl>
<a name="GetPitch2"></a><a name="GetPitch2(CATICkeParm_var&amp;)"></a> <dt> o <b>GetPitch2</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPitch2</b>(<td>CATICkeParm_var&amp; <td><tt>oPitch</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the second pitch of the helix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPitch</tt>
   <dd>      The helix second pitch.</dd>
</dl>
</dl>
</dl>
<a name="GetPitch2"></a><a name="GetPitch2(double&amp;)"></a> <dt> o <b>GetPitch2</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPitch2</b>(<td>double&amp; <td><tt>oPitch</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the second pitch of the helix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPitch</tt>
   <dd>      The helix second pitch.</dd>
</dl>
</dl>
</dl>
<a name="GetPitchLawType"></a><a name="GetPitchLawType(enum CATGSMBasicLawType&amp;)"></a> <dt> o <b>GetPitchLawType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPitchLawType</b>(<td>enum CATGSMBasicLawType&amp; <td><tt>oType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets pitch law type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>      Type of law (from CATGSMBasicLawType enumeration).
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMBasicLawType_63060.htm">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="GetProfile"></a><a name="GetProfile()"></a> <dt> o <b>GetProfile</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>GetProfile</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the profile of the helix.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>      The profile
</dl>
</dl>
<a name="GetRevolutions"></a><a name="GetRevolutions(CATICkeParm_var&amp;)"></a> <dt> o <b>GetRevolutions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRevolutions</b>(<td>CATICkeParm_var&amp; <td><tt>oRevolutions</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the revolution number of the helix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRevolutions</tt>
   <dd>      Revolutions.</dd>
</dl>
</dl>
</dl>
<a name="GetRevolutions"></a><a name="GetRevolutions(double&amp;)"></a> <dt> o <b>GetRevolutions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRevolutions</b>(<td>double&amp; <td><tt>oRevolutions</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the revolution number of the helix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRevolutions</tt>
   <dd>      Revolutions.</dd>
</dl>
</dl>
</dl>
<a name="GetStartingAngle"></a><a name="GetStartingAngle(CATICkeParm_var&amp;)"></a> <dt> o <b>GetStartingAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetStartingAngle</b>(<td>CATICkeParm_var&amp; <td><tt>oStartingAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the helix starting angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartingAngle</tt>
   <dd>      The starting angle.</dd>
</dl>
</dl>
</dl>
<a name="GetStartingAngle"></a><a name="GetStartingAngle(double&amp;)"></a> <dt> o <b>GetStartingAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetStartingAngle</b>(<td>double&amp; <td><tt>oStartingAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the helix starting angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartingAngle</tt>
   <dd>      The starting angle.</dd>
</dl>
</dl>
</dl>
<a name="GetStartingPoint"></a><a name="GetStartingPoint()"></a> <dt> o <b>GetStartingPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>GetStartingPoint</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the starting point of the helix.
 <br> Note: The starting point must not be on the helix axis
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>      The starting point
</dl>
</dl>
<a name="GetTaperAngle"></a><a name="GetTaperAngle(CATICkeParm_var&amp;)"></a> <dt> o <b>GetTaperAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetTaperAngle</b>(<td>CATICkeParm_var&amp; <td><tt>oTaperAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the helix taper angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTaperAngle</tt>
   <dd>     The taper angle.</dd>
</dl>
</dl>
</dl>
<a name="GetTaperAngle"></a><a name="GetTaperAngle(double&amp;)"></a> <dt> o <b>GetTaperAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetTaperAngle</b>(<td>double&amp; <td><tt>oTaperAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the helix taper angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTaperAngle</tt>
   <dd>      The taper angle.</dd>
</dl>
</dl>
</dl>
<a name="GetTaperOutward"></a><a name="GetTaperOutward(CATBoolean&amp;)"></a> <dt> o <b>GetTaperOutward</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetTaperOutward</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oTaperOutward</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the taper angle sense of variation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTaperOutward</tt>
   <dd>      <br>: FALSE   means that helix radius decreases
      <br>: TRUE    means that helix radius increases</dd>
</dl>
</dl>
</dl>
<a name="InvertAxis"></a><a name="InvertAxis()"></a> <dt> o <b>InvertAxis</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>InvertAxis</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Inverts the orientation of the axis.
</dl>
<a name="SetAxis"></a><a name="SetAxis(CATISpecObject_var)"></a> <dt> o <b>SetAxis</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetAxis</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iElem1</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the helix axis.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem1</tt>
   <dd>      The new helix axis.</dd>
</dl>
</dl>
</dl>
<a name="SetClockwiseRevolution"></a><a name="SetClockwiseRevolution(CATBoolean)"></a> <dt> o <b>SetClockwiseRevolution</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetClockwiseRevolution</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iClockwise</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the sense of revolutions.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClockwise</tt>
   <dd>     <br> : FALSE   means that revolutions are counter-clockwise
     <br> : TRUE    means that revolutions are clockwise</dd>
</dl>
</dl>
</dl>
<a name="SetHeight"></a><a name="SetHeight(CATICkeParm_var)"></a> <dt> o <b>SetHeight</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetHeight</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iHeight</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the helix height.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeight</tt>
   <dd>      The new height value.</dd>
</dl>
</dl>
</dl>
<a name="SetHeight"></a><a name="SetHeight(double)"></a> <dt> o <b>SetHeight</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetHeight</b>(<td>double <td><tt>iHeight</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the helix height.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeight</tt>
   <dd>      The new height value.</dd>
</dl>
</dl>
</dl>
<a name="SetInvertAxis"></a><a name="SetInvertAxis(CATBoolean)"></a> <dt> o <b>SetInvertAxis</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetInvertAxis</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iInvert</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the orientation. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInvert</tt>
   <dd>    <br> :  FALSE means that there is no invertion of the natural orientation 
    <br> :  TRUE  to invert this orientation</dd>
</dl>
</dl>
</dl>
<a name="SetPitch"></a><a name="SetPitch(CATICkeParm_var)"></a> <dt> o <b>SetPitch</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPitch</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iPitch</tt>) = 0  </table></dt>
<dl>
  <dd>
  Sets the helix pitch.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPitch</tt>
   <dd>      The new second pitch value.</dd>
</dl>
</dl>
</dl>
<a name="SetPitch"></a><a name="SetPitch(double)"></a> <dt> o <b>SetPitch</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPitch</b>(<td>double <td><tt>iPitch</tt>) = 0  </table></dt>
<dl>
  <dd>
  Sets the helix pitch.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPitch</tt>
   <dd>      The new pitch value.</dd>
</dl>
</dl>
</dl>
<a name="SetPitch2"></a><a name="SetPitch2(CATICkeParm_var)"></a> <dt> o <b>SetPitch2</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPitch2</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iPitch</tt>) = 0  </table></dt>
<dl>
  <dd>
  Sets the helix second pitch.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPitch</tt>
   <dd>      The new second pitch value.</dd>
</dl>
</dl>
</dl>
<a name="SetPitch2"></a><a name="SetPitch2(double)"></a> <dt> o <b>SetPitch2</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPitch2</b>(<td>double <td><tt>iPitch</tt>) = 0  </table></dt>
<dl>
  <dd>
  Sets the helix second pitch.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPitch</tt>
   <dd>      The new second pitch value.</dd>
</dl>
</dl>
</dl>
<a name="SetPitchLawType"></a><a name="SetPitchLawType(enum CATGSMBasicLawType)"></a> <dt> o <b>SetPitchLawType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPitchLawType</b>(<td> const enum CATGSMBasicLawType <td><tt>iType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets pitch law type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>      Type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_SType.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMBasicLawType_63060.htm">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="SetProfile"></a><a name="SetProfile(CATISpecObject_var)"></a> <dt> o <b>SetProfile</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetProfile</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iElem1</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the profile.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem1</tt>
   <dd>      New profile.
 <br> Note: iElem1 = NULL_var unsets the profile.</dd>
</dl>
</dl>
</dl>
<a name="SetRevolutions"></a><a name="SetRevolutions(CATICkeParm_var)"></a> <dt> o <b>SetRevolutions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRevolutions</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iRevolutions</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the revolution number.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRevolutions</tt>
   <dd>      The new revolutions value.</dd>
</dl>
</dl>
</dl>
<a name="SetRevolutions"></a><a name="SetRevolutions(double)"></a> <dt> o <b>SetRevolutions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRevolutions</b>(<td>double <td><tt>iRevolutions</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the revolution number.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRevolutions</tt>
   <dd>      The new revolutions value.</dd>
</dl>
</dl>
</dl>
<a name="SetStartingAngle"></a><a name="SetStartingAngle(CATICkeParm_var)"></a> <dt> o <b>SetStartingAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetStartingAngle</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iStartingAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the starting angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartingAngle</tt>
   <dd>      The new starting angle value.</dd>
</dl>
</dl>
</dl>
<a name="SetStartingAngle"></a><a name="SetStartingAngle(double)"></a> <dt> o <b>SetStartingAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetStartingAngle</b>(<td>double <td><tt>iStartingAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the starting angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartingAngle</tt>
   <dd>      The new starting angle value.</dd>
</dl>
</dl>
</dl>
<a name="SetStartingPoint"></a><a name="SetStartingPoint(CATISpecObject_var)"></a> <dt> o <b>SetStartingPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetStartingPoint</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iElem1</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the starting point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem1</tt>
   <dd>      New starting point.</dd>
</dl>
</dl>
</dl>
<a name="SetTaperAngle"></a><a name="SetTaperAngle(CATICkeParm_var)"></a> <dt> o <b>SetTaperAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetTaperAngle</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iTaperAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the taper angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTaperAngle</tt>
   <dd>      The new taper angle value.</dd>
</dl>
</dl>
</dl>
<a name="SetTaperAngle"></a><a name="SetTaperAngle(double)"></a> <dt> o <b>SetTaperAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetTaperAngle</b>(<td>double <td><tt>iTaperAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the taper angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTaperAngle</tt>
   <dd>      The new taper angle value.</dd>
</dl>
</dl>
</dl>
<a name="SetTaperOutward"></a><a name="SetTaperOutward(CATBoolean)"></a> <dt> o <b>SetTaperOutward</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetTaperOutward</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iTaperOutward</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the taper angle sense of variation. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTaperOutward</tt>
   <dd>     <br> : FALSE   means that helix radius decreases
     <br> : TRUE    means that helix radius increases</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMHelix.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
