<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMLoft</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="interface_CATIGSMLineTangency_70639.htm">Previous</a>  <a href="interface_CATIGSMMask_21974.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMLoft</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIGSMLoft
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMLoft</b>
</p>
<p>
<b><i> Interface to loft surface feature.</i></b><br>

 <b>Role</b>: Allows you to access data of the Loft feature.
 <p>  LICENSING INFORMATION: Creation of volume result requires GSO License
 <br> if GSO License is not granted , settting of Volume context has not effect 
 <br> 
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMFactory_38152.htm#CreateLoft">CATIGSMFactory.CreateLoft</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddGuide(CATISpecObject_var,CATGSMLoftAddType,CATISpecObject_var)"><b>AddGuide</b></a>(CATISpecObject_var,CATGSMLoftAddType,CATISpecObject_var)
<dd>  Adds guide to the lofted surface.
 <dt> o 
    <a href="#AddSection(CATISpecObject_var,CATGSMLoftAddType,CATISpecObject_var)"><b>AddSection</b></a>(CATISpecObject_var,CATGSMLoftAddType,CATISpecObject_var)
<dd>  Adds section to the lofted surface.
 <dt> o 
    <a href="#AddSection(CATISpecObject_var,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATGSMClosingPointCreationDiag&amp;,CATGSMLoftAddType,CATISpecObject_var)"><b>AddSection</b></a>(CATISpecObject_var,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATGSMClosingPointCreationDiag&amp;,CATGSMLoftAddType,CATISpecObject_var)
<dd>  Adds section to the lofted surface.
 <dt> o 
    <a href="#GetAllGuides(CATLISTV(CATISpecObject_var)&amp;)"><b>GetAllGuides</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Gets informations about the guides of the lofted surface.
 <dt> o 
    <a href="#GetAllGuides(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;)"><b>GetAllGuides</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;)
<dd>  Gets informations about the guides of the lofted surface.
 <dt> o 
    <a href="#GetAllSections(CATLISTV(CATISpecObject_var)&amp;,CATListOfInt&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;)"><b>GetAllSections</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATListOfInt&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;)
<dd>  Gets informations about the sections of the lofted surface.
 <dt> o 
    <a href="#GetBooleanOperation(int&amp;)"><b>GetBooleanOperation</b></a>(int&amp;)
<dd>  Gets boolean operation for closed lofted surface.
 <dt> o 
    <a href="#GetCanonicalDetection(CATGSMCanonicalSurfaceDetection&amp;)"><b>GetCanonicalDetection</b></a>(CATGSMCanonicalSurfaceDetection&amp;)
<dd>  Gets information about detection of canonical surfaces of the output surface.
 <dt> o 
    <a href="#GetCompSectionTangent(CATGSMComputedTangentType&amp;,CATGSMComputedTangentType&amp;)"><b>GetCompSectionTangent</b></a>(CATGSMComputedTangentType&amp;,CATGSMComputedTangentType&amp;)
<dd>  Gets if the tangent is a computed tangent surface to the start section or end section 
   from the lofted surface.
 <dt> o 
    <a href="#GetContext(CATGSMFeatureContextType&amp;)"><b>GetContext</b></a>(CATGSMFeatureContextType&amp;)
<dd>  Gets context type for existing feature.
 <dt> o 
    <a href="#GetFacesForClosing(CATISpecObject_var&amp;,CATISpecObject_var&amp;)"><b>GetFacesForClosing</b></a>(CATISpecObject_var&amp;,CATISpecObject_var&amp;)
<dd>  Gets if the tangent is a computed tangent surface to the start section or end section 
   from the lofted surface.
 <dt> o 
    <a href="#GetRelimitation(int&amp;)"><b>GetRelimitation</b></a>(int&amp;)
<dd>  Gets informations about relimitation of the lofted surface.
 <dt> o 
    <a href="#GetSectionCoupling(int&amp;)"><b>GetSectionCoupling</b></a>(int&amp;)
<dd>  Gets informations about the coupling between section of the lofted surface.
 <dt> o 
    <a href="#GetSmoothAngleThreshold(CATICkeParm_var&amp;)"><b>GetSmoothAngleThreshold</b></a>(CATICkeParm_var&amp;)
<dd>  Gets angular threshold value (angle) 
 allowed during lofting operation in order to smooth it.
 <dt> o 
    <a href="#GetSmoothAngleThreshold(double&amp;)"><b>GetSmoothAngleThreshold</b></a>(double&amp;)
<dd>  Gets angular threshold value (angle) 
 allowed during lofting operation in order to smooth it.
 <dt> o 
    <a href="#GetSmoothAngleThresholdActivity(CATBoolean&amp;)"><b>GetSmoothAngleThresholdActivity</b></a>(CATBoolean&amp;)
<dd>  Gets information whether a angular threshold 
 is allowed or not during lofting operation in order to smooth it.
 <dt> o 
    <a href="#GetSmoothDeviation(CATICkeParm_var&amp;)"><b>GetSmoothDeviation</b></a>(CATICkeParm_var&amp;)
<dd>  Gets deviation value (length) 
 allowed during lofting operation in order to smooth it.
 <dt> o 
    <a href="#GetSmoothDeviation(double&amp;)"><b>GetSmoothDeviation</b></a>(double&amp;)
<dd>  Gets deviation value (length) 
 allowed during lofting operation in order to smooth it.
 <dt> o 
    <a href="#GetSmoothDeviationActivity(CATBoolean&amp;)"><b>GetSmoothDeviationActivity</b></a>(CATBoolean&amp;)
<dd>  Gets information whether a deviation 
 is allowed or not during lofting operation in order to smooth it.
 <dt> o 
    <a href="#GetSpine(int&amp;,CATISpecObject_var&amp;)"><b>GetSpine</b></a>(int&amp;,CATISpecObject_var&amp;)
<dd>  Gets the spine of the lofted surface.
 <dt> o 
    <a href="#ModifyGuideCurve(CATISpecObject_var,CATISpecObject_var)"><b>ModifyGuideCurve</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Modifies the curve of a guide from the lofted surface.
 <dt> o 
    <a href="#ModifySectionCurve(CATISpecObject_var,CATISpecObject_var)"><b>ModifySectionCurve</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Modifies the curve of section from the lofted surface.
 <dt> o 
    <a href="#ModifySectionCurve(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATGSMClosingPointCreationDiag&amp;)"><b>ModifySectionCurve</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATGSMClosingPointCreationDiag&amp;)
<dd>  Modifies the curve of section from the lofted surface.
 <dt> o 
    <a href="#ModifySectionOrient(CATISpecObject_var,CATGSMOrientation)"><b>ModifySectionOrient</b></a>(CATISpecObject_var,CATGSMOrientation)
<dd>  Modifies the orientation of the curve of a section from the lofted surface.
 <dt> o 
    <a href="#RemoveFaceForClosing(CATISpecObject_var)"><b>RemoveFaceForClosing</b></a>(CATISpecObject_var)
<dd>  Removes face used to close the lofted surface.
 <dt> o 
    <a href="#RemoveGuide(CATISpecObject_var)"><b>RemoveGuide</b></a>(CATISpecObject_var)
<dd>  Removes guide from the lofted surface.
 <dt> o 
    <a href="#RemoveGuideTangent(CATISpecObject_var)"><b>RemoveGuideTangent</b></a>(CATISpecObject_var)
<dd>  Removes a tangent surface of a guide from the lofted surface.
 <dt> o 
    <a href="#RemoveSection(CATISpecObject_var)"><b>RemoveSection</b></a>(CATISpecObject_var)
<dd>  Removes section from the lofted surface.
 <dt> o 
    <a href="#RemoveSectionPoint(CATISpecObject_var)"><b>RemoveSectionPoint</b></a>(CATISpecObject_var)
<dd>  Removes a closing point of a section from the lofted surface.
 <dt> o 
    <a href="#RemoveSectionTangent(CATISpecObject_var)"><b>RemoveSectionTangent</b></a>(CATISpecObject_var)
<dd>  Removes the tangent surface of a section from the lofted surface.
 <dt> o 
    <a href="#SetBooleanOperation(CATGSMLoftBooleanOp)"><b>SetBooleanOperation</b></a>(CATGSMLoftBooleanOp)
<dd>  Sets boolean operation for closed lofted surface.
 <dt> o 
    <a href="#SetCanonicalDetection(CATGSMCanonicalSurfaceDetection)"><b>SetCanonicalDetection</b></a>(CATGSMCanonicalSurfaceDetection)
<dd>  Sets information about detection of canonical surfaces of the output surface.
 <dt> o 
    <a href="#SetCompSectionTangent(CATISpecObject_var,CATGSMComputedTangentType)"><b>SetCompSectionTangent</b></a>(CATISpecObject_var,CATGSMComputedTangentType)
<dd>  Sets a computed tangent surface to the start section or end section.
 <dt> o 
    <a href="#SetContext(CATGSMFeatureContextType)"><b>SetContext</b></a>(CATGSMFeatureContextType)
<dd>  Sets context type to generate a Surface or Volume.
 <dt> o 
    <a href="#SetFaceForClosing(CATISpecObject_var,CATISpecObject_var)"><b>SetFaceForClosing</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Sets face for closing the lofted surface.
 <dt> o 
    <a href="#SetGuideTangent(CATISpecObject_var,CATISpecObject_var)"><b>SetGuideTangent</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Sets a tangent surface to a guide from the lofted surface.
 <dt> o 
    <a href="#SetRelimitation(CATGSMLoftRelimitationType)"><b>SetRelimitation</b></a>(CATGSMLoftRelimitationType)
<dd>  Sets informations about relimitation of the lofted surface.
 <dt> o 
    <a href="#SetSectionCoupling(CATGSMCouplingType)"><b>SetSectionCoupling</b></a>(CATGSMCouplingType)
<dd>  Sets informations about the coupling between section of the lofted surface.
 <dt> o 
    <a href="#SetSectionPoint(CATISpecObject_var,CATISpecObject_var)"><b>SetSectionPoint</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Sets a closing point to a section from the lofted surface.
 <dt> o 
    <a href="#SetSectionTangent(CATISpecObject_var,CATISpecObject_var)"><b>SetSectionTangent</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Sets a tangent surface to a section from the lofted surface.
 <dt> o 
    <a href="#SetSmoothAngleThreshold(CATICkeParm_var&amp;)"><b>SetSmoothAngleThreshold</b></a>(CATICkeParm_var&amp;)
<dd>  Sets angular threshold value (angle) 
 allowed during lofting operation in order to smooth it.
 <dt> o 
    <a href="#SetSmoothAngleThreshold(double)"><b>SetSmoothAngleThreshold</b></a>(double)
<dd>  Sets angular threshold value (angle) 
 allowed during lofting operation in order to smooth it.
 <dt> o 
    <a href="#SetSmoothAngleThresholdActivity(CATBoolean)"><b>SetSmoothAngleThresholdActivity</b></a>(CATBoolean)
<dd>  Sets information whether a angular threshold 
 is allowed or not during lofting operation in order to smooth it.
 <dt> o 
    <a href="#SetSmoothDeviation(CATICkeParm_var&amp;)"><b>SetSmoothDeviation</b></a>(CATICkeParm_var&amp;)
<dd>  Sets deviation value (length) 
 allowed during lofting operation in order to smooth it.
 <dt> o 
    <a href="#SetSmoothDeviation(double)"><b>SetSmoothDeviation</b></a>(double)
<dd>  Sets deviation value (length) 
 allowed during lofting operation in order to smooth it.
 <dt> o 
    <a href="#SetSmoothDeviationActivity(CATBoolean)"><b>SetSmoothDeviationActivity</b></a>(CATBoolean)
<dd>  Sets information whether a deviation 
 is allowed or not during lofting operation in order to smooth it.
 <dt> o 
    <a href="#SetSpine(CATGSMLoftSpineType,CATISpecObject_var)"><b>SetSpine</b></a>(CATGSMLoftSpineType,CATISpecObject_var)
<dd>  Sets the spine to the lofted surface.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddGuide"></a><a name="AddGuide(CATISpecObject_var,CATGSMLoftAddType,CATISpecObject_var)"></a> <dt> o <b>AddGuide</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddGuide</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iGuide</tt>,<tr><td></td><td> const <a href="../GSMInterfaces/enum_CATGSMLoftAddType_55741.htm">CATGSMLoftAddType</a> <td><tt>iAddType</tt><td><tt>= CATGSMLoftAdd </tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iGuideRef</tt><td><tt>= NULL_var </tt>)= 0  </table></dt>
<dl>
  <dd>
 Adds guide to the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide</tt>
   <dd>     guide curve to be added
   </dd>
    <dt><tt> iAddType</tt>
   <dd>     type of adding : 
     CATGSMLoftAdd, iSection will be added at the end of 
     the guide list.
     CATGSMLoftAddAfter, iGuide will be added after iGuideRef.
     CATGSMLoftAddBefore, iGuide will be added before iGuideRef.
        </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftAddType_55741.htm">CATGSMLoftAddType</a>
    <dt><tt> iGuideRef</tt>
   <dd>     guide curve used as a reference for CATGSMLoftAddAfter and 
     CATGSMLoftAddBefore adding type</dd>
</dl>
</dl>
<a name="AddSection"></a><a name="AddSection(CATISpecObject_var,CATGSMLoftAddType,CATISpecObject_var)"></a> <dt> o <b>AddSection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddSection</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td> const <a href="../GSMInterfaces/enum_CATGSMLoftAddType_55741.htm">CATGSMLoftAddType</a> <td><tt>iAddType</tt><td><tt>= CATGSMLoftAdd </tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSectionRef</tt><td><tt>= NULL_var </tt>)= 0  </table></dt>
<dl>
  <dd>
 Adds section to the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>     section curve to be added
   </dd>
    <dt><tt> iAddType</tt>
   <dd>     type of adding : 
     CATGSMLoftAdd, iSection will be added at the end of 
     the section list.
     CATGSMLoftAddAfter, iSection will be added after iSectionRef.
     CATGSMLoftAddBefore, iSection will be added before iSectionRef.
        </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftAddType_55741.htm">CATGSMLoftAddType</a>
    <dt><tt> iSectionRef</tt>
   <dd>     section curve used as a reference for CATGSMLoftAddAfter and 
     CATGSMLoftAddBefore adding type</dd>
</dl>
</dl>
<a name="AddSection"></a><a name="AddSection(CATISpecObject_var,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATGSMClosingPointCreationDiag&amp;,CATGSMLoftAddType,CATISpecObject_var)"></a> <dt> o <b>AddSection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddSection</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td>CATISpecObject_var&amp; <td><tt>oCurveSection</tt>,<tr><td></td><td>CATISpecObject_var&amp; <td><tt>oClosingPoint</tt>,<tr><td></td><td><a href="../GSMInterfaces/enum_CATGSMClosingPointCreationDiag_179738.htm">CATGSMClosingPointCreationDiag&amp;</a> <td><tt>oPtDiag</tt>,<tr><td></td><td> const <a href="../GSMInterfaces/enum_CATGSMLoftAddType_55741.htm">CATGSMLoftAddType</a> <td><tt>iAddType</tt><td><tt>= CATGSMLoftAdd </tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSectionRef</tt><td><tt>= NULL_var </tt>)= 0  </table></dt>
<dl>
  <dd>
 Adds section to the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>     section to be added : curve or face.
   </dd>
    <dt><tt> oCurveSection</tt>
   <dd>     if iSection is a face, oCurveSection is the boundary of the face.
     oCurveSection is used as section curve.
     if Part design, the face is used to close the Loft.
   </dd>
    <dt><tt> oClosingPoint</tt>
   <dd>     if iSection is a closed curve, oClosingPoint is a new closing point
     of iSection.
     if iSection is a face, oClosingPoint is a new closing point the boundary
     of iSection.
   </dd>
    <dt><tt> oPtDiag</tt>
   <dd>     Closing Point diagnosis.
        </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMClosingPointCreationDiag_179738.htm">CATGSMClosingPointCreationDiag</a>
    <dt><tt> iAddType</tt>
   <dd>     type of adding : 
     CATGSMLoftAdd, iSection will be added at the end of 
     the section list.
     CATGSMLoftAddAfter, iSection will be added after iSectionRef.
     CATGSMLoftAddBefore, iSection will be added before iSectionRef.
        </dd>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftAddType_55741.htm">CATGSMLoftAddType</a>
    <dt><tt> iSectionRef</tt>
   <dd>     section curve used as a reference for CATGSMLoftAddAfter and 
     CATGSMLoftAddBefore adding type</dd>
</dl>
</dl>
<a name="GetAllGuides"></a><a name="GetAllGuides(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetAllGuides</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAllGuides</b>(<td><a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)&amp;</a> <td><tt>oGuides</tt>)= 0  </table></dt>
<dl>
  <dd>
 Gets informations about the guides of the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGuides</tt>
   <dd>      list of the guides curves.</dd>
</dl>
</dl>
</dl>
<a name="GetAllGuides"></a><a name="GetAllGuides(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetAllGuides</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAllGuides</b>(<td><a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)&amp;</a> <td><tt>oGuides</tt>,<tr><td></td><td><a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)&amp;</a> <td><tt>oGuideTangents</tt>)= 0  </table></dt>
<dl>
  <dd>
 Gets informations about the guides of the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGuides</tt>
   <dd>      list of the guides curves.
   </dd>
    <dt><tt> oGuideTangents</tt>
   <dd>      list of the tangents corresponding to the guides curves.</dd>
</dl>
</dl>
</dl>
<a name="GetAllSections"></a><a name="GetAllSections(CATLISTV(CATISpecObject_var)&amp;,CATListOfInt&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>GetAllSections</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAllSections</b>(<td><a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)&amp;</a> <td><tt>oSections</tt>,<tr><td></td><td><a href="../System/typedef_CATListOfInt_28620.htm">CATListOfInt&amp;</a> <td><tt>oOrientation</tt>,<tr><td></td><td><a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)&amp;</a> <td><tt>oPoint</tt>,<tr><td></td><td>CATISpecObject_var&amp; <td><tt>oStartSectionTangent</tt>,<tr><td></td><td>CATISpecObject_var&amp; <td><tt>oEndSectionTangent</tt>)= 0  </table></dt>
<dl>
  <dd>
 Gets informations about the sections of the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSections</tt>
   <dd>      list of the section curves.
   </dd>
    <dt><tt> oOrientation</tt>
   <dd>      list of the orientations of the section curves.
   </dd>
    <dt><tt> oPoint</tt>
   <dd>      list of the closing points corresponding to the section curves.
   </dd>
    <dt><tt> oStartSectionTangent</tt>
   <dd>      tangent surface at start section.
   </dd>
    <dt><tt> oEndSectionTangent</tt>
   <dd>      tangent surface at end section.</dd>
</dl>
</dl>
</dl>
<a name="GetBooleanOperation"></a><a name="GetBooleanOperation(int&amp;)"></a> <dt> o <b>GetBooleanOperation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetBooleanOperation</b>(<td>int&amp; <td><tt>oOperation</tt>)= 0  </table></dt>
<dl>
  <dd>
 Gets boolean operation for closed lofted surface.
 TO BE USED ONLY for Part Loft (closed loft)
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOperation</tt>
   <dd>      type of operation.
         </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftBooleanOp_70409.htm">CATGSMLoftBooleanOp</a>
</dl>
</dl>
<a name="GetCanonicalDetection"></a><a name="GetCanonicalDetection(CATGSMCanonicalSurfaceDetection&amp;)"></a> <dt> o <b>GetCanonicalDetection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCanonicalDetection</b>(<td><a href="../GSMInterfaces/enum_CATGSMCanonicalSurfaceDetection_193637.htm">CATGSMCanonicalSurfaceDetection&amp;</a> <td><tt>oDetection</tt>) =0  </table></dt>
<dl>
  <dd>
 Gets information about detection of canonical surfaces of the output surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDetection</tt>
   <dd>     if canonical surfaces are detected and converted into plane or not and how;
     possible values are CATGSMNoDetection, CATGSMPlaneOnlyDetection and CATGSMCanonicalDetection.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMCanonicalSurfaceDetection_193637.htm">CATGSMCanonicalSurfaceDetection</a>
</dl>
</dl>
<a name="GetCompSectionTangent"></a><a name="GetCompSectionTangent(CATGSMComputedTangentType&amp;,CATGSMComputedTangentType&amp;)"></a> <dt> o <b>GetCompSectionTangent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCompSectionTangent</b>(<td><a href="../GSMInterfaces/enum_CATGSMComputedTangentType_127265.htm">CATGSMComputedTangentType&amp;</a> <td><tt>oStartCompSectionTangent</tt>,<tr><td></td><td><a href="../GSMInterfaces/enum_CATGSMComputedTangentType_127265.htm">CATGSMComputedTangentType&amp;</a> <td><tt>oEndCompSectionTangent</tt>)= 0  </table></dt>
<dl>
  <dd>
 Gets if the tangent is a computed tangent surface to the start section or end section 
   from the lofted surface.
 The section must have been set as a face. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartCompSectionTangent</tt>
   <dd>      start section tangent is computed or not,  
        </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMComputedTangentType_127265.htm">CATGSMComputedTangentType</a>
    <dt><tt> oEndCompSectionTangent</tt>
   <dd>      end section tangent is computed or not,  
        </dd>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMComputedTangentType_127265.htm">CATGSMComputedTangentType</a>
</dl>
</dl>
<a name="GetContext"></a><a name="GetContext(CATGSMFeatureContextType&amp;)"></a> <dt> o <b>GetContext</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetContext</b>(<td><a href="../GSMInterfaces/enum_CATGSMFeatureContextType_117904.htm">CATGSMFeatureContextType&amp;</a> <td><tt>oContextType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets context type for existing feature.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oContextType</tt>
   <dd>      CATGSMSurfaceCtxt if the result is surface, CATGSMVolumeCtxt if it is volume
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMFeatureContextType_117904.htm">CATGSMFeatureContextType</a>
</dl>
</dl>
<a name="GetFacesForClosing"></a><a name="GetFacesForClosing(CATISpecObject_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>GetFacesForClosing</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFacesForClosing</b>(<td>CATISpecObject_var&amp; <td><tt>oStartFace</tt>,<tr><td></td><td>CATISpecObject_var&amp; <td><tt>oEndFace</tt>)= 0  </table></dt>
<dl>
  <dd>
 Gets if the tangent is a computed tangent surface to the start section or end section 
   from the lofted surface.
 The section must have been set as a face. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartFace</tt>
   <dd>      start face used to close the loft.  
      NULL_var, if there is no start face.
   </dd>
    <dt><tt> oEndFace</tt>
   <dd>      end face used to close the loft.  
      NULL_var, if there is no end face.</dd>
</dl>
</dl>
</dl>
<a name="GetRelimitation"></a><a name="GetRelimitation(int&amp;)"></a> <dt> o <b>GetRelimitation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRelimitation</b>(<td>int&amp; <td><tt>oRelimitation</tt>)=0  </table></dt>
<dl>
  <dd>
 Gets informations about relimitation of the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRelimitation</tt>
   <dd>      type of relimitation. 
         </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftRelimitationType_138802.htm">CATGSMLoftRelimitationType</a>
</dl>
</dl>
<a name="GetSectionCoupling"></a><a name="GetSectionCoupling(int&amp;)"></a> <dt> o <b>GetSectionCoupling</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSectionCoupling</b>(<td>int&amp; <td><tt>oCoupling</tt>)= 0   </table></dt>
<dl>
  <dd>
 Gets informations about the coupling between section of the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoupling</tt>
   <dd>      type of coupling between section. 
          </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMCouplingType_65320.htm">CATGSMCouplingType</a>
</dl>
</dl>
<a name="GetSmoothAngleThreshold"></a><a name="GetSmoothAngleThreshold(CATICkeParm_var&amp;)"></a> <dt> o <b>GetSmoothAngleThreshold</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSmoothAngleThreshold</b>(<td>CATICkeParm_var&amp; <td><tt>ohSmoothAngleThresholdCkeParm</tt>) =0  </table></dt>
<dl>
  <dd>
 Gets angular threshold value (angle) 
 allowed during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohSmoothAngleThresholdCkeParm</tt>
   <dd>      Length literal feature.</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothAngleThreshold"></a><a name="GetSmoothAngleThreshold(double&amp;)"></a> <dt> o <b>GetSmoothAngleThreshold</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSmoothAngleThreshold</b>(<td>double&amp; <td><tt>oSmoothAngleThreshold</tt>) =0  </table></dt>
<dl>
  <dd>
 Gets angular threshold value (angle) 
 allowed during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSmoothAngleThreshold</tt>
   <dd>      Numerical value.</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothAngleThresholdActivity"></a><a name="GetSmoothAngleThresholdActivity(CATBoolean&amp;)"></a> <dt> o <b>GetSmoothAngleThresholdActivity</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSmoothAngleThresholdActivity</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>isSmoothAngleThresholdActivity</tt>) =0  </table></dt>
<dl>
  <dd>
 Gets information whether a angular threshold 
 is allowed or not during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isSmoothAngleThresholdActivity</tt>
   <dd>      TRUE or FALSE (FALSE if not specified).</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothDeviation"></a><a name="GetSmoothDeviation(CATICkeParm_var&amp;)"></a> <dt> o <b>GetSmoothDeviation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSmoothDeviation</b>(<td>CATICkeParm_var&amp; <td><tt>ohSmoothDeviationCkeParm</tt>) =0  </table></dt>
<dl>
  <dd>
 Gets deviation value (length) 
 allowed during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohSmoothDeviationCkeParm</tt>
   <dd>      Length literal feature.</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothDeviation"></a><a name="GetSmoothDeviation(double&amp;)"></a> <dt> o <b>GetSmoothDeviation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSmoothDeviation</b>(<td>double&amp; <td><tt>oSmoothDeviation</tt>) =0  </table></dt>
<dl>
  <dd>
 Gets deviation value (length) 
 allowed during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSmoothDeviation</tt>
   <dd>      Numerical value.</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothDeviationActivity"></a><a name="GetSmoothDeviationActivity(CATBoolean&amp;)"></a> <dt> o <b>GetSmoothDeviationActivity</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSmoothDeviationActivity</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>isSmoothDeviationActivity</tt>) =0  </table></dt>
<dl>
  <dd>
 Gets information whether a deviation 
 is allowed or not during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isSmoothDeviationActivity</tt>
   <dd>      TRUE or FALSE (FALSE if not specified).</dd>
</dl>
</dl>
</dl>
<a name="GetSpine"></a><a name="GetSpine(int&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>GetSpine</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSpine</b>(<td>int&amp; <td><tt>oSpineType</tt>,<tr><td></td><td>CATISpecObject_var&amp; <td><tt>oSpine</tt>)= 0  </table></dt>
<dl>
  <dd>
 Gets the spine of the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSpineType</tt>
   <dd>      type of spine.
      </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftSpineType_72081.htm">CATGSMLoftSpineType</a>
    <dt><tt> oSpine</tt>
   <dd>      curve used as a spine, if iSpineType = CATGSMLoftUserSpine</dd>
</dl>
</dl>
<a name="ModifyGuideCurve"></a><a name="ModifyGuideCurve(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>ModifyGuideCurve</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ModifyGuideCurve</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iGuide</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iNewGuide</tt>)= 0  </table></dt>
<dl>
  <dd>
 Modifies the curve of a guide from the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide</tt>
   <dd>      guide curve to be replaced.
   </dd>
    <dt><tt> iNewGuide</tt>
   <dd>      guide curve, will replace iGuide.</dd>
</dl>
</dl>
</dl>
<a name="ModifySectionCurve"></a><a name="ModifySectionCurve(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>ModifySectionCurve</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ModifySectionCurve</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iNewSection</tt>)= 0  </table></dt>
<dl>
  <dd>
 Modifies the curve of section from the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve to be replaced.
   </dd>
    <dt><tt> iNewSection</tt>
   <dd>      section curve, will replace iSection.</dd>
</dl>
</dl>
</dl>
<a name="ModifySectionCurve"></a><a name="ModifySectionCurve(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATGSMClosingPointCreationDiag&amp;)"></a> <dt> o <b>ModifySectionCurve</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ModifySectionCurve</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iNewSection</tt>,<tr><td></td><td>CATISpecObject_var&amp; <td><tt>oCurveSection</tt>,<tr><td></td><td>CATISpecObject_var&amp; <td><tt>oClosingPoint</tt>,<tr><td></td><td><a href="../GSMInterfaces/enum_CATGSMClosingPointCreationDiag_179738.htm">CATGSMClosingPointCreationDiag&amp;</a> <td><tt>oPtDiag</tt>)= 0  </table></dt>
<dl>
  <dd>
 Modifies the curve of section from the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve to be replaced.
   </dd>
    <dt><tt> iNewSection</tt>
   <dd>      section will replace iSection, can be a curve or a face
   </dd>
    <dt><tt> oCurveSection</tt>
   <dd>     if iSection is a face, oCurveSection is the boundary of the face.
     oCurveSection is used as section curve.
     if Part design, the face is used to close the Loft.
   </dd>
    <dt><tt> oClosingPoint</tt>
   <dd>     if iSection is a closed curve, oClosingPoint is a new closing point
     of iSection.
     if iSection is a face, oClosingPoint is a new closing point the boundary
     of iSection.</dd>
</dl>
</dl>
</dl>
<a name="ModifySectionOrient"></a><a name="ModifySectionOrient(CATISpecObject_var,CATGSMOrientation)"></a> <dt> o <b>ModifySectionOrient</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ModifySectionOrient</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td><a href="../GSMInterfaces/enum_CATGSMOrientation_58863.htm">CATGSMOrientation</a> <td><tt>iOrient</tt><td><tt>= CATGSMSameOrientation </tt>)= 0  </table></dt>
<dl>
  <dd>
 Modifies the orientation of the curve of a section from the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve to be replaced.
   </dd>
    <dt><tt> iOrient</tt>
   <dd>      orientation of the section curve :
        </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMOrientation_58863.htm">CATGSMOrientation</a>
</dl>
</dl>
<a name="RemoveFaceForClosing"></a><a name="RemoveFaceForClosing(CATISpecObject_var)"></a> <dt> o <b>RemoveFaceForClosing</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveFaceForClosing</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>)= 0  </table></dt>
<dl>
  <dd>
 Removes face used to close the lofted surface. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>        section curve.</dd>
</dl>
</dl>
</dl>
<a name="RemoveGuide"></a><a name="RemoveGuide(CATISpecObject_var)"></a> <dt> o <b>RemoveGuide</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveGuide</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iGuide</tt>)= 0  </table></dt>
<dl>
  <dd>
 Removes guide from the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide</tt>
   <dd>      guide curve to be removed, if this guide has a tangent surface 
      it will be removed too.</dd>
</dl>
</dl>
</dl>
<a name="RemoveGuideTangent"></a><a name="RemoveGuideTangent(CATISpecObject_var)"></a> <dt> o <b>RemoveGuideTangent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveGuideTangent</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iGuide</tt>)= 0  </table></dt>
<dl>
  <dd>
 Removes a tangent surface of a guide from the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide</tt>
   <dd>      guide curve of the guide to which the surface will be removed.</dd>
</dl>
</dl>
</dl>
<a name="RemoveSection"></a><a name="RemoveSection(CATISpecObject_var)"></a> <dt> o <b>RemoveSection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveSection</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>)= 0  </table></dt>
<dl>
  <dd>
 Removes section from the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve to be removed, if this section has a closing point
      it will be removed too.</dd>
</dl>
</dl>
</dl>
<a name="RemoveSectionPoint"></a><a name="RemoveSectionPoint(CATISpecObject_var)"></a> <dt> o <b>RemoveSectionPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveSectionPoint</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>)= 0  </table></dt>
<dl>
  <dd>
 Removes a closing point of a section from the lofted surface.
 The curve section must be closed curve. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve of the section to which the point will be removed.</dd>
</dl>
</dl>
</dl>
<a name="RemoveSectionTangent"></a><a name="RemoveSectionTangent(CATISpecObject_var)"></a> <dt> o <b>RemoveSectionTangent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveSectionTangent</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>)= 0  </table></dt>
<dl>
  <dd>
 Removes the tangent surface of a section from the lofted surface.
 The section must be the start section or the end section of the loft. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve of the section to which the tangent will be removed.</dd>
</dl>
</dl>
</dl>
<a name="SetBooleanOperation"></a><a name="SetBooleanOperation(CATGSMLoftBooleanOp)"></a> <dt> o <b>SetBooleanOperation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetBooleanOperation</b>(<td> const <a href="../GSMInterfaces/enum_CATGSMLoftBooleanOp_70409.htm">CATGSMLoftBooleanOp</a> <td><tt>iOperation</tt><td><tt>= CATGSMLoftBooleanUnion </tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets boolean operation for closed lofted surface.
 TO BE USED ONLY for Part Loft (closed loft)
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOperation</tt>
   <dd>      type of operation.
         </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftBooleanOp_70409.htm">CATGSMLoftBooleanOp</a>
</dl>
</dl>
<a name="SetCanonicalDetection"></a><a name="SetCanonicalDetection(CATGSMCanonicalSurfaceDetection)"></a> <dt> o <b>SetCanonicalDetection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCanonicalDetection</b>(<td> const <a href="../GSMInterfaces/enum_CATGSMCanonicalSurfaceDetection_193637.htm">CATGSMCanonicalSurfaceDetection</a> <td><tt>iDetection</tt><td><tt>= CATGSMCanonicalDetection</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets information about detection of canonical surfaces of the output surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDetection</tt>
   <dd>     if canonical surfaces are detected and converted into plane or not and how;
     possible values are CATGSMNoDetection, CATGSMPlaneOnlyDetection and CATGSMCanonicalDetection.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMCanonicalSurfaceDetection_193637.htm">CATGSMCanonicalSurfaceDetection</a>
</dl>
</dl>
<a name="SetCompSectionTangent"></a><a name="SetCompSectionTangent(CATISpecObject_var,CATGSMComputedTangentType)"></a> <dt> o <b>SetCompSectionTangent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCompSectionTangent</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td> const <a href="../GSMInterfaces/enum_CATGSMComputedTangentType_127265.htm">CATGSMComputedTangentType</a> <td><tt>iCompSectionTangent</tt>)=0  </table></dt>
<dl>
  <dd>
 Sets a computed tangent surface to the start section or end section.
   from the lofted surface.
 The section must have been set as a face. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve of the section to which the tangent will be computed.
   </dd>
    <dt><tt> iCompSectionTangent</tt>
   <dd>      section tangent is computed or not,  
        </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMComputedTangentType_127265.htm">CATGSMComputedTangentType</a>
</dl>
</dl>
<a name="SetContext"></a><a name="SetContext(CATGSMFeatureContextType)"></a> <dt> o <b>SetContext</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetContext</b>(<td> const <a href="../GSMInterfaces/enum_CATGSMFeatureContextType_117904.htm">CATGSMFeatureContextType</a> <td><tt>iContextType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets context type to generate a Surface or Volume.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContextType</tt>
   <dd>      CATGSMSurfaceCtxt to generate a surface, CATGSMVolumeCtxt (requires GSO License) to generate a volume
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMFeatureContextType_117904.htm">CATGSMFeatureContextType</a>
</dl>
</dl>
<a name="SetFaceForClosing"></a><a name="SetFaceForClosing(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>SetFaceForClosing</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetFaceForClosing</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iFace</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets face for closing the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>        section curve.
   </dd>
    <dt><tt> iFace</tt>
   <dd>      End face used to close the loft.</dd>
</dl>
</dl>
</dl>
<a name="SetGuideTangent"></a><a name="SetGuideTangent(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>SetGuideTangent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGuideTangent</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iGuide</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iTangentGuide</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets a tangent surface to a guide from the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide</tt>
   <dd>      guide curve of the guide to which the tangent will be added
   </dd>
    <dt><tt> iTangentGuide</tt>
   <dd>      tangent surface to be added, the curve must be layed on the surface.</dd>
</dl>
</dl>
</dl>
<a name="SetRelimitation"></a><a name="SetRelimitation(CATGSMLoftRelimitationType)"></a> <dt> o <b>SetRelimitation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRelimitation</b>(<td> const <a href="../GSMInterfaces/enum_CATGSMLoftRelimitationType_138802.htm">CATGSMLoftRelimitationType</a> <td><tt>iRelimitation</tt><td><tt>= CATGSMLoftRelimitOnLimitSections </tt>)=0  </table></dt>
<dl>
  <dd>
 Sets informations about relimitation of the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRelimitation</tt>
   <dd>      type of relimitation. 
         </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftRelimitationType_138802.htm">CATGSMLoftRelimitationType</a>
</dl>
</dl>
<a name="SetSectionCoupling"></a><a name="SetSectionCoupling(CATGSMCouplingType)"></a> <dt> o <b>SetSectionCoupling</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSectionCoupling</b>(<td> const <a href="../GSMInterfaces/enum_CATGSMCouplingType_65320.htm">CATGSMCouplingType</a> <td><tt>iCoupling</tt><td><tt>= CATGSMRatioCoupling </tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets informations about the coupling between section of the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoupling</tt>
   <dd>      type of coupling between section. 
         </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMCouplingType_65320.htm">CATGSMCouplingType</a>
</dl>
</dl>
<a name="SetSectionPoint"></a><a name="SetSectionPoint(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>SetSectionPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSectionPoint</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iPointSection</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets a closing point to a section from the lofted surface.
 The curve section must be closed curve. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve of the section to which the point will be added.
   </dd>
    <dt><tt> iPointSection</tt>
   <dd>      point to be added</dd>
</dl>
</dl>
</dl>
<a name="SetSectionTangent"></a><a name="SetSectionTangent(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>SetSectionTangent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSectionTangent</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSection</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iTangentSection</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets a tangent surface to a section from the lofted surface.
 The section must be the start section or the end section of the loft. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>      section curve of the section to which the tangent will be added
   </dd>
    <dt><tt> iTangentSection</tt>
   <dd>      tangent surface to be added, the curve must be layed on the surface.</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothAngleThreshold"></a><a name="SetSmoothAngleThreshold(CATICkeParm_var&amp;)"></a> <dt> o <b>SetSmoothAngleThreshold</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSmoothAngleThreshold</b>(<td> const CATICkeParm_var&amp; <td><tt>ihSmoothAngleThresholdCkeParm</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets angular threshold value (angle) 
 allowed during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohSmoothAngleThresholdCkeParm</tt>
   <dd>      Length literal feature.</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothAngleThreshold"></a><a name="SetSmoothAngleThreshold(double)"></a> <dt> o <b>SetSmoothAngleThreshold</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSmoothAngleThreshold</b>(<td> const double <td><tt>iSmoothAngleThreshold</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets angular threshold value (angle) 
 allowed during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSmoothAngleThreshold</tt>
   <dd>      Numerical value.</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothAngleThresholdActivity"></a><a name="SetSmoothAngleThresholdActivity(CATBoolean)"></a> <dt> o <b>SetSmoothAngleThresholdActivity</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSmoothAngleThresholdActivity</b>(<td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>isSmoothAngleThresholdActivity</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets information whether a angular threshold 
 is allowed or not during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isSmoothAngleThresholdActivity</tt>
   <dd>      TRUE or FALSE (FALSE if not specified).</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothDeviation"></a><a name="SetSmoothDeviation(CATICkeParm_var&amp;)"></a> <dt> o <b>SetSmoothDeviation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSmoothDeviation</b>(<td> const CATICkeParm_var&amp; <td><tt>ihSmoothDeviationCkeParm</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets deviation value (length) 
 allowed during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSmoothDeviationCkeParm</tt>
   <dd>      Length literal feature.</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothDeviation"></a><a name="SetSmoothDeviation(double)"></a> <dt> o <b>SetSmoothDeviation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSmoothDeviation</b>(<td> const double <td><tt>iSmoothDeviation</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets deviation value (length) 
 allowed during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSmoothDeviation</tt>
   <dd>      Numerical value.</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothDeviationActivity"></a><a name="SetSmoothDeviationActivity(CATBoolean)"></a> <dt> o <b>SetSmoothDeviationActivity</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSmoothDeviationActivity</b>(<td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>isSmoothDeviationActivity</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets information whether a deviation 
 is allowed or not during lofting operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isSmoothDeviationActivity</tt>
   <dd>      TRUE or FALSE.</dd>
</dl>
</dl>
</dl>
<a name="SetSpine"></a><a name="SetSpine(CATGSMLoftSpineType,CATISpecObject_var)"></a> <dt> o <b>SetSpine</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSpine</b>(<td> const <a href="../GSMInterfaces/enum_CATGSMLoftSpineType_72081.htm">CATGSMLoftSpineType</a> <td><tt>iSpineType</tt><td><tt>= CATGSMLoftCalculatedSpine </tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSpine</tt><td><tt>= NULL_var </tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the spine to the lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpineType</tt>
   <dd>      type of spine. 
      </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMLoftSpineType_72081.htm">CATGSMLoftSpineType</a>
    <dt><tt> iSpine</tt>
   <dd>      curve to be added as a spine, if iSpineType = CATGSMLoftUserSpine</dd>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMLoft.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
