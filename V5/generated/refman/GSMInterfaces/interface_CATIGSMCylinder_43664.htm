<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMCylinder</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="interface_CATIGSMCuttingPoint_72214.htm">Previous</a>  <a href="interface_CATIGSMDirection_50112.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMCylinder</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIGSMCylinder
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMCylinder</b>
</p>
<p>
<b><i> Interface to cylinder feature.</i></b><br>

 <b>Role</b>: Allows you to access data of the Cylinder feature
 created by using  an element, a direction and two length values
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMFactory_38152.htm#CreateCylinder">CATIGSMFactory.CreateCylinder</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCenter()"><b>GetCenter</b></a>()
<dd>  Gets the center of the cylinder.
 <dt> o 
    <a href="#GetDir()"><b>GetDir</b></a>()
<dd>  Gets the cylinder direction.
 <dt> o 
    <a href="#GetFirstLimitValue(CATICkeParm_var&amp;)"><b>GetFirstLimitValue</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the first length value.
 <dt> o 
    <a href="#GetFirstLimitValue(double&amp;)"><b>GetFirstLimitValue</b></a>(double&amp;)
<dd>  Gets the first length value.
 <dt> o 
    <a href="#GetOrientation(CATBoolean&amp;)"><b>GetOrientation</b></a>(CATBoolean&amp;)
<dd>  Gets the orientation of the extrude.
 <dt> o 
    <a href="#GetRadius(CATICkeParm_var&amp;)"><b>GetRadius</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the radius value.
 <dt> o 
    <a href="#GetRadius(double&amp;)"><b>GetRadius</b></a>(double&amp;)
<dd>  Gets the first length value.
 <dt> o 
    <a href="#GetSecondLimitValue(CATICkeParm_var&amp;)"><b>GetSecondLimitValue</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the second length value.
 <dt> o 
    <a href="#GetSecondLimitValue(double&amp;)"><b>GetSecondLimitValue</b></a>(double&amp;)
<dd>  Gets the second length value.
 <dt> o 
    <a href="#InvertOrientation()"><b>InvertOrientation</b></a>()
<dd>  Inverts the orientation of the extrude.
 <dt> o 
    <a href="#SetCenter(CATISpecObject_var)"><b>SetCenter</b></a>(CATISpecObject_var)
<dd>  Sets the center of the cylinder.
 <dt> o 
    <a href="#SetDir(CATIGSMDirection_var)"><b>SetDir</b></a>(CATIGSMDirection_var)
<dd>  Sets the direction of the cylinder.
 <dt> o 
    <a href="#SetFirstLimitValue(CATICkeParm_var)"><b>SetFirstLimitValue</b></a>(CATICkeParm_var)
<dd>  Sets the first length value.
 <dt> o 
    <a href="#SetFirstLimitValue(double)"><b>SetFirstLimitValue</b></a>(double)
<dd>  Sets the first length value.
 <dt> o 
    <a href="#SetOrientation(CATBoolean)"><b>SetOrientation</b></a>(CATBoolean)
<dd>  Sets  the orientation of the extrude.
 <dt> o 
    <a href="#SetRadius(CATICkeParm_var)"><b>SetRadius</b></a>(CATICkeParm_var)
<dd>  Sets the radius value.
 <dt> o 
    <a href="#SetRadius(double)"><b>SetRadius</b></a>(double)
<dd>  Sets the radius value.
 <dt> o 
    <a href="#SetSecondLimitValue(CATICkeParm_var)"><b>SetSecondLimitValue</b></a>(CATICkeParm_var)
<dd>  Sets the second length value.
 <dt> o 
    <a href="#SetSecondLimitValue(double)"><b>SetSecondLimitValue</b></a>(double)
<dd>  Sets the second length value.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCenter"></a><a name="GetCenter()"></a> <dt> o <b>GetCenter</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>GetCenter</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the center of the cylinder.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>       Center of cylinder
</dl>
</dl>
<a name="GetDir"></a><a name="GetDir()"></a> <dt> o <b>GetDir</b>

<dt>  <table><tr><td>  public virtual <a href="../GSMInterfaces/interface_CATIGSMDirection_50112.htm">CATIGSMDirection_var</a>  <b>GetDir</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the cylinder direction.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>       direction
</dl>
</dl>
<a name="GetFirstLimitValue"></a><a name="GetFirstLimitValue(CATICkeParm_var&amp;)"></a> <dt> o <b>GetFirstLimitValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFirstLimitValue</b>(<td>CATICkeParm_var&amp; <td><tt>ohLength1</tt>)=0  </table></dt>
<dl>
  <dd>
 Gets the first length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohLength1</tt>
   <dd>      first length value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm</a>
</dl>
</dl>
<a name="GetFirstLimitValue"></a><a name="GetFirstLimitValue(double&amp;)"></a> <dt> o <b>GetFirstLimitValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFirstLimitValue</b>(<td>double&amp; <td><tt>oLength1</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the first length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLength1</tt>
   <dd>      first length value</dd>
</dl>
</dl>
</dl>
<a name="GetOrientation"></a><a name="GetOrientation(CATBoolean&amp;)"></a> <dt> o <b>GetOrientation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOrientation</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oOrient</tt>)=0  </table></dt>
<dl>
  <dd>
 Gets the orientation of the extrude.
  TRUE means that the natural  orientation of the direction
  is the right one. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrient</tt>
   <dd>      Extrude orientation</dd>
</dl>
</dl>
</dl>
<a name="GetRadius"></a><a name="GetRadius(CATICkeParm_var&amp;)"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRadius</b>(<td>CATICkeParm_var&amp; <td><tt>ohRadius</tt>)=0  </table></dt>
<dl>
  <dd>
 Gets the radius value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohRadius</tt>
   <dd>      Radius value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm</a>
</dl>
</dl>
<a name="GetRadius"></a><a name="GetRadius(double&amp;)"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRadius</b>(<td>double&amp; <td><tt>oRadius</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the first length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRadius</tt>
   <dd>      Radius value</dd>
</dl>
</dl>
</dl>
<a name="GetSecondLimitValue"></a><a name="GetSecondLimitValue(CATICkeParm_var&amp;)"></a> <dt> o <b>GetSecondLimitValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSecondLimitValue</b>(<td>CATICkeParm_var&amp; <td><tt>ohLength2</tt>)=0  </table></dt>
<dl>
  <dd>
 Gets the second length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohLength2</tt>
   <dd>      second length value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm</a>
</dl>
</dl>
<a name="GetSecondLimitValue"></a><a name="GetSecondLimitValue(double&amp;)"></a> <dt> o <b>GetSecondLimitValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSecondLimitValue</b>(<td>double&amp; <td><tt>oLength2</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the second length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLength2</tt>
   <dd>      first length value</dd>
</dl>
</dl>
</dl>
<a name="InvertOrientation"></a><a name="InvertOrientation()"></a> <dt> o <b>InvertOrientation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>InvertOrientation</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Inverts the orientation of the extrude.
 <br>TRUE means that the direction is inverted
</dl>
<a name="SetCenter"></a><a name="SetCenter(CATISpecObject_var)"></a> <dt> o <b>SetCenter</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCenter</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihCenter</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the center of the cylinder.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihCenter</tt>
   <dd>      Center of the Cylinder</dd>
</dl>
</dl>
</dl>
<a name="SetDir"></a><a name="SetDir(CATIGSMDirection_var)"></a> <dt> o <b>SetDir</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDir</b>(<td> const <a href="../GSMInterfaces/interface_CATIGSMDirection_50112.htm">CATIGSMDirection_var</a> <td><tt>ihDir</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the direction of the cylinder.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihDir</tt>
   <dd>      Direction of the cylinder
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMDirection_50112.htm">CATIGSMDirection</a>
</dl>
</dl>
<a name="SetFirstLimitValue"></a><a name="SetFirstLimitValue(CATICkeParm_var)"></a> <dt> o <b>SetFirstLimitValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetFirstLimitValue</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>ihLength1</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the first length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihLength1</tt>
   <dd>      New first length value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm</a>
</dl>
</dl>
<a name="SetFirstLimitValue"></a><a name="SetFirstLimitValue(double)"></a> <dt> o <b>SetFirstLimitValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetFirstLimitValue</b>(<td>double <td><tt>iLength1</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the first length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLength1</tt>
   <dd>      New first length value</dd>
</dl>
</dl>
</dl>
<a name="SetOrientation"></a><a name="SetOrientation(CATBoolean)"></a> <dt> o <b>SetOrientation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetOrientation</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iOrient</tt>)=0  </table></dt>
<dl>
  <dd>
 Sets  the orientation of the extrude.
 <br>TRUE means that the direction is inverted
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrient</tt>
   <dd>      TRUE or FALSE</dd>
</dl>
</dl>
</dl>
<a name="SetRadius"></a><a name="SetRadius(CATICkeParm_var)"></a> <dt> o <b>SetRadius</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRadius</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>ihRadius</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the radius value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihRadius</tt>
   <dd>      New radius value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm</a>
</dl>
</dl>
<a name="SetRadius"></a><a name="SetRadius(double)"></a> <dt> o <b>SetRadius</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRadius</b>(<td>double <td><tt>iRadius</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the radius value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRadius</tt>
   <dd>      New first radius</dd>
</dl>
</dl>
</dl>
<a name="SetSecondLimitValue"></a><a name="SetSecondLimitValue(CATICkeParm_var)"></a> <dt> o <b>SetSecondLimitValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSecondLimitValue</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iOfs2</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the second length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihLength2</tt>
   <dd>      New second length value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm</a>
</dl>
</dl>
<a name="SetSecondLimitValue"></a><a name="SetSecondLimitValue(double)"></a> <dt> o <b>SetSecondLimitValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSecondLimitValue</b>(<td>double <td><tt>iLength2</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the second length value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLength2</tt>
   <dd>      New second length value</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMCylinder.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
