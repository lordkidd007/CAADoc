<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMPlane2Lines</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="interface_CATIGSMPlane1Line1Pt_71264.htm">Previous</a>  <a href="interface_CATIGSMPlane3Points_69192.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMPlane2Lines</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIGSMPlane2Lines
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMPlane2Lines</b>
</p>
<p>
<b><i> Interface to plane feature defined by two lines.</i></b><br>
  
 <b>Role</b>: Allows you to access data of the plane feature passing though two lines.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMFactory_38152.htm#CreatePlane">CATIGSMFactory.CreatePlane</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFirstLine(CATISpecObject_var&amp;)"><b>GetFirstLine</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the first line.
 <dt> o 
    <a href="#GetForbidNonCoplanarLines()"><b>GetForbidNonCoplanarLines</b></a>()
<dd>  Get the status, about forcing the two lines to be on the same plane.
 <dt> o 
    <a href="#GetSecondLine(CATISpecObject_var&amp;)"><b>GetSecondLine</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the second line.
 <dt> o 
    <a href="#SetFirstLine(CATISpecObject_var)"><b>SetFirstLine</b></a>(CATISpecObject_var)
<dd>  Sets the first line.
 <dt> o 
    <a href="#SetForbidNonCoplanarLines(int)"><b>SetForbidNonCoplanarLines</b></a>(int)
<dd>  Force the two lines to be on the same plane.
 <dt> o 
    <a href="#SetSecondLine(CATISpecObject_var)"><b>SetSecondLine</b></a>(CATISpecObject_var)
<dd>  Sets the second line.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFirstLine"></a><a name="GetFirstLine(CATISpecObject_var&amp;)"></a> <dt> o <b>GetFirstLine</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFirstLine</b>(<td>CATISpecObject_var&amp; <td><tt>oFirstLine</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the first line.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFirstLine</tt>
   <dd>      first line</dd>
</dl>
</dl>
</dl>
<a name="GetForbidNonCoplanarLines"></a><a name="GetForbidNonCoplanarLines()"></a> <dt> o <b>GetForbidNonCoplanarLines</b>

<dt>  <table><tr><td>  public virtual int  <b>GetForbidNonCoplanarLines</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get the status, about forcing the two lines to be on the same plane.
</dl>
<a name="GetSecondLine"></a><a name="GetSecondLine(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSecondLine</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSecondLine</b>(<td>CATISpecObject_var&amp; <td><tt>oSecondLine</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the second line.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSecondLine</tt>
   <dd>      second line</dd>
</dl>
</dl>
</dl>
<a name="SetFirstLine"></a><a name="SetFirstLine(CATISpecObject_var)"></a> <dt> o <b>SetFirstLine</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetFirstLine</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iFirstLine</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the first line.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstLine</tt>
   <dd>      first line</dd>
</dl>
</dl>
</dl>
<a name="SetForbidNonCoplanarLines"></a><a name="SetForbidNonCoplanarLines(int)"></a> <dt> o <b>SetForbidNonCoplanarLines</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetForbidNonCoplanarLines</b>(<td> const int <td><tt>iCoplanarLines</tt>) = 0  </table></dt>
<dl>
  <dd>
 Force the two lines to be on the same plane.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoplanarLines</tt>
   <dd>     if iCoplanarLines=1, both lines have to be on the same plane.
     if iCoplanarLines=0, both lines can be non coplanar.</dd>
</dl>
</dl>
</dl>
<a name="SetSecondLine"></a><a name="SetSecondLine(CATISpecObject_var)"></a> <dt> o <b>SetSecondLine</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSecondLine</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSecondLine</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the second line.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstLine</tt>
   <dd>      second line</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMPlane2Lines.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
