<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMHealing</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="interface_CATIGSMGridSubset_56338.htm">Previous</a>  <a href="interface_CATIGSMHelix_26898.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMHealing</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIGSMHealing
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMHealing</b>
</p>
<p>
<b><i> Interface to surface healing feature .</i></b><br>

 <b>Role</b>: Allows you to gets and/or sets the definition elements of a surface Healing: 
 a surface, an orientation and an Healing value.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMFactory_38152.htm#CreateHealing">CATIGSMFactory.CreateHealing</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddBodyToHeal(CATISpecObject_var)"><b>AddBodyToHeal</b></a>(CATISpecObject_var)
<dd>  Adds a body to heal.
 <dt> o 
    <a href="#AddFixElement(CATISpecObject_var)"><b>AddFixElement</b></a>(CATISpecObject_var)
<dd>  Adds an element to fix.
 <dt> o 
    <a href="#AddSharpEdge(CATISpecObject_var)"><b>AddSharpEdge</b></a>(CATISpecObject_var)
<dd>  Adds a sharp edge.
 <dt> o 
    <a href="#GetBodyToHeal(CATLISTV(CATISpecObject_var)&amp;)"><b>GetBodyToHeal</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Gets the list of bodies to heal.
 <dt> o 
    <a href="#GetCanonicFreeMode(enum CATGSMHealingMode&amp;)"><b>GetCanonicFreeMode</b></a>(enum CATGSMHealingMode&amp;)
<dd>  Gets the healing constraints mode on canonic and planar elements.
 <dt> o 
    <a href="#GetComputeMode(enum CATGSMHealingMode&amp;)"><b>GetComputeMode</b></a>(enum CATGSMHealingMode&amp;)
<dd>  Gets the computation mode.
 <dt> o 
    <a href="#GetContinuity(enum CATGSMContinuity&amp;)"><b>GetContinuity</b></a>(enum CATGSMContinuity&amp;)
<dd>  Gets the continuity mode.
 <dt> o 
    <a href="#GetCurvatureDev(CATICkeParm_var&amp;)"><b>GetCurvatureDev</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the curvature deviation.
 <dt> o 
    <a href="#GetFixElements(CATLISTV(CATISpecObject_var)&amp;)"><b>GetFixElements</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Gets the list of elements to fix.
 <dt> o 
    <a href="#GetG0Objective(CATICkeParm_var&amp;)"><b>GetG0Objective</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the point continuity objective (Distance objective).
 <dt> o 
    <a href="#GetG1Objective(CATICkeParm_var&amp;)"><b>GetG1Objective</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the tangency continuity objective (Tangency objective).
 <dt> o 
    <a href="#GetMergeDist(CATICkeParm_var&amp;)"><b>GetMergeDist</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the merging distance.
 <dt> o 
    <a href="#GetSharpEdges(CATLISTV(CATISpecObject_var)&amp;)"><b>GetSharpEdges</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Gets the list of edges to keep sharpness.
 <dt> o 
    <a href="#GetSharpnessAngle(CATICkeParm_var&amp;)"><b>GetSharpnessAngle</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the limit angle for Sharpness (Sharpness angle).
 <dt> o 
    <a href="#GetTangencyAngle(CATICkeParm_var&amp;)"><b>GetTangencyAngle</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the tangency angle.
 <dt> o 
    <a href="#RemoveFixElementAtPosition(int)"><b>RemoveFixElementAtPosition</b></a>(int)
<dd>  Removes in the list the element which has the given position.
 <dt> o 
    <a href="#RemoveSharpEdgeAtPosition(int)"><b>RemoveSharpEdgeAtPosition</b></a>(int)
<dd>  Removes in the list the element which has the given position.
 <dt> o 
    <a href="#RemoveToHealElementAtPosition(int)"><b>RemoveToHealElementAtPosition</b></a>(int)
<dd>  Removes in the list the element which has the given position.
 <dt> o 
    <a href="#ReplaceToHealElement(int,CATISpecObject_var&amp;)"><b>ReplaceToHealElement</b></a>(int,CATISpecObject_var&amp;)
<dd>  Replaces an elements to heal.
 <dt> o 
    <a href="#SetCanonicFreeMode(enum CATGSMHealingMode)"><b>SetCanonicFreeMode</b></a>(enum CATGSMHealingMode)
<dd>  Sets the healing constraints mode on canonic and planar elements.
 <dt> o 
    <a href="#SetComputeMode(enum CATGSMHealingMode)"><b>SetComputeMode</b></a>(enum CATGSMHealingMode)
<dd>  Sets the computation mode.
 <dt> o 
    <a href="#SetContinuity(enum CATGSMContinuity)"><b>SetContinuity</b></a>(enum CATGSMContinuity)
<dd>  Sets the continuity mode.
 <dt> o 
    <a href="#SetCurvatureDev(CATICkeParm_var)"><b>SetCurvatureDev</b></a>(CATICkeParm_var)
<dd>  Sets the curvature deviation.
 <dt> o 
    <a href="#SetG0Objective(CATICkeParm_var)"><b>SetG0Objective</b></a>(CATICkeParm_var)
<dd>  Sets the point continuity objective(Distance objective).
 <dt> o 
    <a href="#SetG1Objective(CATICkeParm_var)"><b>SetG1Objective</b></a>(CATICkeParm_var)
<dd>  Sets the tangency continuity objective(Tangency objective).
 <dt> o 
    <a href="#SetMergeDist(CATICkeParm_var)"><b>SetMergeDist</b></a>(CATICkeParm_var)
<dd>  Sets the merging distance.
 <dt> o 
    <a href="#SetSharpnessAngle(CATICkeParm_var)"><b>SetSharpnessAngle</b></a>(CATICkeParm_var)
<dd>  Sets the limit angle for Sharpness(Sharpness angle).
 <dt> o 
    <a href="#SetTangencyAngle(CATICkeParm_var)"><b>SetTangencyAngle</b></a>(CATICkeParm_var)
<dd>  Sets the tangency angle.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddBodyToHeal"></a><a name="AddBodyToHeal(CATISpecObject_var)"></a> <dt> o <b>AddBodyToHeal</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddBodyToHeal</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iBodyToHeal</tt>) = 0  </table></dt>
<dl>
  <dd>
 Adds a body to heal.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBodyToHeal</tt>
   <dd>      new body</dd>
</dl>
</dl>
</dl>
<a name="AddFixElement"></a><a name="AddFixElement(CATISpecObject_var)"></a> <dt> o <b>AddFixElement</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddFixElement</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iFixElement</tt>) = 0  </table></dt>
<dl>
  <dd>
 Adds an element to fix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFixElement</tt>
   <dd>      new Element</dd>
</dl>
</dl>
</dl>
<a name="AddSharpEdge"></a><a name="AddSharpEdge(CATISpecObject_var)"></a> <dt> o <b>AddSharpEdge</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddSharpEdge</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSharpEdge</tt>) = 0  </table></dt>
<dl>
  <dd>
 Adds a sharp edge.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSharpEdge</tt>
   <dd>      new Element</dd>
</dl>
</dl>
</dl>
<a name="GetBodyToHeal"></a><a name="GetBodyToHeal(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetBodyToHeal</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetBodyToHeal</b>(<td><a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)&amp;</a> <td><tt>oBodyToheal</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the list of bodies to heal.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATLISTV</tt>
   <dd> oBodyToHeal      List of Healing Bodies</dd>
</dl>
</dl>
</dl>
<a name="GetCanonicFreeMode"></a><a name="GetCanonicFreeMode(enum CATGSMHealingMode&amp;)"></a> <dt> o <b>GetCanonicFreeMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCanonicFreeMode</b>(<td>enum CATGSMHealingMode&amp; <td><tt>oHealingMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the healing constraints mode on canonic and planar elements.
 <ul>
 <li> CATGSMHealFrozen          : Planes and cannonics are frozen  (Dedault) 
 <li> CATGSMHealFree            : Planes and cannonics are subject to be modified by healing
 <li> CATGSMHealPlanFree        : Plans are subject to be modified by healing
 <li> CATGSMHealCanonicFree     : Canonics are subject to be modified by healing
 </ul> 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHealingMode</tt>
   <dd>      Constraints on the geometry</dd>
</dl>
</dl>
</dl>
<a name="GetComputeMode"></a><a name="GetComputeMode(enum CATGSMHealingMode&amp;)"></a> <dt> o <b>GetComputeMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetComputeMode</b>(<td>enum CATGSMHealingMode&amp; <td><tt>oComputeMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the computation mode.
 <br> Note: Useless method reserved for future use 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oComputeMode</tt>
   <dd>      computation mode to keep existing continuity when the healing</dd>
</dl>
</dl>
</dl>
<a name="GetContinuity"></a><a name="GetContinuity(enum CATGSMContinuity&amp;)"></a> <dt> o <b>GetContinuity</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetContinuity</b>(<td>enum CATGSMContinuity&amp; <td><tt>oContinuity</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the continuity mode.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oContinuity</tt>
   <dd>      continuity between the elements of the healing</dd>
</dl>
</dl>
</dl>
<a name="GetCurvatureDev"></a><a name="GetCurvatureDev(CATICkeParm_var&amp;)"></a> <dt> o <b>GetCurvatureDev</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCurvatureDev</b>(<td>CATICkeParm_var&amp; <td><tt>oCurvatureDev</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the curvature deviation.
 <br> Note: Useless method reserved for future use 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCurvatureDev</tt>
   <dd>      Curvature deviation fixed by the user</dd>
</dl>
</dl>
</dl>
<a name="GetFixElements"></a><a name="GetFixElements(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetFixElements</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFixElements</b>(<td><a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)&amp;</a> <td><tt>oFixElements</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the list of elements to fix.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATLISTV</tt>
   <dd> oFixElements      List of Fixed Elements</dd>
</dl>
</dl>
</dl>
<a name="GetG0Objective"></a><a name="GetG0Objective(CATICkeParm_var&amp;)"></a> <dt> o <b>GetG0Objective</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetG0Objective</b>(<td>CATICkeParm_var&amp; <td><tt>oG0Objective</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the point continuity objective (Distance objective).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oG0Objective</tt>
   <dd>      Point continuity objective fixed by the user</dd>
</dl>
</dl>
</dl>
<a name="GetG1Objective"></a><a name="GetG1Objective(CATICkeParm_var&amp;)"></a> <dt> o <b>GetG1Objective</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetG1Objective</b>(<td>CATICkeParm_var&amp; <td><tt>oG1Objective</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the tangency continuity objective (Tangency objective).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oG1Objective</tt>
   <dd>      Tangency continuity objective fixed by the user</dd>
</dl>
</dl>
</dl>
<a name="GetMergeDist"></a><a name="GetMergeDist(CATICkeParm_var&amp;)"></a> <dt> o <b>GetMergeDist</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetMergeDist</b>(<td>CATICkeParm_var&amp; <td><tt>oMergeDist</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the merging distance.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMergeDist</tt>
   <dd>      Merging distance fixed by the user</dd>
</dl>
</dl>
</dl>
<a name="GetSharpEdges"></a><a name="GetSharpEdges(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetSharpEdges</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSharpEdges</b>(<td><a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)&amp;</a> <td><tt>oSharpEdges</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the list of edges to keep sharpness.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATLISTV</tt>
   <dd> oSharpEdges      List of Sharp Edges</dd>
</dl>
</dl>
</dl>
<a name="GetSharpnessAngle"></a><a name="GetSharpnessAngle(CATICkeParm_var&amp;)"></a> <dt> o <b>GetSharpnessAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSharpnessAngle</b>(<td>CATICkeParm_var&amp; <td><tt>oSharpnessAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the limit angle for Sharpness (Sharpness angle).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSharpnessAngle</tt>
   <dd>      Limit angle for Sharpness fixed by the user</dd>
</dl>
</dl>
</dl>
<a name="GetTangencyAngle"></a><a name="GetTangencyAngle(CATICkeParm_var&amp;)"></a> <dt> o <b>GetTangencyAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetTangencyAngle</b>(<td>CATICkeParm_var&amp; <td><tt>oTangencyAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the tangency angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTangencyAngle</tt>
   <dd>      Tangency angle fixed by the user
      <br> Range of value 0.5(Internal angular tolerance of the system) deg to 10deg</dd>
</dl>
</dl>
</dl>
<a name="RemoveFixElementAtPosition"></a><a name="RemoveFixElementAtPosition(int)"></a> <dt> o <b>RemoveFixElementAtPosition</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveFixElementAtPosition</b>(<td>int <td><tt>iPos</tt>) = 0  </table></dt>
<dl>
  <dd>
 Removes in the list the element which has the given position.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPos</tt>
   <dd>      Position in the list of the element that will be erased</dd>
</dl>
</dl>
</dl>
<a name="RemoveSharpEdgeAtPosition"></a><a name="RemoveSharpEdgeAtPosition(int)"></a> <dt> o <b>RemoveSharpEdgeAtPosition</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveSharpEdgeAtPosition</b>(<td>int <td><tt>iPos</tt>) = 0  </table></dt>
<dl>
  <dd>
 Removes in the list the element which has the given position.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPos</tt>
   <dd>      Position in the list of the element that will be erased</dd>
</dl>
</dl>
</dl>
<a name="RemoveToHealElementAtPosition"></a><a name="RemoveToHealElementAtPosition(int)"></a> <dt> o <b>RemoveToHealElementAtPosition</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveToHealElementAtPosition</b>(<td>int <td><tt>iPos</tt>) = 0  </table></dt>
<dl>
  <dd>
 Removes in the list the element which has the given position.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPos</tt>
   <dd>      Position in the list of the element that will be erased</dd>
</dl>
</dl>
</dl>
<a name="ReplaceToHealElement"></a><a name="ReplaceToHealElement(int,CATISpecObject_var&amp;)"></a> <dt> o <b>ReplaceToHealElement</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ReplaceToHealElement</b>(<td>int <td><tt>iIndex</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>ihSpecObject</tt>) =0  </table></dt>
<dl>
  <dd>
 Replaces an elements to heal.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>         The position of the element to replace.
   </dd>
    <dt><tt> ihSpecObject</tt>
   <dd>         The new element.</dd>
</dl>
</dl>
</dl>
<a name="SetCanonicFreeMode"></a><a name="SetCanonicFreeMode(enum CATGSMHealingMode)"></a> <dt> o <b>SetCanonicFreeMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCanonicFreeMode</b>(<td> const enum CATGSMHealingMode <td><tt>iHealingMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the healing constraints mode on canonic and planar elements.
 <ul>
 <li> CATGSMHealFrozen          : Planes and cannonics are frozen  (Dedault) 
 <li> CATGSMHealFree            : Planes and cannonics are subject to be modified by healing
 <li> CATGSMHealPlanFree        : Plans are subject to be modified by healing
 <li> CATGSMHealCanonicFree     : Canonics are subject to be modified by healing
 </ul> 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHealingMode</tt>
   <dd>      Constraints on the geometry</dd>
</dl>
</dl>
</dl>
<a name="SetComputeMode"></a><a name="SetComputeMode(enum CATGSMHealingMode)"></a> <dt> o <b>SetComputeMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetComputeMode</b>(<td> const enum CATGSMHealingMode <td><tt>iComputeMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the computation mode.
 <br> Note: Useless method reserved for future use 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComputeMode</tt>
   <dd>      computation mode to keep existing continuity when the healing
</dd>
</dl>
</dl>
</dl>
<a name="SetContinuity"></a><a name="SetContinuity(enum CATGSMContinuity)"></a> <dt> o <b>SetContinuity</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetContinuity</b>(<td> const enum CATGSMContinuity <td><tt>iContinuity</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the continuity mode.
 <ul>
 <li> CATGSMContinuity_Point        : continuity mode - default mode  
 <li> CATGSMContinuity_Tangency     : tangency mode  
 <li> CATGSMContinuity_Curvature    : curvature mode ,  unused reserved for the future 
 </ul> 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContinuity</tt>
   <dd>      continuity between the elements of the healing</dd>
</dl>
</dl>
</dl>
<a name="SetCurvatureDev"></a><a name="SetCurvatureDev(CATICkeParm_var)"></a> <dt> o <b>SetCurvatureDev</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurvatureDev</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iCurvatureDev</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the curvature deviation.
 <br> Note: Useless method reserved for future use 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurvatureDev</tt>
   <dd>      Curvature deviation fixed by the user</dd>
</dl>
</dl>
</dl>
<a name="SetG0Objective"></a><a name="SetG0Objective(CATICkeParm_var)"></a> <dt> o <b>SetG0Objective</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetG0Objective</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iG0Objective</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the point continuity objective(Distance objective).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iG0Objective</tt>
   <dd>      Point continuity objective fixed by the user
      <br> Range of value 10E-3 mm(Internal distance tolerance of the system)  to 10E-1 mm</dd>
</dl>
</dl>
</dl>
<a name="SetG1Objective"></a><a name="SetG1Objective(CATICkeParm_var)"></a> <dt> o <b>SetG1Objective</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetG1Objective</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iG1Objective</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the tangency continuity objective(Tangency objective).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iG1Objective</tt>
   <dd>      Tangency continuity objective fixed by the user
      <br> Range of value 0.5(Internal angular tolerance of the system) deg to 2 deg</dd>
</dl>
</dl>
</dl>
<a name="SetMergeDist"></a><a name="SetMergeDist(CATICkeParm_var)"></a> <dt> o <b>SetMergeDist</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetMergeDist</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iMergeDist</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the merging distance.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMergeDist</tt>
   <dd>      Merging distance fixed by the user
      <br> Range of value :  >10E-3 mm(Internal distance tolerance of the system)</dd>
</dl>
</dl>
</dl>
<a name="SetSharpnessAngle"></a><a name="SetSharpnessAngle(CATICkeParm_var)"></a> <dt> o <b>SetSharpnessAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSharpnessAngle</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iSharpnessAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the limit angle for Sharpness(Sharpness angle).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSharpnessAngle</tt>
   <dd>      Limit angle for Sharpness fixed by the user
  <br> Range of value 0.5 deg(Internal angular tolerance of the system)  to 10 deg</dd>
</dl>
</dl>
</dl>
<a name="SetTangencyAngle"></a><a name="SetTangencyAngle(CATICkeParm_var)"></a> <dt> o <b>SetTangencyAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetTangencyAngle</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iTangencyAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the tangency angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTangencyAngle</tt>
   <dd>      Tangency angle fixed by the user</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMHealing.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
