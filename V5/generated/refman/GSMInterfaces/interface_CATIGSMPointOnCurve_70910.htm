<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMPointOnCurve</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="interface_CATIGSMPointCoord_56341.htm">Previous</a>  <a href="interface_CATIGSMPointOnPlane_69747.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMPointOnCurve</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIGSMPointOnCurve
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMPointOnCurve</b>
</p>
<p>
<b><i> Interface to point on a curve feature.</i></b><br>
  
 <b>Role</b>: Allows you to access data of the point feature created with
 a curvilinear distance to an existing point or an extremity on a curve.  
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMFactory_38152.htm#CreatePoint">CATIGSMFactory.CreatePoint</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDistanceType(DistanceType&amp;)"><b>GetDistanceType</b></a>(DistanceType&amp;)
<dd>  Gets the distance type : geodesic or euclidean.
 <dt> o 
    <a href="#GetLength(CATICkeParm_var&amp;)"><b>GetLength</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the distance.
 <dt> o 
    <a href="#GetOrientation(CATGSMOrientation&amp;)"><b>GetOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the orientation.
 <dt> o 
    <a href="#GetReferencePoint(CATISpecObject_var&amp;)"><b>GetReferencePoint</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the reference point.
 <dt> o 
    <a href="#GetSupport(CATISpecObject_var&amp;)"><b>GetSupport</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the curve.
 <dt> o 
    <a href="#InvertOrientation()"><b>InvertOrientation</b></a>()
<dd>  Inverts the orientation.
 <dt> o 
    <a href="#SetDistanceType(DistanceType)"><b>SetDistanceType</b></a>(DistanceType)
<dd>  Sets the distance type : geodesic or euclidean.
 <dt> o 
    <a href="#SetLength(CATICkeParm_var)"><b>SetLength</b></a>(CATICkeParm_var)
<dd>  Sets the distance.
 <dt> o 
    <a href="#SetOrientation(CATGSMOrientation)"><b>SetOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the orientation.
 <dt> o 
    <a href="#SetReferencePoint(CATISpecObject_var)"><b>SetReferencePoint</b></a>(CATISpecObject_var)
<dd>  Sets the reference point.
 <dt> o 
    <a href="#SetSupport(CATISpecObject_var)"><b>SetSupport</b></a>(CATISpecObject_var)
<dd>  Sets the curve.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#DistanceType"><b>DistanceType</b></a>
<dd>  Different kinds of distance types.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDistanceType"></a><a name="GetDistanceType(DistanceType&amp;)"></a> <dt> o <b>GetDistanceType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDistanceType</b>(<td>DistanceType&amp; <td><tt>oType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the distance type : geodesic or euclidean.
 Default is Geodesic.
 Geodesic means that the distance is measured with a curvilinear abscissa
 Euclidean means that the point is created by intersection between the reference curve and a circle
         (whose radius is the length defined above).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>    distance type  enum {Geodesic, Euclidean}</dd>
</dl>
</dl>
</dl>
<a name="GetLength"></a><a name="GetLength(CATICkeParm_var&amp;)"></a> <dt> o <b>GetLength</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetLength</b>(<td>CATICkeParm_var&amp; <td><tt>oDistance</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the distance.
   
<dl>
</dl>
</dl>
<a name="GetOrientation"></a><a name="GetOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetOrientation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOrientation</b>(<td><a href="../GSMInterfaces/enum_CATGSMOrientation_58863.htm">CATGSMOrientation&amp;</a> <td><tt>oOrientation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the orientation.
 Orientation = TRUE means that distance (length or ratio) is measured :
 - in the other orientation of the curve, when a reference point has been set,
 - in the other orientation of the curve and from the other extremity, when no reference point has been set.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd>      orientation</dd>
</dl>
</dl>
</dl>
<a name="GetReferencePoint"></a><a name="GetReferencePoint(CATISpecObject_var&amp;)"></a> <dt> o <b>GetReferencePoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetReferencePoint</b>(<td>CATISpecObject_var&amp; <td><tt>oRefPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the reference point.
 If the point does not lie on the curve, the point on the curve 
 with the smallest distance to this point is taken.
   
<dl>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSupport</b>(<td>CATISpecObject_var&amp; <td><tt>oSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSupport</tt>
   <dd>       reference curve</dd>
</dl>
</dl>
</dl>
<a name="InvertOrientation"></a><a name="InvertOrientation()"></a> <dt> o <b>InvertOrientation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>InvertOrientation</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Inverts the orientation.
</dl>
<a name="SetDistanceType"></a><a name="SetDistanceType(DistanceType)"></a> <dt> o <b>SetDistanceType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDistanceType</b>(<td> const DistanceType <td><tt>iType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the distance type : geodesic or euclidean.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    distance type:   enum {Geodesic, Euclidean}</dd>
</dl>
</dl>
</dl>
<a name="SetLength"></a><a name="SetLength(CATICkeParm_var)"></a> <dt> o <b>SetLength</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetLength</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iDistance</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the distance.
   
<dl>
</dl>
</dl>
<a name="SetOrientation"></a><a name="SetOrientation(CATGSMOrientation)"></a> <dt> o <b>SetOrientation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetOrientation</b>(<td> const <a href="../GSMInterfaces/enum_CATGSMOrientation_58863.htm">CATGSMOrientation</a> <td><tt>iOrientation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the orientation.
 Orientation = TRUE means that distance (length or ratio) is measured :
 - in the other orientation of the curve, when a reference point has been set,
 - in the other orientation of the curve and from the other extremity, when no reference point has been set.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd>      orientation</dd>
</dl>
</dl>
</dl>
<a name="SetReferencePoint"></a><a name="SetReferencePoint(CATISpecObject_var)"></a> <dt> o <b>SetReferencePoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetReferencePoint</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iRefPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the reference point.
 If the point does not lie on the curve, the point on the curve 
 with the smallest distance to this point is taken.
   
<dl>
</dl>
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATISpecObject_var)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSupport</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd>       reference curve</dd>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="DistanceType"> <dt> o <b>DistanceType</b>
<dl>
  <dd>
<pre>
enum <b>DistanceType</b> {
  Geodesic,
  Euclidean
}
</pre>
 Different kinds of distance types.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Geodesic</tt>
   <dd>     geodesic computation
   </dd>
    <dt><tt> Euclidean</tt>
   <dd> Geodesic     euclidean  computation</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMPointOnCurve.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
