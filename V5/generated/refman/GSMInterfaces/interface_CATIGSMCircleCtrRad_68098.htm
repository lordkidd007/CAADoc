<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMCircleCtrRad</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="interface_CATIGSMCircleCtrPt_61730.htm">Previous</a>  <a href="interface_CATIGSMCircleTritangent_106100.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMCircleCtrRad</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIGSMCircleCtrRad
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMCircleCtrRad</b>
</p>
<p>
<b><i> Interface to circle feature defined by a center and a radius.</i></b><br>
  
 <b>Role</b>: Allows you to access data of the circle feature created by using 
 its center and a radius.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMFactory_38152.htm#CreateCircle">CATIGSMFactory.CreateCircle</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCenter(CATISpecObject_var&amp;)"><b>GetCenter</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the circle center.
 <dt> o 
    <a href="#GetDiameter(CATICkeParm_var&amp;)"><b>GetDiameter</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the diameter of the circle.
 <dt> o 
    <a href="#GetDiameterMode(CATBoolean&amp;)"><b>GetDiameterMode</b></a>(CATBoolean&amp;)
<dd>  Gets DiameterMode.
 <dt> o 
    <a href="#GetFirstDirection(CATIGSMDirection_var&amp;)"><b>GetFirstDirection</b></a>(CATIGSMDirection_var&amp;)
<dd>  Gets the first direction.
 <dt> o 
    <a href="#GetRadius(CATICkeParm_var&amp;)"><b>GetRadius</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the circle radius.
 <dt> o 
    <a href="#GetSecondDirection(CATMathDirection&amp;)"><b>GetSecondDirection</b></a>(CATMathDirection&amp;)
<dd>  Gets the second direction on the plane to compute the point (for stability).
 <dt> o 
    <a href="#GetSupport(CATISpecObject_var&amp;)"><b>GetSupport</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the support surface.
 <dt> o 
    <a href="#IsGeodesic(CATBoolean&amp;)"><b>IsGeodesic</b></a>(CATBoolean&amp;)
<dd>  Queries whether the circle is geodesic or not.
 <dt> o 
    <a href="#SetCenter(CATISpecObject_var)"><b>SetCenter</b></a>(CATISpecObject_var)
<dd>  Sets the circle center.
 <dt> o 
    <a href="#SetDiameter(CATICkeParm_var)"><b>SetDiameter</b></a>(CATICkeParm_var)
<dd>  Sets DiameterMode to TRUE and then sets the diameter.
 <dt> o 
    <a href="#SetDiameterMode(CATBoolean)"><b>SetDiameterMode</b></a>(CATBoolean)
<dd>  Sets DiameterMode.
 <dt> o 
    <a href="#SetFirstDirection(CATIGSMDirection_var)"><b>SetFirstDirection</b></a>(CATIGSMDirection_var)
<dd>  Sets the first direction.
 <dt> o 
    <a href="#SetGeodesic()"><b>SetGeodesic</b></a>()
<dd>  Sets the circle on the surface (Geodesic mode).
 <dt> o 
    <a href="#SetRadius(CATICkeParm_var)"><b>SetRadius</b></a>(CATICkeParm_var)
<dd>  Sets DiameterMode to FALSE and then sets the radius.
 <dt> o 
    <a href="#SetSecondDirection(CATMathDirection&amp;)"><b>SetSecondDirection</b></a>(CATMathDirection&amp;)
<dd>  Sets the second direction on the plane to compute the point (for stability).
 <dt> o 
    <a href="#SetSupport(CATISpecObject_var)"><b>SetSupport</b></a>(CATISpecObject_var)
<dd>  Sets the support surface.
 <dt> o 
    <a href="#UnsetGeodesic()"><b>UnsetGeodesic</b></a>()
<dd>  Inactivates geodesic circle.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCenter"></a><a name="GetCenter(CATISpecObject_var&amp;)"></a> <dt> o <b>GetCenter</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCenter</b>(<td>CATISpecObject_var&amp; <td><tt>oCenter</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the circle center.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCenter</tt>
   <dd>      center point</dd>
</dl>
</dl>
</dl>
<a name="GetDiameter"></a><a name="GetDiameter(CATICkeParm_var&amp;)"></a> <dt> o <b>GetDiameter</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDiameter</b>(<td>CATICkeParm_var&amp; <td><tt>ohDiameter</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the diameter of the circle. 
 <br>Note: Succeeds only if DiameterMode is set to TRUE
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohDiameter</tt>
   <dd>      diameter</dd>
</dl>
</dl>
</dl>
<a name="GetDiameterMode"></a><a name="GetDiameterMode(CATBoolean&amp;)"></a> <dt> o <b>GetDiameterMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDiameterMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oDiameterMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets DiameterMode. 
 <br>DiameterMode = FALSE implies radius (default), 
 <br>DiameterMode = TRUE implies diameter
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDiameterMode</tt>
   <dd>      Diameter Mode</dd>
</dl>
</dl>
</dl>
<a name="GetFirstDirection"></a><a name="GetFirstDirection(CATIGSMDirection_var&amp;)"></a> <dt> o <b>GetFirstDirection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFirstDirection</b>(<td>CATIGSMDirection_var&amp; <td><tt>oElem</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the first direction.
 <br>
 The direction is used as angle reference.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      first direction 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMDirection_50112.htm">CATIGSMDirection</a>
</dl>
</dl>
<a name="GetRadius"></a><a name="GetRadius(CATICkeParm_var&amp;)"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRadius</b>(<td>CATICkeParm_var&amp; <td><tt>oRadius</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the circle radius. 
 <br>Note: Succeeds only if DiameterMode is set to FALSE
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRadius</tt>
   <dd>       radius positive value</dd>
</dl>
</dl>
</dl>
<a name="GetSecondDirection"></a><a name="GetSecondDirection(CATMathDirection&amp;)"></a> <dt> o <b>GetSecondDirection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSecondDirection</b>(<td><a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection&amp;</a> <td><tt>oDir</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the second direction on the plane to compute the point (for stability).
 <br>This direction has to be kept perpendicular to the first direction
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDir</tt>
   <dd>      second direction
      </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection</a>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSupport</b>(<td>CATISpecObject_var&amp; <td><tt>oSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the support surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSupport</tt>
   <dd>       the support surface</dd>
</dl>
</dl>
</dl>
<a name="IsGeodesic"></a><a name="IsGeodesic(CATBoolean&amp;)"></a> <dt> o <b>IsGeodesic</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsGeodesic</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oGeodesic</tt>) = 0  </table></dt>
<dl>
  <dd>
 Queries whether the circle is geodesic or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGeodesic</tt>
   <dd>       geodesic flag  (TRUE)</dd>
</dl>
</dl>
</dl>
<a name="SetCenter"></a><a name="SetCenter(CATISpecObject_var)"></a> <dt> o <b>SetCenter</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCenter</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iCenter</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the circle center.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenter</tt>
   <dd>      center point</dd>
</dl>
</dl>
</dl>
<a name="SetDiameter"></a><a name="SetDiameter(CATICkeParm_var)"></a> <dt> o <b>SetDiameter</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDiameter</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>ihDiameter</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets DiameterMode to TRUE and then sets the diameter.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihDiameter</tt>
   <dd>      diameter</dd>
</dl>
</dl>
</dl>
<a name="SetDiameterMode"></a><a name="SetDiameterMode(CATBoolean)"></a> <dt> o <b>SetDiameterMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDiameterMode</b>(<td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iDiameterMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets DiameterMode. 
 <br>DiameterMode = FALSE implies radius (default), 
 <br>DiameterMode = TRUE implies diameter. 
 <br>Note: When DiameterMode is changed, Radius/Diameter value,
 which is stored will not be modified.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDiameterMode</tt>
   <dd>      Diameter Mode</dd>
</dl>
</dl>
</dl>
<a name="SetFirstDirection"></a><a name="SetFirstDirection(CATIGSMDirection_var)"></a> <dt> o <b>SetFirstDirection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetFirstDirection</b>(<td> const <a href="../GSMInterfaces/interface_CATIGSMDirection_50112.htm">CATIGSMDirection_var</a> <td><tt>iElem</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the first direction.
 <br>
 The direction is used as angle reference.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      first direction 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMDirection_50112.htm">CATIGSMDirection</a>
</dl>
</dl>
<a name="SetGeodesic"></a><a name="SetGeodesic()"></a> <dt> o <b>SetGeodesic</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGeodesic</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Sets the circle on the surface (Geodesic mode).
</dl>
<a name="SetRadius"></a><a name="SetRadius(CATICkeParm_var)"></a> <dt> o <b>SetRadius</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRadius</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iRadius</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets DiameterMode to FALSE and then sets the radius.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRadius</tt>
   <dd>       radius</dd>
</dl>
</dl>
</dl>
<a name="SetSecondDirection"></a><a name="SetSecondDirection(CATMathDirection&amp;)"></a> <dt> o <b>SetSecondDirection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSecondDirection</b>(<td> const <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection&amp;</a> <td><tt>iDir</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the second direction on the plane to compute the point (for stability).
 <br>This direction has to be kept perpendicular to the first direction
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDir</tt>
   <dd>      second direction
      </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection</a>
</dl>
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATISpecObject_var)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSupport</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the support surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd>      the support surface</dd>
</dl>
</dl>
</dl>
<a name="UnsetGeodesic"></a><a name="UnsetGeodesic()"></a> <dt> o <b>UnsetGeodesic</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>UnsetGeodesic</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Inactivates geodesic circle. 
 <br>Note: The circle becomes euclidean, and the surface is used to compute the circle axis.
</dl>
<hr>
 This object is included in the file: <b>CATIGSMCircleCtrRad.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
