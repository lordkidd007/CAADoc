<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMCurvePar</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="interface_CATIGSMCurveCst_43211.htm">Previous</a>  <a href="interface_CATIGSMCurveSmooth_64602.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMCurvePar</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIGSMCurvePar
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMCurvePar</b>
</p>
<p>
<b><i> Parallel Curve.</i></b><br>

 <b>Role</b>: Allows to access data of the Parallel Curve feature created by using 
 a curve, a support, an orientation and an offset value
  Gets, sets the Curve Offset definition elements
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/interface_CATIGSMFactory_38152.htm#CreateCurvePar">CATIGSMFactory.CreateCurvePar</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Get3DSmoothing(CATBoolean&amp;)"><b>Get3DSmoothing</b></a>(CATBoolean&amp;)
<dd>  Queries whether '3D Smoothing' for smoothing operation is activated or not.
 <dt> o 
    <a href="#GetBothSidesMode(CATBoolean&amp;)"><b>GetBothSidesMode</b></a>(CATBoolean&amp;)
<dd>  Queries whether both sides are computed or not.
 <dt> o 
    <a href="#GetCkeCurveParValue(CATICkeParm_var&amp;)"><b>GetCkeCurveParValue</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the offset value.
 <dt> o 
    <a href="#GetCkeCurveParValue1(CATICkeParm_var&amp;)"><b>GetCkeCurveParValue1</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the offset value.
 <dt> o 
    <a href="#GetCkeCurveParValue2(CATICkeParm_var&amp;)"><b>GetCkeCurveParValue2</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the offset value.
 <dt> o 
    <a href="#GetCurveParLaw(CATICkeLaw_var&amp;)"><b>GetCurveParLaw</b></a>(CATICkeLaw_var&amp;)
<dd>  Gets the offset law.
 <dt> o 
    <a href="#GetCurveParType(enum CATGSMCurveParCornerType&amp;)"><b>GetCurveParType</b></a>(enum CATGSMCurveParCornerType&amp;)
<dd>  Gets the Corner type .
 <dt> o 
    <a href="#GetCurveParValue(double&amp;)"><b>GetCurveParValue</b></a>(double&amp;)
<dd>  Gets the offset value.
 <dt> o 
    <a href="#GetCurveParValue1(double&amp;)"><b>GetCurveParValue1</b></a>(double&amp;)
<dd>  Gets the offset value.
 <dt> o 
    <a href="#GetCurveParValue2(double&amp;)"><b>GetCurveParValue2</b></a>(double&amp;)
<dd>  Gets the offset value.
 <dt> o 
    <a href="#GetDeviationValue(CATICkeParm_var&amp;)"><b>GetDeviationValue</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the maximum deviation allowed for smoothing operation.
 <dt> o 
    <a href="#GetDeviationValue(double&amp;)"><b>GetDeviationValue</b></a>(double&amp;)
<dd>  Gets the maximum deviation allowed for smoothing operation.
 <dt> o 
    <a href="#GetGeodesic(CATBoolean&amp;)"><b>GetGeodesic</b></a>(CATBoolean&amp;)
<dd>  Gets the Geodesic mode.
 <dt> o 
    <a href="#GetInvertDirection(CATBoolean&amp;)"><b>GetInvertDirection</b></a>(CATBoolean&amp;)
<dd>  Gets the orientation.
 <dt> o 
    <a href="#GetInvertMappingLaw(CATBoolean&amp;)"><b>GetInvertMappingLaw</b></a>(CATBoolean&amp;)
<dd>  Gets the mapping orientation of the law 
 (if offset is specified by a law).
 <dt> o 
    <a href="#GetOtherSide(CATISpecObject_var&amp;)"><b>GetOtherSide</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the other side.
 <dt> o 
    <a href="#GetPassingPoint(CATISpecObject_var&amp;)"><b>GetPassingPoint</b></a>(CATISpecObject_var&amp;)
<dd>   Gets the passing point.
 <dt> o 
    <a href="#GetPitchLawType(enum CATGSMBasicLawType&amp;)"><b>GetPitchLawType</b></a>(enum CATGSMBasicLawType&amp;)
<dd>  Gets pitch law type.
 <dt> o 
    <a href="#GetPlaneNormal(CATMathVector&amp;)"><b>GetPlaneNormal</b></a>(CATMathVector&amp;)
<dd>  Get the Normal of the plane created when the Support of the curve is not specified.
 <dt> o 
    <a href="#GetProfil(CATISpecObject_var&amp;)"><b>GetProfil</b></a>(CATISpecObject_var&amp;)
<dd>   Gets the reference curve.
 <dt> o 
    <a href="#GetSmoothingType(CATGSMTolerantModelingSmoothingType&amp;)"><b>GetSmoothingType</b></a>(CATGSMTolerantModelingSmoothingType&amp;)
<dd>  Gets Smoothing Type.
 <dt> o 
    <a href="#GetSupport(CATISpecObject_var&amp;)"><b>GetSupport</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the support of the curve.
 <dt> o 
    <a href="#IsOffsetSpecifiedByALaw(CATBoolean&amp;)"><b>IsOffsetSpecifiedByALaw</b></a>(CATBoolean&amp;)
<dd>  Queries wether the offset of curve parallel is specified by a law or a constant value.
 <dt> o 
    <a href="#Set3DSmoothing(CATBoolean)"><b>Set3DSmoothing</b></a>(CATBoolean)
<dd>  Sets or unsets the '3D Smoothing' activation for smoothing operation.
 <dt> o 
    <a href="#SetBothSidesMode(CATBoolean)"><b>SetBothSidesMode</b></a>(CATBoolean)
<dd>  Sets or unsets the computation of both sides.
 <dt> o 
    <a href="#SetCurveParLaw(CATICkeLaw_var)"><b>SetCurveParLaw</b></a>(CATICkeLaw_var)
<dd>  Sets the offset law.
 <dt> o 
    <a href="#SetCurveParType(enum CATGSMCurveParCornerType)"><b>SetCurveParType</b></a>(enum CATGSMCurveParCornerType)
<dd>  Sets the Corner type .
 <dt> o 
    <a href="#SetCurveParValue(CATICkeParm_var)"><b>SetCurveParValue</b></a>(CATICkeParm_var)
<dd>  Sets the offset value.
 <dt> o 
    <a href="#SetCurveParValue(double)"><b>SetCurveParValue</b></a>(double)
<dd>  Sets the offset value.
 <dt> o 
    <a href="#SetCurveParValue1(CATICkeParm_var)"><b>SetCurveParValue1</b></a>(CATICkeParm_var)
<dd>  Sets the offset value.
 <dt> o 
    <a href="#SetCurveParValue1(double)"><b>SetCurveParValue1</b></a>(double)
<dd>  Sets the offset value.
 <dt> o 
    <a href="#SetCurveParValue2(CATICkeParm_var)"><b>SetCurveParValue2</b></a>(CATICkeParm_var)
<dd>  Sets the offset value.
 <dt> o 
    <a href="#SetCurveParValue2(double)"><b>SetCurveParValue2</b></a>(double)
<dd>  Sets the offset value.
 <dt> o 
    <a href="#SetDeviationValue(CATICkeParm_var&amp;)"><b>SetDeviationValue</b></a>(CATICkeParm_var&amp;)
<dd>  Sets the maximum deviation allowed for smoothing operation.
 <dt> o 
    <a href="#SetDeviationValue(double)"><b>SetDeviationValue</b></a>(double)
<dd>  Sets the maximum deviation allowed for smoothing operation.
 <dt> o 
    <a href="#SetGeodesic(CATBoolean)"><b>SetGeodesic</b></a>(CATBoolean)
<dd>  Sets the Geodesic mode.
 <dt> o 
    <a href="#SetInvertDirection(CATBoolean)"><b>SetInvertDirection</b></a>(CATBoolean)
<dd>  Sets the orientation.
 <dt> o 
    <a href="#SetInvertMappingLaw(CATBoolean)"><b>SetInvertMappingLaw</b></a>(CATBoolean)
<dd>  Sets the mapping orientation of the law 
 (if offset is specified by a law).
 <dt> o 
    <a href="#SetPassingPoint(CATISpecObject_var)"><b>SetPassingPoint</b></a>(CATISpecObject_var)
<dd>  Sets the passing point.
 <dt> o 
    <a href="#SetPitchLawType(enum CATGSMBasicLawType)"><b>SetPitchLawType</b></a>(enum CATGSMBasicLawType)
<dd>  Sets pitch law type.
 <dt> o 
    <a href="#SetPlaneNormal(CATMathVector&amp;)"><b>SetPlaneNormal</b></a>(CATMathVector&amp;)
<dd>  Set the Normal of the plane created when the Support of the curve is not specified.
 <dt> o 
    <a href="#SetProfil(CATISpecObject_var)"><b>SetProfil</b></a>(CATISpecObject_var)
<dd>  Sets the reference curve.
 <dt> o 
    <a href="#SetSmoothingType(CATGSMTolerantModelingSmoothingType)"><b>SetSmoothingType</b></a>(CATGSMTolerantModelingSmoothingType)
<dd>  Sets Smoothing Type.
 <dt> o 
    <a href="#SetSupport(CATISpecObject_var)"><b>SetSupport</b></a>(CATISpecObject_var)
<dd>   Sets the reference support.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Get3DSmoothing"></a><a name="Get3DSmoothing(CATBoolean&amp;)"></a> <dt> o <b>Get3DSmoothing</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Get3DSmoothing</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>o3DSmoothing</tt>) = 0  </table></dt>
<dl>
  <dd>
 Queries whether '3D Smoothing' for smoothing operation is activated or not.
 Available only for tangent or curvature smoothing type
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> o3DSmoothing</tt>
   <dd>      TRUE  : Smoothing performed without specifying support
      FALSE : Smoothing performed with specific support (retrieved by GetSupport)</dd>
</dl>
</dl>
</dl>
<a name="GetBothSidesMode"></a><a name="GetBothSidesMode(CATBoolean&amp;)"></a> <dt> o <b>GetBothSidesMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetBothSidesMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Queries whether both sides are computed or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>      Computation option on (TRUE) or off (FALSE)</dd>
</dl>
</dl>
</dl>
<a name="GetCkeCurveParValue"></a><a name="GetCkeCurveParValue(CATICkeParm_var&amp;)"></a> <dt> o <b>GetCkeCurveParValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCkeCurveParValue</b>(<td>CATICkeParm_var&amp; <td><tt>oOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="GetCkeCurveParValue1"></a><a name="GetCkeCurveParValue1(CATICkeParm_var&amp;)"></a> <dt> o <b>GetCkeCurveParValue1</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCkeCurveParValue1</b>(<td>CATICkeParm_var&amp; <td><tt>oOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="GetCkeCurveParValue2"></a><a name="GetCkeCurveParValue2(CATICkeParm_var&amp;)"></a> <dt> o <b>GetCkeCurveParValue2</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCkeCurveParValue2</b>(<td>CATICkeParm_var&amp; <td><tt>oOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="GetCurveParLaw"></a><a name="GetCurveParLaw(CATICkeLaw_var&amp;)"></a> <dt> o <b>GetCurveParLaw</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCurveParLaw</b>(<td>CATICkeLaw_var&amp; <td><tt>oOffLaw</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the offset law.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffLaw</tt>
   <dd>      Offset law</dd>
</dl>
</dl>
</dl>
<a name="GetCurveParType"></a><a name="GetCurveParType(enum CATGSMCurveParCornerType&amp;)"></a> <dt> o <b>GetCurveParType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCurveParType</b>(<td>enum CATGSMCurveParCornerType&amp; <td><tt>oCornerType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the Corner type . 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCornerType</tt>
   <dd>     CATGSMCurvePar_Sharp = 0 : Sharp corner
     CATGSMCurvePar_Round = 1 : Round corner</dd>
</dl>
</dl>
</dl>
<a name="GetCurveParValue"></a><a name="GetCurveParValue(double&amp;)"></a> <dt> o <b>GetCurveParValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCurveParValue</b>(<td>double&amp; <td><tt>oOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="GetCurveParValue1"></a><a name="GetCurveParValue1(double&amp;)"></a> <dt> o <b>GetCurveParValue1</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCurveParValue1</b>(<td>double&amp; <td><tt>oOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="GetCurveParValue2"></a><a name="GetCurveParValue2(double&amp;)"></a> <dt> o <b>GetCurveParValue2</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCurveParValue2</b>(<td>double&amp; <td><tt>oOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="GetDeviationValue"></a><a name="GetDeviationValue(CATICkeParm_var&amp;)"></a> <dt> o <b>GetDeviationValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDeviationValue</b>(<td>CATICkeParm_var&amp; <td><tt>oDeviation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the maximum deviation allowed for smoothing operation.
 <br> Gets in distance unit, it corresponds to the radius of a 
 pipe around the input curve in which the result is allowed to be.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Elem</tt>
   <dd>      Maximum deviation literal feature</dd>
</dl>
</dl>
</dl>
<a name="GetDeviationValue"></a><a name="GetDeviationValue(double&amp;)"></a> <dt> o <b>GetDeviationValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDeviationValue</b>(<td>double&amp; <td><tt>oDeviation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the maximum deviation allowed for smoothing operation.
 <br> Gets in distance unit, it corresponds to the radius of a 
 pipe around the input curve in which the result is allowed to be.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> val</tt>
   <dd>      Maximum deviation value</dd>
</dl>
</dl>
</dl>
<a name="GetGeodesic"></a><a name="GetGeodesic(CATBoolean&amp;)"></a> <dt> o <b>GetGeodesic</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGeodesic</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oGeodesic</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the Geodesic mode.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGeodesic</tt>
   <dd>     False : Euclidian mode
     True : Geodesic mode</dd>
</dl>
</dl>
</dl>
<a name="GetInvertDirection"></a><a name="GetInvertDirection(CATBoolean&amp;)"></a> <dt> o <b>GetInvertDirection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetInvertDirection</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oInvert</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the orientation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInvert</tt>
   <dd>     : False means that there is no invertion of the curve orientation 
   (orientation is the vector product of the tangent of the curve  by the normal on the support)
     : True to invert this orientation</dd>
</dl>
</dl>
</dl>
<a name="GetInvertMappingLaw"></a><a name="GetInvertMappingLaw(CATBoolean&amp;)"></a> <dt> o <b>GetInvertMappingLaw</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetInvertMappingLaw</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oInvert</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the mapping orientation of the law 
 (if offset is specified by a law).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInvert</tt>
   <dd>     False : Law is applied from the beginning to the end of the curve (mapping is not inverted).
     True :  Law is applied from the end to the beginning of the curve (mapping is inverted).</dd>
</dl>
</dl>
</dl>
<a name="GetOtherSide"></a><a name="GetOtherSide(CATISpecObject_var&amp;)"></a> <dt> o <b>GetOtherSide</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOtherSide</b>(<td>CATISpecObject_var&amp; <td><tt>oElem</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the other side.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Other side</dd>
</dl>
</dl>
</dl>
<a name="GetPassingPoint"></a><a name="GetPassingPoint(CATISpecObject_var&amp;)"></a> <dt> o <b>GetPassingPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPassingPoint</b>(<td>CATISpecObject_var&amp; <td><tt>oPassingPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
  Gets the passing point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPassingPoint</tt>
   <dd>      new passing point</dd>
</dl>
</dl>
</dl>
<a name="GetPitchLawType"></a><a name="GetPitchLawType(enum CATGSMBasicLawType&amp;)"></a> <dt> o <b>GetPitchLawType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPitchLawType</b>(<td>enum CATGSMBasicLawType&amp; <td><tt>oType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets pitch law type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>      Type of law (from CATGSMBasicLawType enumeration).
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMBasicLawType_63060.htm">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="GetPlaneNormal"></a><a name="GetPlaneNormal(CATMathVector&amp;)"></a> <dt> o <b>GetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPlaneNormal</b>(<td><a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>oNormal</tt>) = 0  </table></dt>
<dl>
  <dd>
 Get the Normal of the plane created when the Support of the curve is not specified.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNormal</tt>
   <dd>    CATMathVector</dd>
</dl>
</dl>
</dl>
<a name="GetProfil"></a><a name="GetProfil(CATISpecObject_var&amp;)"></a> <dt> o <b>GetProfil</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetProfil</b>(<td>CATISpecObject_var&amp; <td><tt>oElem</tt>) = 0  </table></dt>
<dl>
  <dd>
  Gets the reference curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      new reference curve</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothingType"></a><a name="GetSmoothingType(CATGSMTolerantModelingSmoothingType&amp;)"></a> <dt> o <b>GetSmoothingType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSmoothingType</b>(<td><a href="../GSMInterfaces/enum_CATGSMTolerantModelingSmoothingType_252573.htm">CATGSMTolerantModelingSmoothingType&amp;</a> <td><tt>oType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets Smoothing Type.
 <br>
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>      Smoothing type
       : TM_None -> No Smoothing
       : TM_G1 -> G1 Smoothing : Enhance current continuity to tangent continuity
		: TM_G2 -> G2 Smoothing : Enhance current continuity to curvature continuity
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMTolerantModelingSmoothingType_252573.htm">CATGSMTolerantModelingSmoothingType</a>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSupport</b>(<td>CATISpecObject_var&amp; <td><tt>oSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
 Gets the support of the curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSupport</tt>
   <dd>      new curve support</dd>
</dl>
</dl>
</dl>
<a name="IsOffsetSpecifiedByALaw"></a><a name="IsOffsetSpecifiedByALaw(CATBoolean&amp;)"></a> <dt> o <b>IsOffsetSpecifiedByALaw</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsOffsetSpecifiedByALaw</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oIsLaw</tt>) = 0  </table></dt>
<dl>
  <dd>
 Queries wether the offset of curve parallel is specified by a law or a constant value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLaw</tt>
   <dd>     : False means that the offset of curve parallel is specified by a law. 
     : True  means that the offset of curve parallel is specified by a constant value.</dd>
</dl>
</dl>
</dl>
<a name="Set3DSmoothing"></a><a name="Set3DSmoothing(CATBoolean)"></a> <dt> o <b>Set3DSmoothing</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Set3DSmoothing</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>i3DSmoothing</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets or unsets the '3D Smoothing' activation for smoothing operation.
 Available only for tangent or curvature smoothing type
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> i3DSmoothing</tt>
   <dd>      TRUE  : Smoothing performed without specifying support
      FALSE : Smoothing performed with specific support (retrieved by GetSupport)</dd>
</dl>
</dl>
</dl>
<a name="SetBothSidesMode"></a><a name="SetBothSidesMode(CATBoolean)"></a> <dt> o <b>SetBothSidesMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetBothSidesMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets or unsets the computation of both sides.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>      Computation option on (TRUE) or off (FALSE)</dd>
</dl>
</dl>
</dl>
<a name="SetCurveParLaw"></a><a name="SetCurveParLaw(CATICkeLaw_var)"></a> <dt> o <b>SetCurveParLaw</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurveParLaw</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeLaw_18752.htm">CATICkeLaw_var</a> <td><tt>iOffLaw</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the offset law.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffLaw</tt>
   <dd>      Offset law</dd>
</dl>
</dl>
</dl>
<a name="SetCurveParType"></a><a name="SetCurveParType(enum CATGSMCurveParCornerType)"></a> <dt> o <b>SetCurveParType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurveParType</b>(<td>enum CATGSMCurveParCornerType <td><tt>iCornerType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the Corner type . 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioCornerType</tt>
   <dd>     CATGSMCurvePar_Sharp = 0 : Sharp corner
     CATGSMCurvePar_Round = 1 : Round corner</dd>
</dl>
</dl>
</dl>
<a name="SetCurveParValue"></a><a name="SetCurveParValue(CATICkeParm_var)"></a> <dt> o <b>SetCurveParValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurveParValue</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="SetCurveParValue"></a><a name="SetCurveParValue(double)"></a> <dt> o <b>SetCurveParValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurveParValue</b>(<td>double <td><tt>iOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="SetCurveParValue1"></a><a name="SetCurveParValue1(CATICkeParm_var)"></a> <dt> o <b>SetCurveParValue1</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurveParValue1</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="SetCurveParValue1"></a><a name="SetCurveParValue1(double)"></a> <dt> o <b>SetCurveParValue1</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurveParValue1</b>(<td>double <td><tt>iOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="SetCurveParValue2"></a><a name="SetCurveParValue2(CATICkeParm_var)"></a> <dt> o <b>SetCurveParValue2</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurveParValue2</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>iOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="SetCurveParValue2"></a><a name="SetCurveParValue2(double)"></a> <dt> o <b>SetCurveParValue2</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCurveParValue2</b>(<td>double <td><tt>iOffValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffValue</tt>
   <dd>      Offset value</dd>
</dl>
</dl>
</dl>
<a name="SetDeviationValue"></a><a name="SetDeviationValue(CATICkeParm_var&amp;)"></a> <dt> o <b>SetDeviationValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDeviationValue</b>(<td> const CATICkeParm_var&amp; <td><tt>iDeviation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the maximum deviation allowed for smoothing operation. 
 <br> Sets in  distance unit, it corresponds to the radius of a
 pipe around the input curve in which the result is allowed to be.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Elem</tt>
   <dd>      Maximum deviation literal feature</dd>
</dl>
</dl>
</dl>
<a name="SetDeviationValue"></a><a name="SetDeviationValue(double)"></a> <dt> o <b>SetDeviationValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDeviationValue</b>(<td> const double <td><tt>iDeviation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the maximum deviation allowed for smoothing operation.
 <br> Sets in distance unit, it corresponds to the radius of a 
 pipe around the input curve in which the result is allowed to be.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> val</tt>
   <dd>      Maximum deviation value</dd>
</dl>
</dl>
</dl>
<a name="SetGeodesic"></a><a name="SetGeodesic(CATBoolean)"></a> <dt> o <b>SetGeodesic</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGeodesic</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iGeodesic</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the Geodesic mode. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeodesic</tt>
   <dd>     False : Euclidian mode
     True : Geodesic mode</dd>
</dl>
</dl>
</dl>
<a name="SetInvertDirection"></a><a name="SetInvertDirection(CATBoolean)"></a> <dt> o <b>SetInvertDirection</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetInvertDirection</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>Invert</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the orientation. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Invert</tt>
   <dd>      False means that there is no invertion of the curve orientation 
   (orientation is the vector product of the tangent of the curve  by the normal on the support)
      True to invert this orientation</dd>
</dl>
</dl>
</dl>
<a name="SetInvertMappingLaw"></a><a name="SetInvertMappingLaw(CATBoolean)"></a> <dt> o <b>SetInvertMappingLaw</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetInvertMappingLaw</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iInvert</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the mapping orientation of the law 
 (if offset is specified by a law).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInvert</tt>
   <dd>     False : Law is applied from the beginning to the end of the curve (mapping is not inverted).
     True :  Law is applied from the end to the beginning of the curve (mapping is inverted).</dd>
</dl>
</dl>
</dl>
<a name="SetPassingPoint"></a><a name="SetPassingPoint(CATISpecObject_var)"></a> <dt> o <b>SetPassingPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPassingPoint</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iPassingPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the passing point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPassingPoint</tt>
   <dd>      new passing point</dd>
</dl>
</dl>
</dl>
<a name="SetPitchLawType"></a><a name="SetPitchLawType(enum CATGSMBasicLawType)"></a> <dt> o <b>SetPitchLawType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPitchLawType</b>(<td> const enum CATGSMBasicLawType <td><tt>iType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets pitch law type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>      Type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_SType.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMBasicLawType_63060.htm">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="SetPlaneNormal"></a><a name="SetPlaneNormal(CATMathVector&amp;)"></a> <dt> o <b>SetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPlaneNormal</b>(<td><a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iNormal</tt>) = 0  </table></dt>
<dl>
  <dd>
 Set the Normal of the plane created when the Support of the curve is not specified.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNormal</tt>
   <dd>    CATMathVector</dd>
</dl>
</dl>
</dl>
<a name="SetProfil"></a><a name="SetProfil(CATISpecObject_var)"></a> <dt> o <b>SetProfil</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetProfil</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iElem</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the reference curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      new reference curve</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothingType"></a><a name="SetSmoothingType(CATGSMTolerantModelingSmoothingType)"></a> <dt> o <b>SetSmoothingType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSmoothingType</b>(<td><a href="../GSMInterfaces/enum_CATGSMTolerantModelingSmoothingType_252573.htm">CATGSMTolerantModelingSmoothingType</a> <td><tt>iType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets Smoothing Type. 
 <br>
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>      Smoothing type
       : TM_None -> No Smoothing
       : TM_G1 -> G1 Smoothing : Enhance current continuity to tangent continuity
		: TM_G2 -> G2 Smoothing : Enhance current continuity to curvature continuity
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../GSMInterfaces/enum_CATGSMTolerantModelingSmoothingType_252573.htm">CATGSMTolerantModelingSmoothingType</a>
</dl>
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATISpecObject_var)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSupport</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
  Sets the reference support.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd>      new curve support</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMCurvePar.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
