<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InteractiveInterfaces Interface CATIIniSearchTypeCriterion</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../InteractiveInterfaces.htm">This Framework</a>  <a href="interface_CATIIniSearchSymbolCriterion_161080.htm">Previous</a>  <a href="interface_CATIIniSearchUserCriterion_138286.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>InteractiveInterfaces Interface CATIIniSearchTypeCriterion</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../InteractiveInterfaces/interface_CATIIniSearchCriterion_98542.htm">InteractiveInterfaces.CATIIniSearchCriterion</a>
        |
        +---CATIIniSearchTypeCriterion
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIIniSearchTypeCriterion</b>
</p>
<p>
<b><i> Interface to define a type-based search criterion.</i></b><br>
 
 <b>Role:</b> This interface enables the complete definition of
 a search criterion on objects of a specified type.
 <br>The type is defined through Knowledgeware.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#SetParameters(CATIType*,CATIniSearchEnumeration::Comparison,CATUnicodeString)"><b>SetParameters</b></a>(CATIType*,CATIniSearchEnumeration::Comparison,CATUnicodeString)
<dd>  Sets the type parameter using a CATIType pointer.
 <dt> o 
    <a href="#SetParameters(CATUnicodeString&amp;,CATIniSearchEnumeration::Comparison,CATUnicodeString)"><b>SetParameters</b></a>(CATUnicodeString&amp;,CATIniSearchEnumeration::Comparison,CATUnicodeString)
<dd>  Sets the type parameter using the type internal name.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="SetParameters"></a><a name="SetParameters(CATIType*,CATIniSearchEnumeration::Comparison,CATUnicodeString)"></a> <dt> o <b>SetParameters</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetParameters</b>(<td> const <a href="../KnowledgeInterfaces/interface_CATIType_12614.htm">CATIType*</a> <td><tt>iSearchedType</tt>,<tr><td></td><td>CATIniSearchEnumeration::Comparison <td><tt>iOperatingSign</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> <td><tt>iWorkbenchInternalName</tt><td><tt>=""</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the type parameter using a CATIType pointer.
 <br><b>Role:</b> This method sets the type parameter 
 thanks to a pointer to 
<a href="../KnowledgeInterfaces/interface_CATIType_12614.htm">CATIType</a> representing the type of  objects looked for.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSearchedType</tt>
   <dd>    A pointer to CATIType representing the type of objects.
 </dd>
    <dt><tt> iOperatingSign</tt>
   <dd>    The value corresponding to the desired operating sign.
    <br>The only authorized values are Equal and Different.
 </dd>
    <dt><tt> iWorkbenchInternalName</tt>
   <dd>    The internal name of the <tt>workbench</tt> to which the 
    type belongs (the NLS name is displayed in the Edit/Search
    command's user interface). 
    <br>This parameter is only required for printing out the query.
    <br>To retrieve this piece of information you can proceed as follows:
    <li>Record a macro command on a scenario based on the Edit/Search 
    command with your Search query as input (NLS based query).</li>
    <li>Check the macro file. It contains the query under the following
    format: iWorkbenchInternalName.TypeInternalName</li>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      E_FAIL if the criterion is not correctly set up.
    <br>S_OK otherwise.
</dl>
</dl>
<a name="SetParameters"></a><a name="SetParameters(CATUnicodeString&amp;,CATIniSearchEnumeration::Comparison,CATUnicodeString)"></a> <dt> o <b>SetParameters</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetParameters</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iSearchedTypeInternalName</tt>,<tr><td></td><td>CATIniSearchEnumeration::Comparison <td><tt>iOperatingSign</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString</a> <td><tt>iWorkbenchInternalName</tt><td><tt>=""</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the type parameter using the type internal name.
 <br><b>Role:</b> This method sets the type parameter 
 thanks to a CATUnicodeString corresponding to the internal 
 name of the type of object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSearchedTypeInternalName</tt>
   <dd>    The internal name of a type of object.
    <br>For instance <tt>GSMScaling</tt> is the internal name 
    for the Generative Shape Design scaling operation.
 </dd>
    <dt><tt> iOperatingSign</tt>
   <dd>    The value corresponding to the desired operating sign.
    <br>The only authorized values are Equal and Different.
 </dd>
    <dt><tt> iWorkbenchInternalName</tt>
   <dd>    The internal name of the <tt>workbench</tt> to which the 
    type belongs (the NLS name is displayed in the Edit/Search
    command's user interface). 
    <br>This parameter is only required for printing out the query.
    <br>The internal workbench name corresponding to <tt>GSMScaling</tt>
    is <tt>CATPrtSearch</tt>.
    <br>To retrieve this piece of information you can proceed as follows:
    <li>Record a macro command on a scenario based on the Edit/Search 
    command with your Search query as input (NLS based query).</li>
    <li>Check the macro file. It contains the query under the following
    format: iWorkbenchInternalName.iSearchedTypeInternalName</li>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      E_FAIL if the criterion is not correctly set up.
    <br>S_OK otherwise.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIIniSearchTypeCriterion.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATInteractiveInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
