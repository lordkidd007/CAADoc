<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InteractiveInterfaces Interface CATIInputDescription</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../InteractiveInterfaces.htm">This Framework</a>  <a href="interface_CATIIniSettingManagment_107935.htm">Previous</a>  <a href="interface_CATIOrientationFlag_73189.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>InteractiveInterfaces Interface CATIInputDescription</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIInputDescription
 </pre>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../InteractiveInterfaces/class_CATIniInputDescriptionAdaptor_175083.htm">CATIniInputDescriptionAdaptor</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIInputDescription</b>
</p>
<p>
<b><i>   Interface defining feature integration to the linearity concepts
 applied to Ordered Geometrical Set.</i></b><br>

 <br><b>Role:</b>
 This interface should be implemented for features 
 to insert into an Ordered Geometrical Set (see <a href="../MecModInterfaces/interface_CATIGSMTool_22478.htm">CATIGSMTool</a> ). <br>It says through 
<a href="#GetFeatureType">GetFeatureType</a> method whether a feature generates a new "geometrical base" or modifies an existing geometry.</br>
 Ordered Geometrical Set has introduced the concept of <b>absorbed feature</b>
 (a feature F1 is absorbed if there is a feature F2 modifying F1 as input,
 F1 is called absorbed feature and F2 absorbant feature). A modification
 feature gives the list of the input features that are modified
 (see 
<a href="#GetListOfModifiedFeatures">GetListOfModifiedFeatures</a> ). Among them, one feature is considered as the main input (see 
<a href="#GetMainInput">GetMainInput</a> ). 
 <br><br>The absorbed features have to be consistent with the result
 of the feature. That is to say, if the feature is a geometrical element, their
 inputs have to be also geometrical elements and the inputs behaviors (shape/volume/solid)
 have to be the same as the feature behavior (see 
<a href="../MecModInterfaces/interface_CATIMf3DBehavior_48536.htm">CATIMf3DBehavior</a> ), if the feature is a shape the inputs have to be shapes.
 <br><br>Absorption impacts, among other things, visualization (absorbed
 features are not displayed), graphic properties management (feature properties
 inherit from his main input feature properties), selection (absorbed
 feature cannot be selected in specification tree), result body (see 
<a href="../MecModInterfaces/interface_CATIBodyRequest_46406.htm">CATIBodyRequest</a> ), insertion.
 <br><br>
 The following table shows the rules which must be ensured regarding the methods results.
 For instance, GetMainInput applied to a creation feature (GetFeatureType returning
 FeatureType_Creation) must return E_FAIL and the argument oMainInput must be set to Nul.
 <pre>
 ====================================================================================
 |    GetFeatureType    |    GetMainInput      |     GetListOfModifiedFeatures      |
 |                      | Returns   oMainInput | Returns   ioListOfModifiedFeatures |
 ====================================================================================
 |      Creation        |  E_FAIL       Nul    |  E_FAIL           {}               |
 ====================================================================================
 |  ContextualCreation  |   S_OK       Input   |  E_FAIL           {}               |
 ====================================================================================
 |    Modification      |   S_OK       Input1  |   S_OK    {Input1[, Input2, ...]}  |
 ====================================================================================
 </pre>
 <p><b>BOA information</b>: this interface can be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page. 
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFeatureType(CATIInputDescription::FeatureType&amp;)"><b>GetFeatureType</b></a>(CATIInputDescription::FeatureType&amp;)
<dd>    Retrieves the type of the feature.
 <dt> o 
    <a href="#GetListOfModifiedFeatures(CATListValCATBaseUnknown_var&amp;)"><b>GetListOfModifiedFeatures</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>    Retrieves the list of absorbed features.
 <dt> o 
    <a href="#GetMainInput(CATBaseUnknown_var&amp;)"><b>GetMainInput</b></a>(CATBaseUnknown_var&amp;)
<dd>    Retrieves the main input specification of the feature.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#FeatureType"><b>FeatureType</b></a>
<dd>  Type of the feature.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFeatureType"></a><a name="GetFeatureType(CATIInputDescription::FeatureType&amp;)"></a> <dt> o <b>GetFeatureType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetFeatureType</b>(<td>CATIInputDescription::FeatureType&amp; <td><tt>ioFeatureType</tt>) = 0   </table></dt>
<dl>
  <dd>
   Retrieves the type of the feature. 
   <br><b>Role:</b><br>This method retrieves the type of the feature. In most cases, the type is 
   fixed but it can also be variable according to its inputs (e.g. GSD split is a modification
   feature if the "Element to cut" is a shape and a creation feature if the "Element to cut" is a
   solid) or to feature parameters (e.g. GSD extrapol is a modification feature if option
   "Assemble result" is checked and a Creation feature otherwise). If returns E_FAIL ioFeatureType 
   must be set to FeatureType_Unset.
   
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioFeatureType</tt>
   <dd>   The type of the feature.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values</b>: 
   <ul>
     <li>S_OK  : ioFeatureType correctly valuated.</li>
     <li>E_FAIL: Unexpected failure.</li>
   </ul>
</dl>
</dl>
<a name="GetListOfModifiedFeatures"></a><a name="GetListOfModifiedFeatures(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetListOfModifiedFeatures</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetListOfModifiedFeatures</b>(<td>CATListValCATBaseUnknown_var&amp; <td><tt>ioListOfModifiedFeatures</tt>)= 0   </table></dt>
<dl>
  <dd>
   Retrieves the list of absorbed features.
   <br><b>Role:</b><br>This method returns the input specifications modified by the feature (e.g.
   for a GSD split the list contains the "Element to cut" feature) which are called absorbed features.
   <br>This method is relevant only for the features of type <tt>FeatureType_Modification</tt>.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioListOfModifiedFeatures</tt>
   <dd>   The list of absorbed features. It can't be void.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <b>Legal values</b>: 
   <ul>
   <li>S_OK: The type of the feature is <tt>FeatureType_Modification</tt> and there is no error.</li>
   <li>E_FAIL: If the type of the feature is <tt>FeatureType_Creation</tt> or
   <tt>FeatureType_ContextualCreation</tt> or there is an error</li>
   </ul>
</dl>
</dl>
<a name="GetMainInput"></a><a name="GetMainInput(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMainInput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetMainInput</b>(<td><a href="../System/class_CATBaseUnknown_var_67834.htm">CATBaseUnknown_var&amp;</a> <td><tt>oMainInput</tt>) = 0   </table></dt>
<dl>
  <dd>
   Retrieves the main input specification of the feature. 
   <br><b>Role:</b> This method returns the main input specification of the feature. This is only
   relevant for <tt>FeatureType_Modification</tt> and <tt>FeatureType_ContextualCreation</tt> feature.<br>
   For <tt>FeatureType_Modification</tt> feature, the MainInput has to be one of the list returned
   by 
<a href="#GetListOfModifiedFeatures">GetListOfModifiedFeatures</a>. In case of multiple inputs (e.g. GSD Trim and GSD Join),   the choice can be arbitrary or favoring one particular input. The main input is used essentially
   for graphic properties propagation.<br>
   For <tt>FeatureType_ContextualCreation</tt> feature, the MainInput is not an absorbed feature,
   it's the singular input with which the feature result is closely associated.

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMainInput</tt>
   <dd>   The main input of the feature.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <b>Legal values</b>: 
   <ul>
     <li>S_OK: The type of the feature is <tt>FeatureType_Modification</tt> or 
              <tt>FeatureType_ContextualCreation</tt>, and there is no error.</li>
     <li>E_FAIL: If the type of the feature is <tt>FeatureType_Creation</tt> or there is an error.</li>
   </ul>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="FeatureType"> <dt> o <b>FeatureType</b>
<dl>
  <dd>
<pre>
enum <b>FeatureType</b> {
  FeatureType_Unset,
  FeatureType_Creation,
  FeatureType_Modification,
  FeatureType_ContextualCreation
}
</pre>
 Type of the feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FeatureType_Unset</tt>
   <dd> Used for default assignment. 
 </dd>
    <dt><tt> FeatureType_Creation</tt>
   <dd> The feature creates matter. A GSD Line is a creation feature. 
 </dd>
    <dt><tt> FeatureType_Modification</tt>
   <dd> The feature modifies another feature. A GSD Split is a modification feature. 
 </dd>
    <dt><tt> FeatureType_ContextualCreation</tt>
   <dd> The feature creates matter but is closely associated with a specific feature. A GSD Offset is a contextual creation
 feature, it creates geometry contextually to a master feature.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIInputDescription.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATInteractiveInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
