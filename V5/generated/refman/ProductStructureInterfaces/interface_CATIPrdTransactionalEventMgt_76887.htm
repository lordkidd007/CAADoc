<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ProductStructureInterfaces Interface CATIPrdTransactionalEventMgt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ProductStructureInterfaces.htm" href="../ProductStructureInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ProductStructureInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIPrdTransactionalEventMgt"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ProductStructureInterfaces Interface CATIPrdTransactionalEventMgt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPrdTransactionalEventMgt_76887','CATIPrdTransactionalEventMgt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPrdTransactionalEventMgt</b>
</p>
<p>
<b><i> Interface allowing a transactional management for move operations.</i></b><br>


 <br><b>Role</b>: Sends a dedicated message to all listeners when moving children of the required product reference.
 This message is then used to put to sleep redraw management. 
 <p>
 <b>Warning</b> : the caller has to insure that a call to BeginMoveTransaction must be safely ended with a call to StopMoveTransaction.
 <dl>
  <dt> Example: </dt>
  <dd> <pre class="code">  // Assuming that ipProduct is a reference CATIProduct-like object under which instances will be managed in a transactional mode.
  CATIPrdTransactionalEventMgt* currentDisplay = NULL;
  rc = ipProduct->QueryInterface(IID_CATIPrdTransactionalEventMgt,
                                     (void**) &ipTransactionOnMyProduct);
  rc = ipTransactionOnMyProduct->StartMoveTransaction();
  ... Business logic with several moves on ipProduct children instances ...
  rc = ipTransactionOnMyProduct->StopMoveTransaction();</pre></dd>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#StartMoveTransaction()"><b>StartMoveTransaction</b></a>()
<dd>  Starts a transaction for moves.
 <dt> o 
    <a href="#StopMoveTransaction()"><b>StopMoveTransaction</b></a>()
<dd>  Stops a transaction for moves.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="StartMoveTransaction"></a><a name="StartMoveTransaction()"></a> <dt> o <b>StartMoveTransaction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>StartMoveTransaction</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Starts a transaction for moves.
 Will put to sleep listeners while moving.
 <b>Warning</b> : needs to be matched with a subsequent call to StopMoveTransaction.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>       E_FAIL  internal error, event dispatcher not found.
      S_OK	event sent.
</dl>
</dl>
<a name="StopMoveTransaction"></a><a name="StopMoveTransaction()"></a> <dt> o <b>StopMoveTransaction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>StopMoveTransaction</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Stops a transaction for moves.
 Will awaken listeners once this call has been executed.
 <b>Warning</b> : needs to be matched with a prior call to StartMoveTransaction.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>       E_FAIL  internal error, event dispatcher not found.
      S_OK	event sent.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPrdTransactionalEventMgt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATProductStructureInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

