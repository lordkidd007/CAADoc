<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>BasicTopologicalOpe Class CATComputePointOnWire</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../BasicTopologicalOpe.htm">This Framework</a>  <a href="class_CATLengthFromBodyOnWire_106632.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>BasicTopologicalOpe Class CATComputePointOnWire</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../GeometricObjects/class_CATCGMOperator_38910.htm">GeometricObjects.CATCGMOperator</a>
    |
    +---<a href="../NewTopologicalObjects/class_CATTopOperator_41154.htm">NewTopologicalObjects.CATTopOperator</a>
      |
      +---CATComputePointOnWire
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATComputePointOnWire</b>
</p>
<p>
<b><i> Class defining the operator that computes mathematical points on a wire.</i></b><br>

<br> This operator follows the general scheme of the topological operators:
<ul>
<li> Create the operator with the global function <tt>CATCreateComputePointOnWire</tt>
<li> Set parameters if necessary
<li> Run with the <tt>Run</tt> method
<li> Get the result mathematical point with the <tt>GetMathPoint</tt> method.
 Here, the <tt>GetResult</tt> method will always return <tt>NULL</tt>, and there is no associated
 journal, because the operator does not create any body. 
<li> Delete the operator with the usual C++ <tt>delete</tt> operator.
</ul></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATComputePointOnWire()"><b>~CATComputePointOnWire</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetMathPoint(CATMathPoint&amp;)"><b>GetMathPoint</b></a>(CATMathPoint&amp;)
<dd>  Retrieves the corresponding mathematical point.
 <dt> o 
    <a href="#GetValue(double&amp;)"><b>GetValue</b></a>(double&amp;)
<dd>  Retrieves the corresponding value for the computation.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetMathPoint(CATMathPoint&amp;)"><b>SetMathPoint</b></a>(CATMathPoint&amp;)
<dd>  Defines the mathematical point and it switches the type of computation to valued from mathpoint.
 <dt> o 
    <a href="#SetValue(double)"><b>SetValue</b></a>(double)
<dd>  Defines the value for the computation and it switches the type of computation to mathpointform value.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATComputePointOnWire"></a><a name="~CATComputePointOnWire()"></a> <dt> o <b>~CATComputePointOnWire</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATComputePointOnWire</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetMathPoint"></a><a name="GetMathPoint(CATMathPoint&amp;)"></a> <dt> o <b>GetMathPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>GetMathPoint</b>(<td><a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>ioResultPoint</tt>)=0  </table></dt>
<dl>
  <dd>
 Retrieves the corresponding mathematical point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioResultPoint</tt>
   <dd> The result as a CATMathPoint.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(double&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public virtual void  <b>GetValue</b>(<td>double&amp; <td><tt>oResultValue</tt>)=0  </table></dt>
<dl>
  <dd>
 Retrieves the corresponding value for the computation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResultValue</tt>
   <dd> The value, according to the computation mode.</dd>
</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual int  <b>Run</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Not <tt>NULL</tt> in case of error.
</dl>
</dl>
<a name="SetMathPoint"></a><a name="SetMathPoint(CATMathPoint&amp;)"></a> <dt> o <b>SetMathPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>SetMathPoint</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iPoint</tt>)=0  </table></dt>
<dl>
  <dd>
 Defines the mathematical point and it switches the type of computation to valued from mathpoint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The CATMathPoint.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(double)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public virtual void  <b>SetValue</b>(<td>double <td><tt>iValue</tt>)=0  </table></dt>
<dl>
  <dd>
 Defines the value for the computation and it switches the type of computation to mathpointform value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iValue</tt>
   <dd> The value, according to the computation mode.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATComputePointOnWire.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATBasicTopologicalOpe</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
