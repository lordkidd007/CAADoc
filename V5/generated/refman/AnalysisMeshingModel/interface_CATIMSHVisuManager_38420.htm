<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AnalysisMeshingModel Interface CATIMSHVisuManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AnalysisMeshingModel.htm" href="../AnalysisMeshingModel.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AnalysisMeshingModel";	}
		function getCurrentObjectName() { 
 	return "CATIMSHVisuManager"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AnalysisMeshingModel Interface CATIMSHVisuManager</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMSHVisuManager_38420','CATIMSHVisuManager','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMSHVisuManager</b>
</p>
<p>
<b><i> Interface giving access to visualization services on the <b>Mesh Manager</b>.</i></b><br>

 See <script type="text/javascript"> activateLinkAnchor('CATIMSHMeshManager','','CATIMSHMeshManager') </script>.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BuildPathElement(CATMSHNode*)"><b>BuildPathElement</b></a>(CATMSHNode*)
<dd>  Build a path element from a finite element node.
 <dt> o 
    <a href="#BuildPathElement(CATMSHMeshDomain*)"><b>BuildPathElement</b></a>(CATMSHMeshDomain*)
<dd>  Build a path element from a <b>Mesh Domain</b>.
 <dt> o 
    <a href="#BuildPathElement(CATMSHElement*,int,int)"><b>BuildPathElement</b></a>(CATMSHElement*,int,int)
<dd>  Build a path element from a finite element.
 <dt> o 
    <a href="#GetResolution1D()"><b>GetResolution1D</b></a>()
<dd>  Get the resolution of the entire mesh ( 1D elements only ).
 <dt> o 
    <a href="#GetVisibility()"><b>GetVisibility</b></a>()
<dd>  Returns the visibility of the entire mesh (nodes and elements).
 <dt> o 
    <a href="#SetPickMode(int)"><b>SetPickMode</b></a>(int)
<dd>  Set the sensitivity to picking of the entire mesh (nodes and elements).
 <dt> o 
    <a href="#SetResolution1D(float)"><b>SetResolution1D</b></a>(float)
<dd>  Set the resolution of the entire mesh ( 1D elements only ).
 <dt> o 
    <a href="#SetVisibility(int)"><b>SetVisibility</b></a>(int)
<dd>  Set the visibility of the entire mesh (nodes and elements).
 <dt> o 
    <a href="#SetVisualizationMode(CATMSHVisuMode)"><b>SetVisualizationMode</b></a>(CATMSHVisuMode)
<dd>  Set the mode used to visualize finite elements.
 <dt> o 
    <a href="#SetVisualizationWay(CATMSHVisuWay)"><b>SetVisualizationWay</b></a>(CATMSHVisuWay)
<dd>  Set the way used to visualize finite elements.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CATMSHVisuMode"><b>CATMSHVisuMode</b></a>
<dd>  Mode used to visualisation finite elements.
 <dt> o 
    <a href="#CATMSHVisuWay"><b>CATMSHVisuWay</b></a>
<dd>  Way used to visualize finite elements.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BuildPathElement"></a><a name="BuildPathElement(CATMSHNode*)"></a> <dt> o <b>BuildPathElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPathElement','CATPathElement *')</script>  <b>BuildPathElement</b>(<td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode*')</script> <td><tt>iNode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Build a path element from a finite element node.
 <br><b>Role</b>: This method should be used in order to build a path element from a finite element node.
 <p>The resulting path element can be used to highlight the node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd>   Finite element node to be placed at bottom of the path element. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   CATBaseUnknown#Release   The created path element.
</dl>
</dl>
<a name="BuildPathElement"></a><a name="BuildPathElement(CATMSHMeshDomain*)"></a> <dt> o <b>BuildPathElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPathElement','CATPathElement *')</script>  <b>BuildPathElement</b>(<td><script type="text/javascript"> activateLink('CATMSHMeshDomain','CATMSHMeshDomain*')</script> <td><tt>iDomain</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Build a path element from a <b>Mesh Domain</b>.
 <br><b>Role</b>: This method should be used in order to build a path element from a <b>Mesh Domain</b>.
 <p>The resulting path element can be used to highlight the <b>Mesh Domain</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd>   <b>Mesh Domain</b> to be placed at bottom of the path element. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   CATBaseUnknown#Release   The created path element.
</dl>
</dl>
<a name="BuildPathElement"></a><a name="BuildPathElement(CATMSHElement*,int,int)"></a> <dt> o <b>BuildPathElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPathElement','CATPathElement *')</script>  <b>BuildPathElement</b>(<td><script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement*')</script> <td><tt>iElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFaceNumber</tt><td><tt>= -1 </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iEdgeNumber</tt><td><tt>= -1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Build a path element from a finite element.
 <br><b>Role</b>: This method should be used in order to build a path element from a finite element.
 <p>The highlight can be either the full element, a face or an edge.
 <p>The resulting path element can be used to highlight the element, the face or the edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   Finite element to be placed at bottom of the path element. 
 </dd>
    <dt><tt> iFaceNumber</tt>
   <dd>   Face number to be placed in path element. A -1 value indicates all faces. 
 </dd>
    <dt><tt> iEdgeNumber</tt>
   <dd>   Edge number to be placed in path element. A -1 value indicates all edges. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATBaseUnknown#Release   The created path element.
</dl>
</dl>
<a name="GetResolution1D"></a><a name="GetResolution1D()"></a> <dt> o <b>GetResolution1D</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('float','float')</script>  <b>GetResolution1D</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the resolution of the entire mesh ( 1D elements only ).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Float   The mesh current resolution value.
</dl>
</dl>
<a name="GetVisibility"></a><a name="GetVisibility()"></a> <dt> o <b>GetVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetVisibility</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the visibility of the entire mesh (nodes and elements).
</dl>
<a name="SetPickMode"></a><a name="SetPickMode(int)"></a> <dt> o <b>SetPickMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPickMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPicking</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set the sensitivity to picking of the entire mesh (nodes and elements).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPicking</tt>
   <dd>   Picking sensitivity.
   <br><b>Legal values</b>: 
   <dl><dt>0</dt><dd>Nodes and elements are not sensitive to picking.
   <dt>1</dt><dd>Nodes and elements can be picked.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetResolution1D"></a><a name="SetResolution1D(float)"></a> <dt> o <b>SetResolution1D</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetResolution1D</b>(<td><script type="text/javascript"> activateLink('float','float')</script> <td><tt>iResolution</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set the resolution of the entire mesh ( 1D elements only ).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iResolution</tt>
   <dd>   Value of the mesh resolution.
   <br><b>Legal value</b>: 
   <dl><dt>Strictly positive</dt></dl></dd>
</dl>
</dl>
</dl>
<a name="SetVisibility"></a><a name="SetVisibility(int)"></a> <dt> o <b>SetVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetVisibility</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iVisible</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set the visibility of the entire mesh (nodes and elements).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVisible</tt>
   <dd>   Visibility mode.
   <br><b>Legal values</b>: 
   <dl><dt>0</dt><dd>Nodes and elements are not visible.
   <dt>1</dt><dd>Nodes and elements are visible.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetVisualizationMode"></a><a name="SetVisualizationMode(CATMSHVisuMode)"></a> <dt> o <b>SetVisualizationMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetVisualizationMode</b>(<td><script type="text/javascript"> activateLink('CATMSHVisuMode','CATMSHVisuMode')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set the mode used to visualize finite elements.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>   Mode used to visualize finite elements.
   <br><b>Legal values</b>: 
   <dl><dt>StandardVisualization</dt><dd>Finite elements color correspond to Mesh Part/Group.
   <dl><dt>QualityVisualization</dt><dd>Finite elements color correspond to quality.
   <dt>OrientationVisualization</dt><dd>Finite elements color correspond to orientation.</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Visualization mode has been successfully activated.
   <dt>E_FAIL</dt><dd>A problem occured.
   </dl>
</dl>
</dl>
<a name="SetVisualizationWay"></a><a name="SetVisualizationWay(CATMSHVisuWay)"></a> <dt> o <b>SetVisualizationWay</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetVisualizationWay</b>(<td><script type="text/javascript"> activateLink('CATMSHVisuWay','CATMSHVisuWay')</script> <td><tt>iWay</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set the way used to visualize finite elements.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWay</tt>
   <dd>   Way used to visualize finite elements.
   <br><b>Legal values</b>: 
   <dl><dt>VisuByMeshPart</dt><dd>Finite elements are visualized through Mesh Parts.
   <dt>VisuByElementGroup</dt><dd>Finite elements are visualized through Groups.</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Visualization way has been successfully activated.
   <dt>E_FAIL</dt><dd>A problem occured.
   </dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CATMSHVisuMode"> <dt> o <b>CATMSHVisuMode</b>
<dl>
  <dd>
<pre>
enum <b>CATMSHVisuMode</b> {
  StandardVisualization,
  QualityVisualization,
  OrientationVisualization
}
</pre>
 Mode used to visualisation finite elements.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> StandardVisualization</tt>
   <dd>   Finite elements are visualized using color of their Mesh Part/Group.
 </dd>
    <dt><tt> QualityVisualization</tt>
   <dd>   Finite elements are visualized using color corresponding to their quality.
 </dd>
    <dt><tt> OrientationVisualization</tt>
   <dd>   Finite elements are visualized using color corresponding to their orientation.</dd>
</dl>
</dl>
</dl>
<a name="CATMSHVisuWay"> <dt> o <b>CATMSHVisuWay</b>
<dl>
  <dd>
<pre>
enum <b>CATMSHVisuWay</b> {
  VisuByMeshPart,
  VisuByElementGroup
}
</pre>
 Way used to visualize finite elements.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> VisuByMeshPart</tt>
   <dd>   Finite elements are visualized through the <b>Mesh Part</b> they belong to.
 </dd>
    <dt><tt> VisuByElementGroup</tt>
   <dd>   Finite elements are visualized through the <b>Group(s)</b> they belong to.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMSHVisuManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAmtModel</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

