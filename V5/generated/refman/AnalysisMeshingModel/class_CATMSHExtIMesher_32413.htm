<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AnalysisMeshingModel Class CATMSHExtIMesher</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AnalysisMeshingModel.htm" href="../AnalysisMeshingModel.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AnalysisMeshingModel";	}
		function getCurrentObjectName() { 
 	return "CATMSHExtIMesher"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AnalysisMeshingModel <script type="text/javascript" > writeClassCharacteristic(); </script> CATMSHExtIMesher</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMSHExtIMesher_32413','CATMSHExtIMesher','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATMSHExtIMesher</b>
</p>
<p>
<b><i> Adapter for CATIMSHMesher interface.</i></b><br>


 <b>Role</b>: This class provides a default implementation for any extension of 
 <script type="text/javascript"> activateLinkAnchor('CATIMSHMesher','','CATIMSHMesher') </script>. That means one should derive from this class to implement the mesher algorithm
 to build the finite element mesh of a <b>Mesh Part</b>.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIMSHMesher','','CATIMSHMesher') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMSHExtIMesher()"><b>CATMSHExtIMesher</b></a>()
<dd>  Constructor.
 <dt> o 
    <a href="#~CATMSHExtIMesher()"><b>~CATMSHExtIMesher</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeforeUpdating(CATIMSHMeshPart*)"><b>BeforeUpdating</b></a>(CATIMSHMeshPart*)
<dd>  Perform cleaning operations before updating a <b>Mesh Part</b>.
 <dt> o 
    <a href="#Check(CATIMSHMeshPart*,CATMSHListOfMeshPart*&amp;)"><b>Check</b></a>(CATIMSHMeshPart*,CATMSHListOfMeshPart*&amp;)
<dd>  Check the supports of the <b>Mesh Part</b>.
 <dt> o 
    <a href="#CloseEdition()"><b>CloseEdition</b></a>()
<dd>  Perform mesher-specific operations before exiting edition mode for a <b>Mesh Part</b>.
 <dt> o 
    <a href="#IsATypeOf(CATIMSHMeshPart*,CATUnicodeString&amp;)"><b>IsATypeOf</b></a>(CATIMSHMeshPart*,CATUnicodeString&amp;)
<dd>  Query the mesher about the type of the <b>Mesh Part</b>.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMSHExtIMesher"></a><a name="CATMSHExtIMesher()"></a> <dt> o <b>CATMSHExtIMesher</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMSHExtIMesher</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor.
</dl>
<a name="~CATMSHExtIMesher"></a><a name="~CATMSHExtIMesher()"></a> <dt> o <b>~CATMSHExtIMesher</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATMSHExtIMesher</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.  CATExtIVisu
</dl>
 <h2>Methods</h2> <br>
<a name="BeforeUpdating"></a><a name="BeforeUpdating(CATIMSHMeshPart*)"></a> <dt> o <b>BeforeUpdating</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeforeUpdating</b>(<td><script type="text/javascript"> activateLink('CATIMSHMeshPart','CATIMSHMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Perform cleaning operations before updating a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called before updating a <b>Mesh Part</b> and 
 should perform necessary cleaning operations.
 <br>Default implementation deletes all finite elements belonging to the <b>Mesh Part</b> (if any) and also deletes the corresponding
 nodes if they become free.
 <br>Take care when overloading this method to the potential impacts.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Cleaning operations succesfull.
   <dt>E_FAIL</dt><dd>Cleaning operations failed.
   </dl>
</dl>
</dl>
<a name="Check"></a><a name="Check(CATIMSHMeshPart*,CATMSHListOfMeshPart*&amp;)"></a> <dt> o <b>Check</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Check</b>(<td><script type="text/javascript"> activateLink('CATIMSHMeshPart','CATIMSHMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHListOfMeshPart','CATMSHListOfMeshPart*&amp;')</script> <td><tt>oParentMeshParts</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Check the supports of the <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called whenever a support is defined on its
 <b>Mesh Part</b> to check if it can be meshed. 
 <br>It also retreives the parents <b>Mesh Parts</b> if any. A parent <b>Mesh Parts</b>
 is a <b>Mesh Parts</b> that should updated before the actual mesh. For example, in
 the case of a mesher connecting to geometric parts, the parents <b>Mesh Parts</b> are the one corresponding
 to these two parts.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b> to check.
 </dd>
    <dt><tt> oParentMeshParts</tt>
   <dd>   The list of parents <b>Mesh Parts</b>. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The support are valid and can be meshed.
   <dt>E_FAIL</dt><dd>The support are not valid or the parent <b>Mesh Parts</b> can not be found.
   </dl>
</dl>
</dl>
<a name="CloseEdition"></a><a name="CloseEdition()"></a> <dt> o <b>CloseEdition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CloseEdition</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Perform mesher-specific operations before exiting edition mode for a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called before exiting edition mode for a <b>Mesh Part</b> and 
 can be used to perform mesher-specific operations ( see 
<script type="text/javascript"> activateLinkAnchor('CATIMSHMeshPart','CloseEdition','CATIMSHMeshPart.CloseEdition') </script> ). <br>Default implementation does not execute any operations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Operations succesfull.
   <dt>E_FAIL</dt><dd>Operations failed.
   </dl>
</dl>
</dl>
<a name="IsATypeOf"></a><a name="IsATypeOf(CATIMSHMeshPart*,CATUnicodeString&amp;)"></a> <dt> o <b>IsATypeOf</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsATypeOf</b>(<td><script type="text/javascript"> activateLink('CATIMSHMeshPart','CATIMSHMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Query the mesher about the type of the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b> to check.
 </dd>
    <dt><tt> iType</tt>
   <dd>   String representing the query made to the mesher.
   <br><b>Legal values</b>: 
   <dl><dt>"1D"</dt><dd>Is the mesher generating 1D finite elements?
   <dt>"2D"</dt><dd>Is the mesher generating 2D finite elements?
   <dt>"3D"</dt><dd>Is the mesher generating 3D finite elements?
   <dt>"Connection"</dt><dd>Is the mesher generating connecting elements between meshes?</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The result of the query.
   <br><b>Legal values</b>:
   <dl><dt>1</dt><dd>The answer is yes.
   <dt>0</dt><dd>The answer is no.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMSHExtIMesher.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAmtModel</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

