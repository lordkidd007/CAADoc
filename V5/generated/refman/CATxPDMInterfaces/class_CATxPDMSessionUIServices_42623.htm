<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATxPDMInterfaces Class CATxPDMSessionUIServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATxPDMInterfaces.htm" href="../CATxPDMInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATxPDMInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATxPDMSessionUIServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATxPDMInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATxPDMSessionUIServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATxPDMSessionUIServices_42623','CATxPDMSessionUIServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATxPDMSessionUIServices</b>
</p>
<p>
<b><i> Class for PDM to manage interactive feedbacks of PDM in CATIA Session.</i></b><br>

 <p>All the methods pre-requisites the PX1 license </p>

 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIxPDMItem','','CATIxPDMItem') </script>, CATIxPDMSessionServices
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ConnectToPX1()"><b>ConnectToPX1</b></a>()
<dd>  Activate all PX1 interactive feedbacks.
 <dt> o 
    <a href="#ConnectToPX1(char*)"><b>ConnectToPX1</b></a>(char*)
<dd>  Activate all PX1 interactive feedbacks.
 <dt> o 
    <a href="#DisconnectFromPX1()"><b>DisconnectFromPX1</b></a>()
<dd>  Disconnect from PX1.
 <dt> o 
    <a href="#DisconnectFromPX1(char*)"><b>DisconnectFromPX1</b></a>(char*)
<dd>  Disconnect from PX1.
 <dt> o 
    <a href="#GetCurrentDirectory(CATUnicodeString&amp;)"><b>GetCurrentDirectory</b></a>(CATUnicodeString&amp;)
<dd>  Retrieve current directory.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ConnectToPX1"></a><a name="ConnectToPX1()"></a> <dt> o <b>ConnectToPX1</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ConnectToPX1</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Activate all PX1 interactive feedbacks.
 <br><b>Role:</b>This method activates PX1 interactive feedbacks.
 After connection, a specific icon will be automatically added on all item with Read-Only
 status on disk. When you check-out or check-in a file, you have to update
 its read-write status on disk and to call CATxPDMSessionServices#RefreshItemInformation
 to update interactive display.
 You have to call this method when you connect to your PDM.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Connection successfull. </li> 
   <li><tt>S_FALSE</tt>: Already connected. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
  </ul>
  </ul>
</dl>
</dl>
<a name="ConnectToPX1"></a><a name="ConnectToPX1(char*)"></a> <dt> o <b>ConnectToPX1</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ConnectToPX1</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iPX1SessionIdentifier</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Activate all PX1 interactive feedbacks.
 <br><b>Role:</b>This method activates PX1 interactive feedbacks.
 After connection, a specific icon will be automatically added on all item with Read-Only
 status on disk. When you check-out or check-in a file, you have to update
 its read-write status on disk and to call CATxPDMSessionServices#RefreshItemInformation
 to update interactive display.
 You have to call this method when you connect to your PDM.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPX1SessionIdentifier</tt>
   <dd>   This parameter is necessary to support several connection from different PDMs at same time.
   PX1 will be effectively disconnected only when all PDMs are disconnected.
   Same identifier should be used for connect and disconnect.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Connection successfull. </li> 
   <li><tt>S_FALSE</tt>: Already connected. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
  </ul>
  </ul>
</dl>
</dl>
<a name="DisconnectFromPX1"></a><a name="DisconnectFromPX1()"></a> <dt> o <b>DisconnectFromPX1</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectFromPX1</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disconnect from PX1.
 <br><b>Role:</b>This method disconnect from PX1 interactive feedbacks.
 All specific icons are removed. You have to call this method when you disconnect
 from your PDM.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Disconnect successfull. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
  </ul>
  </ul>
</dl>
</dl>
<a name="DisconnectFromPX1"></a><a name="DisconnectFromPX1(char*)"></a> <dt> o <b>DisconnectFromPX1</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectFromPX1</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iPX1SessionIdentifier</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disconnect from PX1.
 <br><b>Role:</b>This method disconnect from PX1 interactive feedbacks.
 All specific icons are removed. You have to call this method when you disconnect
 from your PDM.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPX1SessionIdentifier</tt>
   <dd>   This parameter is necessary to support several connection from different PDMs at same time.
   PX1 will be effectively disconnected only when all PDMs are disconnected.
   Same identifier should be used for connect and disconnect.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Disconnect successfull. </li> 
   <li><tt>S_FALSE</tt>: Disconnect successfull but still connected by another PDM. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
  </ul>
  </ul>
</dl>
</dl>
<a name="GetCurrentDirectory"></a><a name="GetCurrentDirectory(CATUnicodeString&amp;)"></a> <dt> o <b>GetCurrentDirectory</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCurrentDirectory</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oCurrentDirectory</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieve current directory.
 <br><b>Role:</b>This method retrieve current directory : last directory used for file operations like
 Open or Save. This method should be used if you want to initialize your panel with same directory
 than standard interactive Open and Save commands. Notice that this directory is only an interactive
 default, it does not mean that all file will be opened or saved in this directory.
 This directory could be null if no file selection has been performed in session.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCurrentDirectory</tt>
   <dd>   The current directory used in interactive file selection box.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Directory successfully returned. </li> 
   <li><tt>E_FAIL</tt>: Impossible to retrieve the directory:</li>
  </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATxPDMSessionUIServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATxPDMInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

