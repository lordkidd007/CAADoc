<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIEnumere</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="interface_CATIDesignTable_44181.htm">Previous</a>  <a href="interface_CATIInstance_28866.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowledgeInterfaces Interface CATIEnumere</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIEnumere
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIEnumere</b>
</p>
<p>
<b><i>    Interface dedicated to enumerated types management.</i></b><br>

 <b>Role</b>: This interface gives access to enumerated types properties.<br>
 Enumerated types also implement CATICkeType<br>
 An enumerated type is a parameter type that allows only a list of identified string values
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATICkeType_23636.htm">CATICkeType</a>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Find(CATUnicodeString&amp;)"><b>Find</b></a>(CATUnicodeString&amp;)
<dd>  Finds the rank (1 to N) of an enum value from its string.
 <dt> o 
    <a href="#Values(CATListOfCATUnicodeString*)"><b>Values</b></a>(CATListOfCATUnicodeString*)
<dd>  Returns the pre-definite list of values allowed for this type.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Find"></a><a name="Find(CATUnicodeString&amp;)"></a> <dt> o <b>Find</b>

<dt>  <table><tr><td>  public virtual int  <b>Find</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iValue</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Finds the rank (1 to N) of an enum value from its string.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iValue</tt>
   <dd> value to be found </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  rank of the value from 1 to N if found (else 0)  <br><b>Legal values</b>: 
 <tt>1 to N</tt> rank of the value in the list if found.
 <tt>0</tt> if value hasn't been found.
</dl>
</dl>
<a name="Values"></a><a name="Values(CATListOfCATUnicodeString*)"></a> <dt> o <b>Values</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">CATListOfCATUnicodeString *</a>  <b>Values</b>(<td><a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">CATListOfCATUnicodeString*</a> <td><tt>iListNLSNames</tt><td><tt>= NULL</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Returns the pre-definite list of values allowed for this type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListNLSNames</tt>
   <dd> if not NULL, this list is filled with NLS name of values.<br>    The mechanism to find NLS name for the value is to find it in the NLS msgcatalog file which corresponds
    to the .feat catalog in which the enumere is.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  list of values not to be deallocated !!!.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEnumere.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
