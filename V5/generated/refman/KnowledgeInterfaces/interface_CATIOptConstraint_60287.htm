<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIOptConstraint</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="interface_CATIObjectRightsManager_106784.htm">Previous</a>  <a href="interface_CATIParameterEditor_73907.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowledgeInterfaces Interface CATIOptConstraint</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIOptConstraint
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIOptConstraint</b>
</p>
<p>
<b><i> Interface encapsulating an optimization constraint.</i></b><br>

 <p>
 Technically speaking, a constraint is a kwe expressionnal relation (answers to CATICkeRelationExp)
 and is basically a check</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBound()"><b>GetBound</b></a>()
<dd>  Returns the right hand side value of the constraint.
 <dt> o 
    <a href="#GetConstraintType()"><b>GetConstraintType</b></a>()
<dd>  Returns the constraint type.
 <dt> o 
    <a href="#GetDistance()"><b>GetDistance</b></a>()
<dd>  Returns the necessary distance to respect the constraint.
 <dt> o 
    <a href="#GetDistanceParameter()"><b>GetDistanceParameter</b></a>()
<dd>  Returns the parameter valuated with the necessary distance to respect the constraint.
 <dt> o 
    <a href="#GetLHSValue()"><b>GetLHSValue</b></a>()
<dd>  Returns the left hand side value of the constraint.
 <dt> o 
    <a href="#GetMagnitude()"><b>GetMagnitude</b></a>()
<dd>  Returns the magnitude of the constraint.
 <dt> o 
    <a href="#GetPrecision()"><b>GetPrecision</b></a>()
<dd>  Gets the precision for equality constraints.
 <dt> o 
    <a href="#GetPriority()"><b>GetPriority</b></a>()
<dd>  Returns the priority of the constraint.
 <dt> o 
    <a href="#GetWeight()"><b>GetWeight</b></a>()
<dd>  Returns the weight of the constraint.
 <dt> o 
    <a href="#IsRespected()"><b>IsRespected</b></a>()
<dd>  Indicates if the constraint is respected.
 <dt> o 
    <a href="#SetPrecision(double)"><b>SetPrecision</b></a>(double)
<dd>  Sets the precision for equality constraints.
 <dt> o 
    <a href="#SetPriority(int)"><b>SetPriority</b></a>(int)
<dd>  Sets the priority of the constraint.
 <dt> o 
    <a href="#SetWeight(double)"><b>SetWeight</b></a>(double)
<dd>  Sets the weight of the constraint.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ConstraintType"><b>ConstraintType</b></a>
<dd>  Constraint type
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBound"></a><a name="GetBound()"></a> <dt> o <b>GetBound</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetBound</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the right hand side value of the constraint.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the right side member of the constraint (for example x + y > 7mm. The method returns 0.007 (7mm in mks))
</dl>
</dl>
<a name="GetConstraintType"></a><a name="GetConstraintType()"></a> <dt> o <b>GetConstraintType</b>

<dt>  <table><tr><td>  public virtual CATIOptConstraint::ConstraintType  <b>GetConstraintType</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the constraint type.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd> 	a Constraint Type
</dl>
</dl>
<a name="GetDistance"></a><a name="GetDistance()"></a> <dt> o <b>GetDistance</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetDistance</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the necessary distance to respect the constraint.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the distance to constraint respect (for example x > 7mm with x = 3mm. The method returns 0.004 (4mm in mks))
</dl>
</dl>
<a name="GetDistanceParameter"></a><a name="GetDistanceParameter()"></a> <dt> o <b>GetDistanceParameter</b>

<dt>  <table><tr><td>  public virtual <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a>  <b>GetDistanceParameter</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns the parameter valuated with the necessary distance to respect the constraint.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a parameter aggregated to the constraint containing the distance value
</dl>
</dl>
<a name="GetLHSValue"></a><a name="GetLHSValue()"></a> <dt> o <b>GetLHSValue</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetLHSValue</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the left hand side value of the constraint.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the value of the left hand side of the constraint (for example x + y > 7 The method returns 11 if x = 1 and y = 10;
</dl>
</dl>
<a name="GetMagnitude"></a><a name="GetMagnitude()"></a> <dt> o <b>GetMagnitude</b>

<dt>  <table><tr><td>  public virtual <a href="../KnowledgeInterfaces/interface_CATICkeMagnitude_51192.htm">CATICkeMagnitude_var</a>  <b>GetMagnitude</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the magnitude of the constraint.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the magnitude of the constraint.
</dl>
</dl>
<a name="GetPrecision"></a><a name="GetPrecision()"></a> <dt> o <b>GetPrecision</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetPrecision</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Gets the precision for equality constraints.
 the method IsRespected will return 1 if the distance to constraint respect is less than the precision
</dl>
<a name="GetPriority"></a><a name="GetPriority()"></a> <dt> o <b>GetPriority</b>

<dt>  <table><tr><td>  public virtual unsigned int  <b>GetPriority</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the priority of the constraint.
</dl>
<a name="GetWeight"></a><a name="GetWeight()"></a> <dt> o <b>GetWeight</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetWeight</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the weight of the constraint.
</dl>
<a name="IsRespected"></a><a name="IsRespected()"></a> <dt> o <b>IsRespected</b>

<dt>  <table><tr><td>  public virtual int  <b>IsRespected</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Indicates if the constraint is respected.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  1 if the constraint is respected, 0 else (see SetPrecision and GetPrecision)
</dl>
</dl>
<a name="SetPrecision"></a><a name="SetPrecision(double)"></a> <dt> o <b>SetPrecision</b>

<dt>  <table><tr><td>  public virtual void  <b>SetPrecision</b>(<td>double <td><tt>mksPrecision</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the precision for equality constraints.
 The method IsRespected will return 1 if the distance to constraint respect is less than the precision
</dl>
<a name="SetPriority"></a><a name="SetPriority(int)"></a> <dt> o <b>SetPriority</b>

<dt>  <table><tr><td>  public virtual void  <b>SetPriority</b>(<td>int <td><tt>iPriority</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the priority of the constraint.
 The priority is used to give more/less importance to the constraint during
 the optimization results classification (results exploitation).
 The priority is an integer number.
</dl>
<a name="SetWeight"></a><a name="SetWeight(double)"></a> <dt> o <b>SetWeight</b>

<dt>  <table><tr><td>  public virtual void  <b>SetWeight</b>(<td>double <td><tt>iWeight</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the weight of the constraint.
 The weight is used to give more/less importance to the constraint during
 the optimization computations (algorithms run).
 The weight is a double number.
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ConstraintType"> <dt> o <b>ConstraintType</b>
<dl>
  <dd>
<pre>
enum <b>ConstraintType</b> {
  UNKNOWN,
  EQ,
  GT,
  GE,
  LT,
  LE,
  NE
}
</pre>
 Constraint type
</dl>
<hr>
 This object is included in the file: <b>CATIOptConstraint.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
