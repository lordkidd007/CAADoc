<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Notification CATParmNotification</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowledgeInterfaces Notification CATParmNotification</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../System/class_CATNotification_47117.htm">System.CATNotification</a>
        |
        +---CATParmNotification
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATParmNotification</b>
</p>
<p>
<b><i>    Notification class for LiteralFeatures framework.</i></b><br>

 <b>Role</b>: Used to notify events in LiteralFeatures.<br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATIParmEvents_39938.htm">CATIParmEvents</a>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATIRelationEvents_67044.htm">CATIRelationEvents</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATParmNotification(CATBaseUnknown_var&amp;)"><b>CATParmNotification</b></a>(CATBaseUnknown_var&amp;)
<dd>  Constructor
 
 <dt> o 
    <a href="#CATParmNotification(CATISpecObject_var&amp;)"><b>CATParmNotification</b></a>(CATISpecObject_var&amp;)
<dd>  <dt> o 
    <a href="#~CATParmNotification()"><b>~CATParmNotification</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#EffectiveChange()"><b>EffectiveChange</b></a>()
<dd>  Indicates if change value is effective or just a valuation attempt.
 <dt> o 
    <a href="#GetInterfaceObject()"><b>GetInterfaceObject</b></a>()
<dd>  Returns the object dispatching the event.
 <dt> o 
    <a href="#GetInterfaceObject()"><b>GetInterfaceObject</b></a>()
<dd>  Returns the object dispatching the event.
 <dt> o 
    <a href="#SetEffectiveChange(CATCke::Boolean&amp;)"><b>SetEffectiveChange</b></a>(CATCke::Boolean&amp;)
<dd>  Defines if change value is effective or just a valuation attempt.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATParmNotification"></a><a name="CATParmNotification(CATBaseUnknown_var&amp;)"></a> <dt> o <b>CATParmNotification</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATParmNotification</b>(<td> const <a href="../System/class_CATBaseUnknown_var_67834.htm">CATBaseUnknown_var&amp;</a> <td><tt>iObject</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructor
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> : object dispatching event</dd>
</dl>
</dl>
</dl>
<a name="CATParmNotification"></a><a name="CATParmNotification(CATISpecObject_var&amp;)"></a> <dt> o <b>CATParmNotification</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATParmNotification</b>(<td> const CATISpecObject_var&amp; <td><tt>iObject</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATParmNotification"></a><a name="~CATParmNotification()"></a> <dt> o <b>~CATParmNotification</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATParmNotification</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="EffectiveChange"></a><a name="EffectiveChange()"></a> <dt> o <b>EffectiveChange</b>

<dt>  <table><tr><td>  public CATCke::Boolean  <b>EffectiveChange</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Indicates if change value is effective or just a valuation attempt.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   CATCke::Boolean : true (valuation and modification) false (valuation attempt).
</dl>
</dl>
<a name="GetInterfaceObject"></a><a name="GetInterfaceObject()"></a> <dt> o <b>GetInterfaceObject</b>

<dt>  <table><tr><td>  public <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>GetInterfaceObject</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the object dispatching the event.
</dl>
<a name="GetInterfaceObject"></a><a name="GetInterfaceObject()"></a> <dt> o <b>GetInterfaceObject</b>

<dt>  <table><tr><td>  public <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown_var</a>  <b>GetInterfaceObject</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the object dispatching the event.
</dl>
<a name="SetEffectiveChange"></a><a name="SetEffectiveChange(CATCke::Boolean&amp;)"></a> <dt> o <b>SetEffectiveChange</b>

<dt>  <table><tr><td>  public void  <b>SetEffectiveChange</b>(<td> const CATCke::Boolean&amp; <td><tt>b</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Defines if change value is effective or just a valuation attempt.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> const</tt>
   <dd> CATCke::Boolean &b : true (valuation and modification) false (valuation attempt)</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATParmNotification.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
