<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIAddTypeLibrary</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="interface_CATIAddLibrary_38892.htm">Previous</a>  <a href="interface_CATIAllowUserInfo_58245.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowledgeInterfaces Interface CATIAddTypeLibrary</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIAddTypeLibrary
 </pre>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIAddTypeLibrary</b>
</p>
<p>
<b><i>    Interface to implement to add types in the dictionary.</i></b><br>

 <br>
 Usage:    
   If you want to expose your objects to search, knowledge...
 
 <li>Implement this interface on one class that we call XX for example (that
      will also implement CATICreateInstance).</li>
 <li>In the Add method create all the types. </li>
 <li>Create an Object Modeler dictionary (.dic file) explaining that XX implements
     CATICreateInstance and CATIAddTypeLibrary in your shared library</li><br>
 <br>
 Those methods will be called by our product at its initialisation <br> 
 <br>
 The algorithm to find all types is the following :<br>
 We scan the Object Modeler Dictionnaries to find all objects implementing CATIAddTypeLibrary and CATICreateInstance :
 <br> for each object, we create it with CATICreateInstance, then get the
 CATIAddTypeLibrary interface on it and call the Add Method.<br>
 In the Add method, you can use the CreateFunction method. <br>
 Note that the library where you implement this should be as 
 small as possible in order to avoid long load times and to 
 keep memory usage as low as possible.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Add()"><b>Add</b></a>()
<dd>  Add your own types in this method.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Add"></a><a name="Add()"></a> <dt> o <b>Add</b>

<dt>  <table><tr><td>  public virtual void  <b>Add</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Add your own types in this method.
</dl>
<hr>
 This object is included in the file: <b>CATIAddTypeLibrary.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
