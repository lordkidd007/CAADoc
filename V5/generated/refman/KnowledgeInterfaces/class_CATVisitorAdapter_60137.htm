<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Class CATVisitorAdapter</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="class_CATParmValuatorAdapter_99930.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowledgeInterfaces Class CATVisitorAdapter</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../KnowledgeInterfaces/interface_CATIVisitor_25159.htm">KnowledgeInterfaces.CATIVisitor</a>
        |
        +---CATVisitorAdapter
 </pre>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATVisitorAdapter</b>
</p>
<p>
<b><i>    CAA Adapter to CATIVisitor Interface.</i></b><br>

 <b>Role</b>: This class should be derived to implement features extension to CATIVisitor.<br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_CATIVisitor_25159.htm">CATIVisitor</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATVisitorAdapter()"><b>CATVisitorAdapter</b></a>()
<dd>   Constructs the extension.
 <dt> o 
    <a href="#~CATVisitorAdapter()"><b>~CATVisitorAdapter</b></a>()
<dd>   Deletes the extension.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#SpecialDataNeeded()"><b>SpecialDataNeeded</b></a>()
<dd>  In some cases, special data is needed to be visited.
 <dt> o 
    <a href="#Visit(CATBaseUnknown*)"><b>Visit</b></a>(CATBaseUnknown*)
<dd>  Operates on the submitted object and returns a continuation code.
 <dt> o 
    <a href="#VisitPublisherForRecursion(CATIParmPublisher_var&amp;)"><b>VisitPublisherForRecursion</b></a>(CATIParmPublisher_var&amp;)
<dd>  For optimization purpose.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATVisitorAdapter"></a><a name="CATVisitorAdapter()"></a> <dt> o <b>CATVisitorAdapter</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATVisitorAdapter</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Constructs the extension.
</dl>
<a name="~CATVisitorAdapter"></a><a name="~CATVisitorAdapter()"></a> <dt> o <b>~CATVisitorAdapter</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATVisitorAdapter</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Deletes the extension.
</dl>
 <h2>Methods</h2> <br>
<a name="SpecialDataNeeded"></a><a name="SpecialDataNeeded()"></a> <dt> o <b>SpecialDataNeeded</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">const CATListOfCATUnicodeString*</a>  <b>SpecialDataNeeded</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 In some cases, special data is needed to be visited.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  NULL if no special data is to be visited, else a list of strings containing format specifications
 (these formats have to be discussed between callers and providers)
</dl>
</dl>
<a name="Visit"></a><a name="Visit(CATBaseUnknown*)"></a> <dt> o <b>Visit</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Visit</b>(<td><a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>iInstance</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Operates on the submitted object and returns a continuation code.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInstance</tt>
   <dd> Object to be performed on. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK to continue the scan, E_FAIL to stop.
</dl>
</dl>
<a name="VisitPublisherForRecursion"></a><a name="VisitPublisherForRecursion(CATIParmPublisher_var&amp;)"></a> <dt> o <b>VisitPublisherForRecursion</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>VisitPublisherForRecursion</b>(<td> const CATIParmPublisher_var&amp; <td><tt>publisher</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 For optimization purpose.
 if VisitChildren is called with recursive argument, allows to control
 if given publisher is to be visited
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> the</tt>
   <dd> tested publisher </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK is the publisher is to be visited, E_FAIL else
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATVisitorAdapter.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
