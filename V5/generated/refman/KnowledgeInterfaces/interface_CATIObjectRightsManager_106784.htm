<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIObjectRightsManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="interface_CATIList_12576.htm">Previous</a>  <a href="interface_CATIOptConstraint_60287.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowledgeInterfaces Interface CATIObjectRightsManager</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIObjectRightsManager
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIObjectRightsManager</b>
</p>
<p>
<b><i>    Interface dedicated to feature protection management.</i></b><br>

 <b>Role</b>: manages informations to protect in edition, browse or execution or deletion a feature.
              It has several types of protection :
                            Frozen (the protection could never be changed),
                            CAA (CAA applicative protection),
                            Setting (setting protection),
              The protection can also be protected by a key (like a password it needs to change the protection)
              The feature can be protected in exectution depending on a license.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetProtectionType(CATProtectionType&amp;)"><b>GetProtectionType</b></a>(CATProtectionType&amp;)
<dd>  Get the protection type to the current object.
 <dt> o 
    <a href="#GetRight(CATKweRight&amp;)"><b>GetRight</b></a>(CATKweRight&amp;)
<dd>  Get the protection rights of the current object.
 <dt> o 
    <a href="#IsBrowsable(int&amp;,CATUnicodeString*)"><b>IsBrowsable</b></a>(int&amp;,CATUnicodeString*)
<dd>  Tests if the object is browsable.
 <dt> o 
    <a href="#IsEditable(int&amp;,CATUnicodeString*)"><b>IsEditable</b></a>(int&amp;,CATUnicodeString*)
<dd>  Tests if the object is editable.
 <dt> o 
    <a href="#IsLicensed(int&amp;)"><b>IsLicensed</b></a>(int&amp;)
<dd>  Test if the object is runnable depending on licenses.
 <dt> o 
    <a href="#IsRunnable(int&amp;,CATUnicodeString*)"><b>IsRunnable</b></a>(int&amp;,CATUnicodeString*)
<dd>  Tests if the object is runnable.
 <dt> o 
    <a href="#SetLicense(CATListOfCATUnicodeString&amp;)"><b>SetLicense</b></a>(CATListOfCATUnicodeString&amp;)
<dd>  Allow the object to be runnable only with the defined list of licenses.
 <dt> o 
    <a href="#SetRight(CATKweRight&amp;,CATProtectionType&amp;,CATUnicodeString&amp;)"><b>SetRight</b></a>(CATKweRight&amp;,CATProtectionType&amp;,CATUnicodeString&amp;)
<dd>  Set the protection level to the current object.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CATProtectionType"><b>CATProtectionType</b></a>
<dd>  Type defining the protection of the rights of a feature.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetProtectionType"></a><a name="GetProtectionType(CATProtectionType&amp;)"></a> <dt> o <b>GetProtectionType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetProtectionType</b>(<td>CATProtectionType&amp; <td><tt>oProtectionType</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Get the protection type to the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProtectionType</tt>
   <dd>  the protection type : NoType,Frozen,Setting or CAA
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the method fails, S_OK else
</dl>
</dl>
<a name="GetRight"></a><a name="GetRight(CATKweRight&amp;)"></a> <dt> o <b>GetRight</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRight</b>(<td><a href="../KnowledgeInterfaces/typedef_CATKweRight_24445.htm">CATKweRight&amp;</a> <td><tt>oRight</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Get the protection rights of the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRight</tt>
   <dd>  The protection rights are either: 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the method fails, S_OK else
</dl>
</dl>
<a name="IsBrowsable"></a><a name="IsBrowsable(int&amp;,CATUnicodeString*)"></a> <dt> o <b>IsBrowsable</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsBrowsable</b>(<td>int&amp; <td><tt>oResult</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString*</a> <td><tt>oExplain</tt><td><tt>= NULL</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Tests if the object is browsable.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResult</tt>
   <dd>  0 if the object is not browsable, 1 else
 </dd>
    <dt><tt> oExplain</tt>
   <dd> If oExplain is not NULL when calling method, it contains the reason why the object is not browsable.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the method fails, S_OK else
</dl>
</dl>
<a name="IsEditable"></a><a name="IsEditable(int&amp;,CATUnicodeString*)"></a> <dt> o <b>IsEditable</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsEditable</b>(<td>int&amp; <td><tt>oResult</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString*</a> <td><tt>oExplain</tt><td><tt>= NULL</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Tests if the object is editable.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResult</tt>
   <dd>  0 if the object is not editable, 1 else
 </dd>
    <dt><tt> oExplain</tt>
   <dd> If oExplain is not NULL when calling method, it contains the reason why the object is not editable.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the method fails, S_OK else
</dl>
</dl>
<a name="IsLicensed"></a><a name="IsLicensed(int&amp;)"></a> <dt> o <b>IsLicensed</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsLicensed</b>(<td>int&amp; <td><tt>oResult</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Test if the object is runnable depending on licenses.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResult</tt>
   <dd>  0 if the object is not licensed, 1 else. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the method fails, S_OK else
</dl>
</dl>
<a name="IsRunnable"></a><a name="IsRunnable(int&amp;,CATUnicodeString*)"></a> <dt> o <b>IsRunnable</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsRunnable</b>(<td>int&amp; <td><tt>oResult</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString*</a> <td><tt>oExplain</tt><td><tt>= NULL</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Tests if the object is runnable.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResult</tt>
   <dd>  0 if the object is not runnable, 1 else
 </dd>
    <dt><tt> oExplain</tt>
   <dd> If oExplain is not NULL when calling method, it contains the reason why the object is not runnable.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the method fails, S_OK else
</dl>
</dl>
<a name="SetLicense"></a><a name="SetLicense(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>SetLicense</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetLicense</b>(<td> const <a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">CATListOfCATUnicodeString&amp;</a> <td><tt>iListLicense</tt>) = 0  </table></dt>
<dl>
  <dd>
 Allow the object to be runnable only with the defined list of licenses.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListLicense</tt>
   <dd>  the list of necessary licenses
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the method fails, S_OK else
</dl>
</dl>
<a name="SetRight"></a><a name="SetRight(CATKweRight&amp;,CATProtectionType&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetRight</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRight</b>(<td> const <a href="../KnowledgeInterfaces/typedef_CATKweRight_24445.htm">CATKweRight&amp;</a> <td><tt>iRight</tt>,<tr><td></td><td> const CATProtectionType&amp; <td><tt>iProtectionType</tt><td><tt>= Frozen</tt>,<tr><td></td><td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iKey</tt><td><tt>= ""</tt>) = 0  </table></dt>
<dl>
  <dd>
 Set the protection level to the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRight</tt>
   <dd>  the protection rights are either :
                        or CATRightKweDelete.
 example : CATRightTypeBrowse | CATRightKweDelete
 </dd>
    <dt><tt> iProtectionType</tt>
   <dd>  the protection types are either :
	                    Setting means that the right come from a setting,
						CAA means that the right is defined by a CAA Application.
 </dd>
    <dt><tt> iKey</tt>
   <dd> 	a key to allow to change the right
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the method fails, S_OK else
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CATProtectionType"> <dt> o <b>CATProtectionType</b>
<dl>
  <dd>
<pre>
enum <b>CATProtectionType</b> {
  NoType,
  Frozen,
  Setting,
  CAA
}
</pre>
 Type defining the protection of the rights of a feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> NoType</tt>
   <dd>		There is no protection
 </dd>
    <dt><tt> Frozen</tt>
   <dd>		The rights can't be changed
 </dd>
    <dt><tt> Setting</tt>
   <dd>		The rights can be modified through settings
 </dd>
    <dt><tt> CAA</tt>
   <dd>		The rights can be modified through CAA APIs</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIObjectRightsManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
