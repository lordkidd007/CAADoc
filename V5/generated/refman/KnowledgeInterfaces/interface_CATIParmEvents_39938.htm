<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIParmEvents</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="interface_CATIParmDictionary_66776.htm">Previous</a>  <a href="interface_CATIParmManipulator_75063.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowledgeInterfaces Interface CATIParmEvents</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../ObjectModelerSystem/interface_CATInterfaceEvents_66966.htm">ObjectModelerSystem.CATInterfaceEvents</a>
        |
        +---CATIParmEvents
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIParmEvents</b>
</p>
<p>
<b><i>    Interface dedicated to parameters events management.</i></b><br>

 <b>Role</b>: This interface is used to add subscription to parameters events.<br>
 It is implemented on parameters.
 4 events are available<br>
  <li> <b>ChangeValue</b> when value is actually changed </li>
  <li> <b>Rename</b> when parameter is actually renamed </li>
  <li> <b>ChangeVisu</b> when <br>
      <li> for internal reasons :
         <li>visibility change</li>    
         <li>user access change</li>
         <li>driving relation set or unset</li>
         <li>magnitude current unit change</li></li>
      <li> for external reason : (SendChangeVisu)
         <li>driving relation is activated or desactivated</li> </li>
 </li>
  <li> <b>Delete</b> when literal is deleted (before deletion)</li>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/class_CATParmNotification_75145.htm">CATParmNotification</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetChangeValueNotification()"><b>GetChangeValueNotification</b></a>()
<dd>  Returns change value notification.
 <dt> o 
    <a href="#GetChangeVisuNotification()"><b>GetChangeVisuNotification</b></a>()
<dd>  Returns change visu notification.
 <dt> o 
    <a href="#GetDeleteNotification()"><b>GetDeleteNotification</b></a>()
<dd>  Returns delete notification.
 <dt> o 
    <a href="#GetRenameNotification()"><b>GetRenameNotification</b></a>()
<dd>  Returns rename notification.
 <dt> o 
    <a href="#SendChangeValueNotification(CATCke::Boolean&amp;)"><b>SendChangeValueNotification</b></a>(CATCke::Boolean&amp;)
<dd>  Produces the change value event dispatch on the parameter.
 <dt> o 
    <a href="#SendChangeVisuNotification()"><b>SendChangeVisuNotification</b></a>()
<dd>  Produces the change visu event dispatch on the parameter.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetChangeValueNotification"></a><a name="GetChangeValueNotification()"></a> <dt> o <b>GetChangeValueNotification</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectModelerSystem/typedef_CATCallbackEvent_51600.htm">CATCallbackEvent</a>  <b>GetChangeValueNotification</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns change value notification.
</dl>
<a name="GetChangeVisuNotification"></a><a name="GetChangeVisuNotification()"></a> <dt> o <b>GetChangeVisuNotification</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectModelerSystem/typedef_CATCallbackEvent_51600.htm">CATCallbackEvent</a>  <b>GetChangeVisuNotification</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns change visu notification.
</dl>
<a name="GetDeleteNotification"></a><a name="GetDeleteNotification()"></a> <dt> o <b>GetDeleteNotification</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectModelerSystem/typedef_CATCallbackEvent_51600.htm">CATCallbackEvent</a>  <b>GetDeleteNotification</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns delete notification.
</dl>
<a name="GetRenameNotification"></a><a name="GetRenameNotification()"></a> <dt> o <b>GetRenameNotification</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectModelerSystem/typedef_CATCallbackEvent_51600.htm">CATCallbackEvent</a>  <b>GetRenameNotification</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns rename notification.
</dl>
<a name="SendChangeValueNotification"></a><a name="SendChangeValueNotification(CATCke::Boolean&amp;)"></a> <dt> o <b>SendChangeValueNotification</b>

<dt>  <table><tr><td>  public virtual void  <b>SendChangeValueNotification</b>(<td> const CATCke::Boolean&amp; <td><tt>iChanged</tt><td><tt>= 1</tt>) =0  </table></dt>
<dl>
  <dd>
 Produces the change value event dispatch on the parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChanged</tt>
   <dd> :   	indicates if value has actually changed<br>.</dd>
</dl>
</dl>
</dl>
<a name="SendChangeVisuNotification"></a><a name="SendChangeVisuNotification()"></a> <dt> o <b>SendChangeVisuNotification</b>

<dt>  <table><tr><td>  public virtual void  <b>SendChangeVisuNotification</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Produces the change visu event dispatch on the parameter.
</dl>
<hr>
 This object is included in the file: <b>CATIParmEvents.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
