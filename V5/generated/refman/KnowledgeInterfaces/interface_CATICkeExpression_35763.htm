<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeExpression</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeExpression"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeExpression</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeExpression_35763','CATICkeExpression','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeExpression</b>
</p>
<p>
<b><i>    Interface dedicated to expressions management.</i></b><br>

 
 An expression is a feature that describes a function to be evaluated on a set of identified objects.
 <p>
 It is composed of a signature and a body.
 <p>
 The signature details the list of objects on which it is supposed to work on.
 example : "(x: #In Integer, y: #Out Real) : #Void " means that the expression works on 2 abstract
 objects x which is an Integer and will be used as an input; and y which is a Real and that will be
 used as output.
 <p>
 The body expresses the function: example : " y=3.2*x "
 <p>
 An expression is created from 2 strings (signature and body). It is able to tell if they are
 syntaxically correct.
 <p>
 Expressions also implement CATICkeFunction that is in charge of evaluation on specific objects.
 <p>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeRelationFactory','','CATICkeRelationFactory') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeFunction','','CATICkeFunction') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeSignature','','CATICkeSignature') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeArg','','CATICkeArg') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeType','','CATICkeType') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Body()"><b>Body</b></a>()
<dd>  Returns the body of this expression.
 <dt> o 
    <a href="#CanBeEdited()"><b>CanBeEdited</b></a>()
<dd>  Indicates if an expression can be edited (Is it syntaxically correct).
 <dt> o 
    <a href="#CanBeEvaluated()"><b>CanBeEvaluated</b></a>()
<dd>  Indicates if an expression can be evaluated (syntaxically correct & operators available at runtime).
 <dt> o 
    <a href="#Copy()"><b>Copy</b></a>()
<dd>  Copy the expression.
 <dt> o 
    <a href="#Replace(CATICkeExpression_var&amp;)"><b>Replace</b></a>(CATICkeExpression_var&amp;)
<dd>  Replaces an expression by another.
 <dt> o 
    <a href="#SetBody(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>SetBody</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Replaces the expression content (parse of the expression is done).
 <dt> o 
    <a href="#Signature()"><b>Signature</b></a>()
<dd>  Returns the signature of this expression.
 <dt> o 
    <a href="#ViewBody(CATListOfCATUnicodeString&amp;)"><b>ViewBody</b></a>(CATListOfCATUnicodeString&amp;)
<dd>  Produces a view of the body of the expression with a change in the variable names.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Body"></a><a name="Body()"></a> <dt> o <b>Body</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>Body</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the body of this expression.
 It Shouldn't be used to produce a view of the body, it returns only the body stored in the attribute.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  : body in a text format
</dl>
</dl>
<a name="CanBeEdited"></a><a name="CanBeEdited()"></a> <dt> o <b>CanBeEdited</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>CanBeEdited</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if an expression can be edited (Is it syntaxically correct).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATCke::Boolean : True if can be edited
</dl>
</dl>
<a name="CanBeEvaluated"></a><a name="CanBeEvaluated()"></a> <dt> o <b>CanBeEvaluated</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>CanBeEvaluated</b>(<td>)<script type="text/javascript"> activateLink('0','const= 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if an expression can be evaluated (syntaxically correct & operators available at runtime).<br>
 This method may raise syntax error (CATCkeParseException). No ability to catch them in CAA.<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATCke::Boolean : True if can be evaluated
</dl>
</dl>
<a name="Copy"></a><a name="Copy()"></a> <dt> o <b>Copy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeExpression','CATICkeExpression_var')</script>  <b>Copy</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Copy the expression.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  : copied expression
</dl>
</dl>
<a name="Replace"></a><a name="Replace(CATICkeExpression_var&amp;)"></a> <dt> o <b>Replace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Replace</b>(<td> const <script type="text/javascript"> activateLink('CATICkeExpression_var','CATICkeExpression_var&amp;')</script> <td><tt>iExpression</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Replaces an expression by another.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExpression</tt>
   <dd> : expression that replaces</dd>
</dl>
</dl>
</dl>
<a name="SetBody"></a><a name="SetBody(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetBody</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSignature</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBody</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Replaces the expression content (parse of the expression is done).
 This method may raise syntax error (CATCkeParseException). No ability to catch them in CAA.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSignature</tt>
   <dd> : signature in a text format </dd>
    <dt><tt> iBody</tt>
   <dd> : body in a text format</dd>
</dl>
</dl>
</dl>
<a name="Signature"></a><a name="Signature()"></a> <dt> o <b>Signature</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature','CATICkeSignature_var')</script>  <b>Signature</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the signature of this expression.
 This will provoke a partial "parse" of the expression if not done already
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   CATICkeSignature_var : signature pf the expression
</dl>
</dl>
<a name="ViewBody"></a><a name="ViewBody(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>ViewBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>ViewBody</b>(<td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iListNames</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Produces a view of the body of the expression with a change in the variable names.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListNames</tt>
   <dd> : list of the names to be used </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  : body view
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeExpression.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

