<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeSetOfEquations</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="interface_CATICkeRelationFactory_98942.htm">Previous</a>  <a href="interface_CATICkeSetOfEquationsFactory_160372.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeSetOfEquations</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATICkeSetOfEquations
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeSetOfEquations</b>
</p>
<p>
<b><i> Interface dedicated to the management of Set of Equations.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ControlCallBackInitializing(int,int)"><b>ControlCallBackInitializing</b></a>(int,int)
<dd>  Control the initializing/finalizing CATIASubdefiniteCallBack.
 <dt> o 
    <a href="#DisplayStopDialog(int)"><b>DisplayStopDialog</b></a>(int)
<dd>  Get/set the flag which is indicated if the "Stop Dialog" should be created.
 <dt> o 
    <a href="#FindNextSolutions(unsigned)"><b>FindNextSolutions</b></a>(unsigned)
<dd>  Find several next solutions.
 <dt> o 
    <a href="#GetBlackBoxParameters(BlackboxParameters&amp;)"><b>GetBlackBoxParameters</b></a>(BlackboxParameters&amp;)
<dd>  Get blackbox parameters.
 <dt> o 
    <a href="#GetCalculationTime()"><b>GetCalculationTime</b></a>()
<dd>  Get current time (milliseconds).
 <dt> o 
    <a href="#GetConstraintDescription(long,CATUnicodeString&amp;,unsigned&amp;,boolean&amp;)"><b>GetConstraintDescription</b></a>(long,CATUnicodeString&amp;,unsigned&amp;,boolean&amp;)
<dd>  Get description of the constraint.
 <dt> o 
    <a href="#GetErrorDescription(CATUnicodeString&amp;)"><b>GetErrorDescription</b></a>(CATUnicodeString&amp;)
<dd>  Get error description.
 <dt> o 
    <a href="#GetExpectedTime()"><b>GetExpectedTime</b></a>()
<dd>  Get expected time (milliseconds).
 <dt> o 
    <a href="#GetMaxCalculationTime()"><b>GetMaxCalculationTime</b></a>()
<dd>  Get a maximal calculation time.
 <dt> o 
    <a href="#GetNumberOfSolutions()"><b>GetNumberOfSolutions</b></a>()
<dd>  Get number of the found solutions.
 <dt> o 
    <a href="#GetNumberOfSolutionsToFind()"><b>GetNumberOfSolutionsToFind</b></a>()
<dd>  Get a maximal number of solutions those should be found during calculations.
 <dt> o 
    <a href="#GetPrecision()"><b>GetPrecision</b></a>()
<dd>  Get a calculation precision.
 <dt> o 
    <a href="#GetSolutionsDistance()"><b>GetSolutionsDistance</b></a>()
<dd>  Get the minimal distance between solutions.
 <dt> o 
    <a href="#GetStatus(int&amp;)"><b>GetStatus</b></a>(int&amp;)
<dd>  Get the status of the set of equation.
 <dt> o 
    <a href="#GetTimerId()"><b>GetTimerId</b></a>()
<dd>  The function returns a timer id for the time of solving Set of Equations.
 <dt> o 
    <a href="#GetUpdateNotification()"><b>GetUpdateNotification</b></a>()
<dd>  Get own notification.
 <dt> o 
    <a href="#NumberOfShownSolutions(int)"><b>NumberOfShownSolutions</b></a>(int)
<dd>  Set a number of shown solutions.
 <dt> o 
    <a href="#RestoreResults(CATISpecObject_var&amp;,int&amp;)"><b>RestoreResults</b></a>(CATISpecObject_var&amp;,int&amp;)
<dd>  Restore DesingTable (results of CS) and state.
 <dt> o 
    <a href="#RunHasToStop(int)"><b>RunHasToStop</b></a>(int)
<dd>  Get/set a terminate flag.
 <dt> o 
    <a href="#SelectSolution(unsigned)"><b>SelectSolution</b></a>(unsigned)
<dd>  Set the solution as a current one.
 <dt> o 
    <a href="#SetBlackBoxParameters(BlackboxParameters&amp;)"><b>SetBlackBoxParameters</b></a>(BlackboxParameters&amp;)
<dd>  Set blackbox parameters.
 <dt> o 
    <a href="#SetCalculationTime(unsigned long)"><b>SetCalculationTime</b></a>(unsigned long)
<dd>  Set current time.
 <dt> o 
    <a href="#SetExpectedTime(unsigned long)"><b>SetExpectedTime</b></a>(unsigned long)
<dd>  Set expected time.
 <dt> o 
    <a href="#SetMaxCalculationTime(unsigned long)"><b>SetMaxCalculationTime</b></a>(unsigned long)
<dd>  Set a maximal duration of the current model calculations.
 <dt> o 
    <a href="#SetNumberOfSolutionsToFind(unsigned long)"><b>SetNumberOfSolutionsToFind</b></a>(unsigned long)
<dd>  Set a maximal number of solutions those should be found during calculations.
 <dt> o 
    <a href="#SetParameterAsInput(CATICkeParm*)"><b>SetParameterAsInput</b></a>(CATICkeParm*)
<dd>  Specifies that the parameter must be considered as input parameter.
 <dt> o 
    <a href="#SetParameterAsOutput(CATICkeParm*)"><b>SetParameterAsOutput</b></a>(CATICkeParm*)
<dd>  Specifies that the parameter must be considered as output parameter.
 <dt> o 
    <a href="#SetParametersAsInput(CATCkeListOfParm)"><b>SetParametersAsInput</b></a>(CATCkeListOfParm)
<dd>  Specifies that the parameter must be considered as input parameter.
 <dt> o 
    <a href="#SetParametersAsOutput(CATCkeListOfParm)"><b>SetParametersAsOutput</b></a>(CATCkeListOfParm)
<dd>  Specifies that the parameter must be considered as output parameter.
 <dt> o 
    <a href="#SetPrecision(double)"><b>SetPrecision</b></a>(double)
<dd>  Set a calculation precision.
 <dt> o 
    <a href="#SetSolutionsDistance(double)"><b>SetSolutionsDistance</b></a>(double)
<dd>  Set the minimal distance between solutions.
 <dt> o 
    <a href="#SetStatus(int)"><b>SetStatus</b></a>(int)
<dd>  Set the status of the set of equation.
 <dt> o 
    <a href="#SetTimerId(CATTimerId)"><b>SetTimerId</b></a>(CATTimerId)
<dd>  The function sets a timer id for the time of solving Set of Equations.
 <dt> o 
    <a href="#StoreResults(CATISpecObject_var&amp;,int)"><b>StoreResults</b></a>(CATISpecObject_var&amp;,int)
<dd>  Store DesingTable (results of CS) and state.
 <dt> o 
    <a href="#UseErrorDescription(int)"><b>UseErrorDescription</b></a>(int)
<dd>  Get/set status of using the Smart Error localization.
 <dt> o 
    <a href="#UseGaussElimination(int)"><b>UseGaussElimination</b></a>(int)
<dd>  Get/set status of using the Gauss method for linear equations.
 <dt> o 
    <a href="#UseWarningLevel(int)"><b>UseWarningLevel</b></a>(int)
<dd>  Get/set status of using additional warnings.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ControlCallBackInitializing"></a><a name="ControlCallBackInitializing(int,int)"></a> <dt> o <b>ControlCallBackInitializing</b>

<dt>  <table><tr><td>  public virtual int  <b>ControlCallBackInitializing</b>(<td>int <td><tt>iStep</tt>,<tr><td></td><td>int <td><tt>iState</tt>)= 0  </table></dt>
<dl>
  <dd>
 Control the initializing/finalizing CATIASubdefiniteCallBack.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStep</tt>
   <dd>  =0 - initializing;               =1 - finalizing.
 </dd>
    <dt><tt> iState</tt>
   <dd> =0 - doesn`t performs;               =1 - performs;
               =2 - performs, but only 1 time;
               =3 - show current state.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<a name="DisplayStopDialog"></a><a name="DisplayStopDialog(int)"></a> <dt> o <b>DisplayStopDialog</b>

<dt>  <table><tr><td>  public virtual int  <b>DisplayStopDialog</b>(<td>int <td><tt>iUsed</tt><td><tt>=2</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get/set the flag which is indicated if the "Stop Dialog" should be created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymbolic</tt>
   <dd> =0 - don`t show "Stop Dialog";                  =1 - show "Stop Dialog";
                  =2 - get current status.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<a name="FindNextSolutions"></a><a name="FindNextSolutions(unsigned)"></a> <dt> o <b>FindNextSolutions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>FindNextSolutions</b>(<td>unsigned <td><tt>iNsols</tt>)= 0  </table></dt>
<dl>
  <dd>
 Find several next solutions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNsols</tt>
   <dd> a number of calculated solutions.</dd>
</dl>
</dl>
</dl>
<a name="GetBlackBoxParameters"></a><a name="GetBlackBoxParameters(BlackboxParameters&amp;)"></a> <dt> o <b>GetBlackBoxParameters</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetBlackBoxParameters</b>(<td>BlackboxParameters&amp; <td><tt>oPars</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get blackbox parameters.
</dl>
<a name="GetCalculationTime"></a><a name="GetCalculationTime()"></a> <dt> o <b>GetCalculationTime</b>

<dt>  <table><tr><td>  public virtual unsigned long  <b>GetCalculationTime</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get current time (milliseconds).
</dl>
<a name="GetConstraintDescription"></a><a name="GetConstraintDescription(long,CATUnicodeString&amp;,unsigned&amp;,boolean&amp;)"></a> <dt> o <b>GetConstraintDescription</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetConstraintDescription</b>(<td>long <td><tt>iCnt</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oDescrition</tt>,<tr><td></td><td>unsigned&amp; <td><tt>oCount</tt>,<tr><td></td><td>boolean&amp; <td><tt>oErr</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get description of the constraint. Work with Smart Error localization only.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCnt</tt>
   <dd> a number of the constraint. </dd>
    <dt><tt> oDescrition</tt>
   <dd> a view of the constraint. </dd>
    <dt><tt> oCount</tt>
   <dd> a number of calls of the constraint. </dd>
    <dt><tt> oErr</tt>
   <dd> 1 if the contradiction occured in the constraint.</dd>
</dl>
</dl>
</dl>
<a name="GetErrorDescription"></a><a name="GetErrorDescription(CATUnicodeString&amp;)"></a> <dt> o <b>GetErrorDescription</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetErrorDescription</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oDescrition</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get error description.
</dl>
<a name="GetExpectedTime"></a><a name="GetExpectedTime()"></a> <dt> o <b>GetExpectedTime</b>

<dt>  <table><tr><td>  public virtual unsigned long  <b>GetExpectedTime</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get expected time (milliseconds).
</dl>
<a name="GetMaxCalculationTime"></a><a name="GetMaxCalculationTime()"></a> <dt> o <b>GetMaxCalculationTime</b>

<dt>  <table><tr><td>  public virtual unsigned long  <b>GetMaxCalculationTime</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get a maximal calculation time.
</dl>
<a name="GetNumberOfSolutions"></a><a name="GetNumberOfSolutions()"></a> <dt> o <b>GetNumberOfSolutions</b>

<dt>  <table><tr><td>  public virtual int  <b>GetNumberOfSolutions</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get number of the found solutions.
</dl>
<a name="GetNumberOfSolutionsToFind"></a><a name="GetNumberOfSolutionsToFind()"></a> <dt> o <b>GetNumberOfSolutionsToFind</b>

<dt>  <table><tr><td>  public virtual unsigned long  <b>GetNumberOfSolutionsToFind</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get a maximal number of solutions those should be found during calculations.
</dl>
<a name="GetPrecision"></a><a name="GetPrecision()"></a> <dt> o <b>GetPrecision</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetPrecision</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get a calculation precision.
</dl>
<a name="GetSolutionsDistance"></a><a name="GetSolutionsDistance()"></a> <dt> o <b>GetSolutionsDistance</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetSolutionsDistance</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get the minimal distance between solutions.
</dl>
<a name="GetStatus"></a><a name="GetStatus(int&amp;)"></a> <dt> o <b>GetStatus</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetStatus</b>(<td>int&amp; <td><tt>oStatus</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get the status of the set of equation.
 0 = unknown.
 1 = solved.
 2 = no solution found.
 3 = Evaluation error.
 4 = Interruption.
 5 = all solutions found.
</dl>
<a name="GetTimerId"></a><a name="GetTimerId()"></a> <dt> o <b>GetTimerId</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATTimerId_19500.htm">CATTimerId</a>  <b>GetTimerId</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 The function returns a timer id for the time of solving Set of Equations.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a timer id
</dl>
</dl>
<a name="GetUpdateNotification"></a><a name="GetUpdateNotification()"></a> <dt> o <b>GetUpdateNotification</b>

<dt>  <table><tr><td>  public virtual <a href="../System/class_CATNotification_47117.htm">CATNotification*</a>  <b>GetUpdateNotification</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get own notification.
</dl>
<a name="NumberOfShownSolutions"></a><a name="NumberOfShownSolutions(int)"></a> <dt> o <b>NumberOfShownSolutions</b>

<dt>  <table><tr><td>  public virtual unsigned long  <b>NumberOfShownSolutions</b>(<td>int <td><tt>iNSol</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set a number of shown solutions.
 The method is used to get a count of shown solutions to "Stop Dialog"
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNSol</tt>
   <dd> a number of solutions.         If iNSol==-1 then the count doesn`t modified.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current number of shown solutions.
</dl>
</dl>
<a name="RestoreResults"></a><a name="RestoreResults(CATISpecObject_var&amp;,int&amp;)"></a> <dt> o <b>RestoreResults</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RestoreResults</b>(<td>CATISpecObject_var&amp; <td><tt>oTable</tt>,<tr><td></td><td>int&amp; <td><tt>oState</tt>)= 0  </table></dt>
<dl>
  <dd>
 Restore DesingTable (results of CS) and state.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTable</tt>
   <dd> a table of solutions </dd>
    <dt><tt> oState</tt>
   <dd> a state of CS</dd>
</dl>
</dl>
</dl>
<a name="RunHasToStop"></a><a name="RunHasToStop(int)"></a> <dt> o <b>RunHasToStop</b>

<dt>  <table><tr><td>  public virtual int  <b>RunHasToStop</b>(<td>int <td><tt>iAction</tt><td><tt>=2</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get/set a terminate flag.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAction</tt>
   <dd> =0 - reset the flag;                =1 - set the flag;
                =2 - get the flag.</dd>
</dl>
</dl>
</dl>
<a name="SelectSolution"></a><a name="SelectSolution(unsigned)"></a> <dt> o <b>SelectSolution</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SelectSolution</b>(<td>unsigned <td><tt>iIdxSol</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set the solution as a current one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIdxSol</tt>
   <dd> a number of the solution.</dd>
</dl>
</dl>
</dl>
<a name="SetBlackBoxParameters"></a><a name="SetBlackBoxParameters(BlackboxParameters&amp;)"></a> <dt> o <b>SetBlackBoxParameters</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetBlackBoxParameters</b>(<td>BlackboxParameters&amp; <td><tt>iPars</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set blackbox parameters.
</dl>
<a name="SetCalculationTime"></a><a name="SetCalculationTime(unsigned long)"></a> <dt> o <b>SetCalculationTime</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCalculationTime</b>(<td>unsigned long <td><tt>iTime</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set current time.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTime</tt>
   <dd> a current time (milliseconds)</dd>
</dl>
</dl>
</dl>
<a name="SetExpectedTime"></a><a name="SetExpectedTime(unsigned long)"></a> <dt> o <b>SetExpectedTime</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetExpectedTime</b>(<td>unsigned long <td><tt>iTime</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set expected time.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTime</tt>
   <dd> a expected time (milliseconds)</dd>
</dl>
</dl>
</dl>
<a name="SetMaxCalculationTime"></a><a name="SetMaxCalculationTime(unsigned long)"></a> <dt> o <b>SetMaxCalculationTime</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetMaxCalculationTime</b>(<td>unsigned long <td><tt>iMaxTime</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set a maximal duration of the current model calculations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxTime</tt>
   <dd> a maximal time (seconds)</dd>
</dl>
</dl>
</dl>
<a name="SetNumberOfSolutionsToFind"></a><a name="SetNumberOfSolutionsToFind(unsigned long)"></a> <dt> o <b>SetNumberOfSolutionsToFind</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetNumberOfSolutionsToFind</b>(<td>unsigned long <td><tt>inSol</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set a maximal number of solutions those should be found during calculations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inSol</tt>
   <dd> a number of solutions</dd>
</dl>
</dl>
</dl>
<a name="SetParameterAsInput"></a><a name="SetParameterAsInput(CATICkeParm*)"></a> <dt> o <b>SetParameterAsInput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetParameterAsInput</b>(<td><a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm*</a> <td><tt>iParameter</tt>)= 0  </table></dt>
<dl>
  <dd>
 Specifies that the parameter must be considered as input parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> The</tt>
   <dd> parameter to set up as input of the SetOfEquationObject</dd>
</dl>
</dl>
</dl>
<a name="SetParameterAsOutput"></a><a name="SetParameterAsOutput(CATICkeParm*)"></a> <dt> o <b>SetParameterAsOutput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetParameterAsOutput</b>(<td><a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm*</a> <td><tt>iParameter</tt>)= 0  </table></dt>
<dl>
  <dd>
 Specifies that the parameter must be considered as output parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> The</tt>
   <dd> parameter to set up as input of the SetOfEquationObject</dd>
</dl>
</dl>
</dl>
<a name="SetParametersAsInput"></a><a name="SetParametersAsInput(CATCkeListOfParm)"></a> <dt> o <b>SetParametersAsInput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetParametersAsInput</b>(<td><a href="../KnowledgeInterfaces/typedef_CATCkeListOfParm_50484.htm">CATCkeListOfParm</a> <td><tt>iParameter</tt>)= 0  </table></dt>
<dl>
  <dd>
 Specifies that the parameter must be considered as input parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> The</tt>
   <dd> parameter to set up as input of the SetOfEquationObject</dd>
</dl>
</dl>
</dl>
<a name="SetParametersAsOutput"></a><a name="SetParametersAsOutput(CATCkeListOfParm)"></a> <dt> o <b>SetParametersAsOutput</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetParametersAsOutput</b>(<td><a href="../KnowledgeInterfaces/typedef_CATCkeListOfParm_50484.htm">CATCkeListOfParm</a> <td><tt>iParameter</tt>)= 0  </table></dt>
<dl>
  <dd>
 Specifies that the parameter must be considered as output parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> The</tt>
   <dd> parameter to set up as input of the SetOfEquationObject</dd>
</dl>
</dl>
</dl>
<a name="SetPrecision"></a><a name="SetPrecision(double)"></a> <dt> o <b>SetPrecision</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPrecision</b>(<td>double <td><tt>iEps</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set a calculation precision.
</dl>
<a name="SetSolutionsDistance"></a><a name="SetSolutionsDistance(double)"></a> <dt> o <b>SetSolutionsDistance</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSolutionsDistance</b>(<td>double <td><tt>iEps</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set the minimal distance between solutions.
</dl>
<a name="SetStatus"></a><a name="SetStatus(int)"></a> <dt> o <b>SetStatus</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetStatus</b>(<td>int <td><tt>iStatus</tt>)= 0  </table></dt>
<dl>
  <dd>
 Set the status of the set of equation.
 0 = unknown.
 1 = solved.
 2 = no solution found.
 3 = Evaluation error.
 4 = Interruption.
 5 = all solutions found.
</dl>
<a name="SetTimerId"></a><a name="SetTimerId(CATTimerId)"></a> <dt> o <b>SetTimerId</b>

<dt>  <table><tr><td>  public virtual void  <b>SetTimerId</b>(<td>CATTimerId <td><tt>iTimerId</tt>)= 0  </table></dt>
<dl>
  <dd>
 The function sets a timer id for the time of solving Set of Equations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTimerId</tt>
   <dd> a time id</dd>
</dl>
</dl>
</dl>
<a name="StoreResults"></a><a name="StoreResults(CATISpecObject_var&amp;,int)"></a> <dt> o <b>StoreResults</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>StoreResults</b>(<td>CATISpecObject_var&amp; <td><tt>iTable</tt>,<tr><td></td><td>int <td><tt>iState</tt>)= 0  </table></dt>
<dl>
  <dd>
 Store DesingTable (results of CS) and state.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTable</tt>
   <dd> a table of solutions </dd>
    <dt><tt> iState</tt>
   <dd> a current state of CS</dd>
</dl>
</dl>
</dl>
<a name="UseErrorDescription"></a><a name="UseErrorDescription(int)"></a> <dt> o <b>UseErrorDescription</b>

<dt>  <table><tr><td>  public virtual int  <b>UseErrorDescription</b>(<td>int <td><tt>iError</tt><td><tt>=2</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get/set status of using the Smart Error localization.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymbolic</tt>
   <dd> =0 - don`t use Smart Error localization;                  =1 - use Smart Error localization;
                  =2 - get current status.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<a name="UseGaussElimination"></a><a name="UseGaussElimination(int)"></a> <dt> o <b>UseGaussElimination</b>

<dt>  <table><tr><td>  public virtual int  <b>UseGaussElimination</b>(<td>int <td><tt>iSymbolic</tt><td><tt>=2</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get/set status of using the Gauss method for linear equations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymbolic</tt>
   <dd> =0 - don`t use Gauss method;                  =1 - use Gauss method;
                  =2 - get current status.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<a name="UseWarningLevel"></a><a name="UseWarningLevel(int)"></a> <dt> o <b>UseWarningLevel</b>

<dt>  <table><tr><td>  public virtual int  <b>UseWarningLevel</b>(<td>int <td><tt>iError</tt><td><tt>=2</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get/set status of using additional warnings.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymbolic</tt>
   <dd> =0 - don`t show additional warnings;                  =1 - show additional warnings;
                  =2 - get current status.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeSetOfEquations.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
