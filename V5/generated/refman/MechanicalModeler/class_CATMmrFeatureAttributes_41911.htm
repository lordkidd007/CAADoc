<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MechanicalModeler Class CATMmrFeatureAttributes</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MechanicalModeler.htm" href="../MechanicalModeler.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MechanicalModeler";	}
		function getCurrentObjectName() { 
 	return "CATMmrFeatureAttributes"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MechanicalModeler <script type="text/javascript" > writeClassCharacteristic(); </script> CATMmrFeatureAttributes</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMmrFeatureAttributes_41911','CATMmrFeatureAttributes','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMmrFeatureAttributes</b>
</p>
<p>
<b><i> Class to manage specific attributes used in backup startup context.</i></b><br>

 <br><b>Role:</b>When feature's startup catalog and code implementation are not
 available on the runtime view, for a feature read from a document, the
 feature instance is replaced with a backup startup. To be able to manage
 correctly this backup startup, the mechanical modeler need to get information
 from attributes. This class enables the CAA application to set this information on
 its CAA features during instanciation.</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFeatureType(CATBaseUnknown_var&amp;,CATIInputDescription::FeatureType&amp;)"><b>GetFeatureType</b></a>(CATBaseUnknown_var&amp;,CATIInputDescription::FeatureType&amp;)
<dd>    Gets the type of feature.
 <dt> o 
    <a href="#SetFeatureType(CATBaseUnknown_var&amp;,CATIInputDescription::FeatureType&amp;)"><b>SetFeatureType</b></a>(CATBaseUnknown_var&amp;,CATIInputDescription::FeatureType&amp;)
<dd>    Sets the type of feature.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFeatureType"></a><a name="GetFeatureType(CATBaseUnknown_var&amp;,CATIInputDescription::FeatureType&amp;)"></a> <dt> o <b>GetFeatureType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFeatureType</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iGeometricFeature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIInputDescription::FeatureType','CATIInputDescription::FeatureType&amp;')</script> <td><tt>ioFeatureType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Gets the type of feature.
   <br><b>Role:</b><br> Get the feature type according to 
<script type="text/javascript"> activateLinkAnchor('CATIInputDescription','','CATIInputDescription') </script>   implementation. This method is meaningfull for a CAA feature derivated from
   GSMGeom satrtup, GeometricalElement3D startup or MechanicalShapeFeature startup.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometricFeature</tt>
   <dd>   The feature for which the type is set. The feature must derivate from GSMGeom
   startup (directly or undirectly).
   </dd>
    <dt><tt> ioFeatureType</tt>
   <dd>   <b>Returned values:</b><br>.
   <dl><dt><tt>FeatureType_Creation</tt></dt><dd>The feature is a creation feature, it doesn't absorb any feature.</dd>
   <dt><tt>FeatureType_Modification</tt></dt><dd>The feature is a modification feature, it absorbs at least one feature.</dd></dl>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <b>Legal values:</b><br>
   <dl><dt><tt>S_OK</tt></dt><dd>The feature type has been correctly retrieved.</dd>
   <dt><tt>E_FAIL</tt></dt><dd>The feature type has not been retrieve because of internal failure or because of bad arguments.</dd></dl>
</dl>
</dl>
<a name="SetFeatureType"></a><a name="SetFeatureType(CATBaseUnknown_var&amp;,CATIInputDescription::FeatureType&amp;)"></a> <dt> o <b>SetFeatureType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFeatureType</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iGeometricFeature</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIInputDescription::FeatureType','CATIInputDescription::FeatureType&amp;')</script> <td><tt>iFeatureType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Sets the type of feature.
   <br><b>Role:</b><br> Set the feature type according to 
<script type="text/javascript"> activateLinkAnchor('CATIInputDescription','','CATIInputDescription') </script>   implementation. This attribute value will be used when the code of CATIInputDescription
   implementation won't be available. This method is meaningfull for a CAA feature
   derivated from GSMGeom satrtup or GeometricalElement3D startup. If the CAA feature is derivated from MechanicalShapeFeature
   startup the call is not necessary since the feature's type (creation or
   modification) is determined from internal modelisation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometricFeature</tt>
   <dd>   The feature for which the type is set. The feature must derivate from GSMGeom
   startup (directly or undirectly) or from GeometricalElement3D.
   </dd>
    <dt><tt> iFeatureType</tt>
   <dd>   <b>Legal values:</b><br>
   <dl><dt><tt>FeatureType_Creation</tt></dt><dd>The feature is a creation feature, it doesn't absorb any feature.</dd>
   <dt><tt>FeatureType_Modification</tt></dt><dd>The feature is a modification feature, it absorbs at least one feature.</dd></dl>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <b>Legal values:</b><br>
   <dl><dt><tt>S_OK</tt></dt><dd>The feature type has been correctly set.</dd>
   <dt><tt>E_FAIL</tt></dt><dd>The feature type has not been set because of internal failure or because of bad arguments.</dd></dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMmrFeatureAttributes.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMechanicalModeler</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

