<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MechanicalModeler Class CATMmrInterPartCopy</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MechanicalModeler.htm" href="../MechanicalModeler.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MechanicalModeler";	}
		function getCurrentObjectName() { 
 	return "CATMmrInterPartCopy"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MechanicalModeler <script type="text/javascript" > writeClassCharacteristic(); </script> CATMmrInterPartCopy</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMmrInterPartCopy_32750','CATMmrInterPartCopy','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMmrInterPartCopy</b>
</p>
<p>
<b><i> Class to manage inter and intra part copy as result.</i></b><br>

 <b>Role:</b>This class allows to simulate a copy/paste special as result (with link or not) in a easier way than
 <script type="text/javascript"> activateLinkAnchor('CATICutAndPastable','','CATICutAndPastable') </script> .  <b>Usage :</b>Use a constructor to give the input object and target, then use the 
<script type="text/javascript"> activateLinkAnchor('','Run','Run') </script> method then the 
<script type="text/javascript"> activateLinkAnchor('','GetResult','GetResult') </script> method.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMmrInterPartCopy(CATPathElement*,CATPathElement*)"><b>CATMmrInterPartCopy</b></a>(CATPathElement*,CATPathElement*)
<dd>  Constructor with a source path and a target path.
 <dt> o 
    <a href="#CATMmrInterPartCopy(CATICkeParm_var&amp;,CATISpecObject_var&amp;)"><b>CATMmrInterPartCopy</b></a>(CATICkeParm_var&amp;,CATISpecObject_var&amp;)
<dd>  Constructor with a source parameter and a target feature for the copy.
 <dt> o 
    <a href="#CATMmrInterPartCopy(CATIBRepAccess_var&amp;,CATISpecObject_var&amp;)"><b>CATMmrInterPartCopy</b></a>(CATIBRepAccess_var&amp;,CATISpecObject_var&amp;)
<dd>  Constructor with a source subelement and a target feature for the copy.
 <dt> o 
    <a href="#CATMmrInterPartCopy(CATISpecObject_var&amp;,CATISpecObject_var&amp;)"><b>CATMmrInterPartCopy</b></a>(CATISpecObject_var&amp;,CATISpecObject_var&amp;)
<dd>  Constructor with a source feature and a target feature for the copy.
 <dt> o 
    <a href="#~CATMmrInterPartCopy()"><b>~CATMmrInterPartCopy</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCreationStatus()"><b>GetCreationStatus</b></a>()
<dd>  Returns creation status.
 <dt> o 
    <a href="#GetResult(CATISpecObject_var&amp;)"><b>GetResult</b></a>(CATISpecObject_var&amp;)
<dd>  Retrieves the computed result.
 <dt> o 
    <a href="#Run(CATUnicodeString*)"><b>Run</b></a>(CATUnicodeString*)
<dd>  Computes the copy according to specified input.
 <dt> o 
    <a href="#SetAttributeMode(int)"><b>SetAttributeMode</b></a>(int)
<dd>  DEPRECATED

 Sets the copy mode for attributes when copying without keeping a link.
 <dt> o 
    <a href="#SetBRepAttributeMode(CATBoolean)"><b>SetBRepAttributeMode</b></a>(CATBoolean)
<dd>  Sets the copy mode for BRep-attributes when copying without keeping a link.
 <dt> o 
    <a href="#SetColorMode(CATMmrGraphicPropertiesModes::MmrGraphicPropertiesReportMode)"><b>SetColorMode</b></a>(CATMmrGraphicPropertiesModes::MmrGraphicPropertiesReportMode)
<dd>  Sets the copy mode for colors when copying without keeping a link.
 <dt> o 
    <a href="#SetImportApplicativeId(GUID&amp;)"><b>SetImportApplicativeId</b></a>(GUID&amp;)
<dd>  Sets an applicative identifier on the mechanical imports.
 <dt> o 
    <a href="#SetLinkMode(CATBoolean)"><b>SetLinkMode</b></a>(CATBoolean)
<dd>  Sets the link option (with or without link) to override default setting (keep link).
 <dt> o 
    <a href="#SetSourceInstance(CATIProduct*)"><b>SetSourceInstance</b></a>(CATIProduct*)
<dd>  Selects the product instance of the object.
 <dt> o 
    <a href="#SetTargetInstance(CATIProduct*)"><b>SetTargetInstance</b></a>(CATIProduct*)
<dd>  Selects the product instance of the target.
 <dt> o 
    <a href="#SetTypeOfCreatedSolidSet(CATBoolean)"><b>SetTypeOfCreatedSolidSet</b></a>(CATBoolean)
<dd>  Sets the type of created solid set.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMmrInterPartCopy"></a><a name="CATMmrInterPartCopy(CATPathElement*,CATPathElement*)"></a> <dt> o <b>CATMmrInterPartCopy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMmrInterPartCopy</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTarget</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor with a source path and a target path.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> path may contain (product instance +) part + feature or subelement
 </dd>
    <dt><tt> iTarget</tt>
   <dd> Target path may contain a product instance, a part, solid or surfacic feature set
</dd>
</dl>
</dl>
</dl>
<a name="CATMmrInterPartCopy"></a><a name="CATMmrInterPartCopy(CATICkeParm_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>CATMmrInterPartCopy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMmrInterPartCopy</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iElementToCopy</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iTarget</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor with a source parameter and a target feature for the copy.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElementToCopy</tt>
   <dd> a cke parameter
 </dd>
    <dt><tt> iTarget</tt>
   <dd> Target is a part, solid or surfacic feature set</dd>
</dl>
</dl>
</dl>
<a name="CATMmrInterPartCopy"></a><a name="CATMmrInterPartCopy(CATIBRepAccess_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>CATMmrInterPartCopy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMmrInterPartCopy</b>(<td> const <script type="text/javascript"> activateLink('CATIBRepAccess_var','CATIBRepAccess_var&amp;')</script> <td><tt>iElementToCopy</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iTarget</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor with a source subelement and a target feature for the copy.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElementToCopy</tt>
   <dd> a rsur, redge, vertex obtained from selection of a subelement
 </dd>
    <dt><tt> iTarget</tt>
   <dd> a part, solid or surfacic feature set</dd>
</dl>
</dl>
</dl>
<a name="CATMmrInterPartCopy"></a><a name="CATMmrInterPartCopy(CATISpecObject_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>CATMmrInterPartCopy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMmrInterPartCopy</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iObjectToCopy</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iTarget</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor with a source feature and a target feature for the copy.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectToCopy</tt>
   <dd> a curve, line, surface, plane, point, sketch, solid feature set
 </dd>
    <dt><tt> iTarget</tt>
   <dd> a part, solid or surfacic feature set</dd>
</dl>
</dl>
</dl>
<a name="~CATMmrInterPartCopy"></a><a name="~CATMmrInterPartCopy()"></a> <dt> o <b>~CATMmrInterPartCopy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATMmrInterPartCopy</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="GetCreationStatus"></a><a name="GetCreationStatus()"></a> <dt> o <b>GetCreationStatus</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCreationStatus</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns creation status.
 <br><b>Role:</b> after computing the copy, this method will return S_FALSE 
 if the result already existed and so was not created. 
 This is only the case for a contextual import in an assembly.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResult</tt>
   <dd> status
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if an object was created, S_FALSE if result already existed, E_FAIL otherwise
</dl>
</dl>
<a name="GetResult"></a><a name="GetResult(CATISpecObject_var&amp;)"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetResult</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oResult</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the computed result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResult</tt>
   <dd>   The result of the copy (if ok). Use this method after the </dd>
<script type="text/javascript"> activateLinkAnchor('','Run','Run') </script> execution.  
  <dt> <b>Returns:</b> 
  <dd>  S_OK if result exists, E_FAIL otherwise
</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run(CATUnicodeString*)"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Run</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>oString</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes the copy according to specified input.
 <br><b>Role:</b> after constructing the class, select link mode if needed
 and then use method Run before getting the result with 
<script type="text/javascript"> activateLinkAnchor('','GetResult','GetResult') </script> . 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oString</tt>
   <dd> Error Message
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if copy is done, E_FAIL otherwise
</dl>
</dl>
<a name="SetAttributeMode"></a><a name="SetAttributeMode(int)"></a> <dt> o <b>SetAttributeMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAttributeMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 DEPRECATED

 Sets the copy mode for attributes when copying without keeping a link.
 
 <br><b>Role:</b> Allows to specify which attributes are copied. By default, if this method is not called
 BRep-attributes and colors on sub-elements are not copied. This method allows to copy color and/or attributes.
 <br>This method has no effect on copies with link, for which colors and attributes are copied according to the setting
 in PartInfrastructure/PartDocument.
 <br> This method must be called before the 
<script type="text/javascript"> activateLinkAnchor('','Run','Run') </script> method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> 0 : color and BRep-attributes are not copied<br>
 1: color is copied, not BRep-attributes<br>
 2: BRep-attributes are copied, not color<br>
 3: BRep-attributes and colors are copied
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if mode is accepted, E_FAIL otherwise
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMmrApplicativeAttributes','','CATMmrApplicativeAttributes') </script>
</dl>
</dl>
<a name="SetBRepAttributeMode"></a><a name="SetBRepAttributeMode(CATBoolean)"></a> <dt> o <b>SetBRepAttributeMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetBRepAttributeMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iBRepAttributeMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the copy mode for BRep-attributes when copying without keeping a link.
 
 <br><b>Role:</b> Allows to specify if BRep-attributes are copied. By default, if this method is not called
 BRep-attributes are not copied. This method allows to copy BRep-attributes.
 <br>This method has no effect on copies with link, for which BRep-attributes are copied according to the setting
 in PartInfrastructure/PartDocument.
 <br> This method must be called before the 
<script type="text/javascript"> activateLinkAnchor('','Run','Run') </script> method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> FALSE : BRep-attributes are not copied<br>
 TRUE : BRep-attributes are copied<br>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if mode is accepted, E_FAIL otherwise
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMmrApplicativeAttributes','','CATMmrApplicativeAttributes') </script>
</dl>
</dl>
<a name="SetColorMode"></a><a name="SetColorMode(CATMmrGraphicPropertiesModes::MmrGraphicPropertiesReportMode)"></a> <dt> o <b>SetColorMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetColorMode</b>(<td> const <script type="text/javascript"> activateLink('CATMmrGraphicPropertiesModes::MmrGraphicPropertiesReportMode','CATMmrGraphicPropertiesModes::MmrGraphicPropertiesReportMode')</script> <td><tt>iColorMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the copy mode for colors when copying without keeping a link.
 
 <br><b>Role:</b> Allows to specify if colors are copied. By default, if this method is not called
 colors on sub-elements are not copied. This method allows to copy colors.
 <br>This method has no effect on copies with link, for which colors are copied according to the setting
 in PartInfrastructure/PartDocument.
 <br> This method must be called before the 
<script type="text/javascript"> activateLinkAnchor('','Run','Run') </script> method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> NONE_GP                         : color is not copied<br>
 ALL_GP                          : color of feature and color of faces seen in 3D is copied.
 FEATURE_GP                      : color of feature is copied<br>
 FEATURE_AND_FACES_OVERLOADED_GP : color of feature and ONLY color of faces overloaded are copied<br>
 FACES_OVERLOADED_GP             : color of faces overloaded is copied
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if mode is accepted, E_FAIL otherwise
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMmrApplicativeAttributes','','CATMmrApplicativeAttributes') </script>
</dl>
</dl>
<a name="SetImportApplicativeId"></a><a name="SetImportApplicativeId(GUID&amp;)"></a> <dt> o <b>SetImportApplicativeId</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetImportApplicativeId</b>(<td> const <script type="text/javascript"> activateLink('GUID','GUID&amp;')</script> <td><tt>iApplicativeId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets an applicative identifier on the mechanical imports. 
 <br><b>Role:</b> it enables to associate an identifier with the mechanical import feature which is the result 
 of the copy (or the elements of the result if it is a surface set or a solid set).
 <br>This identifier allows to retrieve information on the mechanical import using interface 
<script type="text/javascript"> activateLinkAnchor('CATIMmiMechanicalImportApplicative','','CATIMmiMechanicalImportApplicative') </script> .  <br> This method must be called before the 
<script type="text/javascript"> activateLinkAnchor('','Run','Run') </script> method and it only applies if the link mode is set to true. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplicativeId</tt>
   <dd> The unique identifier generated by the application.
 <ul>
   <li>on Windows, use : <tt>uuidgen -s</tt></li>
   <li>on Unix, use : <tt>uuid_gen -C</tt></li>
 </ul>
 Refer to the article "About Globally Unique IDentifiers" in the CAA encyclopedia for more details about these two ways of generating a GUID value.</dd>
</dl>
</dl>
</dl>
<a name="SetLinkMode"></a><a name="SetLinkMode(CATBoolean)"></a> <dt> o <b>SetLinkMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLinkMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the link option (with or without link) to override default setting (keep link).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> TRUE to keep the link, FALSE otherwise
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if mode is accepted, E_FAIL otherwise
</dl>
</dl>
<a name="SetSourceInstance"></a><a name="SetSourceInstance(CATIProduct*)"></a> <dt> o <b>SetSourceInstance</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSourceInstance</b>(<td><script type="text/javascript"> activateLink('CATIProduct','CATIProduct*')</script> <td><tt>iProd</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Selects the product instance of the object.
 <br><b>Role:</b> for contextual link, you may specify the instance of the source part. 
 It can also be specified with the constructor with pathelement.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProd</tt>
   <dd> the selected instance will be used to determine the product context
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if instance is accepted, E_FAIL otherwise
</dl>
</dl>
<a name="SetTargetInstance"></a><a name="SetTargetInstance(CATIProduct*)"></a> <dt> o <b>SetTargetInstance</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTargetInstance</b>(<td><script type="text/javascript"> activateLink('CATIProduct','CATIProduct*')</script> <td><tt>iProd</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Selects the product instance of the target.
 <br><b>Role:</b> for contextual link, you may specify the instance of the target part.
 It can also be specified with the constructor with pathelement.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProd</tt>
   <dd> the selected product instance used as a context for the contextual link
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if instance is accepted, E_FAIL otherwise
</dl>
</dl>
<a name="SetTypeOfCreatedSolidSet"></a><a name="SetTypeOfCreatedSolidSet(CATBoolean)"></a> <dt> o <b>SetTypeOfCreatedSolidSet</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTypeOfCreatedSolidSet</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iIsAnOrderedSet</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the type of created solid set.
 <br><b>Role:</b> Specifies the type of solid set, Solid Body (MechanicalTool startup) or Body
 (HybridBody startup), that will be created during import (Run method). This parameter is applicable
 only in case of solid import. If the type is not specified, the type of solid set that will be
 created will be based on "Hybrid Design" setting value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIsAnOrderedSet</tt>
   <dd>   If TRUE, the created body is a Body.
   If FALSE, the created body is a Solid Body.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if set is accepted, E_FAIL otherwise
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMmrInterPartCopy.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMechanicalModeler</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

