<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MechanicalModeler Class CATMf3DBehavior2Adapter</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../MechanicalModeler.htm">This Framework</a>  <a href="class_CATMfCkeServices_51614.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>MechanicalModeler Class CATMf3DBehavior2Adapter</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../MecModInterfaces/interface_CATIMf3DBehavior2_52489.htm">MecModInterfaces.CATIMf3DBehavior2</a>
        |
        +---CATMf3DBehavior2Adapter
 </pre>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATMf3DBehavior2Adapter</b>
</p>
<p>
<b><i> Adaptor class for CATIMf3DBehavior2.</i></b><br>

 <b>Role:</b> This class enables you to implement the 
  <a href="../MecModInterfaces/interface_CATIMf3DBehavior2_52489.htm">CATIMf3DBehavior2</a> interface. Your implementation must derive  from this class.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMf3DBehavior2Adapter()"><b>CATMf3DBehavior2Adapter</b></a>()
<dd>  Constructs an instance.
 <dt> o 
    <a href="#~CATMf3DBehavior2Adapter()"><b>~CATMf3DBehavior2Adapter</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#IsAVolume()"><b>IsAVolume</b></a>()
<dd>  Defines if the geometrical feature is a volume or not.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMf3DBehavior2Adapter"></a><a name="CATMf3DBehavior2Adapter()"></a> <dt> o <b>CATMf3DBehavior2Adapter</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMf3DBehavior2Adapter</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an instance.
</dl>
<a name="~CATMf3DBehavior2Adapter"></a><a name="~CATMf3DBehavior2Adapter()"></a> <dt> o <b>~CATMf3DBehavior2Adapter</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATMf3DBehavior2Adapter</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="IsAVolume"></a><a name="IsAVolume()"></a> <dt> o <b>IsAVolume</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsAVolume</b>(<td>)const   </table></dt>
<dl>
  <dd>
 Defines if the geometrical feature is a volume or not.
 <br>This method is empty (not implemented), and returns <tt>E_FAIL</tt>. In your
 implementation, if your feature is a volume, the method returns <tt>S_OK</tt>, otherwise
 <tt>E_FAIL</tt>.
</dl>
<hr>
 This object is included in the file: <b>CATMf3DBehavior2Adapter.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMechanicalModeler</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
