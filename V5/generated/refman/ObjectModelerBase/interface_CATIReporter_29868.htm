<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerBase Interface CATIReporter</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../ObjectModelerBase.htm">This Framework</a>  <a href="interface_CATIProperty_30446.htm">Previous</a>  <a href="interface_CATIReporterInfo_52354.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>ObjectModelerBase Interface CATIReporter</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIReporter
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIReporter</b>
</p>
<p>
<b><i> Interface offering mechanims to store errors informations.</i></b><br>
<BR>
 Each information is a couple:
 <UL>
  <LI><B>a Name</B>: this name is usually the name of the object which has raised the error.</LI>
  <LI><B>an Error</B>: This error is created from a CATError given in parameters or information to construct this CATError.</LI>
 </UL><BR>
 This information is manipulated by the interface CATIReporterInfo.
 Before stacking information in the reporter (with CreateInfo methods), user must call ResetReporterData to empty the reporter list.<BR>
 At any time, it is possible to get the list of information stacked by calling GetListReporterInfo.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateInfo(CATIReporterInfo*&amp;,CATUnicodeString&amp;,CATError*)"><b>CreateInfo</b></a>(CATIReporterInfo*&amp;,CATUnicodeString&amp;,CATError*)
<dd>  Adds an information from an existing error.
 <dt> o 
    <a href="#CreateInfo(CATIReporterInfo*&amp;,CATUnicodeString&amp;,CATErrorId,char*,char*)"><b>CreateInfo</b></a>(CATIReporterInfo*&amp;,CATUnicodeString&amp;,CATErrorId,char*,char*)
<dd>   Adds an information from an error identifier.
 <dt> o 
    <a href="#GetListReporterInfo()"><b>GetListReporterInfo</b></a>()
<dd>  Gets the list of stored error information.
 <dt> o 
    <a href="#ResetReporterData()"><b>ResetReporterData</b></a>()
<dd>   Resets all error informations.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateInfo"></a><a name="CreateInfo(CATIReporterInfo*&amp;,CATUnicodeString&amp;,CATError*)"></a> <dt> o <b>CreateInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>CreateInfo</b>(<td><a href="../ObjectModelerBase/interface_CATIReporterInfo_52354.htm">CATIReporterInfo*&amp;</a> <td><tt>opiReporterInfo</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iObjStr</tt>,<tr><td></td><td><a href="../System/class_CATError_13240.htm">CATError*</a> <td><tt>iError</tt>) = 0  </table></dt>
<dl>
  <dd>
 Adds an information from an existing error.
 <BR><B>Role</B>: This method creates an information and stores it in an internal list. The error associated to the
 information is given in parameter.
 <P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiReporterInfo</tt>
   <dd> [out]   An interface pointer on the error information. It must be released.<BR>
 </dd>
    <dt><tt> iObjStr</tt>
   <dd> [in]   The string associated with the created error information.
 </dd>
    <dt><tt> iError</tt>
   <dd> [in]   The error to report.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code>, if everything ran well, otherwise <code>E_FAIL</code>.
</dl>
</dl>
<a name="CreateInfo"></a><a name="CreateInfo(CATIReporterInfo*&amp;,CATUnicodeString&amp;,CATErrorId,char*,char*)"></a> <dt> o <b>CreateInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>CreateInfo</b>(<td><a href="../ObjectModelerBase/interface_CATIReporterInfo_52354.htm">CATIReporterInfo*&amp;</a> <td><tt>opiReporterInfo</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iObjStr</tt>,<tr><td></td><td><a href="../System/typedef_CATErrorId_19760.htm">CATErrorId</a> <td><tt>iId</tt>,<tr><td></td><td> const char* <td><tt>iMsgId</tt>,<tr><td></td><td> const char* <td><tt>iMsgCatalog</tt><td><tt>= NULL</tt>) = 0  </table></dt>
<dl>
  <dd>
  Adds an information from an error identifier.
 <BR><B>Role</B>: This method creates an information and stores it in an internal list. The error associated to the
 information, is created by using the 3 last parameters.
 <P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiReporterInfo</tt>
   <dd> [out]   An interface pointer on the error information. It must be released.<BR>
 If an error occurs, this returned value is NULL.  
 </dd>
    <dt><tt> iObjStr</tt>
   <dd> [in]   The string associated with the created error information.
 </dd>
    <dt><tt> iId</tt>
   <dd> [in]   The Identifier of the error.
 </dd>
    <dt><tt> iMsgId</tt>
   <dd> [in]   The index name used to retrieve th error message in the NLS file.
 </dd>
    <dt><tt> iMsgCatalog</tt>
   <dd> [in]   The name of the NLS file containing error messages. This file contains errors identified by messages identifier.<BR>
   If this parameter is not given, the error message is the parameter iMsgId.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code>, if everything ran well, otherwise <code>E_FAIL</code>.
</dl>
</dl>
<a name="GetListReporterInfo"></a><a name="GetListReporterInfo()"></a> <dt> o <b>GetListReporterInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectModelerBase/class_CATLISTP(CATIReporterInfo)_121920.htm">const CATLISTP(CATIReporterInfo)&</a>  <b>GetListReporterInfo</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Gets the list of stored error information.
 <BR><B>Role</B>: The returned list contained all informations stacked from the last call of ResetReporterData.<BR>
 Warning, if you use this method, do not forget to call ResetReporterData before creating your informations.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The list of errors information stacked in this reporter.
</dl>
</dl>
<a name="ResetReporterData"></a><a name="ResetReporterData()"></a> <dt> o <b>ResetReporterData</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ResetReporterData</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
  Resets all error informations.
 <BR><B>Role</B>: This method empties all information stacked from the last call of this method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok, otherwise <code>E_FAIL</code>.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIReporter.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectModelerBase</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
