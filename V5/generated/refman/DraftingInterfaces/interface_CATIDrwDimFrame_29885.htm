<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDrwDimFrame</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingInterfaces.htm" href="../DraftingInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIDrwDimFrame"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DraftingInterfaces Interface CATIDrwDimFrame</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDrwDimFrame_29885','CATIDrwDimFrame','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDrwDimFrame</b>
</p>
<p>
<b><i> Manages the dimension frame.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFramedElement()"><b>GetFramedElement</b></a>()
<dd>  Gets the framed element for main value.
 <dt> o 
    <a href="#GetFramedGroup()"><b>GetFramedGroup</b></a>()
<dd>  Gets the framed Group.
 <dt> o 
    <a href="#GetGap()"><b>GetGap</b></a>()
<dd>  Gets gap.
 <dt> o 
    <a href="#GetType()"><b>GetType</b></a>()
<dd>  Gets frame type.
 <dt> o 
    <a href="#SetFramedElement(int)"><b>SetFramedElement</b></a>(int)
<dd>  Sets the framed element for main value.
 <dt> o 
    <a href="#SetFramedGroup(int)"><b>SetFramedGroup</b></a>(int)
<dd>  Sets the framed group for dual value.
 <dt> o 
    <a href="#SetGap(double)"><b>SetGap</b></a>(double)
<dd>  Sets gap.
 <dt> o 
    <a href="#SetType(int)"><b>SetType</b></a>(int)
<dd>  Sets frame type.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFramedElement"></a><a name="GetFramedElement()"></a> <dt> o <b>GetFramedElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetFramedElement</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the framed element for main value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Framed element for main value (see define definition file).
    <br>Framed element legal values are:
    <dl>
    <dt><tt>CATDrwDimFraValue</tt> <dd>the framing mode is applied to the value only.</dd>
    <dt><tt>CATDrwDimFraValTol</tt> <dd>the framing mode is applied to the value and the tolerance.</dd>
    <dt><tt>CATDrwDimFraValTolText</tt> <dd>the framing mode is applied to the value, the tolerance and the text.</dd>
    </dl>
</dl>
</dl>
<a name="GetFramedGroup"></a><a name="GetFramedGroup()"></a> <dt> o <b>GetFramedGroup</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetFramedGroup</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the framed Group.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Framed group (see define definition file).
    <br>Framed group legal values are:
    <dl>
    <dt><tt>CATDrwDimFraMain</tt> <dd>The framing mode is applied to the main value only.</dd>
    <dt><tt>CATDrwDimFraDual</tt> <dd>The framing mode is applied to the dual value only.</dd>
    <dt><tt>CATDrwDimFraMainAndDual</tt> <dd>The framing mode is applied to the main and dual values (2 frames).</dd>
    <dt><tt>CATDrwDimFraBoth</tt> <dd>The framing mode is applied globally to the main and dual values (1 frames).</dd>
    </dl>
</dl>
</dl>
<a name="GetGap"></a><a name="GetGap()"></a> <dt> o <b>GetGap</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetGap</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets gap.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Gap value.
</dl>
</dl>
<a name="GetType"></a><a name="GetType()"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetType</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets frame type.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Frame type.
    <br>Legal values are (see define definition file):
    <dl>
    <dt><tt>CATDrwDimFraNone</tt> <dd>None.</dd>
    <dt><tt>CATDrwDimFraCircle</tt> <dd>Circle.</dd>
    <dt><tt>CATDrwDimFraScoredCircle</tt> <dd>Scored circle.</dd>
    <dt><tt>CATDrwDimFraDiamondShaped</tt> <dd>Diamond shape.</dd>
    <dt><tt>CATDrwDimFraSquare</tt> <dd>Square.</dd>
    <dt><tt>CATDrwDimFraRectangle</tt> <dd>Rectangle.</dd>
    <dt><tt>CATDrwDimFraOblong</tt> <dd>Oblong.</dd>
    <dt><tt>CATDrwDimFraRightFlag</tt> <dd>Right flag.</dd>
    <dt><tt>CATDrwDimFraTriangle</tt> <dd>Triangle.</dd>
    </dl>
</dl>
</dl>
<a name="SetFramedElement"></a><a name="SetFramedElement(int)"></a> <dt> o <b>SetFramedElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFramedElement</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFramedElement</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the framed element for main value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFramedElement</tt>
   <dd>    Framed element for main value (see define definition file).
    <br>Framed element legal values are:
    <dl>
    <dt><tt>CATDrwDimFraValue</tt> <dd>the framing mode is applied to the value only.</dd>
    <dt><tt>CATDrwDimFraValTol</tt> <dd>the framing mode is applied to the value and the tolerance.</dd>
    <dt><tt>CATDrwDimFraValTolText</tt> <dd>the framing mode is applied to the value, the tolerance and the text.</dd>
    </dl></dd>
</dl>
</dl>
</dl>
<a name="SetFramedGroup"></a><a name="SetFramedGroup(int)"></a> <dt> o <b>SetFramedGroup</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFramedGroup</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFramedGroup</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the framed group for dual value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFramedGroup</tt>
   <dd>    Framed group for dual value (see define definition file).
    <br>Framed group legal values are:
    <dl>
    <dt><tt>CATDrwDimFraMain</tt> <dd>the framing mode is applied to the main value only.</dd>
    <dt><tt>CATDrwDimFraDual</tt> <dd>the framing mode is applied to the dual value only.</dd>
    <dt><tt>CATDrwDimFraMainAndDual</tt> <dd>the framing mode is applied to the main and dual values.</dd>
    <dt><tt>CATDrwDimFraBoth</tt> <dd>the framing mode is applied globally to the main and dual values.</dd>
    </dl></dd>
</dl>
</dl>
</dl>
<a name="SetGap"></a><a name="SetGap(double)"></a> <dt> o <b>SetGap</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetGap</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>gap</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets gap.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> gap</tt>
   <dd>    Gap value.</dd>
</dl>
</dl>
</dl>
<a name="SetType"></a><a name="SetType(int)"></a> <dt> o <b>SetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetType</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets frame type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    Frame type.
    <br>Legal values are (see define definition file):
    <dl>
    <dt><tt>CATDrwDimFraNone</tt> <dd>None.</dd>
    <dt><tt>CATDrwDimFraCircle</tt> <dd>Circle.</dd>
    <dt><tt>CATDrwDimFraScoredCircle</tt> <dd>Scored circle.</dd>
    <dt><tt>CATDrwDimFraDiamondShaped</tt> <dd>Diamond shape.</dd>
    <dt><tt>CATDrwDimFraSquare</tt> <dd>Square.</dd>
    <dt><tt>CATDrwDimFraRectangle</tt> <dd>Rectangle.</dd>
    <dt><tt>CATDrwDimFraOblong</tt> <dd>Oblong.</dd>
    <dt><tt>CATDrwDimFraRightFlag</tt> <dd>Right flag.</dd>
    <dt><tt>CATDrwDimFraTriangle</tt> <dd>Triangle.</dd>
    </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDrwDimFrame.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

