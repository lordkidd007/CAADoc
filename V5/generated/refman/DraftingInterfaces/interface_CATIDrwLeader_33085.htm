<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDrwLeader</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="interface_CATIDrwImportDocument_91350.htm">Previous</a>  <a href="interface_CATIDrwPicture_40006.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>DraftingInterfaces Interface CATIDrwLeader</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIDrwLeader
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDrwLeader</b>
</p>
<p>
<b><i> Interface of leader objects.</i></b><br>

 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../DraftingInterfaces/interface_CATIDrwEltWithLeader_79414.htm">CATIDrwEltWithLeader</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddInterruption(double[2],double[2])"><b>AddInterruption</b></a>(double[2],double[2])
<dd>  Add a interruption to a leader.
 <dt> o 
    <a href="#AddPoint(int&amp;,double&amp;,double&amp;)"><b>AddPoint</b></a>(int&amp;,double&amp;,double&amp;)
<dd>  Add a point to a leader.
 <dt> o 
    <a href="#GetAllAround(CATBoolean*)"><b>GetAllAround</b></a>(CATBoolean*)
<dd>  Get the status of AllAround.
 <dt> o 
    <a href="#GetAnchorPoint()"><b>GetAnchorPoint</b></a>()
<dd>  Get the anchor point of the leader on the annotation.
 <dt> o 
    <a href="#GetAnchorPoint(int&amp;,int&amp;)"><b>GetAnchorPoint</b></a>(int&amp;,int&amp;)
<dd>  Get the anchor point of the leader on the annotation.
 <dt> o 
    <a href="#GetInterruptions(double**,int*)"><b>GetInterruptions</b></a>(double**,int*)
<dd>  Get interruptions of leader path.
 <dt> o 
    <a href="#GetMoveMode(CATBoolean*)"><b>GetMoveMode</b></a>(CATBoolean*)
<dd>  Get the status of MoveMode.
 <dt> o 
    <a href="#GetNbInterruption(int*)"><b>GetNbInterruption</b></a>(int*)
<dd>  Get the number of interruptions of leader path.
 <dt> o 
    <a href="#GetNbPoint()"><b>GetNbPoint</b></a>()
<dd>  Returns the number of points of a leader.
 <dt> o 
    <a href="#GetPoint(int)"><b>GetPoint</b></a>(int)
<dd>  Returns a particular point of a leader.
 <dt> o 
    <a href="#GetPoints()"><b>GetPoints</b></a>()
<dd>  Returns points of a leader.
 <dt> o 
    <a href="#GetSymbolType()"><b>GetSymbolType</b></a>()
<dd>  Gets the ending symbol.
 <dt> o 
    <a href="#ModifyPoint(int,double,double)"><b>ModifyPoint</b></a>(int,double,double)
<dd>  Modifies a particular point of a leader.
 <dt> o 
    <a href="#RemoveInterruption(int)"><b>RemoveInterruption</b></a>(int)
<dd>  Remove a interruption to a leader.
 <dt> o 
    <a href="#RemovePoint(int)"><b>RemovePoint</b></a>(int)
<dd>  Erase a particular point of a leader.
 <dt> o 
    <a href="#SetAllAround(CATBoolean)"><b>SetAllAround</b></a>(CATBoolean)
<dd>  Set the status of AllAround.
 <dt> o 
    <a href="#SetAnchorPoint(int&amp;)"><b>SetAnchorPoint</b></a>(int&amp;)
<dd>  Set the anchor point of the leader on the annotation.
 <dt> o 
    <a href="#SetAssociativeOrientation(CATBaseUnknown*,CATAssProjectingMode)"><b>SetAssociativeOrientation</b></a>(CATBaseUnknown*,CATAssProjectingMode)
<dd>  Puts orientation link between the leader extremity and a reference.
 <dt> o 
    <a href="#SetAssociativePosition(CATBaseUnknown*,CATAssPositioningBehavior,CATAssProjectingMode)"><b>SetAssociativePosition</b></a>(CATBaseUnknown*,CATAssPositioningBehavior,CATAssProjectingMode)
<dd>  Puts a positional link between the leader extremity and a reference.
 <dt> o 
    <a href="#SetMoveMode(CATBoolean)"><b>SetMoveMode</b></a>(CATBoolean)
<dd>  Set the status of MoveMode.
 <dt> o 
    <a href="#SetSymbolType(int&amp;)"><b>SetSymbolType</b></a>(int&amp;)
<dd>  Sets the ending symbol.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddInterruption"></a><a name="AddInterruption(double[2],double[2])"></a> <dt> o <b>AddInterruption</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddInterruption</b>(<td> const double[2] <td><tt>iFirstPoint</tt>,<tr><td></td><td> const double[2] <td><tt>iSecondPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
 Add a interruption to a leader.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>iFirstPoint</tt>   : First point coordinates. 
 <dt><tt>iSecondPoint </tt> : Second point coordinates.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="AddPoint"></a><a name="AddPoint(int&amp;,double&amp;,double&amp;)"></a> <dt> o <b>AddPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>AddPoint</b>(<td>int&amp; <td><tt>iPointBefore</tt>,<tr><td></td><td>double&amp; <td><tt>iXpos</tt>,<tr><td></td><td>double&amp; <td><tt>iYpos</tt>) = 0  </table></dt>
<dl>
  <dd>
 Add a point to a leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPointBefore</tt>
   <dd>   The rank of the preceding point : 0 to GetNbPoint(). 
   <br>0 means anchor point.
   <br>GetNbPoint() means append at the end of leader</dd>
</dl>
</dl>
</dl>
<a name="GetAllAround"></a><a name="GetAllAround(CATBoolean*)"></a> <dt> o <b>GetAllAround</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAllAround</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean*</a> <td><tt>oAllAround</tt>) = 0  </table></dt>
<dl>
  <dd>
 Get the status of AllAround.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>oAllAround</tt> : TRUE mean to display AllAround.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="GetAnchorPoint"></a><a name="GetAnchorPoint()"></a> <dt> o <b>GetAnchorPoint</b>

<dt>  <table><tr><td>  public virtual int  <b>GetAnchorPoint</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Get the anchor point of the leader on the annotation.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../DraftingInterfaces/interface_CATIDrwEltWithLeader_79414.htm#GetLeaderAnchorPoints">CATIDrwEltWithLeader.GetLeaderAnchorPoints</a>
</dl>
</dl>
<a name="GetAnchorPoint"></a><a name="GetAnchorPoint(int&amp;,int&amp;)"></a> <dt> o <b>GetAnchorPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>GetAnchorPoint</b>(<td>int&amp; <td><tt>oNum</tt>,<tr><td></td><td>int&amp; <td><tt>oFixed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Get the anchor point of the leader on the annotation.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../DraftingInterfaces/interface_CATIDrwEltWithLeader_79414.htm#GetLeaderAnchorPoints">CATIDrwEltWithLeader.GetLeaderAnchorPoints</a>
</dl>
</dl>
<a name="GetInterruptions"></a><a name="GetInterruptions(double**,int*)"></a> <dt> o <b>GetInterruptions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetInterruptions</b>(<td>double** <td><tt>oInterruptions</tt>,<tr><td></td><td>int* <td><tt>oNbInterruptions</tt>) = 0  </table></dt>
<dl>
  <dd>
 Get interruptions of leader path.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>oInterruptions</tt> : List of interruptions coordinates (X1,Y1,X2,Y2,.....Xn,Yn).
 <dt><tt>oNbInterruptions</tt> : Number of interruptions.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="GetMoveMode"></a><a name="GetMoveMode(CATBoolean*)"></a> <dt> o <b>GetMoveMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetMoveMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean*</a> <td><tt>oMoveMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Get the status of MoveMode.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>oMoveMode</tt> : TRUE mean to move with annotation.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="GetNbInterruption"></a><a name="GetNbInterruption(int*)"></a> <dt> o <b>GetNbInterruption</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNbInterruption</b>(<td>int* <td><tt>oNbInterruption</tt>) = 0  </table></dt>
<dl>
  <dd>
 Get the number of interruptions of leader path.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>oNbInterruption </tt> : Number of interruptions of leader path.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="GetNbPoint"></a><a name="GetNbPoint()"></a> <dt> o <b>GetNbPoint</b>

<dt>  <table><tr><td>  public virtual int  <b>GetNbPoint</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns the number of points of a leader.
 <br>The anchor point is not taken into account.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of points.
</dl>
</dl>
<a name="GetPoint"></a><a name="GetPoint(int)"></a> <dt> o <b>GetPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../Mathematics/class_CATMathPoint2D_36618.htm">CATMathPoint2D</a>  <b>GetPoint</b>(<td>int <td><tt>iNoPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
 Returns a particular point of a leader.
 <br>To get the anchor point set NoPoint to 0.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoPoint</tt>
   <dd>   Tha anchor point index.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The anchor point at index iNoPoint.
</dl>
</dl>
<a name="GetPoints"></a><a name="GetPoints()"></a> <dt> o <b>GetPoints</b>

<dt>  <table><tr><td>  public virtual CATListPtrCATMathPoint2D  <b>GetPoints</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns points of a leader.
 <br>The anchor point is not in the list.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The mathematical anchor point list.
</dl>
</dl>
<a name="GetSymbolType"></a><a name="GetSymbolType()"></a> <dt> o <b>GetSymbolType</b>

<dt>  <table><tr><td>  public virtual int  <b>GetSymbolType</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the ending symbol.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The symbol type.
</dl>
</dl>
<a name="ModifyPoint"></a><a name="ModifyPoint(int,double,double)"></a> <dt> o <b>ModifyPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>ModifyPoint</b>(<td>int <td><tt>iNoPoint</tt>,<tr><td></td><td>double <td><tt>iNewX</tt>,<tr><td></td><td>double <td><tt>iNewY</tt>) = 0  </table></dt>
<dl>
  <dd>
 Modifies a particular point of a leader.
 <br>NoPoint is from 1 to GetNbPoint().
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoPoint</tt>
   <dd>   The leader point to be modified
 </dd>
    <dt><tt> iNewX</tt>
   <dd>   The new X coordinate of this point
 </dd>
    <dt><tt> iNewY</tt>
   <dd>   The new Y coordinate of this point</dd>
</dl>
</dl>
</dl>
<a name="RemoveInterruption"></a><a name="RemoveInterruption(int)"></a> <dt> o <b>RemoveInterruption</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveInterruption</b>(<td> const int <td><tt>iNum</tt><td><tt>= 0</tt>) = 0  </table></dt>
<dl>
  <dd>
 Remove a interruption to a leader.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>iNum </tt> : Interruption number to delete.
 <dt> <dd> - If iNum equals to 0, all interruptions will be removed. 
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="RemovePoint"></a><a name="RemovePoint(int)"></a> <dt> o <b>RemovePoint</b>

<dt>  <table><tr><td>  public virtual void  <b>RemovePoint</b>(<td>int <td><tt>iNoPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
 Erase a particular point of a leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoPoint</tt>
   <dd> <br>NoPoint is from 1 to GetNbPoint().
 <br>-1 means erase all points.</dd>
</dl>
</dl>
</dl>
<a name="SetAllAround"></a><a name="SetAllAround(CATBoolean)"></a> <dt> o <b>SetAllAround</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetAllAround</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iAllAround</tt><td><tt>= FALSE</tt>) = 0  </table></dt>
<dl>
  <dd>
 Set the status of AllAround.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>iAllAround</tt> : TRUE mean to display AllAround.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="SetAnchorPoint"></a><a name="SetAnchorPoint(int&amp;)"></a> <dt> o <b>SetAnchorPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>SetAnchorPoint</b>(<td>int&amp; <td><tt>iAnchorPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
 Set the anchor point of the leader on the annotation.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../DraftingInterfaces/interface_CATIDrwEltWithLeader_79414.htm#GetLeaderAnchorPoints">CATIDrwEltWithLeader.GetLeaderAnchorPoints</a>
</dl>
</dl>
<a name="SetAssociativeOrientation"></a><a name="SetAssociativeOrientation(CATBaseUnknown*,CATAssProjectingMode)"></a> <dt> o <b>SetAssociativeOrientation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetAssociativeOrientation</b>(<td><a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>ipRef</tt>,<tr><td></td><td><a href="../DraftingInterfaces/enum_CATAssProjectingMode_81514.htm">CATAssProjectingMode</a> <td><tt>iProjMode</tt><td><tt>=Ass_Contour</tt>) = 0  </table></dt>
<dl>
  <dd>
 Puts orientation link between the leader extremity and a reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRef</tt>
   <dd>    The reference. All elements which implements the CATIDrwMarkupable interface can
    be used (annotations, geometry, ...).
 </dd>
    <dt><tt> iProjMode</tt>
   <dd>    The projection mode (On curve, follow hot points, Extensionlines of dimensions...).
    <br>Default : projected on the curve.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd>  Orientation link has been created
 <dt> <tt>E_FAIL</tt>   <dd> No orientation link created
 </dl>
</dl>
</dl>
<a name="SetAssociativePosition"></a><a name="SetAssociativePosition(CATBaseUnknown*,CATAssPositioningBehavior,CATAssProjectingMode)"></a> <dt> o <b>SetAssociativePosition</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetAssociativePosition</b>(<td><a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>ipRef</tt>,<tr><td></td><td><a href="../DraftingInterfaces/enum_CATAssPositioningBehavior_130172.htm">CATAssPositioningBehavior</a> <td><tt>iPosBehavior</tt><td><tt>=Ass_Relative</tt>,<tr><td></td><td><a href="../DraftingInterfaces/enum_CATAssProjectingMode_81514.htm">CATAssProjectingMode</a> <td><tt>iProjMode</tt><td><tt>=Ass_Contour</tt>) = 0  </table></dt>
<dl>
  <dd>
 Puts a positional link between the leader extremity and a reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRef</tt>
   <dd>    The reference. All elements which implements the CATIDrwMarkupable interface can
    be used (annotations, geometry, ...).
 </dd>
    <dt><tt> iPosBehavior</tt>
   <dd>    Relative or absolute.
 </dd>
    <dt><tt> iProjMode</tt>
   <dd>    The projection mode (On curve, follow hot points, Extensionlines of dimensions...).
    <br>Default : projected on the curve.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Positional link has been created
 <dt> <tt>E_FAIL</tt>   <dd> No positional link created
 </dl>
</dl>
</dl>
<a name="SetMoveMode"></a><a name="SetMoveMode(CATBoolean)"></a> <dt> o <b>SetMoveMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetMoveMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iMoveMode</tt><td><tt>= FALSE</tt>) = 0  </table></dt>
<dl>
  <dd>
 Set the status of MoveMode.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>iMoveMode</tt> : TRUE mean to move with annotation.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="SetSymbolType"></a><a name="SetSymbolType(int&amp;)"></a> <dt> o <b>SetSymbolType</b>

<dt>  <table><tr><td>  public virtual void  <b>SetSymbolType</b>(<td>int&amp; <td><tt>SymbolType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the ending symbol.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymbolType</tt>
   <dd>   The symbol type.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDrwLeader.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
