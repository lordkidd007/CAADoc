<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIView</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="interface_CATISheet_15824.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>DraftingInterfaces Interface CATIView</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIView
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIView</b>
</p>
<p>
<b><i> Interface of the drawing view object.</i></b><br>

 <b>Role</b>: The view is a workspace containing geometries and annotations.
 The view may also contain the generative drafting results.
 The view positionning in a sheet is managed using the view make-up object.
 The generative drafting specifications are available using the CATIGenerSpec
 interface.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../DraftingInterfaces/interface_CATIDftViewMakeUp_56443.htm">CATIDftViewMakeUp</a>
  <dt> <b>See also:</b> 
  <dd> <a href="../DraftingInterfaces/interface_CATIGenerSpec_33087.htm">CATIGenerSpec</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddViewName(int)"><b>AddViewName</b></a>(int)
<dd>  Sets a smart name to the view based on the NLS resources.
 <dt> o 
    <a href="#GetDoc()"><b>GetDoc</b></a>()
<dd>  Gets the external document pointed by the view.
 <dt> o 
    <a href="#GetDressUp()"><b>GetDressUp</b></a>()
<dd>  Gets the view dressup manager.
 <dt> o 
    <a href="#GetGenerSpec()"><b>GetGenerSpec</b></a>()
<dd>  Gets the generative specifications of the view.
 <dt> o 
    <a href="#GetListOfDrwCallout()"><b>GetListOfDrwCallout</b></a>()
<dd>  Returns the callouts represented in the view.
 <dt> o 
    <a href="#GetOleSiteList()"><b>GetOleSiteList</b></a>()
<dd>  Gets the list of OLE sites of the views.
 <dt> o 
    <a href="#GetSheet()"><b>GetSheet</b></a>()
<dd>  Gets the sheet containing the view representation.
 <dt> o 
    <a href="#GetSketch()"><b>GetSketch</b></a>()
<dd>  Gets the sketch interface of the view.
 <dt> o 
    <a href="#GetViewType()"><b>GetViewType</b></a>()
<dd>  Gets the view type.
 <dt> o 
    <a href="#IsCurrent()"><b>IsCurrent</b></a>()
<dd>  Used to know if the view is current.
 <dt> o 
    <a href="#SetDoc(CATILinkableObject_var)"><b>SetDoc</b></a>(CATILinkableObject_var)
<dd>  Sets the external document pointed by the view.
 <dt> o 
    <a href="#SetViewType(CATDrwViewType&amp;)"><b>SetViewType</b></a>(CATDrwViewType&amp;)
<dd>  Sets the view type.
 <dt> o 
    <a href="#Update(CATIDomain_var)"><b>Update</b></a>(CATIDomain_var)
<dd>  Updates the view.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddViewName"></a><a name="AddViewName(int)"></a> <dt> o <b>AddViewName</b>

<dt>  <table><tr><td>  public virtual void  <b>AddViewName</b>(<td> const int <td><tt>iTxtCreate</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets a smart name to the view based on the NLS resources.
 This name is computed using the identificator, the prefix and suffix.
 
<dl>
</dl>
</dl>
<a name="GetDoc"></a><a name="GetDoc()"></a> <dt> o <b>GetDoc</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectModelerBase/interface_CATILinkableObject_64432.htm">CATILinkableObject_var</a>  <b>GetDoc</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the external document pointed by the view.
 This method returns NULL_var if the view is not a generative one.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The pointed document.
</dl>
</dl>
<a name="GetDressUp"></a><a name="GetDressUp()"></a> <dt> o <b>GetDressUp</b>

<dt>  <table><tr><td>  public virtual <a href="../DraftingInterfaces/interface_CATIDrwDressUp_39192.htm">CATIDrwDressUp_var</a>  <b>GetDressUp</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the view dressup manager.
 The dressup manages annotations, area-fills, ....
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The dress up manager interface.
</dl>
</dl>
<a name="GetGenerSpec"></a><a name="GetGenerSpec()"></a> <dt> o <b>GetGenerSpec</b>

<dt>  <table><tr><td>  public virtual <a href="../DraftingInterfaces/interface_CATIGenerSpec_33087.htm">CATIGenerSpec_var</a>  <b>GetGenerSpec</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the generative specifications of the view.
 If the view is a detail, this method returns NULL_var.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The generative specification interface.
</dl>
</dl>
<a name="GetListOfDrwCallout"></a><a name="GetListOfDrwCallout()"></a> <dt> o <b>GetListOfDrwCallout</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)</a>  <b>GetListOfDrwCallout</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns the callouts represented in the view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
</dl>
<a name="GetOleSiteList"></a><a name="GetOleSiteList()"></a> <dt> o <b>GetOleSiteList</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)</a>  <b>GetOleSiteList</b>(<td>)= 0   </table></dt>
<dl>
  <dd>
 Gets the list of OLE sites of the views.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the list of OleSite features
</dl>
</dl>
<a name="GetSheet"></a><a name="GetSheet()"></a> <dt> o <b>GetSheet</b>

<dt>  <table><tr><td>  public virtual <a href="../DraftingInterfaces/interface_CATISheet_15824.htm">CATISheet_var</a>  <b>GetSheet</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the sheet containing the view representation.
 The returned sheet is the sheet containing the view make-up
 of the view.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The sheet containing the view.
</dl>
</dl>
<a name="GetSketch"></a><a name="GetSketch()"></a> <dt> o <b>GetSketch</b>

<dt>  <table><tr><td>  public virtual <a href="../SketcherInterfaces/interface_CATISketch_19718.htm">CATISketch_var</a>  <b>GetSketch</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the sketch interface of the view.
 This method is usefull to create geometries in a view.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The view sketch interface.
</dl>
</dl>
<a name="GetViewType"></a><a name="GetViewType()"></a> <dt> o <b>GetViewType</b>

<dt>  <table><tr><td>  public virtual <a href="../DraftingInterfaces/enum_CATDrwViewType_40428.htm">CATDrwViewType</a>  <b>GetViewType</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Gets the view type.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The view type.
 
  <dt> <b>See also:</b> 
  <dd> <a href="../DraftingInterfaces/enum_CATDrwViewType_40428.htm">CATDrwViewType</a>
</dl>
</dl>
<a name="IsCurrent"></a><a name="IsCurrent()"></a> <dt> o <b>IsCurrent</b>

<dt>  <table><tr><td>  public virtual int  <b>IsCurrent</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Used to know if the view is current.
 The current view of the current sheet is the active one.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The status
   <br><b>Legal values</b>: 
   <dl> 
     <dt>0</dt>    The view is not the current one
     <dt>1</dt>    The view is the current one 
   </dl>
</dl>
</dl>
<a name="SetDoc"></a><a name="SetDoc(CATILinkableObject_var)"></a> <dt> o <b>SetDoc</b>

<dt>  <table><tr><td>  public virtual void  <b>SetDoc</b>(<td><a href="../ObjectModelerBase/interface_CATILinkableObject_64432.htm">CATILinkableObject_var</a> <td><tt>iDoc</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the external document pointed by the view.
 The view becomes a generative one.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDoc</tt>
   <dd>   The external document.</dd>
</dl>
</dl>
</dl>
<a name="SetViewType"></a><a name="SetViewType(CATDrwViewType&amp;)"></a> <dt> o <b>SetViewType</b>

<dt>  <table><tr><td>  public virtual void  <b>SetViewType</b>(<td> const <a href="../DraftingInterfaces/enum_CATDrwViewType_40428.htm">CATDrwViewType&amp;</a> <td><tt>iType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the view type.
 It is not enough to type the view as a section so that a cut is applied.
 Use the section operators instead.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../DraftingInterfaces/interface_CATIGenerSpec_33087.htm">CATIGenerSpec</a>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   The new view type.</dd>
</dl>
</dl>
</dl>
<a name="Update"></a><a name="Update(CATIDomain_var)"></a> <dt> o <b>Update</b>

<dt>  <table><tr><td>  public virtual int  <b>Update</b>(<td><a href="../ObjectModelerBase/interface_CATIDomain_19552.htm">CATIDomain_var</a> <td><tt>iDomain</tt>) =0  </table></dt>
<dl>
  <dd>
 Updates the view.
 All view components will be updated (Annotations, Generative result, ...)
 
<dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIView.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
