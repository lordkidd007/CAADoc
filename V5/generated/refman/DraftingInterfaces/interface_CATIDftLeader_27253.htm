<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDftLeader</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingInterfaces.htm" href="../DraftingInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIDftLeader"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DraftingInterfaces Interface CATIDftLeader</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftLeader_27253','CATIDftLeader','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftLeader</b>
</p>
<p>
<b><i> This interface give access to leader points and associativity.</i></b><br>

 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIDftElementWithLeader','','CATIDftElementWithLeader') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddInterruption(double[2],double[2])"><b>AddInterruption</b></a>(double[2],double[2])
<dd>  Add a interruption to a leader.
 <dt> o 
    <a href="#AddPoint(int,double [2])"><b>AddPoint</b></a>(int,double [2])
<dd>  Adds a point on the leader.
 <dt> o 
    <a href="#GetAllAround(CATBoolean*)"><b>GetAllAround</b></a>(CATBoolean*)
<dd>  Get the status of AllAround.
 <dt> o 
    <a href="#GetAnchorElement(CATIDftElementWithLeader**,int*)"><b>GetAnchorElement</b></a>(CATIDftElementWithLeader**,int*)
<dd>  Returns the father element and the anchor point of the leader.
 <dt> o 
    <a href="#GetAnchorPoint(int*)"><b>GetAnchorPoint</b></a>(int*)
<dd>  Returns the anchor point of the leader.
 <dt> o 
    <a href="#GetAnchorSymbol(AnchorSymbol&amp;)"><b>GetAnchorSymbol</b></a>(AnchorSymbol&amp;)
<dd>   Read the anchor symbol style.
 <dt> o 
    <a href="#GetInterruptions(double**,int*)"><b>GetInterruptions</b></a>(double**,int*)
<dd>  Get interruptions of leader path.
 <dt> o 
    <a href="#GetMoveMode(CATBoolean*)"><b>GetMoveMode</b></a>(CATBoolean*)
<dd>  Get the status of MoveMode.
 <dt> o 
    <a href="#GetNbInterruption(int*)"><b>GetNbInterruption</b></a>(int*)
<dd>  Get the number of interruptions of leader path.
 <dt> o 
    <a href="#GetNbPoint(int*)"><b>GetNbPoint</b></a>(int*)
<dd>  Returns the number of points on the leader.
 <dt> o 
    <a href="#GetPoint(int,double [2])"><b>GetPoint</b></a>(int,double [2])
<dd>  Returns a point of the leader.
 <dt> o 
    <a href="#GetPoints(double**)"><b>GetPoints</b></a>(double**)
<dd>  Returns the list of points on the leader including the anchor point.
 <dt> o 
    <a href="#GetSubSet(wchar_t*,IID,IUnknown**)"><b>GetSubSet</b></a>(wchar_t*,IID,IUnknown**)
<dd>  Returns an interface to modify a subpart of the leader.
 <dt> o 
    <a href="#GetSymbolType(SymbolType*)"><b>GetSymbolType</b></a>(SymbolType*)
<dd>  Returns the ending symbol of the leader.
 <dt> o 
    <a href="#GetTarget(IUnknown**,int*)"><b>GetTarget</b></a>(IUnknown**,int*)
<dd>  Returns the element targeted by the leader.
 <dt> o 
    <a href="#ModifyPoint(int,double [2])"><b>ModifyPoint</b></a>(int,double [2])
<dd>  Modifies a point on the leader.
 <dt> o 
    <a href="#RemoveInterruption(int)"><b>RemoveInterruption</b></a>(int)
<dd>  Remove a interruption to a leader.
 <dt> o 
    <a href="#RemovePoint(int)"><b>RemovePoint</b></a>(int)
<dd>  Removes a point on the leader.
 <dt> o 
    <a href="#SetAllAround(CATBoolean)"><b>SetAllAround</b></a>(CATBoolean)
<dd>  Set the status of AllAround.
 <dt> o 
    <a href="#SetAnchorPoint(int)"><b>SetAnchorPoint</b></a>(int)
<dd>  Sets the anchor point of the leader.
 <dt> o 
    <a href="#SetAnchorSymbol(AnchorSymbol)"><b>SetAnchorSymbol</b></a>(AnchorSymbol)
<dd>   Set the anchor symbol style.
 <dt> o 
    <a href="#SetMoveMode(CATBoolean)"><b>SetMoveMode</b></a>(CATBoolean)
<dd>  Set the status of MoveMode.
 <dt> o 
    <a href="#SetSymbolType(SymbolType)"><b>SetSymbolType</b></a>(SymbolType)
<dd>  Sets the ending symbol of the leader.
 <dt> o 
    <a href="#SetTarget(IUnknown*,double[2],int)"><b>SetTarget</b></a>(IUnknown*,double[2],int)
<dd>  Sets the leader target.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#AnchorSymbol"><b>AnchorSymbol</b></a>
<dd>  Anchor symbol style.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddInterruption"></a><a name="AddInterruption(double[2],double[2])"></a> <dt> o <b>AddInterruption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddInterruption</b>(<td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iFirstPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iSecondPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add a interruption to a leader.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>iFirstPoint</tt>   : First point coordinates. 
 <dt><tt>iSecondPoint </tt> : Second point coordinates.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="AddPoint"></a><a name="AddPoint(int,double [2])"></a> <dt> o <b>AddPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddPoint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPointBefore</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double [2','double [2]')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a point on the leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPointBefore</tt>
   <dd>   The point will be inserted at the iPointBefore+1 position.
 <BR>Note : the end point of the leader is ranked 0 and the anchor point is equal to GetNbPoint().
 </dd>
    <dt><tt> iPoint</tt>
   <dd>   The point to add.</dd>
</dl>
</dl>
</dl>
<a name="GetAllAround"></a><a name="GetAllAround(CATBoolean*)"></a> <dt> o <b>GetAllAround</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllAround</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oAllAround</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the status of AllAround.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>oAllAround</tt> : TRUE mean to display AllAround.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="GetAnchorElement"></a><a name="GetAnchorElement(CATIDftElementWithLeader**,int*)"></a> <dt> o <b>GetAnchorElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAnchorElement</b>(<td><script type="text/javascript"> activateLink('CATIDftElementWithLeader','CATIDftElementWithLeader**')</script> <td><tt>oElmtWithLeader</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oAnchorPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the father element and the anchor point of the leader.
 <BR>This number is the rank of the point to use in the list returned by
 <tt>CATIDftElementWithLeader::GetLeaderAnchorPoints()</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElmtWithLeader</tt>
   <dd> </dd>
    <dt><tt> oAnchorPoint</tt>
   <dd> </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIDftElementWithLeader','','CATIDftElementWithLeader') </script>
</dl>
</dl>
<a name="GetAnchorPoint"></a><a name="GetAnchorPoint(int*)"></a> <dt> o <b>GetAnchorPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAnchorPoint</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oAnchorPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the anchor point of the leader.
 <BR>This number is the rank of the point to use in the list returned by
 <tt>CATIDftElementWithLeader::GetLeaderAnchorPoints()</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAnchorPoint</tt>
   <dd> </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIDftElementWithLeader','','CATIDftElementWithLeader') </script>
</dl>
</dl>
<a name="GetAnchorSymbol"></a><a name="GetAnchorSymbol(AnchorSymbol&amp;)"></a> <dt> o <b>GetAnchorSymbol</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAnchorSymbol</b>(<td><script type="text/javascript"> activateLink('AnchorSymbol','AnchorSymbol&amp;')</script> <td><tt>oAncSymbol</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Read the anchor symbol style.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAncSymbol</tt>
   <dd> [out]   The style of the anchor symbol. @see #AnchorSymbol

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt><dd> The anchor symbol style has been successfully read
 <dt><tt>E_UNEXPECTED</tt><dd> An unexpected error occured
 </dl>
</dl>
</dl>
<a name="GetInterruptions"></a><a name="GetInterruptions(double**,int*)"></a> <dt> o <b>GetInterruptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInterruptions</b>(<td><script type="text/javascript"> activateLink('double','double**')</script> <td><tt>oInterruptions</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oNbInterruptions</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get interruptions of leader path.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>oInterruptions</tt> : List of interruptions coordinates (X1,Y1,X2,Y2,.....Xn,Yn).
 <dt><tt>oNbInterruptions</tt> : Number of interruptions.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="GetMoveMode"></a><a name="GetMoveMode(CATBoolean*)"></a> <dt> o <b>GetMoveMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMoveMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oMoveMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the status of MoveMode.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>oMoveMode</tt> : TRUE mean to move with annotation.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="GetNbInterruption"></a><a name="GetNbInterruption(int*)"></a> <dt> o <b>GetNbInterruption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbInterruption</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oNbInterruption</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of interruptions of leader path.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>oNbInterruption </tt> : Number of interruptions of leader path.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="GetNbPoint"></a><a name="GetNbPoint(int*)"></a> <dt> o <b>GetNbPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbPoint</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oNbPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of points on the leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbPoint</tt>
   <dd>   Note : the anchor point is not counted.</dd>
</dl>
</dl>
</dl>
<a name="GetPoint"></a><a name="GetPoint(int,double [2])"></a> <dt> o <b>GetPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPoint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNoPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double [2','double [2]')</script> <td><tt>oPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a point of the leader.
 Set iNoPoint to 0 to get the anchor point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoPoint</tt>
   <dd>   The rank of the point.
 </dd>
    <dt><tt> oPoint</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="GetPoints"></a><a name="GetPoints(double**)"></a> <dt> o <b>GetPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPoints</b>(<td><script type="text/javascript"> activateLink('double','double**')</script> <td><tt>oPoints</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of points on the leader including the anchor point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPoints</tt>
   <dd>   The point list. X1,Y1,X2,Y2,.....Xn,Yn</dd>
</dl>
</dl>
</dl>
<a name="GetSubSet"></a><a name="GetSubSet(wchar_t*,IID,IUnknown**)"></a> <dt> o <b>GetSubSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSubSet</b>(<td> const <script type="text/javascript"> activateLink('wchar_t','wchar_t*')</script> <td><tt>iSubSet</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID')</script> <td><tt>iItfName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>oProperties</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns an interface to modify a subpart of the leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSubSet</tt>
   <dd>   can be "Symbols","Lines"
 </dd>
    <dt><tt> iItfName</tt>
   <dd>   An ID on the interface to find.
 </dd>
    <dt><tt> oProperties</tt>
   <dd>   A pointer to the interface.</dd>
</dl>
</dl>
</dl>
<a name="GetSymbolType"></a><a name="GetSymbolType(SymbolType*)"></a> <dt> o <b>GetSymbolType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSymbolType</b>(<td><script type="text/javascript"> activateLink('SymbolType','SymbolType*')</script> <td><tt>oSymbolType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the ending symbol of the leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSymbolType</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="GetTarget"></a><a name="GetTarget(IUnknown**,int*)"></a> <dt> o <b>GetTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTarget</b>(<td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>oTarget</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oInf</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' const= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the element targeted by the leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTarget</tt>
   <dd>   The targeted element.
 </dd>
    <dt><tt> oInf</tt>
   <dd>   Not used yet</dd>
</dl>
</dl>
</dl>
<a name="ModifyPoint"></a><a name="ModifyPoint(int,double [2])"></a> <dt> o <b>ModifyPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ModifyPoint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNoPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double [2','double [2]')</script> <td><tt>iNewPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies a point on the leader.
 The anchor point (iNoPoint = 0) can't be modified
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoPoint</tt>
   <dd>   The point to modify.
 </dd>
    <dt><tt> iNewPoint</tt>
   <dd>   The new point.</dd>
</dl>
</dl>
</dl>
<a name="RemoveInterruption"></a><a name="RemoveInterruption(int)"></a> <dt> o <b>RemoveInterruption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveInterruption</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNum</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Remove a interruption to a leader.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>iNum </tt> : Interruption number to delete.
 <dt> <dd> - If iNum equals to 0, all interruptions will be removed. 
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="RemovePoint"></a><a name="RemovePoint(int)"></a> <dt> o <b>RemovePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemovePoint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNoPoint</tt><td><tt>= -1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a point on the leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoPoint</tt>
   <dd>   The point to delete. If <tt>iNoPoint</tt> is set to -1, all points will be deleted.</dd>
</dl>
</dl>
</dl>
<a name="SetAllAround"></a><a name="SetAllAround(CATBoolean)"></a> <dt> o <b>SetAllAround</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAllAround</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAllAround</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the status of AllAround.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>iAllAround</tt> : TRUE mean to display AllAround.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="SetAnchorPoint"></a><a name="SetAnchorPoint(int)"></a> <dt> o <b>SetAnchorPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAnchorPoint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAnchorPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the anchor point of the leader.
 <BR>This number is the rank of the point to use in the list returned by
 <tt>CATIDftElementWithLeader::GetLeaderAnchorPoints()</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAnchorPoint</tt>
   <dd> </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIDftElementWithLeader','','CATIDftElementWithLeader') </script>
</dl>
</dl>
<a name="SetAnchorSymbol"></a><a name="SetAnchorSymbol(AnchorSymbol)"></a> <dt> o <b>SetAnchorSymbol</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAnchorSymbol</b>(<td><script type="text/javascript"> activateLink('AnchorSymbol','AnchorSymbol')</script> <td><tt>iAncSymbol</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Set the anchor symbol style.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAncSymbol</tt>
   <dd> [in]   The style of the anchor symbol. @see #AnchorSymbol

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  </dl>
 <dt><tt>S_OK</tt><dd> The anchor symbol style has been successfully set
 <dt><tt>E_INVALIDARG</tt><dd> This style is not supported
 <dt><tt>E_UNEXPECTED</tt><dd> An unexpected error occured
 </dl>
</dl>
</dl>
<a name="SetMoveMode"></a><a name="SetMoveMode(CATBoolean)"></a> <dt> o <b>SetMoveMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMoveMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iMoveMode</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the status of MoveMode.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <dl></tt>
   <dd>
 <dt><tt>iMoveMode</tt> : TRUE mean to move with annotation.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK   </tt> <dd> if the operation succeeded.
 <dt><tt>E_FAIL </tt> <dd> if the operation failed.
 </dl>
</dl>
</dl>
<a name="SetSymbolType"></a><a name="SetSymbolType(SymbolType)"></a> <dt> o <b>SetSymbolType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSymbolType</b>(<td> const <script type="text/javascript"> activateLink('SymbolType','SymbolType')</script> <td><tt>iSymbolType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the ending symbol of the leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymbolType</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="SetTarget"></a><a name="SetTarget(IUnknown*,double[2],int)"></a> <dt> o <b>SetTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTarget</b>(<td><script type="text/javascript"> activateLink('IUnknown','IUnknown*')</script> <td><tt>iTarget</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iPos</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iInf</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the leader target.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTarget</tt>
   <dd>   The targeted element.
 </dd>
    <dt><tt> iPos</tt>
   <dd>   The indication point.
 </dd>
    <dt><tt> iInf</tt>
   <dd>   Not used yet</dd>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="AnchorSymbol"> <dt> o <b>AnchorSymbol</b>
<dl>
  <dd>
<pre>
enum <b>AnchorSymbol</b> {
  NoSymb,
  AllAround,
  AllOver,
  AllAboutWithHorLine,
  AllAboutWithVerLine,
  AllAroundPartial,
  AllOverPartial,
  AllAboutWithHorLinePartial,
  AllAboutWithVerLinePartial,
  Flag,
  FlagAndAllAround
}
</pre>
 Anchor symbol style.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> NoSymb</tt>
   <dd>   No anchor symbol
 </dd>
    <dt><tt> AllAround</tt>
   <dd>   All-Around style (circle)
 </dd>
    <dt><tt> AllOver</tt>
   <dd>   All-Over   (2 concentric circles)
 </dd>
    <dt><tt> AllAboutWithHorLine</tt>
   <dd>   All-About  (square with an horizontal line)
 </dd>
    <dt><tt> AllAboutWithVerLine</tt>
   <dd>   All-About  (square with a vertical line)
 </dd>
    <dt><tt> AllAroundPartial</tt>
   <dd>   All-Around (half circle)
 </dd>
    <dt><tt> AllOverPartial</tt>
   <dd>   All-Over   (2 half concentric circles)
 </dd>
    <dt><tt> AllAboutWithHorLinePartial</tt>
   <dd>   All-About  (half square with an horizontal line)
 </dd>
    <dt><tt> AllAboutWithVerLinePartial</tt>
   <dd>   All-About  (half square with a vertical line)
 </dd>
    <dt><tt> Flag</tt>
   <dd>   All-About  (Flag)
 </dd>
    <dt><tt> FlagAndAllAround</tt>
   <dd>   All-About  (Flag And AllAround)</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftLeader.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

