<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDftDrawingFormats</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingInterfaces.htm" href="../DraftingInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIDftDrawingFormats"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DraftingInterfaces Interface CATIDftDrawingFormats</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftDrawingFormats_41398','CATIDftDrawingFormats','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftDrawingFormats</b>
</p>
<p>
<b><i> <B>Role:</B> CATIDftDrawingFormats is an interface dedicated to manage formats in the drawing.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddCustomFormat(CATUnicodeString&amp;,CATIDftCustomFormat*&amp;,IUnknown*)"><b>AddCustomFormat</b></a>(CATUnicodeString&amp;,CATIDftCustomFormat*&amp;,IUnknown*)
<dd>  Creates and adds to the drawing a custom format oCustomFormat named iName.
 <dt> o 
    <a href="#GetAvailableFormats(CATLISTV(CATISpecObject_var)&amp;)"><b>GetAvailableFormats</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Appends to ioFormats the formats available in the drawing.
 <dt> o 
    <a href="#GetCustomFormats(CATLISTV(CATISpecObject_var)&amp;)"><b>GetCustomFormats</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Appends to iFormats the custom formats in the drawing.
 <dt> o 
    <a href="#GetStandardFormats(CATLISTV(CATISpecObject_var)&amp;)"><b>GetStandardFormats</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Appends to ioFormats the standard formats in the drawing.
 <dt> o 
    <a href="#RemoveCustomFormat(CATIDftCustomFormat*)"><b>RemoveCustomFormat</b></a>(CATIDftCustomFormat*)
<dd>  Removes the custom format iCustomFormat from the drawing.
 <dt> o 
    <a href="#SetOrientationsTypeOnCustomFormat(CATIDftCustomFormat*,CATFormatOrientationsType,CATLISTV(CATISpecObject_var)*)"><b>SetOrientationsTypeOnCustomFormat</b></a>(CATIDftCustomFormat*,CATFormatOrientationsType,CATLISTV(CATISpecObject_var)*)
<dd>  Sets the format orientations type for iCustomFormat to iOrientsType.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddCustomFormat"></a><a name="AddCustomFormat(CATUnicodeString&amp;,CATIDftCustomFormat*&amp;,IUnknown*)"></a> <dt> o <b>AddCustomFormat</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddCustomFormat</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftCustomFormat','CATIDftCustomFormat*&amp;')</script> <td><tt>oCustomFormat</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown*')</script> <td><tt>iFormat</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates and adds to the drawing a custom format oCustomFormat named iName.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>const</tt>
   <dd> CATUnicodeString &</tt> [in] The name of the new format.
 </dd>
    <dt><tt> <tt>CATIDftCustomFormat*</tt>
   <dd> &oCustomFormat</tt> [out] The created format.
 </dd>
    <dt><tt> <tt>IUnknown</tt>
   <dd> * iFormat</tt> [in] If not NULL, a format already in the drawing whose caracteristics will be used to initialize oCustomFormat.
      If NULL the default format will be used to initialize oCustomFormat.
 </dd>
</dl>
</dl>
</dl>
<a name="GetAvailableFormats"></a><a name="GetAvailableFormats(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetAvailableFormats</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAvailableFormats</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>ioFormats</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Appends to ioFormats the formats available in the drawing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CATLISTP(CATIDftFormat)</tt>
   <dd> &ioFormats</tt> [in out] The list the formats will be appended to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Success.
 <dt> <tt>E_FAIL</tt>   <dd> Error.
 </dl>
</dl>
</dl>
<a name="GetCustomFormats"></a><a name="GetCustomFormats(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetCustomFormats</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCustomFormats</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>ioCustomFormats</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Appends to iFormats the custom formats in the drawing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CATLISTP(CATISpecObject)</tt>
   <dd> &ioCustomFormats</tt> [in out] The list the formats will be appended to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Success.
 <dt> <tt>E_FAIL</tt>   <dd> Error.
 </dl>
</dl>
</dl>
<a name="GetStandardFormats"></a><a name="GetStandardFormats(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetStandardFormats</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStandardFormats</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>ioStdFormats</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Appends to ioFormats the standard formats in the drawing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CATLISTP(CATISpecObject)</tt>
   <dd> &ioStdFormats</tt> [in out] The list the formats will be appended to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Success.
 <dt> <tt>E_FAIL</tt>   <dd> Error.
 </dl>
</dl>
</dl>
<a name="RemoveCustomFormat"></a><a name="RemoveCustomFormat(CATIDftCustomFormat*)"></a> <dt> o <b>RemoveCustomFormat</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveCustomFormat</b>(<td><script type="text/javascript"> activateLink('CATIDftCustomFormat','CATIDftCustomFormat*')</script> <td><tt>iCustomFormat</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Removes the custom format iCustomFormat from the drawing.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Success.
 <dt> <tt>E_FAIL</tt>   <dd> Error or iCustomFormat can not be removed because there is at least one sheet in the drawing associated with it.
 </dl>
</dl>
</dl>
<a name="SetOrientationsTypeOnCustomFormat"></a><a name="SetOrientationsTypeOnCustomFormat(CATIDftCustomFormat*,CATFormatOrientationsType,CATLISTV(CATISpecObject_var)*)"></a> <dt> o <b>SetOrientationsTypeOnCustomFormat</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOrientationsTypeOnCustomFormat</b>(<td><script type="text/javascript"> activateLink('CATIDftCustomFormat','CATIDftCustomFormat*')</script> <td><tt>iCustomFormat</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFormatOrientationsType','CATFormatOrientationsType')</script> <td><tt>iOrientsType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)*')</script> <td><tt>ioModifiedSheets</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the format orientations type for iCustomFormat to iOrientsType. Also updates the sheets in the drawing 
 associated with iCustomFormat if their orientation is not compliant with iOrientsType.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CATIDftCustomFormat</tt>
   <dd> *iCustomFormat</tt> [in] The format whose orientations type must be changed.
 </dd>
    <dt><tt> <tt>CATFormatOrientationsType</tt>
   <dd> iOrientsType</tt> [in] The new orientations types for iCustomFormat.
 </dd>
    <dt><tt> <tt>CATLISTP(CATISpecObject)</tt>
   <dd> *ioModifiedSheet= NULL</tt> [in out] If not NULL, pointers to the sheets which were modified during the operation will be appended to ioModifiedSheet. Don't forget to release
          the pointers.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>        <dd> Success.
 <dt> <tt>S_FALSE</tt>     <dd> Some sheets were not compliant with the new orientation types. Consequently their orientation has been modified.
 <dt> <tt>E_FAIL</tt>      <dd> Error.
 </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftDrawingFormats.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

