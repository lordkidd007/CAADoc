<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CAT2DBoundingSphere</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../VisualizationBase.htm">This Framework</a>  <a href="class_CAT2DBoundingBox_50070.htm">Previous</a>  <a href="class_CAT2DCustomRep_38392.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>VisualizationBase Class CAT2DBoundingSphere</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../VisualizationBase/class_CATVizBaseIUnknown_66220.htm">VisualizationBase.CATVizBaseIUnknown</a>
    |
    +---<a href="../VisualizationBase/class_CATBoundingElement_66682.htm">VisualizationBase.CATBoundingElement</a>
      |
      +---CAT2DBoundingSphere
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT2DBoundingSphere</b>
</p>
<p>
<b><i> Class to manage bounding surface of 2D elements.</i></b><br>

 <b>Role</b>:This class is used to manage the space used by a 2D 
 element. This information is used at the rendering time to know if a given
 element is visible on the screen and needs to be drawn or not.
 2DBoundingSpheres are Circles.
 For performance issues BoundingSpheres need to be as close to the object they are linked
 to as possible. Idealy they represent the smallest circle containing the object.
 You can add 2 2DBoundingSpheres using the += operator inherited from boundingElements.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT2DBoundingSphere()"><b>CAT2DBoundingSphere</b></a>()
<dd>  Construct an empty boundingSphere.
 <dt> o 
    <a href="#CAT2DBoundingSphere(CAT2DBoundingSphere&amp;)"><b>CAT2DBoundingSphere</b></a>(CAT2DBoundingSphere&amp;)
<dd>  Copy constructor
 <dt> o 
    <a href="#CAT2DBoundingSphere(CATMathPoint2Df&amp;,float,float)"><b>CAT2DBoundingSphere</b></a>(CATMathPoint2Df&amp;,float,float)
<dd>  Constructs a 2DBoundingSphere with a given center, radius and radius in mm.
 <dt> o 
    <a href="#~CAT2DBoundingSphere()"><b>~CAT2DBoundingSphere</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCenter()"><b>GetCenter</b></a>()
<dd>  Returns the 2DBoundingSphere center.
 <dt> o 
    <a href="#GetRadius()"><b>GetRadius</b></a>()
<dd>  Returns the radius of the 2DBoundingSphere.
 <dt> o 
    <a href="#GetRadiusMM()"><b>GetRadiusMM</b></a>()
<dd>   Returns the radius in millimeter of the 2DBoundingSphere.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT2DBoundingSphere"></a><a name="CAT2DBoundingSphere()"></a> <dt> o <b>CAT2DBoundingSphere</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CAT2DBoundingSphere</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Construct an empty boundingSphere.
 default center will be 0,0 and default radius 1
</dl>
<a name="CAT2DBoundingSphere"></a><a name="CAT2DBoundingSphere(CAT2DBoundingSphere&amp;)"></a> <dt> o <b>CAT2DBoundingSphere</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CAT2DBoundingSphere</b>(<td> const <a href="../VisualizationBase/class_CAT2DBoundingSphere_71841.htm">CAT2DBoundingSphere&amp;</a> <td><tt></tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor
</dl>
<a name="CAT2DBoundingSphere"></a><a name="CAT2DBoundingSphere(CATMathPoint2Df&amp;,float,float)"></a> <dt> o <b>CAT2DBoundingSphere</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CAT2DBoundingSphere</b>(<td> const <a href="../Mathematics/class_CATMathPoint2Df_42458.htm">CATMathPoint2Df&amp;</a> <td><tt>center</tt>,<tr><td></td><td> const float <td><tt>radius</tt>,<tr><td></td><td> const float <td><tt>radius_mm</tt><td><tt>= 0.f</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a 2DBoundingSphere with a given center, radius and radius in mm.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> center</tt>
   <dd>  The center of the boundingSphere.
 </dd>
    <dt><tt> radius</tt>
   <dd>  The radius of the boundingSphere in model unit.
 </dd>
    <dt><tt> radius_mm</tt>
   <dd>  This is used for elements with fixed size on the screen on which
  zoom has no effect. Default is 0.</dd>
</dl>
</dl>
</dl>
<a name="~CAT2DBoundingSphere"></a><a name="~CAT2DBoundingSphere()"></a> <dt> o <b>~CAT2DBoundingSphere</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CAT2DBoundingSphere</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="GetCenter"></a><a name="GetCenter()"></a> <dt> o <b>GetCenter</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathPoint2Df_42458.htm">inline const CATMathPoint2Df &</a>  <b>GetCenter</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the 2DBoundingSphere center.
</dl>
<a name="GetRadius"></a><a name="GetRadius()"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public inline float  <b>GetRadius</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the radius of the 2DBoundingSphere.
</dl>
<a name="GetRadiusMM"></a><a name="GetRadiusMM()"></a> <dt> o <b>GetRadiusMM</b>

<dt>  <table><tr><td>  public inline float  <b>GetRadiusMM</b>(<td>)const   </table></dt>
<dl>
  <dd>
  Returns the radius in millimeter of the 2DBoundingSphere.
</dl>
<hr>
 This object is included in the file: <b>CAT2DBoundingSphere.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
