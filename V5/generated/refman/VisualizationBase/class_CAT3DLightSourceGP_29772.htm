<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CAT3DLightSourceGP</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationBase.htm" href="../VisualizationBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationBase";	}
		function getCurrentObjectName() { 
 	return "CAT3DLightSourceGP"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationBase <script type="text/javascript" > writeClassCharacteristic(); </script> CAT3DLightSourceGP</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT3DLightSourceGP_29772','CAT3DLightSourceGP','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT3DLightSourceGP</b>
</p>
<p>
<b><i> Class to create light source graphic primitives.</i></b><br>

 <b>Role</b>: A light source graphic primitive indicates the position
 and orientation of lights in the viewer. A light source can be of
 two different types : <br>
    <tt>LS_INFINITE</tt> infinitely distant like the sun,
    <tt>LS_SPOT</tt> spotlight with a cutoff angle between 0 and 90 degrees,
                     or equal to 180 degrees (lightbulb equivalent)
 A light source can be of two differents modes : <br>
    <tt>Local</tt> attached to the viewpoint
    <tt>Global</tt> attached to the model
 By default, one light source is created and activated. A viewer can handle
 a maximum of eight light source graphic primitives.
 To add a light source, prefer adding a CAT3DLightSourceRep.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT3DLightSourceGP()"><b>CAT3DLightSourceGP</b></a>()
<dd>  Constructs an empty light source graphic primitive of type LS_INFINITE.
 <dt> o 
    <a href="#CAT3DLightSourceGP(CATLightSourceType,CATLightSourceMode,CATMathPointf&amp;,CATMathDirectionf&amp;,float,float,float,float,float)"><b>CAT3DLightSourceGP</b></a>(CATLightSourceType,CATLightSourceMode,CATMathPointf&amp;,CATMathDirectionf&amp;,float,float,float,float,float)
<dd>  Constructs a light source graphic primitive.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Get(CATLightSourceType&amp;,CATLightSourceMode&amp;,CATMathPointf&amp;,CATMathDirectionf&amp;,float*,float*,float*,float*,float*)"><b>Get</b></a>(CATLightSourceType&amp;,CATLightSourceMode&amp;,CATMathPointf&amp;,CATMathDirectionf&amp;,float*,float*,float*,float*,float*)
<dd>  Retrieves the parameters of a light source.
 <dt> o 
    <a href="#GetColor(float*[4],float*[4],float*[4])"><b>GetColor</b></a>(float*[4],float*[4],float*[4])
<dd>  Retrieves the color components of the light source.
 <dt> o 
    <a href="#SetColor(float[4],float[4],float[4])"><b>SetColor</b></a>(float[4],float[4],float[4])
<dd>  Sets the color components of the light source.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT3DLightSourceGP"></a><a name="CAT3DLightSourceGP()"></a> <dt> o <b>CAT3DLightSourceGP</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT3DLightSourceGP</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty light source graphic primitive of type LS_INFINITE.
</dl>
<a name="CAT3DLightSourceGP"></a><a name="CAT3DLightSourceGP(CATLightSourceType,CATLightSourceMode,CATMathPointf&amp;,CATMathDirectionf&amp;,float,float,float,float,float)"></a> <dt> o <b>CAT3DLightSourceGP</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT3DLightSourceGP</b>(<td><script type="text/javascript"> activateLink('CATLightSourceType','CATLightSourceType')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLightSourceMode','CATLightSourceMode')</script> <td><tt>iMode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPointf','CATMathPointf&amp;')</script> <td><tt>iOrigin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathDirectionf','CATMathDirectionf&amp;')</script> <td><tt>iDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iSpotAngle</tt><td><tt>= 180.f</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iSpotExponent</tt><td><tt>= 0.f</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iConstantAttenuation</tt><td><tt>= 1.f</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iLinearAttenuation</tt><td><tt>= 0.f</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iQuadraticAttenuation</tt><td><tt>= 0.f</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a light source graphic primitive.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type of the light source.
 </dd>
    <dt><tt> iMode</tt>
   <dd> The mode of the light source.
 </dd>
    <dt><tt> iOrigin</tt>
   <dd> The location of the light source.
 </dd>
    <dt><tt> iDirection</tt>
   <dd> The direction of the light source.
 </dd>
    <dt><tt> iSpotAngle</tt>
   <dd> The cutoff angle of a spotlight.
 </dd>
    <dt><tt> iSpotExponent</tt>
   <dd> value used for specular component calculations 
 </dd>
    <dt><tt> iConstantAttenuation</tt>
   <dd> The constant factor of the attenuation equation.
 </dd>
    <dt><tt> iLinearAttenuation</tt>
   <dd> The linear factor of the attenuation equation.
 </dd>
    <dt><tt> iQuadraticAttenuation</tt>
   <dd> The quadraric factor of the attenuation equation.</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Get"></a><a name="Get(CATLightSourceType&amp;,CATLightSourceMode&amp;,CATMathPointf&amp;,CATMathDirectionf&amp;,float*,float*,float*,float*,float*)"></a> <dt> o <b>Get</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>Get</b>(<td><script type="text/javascript"> activateLink('CATLightSourceType','CATLightSourceType&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLightSourceMode','CATLightSourceMode&amp;')</script> <td><tt>oMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPointf','CATMathPointf&amp;')</script> <td><tt>oOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathDirectionf','CATMathDirectionf&amp;')</script> <td><tt>oDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oSpotAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oSpotExponent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oConstantAttenuation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oLinearAttenuation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oQuadraticAttenuation</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the parameters of a light source.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type of the light source.
 </dd>
    <dt><tt> oMode</tt>
   <dd> The mode of the light source.
 </dd>
    <dt><tt> oOrigin</tt>
   <dd> The point where the light source is located. This parameter has
 no meaning for LS_INFINITE light sources.
 </dd>
    <dt><tt> oDirection</tt>
   <dd> The direction of the light source.
 </dd>
    <dt><tt> oSpotAngle</tt>
   <dd> The half-angle aperture of the cone of the spotlight.
 </dd>
    <dt><tt> oSpotExponent</tt>
   <dd> The exponent value used for specular component calculations.
 </dd>
    <dt><tt> oConstantAttenuation</tt>
   <dd> The constant factor of the attenuation function.
 </dd>
    <dt><tt> oLinearAttenuation</tt>
   <dd> The light factor of the attenuation function.
 </dd>
    <dt><tt> oQuadraticAttenuation</tt>
   <dd> The quadratic factor of the attenuation function.</dd>
</dl>
</dl>
</dl>
<a name="GetColor"></a><a name="GetColor(float*[4],float*[4],float*[4])"></a> <dt> o <b>GetColor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>GetColor</b>(<td> const <script type="text/javascript"> activateLink('float*[4','float*[4]')</script> <td><tt>oAmbient</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float*[4','float*[4]')</script> <td><tt>oDiffuse</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float*[4','float*[4]')</script> <td><tt>oSpecular</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the color components of the light source.
 All float values are in [0,1].
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAmbient</tt>
   <dd> Red, green, blue and alpha values of ambient component.
 </dd>
    <dt><tt> oDiffuse</tt>
   <dd> Red, green, blue and alpha values of diffuse component.
 </dd>
    <dt><tt> oSpecular</tt>
   <dd> Red, green, blue and alpha values of specular component.</dd>
</dl>
</dl>
</dl>
<a name="SetColor"></a><a name="SetColor(float[4],float[4],float[4])"></a> <dt> o <b>SetColor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetColor</b>(<td> const <script type="text/javascript"> activateLink('float[4','float[4]')</script> <td><tt>iAmbient</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float[4','float[4]')</script> <td><tt>iDiffuse</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float[4','float[4]')</script> <td><tt>iSpecular</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the color components of the light source.
 All float values are in [0,1].
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAmbient</tt>
   <dd> Red, green, blue and alpha values of ambient component.
 </dd>
    <dt><tt> iDiffuse</tt>
   <dd> Red, green, blue and alpha values of diffuse component.
 </dd>
    <dt><tt> iSpecular</tt>
   <dd> Red, green, blue and alpha values of specular component.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CAT3DLightSourceGP.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

