<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CAT3DManipulator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../VisualizationBase.htm">This Framework</a>  <a href="class_CAT3DLodRep_22099.htm">Previous</a>  <a href="class_CAT3DMarkerGP_30578.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>VisualizationBase Class CAT3DManipulator</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../System/class_CATEventSubscriber_67510.htm">System.CATEventSubscriber</a>
        |
        +---<a href="../System/class_CATCommand_20100.htm">System.CATCommand</a>
          |
          +---<a href="../VisualizationBase/class_CATManipulator_41648.htm">VisualizationBase.CATManipulator</a>
            |
            +---CAT3DManipulator
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT3DManipulator</b>
</p>
<p>
<b><i> Class to control a 3D representation.</i></b><br>

 <b>Role</b>:
 A CAT3DManipulator is a Controller attached to a 3D representation providing 
 a proposition of a new position for 3D manipulation after the representation
 selected by the user has been manipulated.
 <p>
 Usage of manipulators
 <ul>
 <li>In the instanciation : 
	<ol> 
	<li>	Instanciate a manipulator connected to the representation :
		  <pre>CAT3DManipulator * _Manip = new 
		    CAT3DManipulator( this, "MYName", MYRep, CAT3DManipulator::Translation);</pre>
	
	<li>	Position the manipulator	
		  <pre>_Manip->SetPosition( PositionComputedFromNewModelization)</pre>
			
	<li>	Set characteristics (Invariants)   Note: Do it after SetPosition()
		  <pre>Manip->SetTranslationDirection( CATMathJ);</pre>
			
	<li> 	Branch a callback in you father command to be informed about the manipulation
		  <pre>AddAnalyseNotificationCB( _Manip, CATManipulator::GetCATManipulate(), 
		    (CATCommandMethod) &MYCommand::MYCallback, NULL);</pre>
	</ol>
 <li>In the callback,
	<ol>
     <li> Read data of manipulation
		<ul>
		<li> read the RESULT of the manipulation
		<pre>CATMathAxis Position = ((CAT3DManipulator *)Command)->GetPosition();</pre>

		<li> read the event elementary TRANSFORMATION of the manipulation
	        <pre>CATTransformationNotification *TransfoNotif =
	        ((CATTransformationNotification *) Command->SendCommandSpecificObject(
	        CATTransformationNotification::ClassName(), Notification));
	        CATMathTransformation *Transformation = TransfoNotif->GetNotification();
		</pre></ul>
	<li>	In the callback, Update your modelization
	    
	<li>    In the callback, Reposition the manipulator if needed (usualy when there is constraints)
		  	<pre>_Manip->SetPosition( PositionComputedFromNewModelization)</pre>
	</ol>			
 </ul></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT3DManipulator(CATCommand*,CATString&amp;,CAT3DRep*,ManipulationStyle,ManipulationStyle)"><b>CAT3DManipulator</b></a>(CATCommand*,CATString&amp;,CAT3DRep*,ManipulationStyle,ManipulationStyle)
<dd>  Construction of the manipulator.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetPosition()"><b>GetPosition</b></a>()
<dd>  Gets the current position of the manipulator.
 <dt> o 
    <a href="#SetPosition(CATMathAxis&amp;)"><b>SetPosition</b></a>(CATMathAxis&amp;)
<dd>  Sets the position of the manipulator.
 <dt> o 
    <a href="#SetRotationLine(CATMathLine&amp;)"><b>SetRotationLine</b></a>(CATMathLine&amp;)
<dd>  Sets the invariant line of LineRotation and PlaneMovement.
 <dt> o 
    <a href="#SetRotationPoint(CATMathPoint&amp;)"><b>SetRotationPoint</b></a>(CATMathPoint&amp;)
<dd>  Sets the invariant point of PointRotation.
 <dt> o 
    <a href="#SetTranslationDirection(CATMathDirection&amp;)"><b>SetTranslationDirection</b></a>(CATMathDirection&amp;)
<dd>  Sets the invariant direction of DirectionTranslation.
 <dt> o 
    <a href="#SetTranslationPlane(CATMathPlane&amp;)"><b>SetTranslationPlane</b></a>(CATMathPlane&amp;)
<dd>  Sets the invariant plane of PlaneTranslation and PlaneMovement.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ManipulationStyle"><b>ManipulationStyle</b></a>
<dd>  Defines the different types of manipulation available for
 a 3D representation.
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT3DManipulator"></a><a name="CAT3DManipulator(CATCommand*,CATString&amp;,CAT3DRep*,ManipulationStyle,ManipulationStyle)"></a> <dt> o <b>CAT3DManipulator</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CAT3DManipulator</b>(<td><a href="../System/class_CATCommand_20100.htm">CATCommand*</a> <td><tt>iFather</tt>,<tr><td></td><td> const <a href="../System/class_CATString_16797.htm">CATString&amp;</a> <td><tt>iName</tt>,<tr><td></td><td><a href="../VisualizationBase/class_CAT3DRep_11216.htm">CAT3DRep*</a> <td><tt>iRep</tt>,<tr><td></td><td> const ManipulationStyle <td><tt>iFirstStyle</tt><td><tt>=NoManipulation</tt>,<tr><td></td><td> const ManipulationStyle <td><tt>iSecondStyle</tt><td><tt>=NoManipulation</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Construction of the manipulator.  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstStyle</tt>
   <dd> = style of manipulation used by Mouse Left button drag  </dd>
    <dt><tt> iSecondStyle</tt>
   <dd> = style of manipulation used by Mouse Left+Middle buttons drag (left THEN middle)</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetPosition"></a><a name="GetPosition()"></a> <dt> o <b>GetPosition</b>

<dt>  <table><tr><td>  public virtual <a href="../Mathematics/class_CATMathAxis_24327.htm">CATMathAxis</a>  <b>GetPosition</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Gets the current position of the manipulator. 
</dl>
<a name="SetPosition"></a><a name="SetPosition(CATMathAxis&amp;)"></a> <dt> o <b>SetPosition</b>

<dt>  <table><tr><td>  public virtual void  <b>SetPosition</b>(<td> const <a href="../Mathematics/class_CATMathAxis_24327.htm">CATMathAxis&amp;</a> <td><tt>iPosition</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the position of the manipulator.
</dl>
<a name="SetRotationLine"></a><a name="SetRotationLine(CATMathLine&amp;)"></a> <dt> o <b>SetRotationLine</b>

<dt>  <table><tr><td>  public virtual void  <b>SetRotationLine</b>(<td> const <a href="../Mathematics/class_CATMathLine_23882.htm">CATMathLine&amp;</a> <td><tt>iLine</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the invariant line of LineRotation and PlaneMovement.
</dl>
<a name="SetRotationPoint"></a><a name="SetRotationPoint(CATMathPoint&amp;)"></a> <dt> o <b>SetRotationPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>SetRotationPoint</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iPoint</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the invariant point of PointRotation.
</dl>
<a name="SetTranslationDirection"></a><a name="SetTranslationDirection(CATMathDirection&amp;)"></a> <dt> o <b>SetTranslationDirection</b>

<dt>  <table><tr><td>  public virtual void  <b>SetTranslationDirection</b>(<td> const <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection&amp;</a> <td><tt>iWAxis</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the invariant direction of DirectionTranslation.
</dl>
<a name="SetTranslationPlane"></a><a name="SetTranslationPlane(CATMathPlane&amp;)"></a> <dt> o <b>SetTranslationPlane</b>

<dt>  <table><tr><td>  public virtual void  <b>SetTranslationPlane</b>(<td> const <a href="../Mathematics/class_CATMathPlane_28612.htm">CATMathPlane&amp;</a> <td><tt>iPlane</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the invariant plane of PlaneTranslation and PlaneMovement.
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ManipulationStyle"> <dt> o <b>ManipulationStyle</b>
<dl>
  <dd>
<pre>
enum <b>ManipulationStyle</b> {
  NoManipulation,
  DirectionTranslation,
  PlaneTranslation,
  PlaneMovement,
  LineRotation,
  PointRotation,
  FrontestPlaneTranslation
}
</pre>
 Defines the different types of manipulation available for
 a 3D representation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> NoManipulation</tt>
   <dd>             The CAT3DManipulator does no specific work </dd>
    <dt><tt> DirectionTranslation</tt>
   <dd>       The CAT3Dmanipulator contrains its position along a given direction during the manipulation </dd>
    <dt><tt> PlaneTranslation</tt>
   <dd>           The CAT3Dmanipulator contrains its position along a given plane during the manipulation </dd>
    <dt><tt> PlaneMovement</tt>
   <dd>              Do not use  </dd>
    <dt><tt> LineRotation</tt>
   <dd>               The CAT3Dmanipulator contrains its position on a circle normal to a given axis </dd>
    <dt><tt> PointRotation</tt>
   <dd>              The CAT3Dmanipulator contrains its position on a sphere centered on a given point </dd>
    <dt><tt> FrontestPlaneTranslation</tt>
   <dd>   The CAT3Dmanipulator contrains its position along a plane parallel to the screen</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CAT3DManipulator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
