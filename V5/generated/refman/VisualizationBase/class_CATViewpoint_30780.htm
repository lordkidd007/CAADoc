<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CATViewpoint</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../VisualizationBase.htm">This Framework</a>  <a href="class_CATTexturePixelImage_81864.htm">Previous</a>  <a href="class_CATViewport_26016.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>VisualizationBase Class CATViewpoint</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../System/class_CATEventSubscriber_67510.htm">System.CATEventSubscriber</a>
        |
        +---CATViewpoint
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATViewpoint</b>
</p>
<p>
<b><i>  A viewpoint represents the scene to be seen and the position of the 
  observer.</i></b><br>

  This scene will be displayed in a window.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATViewpoint()"><b>CATViewpoint</b></a>()
<dd>  Create a non-initialized viewpoint.
 <dt> o 
    <a href="#CATViewpoint(CATViewpoint&amp;)"><b>CATViewpoint</b></a>(CATViewpoint&amp;)
<dd>  Create a viewpoint from another one.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeginModification()"><b>BeginModification</b></a>()
<dd>  Declares the begining of the transaction.
 <dt> o 
    <a href="#CATDeclareCBEvent(VIEWPOINT_MODIFIED)"><b>CATDeclareCBEvent</b></a>(VIEWPOINT_MODIFIED)
<dd>  Event sent when the viewpoint change.
 <dt> o 
    <a href="#ComputeModelFromPixel(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)"><b>ComputeModelFromPixel</b></a>(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)
<dd>  Computes the line going from the eye to a pixel position ( for insatnce the mouse position ) in model corrdinate system.
 <dt> o 
    <a href="#ComputePixelFromModel(CATMathPointf&amp;,CATMathPoint2Df&amp;,float,float,float,float)"><b>ComputePixelFromModel</b></a>(CATMathPointf&amp;,CATMathPoint2Df&amp;,float,float,float,float)
<dd>  Computes the pixel position at wich a given point is displayed .
 <dt> o 
    <a href="#EndModification(int)"><b>EndModification</b></a>(int)
<dd>  Declares the end of the transaction.
 <dt> o 
    <a href="#GetViewer()"><b>GetViewer</b></a>()
<dd>  Gets the CATViewer associated to the viewpoint.
 <dt> o 
    <a href="#GetVizViewer()"><b>GetVizViewer</b></a>()
<dd>  Gets the CATVizViewer associated to the viewpoint.
 <dt> o 
    <a href="#GetZoom()"><b>GetZoom</b></a>()
<dd>  Gets the zoom value.
 <dt> o 
    <a href="#Is3D()"><b>Is3D</b></a>()
<dd>  Retrieves whether viewpoint is a three dimensional one or not.
 <dt> o 
    <a href="#IsAnimated()"><b>IsAnimated</b></a>()
<dd>  Animation query.
 <dt> o 
    <a href="#IsShowSpace()"><b>IsShowSpace</b></a>()
<dd>  Returns 1 if we display the Show Space.
 <dt> o 
    <a href="#Reframe(float,float,float,float)"><b>Reframe</b></a>(float,float,float,float)
<dd>    Changes the viewpoint configuration so that all representation are visible.
 <dt> o 
    <a href="#SetShowSpace(int)"><b>SetShowSpace</b></a>(int)
<dd>  Specifies whether we display the show space or the noshow space.
 <dt> o 
    <a href="#SetViewer(CATVizViewer*)"><b>SetViewer</b></a>(CATVizViewer*)
<dd>  Sets the CATViewer associated to the viewpoint.
 <dt> o 
    <a href="#StartAnimation(void*)"><b>StartAnimation</b></a>(void*)
<dd>  Declares the begining of the manipulation of the viewpoint.
 <dt> o 
    <a href="#StopAnimation(void*)"><b>StopAnimation</b></a>(void*)
<dd>  Declares the end of the manipulation of the viewpoint.
 <dt> o 
    <a href="#operator =(CATViewpoint&amp;)"><b>operator =</b></a>(CATViewpoint&amp;)
<dd>  Copy of zoom only.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATViewpoint"></a><a name="CATViewpoint()"></a> <dt> o <b>CATViewpoint</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATViewpoint</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Create a non-initialized viewpoint. At the first display, a reframe will automatically  been done.
</dl>
<a name="CATViewpoint"></a><a name="CATViewpoint(CATViewpoint&amp;)"></a> <dt> o <b>CATViewpoint</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATViewpoint</b>(<td> const <a href="../VisualizationBase/class_CATViewpoint_30780.htm">CATViewpoint&amp;</a> <td><tt>iViewpoint</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Create a viewpoint from another one.
</dl>
 <h2>Methods</h2> <br>
<a name="BeginModification"></a><a name="BeginModification()"></a> <dt> o <b>BeginModification</b>

<dt>  <table><tr><td>  public virtual void  <b>BeginModification</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Declares the begining of the transaction.
 <br>
 It is necessary the enclose with Begin and End
 if the viewpoint is modified with severals methods
</dl>
<a name="CATDeclareCBEvent"></a><a name="CATDeclareCBEvent(VIEWPOINT_MODIFIED)"></a> <dt> o <b>CATDeclareCBEvent</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATDeclareCBEvent</b>(<td>VIEWPOINT_MODIFIED <td><tt></tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Event sent when the viewpoint change.
</dl>
<a name="ComputeModelFromPixel"></a><a name="ComputeModelFromPixel(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)"></a> <dt> o <b>ComputeModelFromPixel</b>

<dt>  <table><tr><td>  public virtual void  <b>ComputeModelFromPixel</b>(<td> const float <td><tt>x</tt>,<tr><td></td><td> const float <td><tt>y</tt>,<tr><td></td><td><a href="../Mathematics/class_CATMathPointf_34608.htm">CATMathPointf&amp;</a> <td><tt>neard</tt>,<tr><td></td><td><a href="../Mathematics/class_CATMathPointf_34608.htm">CATMathPointf&amp;</a> <td><tt>fard</tt>,<tr><td></td><td> const float <td><tt>width</tt>,<tr><td></td><td> const float <td><tt>height</tt>,<tr><td></td><td> const float <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const float <td><tt>ratioWH</tt>) = 0  </table></dt>
<dl>
  <dd>
 Computes the line going from the eye to a pixel position ( for insatnce the mouse position ) in model corrdinate system.
</dl>
<a name="ComputePixelFromModel"></a><a name="ComputePixelFromModel(CATMathPointf&amp;,CATMathPoint2Df&amp;,float,float,float,float)"></a> <dt> o <b>ComputePixelFromModel</b>

<dt>  <table><tr><td>  public virtual void  <b>ComputePixelFromModel</b>(<td> const <a href="../Mathematics/class_CATMathPointf_34608.htm">CATMathPointf&amp;</a> <td><tt>pt_model</tt>,<tr><td></td><td><a href="../Mathematics/class_CATMathPoint2Df_42458.htm">CATMathPoint2Df&amp;</a> <td><tt>pt_pixel</tt>,<tr><td></td><td> const float <td><tt>width</tt>,<tr><td></td><td> const float <td><tt>height</tt>,<tr><td></td><td> const float <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const float <td><tt>ratioWH</tt>) = 0  </table></dt>
<dl>
  <dd>
 Computes the pixel position at wich a given point is displayed .
</dl>
<a name="EndModification"></a><a name="EndModification(int)"></a> <dt> o <b>EndModification</b>

<dt>  <table><tr><td>  public virtual void  <b>EndModification</b>(<td> const int <td><tt>iNotify</tt><td><tt>=1</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Declares the end of the transaction.
 <br>
 After the translation, an event 
 VIEWPOINT_MODIFIED is sent (by callbacks)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotify</tt>
   <dd> The notification is sent (default) or not (when we want a reframe at the first display of the viewer.</dd>
</dl>
</dl>
</dl>
<a name="GetViewer"></a><a name="GetViewer()"></a> <dt> o <b>GetViewer</b>

<dt>  <table><tr><td>  public <a href="../Visualization/class_CATViewer_16760.htm">CATViewer *</a>  <b>GetViewer</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Gets the CATViewer associated to the viewpoint.
</dl>
<a name="GetVizViewer"></a><a name="GetVizViewer()"></a> <dt> o <b>GetVizViewer</b>

<dt>  <table><tr><td>  public CATVizViewer *  <b>GetVizViewer</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Gets the CATVizViewer associated to the viewpoint.
</dl>
<a name="GetZoom"></a><a name="GetZoom()"></a> <dt> o <b>GetZoom</b>

<dt>  <table><tr><td>  public virtual float  <b>GetZoom</b>(<td>)const   </table></dt>
<dl>
  <dd>
 Gets the zoom value.
 <br>
 <b>role</b>:
 This method should be used only on a CAT2DViewpoint. <br>
 In order to zoom in or out on a CAT3DViewpoint, you should use
 something like:
 <pre>
  CATMathVectorf t = 0.1 * theViewpoint.GetFocusDistance() * theViewpoint.GetSightDirection();
  CATMathPointf Target = theViewpoint.GetTarget();
  theViewpoint.SetOrigin( theViewpoint.GetOrigin() + t);
  theViewpoint.SetFocus( theViewpoint.GetOrigin().DistanceTo(Target));
 
<a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm#GetTarget">CAT3DViewpoint.GetTarget</a> 
<a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm#SetTarget">CAT3DViewpoint.SetTarget</a> 
<a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm#GetOrigin">CAT3DViewpoint.GetOrigin</a> 
<a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm#SetOrigin">CAT3DViewpoint.SetOrigin</a> 
<a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm#GetFocusDistance">CAT3DViewpoint.GetFocusDistance</a> 
<a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm#GetSightDirection">CAT3DViewpoint.GetSightDirection</a> </pre>
 This code zooms in by a small factor. In fact, it moves the Viewpoint origin
 forward, so that you are 10% closer to the model. The reference distance is the
 distance to the Target.
 <br>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm">CAT3DViewpoint</a>
</dl>
</dl>
<a name="Is3D"></a><a name="Is3D()"></a> <dt> o <b>Is3D</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>Is3D</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Retrieves whether viewpoint is a three dimensional one or not. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul>
  <li><tt>TRUE</tt>: the viewpoint is a 
<a href="../VisualizationBase/class_CAT3DViewpoint_39756.htm">CAT3DViewpoint</a> </li>  <li><tt>FALSE</tt>: The viewpoint is not a 3D viewpoint. </li>
 </ul>
</dl>
</dl>
<a name="IsAnimated"></a><a name="IsAnimated()"></a> <dt> o <b>IsAnimated</b>

<dt>  <table><tr><td>  public inline int  <b>IsAnimated</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Animation query.
</dl>
<a name="IsShowSpace"></a><a name="IsShowSpace()"></a> <dt> o <b>IsShowSpace</b>

<dt>  <table><tr><td>  public int  <b>IsShowSpace</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Returns 1 if we display the Show Space.
</dl>
<a name="Reframe"></a><a name="Reframe(float,float,float,float)"></a> <dt> o <b>Reframe</b>

<dt>  <table><tr><td>  public virtual void  <b>Reframe</b>(<td> const float <td><tt>width</tt>,<tr><td></td><td> const float <td><tt>height</tt>,<tr><td></td><td> const float <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const float <td><tt>ratioWH</tt>) = 0  </table></dt>
<dl>
  <dd>
   Changes the viewpoint configuration so that all representation are visible.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> width</tt>
   <dd>            width in pixel  </dd>
    <dt><tt> height</tt>
   <dd>           height in pixel  </dd>
    <dt><tt> mmInSupportUnit</tt>
   <dd>  precision on wich you display, in mm per unit  </dd>
    <dt><tt> ratioWH</tt>
   <dd>          ratio of a pixel on the display ( width/hright )</dd>
</dl>
</dl>
</dl>
<a name="SetShowSpace"></a><a name="SetShowSpace(int)"></a> <dt> o <b>SetShowSpace</b>

<dt>  <table><tr><td>  public void  <b>SetShowSpace</b>(<td>int <td><tt>iShowState</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Specifies whether we display the show space or the noshow space.
</dl>
<a name="SetViewer"></a><a name="SetViewer(CATVizViewer*)"></a> <dt> o <b>SetViewer</b>

<dt>  <table><tr><td>  public void  <b>SetViewer</b>(<td>CATVizViewer* <td><tt>iViewer</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Sets the CATViewer associated to the viewpoint.
</dl>
<a name="StartAnimation"></a><a name="StartAnimation(void*)"></a> <dt> o <b>StartAnimation</b>

<dt>  <table><tr><td>  public virtual void  <b>StartAnimation</b>(<td>void* <td><tt>iFrom</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Declares the begining of the manipulation of the viewpoint. 
 <br>
 It is necessary the do begin/end animation when several steps are
 displayed consecutively.
 At the start, an event VIEWPOINT_ANIMATION_STARTED is sent
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iFrom</tt>
   <dd> Not used</dd>
</dl>
</dl>
</dl>
<a name="StopAnimation"></a><a name="StopAnimation(void*)"></a> <dt> o <b>StopAnimation</b>

<dt>  <table><tr><td>  public virtual void  <b>StopAnimation</b>(<td>void* <td><tt>iFrom</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Declares the end of the manipulation of the viewpoint. 
 <br>
 At the stop, an event VIEWPOINT_ANIMATION_STOPED is sent.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFrom</tt>
   <dd> Not used</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATViewpoint&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <a href="../VisualizationBase/class_CATViewpoint_30780.htm">CATViewpoint &</a>  <b>operator =</b>(<td> const <a href="../VisualizationBase/class_CATViewpoint_30780.htm">CATViewpoint&amp;</a> <td><tt></tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy of zoom only.
</dl>
<hr>
 This object is included in the file: <b>CATViewpoint.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
