<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecDeviceItf Interface CATIElbMountingEquipment</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ElecDeviceItf.htm" href="../ElecDeviceItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ElecDeviceItf";	}
		function getCurrentObjectName() { 
 	return "CATIElbMountingEquipment"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ElecDeviceItf Interface CATIElbMountingEquipment</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIElbMountingEquipment_40535','CATIElbMountingEquipment','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIElbMountingEquipment</b>
</p>
<p>
<b><i> Interface to manage Mounting Equipments.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddDevice(CATIElbCavity*,CATBaseUnknown*,int&amp;)"><b>AddDevice</b></a>(CATIElbCavity*,CATBaseUnknown*,int&amp;)
<dd>  Adds a device on a mounting equipment cavity.
 <dt> o 
    <a href="#Connect(CATIElbCavity*,CATIElbMountingEquipment*,int&amp;)"><b>Connect</b></a>(CATIElbCavity*,CATIElbMountingEquipment*,int&amp;)
<dd>  Connect the Mounting Equipment with a Mounting Equipment.
 <dt> o 
    <a href="#GetFatherMountingEquipmentCavity(CATIElbCavity*&amp;)"><b>GetFatherMountingEquipmentCavity</b></a>(CATIElbCavity*&amp;)
<dd>  Retrieves the cavity of the parent mounting equipment.
 <dt> o 
    <a href="#ListBundleCnctPts(CATListValCATBaseUnknown_var*&amp;)"><b>ListBundleCnctPts</b></a>(CATListValCATBaseUnknown_var*&amp;)
<dd>  Retrieves the list of bundle connection points.
 <dt> o 
    <a href="#ListCavities(CATListValCATBaseUnknown_var*&amp;)"><b>ListCavities</b></a>(CATListValCATBaseUnknown_var*&amp;)
<dd>  Retrieves the list the cavities.
 <dt> o 
    <a href="#ListDeviceComposition(CATListValCATBaseUnknown_var*&amp;)"><b>ListDeviceComposition</b></a>(CATListValCATBaseUnknown_var*&amp;)
<dd>  Retrieves the list of device composition.
 <dt> o 
    <a href="#ListTerminations(CATListValCATBaseUnknown_var*&amp;)"><b>ListTerminations</b></a>(CATListValCATBaseUnknown_var*&amp;)
<dd>  
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddDevice"></a><a name="AddDevice(CATIElbCavity*,CATBaseUnknown*,int&amp;)"></a> <dt> o <b>AddDevice</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddDevice</b>(<td><script type="text/javascript"> activateLink('CATIElbCavity','CATIElbCavity*')</script> <td><tt>ipElecCavity</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipElecDevice</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>StatusOfGeometricalConstraint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a device on a mounting equipment cavity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipElecCavity</tt>
   <dd>   The cavity of the mounting equipment
 </dd>
    <dt><tt> ipElecDevice</tt>
   <dd>   The device to be connected to the mounting equipment cavity
   (only connector or equipment are authorized at the moment)
 </dd>
    <dt><tt> StatusOfGeometricalConstraint</tt>
   <dd>   The geometrical constraint status.
   <br><b>Legal values</b>:
   <ul>
    <li>0 if all geometrical constraint are correctly created</li>
	  <li>1 if a geometrical constraint is  over constraint</li>
	  <li>2 if no geometrical constraint was defined to constraint the device between them.</li>
   </ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<a name="Connect"></a><a name="Connect(CATIElbCavity*,CATIElbMountingEquipment*,int&amp;)"></a> <dt> o <b>Connect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Connect</b>(<td><script type="text/javascript"> activateLink('CATIElbCavity','CATIElbCavity*')</script> <td><tt>ipCavity</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIElbMountingEquipment','CATIElbMountingEquipment*')</script> <td><tt>ipMountingEquipment</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatusOfGeometricalConstraint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Connect the Mounting Equipment with a Mounting Equipment.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipCavity</tt>
   <dd>   The cavity of the input Mounting Equipment.
 </dd>
    <dt><tt> ipMountingEquipment</tt>
   <dd>   The Mounting Equipment to be connected.
 </dd>
    <dt><tt> StatusOfGeometricalConstraint</tt>
   <dd>   Value is:	0 if all geometrical constraint are correctly created.
	            1 if a geometrical constraint is  over constraint.
	            2 if no geometry is defined to constraint the device between them.		
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.  
     S_OK :  no error.
     E_FAIL : Error occured while connecting devices.
     S_FALSE : Devices already connected.
</dl>
</dl>
<a name="GetFatherMountingEquipmentCavity"></a><a name="GetFatherMountingEquipmentCavity(CATIElbCavity*&amp;)"></a> <dt> o <b>GetFatherMountingEquipmentCavity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFatherMountingEquipmentCavity</b>(<td><script type="text/javascript"> activateLink('CATIElbCavity','CATIElbCavity*&amp;')</script> <td><tt>oCavity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the cavity of the parent mounting equipment.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCavity</tt>
   <dd>   The cavity of the parent mounting equipment occupied by this mounting equipment
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<a name="ListBundleCnctPts"></a><a name="ListBundleCnctPts(CATListValCATBaseUnknown_var*&amp;)"></a> <dt> o <b>ListBundleCnctPts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListBundleCnctPts</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*&amp;')</script> <td><tt>oBundleCnctPts</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of bundle connection points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBundleCnctPts</tt>
   <dd>   The retrieved list of bundle connection points
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<a name="ListCavities"></a><a name="ListCavities(CATListValCATBaseUnknown_var*&amp;)"></a> <dt> o <b>ListCavities</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListCavities</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*&amp;')</script> <td><tt>oCavities</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list the cavities.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCavities</tt>
   <dd>   The retrieved list of cavities 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<a name="ListDeviceComposition"></a><a name="ListDeviceComposition(CATListValCATBaseUnknown_var*&amp;)"></a> <dt> o <b>ListDeviceComposition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListDeviceComposition</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*&amp;')</script> <td><tt>oDevices</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of device composition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDevices</tt>
   <dd>   The retrieved list of device composition.
   It is made up of ElecConMountingEquipment, ElecSicCon, ElecStud, ElecTermBlock, ElectermStrip, Equipment and MountingEquipment.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<a name="ListTerminations"></a><a name="ListTerminations(CATListValCATBaseUnknown_var*&amp;)"></a> <dt> o <b>ListTerminations</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListTerminations</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*&amp;')</script> <td><tt>oTerminations</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 - There are no Terminations on a MountingEquipment so this method is

 Retrieves the list of terminations.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTerminations</tt>
   <dd>   The retrieved list of terminations
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIElbMountingEquipment.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATElbInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

