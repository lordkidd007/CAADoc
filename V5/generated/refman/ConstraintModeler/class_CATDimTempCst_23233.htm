<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ConstraintModeler Class CATDimTempCst</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ConstraintModeler.htm" href="../ConstraintModeler.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ConstraintModeler";	}
		function getCurrentObjectName() { 
 	return "CATDimTempCst"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ConstraintModeler <script type="text/javascript" > writeClassCharacteristic(); </script> CATDimTempCst</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDimTempCst_23233','CATDimTempCst','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDimTempCst</b>
</p>
<p>
<b><i> </i></b><br>
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15
 do not use
 Class for temporary 3D constraint visualization.
 <b>Role</b>: It is an adapter. This class contains all the necessary information allowing 
 to consider parameters as constraints.
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDimTempCst()"><b>CATDimTempCst</b></a>()
<dd>   Copy constructor.
 <dt> o 
    <a href="#CATDimTempCst(CATDimTempCst&amp;)"><b>CATDimTempCst</b></a>(CATDimTempCst&amp;)
<dd>   Copy constructor.
 <dt> o 
    <a href="#CATDimTempCst(CATCstType,CATBaseUnknown_var&amp;,CATBoolean,CATBoolean)"><b>CATDimTempCst</b></a>(CATCstType,CATBaseUnknown_var&amp;,CATBoolean,CATBoolean)
<dd>   Constructs a <tt>CATDimTempCst</tt>.
 <dt> o 
    <a href="#~CATDimTempCst()"><b>~CATDimTempCst</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetSector()"><b>GetSector</b></a>()
<dd>  Gets angular sector.
 <dt> o 
    <a href="#SetSector(int)"><b>SetSector</b></a>(int)
<dd>  Sets angular sector.
</dl>
<dl>
</dl>
<dl>
 <h2>Data Member Index</h2> <br>
 <dt> o 
    <a href="#family"><b>family</b></a>
<dd>  Type of the pseudo constraint.
 <dt> o 
    <a href="#half_value"><b>half_value</b></a>
<dd>   By default equal to False.
 <dt> o 
    <a href="#result"><b>result</b></a>
<dd>  Default status of <tt>CstStatus_TRUE</tt>.
 <dt> o 
    <a href="#value"><b>value</b></a>
<dd>  First value.
 <dt> o 
    <a href="#value2"><b>value2</b></a>
<dd>  Second value (chamfer).
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDimTempCst"></a><a name="CATDimTempCst()"></a> <dt> o <b>CATDimTempCst</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDimTempCst</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Copy constructor.
</dl>
<a name="CATDimTempCst"></a><a name="CATDimTempCst(CATDimTempCst&amp;)"></a> <dt> o <b>CATDimTempCst</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDimTempCst</b>(<td> const <script type="text/javascript"> activateLink('CATDimTempCst','CATDimTempCst&amp;')</script> <td><tt>src</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Copy constructor.
</dl>
<a name="CATDimTempCst"></a><a name="CATDimTempCst(CATCstType,CATBaseUnknown_var&amp;,CATBoolean,CATBoolean)"></a> <dt> o <b>CATDimTempCst</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDimTempCst</b>(<td><script type="text/javascript"> activateLink('CATCstType','CATCstType')</script> <td><tt>iFamily</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iDriven</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iValid</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructs a <tt>CATDimTempCst</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFamily</tt>
   <dd> Initialized according to the parameter.
 </dd>
    <dt><tt> iValue</tt>
   <dd> Initialized according to the parameter.
 </dd>
    <dt><tt> iDriven</tt>
   <dd> Boolean.
 </dd>
    <dt><tt> valid</tt>
   <dd> Boolean.</dd>
</dl>
</dl>
</dl>
<a name="~CATDimTempCst"></a><a name="~CATDimTempCst()"></a> <dt> o <b>~CATDimTempCst</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATDimTempCst</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="GetSector"></a><a name="GetSector()"></a> <dt> o <b>GetSector</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSector</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Gets angular sector.
 <pre>
      pt2  <
  1  / 0    )
 ---/--- pt1
  2/   3
 </pre>
 <dl>
 <dt>Value<dd>Description
 <dt>0*0<dd> sectors 0/2 : ang(pt1,pt2,+) 
 <dt>0*1<dd> sectors 1/3 : pi-ang(pt1,pt2,+)
 <dt>1*0<dd> sectors 4/6 : 2*pi-ang(pt1,pt2,+)
 <dt>1*1<dd> sectors 5/7 : pi+ang(pt1,pt2,+)</dl>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   A [0..7] vector. The sector's value is stored on 3 bits:
 <br>#define CATIDimCstCOMP180   0x1
 <br>#define CATIDimCstOPPOSITE  0x2
 <br>#define CATIDimCstCOMP360   0x4
 <br>First bit activated indicates the complementary to pi.
 Second bit activated indicates the opposite side for the same value.
 Third bit activated indicates the complementary to 2*pi.
</dl>
</dl>
<a name="SetSector"></a><a name="SetSector(int)"></a> <dt> o <b>SetSector</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSector</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSector</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets angular sector.
 <pre>
      pt2  <
  1  / 0    )
 ---/--- pt1
  2/   3
 </pre>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSector</tt>
   <dd>  A [0..7] vector.

 see also GetSector() for further information.</dd>
</dl>
</dl>
</dl>
 <h2>Data Members</h2> <br>
<a name="family"></a> <dt> o <b>family</b>
<pre>
  public CATCstType family</dt>
</pre>
<dl>
  <dd>
 Type of the pseudo constraint.
</dl>
<a name="half_value"></a> <dt> o <b>half_value</b>
<pre>
  public CATBoolean half_value</dt>
</pre>
<dl>
  <dd>
  By default equal to False.
  If True it means radius / half angle / half length.
</dl>
<a name="result"></a> <dt> o <b>result</b>
<pre>
  public CATCstStatus result</dt>
</pre>
<dl>
  <dd>
 Default status of <tt>CstStatus_TRUE</tt>.
</dl>
<a name="value"></a> <dt> o <b>value</b>
<pre>
  public CATBaseUnknown_var value</dt>
</pre>
<dl>
  <dd>
 First value.
</dl>
<a name="value2"></a> <dt> o <b>value2</b>
<pre>
  public CATBaseUnknown_var value2</dt>
</pre>
<dl>
  <dd>
 Second value (chamfer).
</dl>
<hr>
 This object is included in the file: <b>CATDimTempCst.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATConstraintModeler</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

