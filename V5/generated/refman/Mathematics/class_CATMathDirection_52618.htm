<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathDirection</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="class_CATMathCurve_29334.htm">Previous</a>  <a href="class_CATMathDirection2D_61968.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Mathematics Class CATMathDirection</h1>
<pre>
<a href="../Mathematics/class_CATMathVector_34767.htm">Mathematics.CATMathVector</a>
  |
  +---CATMathDirection
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathDirection</b>
</p>
<p>
<b><i> Class defining a normalized vector.</i></b><br>
 
 Use now CATMathVector directly and normalize if needed.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathDirection()"><b>CATMathDirection</b></a>()
<dd>  Constructs a (1,0,0) vector.
 <dt> o 
    <a href="#CATMathDirection(CATMathDirection&amp;)"><b>CATMathDirection</b></a>(CATMathDirection&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATMathDirection(CATMathVector&amp;)"><b>CATMathDirection</b></a>(CATMathVector&amp;)
<dd>  Constructs from a CATMathVector.
 <dt> o 
    <a href="#CATMathDirection(double,double,double)"><b>CATMathDirection</b></a>(double,double,double)
<dd>  Constructs a direction from coordinates.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Norm()"><b>Norm</b></a>()
<dd>  Returns the euclidean norm.
 <dt> o 
    <a href="#SetCoord(double,double,double)"><b>SetCoord</b></a>(double,double,double)
<dd>  Modifies the direction coordinates from three doubles.
 <dt> o 
    <a href="#SetCoord(double[])"><b>SetCoord</b></a>(double[])
<dd>  Modifies the direction coordinates from an array of three doubles.
 <dt> o 
    <a href="#SetCylindricalCoord(double,CATAngle,double)"><b>SetCylindricalCoord</b></a>(double,CATAngle,double)
<dd>  Modifies <tt>this</tt> CATMathDirection with cylindrical coordinates.
 <dt> o 
    <a href="#SetSphericalCoord(double,CATAngle,CATAngle)"><b>SetSphericalCoord</b></a>(double,CATAngle,CATAngle)
<dd>  Modifies <tt>this</tt> CATMathDirection with spherical coordinates.
 <dt> o 
    <a href="#SetX(double)"><b>SetX</b></a>(double)
<dd>   Modifies the direction first coordinate.
 <dt> o 
    <a href="#SetY(double)"><b>SetY</b></a>(double)
<dd>   Modifies the direction second coordinate.
 <dt> o 
    <a href="#SetZ(double)"><b>SetZ</b></a>(double)
<dd>   Modifies the direction third coordinate.
 <dt> o 
    <a href="#SquareNorm()"><b>SquareNorm</b></a>()
<dd>  Returns the square of the euclidean norm.
 <dt> o 
    <a href="#operator -(CATMathDirection&amp;)"><b>operator -</b></a>(CATMathDirection&amp;)
<dd>  Defines the opposite of <tt>this</tt> CATMathDirection.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathDirection"></a><a name="CATMathDirection()"></a> <dt> o <b>CATMathDirection</b>

<dt>  <table><tr><td>  public INLINE  <b>CATMathDirection</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a (1,0,0) vector.
</dl>
<a name="CATMathDirection"></a><a name="CATMathDirection(CATMathDirection&amp;)"></a> <dt> o <b>CATMathDirection</b>

<dt>  <table><tr><td>  public INLINE  <b>CATMathDirection</b>(<td> const <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection&amp;</a> <td><tt>iDirectionToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATMathDirection"></a><a name="CATMathDirection(CATMathVector&amp;)"></a> <dt> o <b>CATMathDirection</b>

<dt>  <table><tr><td>  public INLINE  <b>CATMathDirection</b>(<td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iVector</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs from a CATMathVector.
</dl>
<a name="CATMathDirection"></a><a name="CATMathDirection(double,double,double)"></a> <dt> o <b>CATMathDirection</b>

<dt>  <table><tr><td>  public INLINE  <b>CATMathDirection</b>(<td> const double <td><tt>iFirstCoord</tt>,<tr><td></td><td> const double <td><tt>iSecondCoord</tt>,<tr><td></td><td> const double <td><tt>iThirdCoord</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a direction from coordinates.
</dl>
 <h2>Methods</h2> <br>
<a name="Norm"></a><a name="Norm()"></a> <dt> o <b>Norm</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>Norm</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the euclidean norm.
</dl>
<a name="SetCoord"></a><a name="SetCoord(double,double,double)"></a> <dt> o <b>SetCoord</b>

<dt>  <table><tr><td>  public INLINE void  <b>SetCoord</b>(<td> const double <td><tt>iFirstCoord</tt>,<tr><td></td><td> const double <td><tt>iSecondCoord</tt>,<tr><td></td><td> const double <td><tt>iThirdCoord</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the direction coordinates from three doubles.
</dl>
<a name="SetCoord"></a><a name="SetCoord(double[])"></a> <dt> o <b>SetCoord</b>

<dt>  <table><tr><td>  public INLINE void  <b>SetCoord</b>(<td> const double[] <td><tt>iCoord</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the direction coordinates from an array of three doubles.
</dl>
<a name="SetCylindricalCoord"></a><a name="SetCylindricalCoord(double,CATAngle,double)"></a> <dt> o <b>SetCylindricalCoord</b>

<dt>  <table><tr><td>  public void  <b>SetCylindricalCoord</b>(<td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../Mathematics/typedef_CATAngle_12506.htm">CATAngle</a> <td><tt>iAngle</tt>,<tr><td></td><td> const double <td><tt>iHeight</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies <tt>this</tt> CATMathDirection with cylindrical coordinates.
 <br><tt>iAngle</tt> is expressed in radians.
</dl>
<a name="SetSphericalCoord"></a><a name="SetSphericalCoord(double,CATAngle,CATAngle)"></a> <dt> o <b>SetSphericalCoord</b>

<dt>  <table><tr><td>  public void  <b>SetSphericalCoord</b>(<td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../Mathematics/typedef_CATAngle_12506.htm">CATAngle</a> <td><tt>iLongitudeAngle</tt>,<tr><td></td><td> const <a href="../Mathematics/typedef_CATAngle_12506.htm">CATAngle</a> <td><tt>iLatitudeAngle</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies <tt>this</tt> CATMathDirection with spherical coordinates.
 <br><tt>iLongitudeAngle</tt> and <tt>iLatitudeAngle</tt>
  are expressed in radians.
</dl>
<a name="SetX"></a><a name="SetX(double)"></a> <dt> o <b>SetX</b>

<dt>  <table><tr><td>  public INLINE void  <b>SetX</b>(<td> const double <td><tt>iFirstCoord</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Modifies the direction first coordinate.
</dl>
<a name="SetY"></a><a name="SetY(double)"></a> <dt> o <b>SetY</b>

<dt>  <table><tr><td>  public INLINE void  <b>SetY</b>(<td> const double <td><tt>iSecondCoord</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Modifies the direction second coordinate.
</dl>
<a name="SetZ"></a><a name="SetZ(double)"></a> <dt> o <b>SetZ</b>

<dt>  <table><tr><td>  public INLINE void  <b>SetZ</b>(<td> const double <td><tt>iThirdCoord</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Modifies the direction third coordinate.
</dl>
<a name="SquareNorm"></a><a name="SquareNorm()"></a> <dt> o <b>SquareNorm</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>SquareNorm</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the square of the euclidean norm.
</dl>
<a name="operator -"></a><a name="operator -(CATMathDirection&amp;)"></a> <dt> o <b>operator -</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathDirection_52618.htm">INLINE friend  CATMathDirection</a>  <b>operator -</b>(<td> const <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection&amp;</a> <td><tt>iDirection</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Defines the opposite of <tt>this</tt> CATMathDirection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDirection</tt>
   <dd> The CATMathDirection of <tt>(u1,u2,u3)</tt> coordinates.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The CATMathDirection of <tt>(-u1,-u2,-u3)</tt> coordinates.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMathDirection.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
