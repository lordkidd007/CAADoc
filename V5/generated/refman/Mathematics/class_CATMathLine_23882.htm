<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathLine</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="class_CATMathGridOfVectors_81306.htm">Previous</a>  <a href="class_CATMathLine2D_30388.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Mathematics Class CATMathLine</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../Mathematics/class_CATMathCurve_29334.htm">Mathematics.CATMathCurve</a>
    |
    +---CATMathLine
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathLine</b>
</p>
<p>
<b><i> Class representing an untrimmed 3D mathematical line.</i></b><br>

 <br>It is composed of an <tt>_Origin</tt> (CATMathPoint),
 a normalized vector <tt>_Direction</tt> (CATMathVector),
 and a scale <tt>_Scale</tt>.
 The parameterization of the CATMathMathLine is defined as follows:
 <tt>Line(Param) = Line._Origin + <b>Param</b> * Line._Scale * Line._Direction</tt>,
 where <tt>Param</tt> is the parameter.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathLine()"><b>CATMathLine</b></a>()
<dd>  Constructs a CATMathLine passing through (0,0,0), with (1,0,0)
 direction .
 <dt> o 
    <a href="#CATMathLine(CATMathLine&amp;)"><b>CATMathLine</b></a>(CATMathLine&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATMathLine(CATMathPoint&amp;,CATMathPoint&amp;)"><b>CATMathLine</b></a>(CATMathPoint&amp;,CATMathPoint&amp;)
<dd>  
 <dt> o 
    <a href="#CATMathLine(CATMathPoint&amp;,CATMathVector&amp;)"><b>CATMathLine</b></a>(CATMathPoint&amp;,CATMathVector&amp;)
<dd>  
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#DistanceTo(CATMathLine&amp;,double&amp;,double&amp;,int&amp;)"><b>DistanceTo</b></a>(CATMathLine&amp;,double&amp;,double&amp;,int&amp;)
<dd>  Returns the distance between two CATMathLines.
 <dt> o 
    <a href="#DistanceTo(CATMathPoint&amp;)"><b>DistanceTo</b></a>(CATMathPoint&amp;)
<dd>  Returns the distance between <tt>this</tt> CATMathLine and a CATMathPoint.
 <dt> o 
    <a href="#EvalPoint(double)"><b>EvalPoint</b></a>(double)
<dd>  Returns the point of <tt>this</tt> CATMathLine corresponding to a given parameter.
 <dt> o 
    <a href="#EvalPoint(double,CATMathPoint&amp;)"><b>EvalPoint</b></a>(double,CATMathPoint&amp;)
<dd>  Returns the point of <tt>this</tt> CATMathLine corresponding to a given parameter.
 <dt> o 
    <a href="#GetDirection()"><b>GetDirection</b></a>()
<dd>  Returns the direction of <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#GetDirection(CATMathVector&amp;)"><b>GetDirection</b></a>(CATMathVector&amp;)
<dd>  Returns the direction of <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#GetMathType()"><b>GetMathType</b></a>()
<dd>  Returns the mathematical type.
 <dt> o 
    <a href="#GetOrigin()"><b>GetOrigin</b></a>()
<dd>  Returns the origin of <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#GetOrigin(CATMathPoint&amp;)"><b>GetOrigin</b></a>(CATMathPoint&amp;)
<dd>  Returns the origin of <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#GetParam(CATMathPoint&amp;,double*,double,double,double)"><b>GetParam</b></a>(CATMathPoint&amp;,double*,double,double,double)
<dd>  Retrieves the param on <tt>this</tt> CATMathLine corresponding to a CATMathPoint
 inside limitations.
 <dt> o 
    <a href="#GetScale()"><b>GetScale</b></a>()
<dd>  Returns the scale of <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#Intersect(CATMathLine&amp;,double,double,double,double,double,double&amp;,double&amp;)"><b>Intersect</b></a>(CATMathLine&amp;,double,double,double,double,double,double&amp;,double&amp;)
<dd>  Intersects <tt>this</tt> CATMathLine with another one.
 <dt> o 
    <a href="#IsA()"><b>IsA</b></a>()
<dd>  Returns the class name: <tt>CATMathLine</tt>.
 <dt> o 
    <a href="#Project(CATMathPoint&amp;,CATMathPoint&amp;)"><b>Project</b></a>(CATMathPoint&amp;,CATMathPoint&amp;)
<dd>  Projects a CATMathPoint on <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#Project(CATMathPoint&amp;,double&amp;)"><b>Project</b></a>(CATMathPoint&amp;,double&amp;)
<dd>  Projects a CATMathPoint on <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#ReverseDirection()"><b>ReverseDirection</b></a>()
<dd>  Changes the parameter orientation of <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#Set(CATMathPoint&amp;,CATMathPoint&amp;)"><b>Set</b></a>(CATMathPoint&amp;,CATMathPoint&amp;)
<dd>  Constructs from two CATMathPoints.
 <dt> o 
    <a href="#Set(CATMathPoint&amp;,CATMathVector&amp;)"><b>Set</b></a>(CATMathPoint&amp;,CATMathVector&amp;)
<dd>  Set from a CATMathPoint and a CATMathVector.
 <dt> o 
    <a href="#SetDirection(CATMathVector&amp;)"><b>SetDirection</b></a>(CATMathVector&amp;)
<dd>  
 <dt> o 
    <a href="#SetOrigin(CATMathPoint&amp;)"><b>SetOrigin</b></a>(CATMathPoint&amp;)
<dd>  Modifies the origin of <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#SetScale(double)"><b>SetScale</b></a>(double)
<dd>  Modifies the scale of <tt>this</tt> CATMathLine.
 <dt> o 
    <a href="#SetVector(CATMathVector&amp;)"><b>SetVector</b></a>(CATMathVector&amp;)
<dd>  Modifies the (normalized) direction of <tt>this</tt> CATMathLine.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathLine"></a><a name="CATMathLine()"></a> <dt> o <b>CATMathLine</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathLine</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathLine passing through (0,0,0), with (1,0,0)
 direction .
</dl>
<a name="CATMathLine"></a><a name="CATMathLine(CATMathLine&amp;)"></a> <dt> o <b>CATMathLine</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathLine</b>(<td> const <a href="../Mathematics/class_CATMathLine_23882.htm">CATMathLine&amp;</a> <td><tt>iLineToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATMathLine"></a><a name="CATMathLine(CATMathPoint&amp;,CATMathPoint&amp;)"></a> <dt> o <b>CATMathLine</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathLine</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iOrigin</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iSecondPoint</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 Set
 Constructs from two CATMathPoints.
 <br>Throws an error if the two points are confused.
</dl>
</dl>
<a name="CATMathLine"></a><a name="CATMathLine(CATMathPoint&amp;,CATMathVector&amp;)"></a> <dt> o <b>CATMathLine</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathLine</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iOrigin</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iVector</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 Set
 Constructs from a CATMathPoint and a CATMathVector.
 <br>Throws an error if the vector is null.
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="DistanceTo"></a><a name="DistanceTo(CATMathLine&amp;,double&amp;,double&amp;,int&amp;)"></a> <dt> o <b>DistanceTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>DistanceTo</b>(<td> const <a href="../Mathematics/class_CATMathLine_23882.htm">CATMathLine&amp;</a> <td><tt>iOtherLine</tt>,<tr><td></td><td>double&amp; <td><tt>ioParamOnOtherLine</tt>,<tr><td></td><td>double&amp; <td><tt>ioParamOnThisLine</tt>,<tr><td></td><td>int&amp; <td><tt>ioDiagnosis</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the distance between two CATMathLines.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioParamOnOtherLine</tt>
   <dd>   The parameter of the point of <tt>iOtherLine</tt> closest to <tt>this</tt> CATMathLine.
 </dd>
    <dt><tt> ioParamOnThisLine</tt>
   <dd>   Parameter of the point of <tt>this</tt> CATMathLine closest to <tt>iOtherLine</tt>.
 </dd>
    <dt><tt> ioDiagnosis</tt>
   <dd>  <dl>
 <dt><tt>0</tt>        <dd>if the lines are parallel (in this case,
                       <tt>oParamOnLine1</tt> and <tt>oParamOnLine2</tt>
                       are null).
 <dt><tt>1</tt>        <dd>if the lines are not parallel.
 <dt><tt>2</tt>        <dd>if the lines are identical (in this case,
                       <tt>oParamOnLine1</tt> and <tt>oParamOnLine2</tt>
                       are null).
 </dl></dd>
</dl>
</dl>
</dl>
<a name="DistanceTo"></a><a name="DistanceTo(CATMathPoint&amp;)"></a> <dt> o <b>DistanceTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>DistanceTo</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iPoint</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the distance between <tt>this</tt> CATMathLine and a CATMathPoint.
</dl>
<a name="EvalPoint"></a><a name="EvalPoint(double)"></a> <dt> o <b>EvalPoint</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint</a>  <b>EvalPoint</b>(<td> const double <td><tt>iBid</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the point of <tt>this</tt> CATMathLine corresponding to a given parameter.
 The signature which returns the CATMathPoint as an output argument should be preferably used.
</dl>
<a name="EvalPoint"></a><a name="EvalPoint(double,CATMathPoint&amp;)"></a> <dt> o <b>EvalPoint</b>

<dt>  <table><tr><td>  public void  <b>EvalPoint</b>(<td> const double <td><tt>iParam</tt>,<tr><td></td><td><a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>ioResult</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the point of <tt>this</tt> CATMathLine corresponding to a given parameter.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>ioResult=Line._Origin + <b>iParam</b> * Line._Scale * Line._Direction</tt>
</dl>
</dl>
<a name="GetDirection"></a><a name="GetDirection()"></a> <dt> o <b>GetDirection</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection</a>  <b>GetDirection</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the direction of <tt>this</tt> CATMathLine. The signature which returns a CATMathDirection in output argument 
 should be preferably used.
</dl>
<a name="GetDirection"></a><a name="GetDirection(CATMathVector&amp;)"></a> <dt> o <b>GetDirection</b>

<dt>  <table><tr><td>  public void  <b>GetDirection</b>(<td><a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>ioDirection</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the direction of <tt>this</tt> CATMathLine.
</dl>
<a name="GetMathType"></a><a name="GetMathType()"></a> <dt> o <b>GetMathType</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/define_CATMathematicType_59631.htm">CATMathematicType</a>  <b>GetMathType</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the mathematical type.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The CATMathematicType.
</dl>
</dl>
<a name="GetOrigin"></a><a name="GetOrigin()"></a> <dt> o <b>GetOrigin</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint</a>  <b>GetOrigin</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the origin of <tt>this</tt> CATMathLine. The signature which returns a CATMathPoint in output argument 
 should be preferably used.
</dl>
<a name="GetOrigin"></a><a name="GetOrigin(CATMathPoint&amp;)"></a> <dt> o <b>GetOrigin</b>

<dt>  <table><tr><td>  public void  <b>GetOrigin</b>(<td><a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>ioOrigin</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the origin of <tt>this</tt> CATMathLine.
</dl>
<a name="GetParam"></a><a name="GetParam(CATMathPoint&amp;,double*,double,double,double)"></a> <dt> o <b>GetParam</b>

<dt>  <table><tr><td>  public int  <b>GetParam</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iPoint</tt>,<tr><td></td><td>double* <td><tt>ioParam</tt>,<tr><td></td><td> const double <td><tt>iTol</tt>,<tr><td></td><td> const double <td><tt>iStartParam</tt>,<tr><td></td><td> const double <td><tt>iEndParam</tt>) const  </table></dt>
<dl>
  <dd>
 Retrieves the param on <tt>this</tt> CATMathLine corresponding to a CATMathPoint
 inside limitations.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The CATMathPoint which coordinates are to be transformed as a param.
 </dd>
    <dt><tt> ioParam</tt>
   <dd> The param on <tt>this</tt> corresponding to <tt>iPoint</tt>. 
 </dd>
    <dt><tt> iTol</tt>
   <dd> The 3D tolerance, defining a tube along the line with two hemispheres at each end.
 If the input point is not inside this tube, no parameter is retrieved.
 </dd>
    <dt><tt> iStartParam,</tt>
   <dd> iEndParam The limits, expressed as parameters, to take into account for trimming <tt>this</tt> CATMathLine.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of parameters that can be evaluated on this point.
 <dl><dt> 0  <dd>No parameter corresponds to this point.
     <dt> 1  <dd>Only one parameter corresponds to this point.
     <dt> 2  <dd>Two parameters correspond to this point.
</dl>
</dl>
</dl>
<a name="GetScale"></a><a name="GetScale()"></a> <dt> o <b>GetScale</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetScale</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the scale of <tt>this</tt> CATMathLine.
</dl>
<a name="Intersect"></a><a name="Intersect(CATMathLine&amp;,double,double,double,double,double,double&amp;,double&amp;)"></a> <dt> o <b>Intersect</b>

<dt>  <table><tr><td>  public int  <b>Intersect</b>(<td> const <a href="../Mathematics/class_CATMathLine_23882.htm">CATMathLine&amp;</a> <td><tt>iOtherLine</tt>,<tr><td></td><td>double <td><tt>iStartParamOnOtherLine</tt>,<tr><td></td><td>double <td><tt>iEndParamOnOtherLine</tt>,<tr><td></td><td>double <td><tt>iStartParamOnThis</tt>,<tr><td></td><td>double <td><tt>iEndParamOnThis</tt>,<tr><td></td><td>double <td><tt>iTol</tt>,<tr><td></td><td>double&amp; <td><tt>ioParamOnOtherLine</tt>,<tr><td></td><td>double&amp; <td><tt>ioParamOnThisLine</tt>) const  </table></dt>
<dl>
  <dd>
 Intersects <tt>this</tt> CATMathLine with another one. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOtherLine</tt>
   <dd>    The other CATMathLine to intersect. 
 </dd>
    <dt><tt> iStartParamOnOtherLine,</tt>
   <dd> iEndParamOnOtherLine   The limits to take into account for <tt>iOtherLine</tt>.
 </dd>
    <dt><tt> iStartParamOnThis,</tt>
   <dd> iEndParamOnThis   The limits to take into account for <tt>this</tt> CATMathLine.
 </dd>
    <dt><tt> ioParamOnLine1</tt>
   <dd>    The parameter of the intersection on <tt>iOtherLine</tt>. 
 </dd>
    <dt><tt> ioParamOnLine2</tt>
   <dd>   The parameter of the intersection on <tt>this</tt> CATMathLine. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>0</tt>        <dd>if there is no intersection
 <dt><tt>1</tt>        <dd>if there is an intersection
 </dl>
</dl>
</dl>
<a name="IsA"></a><a name="IsA()"></a> <dt> o <b>IsA</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/typedef_CATMathClassId_38266.htm">CATMathClassId</a>  <b>IsA</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the class name: <tt>CATMathLine</tt>.
</dl>
<a name="Project"></a><a name="Project(CATMathPoint&amp;,CATMathPoint&amp;)"></a> <dt> o <b>Project</b>

<dt>  <table><tr><td>  public void  <b>Project</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iPointToProject</tt>,<tr><td></td><td><a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>ioProjectedPoint</tt>) const  </table></dt>
<dl>
  <dd>
 Projects a CATMathPoint on <tt>this</tt> CATMathLine.
</dl>
<a name="Project"></a><a name="Project(CATMathPoint&amp;,double&amp;)"></a> <dt> o <b>Project</b>

<dt>  <table><tr><td>  public void  <b>Project</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iPointToProject</tt>,<tr><td></td><td>double&amp; <td><tt>ioParam</tt>) const  </table></dt>
<dl>
  <dd>
 Projects a CATMathPoint on <tt>this</tt> CATMathLine.
</dl>
<a name="ReverseDirection"></a><a name="ReverseDirection()"></a> <dt> o <b>ReverseDirection</b>

<dt>  <table><tr><td>  public void  <b>ReverseDirection</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Changes the parameter orientation of <tt>this</tt> CATMathLine.
</dl>
<a name="Set"></a><a name="Set(CATMathPoint&amp;,CATMathPoint&amp;)"></a> <dt> o <b>Set</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Set</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iOrigin</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iSecondPoint</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs from two CATMathPoints.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if the two points are confused, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="Set"></a><a name="Set(CATMathPoint&amp;,CATMathVector&amp;)"></a> <dt> o <b>Set</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Set</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iOrigin</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iVector</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Set from a CATMathPoint and a CATMathVector.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if the vector is null, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="SetDirection"></a><a name="SetDirection(CATMathVector&amp;)"></a> <dt> o <b>SetDirection</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>SetDirection</b>(<td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iVector</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 SetVector
 Modifies the (normalized) direction of <tt>this</tt> CATMathLine. 
 <br>Throws an error if the new direction is null.
 
  <dt> <b>Returns:</b> 
  <dd>   <tt>FALSE</tt> if the new direction is null, <tt>TRUE</tt> otherwise.
</dl>
</dl>
<a name="SetOrigin"></a><a name="SetOrigin(CATMathPoint&amp;)"></a> <dt> o <b>SetOrigin</b>

<dt>  <table><tr><td>  public void  <b>SetOrigin</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iOrigin</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the origin of <tt>this</tt> CATMathLine.
</dl>
<a name="SetScale"></a><a name="SetScale(double)"></a> <dt> o <b>SetScale</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>SetScale</b>(<td>double <td><tt>iScale</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the scale of <tt>this</tt> CATMathLine. 

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iScale.The</tt>
   <dd> new scale.
 <br>Throws an error if the new scale is null.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>FALSE</tt> if the new scale is null, <tt>TRUE</tt> otherwise.
</dl>
</dl>
<a name="SetVector"></a><a name="SetVector(CATMathVector&amp;)"></a> <dt> o <b>SetVector</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetVector</b>(<td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iVector</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Modifies the (normalized) direction of <tt>this</tt> CATMathLine. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if the new direction is null, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMathLine.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
