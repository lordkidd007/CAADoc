<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathCircleArc2D</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="class_CATMathCircle_33622.htm">Previous</a>  <a href="class_CATMathComplex_40356.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Mathematics Class CATMathCircleArc2D</h1>
<pre>
CATMathCircleArc2D
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathCircleArc2D</b>
</p>
<p>
<b><i> Class representing an arc of a circle.</i></b><br>

<br>It is defined by a CATMathPoint (<tt>Center</tt>), a CATMathLength
(<tt>Radius</tt>) and 2 angles (<tt>StartAngle</tt> and
<tt>EndAngle</tt>). The angles are expressed in radians and
<br><tt> 0 < StartAngle < CAT2PI ,
 StartAngle < EndAngle < StartAngle + CAT2PI</tt>.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathCircleArc2D()"><b>CATMathCircleArc2D</b></a>()
<dd>  Constructs an empty CATMathCircleArc2D without valued data.
 <dt> o 
    <a href="#CATMathCircleArc2D(CATMathPoint2D&amp;,CATMathPoint2D&amp;,CATMathPoint2D&amp;)"><b>CATMathCircleArc2D</b></a>(CATMathPoint2D&amp;,CATMathPoint2D&amp;,CATMathPoint2D&amp;)
<dd>   Constructs a CATMathCircleArc2D from 3 CATMathPoint.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCenter(CATMathPoint2D&amp;)"><b>GetCenter</b></a>(CATMathPoint2D&amp;)
<dd>  Returns the center of <tt>this</tt> CATMathCircleArc2D.
 <dt> o 
    <a href="#GetEndAngle()"><b>GetEndAngle</b></a>()
<dd>  Returns the last limiting angle of <tt>this</tt> CATMathCircleArc2D in radian.
 <dt> o 
    <a href="#GetRadius()"><b>GetRadius</b></a>()
<dd>  Returns the radius of <tt>this</tt> CATMathCircleArc2D.
 <dt> o 
    <a href="#GetStartAngle()"><b>GetStartAngle</b></a>()
<dd>  Returns the first limiting angle of <tt>this</tt> CATMathCircleArc2D in radian.
 <dt> o 
    <a href="#IsEmpty()"><b>IsEmpty</b></a>()
<dd>  Returns <tt>0</tt> if the data of <tt>this</tt> CATMathCircleArc2D are valuated.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathCircleArc2D"></a><a name="CATMathCircleArc2D()"></a> <dt> o <b>CATMathCircleArc2D</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathCircleArc2D</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an empty CATMathCircleArc2D without valued data.
<br>This is mainly used for array creation. The use of an empty
 CATMathCircleArc2D leads to an exception, except for the IsEmpty
 method.
</dl>
<a name="CATMathCircleArc2D"></a><a name="CATMathCircleArc2D(CATMathPoint2D&amp;,CATMathPoint2D&amp;,CATMathPoint2D&amp;)"></a> <dt> o <b>CATMathCircleArc2D</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathCircleArc2D</b>(<td> const <a href="../Mathematics/class_CATMathPoint2D_36618.htm">CATMathPoint2D&amp;</a> <td><tt>iLimit</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathPoint2D_36618.htm">CATMathPoint2D&amp;</a> <td><tt>iMiddle</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathPoint2D_36618.htm">CATMathPoint2D&amp;</a> <td><tt>iOtherLimit</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Constructs a CATMathCircleArc2D from 3 CATMathPoint.
<br>The circle is limited by the first and  third points, without order.
 The program defines itself the corresponding <tt>StartAngle</tt> and
 <tt>EndAngle</tt>. 
 The second point belongs to the CATMathCircleArc2D. <br>
 This constructor produces an error when the iLimit and iMiddle points are  
 coincident. When iLimit and iOtherLimit are coincident, an arc whose 
 diameter ends are iLimit and iOtherLimit is constructed.
</dl>
 <h2>Methods</h2> <br>
<a name="GetCenter"></a><a name="GetCenter(CATMathPoint2D&amp;)"></a> <dt> o <b>GetCenter</b>

<dt>  <table><tr><td>  public void  <b>GetCenter</b>(<td><a href="../Mathematics/class_CATMathPoint2D_36618.htm">CATMathPoint2D&amp;</a> <td><tt>ioOrigin</tt>) const   </table></dt>
<dl>
  <dd>
 Returns the center of <tt>this</tt> CATMathCircleArc2D.
</dl>
<a name="GetEndAngle"></a><a name="GetEndAngle()"></a> <dt> o <b>GetEndAngle</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/typedef_CATAngle_12506.htm">CATAngle</a>  <b>GetEndAngle</b>(<td>)const   </table></dt>
<dl>
  <dd>
 Returns the last limiting angle of <tt>this</tt> CATMathCircleArc2D in radian.
</dl>
<a name="GetRadius"></a><a name="GetRadius()"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/typedef_CATPositiveLength_60203.htm">CATPositiveLength</a>  <b>GetRadius</b>(<td>)const   </table></dt>
<dl>
  <dd>
 Returns the radius of <tt>this</tt> CATMathCircleArc2D.
</dl>
<a name="GetStartAngle"></a><a name="GetStartAngle()"></a> <dt> o <b>GetStartAngle</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/typedef_CATAngle_12506.htm">CATAngle</a>  <b>GetStartAngle</b>(<td>)const   </table></dt>
<dl>
  <dd>
 Returns the first limiting angle of <tt>this</tt> CATMathCircleArc2D in radian.
</dl>
<a name="IsEmpty"></a><a name="IsEmpty()"></a> <dt> o <b>IsEmpty</b>

<dt>  <table><tr><td>  public short  <b>IsEmpty</b>(<td>)const   </table></dt>
<dl>
  <dd>
 Returns <tt>0</tt> if the data of <tt>this</tt> CATMathCircleArc2D are valuated.
</dl>
<hr>
 This object is included in the file: <b>CATMathCircleArc2D.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
