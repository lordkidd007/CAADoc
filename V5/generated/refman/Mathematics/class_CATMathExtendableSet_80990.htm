<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathExtendableSet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="class_CATMathDirectionf_59359.htm">Previous</a>  <a href="class_CATMathGrid_23820.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Mathematics Class CATMathExtendableSet</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---CATMathExtendableSet
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathExtendableSet</b>
</p>
<p>
<b><i> Class handling the allocation for a set or grid
 of points or vectors.</i></b><br>

<br>This class contains an array of pointers, and is derived to specialize
 the type of pointers and the operations that can be done.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathExtendableSet()"><b>CATMathExtendableSet</b></a>()
<dd>  Constructs an empty CATMathExtendableSet of null size.
 <dt> o 
    <a href="#CATMathExtendableSet(CATLONG32)"><b>CATMathExtendableSet</b></a>(CATLONG32)
<dd>  Constructs a CATMathExtendableSet of a given size.
 <dt> o 
    <a href="#~CATMathExtendableSet()"><b>~CATMathExtendableSet</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Compress()"><b>Compress</b></a>()
<dd>  Releases the unused memory according to the last specified size.
 <dt> o 
    <a href="#GetAllCoef()"><b>GetAllCoef</b></a>()
<dd>  Gets all coef.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathExtendableSet"></a><a name="CATMathExtendableSet()"></a> <dt> o <b>CATMathExtendableSet</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathExtendableSet</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an empty CATMathExtendableSet of null size.
</dl>
<a name="CATMathExtendableSet"></a><a name="CATMathExtendableSet(CATLONG32)"></a> <dt> o <b>CATMathExtendableSet</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathExtendableSet</b>(<td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iSizeInDouble</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathExtendableSet of a given size.
</dl>
<a name="~CATMathExtendableSet"></a><a name="~CATMathExtendableSet()"></a> <dt> o <b>~CATMathExtendableSet</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATMathExtendableSet</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="Compress"></a><a name="Compress()"></a> <dt> o <b>Compress</b>

<dt>  <table><tr><td>  public virtual void  <b>Compress</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Releases the unused memory according to the last specified size.
<br>This is particulary useful after a modification of a derived object.
</dl>
<a name="GetAllCoef"></a><a name="GetAllCoef()"></a> <dt> o <b>GetAllCoef</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">const double *</a>  <b>GetAllCoef</b>(<td>)</table></dt>
<dl>
  <dd>
 Gets all coef. 
<br>The array is a part of "this" and must not be deallocated.
</dl>
<hr>
 This object is included in the file: <b>CATMathExtendableSet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
