<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathTransformation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="class_CATMathStream_34402.htm">Previous</a>  <a href="class_CATMathTransformation1D_105430.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Mathematics Class CATMathTransformation</h1>
<pre>
CATMathTransformation
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathTransformation</b>
</p>
<p>
<b><i> Class representing a transformation in dimension 3.</i></b><br>

 <br>It is composed of a matrix <tt>Matrix</tt>, 
 and of a translation <tt>Vector</tt>.
<br><tt><table width = 40>
    <tr><td> Matrix= </td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td> Vector= </td><td> u1 </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td>         </td><td> u2 </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td>         </td><td> u3 </td></tr>
        </table></tt>
 <br>Apply transformations by using the <tt>*</tt> operator.
 <br>Available transformations are scaling, translation, reflection, 
 rotation.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathTransformation()"><b>CATMathTransformation</b></a>()
<dd>  Constructs an Identity transformation.
 <dt> o 
    <a href="#CATMathTransformation(CATAngle&amp;,CATMathLine&amp;)"><b>CATMathTransformation</b></a>(CATAngle&amp;,CATMathLine&amp;)
<dd>  Constructs a rotation (radians).
 <dt> o 
    <a href="#CATMathTransformation(CATMath3x3Matrix&amp;,CATMathVector&amp;)"><b>CATMathTransformation</b></a>(CATMath3x3Matrix&amp;,CATMathVector&amp;)
<dd>  Constructs a CATMathTransformation from a CATMath3x3Matrix and a CATMathVector.
 <dt> o 
    <a href="#CATMathTransformation(CATMathAxis&amp;,CATMathAxis&amp;)"><b>CATMathTransformation</b></a>(CATMathAxis&amp;,CATMathAxis&amp;)
<dd>  
 <dt> o 
    <a href="#CATMathTransformation(CATMathAxis&amp;,double[])"><b>CATMathTransformation</b></a>(CATMathAxis&amp;,double[])
<dd>  Constructs an affinity with respect to a given ratio for each direction of a CATMathAxis.
 <dt> o 
    <a href="#CATMathTransformation(CATMathPlane&amp;)"><b>CATMathTransformation</b></a>(CATMathPlane&amp;)
<dd>  Constructs a reflection on a plane.
 <dt> o 
    <a href="#CATMathTransformation(CATMathPlane&amp;,double)"><b>CATMathTransformation</b></a>(CATMathPlane&amp;,double)
<dd>  Constructs an affinity with respect to a plane.
 <dt> o 
    <a href="#CATMathTransformation(CATMathPoint&amp;,CATMathVector&amp;)"><b>CATMathTransformation</b></a>(CATMathPoint&amp;,CATMathVector&amp;)
<dd>  Constructs a reflection from a CATMathPoint and a CATMathVector.
 <dt> o 
    <a href="#CATMathTransformation(CATMathPoint&amp;,double)"><b>CATMathTransformation</b></a>(CATMathPoint&amp;,double)
<dd>  Constructs a scaling.
 <dt> o 
    <a href="#CATMathTransformation(CATMathTransformation&amp;)"><b>CATMathTransformation</b></a>(CATMathTransformation&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATMathTransformation(CATMathVector&amp;)"><b>CATMathTransformation</b></a>(CATMathVector&amp;)
<dd>  Constructs a translation.
 <dt> o 
    <a href="#CATMathTransformation(double,CATMathTransformation&amp;,CATMathTransformation&amp;)"><b>CATMathTransformation</b></a>(double,CATMathTransformation&amp;,CATMathTransformation&amp;)
<dd>  
 <dt> o 
    <a href="#CATMathTransformation(double[],CATLONG32)"><b>CATMathTransformation</b></a>(double[],CATLONG32)
<dd> Throws an error if iNbCoeff value is not 12 or 16.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ComputeInverse(CATMathTransformation&amp;)"><b>ComputeInverse</b></a>(CATMathTransformation&amp;)
<dd>  Retrieves the inverse of <tt>this</tt> CATMathTransformation.
 <dt> o 
    <a href="#Dump(ostream*)"><b>Dump</b></a>(ostream*)
<dd>  Dumps <tt>this</tt> CATMathTransformation.
 <dt> o 
    <a href="#GetCoef(double[],CATLONG32)"><b>GetCoef</b></a>(double[],CATLONG32)
<dd>  
 <dt> o 
    <a href="#GetCoefficients(double[],CATLONG32)"><b>GetCoefficients</b></a>(double[],CATLONG32)
<dd> Retrieves the coefficients of <tt>this</tt> CATMathTransformation in an array[] of doubles.
 <dt> o 
    <a href="#GetMatrix(CATMath3x3Matrix&amp;)"><b>GetMatrix</b></a>(CATMath3x3Matrix&amp;)
<dd>  Retrieves the CATMath3x3Matrix associated with <tt>this</tt> CATMathTransformation.
 <dt> o 
    <a href="#GetVector(CATMathVector&amp;)"><b>GetVector</b></a>(CATMathVector&amp;)
<dd>  Retrieves the CATMathVector associated with <tt>this</tt> CATMathTransformation.
 <dt> o 
    <a href="#Inverse(CATMathTransformation&amp;)"><b>Inverse</b></a>(CATMathTransformation&amp;)
<dd>  
 <dt> o 
    <a href="#IsIdentity()"><b>IsIdentity</b></a>()
<dd>  Tests if <tt>this</tt> CATMathTransformation is the identity (invariant).
 <dt> o 
    <a href="#IsIsometry()"><b>IsIsometry</b></a>()
<dd>  Tests if <tt>this</tt> CATMathTransformation is an isometry (keeps the distances).
 <dt> o 
    <a href="#IsReflection(CATMathPlane&amp;)"><b>IsReflection</b></a>(CATMathPlane&amp;)
<dd>  Tests if <tt>this</tt> CATMathTransformation is a reflection and retrieves the reflect plane.
 <dt> o 
    <a href="#IsRotation(CATAngle&amp;,CATMathLine&amp;,double)"><b>IsRotation</b></a>(CATAngle&amp;,CATMathLine&amp;,double)
<dd>  Tests if <tt>this</tt> CATMathTransformation is a rotation and retrieves the axis and the
 angle in radian.
 <dt> o 
    <a href="#IsScaling(CATMathPoint&amp;,double&amp;)"><b>IsScaling</b></a>(CATMathPoint&amp;,double&amp;)
<dd>  Tests if <tt>this</tt> CATMathTransformation is a scaling and retrieves the Origin and 
 the Scale.
 <dt> o 
    <a href="#IsSimilitude(double&amp;)"><b>IsSimilitude</b></a>(double&amp;)
<dd>  Tests if <tt>this</tt> CATMathTransformation is a similitude and retrieves the scale.
 <dt> o 
    <a href="#Set(CATMathAxis&amp;,CATMathAxis&amp;)"><b>Set</b></a>(CATMathAxis&amp;,CATMathAxis&amp;)
<dd>  Set an transformation of axis systems.
 <dt> o 
    <a href="#Set(double,CATMathTransformation&amp;,CATMathTransformation&amp;)"><b>Set</b></a>(double,CATMathTransformation&amp;,CATMathTransformation&amp;)
<dd>  Set an interpolation of an isometry.
 <dt> o 
    <a href="#SetCoef(double[],CATLONG32)"><b>SetCoef</b></a>(double[],CATLONG32)
<dd>  
 <dt> o 
    <a href="#SetCoefficients(double[],CATLONG32)"><b>SetCoefficients</b></a>(double[],CATLONG32)
<dd> Modifies the coefficients of <tt>this</tt> CATMathTransformation from an array[] of doubles.
 <dt> o 
    <a href="#SetMatrix(CATMath3x3Matrix&amp;)"><b>SetMatrix</b></a>(CATMath3x3Matrix&amp;)
<dd>  Sets the matrix of <tt>this</tt> CATMathTransformation.
 <dt> o 
    <a href="#SetVector(CATMathVector&amp;)"><b>SetVector</b></a>(CATMathVector&amp;)
<dd>  Sets the vector of <tt>this</tt> CATMathTransformation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathTransformation"></a><a name="CATMathTransformation()"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an Identity transformation.
 <br> <tt>Matrix= Identity</tt>, <tt>Vector = (0,0,0) </tt>
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATAngle&amp;,CATMathLine&amp;)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/typedef_CATAngle_12506.htm">CATAngle&amp;</a> <td><tt>iAngle</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathLine_23882.htm">CATMathLine&amp;</a> <td><tt>iAxis</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a rotation (radians).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAngle</tt>
   <dd> The angle in radians.
 </dd>
    <dt><tt> iAxis</tt>
   <dd> The rotation axis.</dd>
</dl>
</dl>
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMath3x3Matrix&amp;,CATMathVector&amp;)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMath3x3Matrix_49924.htm">CATMath3x3Matrix&amp;</a> <td><tt>iMatrix</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iTranslation</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathTransformation from a CATMath3x3Matrix and a CATMathVector.
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMathAxis&amp;,CATMathAxis&amp;)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMathAxis_24327.htm">CATMathAxis&amp;</a> <td><tt>iFromAxis</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathAxis_24327.htm">CATMathAxis&amp;</a> <td><tt>iToAxis</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 Set
 Constructs a transformation of axis systems.
<br>
 This transformation transforms, in the global axis system
 <tt>CATMathOIJK</tt>, the coordinates of a point <tt>M</tt>
 into the coordinates of the point <tt>TM</tt> such that:
 <tt>M</tt> and <tt>TM</tt> have the same coordinate values
 in the axis <tt>iFromAxis</tt> and <tt>iToAxis</tt>. 
<br>
 Now, for defining the transformation from <tt>iFromAxis</tt> to <tt>iToAxis</tt>, you have to combine
 two transformations, in the following way:
   <tt> CATMathTransformation(iToAxis, CATMathOIJK) * CATMathTransformation(CATMathOIJK, iFromAxis)</tt>
</dl>
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMathAxis&amp;,double[])"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMathAxis_24327.htm">CATMathAxis&amp;</a> <td><tt>iAxis</tt>,<tr><td></td><td> const double[] <td><tt>iRatio</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an affinity with respect to a given ratio for each direction of a CATMathAxis.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxis</tt>
   <dd> The three direction of the affinity.
 </dd>
    <dt><tt> iRatio</tt>
   <dd> Array of 3 doubles, giving the ratio in each direction.</dd>
</dl>
</dl>
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMathPlane&amp;)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMathPlane_28612.htm">CATMathPlane&amp;</a> <td><tt>iReflectPlane</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a reflection on a plane.
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMathPlane&amp;,double)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMathPlane_28612.htm">CATMathPlane&amp;</a> <td><tt>iPlane</tt>,<tr><td></td><td> const double <td><tt>iScale</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an affinity with respect to a plane.
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMathPoint&amp;,CATMathVector&amp;)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iReflectPlaneOrigin</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iReflectPlaneNormal</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a reflection from a CATMathPoint and a CATMathVector.
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMathPoint&amp;,double)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iCenter</tt>,<tr><td></td><td> const double <td><tt>iScale</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a scaling.
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMathTransformation&amp;)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMathTransformation_93245.htm">CATMathTransformation&amp;</a> <td><tt>iTransfoToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(CATMathVector&amp;)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iTranslation</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a translation.
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(double,CATMathTransformation&amp;,CATMathTransformation&amp;)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const double <td><tt>iFactor</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathTransformation_93245.htm">CATMathTransformation&amp;</a> <td><tt>iFromTansfo</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathTransformation_93245.htm">CATMathTransformation&amp;</a> <td><tt>iToTransfo</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 Set
 Creates an interpolation of an isometry.
<br>This can be used for simulating intermediate steps of a displacement.
<br>Throws an error if the two transformations are not compatible.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFactor</tt>
   <dd> The ratio of the intermediate step: <tt>0 < iFactor < 1</tt>.</dd>
</dl>
</dl>
</dl>
<a name="CATMathTransformation"></a><a name="CATMathTransformation(double[],CATLONG32)"></a> <dt> o <b>CATMathTransformation</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathTransformation</b>(<td> const double[] <td><tt>iCoeff</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbCoeff</tt><td><tt>= 12</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
Throws an error if iNbCoeff value is not 12 or 16.
<br>Constructs a transformation from an array[] of doubles.
 <br>If <tt>iNbCoeff=12</tt>, the array is:
<br><tt><table width = 40>
    <tr><td> iCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td> u1 </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td> u2 </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td> u3 </td></tr>
        </table></tt>
 and the coefficients must be given COLUMN by COLUMN.
 <br>If <tt>iNbCoeff=16</tt>, DO NOT USE- the array is:
<br><tt><table width = 40>
    <tr><td> iCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td>  u1  </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td>  u2      </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td>  u3      </td></tr>
    <tr><td></td>         <td>  0  </td><td>  0  </td><td> 0   </td>
        <td>  1     </td></tr>
        </table></tt>
 and the coefficients must be given COLUMN by COLUMN.
</dl>
 <h2>Methods</h2> <br>
<a name="ComputeInverse"></a><a name="ComputeInverse(CATMathTransformation&amp;)"></a> <dt> o <b>ComputeInverse</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ComputeInverse</b>(<td><a href="../Mathematics/class_CATMathTransformation_93245.htm">CATMathTransformation&amp;</a> <td><tt>ioInverse</tt>) const  </table></dt>
<dl>
  <dd>
 Retrieves the inverse of <tt>this</tt> CATMathTransformation.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>S_OK</tt> if <tt>this</tt> CATMathTransformation is invertible, <tt>E_FAIL</tt> otherwise. 
 In this last case, <tt>oInverse</tt> is not modified.
</dl>
</dl>
<a name="Dump"></a><a name="Dump(ostream*)"></a> <dt> o <b>Dump</b>

<dt>  <table><tr><td>  public void  <b>Dump</b>(<td>ostream* <td><tt>iStream</tt><td><tt>=0L</tt>) const  </table></dt>
<dl>
  <dd>
 Dumps <tt>this</tt> CATMathTransformation.
 <br>This writes the following lines on the ostream:
    <tt><table width = 40>
<tr><td> Matrix= </td><td>|</td><td> iA11 </td><td> iA12 </td>
                  <td> iA13 </td><td>|</td></tr>
<tr><td>         </td><td>|</td><td> iA21 </td><td> iA22 </td>
                  <td> iA23 </td><td>|</td></tr>
<tr><td>         </td><td>|</td><td> iA31 </td><td> iA32 </td>
                  <td> iA33 </td><td>|</td></tr>
<tr><td>Translation= </td><td>(</td><td> FirstCoord,</td><td>SecondCoord,</td>
                      <td> ThirdCoord</td><td>)</td></tr>
        </table></tt> 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStream</tt>
   <dd>   A pointer to the output. If <tt>0L</tt>, the method dumps 
 on the <tt>cout</tt> output.</dd>
</dl>
</dl>
</dl>
<a name="GetCoef"></a><a name="GetCoef(double[],CATLONG32)"></a> <dt> o <b>GetCoef</b>

<dt>  <table><tr><td>  public void  <b>GetCoef</b>(<td>double[] <td><tt>iCoeff</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbCoeff</tt><td><tt>= 12</tt>) const  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 GetCoefficients
Throws an error if iNbCoeff value is not 12 or 16.
<br>Retrieves the coefficients of <tt>this</tt> CATMathTransformation in an array[] of doubles.
 <br>If <tt>iNbCoeff=12</tt>, the array is:
<br><tt><table width = 40>
    <tr><td> oCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td> u1 </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td> u2 </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td> u3 </td></tr>
        </table></tt>
 and the coefficients are given COLUMN by COLUMN.
 <br>If <tt>iNbCoeff=16</tt>, DO NOT USE - and the array is:
<br><tt><table width = 40>
    <tr><td> oCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td>  u1  </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td>  u2      </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td>  u3      </td></tr>
    <tr><td></td>         <td>  0  </td><td>  0  </td><td> 0   </td>
        <td>  1     </td></tr>
        </table></tt>
 and the coefficients are given COLUMN by COLUMN.
</dl>
</dl>
<a name="GetCoefficients"></a><a name="GetCoefficients(double[],CATLONG32)"></a> <dt> o <b>GetCoefficients</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCoefficients</b>(<td>double[] <td><tt>iCoeff</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbCoeff</tt><td><tt>= 12</tt>) const  </table></dt>
<dl>
  <dd>
Retrieves the coefficients of <tt>this</tt> CATMathTransformation in an array[] of doubles.
<br>If <tt>iNbCoeff=12</tt>, the array is:
<br><tt><table width = 40>
    <tr><td> oCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td> u1 </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td> u2 </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td> u3 </td></tr>
        </table></tt>
 and the coefficients are given COLUMN by COLUMN.
<br>If <tt>iNbCoeff=16</tt>, DO NOT USE - and the array is:
<br><tt><table width = 40>
    <tr><td> oCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td>  u1  </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td>  u2      </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td>  u3      </td></tr>
    <tr><td></td>         <td>  0  </td><td>  0  </td><td> 0   </td>
        <td>  1     </td></tr>
        </table></tt>
 and the coefficients are given COLUMN by COLUMN.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if iNbCoeff value is not 12 or 16, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="GetMatrix"></a><a name="GetMatrix(CATMath3x3Matrix&amp;)"></a> <dt> o <b>GetMatrix</b>

<dt>  <table><tr><td>  public void  <b>GetMatrix</b>(<td><a href="../Mathematics/class_CATMath3x3Matrix_49924.htm">CATMath3x3Matrix&amp;</a> <td><tt>ioMatrix</tt>) const  </table></dt>
<dl>
  <dd>
 Retrieves the CATMath3x3Matrix associated with <tt>this</tt> CATMathTransformation.
</dl>
<a name="GetVector"></a><a name="GetVector(CATMathVector&amp;)"></a> <dt> o <b>GetVector</b>

<dt>  <table><tr><td>  public void  <b>GetVector</b>(<td><a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>ioMatrix</tt>) const  </table></dt>
<dl>
  <dd>
 Retrieves the CATMathVector associated with <tt>this</tt> CATMathTransformation.
</dl>
<a name="Inverse"></a><a name="Inverse(CATMathTransformation&amp;)"></a> <dt> o <b>Inverse</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>Inverse</b>(<td><a href="../Mathematics/class_CATMathTransformation_93245.htm">CATMathTransformation&amp;</a> <td><tt>ioInverse</tt>) const  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 ComputeInverse
 Retrieves the inverse of <tt>this</tt> CATMathTransformation.
 
  <dt> <b>Returns:</b> 
  <dd>   <tt>TRUE</tt> if <tt>this</tt> CATMathTransformation is invertible, <tt>FALSE</tt> otherwise. 
 In this last case, <tt>oInverse</tt> is not modified.
</dl>
</dl>
<a name="IsIdentity"></a><a name="IsIdentity()"></a> <dt> o <b>IsIdentity</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsIdentity</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathTransformation is the identity (invariant).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>FALSE</tt>        <dd>if it is not the identity.
 <dt><tt>TRUE</tt>        <dd>if it is the identity.
 </dl>
</dl>
</dl>
<a name="IsIsometry"></a><a name="IsIsometry()"></a> <dt> o <b>IsIsometry</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsIsometry</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathTransformation is an isometry (keeps the distances).
 return
 <dl>
 <dt><tt>FALSE</tt>        <dd>if it is not an isometry.
 <dt><tt>TRUE</tt>        <dd>if it is a direct isometry.
 </dl>
</dl>
<a name="IsReflection"></a><a name="IsReflection(CATMathPlane&amp;)"></a> <dt> o <b>IsReflection</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsReflection</b>(<td><a href="../Mathematics/class_CATMathPlane_28612.htm">CATMathPlane&amp;</a> <td><tt>ioReflectPlane</tt>) const  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathTransformation is a reflection and retrieves the reflect plane.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>FALSE</tt>        <dd>if it is not a reflection.
 <dt><tt>TRUE</tt>        <dd>if it is a reflection.
 </dl>
</dl>
</dl>
<a name="IsRotation"></a><a name="IsRotation(CATAngle&amp;,CATMathLine&amp;,double)"></a> <dt> o <b>IsRotation</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsRotation</b>(<td><a href="../Mathematics/typedef_CATAngle_12506.htm">CATAngle&amp;</a> <td><tt>ioAngle</tt>,<tr><td></td><td><a href="../Mathematics/class_CATMathLine_23882.htm">CATMathLine&amp;</a> <td><tt>ioAxis</tt>,<tr><td></td><td> const double <td><tt>iTol</tt><td><tt>= 0.</tt>) const  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathTransformation is a rotation and retrieves the axis and the
 angle in radian.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>FALSE</tt>        <dd>if it is not a rotation.
 <dt><tt>TRUE</tt>        <dd>if it is a rotation.
 </dl>
</dl>
</dl>
<a name="IsScaling"></a><a name="IsScaling(CATMathPoint&amp;,double&amp;)"></a> <dt> o <b>IsScaling</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsScaling</b>(<td><a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>ioOrigin</tt>,<tr><td></td><td>double&amp; <td><tt>ioScale</tt>) const  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathTransformation is a scaling and retrieves the Origin and 
 the Scale.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>FALSE</tt>        <dd>if it is not a scaling.
 <dt><tt>TRUE</tt>        <dd>if it is a scaling.
 </dl>
</dl>
</dl>
<a name="IsSimilitude"></a><a name="IsSimilitude(double&amp;)"></a> <dt> o <b>IsSimilitude</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>IsSimilitude</b>(<td>double&amp; <td><tt>ioScale</tt>) const  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathTransformation is a similitude and retrieves the scale.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>FALSE</tt>        <dd>if it is not a similitude.
 <dt><tt>TRUE</tt>        <dd>if it is a similitude.
 </dl>
</dl>
</dl>
<a name="Set"></a><a name="Set(CATMathAxis&amp;,CATMathAxis&amp;)"></a> <dt> o <b>Set</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Set</b>(<td> const <a href="../Mathematics/class_CATMathAxis_24327.htm">CATMathAxis&amp;</a> <td><tt>iFromAxis</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathAxis_24327.htm">CATMathAxis&amp;</a> <td><tt>iToAxis</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Set an transformation of axis systems.
<br>
 This transformation transforms, in the global axis system
 <tt>CATMathOIJK</tt>, the coordinates of a point <tt>M</tt>
 into the coordinates of the point <tt>TM</tt> such that:
 <tt>M</tt> and <tt>TM</tt> have the same coordinate values
 in the axis <tt>iFromAxis</tt> and <tt>iToAxis</tt>. 
<br>
 Now, for defining the transformation from <tt>iFromAxis</tt> to <tt>iToAxis</tt>, you have to combine
 two transformations, in the following way:
   <tt> CATMathTransformation(iToAxis, CATMathOIJK) * CATMathTransformation(CATMathOIJK, iFromAxis)</tt>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if an error occurs, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="Set"></a><a name="Set(double,CATMathTransformation&amp;,CATMathTransformation&amp;)"></a> <dt> o <b>Set</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Set</b>(<td> const double <td><tt>iFactor</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathTransformation_93245.htm">CATMathTransformation&amp;</a> <td><tt>iFromTansfo</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathTransformation_93245.htm">CATMathTransformation&amp;</a> <td><tt>iToTransfo</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Set an interpolation of an isometry.
<br>This can be used for simulating intermediate steps of a displacement.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFactor</tt>
   <dd> The ratio of the intermediate step: <tt>0 < iFactor < 1</tt>.     
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if the two transformations are not compatible, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="SetCoef"></a><a name="SetCoef(double[],CATLONG32)"></a> <dt> o <b>SetCoef</b>

<dt>  <table><tr><td>  public void  <b>SetCoef</b>(<td> const double[] <td><tt>iCoeff</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbCoeff</tt><td><tt>= 12</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 GetCoefficients
Throws an error if iNbCoeff value is not 12 or 16.
<br>Modifies the coefficients of <tt>this</tt> CATMathTransformation from an array[] of doubles.
 <br>If <tt>iNbCoeff=12</tt>, the array is:
<br><tt><table width = 40>
    <tr><td> iCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td> u1 </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td> u2 </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td> u3 </td></tr>
        </table></tt>
 and the coefficients must be given COLUMN by COLUMN.
 <br>If <tt>iNbCoeff=16</tt>, DO NOT USE - the array is:
<br><tt><table width = 40>
    <tr><td> iCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td>  u1  </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td>  u2      </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td>  u3      </td></tr>
    <tr><td></td>         <td>  0  </td><td>  0  </td><td> 0   </td>
        <td>  1     </td></tr>
        </table></tt>
 and the coefficients must be given COLUMN by COLUMN.
</dl>
</dl>
<a name="SetCoefficients"></a><a name="SetCoefficients(double[],CATLONG32)"></a> <dt> o <b>SetCoefficients</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetCoefficients</b>(<td> const double[] <td><tt>iCoeff</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbCoeff</tt><td><tt>= 12</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
Modifies the coefficients of <tt>this</tt> CATMathTransformation from an array[] of doubles.
<br>If <tt>iNbCoeff=12</tt>, the array is:
<br><tt><table width = 40>
    <tr><td> iCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td> u1 </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td> u2 </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td> u3 </td></tr>
        </table></tt>
 and the coefficients must be given COLUMN by COLUMN.
<br>If <tt>iNbCoeff=16</tt>, DO NOT USE - the array is:
<br><tt><table width = 40>
    <tr><td> iCoeff</td><td> a11 </td><td> a12 </td><td> a13 </td>
        <td>  u1  </td></tr>
    <tr><td></td>         <td> a21 </td><td> a22 </td><td> a23 </td>
        <td>  u2      </td></tr>
    <tr><td></td>         <td> a31 </td><td> a32 </td><td> a33 </td>
        <td>  u3      </td></tr>
    <tr><td></td>         <td>  0  </td><td>  0  </td><td> 0   </td>
        <td>  1     </td></tr>
        </table></tt>
 and the coefficients must be given COLUMN by COLUMN.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if iNbCoeff value is not 12 or 16, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="SetMatrix"></a><a name="SetMatrix(CATMath3x3Matrix&amp;)"></a> <dt> o <b>SetMatrix</b>

<dt>  <table><tr><td>  public void  <b>SetMatrix</b>(<td> const <a href="../Mathematics/class_CATMath3x3Matrix_49924.htm">CATMath3x3Matrix&amp;</a> <td><tt>iMatrix</tt>)<a href="../DNBSystem/struct__0.htm"> </a>  </table></dt>
<dl>
  <dd>
 Sets the matrix of <tt>this</tt> CATMathTransformation.
</dl>
<a name="SetVector"></a><a name="SetVector(CATMathVector&amp;)"></a> <dt> o <b>SetVector</b>

<dt>  <table><tr><td>  public void  <b>SetVector</b>(<td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iVector</tt>)<a href="../DNBSystem/struct__0.htm"> </a>  </table></dt>
<dl>
  <dd>
 Sets the vector of <tt>this</tt> CATMathTransformation.
</dl>
<hr>
 This object is included in the file: <b>CATMathTransformation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
