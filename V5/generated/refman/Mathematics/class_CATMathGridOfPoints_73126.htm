<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathGridOfPoints</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="class_CATMathGrid_23820.htm">Previous</a>  <a href="class_CATMathGridOfVectors_81306.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Mathematics Class CATMathGridOfPoints</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../Mathematics/class_CATMathExtendableSet_80990.htm">Mathematics.CATMathExtendableSet</a>
    |
    +---<a href="../Mathematics/class_CATMathGrid_23820.htm">Mathematics.CATMathGrid</a>
      |
      +---CATMathGridOfPoints
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathGridOfPoints</b>
</p>
<p>
<b><i> Class representing a bi-dimensionnal grid of CATMathPoints.</i></b><br>

<br>The size is defined by a number of rows <tt>NbRows</tt> and a 
 number of columns <tt>NbColumns</tt>. The index of the fisrt 
 CATMathPoints are <tt>(0,0)</tt>.
<br>The <tt>SetNumberOfPoints</tt> method enlarges the memory if
 needed, while the <tt>Compress</tt> inherited method releases the free 
 unused memory.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathGridOfPoints()"><b>CATMathGridOfPoints</b></a>()
<dd>  Constructs an empty CATMathGridOfPoints with 0 row and 0 column.
 <dt> o 
    <a href="#CATMathGridOfPoints(CATLONG32,CATLONG32)"><b>CATMathGridOfPoints</b></a>(CATLONG32,CATLONG32)
<dd>  Constructs a CATMathGridOfPoints of a given size.
 <dt> o 
    <a href="#CATMathGridOfPoints(CATLONG32,CATLONG32,CATMathPoint[])"><b>CATMathGridOfPoints</b></a>(CATLONG32,CATLONG32,CATMathPoint[])
<dd>  Constructs from an array of CATMathPoints, assuming it is ordered row
 after row.
 <dt> o 
    <a href="#CATMathGridOfPoints(CATMathGridOfPoints&amp;)"><b>CATMathGridOfPoints</b></a>(CATMathGridOfPoints&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATMathGridOfPoints(CATMathGridOfPoints&amp;,CATLONG32,CATLONG32,CATLONG32,CATLONG32)"><b>CATMathGridOfPoints</b></a>(CATMathGridOfPoints&amp;,CATLONG32,CATLONG32,CATLONG32,CATLONG32)
<dd>  Constructs by extracting a smaller grid from another one.
 <dt> o 
    <a href="#CATMathGridOfPoints(CATMathSetOfPoints&amp;,CATLONG32,CATLONG32)"><b>CATMathGridOfPoints</b></a>(CATMathSetOfPoints&amp;,CATLONG32,CATLONG32)
<dd>  Constructs from a CATMathSetOfPoints, assuming it is ordered column 
 after column.
 <dt> o 
    <a href="#~CATMathGridOfPoints()"><b>~CATMathGridOfPoints</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ApplyTransformation(CATMathTransformation&amp;)"><b>ApplyTransformation</b></a>(CATMathTransformation&amp;)
<dd>  Transforms the CATMathPoints of <tt>this</tt> CATMathGridOfPoints.
 <dt> o 
    <a href="#DistanceTo(CATMathGridOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)"><b>DistanceTo</b></a>(CATMathGridOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)
<dd>    Returns the distance between  
 a point of <tt>this</tt> CATMathGridOfPoints and
 a point of another CATMathGridOfPoints.
 <dt> o 
    <a href="#DistanceTo(CATMathPoint&amp;,CATLONG32&amp;,CATLONG32&amp;)"><b>DistanceTo</b></a>(CATMathPoint&amp;,CATLONG32&amp;,CATLONG32&amp;)
<dd>   Returns the distance between a CATMathPoint and 
 a point of <tt>this</tt> CATMathGridOfPoints.
 <dt> o 
    <a href="#DistanceTo(CATMathSetOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)"><b>DistanceTo</b></a>(CATMathSetOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)
<dd>    Returns the distance between a point of a CATMathSetOfPoints and 
 a point of <tt>this</tt> CATMathGridOfPoints.
 <dt> o 
    <a href="#GetPoint(CATLONG32,CATLONG32)"><b>GetPoint</b></a>(CATLONG32,CATLONG32)
<dd>  Returns the CATMathPoint locating at a given row and column.
 <dt> o 
    <a href="#GetPoint(CATLONG32,CATLONG32,CATMathPoint&amp;)"><b>GetPoint</b></a>(CATLONG32,CATLONG32,CATMathPoint&amp;)
<dd>  Retrieves the CATMathPoint locating at a given row and column.
 <dt> o 
    <a href="#GetPoints()"><b>GetPoints</b></a>()
<dd>  Returns the array of CATMathPoints sorted row by row.
 <dt> o 
    <a href="#SetPoint(CATMathPoint&amp;,CATLONG32,CATLONG32)"><b>SetPoint</b></a>(CATMathPoint&amp;,CATLONG32,CATLONG32)
<dd>  Initializes the values of a CATMathPoint in <tt>this</tt> CATMathGridOfPoints.
 <dt> o 
    <a href="#SquareDistanceTo(CATMathGridOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)"><b>SquareDistanceTo</b></a>(CATMathGridOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)
<dd>    Returns the square distance between  
 a point of <tt>this</tt> CATMathGridOfPoints and
 a point of another CATMathGridOfPoints.
 <dt> o 
    <a href="#SquareDistanceTo(CATMathPoint&amp;,CATLONG32&amp;,CATLONG32&amp;)"><b>SquareDistanceTo</b></a>(CATMathPoint&amp;,CATLONG32&amp;,CATLONG32&amp;)
<dd>    Returns the square distance between a CATMathPoint and 
 a point of <tt>this</tt> CATMathGridOfPoints.
 <dt> o 
    <a href="#SquareDistanceTo(CATMathSetOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)"><b>SquareDistanceTo</b></a>(CATMathSetOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)
<dd>    Returns the square distance between a point of a CATMathSetOfPoints and 
 a point of <tt>this</tt> CATMathGridOfPoints.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathGridOfPoints"></a><a name="CATMathGridOfPoints()"></a> <dt> o <b>CATMathGridOfPoints</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathGridOfPoints</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an empty CATMathGridOfPoints with 0 row and 0 column.
</dl>
<a name="CATMathGridOfPoints"></a><a name="CATMathGridOfPoints(CATLONG32,CATLONG32)"></a> <dt> o <b>CATMathGridOfPoints</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathGridOfPoints</b>(<td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbRows</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbColumns</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathGridOfPoints of a given size.
<br>The memory is allocated, but the values of the points are not initialized.
 Use <tt>SetPoint</tt> to initialize them.
</dl>
<a name="CATMathGridOfPoints"></a><a name="CATMathGridOfPoints(CATLONG32,CATLONG32,CATMathPoint[])"></a> <dt> o <b>CATMathGridOfPoints</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathGridOfPoints</b>(<td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbRows</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbColumns</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint[]</a> <td><tt>iArrayPoint</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs from an array of CATMathPoints, assuming it is ordered row
 after row.
</dl>
<a name="CATMathGridOfPoints"></a><a name="CATMathGridOfPoints(CATMathGridOfPoints&amp;)"></a> <dt> o <b>CATMathGridOfPoints</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathGridOfPoints</b>(<td> const <a href="../Mathematics/class_CATMathGridOfPoints_73126.htm">CATMathGridOfPoints&amp;</a> <td><tt>iGridToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATMathGridOfPoints"></a><a name="CATMathGridOfPoints(CATMathGridOfPoints&amp;,CATLONG32,CATLONG32,CATLONG32,CATLONG32)"></a> <dt> o <b>CATMathGridOfPoints</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathGridOfPoints</b>(<td> const <a href="../Mathematics/class_CATMathGridOfPoints_73126.htm">CATMathGridOfPoints&amp;</a> <td><tt>iSourceGrid</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iStartRow</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iEndRow</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iStartColumn</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iEndColumn</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs by extracting a smaller grid from another one.
</dl>
<a name="CATMathGridOfPoints"></a><a name="CATMathGridOfPoints(CATMathSetOfPoints&amp;,CATLONG32,CATLONG32)"></a> <dt> o <b>CATMathGridOfPoints</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathGridOfPoints</b>(<td> const <a href="../Mathematics/class_CATMathSetOfPoints_66030.htm">CATMathSetOfPoints&amp;</a> <td><tt>iSourceSet</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbRows</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iNbColumns</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs from a CATMathSetOfPoints, assuming it is ordered column 
 after column.
</dl>
<a name="~CATMathGridOfPoints"></a><a name="~CATMathGridOfPoints()"></a> <dt> o <b>~CATMathGridOfPoints</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATMathGridOfPoints</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="ApplyTransformation"></a><a name="ApplyTransformation(CATMathTransformation&amp;)"></a> <dt> o <b>ApplyTransformation</b>

<dt>  <table><tr><td>  public virtual void  <b>ApplyTransformation</b>(<td> const <a href="../Mathematics/class_CATMathTransformation_93245.htm">CATMathTransformation&amp;</a> <td><tt>iTransfo</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Transforms the CATMathPoints of <tt>this</tt> CATMathGridOfPoints.
</dl>
<a name="DistanceTo"></a><a name="DistanceTo(CATMathGridOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)"></a> <dt> o <b>DistanceTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>DistanceTo</b>(<td> const <a href="../Mathematics/class_CATMathGridOfPoints_73126.htm">CATMathGridOfPoints*</a> <td><tt>iGridOfPoints2</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iRow1</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iColumn1</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iRow2</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>Column2</tt>) const  </table></dt>
<dl>
  <dd>
   Returns the distance between  
 a point of <tt>this</tt> CATMathGridOfPoints and
 a point of another CATMathGridOfPoints.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGridOfPoints2</tt>
   <dd> The other grid of points which the second point belongs to.
 </dd>
    <dt><tt> iRow1</tt>
   <dd> The row (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iColumn1</tt>
   <dd> The column (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iRow2</tt>
   <dd> The row (beginning at <tt>0</tt>) of the point of the second grid of points
 to which the distance is computed.
 </dd>
    <dt><tt> iColumn2</tt>
   <dd> The column (beginning at <tt>0</tt>) of the point of the second grid of points
 to which the distance is computed.</dd>
</dl>
</dl>
</dl>
<a name="DistanceTo"></a><a name="DistanceTo(CATMathPoint&amp;,CATLONG32&amp;,CATLONG32&amp;)"></a> <dt> o <b>DistanceTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>DistanceTo</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iP</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iRow</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iColumn</tt>) const   </table></dt>
<dl>
  <dd>
  Returns the distance between a CATMathPoint and 
 a point of <tt>this</tt> CATMathGridOfPoints.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iP</tt>
   <dd> The point to which the distance is computed.
 </dd>
    <dt><tt> iRow</tt>
   <dd> The row (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iColumn</tt>
   <dd> The column (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.</dd>
</dl>
</dl>
</dl>
<a name="DistanceTo"></a><a name="DistanceTo(CATMathSetOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)"></a> <dt> o <b>DistanceTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>DistanceTo</b>(<td> const <a href="../Mathematics/class_CATMathSetOfPoints_66030.htm">CATMathSetOfPoints*</a> <td><tt>iSetOfPoints2</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iRow1</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iColumn1</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iIndex2</tt>) const  </table></dt>
<dl>
  <dd>
   Returns the distance between a point of a CATMathSetOfPoints and 
 a point of <tt>this</tt> CATMathGridOfPoints.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSetOfPoints2</tt>
   <dd> The set of points which the second point belongs to.
 </dd>
    <dt><tt> iRow1</tt>
   <dd> The row (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iColumn1</tt>
   <dd> The column (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iIndex2</tt>
   <dd> The index (beginning at <tt>0</tt>) of the second point in its set to which
 the distance is computed.</dd>
</dl>
</dl>
</dl>
<a name="GetPoint"></a><a name="GetPoint(CATLONG32,CATLONG32)"></a> <dt> o <b>GetPoint</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint</a>  <b>GetPoint</b>(<td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iRow</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iColumn</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the CATMathPoint locating at a given row and column.
<br>The indexes <tt>iRow</tt> and <tt>iColumn</tt> start at <tt>0</tt>.
<br>Use preferently the second method signature if you want to avoid an
 useless constructor.
</dl>
<a name="GetPoint"></a><a name="GetPoint(CATLONG32,CATLONG32,CATMathPoint&amp;)"></a> <dt> o <b>GetPoint</b>

<dt>  <table><tr><td>  public void  <b>GetPoint</b>(<td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iRow</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iColumn</tt>,<tr><td></td><td><a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>ioPoint</tt>) const  </table></dt>
<dl>
  <dd>
 Retrieves the CATMathPoint locating at a given row and column.
<br>The indexes <tt>iRow</tt> and <tt>iColumn</tt> start at <tt>0</tt>.
</dl>
<a name="GetPoints"></a><a name="GetPoints()"></a> <dt> o <b>GetPoints</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint *</a>  <b>GetPoints</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the array of CATMathPoints sorted row by row.
<br>A CATMathPoint at the <tt>(iRow,iColumn)</tt> location is accessed
 using the formula  <tt>iRow*NbRows+iColumn</tt> in the returned array.
<br>Note that the returned array is used by the CATMathGridOfPoints and
 must not be deleted.
</dl>
<a name="SetPoint"></a><a name="SetPoint(CATMathPoint&amp;,CATLONG32,CATLONG32)"></a> <dt> o <b>SetPoint</b>

<dt>  <table><tr><td>  public void  <b>SetPoint</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iPoint</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iRow</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iColumn</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Initializes the values of a CATMathPoint in <tt>this</tt> CATMathGridOfPoints.
<br>The indexes <tt>iRow</tt> and <tt>iColumn</tt> start at <tt>0</tt>.
</dl>
<a name="SquareDistanceTo"></a><a name="SquareDistanceTo(CATMathGridOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)"></a> <dt> o <b>SquareDistanceTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>SquareDistanceTo</b>(<td> const <a href="../Mathematics/class_CATMathGridOfPoints_73126.htm">CATMathGridOfPoints*</a> <td><tt>iGridOfPoints2</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iRow1</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iColumn1</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iRow2</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iColumn2</tt>) const  </table></dt>
<dl>
  <dd>
   Returns the square distance between  
 a point of <tt>this</tt> CATMathGridOfPoints and
 a point of another CATMathGridOfPoints.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGridOfPoints2</tt>
   <dd> The other grid of points which the second point belongs to.
 </dd>
    <dt><tt> iRow1</tt>
   <dd> The row (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iColumn1</tt>
   <dd> The column (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iRow2</tt>
   <dd> The row (beginning at <tt>0</tt>) of the point of the second grid of points
 to which the distance is computed.
 </dd>
    <dt><tt> iColumn2</tt>
   <dd> The column (beginning at <tt>0</tt>) of the point of the second grid of points
 to which the distance is computed.</dd>
</dl>
</dl>
</dl>
<a name="SquareDistanceTo"></a><a name="SquareDistanceTo(CATMathPoint&amp;,CATLONG32&amp;,CATLONG32&amp;)"></a> <dt> o <b>SquareDistanceTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>SquareDistanceTo</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iP</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iRow</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iColumn</tt>) const   </table></dt>
<dl>
  <dd>
   Returns the square distance between a CATMathPoint and 
 a point of <tt>this</tt> CATMathGridOfPoints.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iP</tt>
   <dd> The point to which the distance is computed.
 </dd>
    <dt><tt> iRow</tt>
   <dd> The row (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iColumn</tt>
   <dd> The column (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.</dd>
</dl>
</dl>
</dl>
<a name="SquareDistanceTo"></a><a name="SquareDistanceTo(CATMathSetOfPoints*,CATLONG32&amp;,CATLONG32&amp;,CATLONG32&amp;)"></a> <dt> o <b>SquareDistanceTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>SquareDistanceTo</b>(<td> const <a href="../Mathematics/class_CATMathSetOfPoints_66030.htm">CATMathSetOfPoints*</a> <td><tt>iSetOfPointst2</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iRow1</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iColumn1</tt>,<tr><td></td><td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>iIndex2</tt>) const  </table></dt>
<dl>
  <dd>
   Returns the square distance between a point of a CATMathSetOfPoints and 
 a point of <tt>this</tt> CATMathGridOfPoints.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSetOfPoints2</tt>
   <dd> The set of points which the second point belongs to.
 </dd>
    <dt><tt> iRow1</tt>
   <dd> The row (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iColumn1</tt>
   <dd> The column (beginning at <tt>0</tt>) of the point of <tt>this</tt>
 to which the distance is computed.
 </dd>
    <dt><tt> iIndex2</tt>
   <dd> The index (beginning at <tt>0</tt>) of the second point in its set to which
 the distance is computed.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMathGridOfPoints.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
