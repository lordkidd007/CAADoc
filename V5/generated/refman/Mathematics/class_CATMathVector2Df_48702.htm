<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathVector2Df</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="class_CATMathVector2D_42451.htm">Previous</a>  <a href="class_CATMathVectorf_40288.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Mathematics Class CATMathVector2Df</h1>
<pre>
CATMathVector2Df
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathVector2Df</b>
</p>
<p>
<b><i> Class representing a temporary vector in dimension 2 in float precision.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathVector2Df(CATMathDirection2Df&amp;)"><b>CATMathVector2Df</b></a>(CATMathDirection2Df&amp;)
<dd>  Constructs from a CATMathDirection2Df.
 <dt> o 
    <a href="#CATMathVector2Df(CATMathPoint2Df&amp;,CATMathPoint2Df&amp;)"><b>CATMathVector2Df</b></a>(CATMathPoint2Df&amp;,CATMathPoint2Df&amp;)
<dd>  Constructs the CATMathVector2Df as the difference of two CATMathPoint2Dfs.
 <dt> o 
    <a href="#CATMathVector2Df(CATMathVector2D&amp;)"><b>CATMathVector2Df</b></a>(CATMathVector2D&amp;)
<dd>  Constructs from a CATMathVector.
 <dt> o 
    <a href="#CATMathVector2Df(CATMathVector2Df&amp;)"><b>CATMathVector2Df</b></a>(CATMathVector2Df&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATMathVector2Df(float,float)"><b>CATMathVector2Df</b></a>(float,float)
<dd>  Constructs a (1,0) vector in float precision.
 <dt> o 
    <a href="#CATMathVector2Df(float[])"><b>CATMathVector2Df</b></a>(float[])
<dd>  Constructs from an array[2] of float coordinates.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AngleTo(CATMathVector2Df&amp;)"><b>AngleTo</b></a>(CATMathVector2Df&amp;)
<dd>  Returns the angle (between 0 and pi radians) with another CATMathVector2Df.
 <dt> o 
    <a href="#Norm()"><b>Norm</b></a>()
<dd>  Returns the cartesian norm.
 <dt> o 
    <a href="#Normalize()"><b>Normalize</b></a>()
<dd>  Normalizes the CATMathVector2Df.
 <dt> o 
    <a href="#operator*(CATMathVector2Df&amp;)"><b>operator*</b></a>(CATMathVector2Df&amp;)
<dd>  Defines the dot product.
 <dt> o 
    <a href="#operator*(float)"><b>operator*</b></a>(float)
<dd>  Defines the right side scalar multiplication.
 <dt> o 
    <a href="#operator+(CATMathPoint2Df&amp;)"><b>operator+</b></a>(CATMathPoint2Df&amp;)
<dd>  Defines the translation of a  CATMathPoint2Df.
 <dt> o 
    <a href="#operator+(CATMathVector2Df&amp;)"><b>operator+</b></a>(CATMathVector2Df&amp;)
<dd>  Defines the addition of two CATMathVector2Dfs.
 <dt> o 
    <a href="#operator-(CATMathVector2Df&amp;)"><b>operator-</b></a>(CATMathVector2Df&amp;)
<dd>  Defines the substraction of CATMathVector2Dfs.
 <dt> o 
    <a href="#operator/(float)"><b>operator/</b></a>(float)
<dd>  Defines the division by a scalar.
 <dt> o 
    <a href="#operator^(CATMathVector2Df&amp;)"><b>operator^</b></a>(CATMathVector2Df&amp;)
<dd>  Defines the cross product.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(CATMathDirection2Df&amp;)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathVector2Df</b>(<td> const <a href="../Mathematics/class_CATMathDirection2Df_69439.htm">CATMathDirection2Df&amp;</a> <td><tt>iDirectionToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs from a CATMathDirection2Df.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(CATMathPoint2Df&amp;,CATMathPoint2Df&amp;)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathVector2Df</b>(<td> const <a href="../Mathematics/class_CATMathPoint2Df_42458.htm">CATMathPoint2Df&amp;</a> <td><tt>iPoint1</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathPoint2Df_42458.htm">CATMathPoint2Df&amp;</a> <td><tt>iPoint2</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs the CATMathVector2Df as the difference of two CATMathPoint2Dfs.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The CATMathVector2Df <tt>iPoint2 - iPoint1</tt>.
</dl>
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(CATMathVector2D&amp;)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathVector2Df</b>(<td> const <a href="../Mathematics/class_CATMathVector2D_42451.htm">CATMathVector2D&amp;</a> <td><tt>iVectorInDouble</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs from a CATMathVector.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(CATMathVector2Df&amp;)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathVector2Df</b>(<td> const <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df&amp;</a> <td><tt>iVectorToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(float,float)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathVector2Df</b>(<td> const float <td><tt>iFirstCoord</tt><td><tt>= 1.f </tt>,<tr><td></td><td> const float <td><tt>iSecondCoord</tt><td><tt>= 0.f </tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a (1,0) vector in float precision.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(float[])"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATMathVector2Df</b>(<td> const float[] <td><tt>iCoord</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs from an array[2] of float coordinates.
</dl>
 <h2>Methods</h2> <br>
<a name="AngleTo"></a><a name="AngleTo(CATMathVector2Df&amp;)"></a> <dt> o <b>AngleTo</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>AngleTo</b>(<td> const <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df&amp;</a> <td><tt>iOtherVector</tt>)const  </table></dt>
<dl>
  <dd>
 Returns the angle (between 0 and pi radians) with another CATMathVector2Df.
 <br> Returns <tt>0</tt> if the vector is null.
</dl>
<a name="Norm"></a><a name="Norm()"></a> <dt> o <b>Norm</b>

<dt>  <table><tr><td>  public float  <b>Norm</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the cartesian norm.
</dl>
<a name="Normalize"></a><a name="Normalize()"></a> <dt> o <b>Normalize</b>

<dt>  <table><tr><td>  public void  <b>Normalize</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Normalizes the CATMathVector2Df.
<br>Sets to (1.,0.) if null vector.
</dl>
<a name="operator*"></a><a name="operator*(CATMathVector2Df&amp;)"></a> <dt> o <b>operator*</b>

<dt>  <table><tr><td>  public float  <b>operator*</b>(<td> const <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df&amp;</a> <td><tt>iVector2</tt>)const  </table></dt>
<dl>
  <dd>
 Defines the dot product.
</dl>
<a name="operator*"></a><a name="operator*(float)"></a> <dt> o <b>operator*</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df</a>  <b>operator*</b>(<td> const float <td><tt>iScalar</tt>)const  </table></dt>
<dl>
  <dd>
 Defines the right side scalar multiplication.
</dl>
<a name="operator+"></a><a name="operator+(CATMathPoint2Df&amp;)"></a> <dt> o <b>operator+</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathPoint2Df_42458.htm">CATMathPoint2Df</a>  <b>operator+</b>(<td> const <a href="../Mathematics/class_CATMathPoint2Df_42458.htm">CATMathPoint2Df&amp;</a> <td><tt>iPoint2</tt>)const  </table></dt>
<dl>
  <dd>
 Defines the translation of a  CATMathPoint2Df.
</dl>
<a name="operator+"></a><a name="operator+(CATMathVector2Df&amp;)"></a> <dt> o <b>operator+</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df</a>  <b>operator+</b>(<td> const <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df&amp;</a> <td><tt>iVectorToAdd</tt>)const  </table></dt>
<dl>
  <dd>
 Defines the addition of two CATMathVector2Dfs.
</dl>
<a name="operator-"></a><a name="operator-(CATMathVector2Df&amp;)"></a> <dt> o <b>operator-</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df</a>  <b>operator-</b>(<td> const <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df&amp;</a> <td><tt>iVectorToSubstract</tt>)const  </table></dt>
<dl>
  <dd>
 Defines the substraction of CATMathVector2Dfs.
</dl>
<a name="operator/"></a><a name="operator/(float)"></a> <dt> o <b>operator/</b>

<dt>  <table><tr><td>  public <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df</a>  <b>operator/</b>(<td> const float <td><tt>iScalar</tt>)const  </table></dt>
<dl>
  <dd>
 Defines the division by a scalar.
</dl>
<a name="operator^"></a><a name="operator^(CATMathVector2Df&amp;)"></a> <dt> o <b>operator^</b>

<dt>  <table><tr><td>  public float  <b>operator^</b>(<td> const <a href="../Mathematics/class_CATMathVector2Df_48702.htm">CATMathVector2Df&amp;</a> <td><tt>iVector2</tt>)const  </table></dt>
<dl>
  <dd>
 Defines the cross product.
</dl>
<hr>
 This object is included in the file: <b>CATMathVector2Df.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
