<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMSecuritySSOCClient Class PLMSSOClient</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMSecuritySSOCClient.htm" href="../PLMSecuritySSOCClient.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMSecuritySSOCClient";	}
		function getCurrentObjectName() { 
 	return "PLMSSOClient"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMSecuritySSOCClient <script type="text/javascript" > writeClassCharacteristic(); </script> PLMSSOClient</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_PLMSSOClient_28188','PLMSSOClient','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>PLMSSOClient</b>
</p>
<p>
<b><i> <b>Role</b>:
 This interface enables a CAA application running within VPM Navigator
 to retrieve credentials when an SSO Authentication has been already 
 performed in VPM Navigator.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#PLMSSOClient()"><b>PLMSSOClient</b></a>()
<dd>  the default Constructor.
 <dt> o 
    <a href="#~PLMSSOClient()"><b>~PLMSSOClient</b></a>()
<dd>  the destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAuthenticatedUsername(CATUnicodeString&amp;)"><b>GetAuthenticatedUsername</b></a>(CATUnicodeString&amp;)
<dd>  Get the authenticated username.
 <dt> o 
    <a href="#GetCredentialSetForApplication(CATUnicodeString,CATUnicodeString,PLMSSOCredentialSet&amp;)"><b>GetCredentialSetForApplication</b></a>(CATUnicodeString,CATUnicodeString,PLMSSOCredentialSet&amp;)
<dd>  Retrieve all credentials for a given instance of a given application.
 <dt> o 
    <a href="#IsAlreadyAuthenticated(CATBoolean&amp;)"><b>IsAlreadyAuthenticated</b></a>(CATBoolean&amp;)
<dd>  Test if the there have been an SSO authentication already.
 <dt> o 
    <a href="#IsSSOActivated(CATBoolean&amp;)"><b>IsSSOActivated</b></a>(CATBoolean&amp;)
<dd>  Test if the SSO runtime has been turned on.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="PLMSSOClient"></a><a name="PLMSSOClient()"></a> <dt> o <b>PLMSSOClient</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>PLMSSOClient</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 the default Constructor.
</dl>
<a name="~PLMSSOClient"></a><a name="~PLMSSOClient()"></a> <dt> o <b>~PLMSSOClient</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~PLMSSOClient</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 the destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="GetAuthenticatedUsername"></a><a name="GetAuthenticatedUsername(CATUnicodeString&amp;)"></a> <dt> o <b>GetAuthenticatedUsername</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAuthenticatedUsername</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oUserName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the authenticated username.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> 	oUserName:</tt>
   <dd> the authenticated username.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  	S_OK if successful return E_FAIL otherwise.
 
</dl>
</dl>
<a name="GetCredentialSetForApplication"></a><a name="GetCredentialSetForApplication(CATUnicodeString,CATUnicodeString,PLMSSOCredentialSet&amp;)"></a> <dt> o <b>GetCredentialSetForApplication</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCredentialSetForApplication</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iApplicationType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iApplicationInstanceName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMSSOCredentialSet','PLMSSOCredentialSet&amp;')</script> <td><tt>pCredentials</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieve all credentials for a given instance of a given application.
 for the authenticated user.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplicationType</tt>
   <dd>		The name of the application you want to 
		retrieve credentials for. this name must me the same as the one 
		used in the .CredentialSet file in $os/resources/credentials/ folder
		it is name the of the attribute applicationType of the the 
		Element Node SSOCredentialSet.
 </dd>
    <dt><tt> iApplicationInstanceName</tt>
   <dd>		The name used for credentialSet instance name in the SSO 
		Administration Console.
      if a blank string is passed, the default instance of credentialSet will be 
		returned for the given iApplicationType for the authenticatedUser.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  	S_OK if successful return E_FAIL otherwise.
 
</dl>
</dl>
<a name="IsAlreadyAuthenticated"></a><a name="IsAlreadyAuthenticated(CATBoolean&amp;)"></a> <dt> o <b>IsAlreadyAuthenticated</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsAlreadyAuthenticated</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oIsAuthenticated</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Test if the there have been an SSO authentication already.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  	TRUE if yes FALSE otherwise.
 
</dl>
</dl>
<a name="IsSSOActivated"></a><a name="IsSSOActivated(CATBoolean&amp;)"></a> <dt> o <b>IsSSOActivated</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsSSOActivated</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oIsActivated</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Test if the SSO runtime has been turned on.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  	TRUE if SSO has been activated else return FALSE.
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMSSOClient.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMSSOCAAClient</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

