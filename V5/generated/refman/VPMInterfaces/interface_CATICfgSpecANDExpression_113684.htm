<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface CATICfgSpecANDExpression</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="interface_CATICfgSimpleSpecification_137732.htm">Previous</a>  <a href="interface_CATICfgSpecCategory_72474.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>VPMInterfaces Interface CATICfgSpecANDExpression</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATICfgSpecANDExpression
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICfgSpecANDExpression</b>
</p>
<p>
<b><i> Class to manage operations on SpecANDExpressions.</i></b><br>

 <b>Role</b>: A SpecANDexpression is a logical expression constituted of one
 or several Signed Specifications. The Signed Specifications are linked with 
 the AND logical operator. 
 A SpecANDexpression is used in the context of Configuration.
 It serves to give an effectivitity to a part Instance, based on specifications.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../VPMInterfaces/interface_CATICfgSpecORExpression_106687.htm">CATICfgSpecORExpression</a>, <a href="../VPMInterfaces/interface_CATICfgSignedSpec_56308.htm">CATICfgSignedSpec</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddListOfSignedSpec(CATListValCATICfgSignedSpec_var&amp;)"><b>AddListOfSignedSpec</b></a>(CATListValCATICfgSignedSpec_var&amp;)
<dd>  Add a list of Signed Specs to a SpecANDexpression.
 <dt> o 
    <a href="#AddSignedSpec(CATICfgSignedSpec_var&amp;)"><b>AddSignedSpec</b></a>(CATICfgSignedSpec_var&amp;)
<dd>  Add a Signed Specific to a SpecANDExpression.
 <dt> o 
    <a href="#AddSpecANDExp(CATICfgSpecANDExpression_var&amp;)"><b>AddSpecANDExp</b></a>(CATICfgSpecANDExpression_var&amp;)
<dd>   Add a SpecANDExpression to a SpecANDExpression(Concatenation).
 <dt> o 
    <a href="#CopySpecANDExp(CATICfgSpecANDExpression_var&amp;)"><b>CopySpecANDExp</b></a>(CATICfgSpecANDExpression_var&amp;)
<dd>  Copy a SpecANDExpression
 
 <dt> o 
    <a href="#Dump()"><b>Dump</b></a>()
<dd>  Dump informations on a SpecANDExpression to STDOUT.
 <dt> o 
    <a href="#EmptySpecANDExp()"><b>EmptySpecANDExp</b></a>()
<dd>  Remove all Signed Specs from a SpecANDExpression.
 <dt> o 
    <a href="#GetAsXmlString(CATUnicodeString&amp;)"><b>GetAsXmlString</b></a>(CATUnicodeString&amp;)
<dd>   Get a XML String representing a SpecANDExpression
 
 <dt> o 
    <a href="#GetListNV(CATListValCATICfgNormalValue_var&amp;)"><b>GetListNV</b></a>(CATListValCATICfgNormalValue_var&amp;)
<dd>  Convert a SpecANDExpression to a list of Normal Values.
 <dt> o 
    <a href="#GetListOfSignedSpec(CATListValCATICfgSignedSpec_var&amp;)"><b>GetListOfSignedSpec</b></a>(CATListValCATICfgSignedSpec_var&amp;)
<dd>  Get the List of Signed Spec composing a  SpecANDExpression.
 <dt> o 
    <a href="#GetNbOfSignedSpec()"><b>GetNbOfSignedSpec</b></a>()
<dd>  Get the number of Signed Specs composing a SpecANDExpression.
 <dt> o 
    <a href="#IsIncludedIn(CATICfgSpecANDExpression_var&amp;)"><b>IsIncludedIn</b></a>(CATICfgSpecANDExpression_var&amp;)
<dd>  Inclusion test on two SpecANDExpressions.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddListOfSignedSpec"></a><a name="AddListOfSignedSpec(CATListValCATICfgSignedSpec_var&amp;)"></a> <dt> o <b>AddListOfSignedSpec</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddListOfSignedSpec</b>(<td>CATListValCATICfgSignedSpec_var&amp; <td><tt>iListSpec</tt>) =0  </table></dt>
<dl>
  <dd>
 Add a list of Signed Specs to a SpecANDexpression.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT value.
    <br><b>Legal values</b>:
    S_OK    : iListSpec successfully added.
    E_FAIL  : iListSpec is not compatible with "this" expression.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfSpecs</tt>
   <dd>    The List of SignedSpecs.</dd>
</dl>
</dl>
</dl>
<a name="AddSignedSpec"></a><a name="AddSignedSpec(CATICfgSignedSpec_var&amp;)"></a> <dt> o <b>AddSignedSpec</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddSignedSpec</b>(<td> const CATICfgSignedSpec_var&amp; <td><tt>iSpec</tt>)= 0  </table></dt>
<dl>
  <dd>
 Add a Signed Specific to a SpecANDExpression.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT value.
    <br><b>Legal values</b>:
    S_OK    : iSpec successfully added.
    E_FAIL  : iSpec is not compatible with "this" expression.
  
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpec</tt>
   <dd>    The Signed Specification to add.</dd>
</dl>
</dl>
</dl>
<a name="AddSpecANDExp"></a><a name="AddSpecANDExp(CATICfgSpecANDExpression_var&amp;)"></a> <dt> o <b>AddSpecANDExp</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddSpecANDExp</b>(<td> const CATICfgSpecANDExpression_var&amp; <td><tt>iSpecANDExp</tt>) = 0  </table></dt>
<dl>
  <dd>
  Add a SpecANDExpression to a SpecANDExpression(Concatenation).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT value.
    <br><b>Legal values</b>:
    S_OK    : iSpecANDExpr successfully added.
    E_FAIL  : iSpecANDExp is not compatible with "this" expression.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpecANDExp</tt>
   <dd>    The SpecANDExpression to add.</dd>
</dl>
</dl>
</dl>
<a name="CopySpecANDExp"></a><a name="CopySpecANDExp(CATICfgSpecANDExpression_var&amp;)"></a> <dt> o <b>CopySpecANDExp</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>CopySpecANDExp</b>(<td>CATICfgSpecANDExpression_var&amp; <td><tt>oSpecANDExpression</tt>) =0  </table></dt>
<dl>
  <dd>
 Copy a SpecANDExpression
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT Value.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSpecANDexpression</tt>
   <dd>    Copy of the SpecANDExpression.</dd>
</dl>
</dl>
</dl>
<a name="Dump"></a><a name="Dump()"></a> <dt> o <b>Dump</b>

<dt>  <table><tr><td>  public virtual void  <b>Dump</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Dump informations on a SpecANDExpression to STDOUT.
</dl>
<a name="EmptySpecANDExp"></a><a name="EmptySpecANDExp()"></a> <dt> o <b>EmptySpecANDExp</b>

<dt>  <table><tr><td>  public virtual void  <b>EmptySpecANDExp</b>(<td>)= 0   </table></dt>
<dl>
  <dd>
 Remove all Signed Specs from a SpecANDExpression.
</dl>
<a name="GetAsXmlString"></a><a name="GetAsXmlString(CATUnicodeString&amp;)"></a> <dt> o <b>GetAsXmlString</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAsXmlString</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oEncodedString</tt>) const = 0  </table></dt>
<dl>
  <dd>
  Get a XML String representing a SpecANDExpression
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    A CATUnicideString in XML format.
</dl>
</dl>
<a name="GetListNV"></a><a name="GetListNV(CATListValCATICfgNormalValue_var&amp;)"></a> <dt> o <b>GetListNV</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetListNV</b>(<td>CATListValCATICfgNormalValue_var&amp; <td><tt>oListNV</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Convert a SpecANDExpression to a list of Normal Values.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT Value. 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListNV</tt>
   <dd>   List Of Normal Values</dd>
</dl>
</dl>
</dl>
<a name="GetListOfSignedSpec"></a><a name="GetListOfSignedSpec(CATListValCATICfgSignedSpec_var&amp;)"></a> <dt> o <b>GetListOfSignedSpec</b>

<dt>  <table><tr><td>  public virtual void  <b>GetListOfSignedSpec</b>(<td>CATListValCATICfgSignedSpec_var&amp; <td><tt>oListOfSpec</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Get the List of Signed Spec composing a  SpecANDExpression.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfSpecs</tt>
   <dd>    The List of SignedSpecs.</dd>
</dl>
</dl>
</dl>
<a name="GetNbOfSignedSpec"></a><a name="GetNbOfSignedSpec()"></a> <dt> o <b>GetNbOfSignedSpec</b>

<dt>  <table><tr><td>  public virtual int  <b>GetNbOfSignedSpec</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Get the number of Signed Specs composing a SpecANDExpression.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An integer value (int).
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbVaLues</tt>
   <dd>    The number of Signed Specs.</dd>
</dl>
</dl>
</dl>
<a name="IsIncludedIn"></a><a name="IsIncludedIn(CATICfgSpecANDExpression_var&amp;)"></a> <dt> o <b>IsIncludedIn</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsIncludedIn</b>(<td>CATICfgSpecANDExpression_var&amp; <td><tt>iSpecANDExpression</tt>) = 0  </table></dt>
<dl>
  <dd>
 Inclusion test on two SpecANDExpressions. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT Value.
    <br><b>Legal values</b>:
    S_OK    : "this"  is included in iSpecANDExpression.
    S_FALSE : "this"  is not included in iSpecANDExpression.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpecANDExpression</tt>
   <dd>    The SpecANDExpression with wich inclusion will be tested.
 </dd>
    <dt><tt> oListSpecNonIncluded</tt>
   <dd>    Contains non-included specifications.
    example: "this" = "SpecA and SpecD",
             "iSpecANDExpression"= "SpecA and SpecC and SpecB".
    Result: ret = S_FALSE, and   "oListSpecNonIncluded" = "SpecD".</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICfgSpecANDExpression.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
