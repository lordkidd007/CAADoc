<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface CATICfgSignedSpec</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VPMInterfaces.htm" href="../VPMInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VPMInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICfgSignedSpec"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VPMInterfaces Interface CATICfgSignedSpec</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICfgSignedSpec_25094','CATICfgSignedSpec','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICfgSignedSpec</b>
</p>
<p>
<b><i> Class to manage operations on Signed Specifications.</i></b><br>

 <b>Role</b>: A Signed Specification is composed of a simple specification
 and a sign, giving the information of which of these two assertions is true:
 (Spec) or (!Spec).
 A Signed Spec is used in the context of Configuration.
 It serves to give an effectivity to a part Instance, the same way ranges or dates do.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICfgEffectivity','','CATICfgEffectivity') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CompareSignedSpec(CATICfgSignedSpec_var&amp;)"><b>CompareSignedSpec</b></a>(CATICfgSignedSpec_var&amp;)
<dd>  Comparaison between two Signed Specs.
 <dt> o 
    <a href="#CopyMe(CATICfgSignedSpec_var&amp;)"><b>CopyMe</b></a>(CATICfgSignedSpec_var&amp;)
<dd>  Duplicate a Signed Spec.
 <dt> o 
    <a href="#Dump()"><b>Dump</b></a>()
<dd>  Dump informations on Signed spec to STDOUT.
 <dt> o 
    <a href="#GetAsString()"><b>GetAsString</b></a>()
<dd>  String rep.
 <dt> o 
    <a href="#GetAsXmlString(CATUnicodeString&amp;)"><b>GetAsXmlString</b></a>(CATUnicodeString&amp;)
<dd>  Get a string representing the Signed Spec in XML format.
 <dt> o 
    <a href="#GetFullName(CATUnicodeString&amp;)"><b>GetFullName</b></a>(CATUnicodeString&amp;)
<dd>  Get full Signed Spec's Name.
 <dt> o 
    <a href="#GetName(CATUnicodeString&amp;)"><b>GetName</b></a>(CATUnicodeString&amp;)
<dd>  Get Signed Spec's Name.
 <dt> o 
    <a href="#GetSign()"><b>GetSign</b></a>()
<dd>  Get sign of a Signed Spec.
 <dt> o 
    <a href="#GetSpec(CATICfgSimpleSpecification_var&amp;)"><b>GetSpec</b></a>(CATICfgSimpleSpecification_var&amp;)
<dd>  Get Simple Specification composing Signed Specification.
 <dt> o 
    <a href="#IsTrue(CATListValCATICfgNormalValue_var&amp;)"><b>IsTrue</b></a>(CATListValCATICfgNormalValue_var&amp;)
<dd>  Find if a SignedSpec matches at least one criteria.
 <dt> o 
    <a href="#SearchInList(CATListValCATICfgSignedSpec_var&amp;)"><b>SearchInList</b></a>(CATListValCATICfgSignedSpec_var&amp;)
<dd>  Search Signed Spec in List of Signed Spec.
 <dt> o 
    <a href="#SetSign(int)"><b>SetSign</b></a>(int)
<dd>  Set sign of a Signed Spec.
 <dt> o 
    <a href="#SetSpec(CATICfgSimpleSpecification_var&amp;)"><b>SetSpec</b></a>(CATICfgSimpleSpecification_var&amp;)
<dd>  Get Simple Specification composing Signed Specification.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CompareSignedSpec"></a><a name="CompareSignedSpec(CATICfgSignedSpec_var&amp;)"></a> <dt> o <b>CompareSignedSpec</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>CompareSignedSpec</b>(<td> const <script type="text/javascript"> activateLink('CATICfgSignedSpec_var','CATICfgSignedSpec_var&amp;')</script> <td><tt>iSignedSpec</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Comparaison between two Signed Specs.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  An integer.
 <br><b>Legal values</b>: 0 means EQUAL. 1 means DIFFERENT.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSignedSpec</tt>
   <dd>   Signed Spec to compare with "this".</dd>
</dl>
</dl>
</dl>
<a name="CopyMe"></a><a name="CopyMe(CATICfgSignedSpec_var&amp;)"></a> <dt> o <b>CopyMe</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CopyMe</b>(<td><script type="text/javascript"> activateLink('CATICfgSignedSpec_var','CATICfgSignedSpec_var&amp;')</script> <td><tt>oSpec</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Duplicate a Signed Spec.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSpec</tt>
   <dd>     The copy of the Signed Spec.</dd>
</dl>
</dl>
</dl>
<a name="Dump"></a><a name="Dump()"></a> <dt> o <b>Dump</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Dump</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Dump informations on Signed spec to STDOUT.
</dl>
<a name="GetAsString"></a><a name="GetAsString()"></a> <dt> o <b>GetAsString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetAsString</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 String rep.
</dl>
<a name="GetAsXmlString"></a><a name="GetAsXmlString(CATUnicodeString&amp;)"></a> <dt> o <b>GetAsXmlString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAsXmlString</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oEncodedString</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get a string representing the Signed Spec in XML format.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEncodedString</tt>
   <dd>   XML string retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetFullName"></a><a name="GetFullName(CATUnicodeString&amp;)"></a> <dt> o <b>GetFullName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFullName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oName</tt>)<script type="text/javascript"> activateLink('0',' const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Get full Signed Spec's Name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>  Signed Spec'Name, given with the format "CategoryName.SpecName".</dd>
</dl>
</dl>
</dl>
<a name="GetName"></a><a name="GetName(CATUnicodeString&amp;)"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oName</tt>)<script type="text/javascript"> activateLink('0',' const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Get Signed Spec's Name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>  Signed Spec'Name, given alone.</dd>
</dl>
</dl>
</dl>
<a name="GetSign"></a><a name="GetSign()"></a> <dt> o <b>GetSign</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSign</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get sign of a Signed Spec.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An integer.
 <br><b>Legal values</b>: 1 counts for positive sign. Any other value counts for negative sign.
</dl>
</dl>
<a name="GetSpec"></a><a name="GetSpec(CATICfgSimpleSpecification_var&amp;)"></a> <dt> o <b>GetSpec</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetSpec</b>(<td><script type="text/javascript"> activateLink('CATICfgSimpleSpecification_var','CATICfgSimpleSpecification_var&amp;')</script> <td><tt>oSpec</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get Simple Specification composing Signed Specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSpec</tt>
   <dd>    The simple Specification retrieved.</dd>
</dl>
</dl>
</dl>
<a name="IsTrue"></a><a name="IsTrue(CATListValCATICfgNormalValue_var&amp;)"></a> <dt> o <b>IsTrue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsTrue</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATICfgNormalValue_var','CATListValCATICfgNormalValue_var&amp;')</script> <td><tt>iList</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Find if a SignedSpec matches at least one criteria.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>         S_OK : The SignedSpec matches one criteria
        S_FALSE : The SignedSpec matches no criteria
        E_FAIL : Error
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iList</tt>
   <dd>    List of criteria.</dd>
</dl>
</dl>
</dl>
<a name="SearchInList"></a><a name="SearchInList(CATListValCATICfgSignedSpec_var&amp;)"></a> <dt> o <b>SearchInList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>SearchInList</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATICfgSignedSpec_var','CATListValCATICfgSignedSpec_var&amp;')</script> <td><tt>iList</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Search Signed Spec in List of Signed Spec.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  An integer.
 <br><b>Legal values</b>: 0 means EQUAL. 1 means DIFFERENT.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSignedSpec</tt>
   <dd>   Signed Spec to search.</dd>
</dl>
</dl>
</dl>
<a name="SetSign"></a><a name="SetSign(int)"></a> <dt> o <b>SetSign</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSign</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>i</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set sign of a Signed Spec.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> i</tt>
   <dd>    Sign to set.
 <br><b>Legal values</b>: 1 counts for positive sign. Any other value counts for negative sign.</dd>
</dl>
</dl>
</dl>
<a name="SetSpec"></a><a name="SetSpec(CATICfgSimpleSpecification_var&amp;)"></a> <dt> o <b>SetSpec</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSpec</b>(<td> const <script type="text/javascript"> activateLink('CATICfgSimpleSpecification_var','CATICfgSimpleSpecification_var&amp;')</script> <td><tt>iSpec</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get Simple Specification composing Signed Specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpec</tt>
   <dd>   The simple Specification to set.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICfgSignedSpec.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

