<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVIAttachGCoEvent</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="interface_ENOVIAVolumeManager_71639.htm">Previous</a>  <a href="interface_ENOVIBookingObject_64680.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>VPMInterfaces Interface ENOVIAttachGCoEvent</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---ENOVIAttachGCoEvent
 </pre>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>ENOVIAttachGCoEvent</b>
</p>
<p>
<b><i> Class to be implemented by a client who wants to subscribe to events AttachOnGCo/DetachFromGCo which may be raised .</i></b><br>

 CallBack Interface : when the publisher raises an event AttachOnGCo/DetachFromGCo, the subscriber is called back on methods
 of this interface.
 <br><b>Role</b>: the Subscriber gives a pointer on the implementation of this interface for subscription.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#onAfterAttachOnGCo(ENOVIEvent_var&amp;,HRESULT&amp;)"><b>onAfterAttachOnGCo</b></a>(ENOVIEvent_var&amp;,HRESULT&amp;)
<dd>   Method called after an add generic component link action was done.
 <dt> o 
    <a href="#onAfterDetachFromGCo(ENOVIEvent_var&amp;,HRESULT&amp;)"><b>onAfterDetachFromGCo</b></a>(ENOVIEvent_var&amp;,HRESULT&amp;)
<dd>   Method called after a remove generic component link action was done.
 <dt> o 
    <a href="#onBeforeAttachOnGCo(ENOVIEvent_var&amp;,HRESULT&amp;)"><b>onBeforeAttachOnGCo</b></a>(ENOVIEvent_var&amp;,HRESULT&amp;)
<dd>   Method called before an add generic component link action is done .
 <dt> o 
    <a href="#onBeforeDetachFromGCo(ENOVIEvent_var&amp;,HRESULT&amp;)"><b>onBeforeDetachFromGCo</b></a>(ENOVIEvent_var&amp;,HRESULT&amp;)
<dd>   Method called before a remove generic component link action is done .
 <dt> o 
    <a href="#onKo(ENOVIEvent_var&amp;,HRESULT&amp;)"><b>onKo</b></a>(ENOVIEvent_var&amp;,HRESULT&amp;)
<dd>   CallBack method when something was wrong for another subscriber.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="onAfterAttachOnGCo"></a><a name="onAfterAttachOnGCo(ENOVIEvent_var&amp;,HRESULT&amp;)"></a> <dt> o <b>onAfterAttachOnGCo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>onAfterAttachOnGCo</b>(<td> const ENOVIEvent_var&amp; <td><tt>iRaisedEvent</tt>,<tr><td></td><td><a href="../System/typedef_HRESULT_8345.htm">HRESULT&amp;</a> <td><tt>ioNotifyReturnCode</tt>) = 0   </table></dt>
<dl>
  <dd>
  Method called after an add generic component link action was done.
 <br><b>Role</b>: to call back clients which subscribed to AttachOnGCo event -step after -
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRaisedEvent</tt>
   <dd>   the instance of event which is currently raised. It is the current GCo.
  </dd>
    <dt><tt> ioNotifyReturnCode</tt>
   <dd>   the status to be returned by the method : <br>
   E_FAIL if there was a problem <br>
   S_OK   if everything was right<br>
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../VPMInterfaces/interface_ENOVIEvent_19728.htm">ENOVIEvent</a>
</dl>
</dl>
<a name="onAfterDetachFromGCo"></a><a name="onAfterDetachFromGCo(ENOVIEvent_var&amp;,HRESULT&amp;)"></a> <dt> o <b>onAfterDetachFromGCo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>onAfterDetachFromGCo</b>(<td> const ENOVIEvent_var&amp; <td><tt>iRaisedEvent</tt>,<tr><td></td><td><a href="../System/typedef_HRESULT_8345.htm">HRESULT&amp;</a> <td><tt>ioNotifyReturnCode</tt>) = 0   </table></dt>
<dl>
  <dd>
  Method called after a remove generic component link action was done.
 <br><b>Role</b>: to call back clients which subscribed to DetachFromGCo event -step after -
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRaisedEvent</tt>
   <dd>   the instance of event which is currently raised. It is the current GCo.
  </dd>
    <dt><tt> ioNotifyReturnCode</tt>
   <dd>   the status to be returned by the method : <br>
   E_FAIL if there was a problem <br>
   S_OK   if everything was right<br>
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../VPMInterfaces/interface_ENOVIEvent_19728.htm">ENOVIEvent</a>
</dl>
</dl>
<a name="onBeforeAttachOnGCo"></a><a name="onBeforeAttachOnGCo(ENOVIEvent_var&amp;,HRESULT&amp;)"></a> <dt> o <b>onBeforeAttachOnGCo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>onBeforeAttachOnGCo</b>(<td> const ENOVIEvent_var&amp; <td><tt>iRaisedEvent</tt>,<tr><td></td><td><a href="../System/typedef_HRESULT_8345.htm">HRESULT&amp;</a> <td><tt>ioNotifyReturnCode</tt>) = 0   </table></dt>
<dl>
  <dd>
  Method called before an add generic component link action is done .
 <br><b>Role</b>: to call back clients which subscribed to AttachOnGCo event - step before -
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRaisedEvent</tt>
   <dd>   the instance of event which is currently raised. It is the current GCo.
  </dd>
    <dt><tt> ioNotifyReturnCode</tt>
   <dd>   the status to be returned by the method : <br>
   E_FAIL if there was a problem <br>
   E_ACCESSDENIED if the subscriber wants to put a veto . This code will be taken into account
   only if the event on the object type was declared veto able.
   S_OK   if everything was right<br>
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../VPMInterfaces/interface_ENOVIEvent_19728.htm">ENOVIEvent</a>
</dl>
</dl>
<a name="onBeforeDetachFromGCo"></a><a name="onBeforeDetachFromGCo(ENOVIEvent_var&amp;,HRESULT&amp;)"></a> <dt> o <b>onBeforeDetachFromGCo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>onBeforeDetachFromGCo</b>(<td> const ENOVIEvent_var&amp; <td><tt>iRaisedEvent</tt>,<tr><td></td><td><a href="../System/typedef_HRESULT_8345.htm">HRESULT&amp;</a> <td><tt>ioNotifyReturnCode</tt>) = 0   </table></dt>
<dl>
  <dd>
  Method called before a remove generic component link action is done .
 <br><b>Role</b>: to call back clients which subscribed to DetachFromGCo event - step before -
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRaisedEvent</tt>
   <dd>   the instance of event which is currently raised. It is the current GCo.
  </dd>
    <dt><tt> ioNotifyReturnCode</tt>
   <dd>   the status to be returned by the method : <br>
   E_FAIL if there was a problem <br>
   E_ACCESSDENIED if the subscriber wants to put a veto . This code will be taken into account
   only if the event on the object type was declared veto able.
   S_OK   if everything was right<br>
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../VPMInterfaces/interface_ENOVIEvent_19728.htm">ENOVIEvent</a>
</dl>
</dl>
<a name="onKo"></a><a name="onKo(ENOVIEvent_var&amp;,HRESULT&amp;)"></a> <dt> o <b>onKo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>onKo</b>(<td> const ENOVIEvent_var&amp; <td><tt>iRaisedEvent</tt>,<tr><td></td><td><a href="../System/typedef_HRESULT_8345.htm">HRESULT&amp;</a> <td><tt>ioNotifyReturnCode</tt>) = 0   </table></dt>
<dl>
  <dd>
  CallBack method when something was wrong for another subscriber.
 <br><b>Role</b>: this method is called by the event manager
  when a next subscriber returns a failure code from it's callback method.
  In that case, all the previous subscribers are called on their onKo() method.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEvent</tt>
   <dd>   the instance of event which is currently raised
  </dd>
    <dt><tt> ioNotifyReturnCode</tt>
   <dd>   the status of the onKo callback action
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../VPMInterfaces/interface_ENOVIEvent_19728.htm">ENOVIEvent</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVIAttachGCoEvent.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
