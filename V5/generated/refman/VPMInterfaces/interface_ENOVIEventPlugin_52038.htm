<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVIEventPlugin</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="interface_ENOVIEventManager_57700.htm">Previous</a>  <a href="interface_ENOVIExpandable_44673.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>VPMInterfaces Interface ENOVIEventPlugin</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---ENOVIEventPlugin
 </pre>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>ENOVIEventPlugin</b>
</p>
<p>
<b><i> Interface allowing to early subscribe to the event <b>CreateLoginSession</b> step <b>After</b>, before the creation of the Login Session.</i></b><br>


 <br><b>Role</b> : This unique entry point enables to postpone any additional subscription to any other event just
 after the creation of the Login Session, i.e. when a safe transactional context is available. 
 <br> All additional subscriptions have hence to be coded in the method <b>onAfterCreateLoginSession</b> of the subscriber class implementing the callback interface <a href="../VPMInterfaces/interface_ENOVISessionEvent_59299.htm#t">ENOVISessionEvent.t</a>.
 <br>This interface replaces the deprecated interface ENOVIPlugin since V5R13. It is strongly recommended that you migrate your existing code before the next release to comply with the new rules.

 <br><b>Usage</b> : The implementation of ENOVIEventPlugin has to be an extension of a dummy late type :
 <br>
 <br> CATImplementClass( MyEventPluginCode, DataExtension, CATBaseUnknown, MyDummyLateType );
 <br> #include "TIE_ENOVIEventPlugin.h"
 <br> TIE_ENOVIEventPlugin( MyEventPluginCode );
 <br>
 <br> A new line is to be added to the dictionary :
 <br> MyDummyLateType            ENOVIEventPlugin             libWhere_MyEventPluginCode_Is
 <br>
 <br> The only code 
 <br>

</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Init(ENOVIEventManager_var&amp;)"><b>Init</b></a>(ENOVIEventManager_var&amp;)
<dd>  Unique method of the plug-in interface called during the initialization of the Login Session (i.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Init"></a><a name="Init(ENOVIEventManager_var&amp;)"></a> <dt> o <b>Init</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Init</b>(<td> const ENOVIEventManager_var&amp; <td><tt>iEventManager</tt>)= 0  </table></dt>
<dl>
  <dd>
 Unique method of the plug-in interface called during the initialization of the Login Session (i.e. before any transactional context has been setup).
 <br><b>Role</b> : Method in which the subscription to the event CreateLoginSession, step After, must be coded thanks to the interface 
<a href="../VPMInterfaces/interface_ENOVIEventManager_57700.htm">ENOVIEventManager</a> passed as argument. <br>It is forbidden to perform other subscriptions or to raise events in any implementation of this method.
 <br>See the CAA use case CAAVpiAutomaticSubscription of the framework CAAVPMInterfaces.edu for an example of such an implementation.
</dl>
<hr>
 This object is included in the file: <b>ENOVIEventPlugin.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
