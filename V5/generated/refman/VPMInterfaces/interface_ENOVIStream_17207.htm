<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVIStream</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VPMInterfaces.htm" href="../VPMInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VPMInterfaces";	}
		function getCurrentObjectName() { 
 	return "ENOVIStream"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VPMInterfaces Interface ENOVIStream</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ENOVIStream_17207','ENOVIStream','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>ENOVIStream</b>
</p>
<p>
<b><i> Interface to carry extra information in event model, under a Backbone format.</i></b><br>

 <b>Role</b>: an ENOVIEvent carries some basic information about the raised event between Publisher and subscribers. 
  to associate extra information, the ENOVIStream is used .
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('ENOVIEvent','','ENOVIEvent') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddArgumentValue(CATUnicodeString&amp;,CORBAAny&amp;)"><b>AddArgumentValue</b></a>(CATUnicodeString&amp;,CORBAAny&amp;)
<dd>  
  Adds an argument value in the opened stream.
 <dt> o 
    <a href="#GetArgumentValue(CATUnicodeString&amp;,CORBAAny&amp;,CATUnicodeString&amp;)"><b>GetArgumentValue</b></a>(CATUnicodeString&amp;,CORBAAny&amp;,CATUnicodeString&amp;)
<dd>   For a given Argument name returns the type and the value of the argument.
 <dt> o 
    <a href="#GetArguments(CATListOfCATUnicodeString&amp;)"><b>GetArguments</b></a>(CATListOfCATUnicodeString&amp;)
<dd>   Gets the Event Data stored in the stream 
 <br><b>Role:</b> first get the list of arguments name, then ask for each argument the type and value.
 <dt> o 
    <a href="#GetCookieSession(CATUnicodeString&amp;)"><b>GetCookieSession</b></a>(CATUnicodeString&amp;)
<dd>  Gives the Cookie identifying the session this stream comes from.
 <dt> o 
    <a href="#GetName(CATUnicodeString&amp;)"><b>GetName</b></a>(CATUnicodeString&amp;)
<dd>   Gives the name of the stream
 
 <dt> o 
    <a href="#GetType(CATUnicodeString&amp;)"><b>GetType</b></a>(CATUnicodeString&amp;)
<dd>   Gives the type of stream 
  
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddArgumentValue"></a><a name="AddArgumentValue(CATUnicodeString&amp;,CORBAAny&amp;)"></a> <dt> o <b>AddArgumentValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddArgumentValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgument</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CORBAAny','CORBAAny&amp;')</script> <td><tt>iArgValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
  Adds an argument value in the opened stream.
  This argument must have been declared in the 
  Datastream definition in the XML event file.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgument</tt>
   <dd>       the argument name
 </dd>
    <dt><tt> oArgValue</tt>
   <dd>       the value of argument</dd>
</dl>
</dl>
</dl>
<a name="GetArgumentValue"></a><a name="GetArgumentValue(CATUnicodeString&amp;,CORBAAny&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetArgumentValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetArgumentValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgument</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CORBAAny','CORBAAny&amp;')</script> <td><tt>oArgValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oArgType</tt>)<script type="text/javascript"> activateLink('=0',' =0 ')</script>  </table></dt>
<dl>
  <dd>
  For a given Argument name returns the type and the value of the argument.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgument</tt>
   <dd>       the argument name
 </dd>
    <dt><tt> oArgValue</tt>
   <dd>  the value of argument
 </dd>
    <dt><tt> oArgType</tt>
   <dd>  type of argument</dd>
</dl>
</dl>
</dl>
<a name="GetArguments"></a><a name="GetArguments(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetArguments</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetArguments</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oAssociatedArgs</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Event Data stored in the stream 
 <br><b>Role:</b> first get the list of arguments name, then ask for each argument the type and value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAssociatedArgs</tt>
   <dd>    the list of arguments name.</dd>
</dl>
</dl>
</dl>
<a name="GetCookieSession"></a><a name="GetCookieSession(CATUnicodeString&amp;)"></a> <dt> o <b>GetCookieSession</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCookieSession</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oCookie</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gives the Cookie identifying the session this stream comes from.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCookie</tt>
   <dd> the session identifier</dd>
</dl>
</dl>
</dl>
<a name="GetName"></a><a name="GetName(CATUnicodeString&amp;)"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oName</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Gives the name of the stream
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>  Name of Stream</dd>
</dl>
</dl>
</dl>
<a name="GetType"></a><a name="GetType(CATUnicodeString&amp;)"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetType</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Gives the type of stream 
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>    the type of stream :<br>
   . ClientData : filled by the subscribers <br>
   . EventData  : filled by the publisher<br></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVIStream.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

