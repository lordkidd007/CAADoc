<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface CATIVpmFactoryObject</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VPMInterfaces.htm" href="../VPMInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VPMInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIVpmFactoryObject"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VPMInterfaces Interface CATIVpmFactoryObject</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIVpmFactoryObject_31205','CATIVpmFactoryObject','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIVpmFactoryObject</b>
</p>
<p>
<b><i> This interface is the base interface implemented by all persistent ENOVIA objects.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetContainer()"><b>GetContainer</b></a>()
<dd>    Get the receptacle container.
 <dt> o 
    <a href="#GetDomainName()"><b>GetDomainName</b></a>()
<dd>    Get the name of the domain.
 <dt> o 
    <a href="#GetEntityName()"><b>GetEntityName</b></a>()
<dd>    Get a logical name of the entity.
 <dt> o 
    <a href="#GetEnvironmentName()"><b>GetEnvironmentName</b></a>()
<dd>    Get the name of the environment.
 <dt> o 
    <a href="#GetInterfaceName()"><b>GetInterfaceName</b></a>()
<dd>    Get the name of the interface.
 <dt> o 
    <a href="#GetNickName()"><b>GetNickName</b></a>()
<dd>    Get the nickname.
 <dt> o 
    <a href="#GetObjectInfo(ENOVIObjectInfo_var&amp;)"><b>GetObjectInfo</b></a>(ENOVIObjectInfo_var&amp;)
<dd>    Get the type.
 <dt> o 
    <a href="#GetType(CATUnicodeString&amp;)"><b>GetType</b></a>(CATUnicodeString&amp;)
<dd>    Get the type by name.
 <dt> o 
    <a href="#IsAKindOf(CATUnicodeString&amp;)"><b>IsAKindOf</b></a>(CATUnicodeString&amp;)
<dd>    IsAKindOf.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetContainer"></a><a name="GetContainer()"></a> <dt> o <b>GetContainer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIContainer','CATIContainer_var')</script>  <b>GetContainer</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the receptacle container.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The container.
</dl>
</dl>
<a name="GetDomainName"></a><a name="GetDomainName()"></a> <dt> o <b>GetDomainName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetDomainName</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the name of the domain.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The name of the domain.
</dl>
</dl>
<a name="GetEntityName"></a><a name="GetEntityName()"></a> <dt> o <b>GetEntityName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetEntityName</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get a logical name of the entity.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The logical name.
</dl>
</dl>
<a name="GetEnvironmentName"></a><a name="GetEnvironmentName()"></a> <dt> o <b>GetEnvironmentName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetEnvironmentName</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the name of the environment.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The name of the environment.
</dl>
</dl>
<a name="GetInterfaceName"></a><a name="GetInterfaceName()"></a> <dt> o <b>GetInterfaceName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetInterfaceName</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the name of the interface.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The interface's name.
</dl>
</dl>
<a name="GetNickName"></a><a name="GetNickName()"></a> <dt> o <b>GetNickName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetNickName</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the nickname.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The nickname.
</dl>
</dl>
<a name="GetObjectInfo"></a><a name="GetObjectInfo(ENOVIObjectInfo_var&amp;)"></a> <dt> o <b>GetObjectInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetObjectInfo</b>(<td><script type="text/javascript"> activateLink('ENOVIObjectInfo_var','ENOVIObjectInfo_var&amp;')</script> <td><tt>oObjetType</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
   Get the type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oObjetType</tt>
   <dd>   The corresponding ENOVIObjectInfo.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Lock Owner is valuated</dd>
     <dt>S_FALSE</dt>
     <dd>Lock Owner is not assign</dd>
   </dl>
</dl>
</dl>
<a name="GetType"></a><a name="GetType(CATUnicodeString&amp;)"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetType</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the type by name.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>   The type of the object.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Type is retrieved</dd>
     <dt>E_FAIL</dt>
     <dd>An error occured during the process</dd>
   </dl>
</dl>
</dl>
<a name="IsAKindOf"></a><a name="IsAKindOf(CATUnicodeString&amp;)"></a> <dt> o <b>IsAKindOf</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsAKindOf</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   IsAKindOf.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   The type to test.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>IsAKindOf is TRUE</dd>
     <dt>S_FALSE</dt>
     <dd>IsAKindOf is FALSE</dd>
     <dt>E_FAIL</dt>
     <dd>An error occured during the process</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIVpmFactoryObject.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

