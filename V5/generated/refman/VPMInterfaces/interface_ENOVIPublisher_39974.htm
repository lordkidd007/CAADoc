<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVIPublisher</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="interface_ENOVIProperty_35450.htm">Previous</a>  <a href="interface_ENOVIRelationship_59943.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>VPMInterfaces Interface ENOVIPublisher</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---ENOVIPublisher
 </pre>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>ENOVIPublisher</b>
</p>
<p>
<b><i>   Publishing events inside an object.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetListOfRaisableEvents(CATListOfCATUnicodeString&amp;)"><b>GetListOfRaisableEvents</b></a>(CATListOfCATUnicodeString&amp;)
<dd>  Return the list of events which can be raised by the Publisher.
 <dt> o 
    <a href="#GetName(CATUnicodeString&amp;)"><b>GetName</b></a>(CATUnicodeString&amp;)
<dd>  Returns the Publisher Type.
 <dt> o 
    <a href="#GetObjectInfo(ENOVIObjectInfo_var&amp;)"><b>GetObjectInfo</b></a>(ENOVIObjectInfo_var&amp;)
<dd>  Return a pointer to the ENOVIObjectInfo interface associated to this publisher instance.
 <dt> o 
    <a href="#GetSubscribers(CATUnicodeString&amp;,CATLISTV(CATBaseUnknown_var)&amp;,ENOVIEvent::VPMEventFireMode&amp;)"><b>GetSubscribers</b></a>(CATUnicodeString&amp;,CATLISTV(CATBaseUnknown_var)&amp;,ENOVIEvent::VPMEventFireMode&amp;)
<dd>  Return the list of clients that subscribed to the specified event on this publisher instance.
 <dt> o 
    <a href="#Subscribe(CATUnicodeString&amp;,CATBaseUnknown_var&amp;,IID&amp;,ENOVIEvent::VPMEventFireMode&amp;,unsigned long*,int&amp;)"><b>Subscribe</b></a>(CATUnicodeString&amp;,CATBaseUnknown_var&amp;,IID&amp;,ENOVIEvent::VPMEventFireMode&amp;,unsigned long*,int&amp;)
<dd>      Subscribe directly a client to an Event on a publisher instance.
 <dt> o 
    <a href="#Subscribe(CATUnicodeString&amp;,ENOVISubscriberEvent_var&amp;,ENOVIEvent::VPMEventFireMode&amp;,unsigned long*,int&amp;)"><b>Subscribe</b></a>(CATUnicodeString&amp;,ENOVISubscriberEvent_var&amp;,ENOVIEvent::VPMEventFireMode&amp;,unsigned long*,int&amp;)
<dd>      Subscribe directly a client to an Event on a publisher instance.
 <dt> o 
    <a href="#Unsubscribe(unsigned long)"><b>Unsubscribe</b></a>(unsigned long)
<dd>    unsubscription of the client.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetListOfRaisableEvents"></a><a name="GetListOfRaisableEvents(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetListOfRaisableEvents</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetListOfRaisableEvents</b>(<td><a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">CATListOfCATUnicodeString&amp;</a> <td><tt>oListOfManagedEvents</tt>) = 0  </table></dt>
<dl>
  <dd>
 Return the list of events which can be raised by the Publisher.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oListOfManagedEvents</tt>
   <dd>  the list of events.
</dd>
</dl>
</dl>
</dl>
<a name="GetName"></a><a name="GetName(CATUnicodeString&amp;)"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetName</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oName</tt>) = 0  </table></dt>
<dl>
  <dd>
 Returns the Publisher Type. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>  Type of publisher</dd>
</dl>
</dl>
</dl>
<a name="GetObjectInfo"></a><a name="GetObjectInfo(ENOVIObjectInfo_var&amp;)"></a> <dt> o <b>GetObjectInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetObjectInfo</b>(<td>ENOVIObjectInfo_var&amp; <td><tt>oObjectInfo</tt>) = 0  </table></dt>
<dl>
  <dd>
 Return a pointer to the ENOVIObjectInfo interface associated to this publisher instance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oObjectInfo</tt>
   <dd>  the pointer to the ENOVIObjectInfo interface.</dd>
</dl>
</dl>
</dl>
<a name="GetSubscribers"></a><a name="GetSubscribers(CATUnicodeString&amp;,CATLISTV(CATBaseUnknown_var)&amp;,ENOVIEvent::VPMEventFireMode&amp;)"></a> <dt> o <b>GetSubscribers</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSubscribers</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iEventName</tt>,<tr><td></td><td><a href="../System/class_CATLISTV(CATBaseUnknown_var)_145794.htm">CATLISTV(CATBaseUnknown_var)&amp;</a> <td><tt>oListOfSubscribers</tt>,<tr><td></td><td> const ENOVIEvent::VPMEventFireMode&amp; <td><tt>iFireMode</tt><td><tt>= ENOVIEvent::EventFireStandard</tt>)=0  </table></dt>
<dl>
  <dd>
 Return the list of clients that subscribed to the specified event on this publisher instance.
    
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iEventName</tt>
   <dd>          name of the event subscribed to.
    </dd>
    <dt><tt>  oListOfSubscribers</tt>
   <dd>         the returned list of subscribers as a collection of CATBaseUnknown pointers.
    </dd>
    <dt><tt>  iFireMode</tt>
   <dd>         the step subscribed to (before/after or both i.e. standard).
</dd>
</dl>
</dl>
</dl>
<a name="Subscribe"></a><a name="Subscribe(CATUnicodeString&amp;,CATBaseUnknown_var&amp;,IID&amp;,ENOVIEvent::VPMEventFireMode&amp;,unsigned long*,int&amp;)"></a> <dt> o <b>Subscribe</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Subscribe</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iEventName</tt>,<tr><td></td><td> const <a href="../System/class_CATBaseUnknown_var_67834.htm">CATBaseUnknown_var&amp;</a> <td><tt>iCallBackInterface</tt>,<tr><td></td><td> const <a href="../System/typedef_IID_1488.htm">IID&amp;</a> <td><tt>iIDOfInterface</tt>,<tr><td></td><td> const ENOVIEvent::VPMEventFireMode&amp; <td><tt>iFireMode</tt>,<tr><td></td><td>unsigned long* <td><tt>oSubscriberCookie</tt>,<tr><td></td><td> const int&amp; <td><tt>iPriority</tt><td><tt>= 5</tt>)=0  </table></dt>
<dl>
  <dd>
     Subscribe directly a client to an Event on a publisher instance.
 <br><b>Role</b>: allows a client to subscribe directly on a publisher, without using 
<a href="../VPMInterfaces/interface_ENOVIEventManager_57700.htm">ENOVIEventManager</a> interface.  It is a EARLY subscription, i.e. the client implements an explicit CallBack interface.
    
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iEventName</tt>
   <dd>          event name you want to subscribe to.
    </dd>
    <dt><tt>  iCallBackInterface</tt>
   <dd>          interface for the callback methods, implemented by the client which subscribes.
    </dd>
    <dt><tt>  iIDOfInterface</tt>
   <dd>            Real ID of iCallBackInterface
    </dd>
    <dt><tt>  iFireMode</tt>
   <dd>          step you want to subscribe to (before/after or both).
    </dd>
    <dt><tt>  iPriority</tt>
   <dd>          priority of subscription. from 1 to 9 - standard = 5.
    </dd>
    <dt><tt> oSubscriberCookie</tt>
   <dd>       a cookie to keep for a further unsubscription.
</dd>
</dl>
</dl>
</dl>
<a name="Subscribe"></a><a name="Subscribe(CATUnicodeString&amp;,ENOVISubscriberEvent_var&amp;,ENOVIEvent::VPMEventFireMode&amp;,unsigned long*,int&amp;)"></a> <dt> o <b>Subscribe</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Subscribe</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iEventName</tt>,<tr><td></td><td> const ENOVISubscriberEvent_var&amp; <td><tt>iSubscriber</tt>,<tr><td></td><td> const ENOVIEvent::VPMEventFireMode&amp; <td><tt>iFireMode</tt>,<tr><td></td><td>unsigned long* <td><tt>oSubscriberCookie</tt>,<tr><td></td><td> const int&amp; <td><tt>iPriority</tt><td><tt>= 5</tt>)=0  </table></dt>
<dl>
  <dd>
     Subscribe directly a client to an Event on a publisher instance.
 <br><b>Role</b>: allows a client to subscribe directly on a publisher, without using 
<a href="../VPMInterfaces/interface_ENOVIEventManager_57700.htm">ENOVIEventManager</a> interface.  It is a LATE subscription, i.e. the client implements a generic CallBack interface 
<a href="../VPMInterfaces/interface_ENOVISubscriberEvent_81954.htm">ENOVISubscriberEvent</a> .    
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iEventName</tt>
   <dd>          event name you want to subscribe to.
    </dd>
    <dt><tt>  iSubscriber</tt>
   <dd>          implementation of callback interface ENOVISubscriberEvent
    </dd>
    <dt><tt>  iIDOfInterface</tt>
   <dd>            Real ID of iCallBackInterface
    </dd>
    <dt><tt>  iFireMode</tt>
   <dd>          step you want to subscribe to (before/after or both i.e. standard).
    </dd>
    <dt><tt>  iPriority</tt>
   <dd>          priority of subscription. from 1 to 9 - standard = 5.
    </dd>
    <dt><tt> oSubscriberCookie</tt>
   <dd>       a cookie to keep for a further unsubscription.
</dd>
</dl>
</dl>
</dl>
<a name="Unsubscribe"></a><a name="Unsubscribe(unsigned long)"></a> <dt> o <b>Unsubscribe</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Unsubscribe</b>(<td>unsigned long <td><tt>iSubscriberCookie</tt>)=0  </table></dt>
<dl>
  <dd>
   unsubscription of the client.
    
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iSubscriberCookie</tt>
   <dd>     the cookie given at subscription time.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVIPublisher.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
