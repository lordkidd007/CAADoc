<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVIStream</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="interface_ENOVISessionEvent_59299.htm">Previous</a>  <a href="interface_ENOVISubScribeGroupMod_96696.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>VPMInterfaces Interface ENOVIStream</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---ENOVIStream
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>ENOVIStream</b>
</p>
<p>
<b><i> Interface to carry extra information in event model, under a Backbone format.</i></b><br>

 <b>Role</b>: an ENOVIEvent carries some basic information about the raised event between Publisher and subscribers. 
  to associate extra information, the ENOVIStream is used .
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../VPMInterfaces/interface_ENOVIEvent_19728.htm">ENOVIEvent</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddArgumentValue(CATUnicodeString&amp;,CORBAAny&amp;)"><b>AddArgumentValue</b></a>(CATUnicodeString&amp;,CORBAAny&amp;)
<dd>  
  Adds an argument value in the opened stream.
 <dt> o 
    <a href="#GetArgumentValue(CATUnicodeString&amp;,CORBAAny&amp;,CATUnicodeString&amp;)"><b>GetArgumentValue</b></a>(CATUnicodeString&amp;,CORBAAny&amp;,CATUnicodeString&amp;)
<dd>   For a given Argument name returns the type and the value of the argument.
 <dt> o 
    <a href="#GetArguments(CATListOfCATUnicodeString&amp;)"><b>GetArguments</b></a>(CATListOfCATUnicodeString&amp;)
<dd>   Gets the Event Data stored in the stream 
 <br><b>Role:</b> first get the list of arguments name, then ask for each argument the type and value.
 <dt> o 
    <a href="#GetCookieSession(CATUnicodeString&amp;)"><b>GetCookieSession</b></a>(CATUnicodeString&amp;)
<dd>  Gives the Cookie identifying the session this stream comes from.
 <dt> o 
    <a href="#GetName(CATUnicodeString&amp;)"><b>GetName</b></a>(CATUnicodeString&amp;)
<dd>   Gives the name of the stream
 
 <dt> o 
    <a href="#GetType(CATUnicodeString&amp;)"><b>GetType</b></a>(CATUnicodeString&amp;)
<dd>   Gives the type of stream 
  
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddArgumentValue"></a><a name="AddArgumentValue(CATUnicodeString&amp;,CORBAAny&amp;)"></a> <dt> o <b>AddArgumentValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddArgumentValue</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iArgument</tt>,<tr><td></td><td> const <a href="../ObjectModelerSystem/class_CORBAAny_11616.htm">CORBAAny&amp;</a> <td><tt>iArgValue</tt>) = 0  </table></dt>
<dl>
  <dd>
 
  Adds an argument value in the opened stream.
  This argument must have been declared in the 
  Datastream definition in the XML event file.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgument</tt>
   <dd>       the argument name
 </dd>
    <dt><tt> oArgValue</tt>
   <dd>       the value of argument</dd>
</dl>
</dl>
</dl>
<a name="GetArgumentValue"></a><a name="GetArgumentValue(CATUnicodeString&amp;,CORBAAny&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetArgumentValue</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetArgumentValue</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iArgument</tt>,<tr><td></td><td><a href="../ObjectModelerSystem/class_CORBAAny_11616.htm">CORBAAny&amp;</a> <td><tt>oArgValue</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oArgType</tt>) =0   </table></dt>
<dl>
  <dd>
  For a given Argument name returns the type and the value of the argument.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgument</tt>
   <dd>       the argument name
 </dd>
    <dt><tt> oArgValue</tt>
   <dd>  the value of argument
 </dd>
    <dt><tt> oArgType</tt>
   <dd>  type of argument</dd>
</dl>
</dl>
</dl>
<a name="GetArguments"></a><a name="GetArguments(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetArguments</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetArguments</b>(<td><a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">CATListOfCATUnicodeString&amp;</a> <td><tt>oAssociatedArgs</tt>) = 0  </table></dt>
<dl>
  <dd>
  Gets the Event Data stored in the stream 
 <br><b>Role:</b> first get the list of arguments name, then ask for each argument the type and value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAssociatedArgs</tt>
   <dd>    the list of arguments name.</dd>
</dl>
</dl>
</dl>
<a name="GetCookieSession"></a><a name="GetCookieSession(CATUnicodeString&amp;)"></a> <dt> o <b>GetCookieSession</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCookieSession</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oCookie</tt>)=0  </table></dt>
<dl>
  <dd>
 Gives the Cookie identifying the session this stream comes from.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCookie</tt>
   <dd> the session identifier</dd>
</dl>
</dl>
</dl>
<a name="GetName"></a><a name="GetName(CATUnicodeString&amp;)"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetName</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oName</tt>)=0  </table></dt>
<dl>
  <dd>
  Gives the name of the stream
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>  Name of Stream</dd>
</dl>
</dl>
</dl>
<a name="GetType"></a><a name="GetType(CATUnicodeString&amp;)"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetType</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oType</tt>)=0  </table></dt>
<dl>
  <dd>
  Gives the type of stream 
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>    the type of stream :<br>
   . ClientData : filled by the subscribers <br>
   . EventData  : filled by the publisher<br></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVIStream.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
