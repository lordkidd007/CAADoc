<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface VPMIAdmin</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VPMInterfaces.htm" href="../VPMInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VPMInterfaces";	}
		function getCurrentObjectName() { 
 	return "VPMIAdmin"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VPMInterfaces Interface VPMIAdmin</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_VPMIAdmin_15223','VPMIAdmin','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>VPMIAdmin</b>
</p>
<p>
<b><i> This class supplies methods to manage administration data
 <b>role</b>: This class enables to create/delete/modify administration data</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Abort()"><b>Abort</b></a>()
<dd>  Cancel of all the modifications which have been done since the last Save.
 <dt> o 
    <a href="#AddProject(VPMIProject*)"><b>AddProject</b></a>(VPMIProject*)
<dd>  Aggregate a project.
 <dt> o 
    <a href="#BeginModifications()"><b>BeginModifications</b></a>()
<dd>  Enable modifications.
 <dt> o 
    <a href="#CreateObject(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)"><b>CreateObject</b></a>(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)
<dd>  Method for parsing purpose: create object.
 <dt> o 
    <a href="#CreateProject(CATDbBinary&amp;,VPMIProject*&amp;)"><b>CreateProject</b></a>(CATDbBinary&amp;,VPMIProject*&amp;)
<dd>  Create the project identified by iOid.
 <dt> o 
    <a href="#End()"><b>End</b></a>()
<dd>  Release of the allocated resources.
 <dt> o 
    <a href="#GetAllExternSite(CATLISTP(IUnknown)&amp;)"><b>GetAllExternSite</b></a>(CATLISTP(IUnknown)&amp;)
<dd>  Get the list of all external site objects.
 <dt> o 
    <a href="#GetAllReplPackageDefinition(CATLISTP(IUnknown)&amp;)"><b>GetAllReplPackageDefinition</b></a>(CATLISTP(IUnknown)&amp;)
<dd>  Get the list of all package definition objects.
 <dt> o 
    <a href="#GetAllReplSubscribingTarget(CATLISTP(IUnknown)&amp;)"><b>GetAllReplSubscribingTarget</b></a>(CATLISTP(IUnknown)&amp;)
<dd>  Get all subscribing targets known by the site.
 <dt> o 
    <a href="#GetAllReplSubscription(CATLISTP(IUnknown)&amp;)"><b>GetAllReplSubscription</b></a>(CATLISTP(IUnknown)&amp;)
<dd>  Get the list of all Subscription objects.
 <dt> o 
    <a href="#GetListOfAppServers(CATLISTP(IUnknown)*)"><b>GetListOfAppServers</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all application server objects.
 <dt> o 
    <a href="#GetListOfBusinessDomains(CATLISTP(IUnknown)*)"><b>GetListOfBusinessDomains</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all business domain objects.
 <dt> o 
    <a href="#GetListOfDataDomains(CATLISTP(IUnknown)*)"><b>GetListOfDataDomains</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all data domain objects.
 <dt> o 
    <a href="#GetListOfDataServers(CATLISTP(IUnknown)*)"><b>GetListOfDataServers</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all data server objects.
 <dt> o 
    <a href="#GetListOfDomains(CATLISTP(IUnknown)*)"><b>GetListOfDomains</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all domain objects.
 <dt> o 
    <a href="#GetListOfHosts(CATLISTP(IUnknown)*)"><b>GetListOfHosts</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all host objects.
 <dt> o 
    <a href="#GetListOfProjects(CATLISTP(IUnknown)*)"><b>GetListOfProjects</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all project objects.
 <dt> o 
    <a href="#GetListOfProjects(CATUnicodeString&amp;,CATLISTP(IUnknown)*)"><b>GetListOfProjects</b></a>(CATUnicodeString&amp;,CATLISTP(IUnknown)*)
<dd>  Get the list of all projects.
 <dt> o 
    <a href="#GetListOfRelatedBusinessDomains(CATUnicodeString&amp;,CATLISTP(IUnknown)*)"><b>GetListOfRelatedBusinessDomains</b></a>(CATUnicodeString&amp;,CATLISTP(IUnknown)*)
<dd>  Get the list of all business domains objects related to a given schema.
 <dt> o 
    <a href="#GetListOfVaultServers(CATLISTP(IUnknown)*)"><b>GetListOfVaultServers</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all vault server objects.
 <dt> o 
    <a href="#GetObject(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)"><b>GetObject</b></a>(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)
<dd>  Method for parsing purpose: get object.
 <dt> o 
    <a href="#GetProject(CATDbBinary&amp;,VPMIProject*&amp;)"><b>GetProject</b></a>(CATDbBinary&amp;,VPMIProject*&amp;)
<dd>  Get the project identified by iOid.
 <dt> o 
    <a href="#GetProject(CATUnicodeString&amp;,VPMIProject**)"><b>GetProject</b></a>(CATUnicodeString&amp;,VPMIProject**)
<dd>  Get a project object named iName.
 <dt> o 
    <a href="#Init(CATUnicodeString&amp;,CATUnicodeString&amp;,int)"><b>Init</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,int)
<dd>  Initialization.
 <dt> o 
    <a href="#RemoveAllInstances()"><b>RemoveAllInstances</b></a>()
<dd>  mark all instances aggregated by the VPMIAdmin to be deleted.
 <dt> o 
    <a href="#Save()"><b>Save</b></a>()
<dd>  Save of all the modifications which have been done during the current logical unit of work.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ADMINTYPE"><b>ADMINTYPE</b></a>
<dd>  Enum of admin types.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Abort"></a><a name="Abort()"></a> <dt> o <b>Abort</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Abort</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Cancel of all the modifications which have been done since the last Save.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddProject"></a><a name="AddProject(VPMIProject*)"></a> <dt> o <b>AddProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddProject</b>(<td> const <script type="text/javascript"> activateLink('VPMIProject','VPMIProject*')</script> <td><tt>iProject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a project.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProject</tt>
   <dd> the Project to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="BeginModifications"></a><a name="BeginModifications()"></a> <dt> o <b>BeginModifications</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeginModifications</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Enable modifications.  
 =>Do not use it during the VPMSession.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="CreateObject"></a><a name="CreateObject(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)"></a> <dt> o <b>CreateObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateObject</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('VPMIAdmin::ADMINTYPE','VPMIAdmin::ADMINTYPE')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown*&amp;')</script> <td><tt>oObject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Method for parsing purpose: create object.
</dl>
<a name="CreateProject"></a><a name="CreateProject(CATDbBinary&amp;,VPMIProject*&amp;)"></a> <dt> o <b>CreateProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateProject</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIProject','VPMIProject*&amp;')</script> <td><tt>oProject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the project identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oProject</tt>
   <dd>  [out, VPMIProject#Release] the project to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: project not created
  <tt>S_FALSE</tt>:project not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="End"></a><a name="End()"></a> <dt> o <b>End</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>End</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Release of the allocated resources.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetAllExternSite"></a><a name="GetAllExternSite(CATLISTP(IUnknown)&amp;)"></a> <dt> o <b>GetAllExternSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllExternSite</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)&amp;')</script> <td><tt>lExternSite</tt>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all external site objects.
</dl>
<a name="GetAllReplPackageDefinition"></a><a name="GetAllReplPackageDefinition(CATLISTP(IUnknown)&amp;)"></a> <dt> o <b>GetAllReplPackageDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllReplPackageDefinition</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)&amp;')</script> <td><tt>olReplPackageDefinition</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all package definition objects.
</dl>
<a name="GetAllReplSubscribingTarget"></a><a name="GetAllReplSubscribingTarget(CATLISTP(IUnknown)&amp;)"></a> <dt> o <b>GetAllReplSubscribingTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllReplSubscribingTarget</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)&amp;')</script> <td><tt>oSubscribingTargets</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get all subscribing targets known by the site.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSubscribingTargets</tt>
   <dd> the list required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site found
  <tt>S_FALSE</tt>:site not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetAllReplSubscription"></a><a name="GetAllReplSubscription(CATLISTP(IUnknown)&amp;)"></a> <dt> o <b>GetAllReplSubscription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllReplSubscription</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)&amp;')</script> <td><tt>oSubscription</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all Subscription objects.
</dl>
<a name="GetListOfAppServers"></a><a name="GetListOfAppServers(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfAppServers</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfAppServers</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfAppServers</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all application server objects.
</dl>
<a name="GetListOfBusinessDomains"></a><a name="GetListOfBusinessDomains(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfBusinessDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfBusinessDomains</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfBusinessDomains</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all business domain objects.
</dl>
<a name="GetListOfDataDomains"></a><a name="GetListOfDataDomains(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfDataDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfDataDomains</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfDataDomains</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all data domain objects.
</dl>
<a name="GetListOfDataServers"></a><a name="GetListOfDataServers(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfDataServers</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfDataServers</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfDataServers</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all data server objects.
</dl>
<a name="GetListOfDomains"></a><a name="GetListOfDomains(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfDomains</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfDomains</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all domain objects.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetListOfHosts"></a><a name="GetListOfHosts(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfHosts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfHosts</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfHosts</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all host objects.
</dl>
<a name="GetListOfProjects"></a><a name="GetListOfProjects(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfProjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfProjects</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfProjects</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all project objects.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetListOfProjects"></a><a name="GetListOfProjects(CATUnicodeString&amp;,CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfProjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfProjects</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iUserName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfProjects</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all projects.
    N.B.: input user name parameter is not used.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>:
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetListOfRelatedBusinessDomains"></a><a name="GetListOfRelatedBusinessDomains(CATUnicodeString&amp;,CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfRelatedBusinessDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfRelatedBusinessDomains</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSchemaName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all business domains objects related to a given schema.
</dl>
<a name="GetListOfVaultServers"></a><a name="GetListOfVaultServers(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfVaultServers</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfVaultServers</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfVaultServers</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all vault server objects.
</dl>
<a name="GetObject"></a><a name="GetObject(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)"></a> <dt> o <b>GetObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetObject</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('VPMIAdmin::ADMINTYPE','VPMIAdmin::ADMINTYPE')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown*&amp;')</script> <td><tt>oObject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Method for parsing purpose: get object.
</dl>
<a name="GetProject"></a><a name="GetProject(CATDbBinary&amp;,VPMIProject*&amp;)"></a> <dt> o <b>GetProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProject</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIProject','VPMIProject*&amp;')</script> <td><tt>oProject</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the project identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oProject</tt>
   <dd> [out, VPMIProject#Release] the project required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: project not found
  <tt>S_FALSE</tt>:project not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetProject"></a><a name="GetProject(CATUnicodeString&amp;,VPMIProject**)"></a> <dt> o <b>GetProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProject</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIProject','VPMIProject**')</script> <td><tt>oProject</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get a project object named iName.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProject</tt>
   <dd> [out, VPMIProject#Release] 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>:
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="Init"></a><a name="Init(CATUnicodeString&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>Init</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Init</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iUserName</tt><td><tt>=""</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPassword</tt><td><tt>=""</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLoadAdmin</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Initialization.
 Default Authentication is System
 N.B.: iLoadAdmin > 0 in the LoadAdmin load only.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="RemoveAllInstances"></a><a name="RemoveAllInstances()"></a> <dt> o <b>RemoveAllInstances</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAllInstances</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 mark all instances aggregated by the VPMIAdmin to be deleted.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:
  <tt>S_FALSE</tt>:
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="Save"></a><a name="Save()"></a> <dt> o <b>Save</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Save</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Save of all the modifications which have been done during the current logical unit of work.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ADMINTYPE"> <dt> o <b>ADMINTYPE</b>
<dl>
  <dd>
<pre>
enum <b>ADMINTYPE</b> {
  ADMINAPPLYSTATUS,
  ADMINAPPSERVER,
  ADMINCAPTURESTATUS,
  ADMINBUSINESSDOMAIN,
  ADMINDATAFILE,
  ADMINDATARDB,
  ADMINDATASERVER,
  ADMINDOMAIN,
  ADMINEXTERNSITE,
  ADMINHOST,
  ADMINLOCALSITE,
  ADMINMEDIA,
  ADMINPACKAGEDEFINITION,
  ADMINPROJECT,
  ADMINSERVER,
  ADMINSUBSCRIBINGTARGET,
  ADMINSUBSCRIPTION,
  ADMINVAULTSERVER
}
</pre>
 Enum of admin types.
</dl>
<hr>
 This object is included in the file: <b>VPMIAdmin.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

