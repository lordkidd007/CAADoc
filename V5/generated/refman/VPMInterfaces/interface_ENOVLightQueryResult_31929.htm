<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVLightQueryResult</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VPMInterfaces.htm" href="../VPMInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VPMInterfaces";	}
		function getCurrentObjectName() { 
 	return "ENOVLightQueryResult"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VPMInterfaces Interface ENOVLightQueryResult</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ENOVLightQueryResult_31929','ENOVLightQueryResult','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>ENOVLightQueryResult</b>
</p>
<p>
<b><i>  Class containing the results of a Light Query.</i></b><br>
 The structure contains the identifiers of the objects results of the query,
 as well as the attribute values of those objects.
 <b>Role</b>: This class gives access to the results of a Light Query.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#getAllValuesForAttribute(CATUnicodeString&amp;,_SEQUENCE_CORBAAny&amp;,CATListOfInt&amp;)"><b>getAllValuesForAttribute</b></a>(CATUnicodeString&amp;,_SEQUENCE_CORBAAny&amp;,CATListOfInt&amp;)
<dd>   Gets the values of one specific attribute for all rows (objects) result of the query.
 <dt> o 
    <a href="#getAttributesNames(CATListOfCATUnicodeString&amp;,CATListOfInt&amp;)"><b>getAttributesNames</b></a>(CATListOfCATUnicodeString&amp;,CATListOfInt&amp;)
<dd>   Gets the available attribute names in the results and their type.
 <dt> o 
    <a href="#getAttributesValues(int&amp;,CATListOfCATUnicodeString&amp;,_SEQUENCE_CORBAAny&amp;,CATListOfInt&amp;)"><b>getAttributesValues</b></a>(int&amp;,CATListOfCATUnicodeString&amp;,_SEQUENCE_CORBAAny&amp;,CATListOfInt&amp;)
<dd>   Gets the attribute values of one specific row (object) result of the query, for a list of attributes.
 <dt> o 
    <a href="#getIdentifiers(CATListOfInt&amp;,CATListOfENOVQObjectIdentity&amp;)"><b>getIdentifiers</b></a>(CATListOfInt&amp;,CATListOfENOVQObjectIdentity&amp;)
<dd>   Gets the identifiers of the selected rows (objects) result of the query.
 <dt> o 
    <a href="#getReturnCount(int&amp;)"><b>getReturnCount</b></a>(int&amp;)
<dd>   Gets the number of objects result of the query.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="getAllValuesForAttribute"></a><a name="getAllValuesForAttribute(CATUnicodeString&amp;,_SEQUENCE_CORBAAny&amp;,CATListOfInt&amp;)"></a> <dt> o <b>getAllValuesForAttribute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getAllValuesForAttribute</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('_SEQUENCE_CORBAAny','_SEQUENCE_CORBAAny&amp;')</script> <td><tt>oValues</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oIsSet</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the values of one specific attribute for all rows (objects) result of the query.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAttributeName</tt>
   <dd> : Attribute for which to get the values. </dd>
    <dt><tt> oValues</tt>
   <dd>        : Values of the attribute for all the rows. </dd>
    <dt><tt> oIsSet</tt>
   <dd>         : Flag to know if an attribute is set or not. It can have 3 values :                         1 if the attribute is set.
                         0 if the attribute is not set. In that case, the corresponding value in oValues is empty.
                         -1 if the object itself doesn't exist. See the CAA use case for an example.
 </dd>
</dl>
</dl>
</dl>
<a name="getAttributesNames"></a><a name="getAttributesNames(CATListOfCATUnicodeString&amp;,CATListOfInt&amp;)"></a> <dt> o <b>getAttributesNames</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getAttributesNames</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oAttributeNames</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oTypes</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the available attribute names in the results and their type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAttributeNames</tt>
   <dd> : List of attribute names for which the value is available in the result. </dd>
    <dt><tt> oTypes</tt>
   <dd>          : Type of the attribute. </dd>
</dl>
</dl>
</dl>
<a name="getAttributesValues"></a><a name="getAttributesValues(int&amp;,CATListOfCATUnicodeString&amp;,_SEQUENCE_CORBAAny&amp;,CATListOfInt&amp;)"></a> <dt> o <b>getAttributesValues</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getAttributesValues</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>ioAttributeNames</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('_SEQUENCE_CORBAAny','_SEQUENCE_CORBAAny&amp;')</script> <td><tt>oValues</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oIsSet</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the attribute values of one specific row (object) result of the query, for a list of attributes.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>           : Row number for which to get the attribute values. </dd>
    <dt><tt> ioAttributeNames</tt>
   <dd> : List of attribute names. This list must be a subset of the attributes given in the                           Select Clause. If this list is empty, all the attributes are taken.
 </dd>
    <dt><tt> oValues</tt>
   <dd>          : Values of the attributes. </dd>
    <dt><tt> oIsSet</tt>
   <dd>           : Flag to know if an attribute is set or not. It can have 3 values :                           1 if the attribute is set.
                           0 if the attribute is not set. In that case, the corresponding value in oValues is empty.
                           -1 if the object itself doesn't exist. See the CAA use case for an example.
 </dd>
</dl>
</dl>
</dl>
<a name="getIdentifiers"></a><a name="getIdentifiers(CATListOfInt&amp;,CATListOfENOVQObjectIdentity&amp;)"></a> <dt> o <b>getIdentifiers</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getIdentifiers</b>(<td> const <script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>iIndexes</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfENOVQObjectIdentity','CATListOfENOVQObjectIdentity&amp;')</script> <td><tt>oIdentifiers</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the identifiers of the selected rows (objects) result of the query.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndexes</tt>
   <dd>     : List of row numbers for which to get the identifiers. If this list is empty, then                       the identifiers of all rows are returned.
 </dd>
    <dt><tt> oIdentifiers</tt>
   <dd> : List of identifiers. </dd>
</dl>
</dl>
</dl>
<a name="getReturnCount"></a><a name="getReturnCount(int&amp;)"></a> <dt> o <b>getReturnCount</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getReturnCount</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oCount</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the number of objects result of the query.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCount</tt>
   <dd> : Number of objects. </dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVLightQueryResult.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

