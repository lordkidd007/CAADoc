<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATIAApplicationFrame Class CATEditor</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATIAApplicationFrame.htm" href="../CATIAApplicationFrame.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATIAApplicationFrame";	}
		function getCurrentObjectName() { 
 	return "CATEditor"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATIAApplicationFrame <script type="text/javascript" > writeClassCharacteristic(); </script> CATEditor</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATEditor_26072','CATEditor','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATEditor</b>
</p>
<p>
<b><i> Class to define an editor called by the PropertyEditor.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATEditor()"><b>CATEditor</b></a>()
<dd>  Constructs the editor.
 <dt> o 
    <a href="#~CATEditor()"><b>~CATEditor</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BuildEditor(CATEditorPage*)"><b>BuildEditor</b></a>(CATEditorPage*)
<dd>  Constructs the dialog objects of the editor.
 <dt> o 
    <a href="#CancelModification(CATSettingRepository*)"><b>CancelModification</b></a>(CATSettingRepository*)
<dd>  Cancels settings modification.
 <dt> o 
    <a href="#CancelModification(CATLISTV(CATBaseUnknown_var)&amp;)"><b>CancelModification</b></a>(CATLISTV(CATBaseUnknown_var)&amp;)
<dd>  Cancels a modification when closing the panel.
 <dt> o 
    <a href="#CloseWindowFromEditor()"><b>CloseWindowFromEditor</b></a>()
<dd>  Method to close dialog object open by the editor.
 <dt> o 
    <a href="#CommitModification(CATSettingRepository*)"><b>CommitModification</b></a>(CATSettingRepository*)
<dd>  Saves settings modifications.
 <dt> o 
    <a href="#CommitModification(CATLISTV(CATBaseUnknown_var)&amp;)"><b>CommitModification</b></a>(CATLISTV(CATBaseUnknown_var)&amp;)
<dd>  Saves properties modifications for all the selection.
 <dt> o 
    <a href="#ExtractFromSelection(CATLISTV(CATBaseUnknown_var)&amp;,CATLISTV(CATBaseUnknown_var)*)"><b>ExtractFromSelection</b></a>(CATLISTV(CATBaseUnknown_var)&amp;,CATLISTV(CATBaseUnknown_var)*)
<dd>  Method to make a query on the selection for acceptance.
 <dt> o 
    <a href="#GetEditorTitle()"><b>GetEditorTitle</b></a>()
<dd>  Method to give a name to the editor.
 <dt> o 
    <a href="#GetUndoFromEditor()"><b>GetUndoFromEditor</b></a>()
<dd>  Method to record an undo action from the editor.
 <dt> o 
    <a href="#OKToRepaintOnCommit(int&amp;)"><b>OKToRepaintOnCommit</b></a>(int&amp;)
<dd>  Sets the behaviour of the dialog objects during the update of tabpages when applying modifications.
 <dt> o 
    <a href="#ResetUserSettingsValue()"><b>ResetUserSettingsValue</b></a>()
<dd>  Resets all values of repositories.
 <dt> o 
    <a href="#SetPropertyValue(CATLISTV(CATBaseUnknown_var)&amp;,ModeReadWrite)"><b>SetPropertyValue</b></a>(CATLISTV(CATBaseUnknown_var)&amp;,ModeReadWrite)
<dd>  Valuates the dialog objects of the editor.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATEditor"></a><a name="CATEditor()"></a> <dt> o <b>CATEditor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATEditor</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs the editor.
</dl>
<a name="~CATEditor"></a><a name="~CATEditor()"></a> <dt> o <b>~CATEditor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATEditor</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="BuildEditor"></a><a name="BuildEditor(CATEditorPage*)"></a> <dt> o <b>BuildEditor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BuildEditor</b>(<td><script type="text/javascript"> activateLink('CATEditorPage','CATEditorPage*')</script> <td><tt>iPage</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Constructs the dialog objects of the editor.
</dl>
<a name="CancelModification"></a><a name="CancelModification(CATSettingRepository*)"></a> <dt> o <b>CancelModification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CancelModification</b>(<td><script type="text/javascript"> activateLink('CATSettingRepository','CATSettingRepository*')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Cancels settings modification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>       not used. 
 <br><b> careful: </b> you need to get the repository by yourself
  by GetRepository method, don't try to use iRep directly
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSettingRepository','','CATSettingRepository') </script>
</dl>
</dl>
<a name="CancelModification"></a><a name="CancelModification(CATLISTV(CATBaseUnknown_var)&amp;)"></a> <dt> o <b>CancelModification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CancelModification</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>iExtract</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Cancels a modification when closing the panel.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtract</tt>
   <dd>      list of concerned objects with the modification.</dd>
</dl>
</dl>
</dl>
<a name="CloseWindowFromEditor"></a><a name="CloseWindowFromEditor()"></a> <dt> o <b>CloseWindowFromEditor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CloseWindowFromEditor</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Method to close dialog object open by the editor.
</dl>
<a name="CommitModification"></a><a name="CommitModification(CATSettingRepository*)"></a> <dt> o <b>CommitModification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CommitModification</b>(<td><script type="text/javascript"> activateLink('CATSettingRepository','CATSettingRepository*')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Saves settings modifications.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>       not used.
 <br><b> careful: </b> you need to get the repository by yourself
  by GetRepository method, don't try to use iRep directly
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSettingRepository','','CATSettingRepository') </script>
</dl>
</dl>
<a name="CommitModification"></a><a name="CommitModification(CATLISTV(CATBaseUnknown_var)&amp;)"></a> <dt> o <b>CommitModification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CommitModification</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>iExtract</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Saves properties modifications for all the selection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtract</tt>
   <dd>       list of concerned objects with the modification.</dd>
</dl>
</dl>
</dl>
<a name="ExtractFromSelection"></a><a name="ExtractFromSelection(CATLISTV(CATBaseUnknown_var)&amp;,CATLISTV(CATBaseUnknown_var)*)"></a> <dt> o <b>ExtractFromSelection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ExtractFromSelection</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>iExtract</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)*')</script> <td><tt>iSelection</tt><td><tt>=NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Method to make a query on the selection for acceptance.
</dl>
<a name="GetEditorTitle"></a><a name="GetEditorTitle()"></a> <dt> o <b>GetEditorTitle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetEditorTitle</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Method to give a name to the editor.
</dl>
<a name="GetUndoFromEditor"></a><a name="GetUndoFromEditor()"></a> <dt> o <b>GetUndoFromEditor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCommandGlobalUndo','CATCommandGlobalUndo *')</script>  <b>GetUndoFromEditor</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Method to record an undo action from the editor.
</dl>
<a name="OKToRepaintOnCommit"></a><a name="OKToRepaintOnCommit(int&amp;)"></a> <dt> o <b>OKToRepaintOnCommit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OKToRepaintOnCommit</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the behaviour of the dialog objects during the update of tabpages when applying modifications.
 Useful for tab pages depending on each other
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStatus</tt>
   <dd> <br><b> Legal Values : </b>
     <tt> 0 if no repaint is required : for each tabpage, methods CommitModification and SetPropertyValue are called one after the other 
     <tt> 1 otherwise : default behaviour - for each tabpage method CommitModification is applied. Then, for each tabpage method SetPropertyValue is called.</dd>
</dl>
</dl>
</dl>
<a name="ResetUserSettingsValue"></a><a name="ResetUserSettingsValue()"></a> <dt> o <b>ResetUserSettingsValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ResetUserSettingsValue</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets all values of repositories.
</dl>
<a name="SetPropertyValue"></a><a name="SetPropertyValue(CATLISTV(CATBaseUnknown_var)&amp;,ModeReadWrite)"></a> <dt> o <b>SetPropertyValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPropertyValue</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>iExtract</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ModeReadWrite','ModeReadWrite')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Valuates the dialog objects of the editor.
</dl>
<hr>
 This object is included in the file: <b>CATEditor.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATIAApplicationFrame</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

