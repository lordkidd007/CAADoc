<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisBase Class CATAnalysisExplicitEntity</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAnalysisBase.htm" href="../CATAnalysisBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAnalysisBase";	}
		function getCurrentObjectName() { 
 	return "CATAnalysisExplicitEntity"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAnalysisBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATAnalysisExplicitEntity</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAnalysisExplicitEntity_43660','CATAnalysisExplicitEntity','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAnalysisExplicitEntity</b>
</p>
<p>
<b><i> Field model entity.</i></b><br>

 This object is used to provide services linked to the field model entities.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAnalysisExplicitEntity()"><b>CATAnalysisExplicitEntity</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#CATAnalysisExplicitEntity(CATAnalysisExplicitData&amp;)"><b>CATAnalysisExplicitEntity</b></a>(CATAnalysisExplicitData&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATAnalysisExplicitEntity(CATAnalysisExplicitEntity&amp;)"><b>CATAnalysisExplicitEntity</b></a>(CATAnalysisExplicitEntity&amp;)
<dd>  Copy constructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ApplyTo(int,CATSamExplicitPtr*,CATSamPosition,int,CATSamApplyQualifier)"><b>ApplyTo</b></a>(int,CATSamExplicitPtr*,CATSamPosition,int,CATSamApplyQualifier)
<dd>  Applies a field model entity to several entities or sets.
 <dt> o 
    <a href="#ApplyTo(int,CATSamExplicitPtr*,CATSamPosition,int*,CATSamApplyQualifier*)"><b>ApplyTo</b></a>(int,CATSamExplicitPtr*,CATSamPosition,int*,CATSamApplyQualifier*)
<dd>  Applies a field model entity to several entities or sets.
 <dt> o 
    <a href="#ApplyTo(CATAnalysisExplicitParent&amp;,CATSamPosition,int,CATSamApplyQualifier)"><b>ApplyTo</b></a>(CATAnalysisExplicitParent&amp;,CATSamPosition,int,CATSamApplyQualifier)
<dd>  Applies a field model entity to another entity or set.
 <dt> o 
    <a href="#CreateEntity(CATAnalysisExplicitModel*,CATSamPhysicalType)"><b>CreateEntity</b></a>(CATAnalysisExplicitModel*,CATSamPhysicalType)
<dd>  Creates an entity in the field model.
 <dt> o 
    <a href="#CreateEntity(CATAnalysisExplicitParent&amp;,CATSamPhysicalType)"><b>CreateEntity</b></a>(CATAnalysisExplicitParent&amp;,CATSamPhysicalType)
<dd>  Creates an entity in the field model as the child of an other set or entity.
 <dt> o 
    <a href="#GetApplyTo(int&amp;,CATSamExplicitPtr*&amp;,CATBoolean)"><b>GetApplyTo</b></a>(int&amp;,CATSamExplicitPtr*&amp;,CATBoolean)
<dd>  Obtains the array of pointers to the apply-to.
 <dt> o 
    <a href="#GetApplyTo(int&amp;,int*&amp;,CATSamPosition&amp;,int*&amp;,CATSamApplyQualifier*&amp;,CATBoolean)"><b>GetApplyTo</b></a>(int&amp;,int*&amp;,CATSamPosition&amp;,int*&amp;,CATSamApplyQualifier*&amp;,CATBoolean)
<dd>  Obtains the arrays of the apply-to sequential numbers, apply-to numbers, apply-to Qualifiers and the apply-to positions.
 <dt> o 
    <a href="#GetApplyTo(int&amp;,CATSamExplicitPtr*&amp;,CATSamPosition&amp;,int*&amp;,CATSamApplyQualifier*&amp;,CATBoolean)"><b>GetApplyTo</b></a>(int&amp;,CATSamExplicitPtr*&amp;,CATSamPosition&amp;,int*&amp;,CATSamApplyQualifier*&amp;,CATBoolean)
<dd>  Obtains the arrays of the apply-to pointers, apply-to numbers, apply-to Qualifiers and the apply-to positions.
 <dt> o 
    <a href="#GetApplyToList(CATAnalysisExplicitList&amp;)"><b>GetApplyToList</b></a>(CATAnalysisExplicitList&amp;)
<dd>  Obtains the apply-to list.
 <dt> o 
    <a href="#GetPointedSetByCombinedEntity(CATAnalysisExplicitSet&amp;)"><b>GetPointedSetByCombinedEntity</b></a>(CATAnalysisExplicitSet&amp;)
<dd>  
 <dt> o 
    <a href="#IsACombinedEntity()"><b>IsACombinedEntity</b></a>()
<dd>  
 <dt> o 
    <a href="#RemoveApplyTo(CATAnalysisExplicitParent&amp;)"><b>RemoveApplyTo</b></a>(CATAnalysisExplicitParent&amp;)
<dd>  Removes the apply of a field model entity on another entity or set.
 <dt> o 
    <a href="#RemoveApplyTo(int,CATSamExplicitPtr*,CATAnalysisExplicitModel*)"><b>RemoveApplyTo</b></a>(int,CATSamExplicitPtr*,CATAnalysisExplicitModel*)
<dd>  Removes the applies of a field model entity on several entities or sets.
 <dt> o 
    <a href="#operator =(CATAnalysisExplicitData&amp;)"><b>operator =</b></a>(CATAnalysisExplicitData&amp;)
<dd>  Assignment operator.
 <dt> o 
    <a href="#operator =(CATAnalysisExplicitEntity&amp;)"><b>operator =</b></a>(CATAnalysisExplicitEntity&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAnalysisExplicitEntity"></a><a name="CATAnalysisExplicitEntity()"></a> <dt> o <b>CATAnalysisExplicitEntity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitEntity</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CATAnalysisExplicitEntity"></a><a name="CATAnalysisExplicitEntity(CATAnalysisExplicitData&amp;)"></a> <dt> o <b>CATAnalysisExplicitEntity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitEntity</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitData','CATAnalysisExplicitData&amp;')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitData','','CATAnalysisExplicitData') </script>
</dl>
</dl>
<a name="CATAnalysisExplicitEntity"></a><a name="CATAnalysisExplicitEntity(CATAnalysisExplicitEntity&amp;)"></a> <dt> o <b>CATAnalysisExplicitEntity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitEntity</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitEntity','CATAnalysisExplicitEntity&amp;')</script> <td><tt>iEntity</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
 <h2>Methods</h2> <br>
<a name="ApplyTo"></a><a name="ApplyTo(int,CATSamExplicitPtr*,CATSamPosition,int,CATSamApplyQualifier)"></a> <dt> o <b>ApplyTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ApplyTo</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumber</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*')</script> <td><tt>iApplyTo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamPosition','CATSamPosition')</script> <td><tt>iApplyPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iApplyNumber</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamApplyQualifier','CATSamApplyQualifier')</script> <td><tt>iApplyQualifier</tt><td><tt>= CATSamApplyQualifierLast</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Applies a field model entity to several entities or sets.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd>   The number of apply-to.
 </dd>
    <dt><tt> iApplyTo[oNumber]</tt>
   <dd>   The array of pointers to the field objects on which the apply is done.
 </dd>
    <dt><tt> iApplyPosition</tt>
   <dd>   The position of the applies.
 </dd>
    <dt><tt> iApplyNumber</tt>
   <dd>   The number of the applies.
 </dd>
    <dt><tt> iApplyQualifier</tt>
   <dd>   The apply qualifier.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamPosition','','CATSamPosition') </script>, <script type="text/javascript"> activateLinkAnchor('CATSamApplyQualifier','','CATSamApplyQualifier') </script>
</dl>
</dl>
<a name="ApplyTo"></a><a name="ApplyTo(int,CATSamExplicitPtr*,CATSamPosition,int*,CATSamApplyQualifier*)"></a> <dt> o <b>ApplyTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ApplyTo</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumber</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*')</script> <td><tt>iApplyTo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamPosition','CATSamPosition')</script> <td><tt>iApplyPosition</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*')</script> <td><tt>iApplyNumber</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATSamApplyQualifier','CATSamApplyQualifier*')</script> <td><tt>iApplyQualifier</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Applies a field model entity to several entities or sets.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd>   The number of apply-to.
 </dd>
    <dt><tt> iApplyTo[oNumber]</tt>
   <dd>   The array of pointers to the field objects on which the apply is done.
 </dd>
    <dt><tt> iApplyPosition</tt>
   <dd>   The position of the applies.
 </dd>
    <dt><tt> iApplyNumber[oNumber]</tt>
   <dd>   The array of numbers of the applies.
 </dd>
    <dt><tt> iApplyQualifier[oNumber]</tt>
   <dd>   The array of apply qualifiers.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamPosition','','CATSamPosition') </script>
</dl>
</dl>
<a name="ApplyTo"></a><a name="ApplyTo(CATAnalysisExplicitParent&amp;,CATSamPosition,int,CATSamApplyQualifier)"></a> <dt> o <b>ApplyTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ApplyTo</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitParent','CATAnalysisExplicitParent&amp;')</script> <td><tt>iApplyTo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamPosition','CATSamPosition')</script> <td><tt>iApplyPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iApplyNumber</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamApplyQualifier','CATSamApplyQualifier')</script> <td><tt>iApplyQualifier</tt><td><tt>= CATSamApplyQualifierLast</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Applies a field model entity to another entity or set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplyTo</tt>
   <dd>   The field object on which the apply is done. must be defined in the same model than the entity.
 </dd>
    <dt><tt> iApplyPosition</tt>
   <dd>   The position of the apply.
 </dd>
    <dt><tt> iApplyNumber</tt>
   <dd>   The number of the apply.
 </dd>
    <dt><tt> iApplyQualifier</tt>
   <dd>   The apply qualifier.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitParent','','CATAnalysisExplicitParent') </script>, <script type="text/javascript"> activateLinkAnchor('CATSamPosition','','CATSamPosition') </script>, <script type="text/javascript"> activateLinkAnchor('CATSamApplyQualifier','','CATSamApplyQualifier') </script>
</dl>
</dl>
<a name="CreateEntity"></a><a name="CreateEntity(CATAnalysisExplicitModel*,CATSamPhysicalType)"></a> <dt> o <b>CreateEntity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateEntity</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitModel','CATAnalysisExplicitModel*')</script> <td><tt>iModel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamPhysicalType','CATSamPhysicalType')</script> <td><tt>iPhysicalType</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Creates an entity in the field model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModel</tt>
   <dd>   A pointer to the field model into which the entity will be created.
 </dd>
    <dt><tt> iPhysicalType</tt>
   <dd>   The physical type of the entity.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitModel','','CATAnalysisExplicitModel') </script>
</dl>
</dl>
<a name="CreateEntity"></a><a name="CreateEntity(CATAnalysisExplicitParent&amp;,CATSamPhysicalType)"></a> <dt> o <b>CreateEntity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateEntity</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitParent','CATAnalysisExplicitParent&amp;')</script> <td><tt>iParent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamPhysicalType','CATSamPhysicalType')</script> <td><tt>iPhysicalType</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Creates an entity in the field model as the child of an other set or entity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd>   The parent of the entity which will be created.
 </dd>
    <dt><tt> iPhysicalType</tt>
   <dd>   The physical type of the entity.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitParent','','CATAnalysisExplicitParent') </script>
</dl>
</dl>
<a name="GetApplyTo"></a><a name="GetApplyTo(int&amp;,CATSamExplicitPtr*&amp;,CATBoolean)"></a> <dt> o <b>GetApplyTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApplyTo</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oApplyTo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iExpand</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Obtains the array of pointers to the apply-to.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd>   The number of apply-to.
 </dd>
    <dt><tt> oApplyTo[oNumber]</tt>
   <dd>   The array of pointers to the apply-to.<br>
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.
 </dd>
    <dt><tt> iExpand</tt>
   <dd>   If iExpand is True, and if the ApplyTo list contains Sets or Groups, the method
   returns the children of the Sets or the ApplyTo of the Groups.</dd>
</dl>
</dl>
</dl>
<a name="GetApplyTo"></a><a name="GetApplyTo(int&amp;,int*&amp;,CATSamPosition&amp;,int*&amp;,CATSamApplyQualifier*&amp;,CATBoolean)"></a> <dt> o <b>GetApplyTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApplyTo</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oApplyTo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamPosition','CATSamPosition&amp;')</script> <td><tt>oApplyToPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oApplyToNumbers</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamApplyQualifier','CATSamApplyQualifier*&amp;')</script> <td><tt>oApplyToQualifiers</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iExpand</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Obtains the arrays of the apply-to sequential numbers, apply-to numbers, apply-to Qualifiers and the apply-to positions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd>   The number of apply-to.
 </dd>
    <dt><tt> oApplyTo[oNumber]</tt>
   <dd>   The array of the apply-to Sequential Number .<br>
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.
 </dd>
    <dt><tt> oApplyToPosition</tt>
   <dd>   The apply-to position.
 </dd>
    <dt><tt> oApplyToNumbers[oNumber]</tt>
   <dd>   The array of apply-to numbers.<br>
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.
 </dd>
    <dt><tt> oApplyToQualifiers[oNumber]</tt>
   <dd>   The array of apply-to qualifiers.<br>
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.
 </dd>
    <dt><tt> iExpand</tt>
   <dd>   If iExpand is True, and if the ApplyTo list contains Sets or Groups, the method
   returns the children of the Sets or the ApplyTo of the Groups. 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamPosition','','CATSamPosition') </script>, <script type="text/javascript"> activateLinkAnchor('CATSamApplyQualifier','','CATSamApplyQualifier') </script>
</dl>
</dl>
<a name="GetApplyTo"></a><a name="GetApplyTo(int&amp;,CATSamExplicitPtr*&amp;,CATSamPosition&amp;,int*&amp;,CATSamApplyQualifier*&amp;,CATBoolean)"></a> <dt> o <b>GetApplyTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApplyTo</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oApplyTo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamPosition','CATSamPosition&amp;')</script> <td><tt>oApplyToPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oApplyToNumbers</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamApplyQualifier','CATSamApplyQualifier*&amp;')</script> <td><tt>oApplyToQualifiers</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iExpand</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Obtains the arrays of the apply-to pointers, apply-to numbers, apply-to Qualifiers and the apply-to positions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd>   The number of apply-to.
 </dd>
    <dt><tt> oApplyTo[oNumber]</tt>
   <dd>   The array of the apply-to pointers.<br>
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.
 </dd>
    <dt><tt> oApplyToPosition</tt>
   <dd>   The apply position.
 </dd>
    <dt><tt> oApplyToNumbers[oNumber]</tt>
   <dd>   The array of apply-to numbers.<br>
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.
 </dd>
    <dt><tt> oApplyToQualifiers[oNumber]</tt>
   <dd>   The array of apply-to qualifiers.<br>
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.
 </dd>
    <dt><tt> iExpand</tt>
   <dd>   If iExpand is True, and if the ApplyTo list contains Sets or Groups, the method
   returns the children of the Sets or the ApplyTo of the Groups. 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamPosition','','CATSamPosition') </script>, <script type="text/javascript"> activateLinkAnchor('CATSamApplyQualifier','','CATSamApplyQualifier') </script>
</dl>
</dl>
<a name="GetApplyToList"></a><a name="GetApplyToList(CATAnalysisExplicitList&amp;)"></a> <dt> o <b>GetApplyToList</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApplyToList</b>(<td><script type="text/javascript"> activateLink('CATAnalysisExplicitList','CATAnalysisExplicitList&amp;')</script> <td><tt>oApplyToList</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Obtains the apply-to list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oApplyToList</tt>
   <dd>   The apply-to list.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitList','','CATAnalysisExplicitList') </script>
</dl>
</dl>
<a name="GetPointedSetByCombinedEntity"></a><a name="GetPointedSetByCombinedEntity(CATAnalysisExplicitSet&amp;)"></a> <dt> o <b>GetPointedSetByCombinedEntity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPointedSetByCombinedEntity</b>(<td><script type="text/javascript"> activateLink('CATAnalysisExplicitSet','CATAnalysisExplicitSet&amp;')</script> <td><tt>oPointedSet</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17
 Gets the pointed Set if Combine status.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPointedObject</tt>
   <dd> the pointed object.</dd>
</dl>
</dl>
</dl>
<a name="IsACombinedEntity"></a><a name="IsACombinedEntity()"></a> <dt> o <b>IsACombinedEntity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsACombinedEntity</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17
 Returns the Combine status.
 <b>Legal values</b>:
 <ul><li><tt>TRUE</tt> The object is a combined Entity.<br>
 This means that it is pointing to aSet in an other case.
 To access the "pointed" Set object use 
<script type="text/javascript"> activateLinkAnchor('','GetPointedSetByCombinedEntity','GetPointedSetByCombinedEntity') </script>.</li>     <li><tt>FALSE</tt>  The object is not a combined Entity.</li></ul>
</dl>
</dl>
<a name="RemoveApplyTo"></a><a name="RemoveApplyTo(CATAnalysisExplicitParent&amp;)"></a> <dt> o <b>RemoveApplyTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveApplyTo</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitParent','CATAnalysisExplicitParent&amp;')</script> <td><tt>iApplyTo</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Removes the apply of a field model entity on another entity or set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplyTo</tt>
   <dd>   The field object for which the apply must be removed.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitParent','','CATAnalysisExplicitParent') </script>
</dl>
</dl>
<a name="RemoveApplyTo"></a><a name="RemoveApplyTo(int,CATSamExplicitPtr*,CATAnalysisExplicitModel*)"></a> <dt> o <b>RemoveApplyTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveApplyTo</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumber</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*')</script> <td><tt>iApplyTo</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitModel','CATAnalysisExplicitModel*')</script> <td><tt>iApplyModel</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Removes the applies of a field model entity on several entities or sets.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd>   The number of apply-to.
 </dd>
    <dt><tt> iApplyTo[oNumber]</tt>
   <dd>   The array of pointers to the field objects for which the apply must be removed.
 </dd>
    <dt><tt> iApplyModel</tt>
   <dd>   if iApplyModel is not NULL the objects for which the apply must be removed are defined in iApplyModel, otherwise they are defined in the same model than the entity.</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATAnalysisExplicitData&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAnalysisExplicitEntity','CATAnalysisExplicitEntity')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitData','CATAnalysisExplicitData&amp;')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitData','','CATAnalysisExplicitData') </script>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATAnalysisExplicitEntity&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAnalysisExplicitEntity','CATAnalysisExplicitEntity')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitEntity','CATAnalysisExplicitEntity&amp;')</script> <td><tt>iEntity</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
</dl>
<hr>
 This object is included in the file: <b>CATAnalysisExplicitEntity.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSAM0Explicit</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

