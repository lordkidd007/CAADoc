<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisBase Class CATAnalysisExplicitTopology</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAnalysisBase.htm" href="../CATAnalysisBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAnalysisBase";	}
		function getCurrentObjectName() { 
 	return "CATAnalysisExplicitTopology"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAnalysisBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATAnalysisExplicitTopology</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAnalysisExplicitTopology_49310','CATAnalysisExplicitTopology','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAnalysisExplicitTopology</b>
</p>
<p>
<b><i> Common basic services for Field Model Objects.</i></b><br>

 Definition of the Topology of the FEM Model.<br>
 This class provide services to obtain :<br>
    - The array of Nodes,<br>
    - The array of Elements,<br>
    - The array of Elements linked to a Node,<br>
    - The array of Nodes linked to an Element.<br></p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRef()"><b>AddRef</b></a>()
<dd>  Increase the reference counter by 1.
 <dt> o 
    <a href="#GetElements(CATMSHElement**)"><b>GetElements</b></a>(CATMSHElement**)
<dd>  Get the array of Elements of the FEM Model.
 <dt> o 
    <a href="#GetElements(CATSamExplicitPtr*&amp;)"><b>GetElements</b></a>(CATSamExplicitPtr*&amp;)
<dd>  Get the array of Elements of the FEM Model.
 <dt> o 
    <a href="#GetElementsLinkedToNode(CATMSHNode*,CATMSHElement**)"><b>GetElementsLinkedToNode</b></a>(CATMSHNode*,CATMSHElement**)
<dd>  Get the array of Elements linked to a Node.
 <dt> o 
    <a href="#GetElementsLinkedToNode(CATSamExplicitPtr,CATSamExplicitPtr*&amp;)"><b>GetElementsLinkedToNode</b></a>(CATSamExplicitPtr,CATSamExplicitPtr*&amp;)
<dd>  Get the array of Elements linked to a Node.
 <dt> o 
    <a href="#GetMeshManager()"><b>GetMeshManager</b></a>()
<dd>  Retrieves a pointer to the mesh manager to which the Topology is linked to.
 <dt> o 
    <a href="#GetNbElements()"><b>GetNbElements</b></a>()
<dd>  Get the number of Elements of the FEM Model.
 <dt> o 
    <a href="#GetNbElements(int&amp;)"><b>GetNbElements</b></a>(int&amp;)
<dd>  Get the number of Elements of the FEM Model.
 <dt> o 
    <a href="#GetNbElementsLinkedToNode(CATMSHNode*)"><b>GetNbElementsLinkedToNode</b></a>(CATMSHNode*)
<dd>  Get the number of Elements linked to a Node.
 <dt> o 
    <a href="#GetNbElementsLinkedToNode(CATSamExplicitPtr)"><b>GetNbElementsLinkedToNode</b></a>(CATSamExplicitPtr)
<dd>  Get the number of Elements linked to a Node.
 <dt> o 
    <a href="#GetNbNodes()"><b>GetNbNodes</b></a>()
<dd>  Get the number of Nodes of the FEM Model.
 <dt> o 
    <a href="#GetNbNodes(int&amp;)"><b>GetNbNodes</b></a>(int&amp;)
<dd>  Get the number of Nodes of the FEM Model.
 <dt> o 
    <a href="#GetNbNodesLinkedToElement(CATMSHElement*)"><b>GetNbNodesLinkedToElement</b></a>(CATMSHElement*)
<dd>  Get the number of Nodes linked to an Element.
 <dt> o 
    <a href="#GetNbNodesLinkedToElement(CATSamExplicitPtr)"><b>GetNbNodesLinkedToElement</b></a>(CATSamExplicitPtr)
<dd>  Get the number of Nodes linked to an Element.
 <dt> o 
    <a href="#GetNbVirtualElements()"><b>GetNbVirtualElements</b></a>()
<dd>  Get the number of Virtual Elements of the FEM Model.
 <dt> o 
    <a href="#GetNbVirtualElements(int&amp;)"><b>GetNbVirtualElements</b></a>(int&amp;)
<dd>  Get the number of Virtual Elements of the FEM Model.
 <dt> o 
    <a href="#GetNbVirtualNodes()"><b>GetNbVirtualNodes</b></a>()
<dd>  Get the number of Virtual Nodes of the FEM Model.
 <dt> o 
    <a href="#GetNbVirtualNodes(int&amp;)"><b>GetNbVirtualNodes</b></a>(int&amp;)
<dd>  Get the number of Virtual Nodes of the FEM Model.
 <dt> o 
    <a href="#GetNodes(CATMSHNode**)"><b>GetNodes</b></a>(CATMSHNode**)
<dd>  Get the array of Nodes of the FEM Model.
 <dt> o 
    <a href="#GetNodes(CATSamExplicitPtr*&amp;)"><b>GetNodes</b></a>(CATSamExplicitPtr*&amp;)
<dd>  Get the array of Nodes of the FEM Model.
 <dt> o 
    <a href="#GetNodesLinkedToElement(CATMSHElement*,CATMSHNode**)"><b>GetNodesLinkedToElement</b></a>(CATMSHElement*,CATMSHNode**)
<dd>  Get the array of Nodes linked to an Element.
 <dt> o 
    <a href="#GetNodesLinkedToElement(CATSamExplicitPtr,CATSamExplicitPtr*&amp;)"><b>GetNodesLinkedToElement</b></a>(CATSamExplicitPtr,CATSamExplicitPtr*&amp;)
<dd>  Get the array of Nodes linked to an Element.
 <dt> o 
    <a href="#GetVirtualElements(CATSamExplicitPtr*&amp;)"><b>GetVirtualElements</b></a>(CATSamExplicitPtr*&amp;)
<dd>  Get the array of Virtual Elements of the FEM Model.
 <dt> o 
    <a href="#GetVirtualNodes(CATSamExplicitPtr*&amp;)"><b>GetVirtualNodes</b></a>(CATSamExplicitPtr*&amp;)
<dd>  Get the array of Virtual Nodes of the FEM Model.
 <dt> o 
    <a href="#Release()"><b>Release</b></a>()
<dd>  Decrease the reference counter by 1.
 <dt> o 
    <a href="#RequestDelayedDestruction(CATBoolean)"><b>RequestDelayedDestruction</b></a>(CATBoolean)
<dd>  Requests the topology delayed destruction.
 <dt> o 
    <a href="#SetUpToDate(CATBoolean)"><b>SetUpToDate</b></a>(CATBoolean)
<dd>  Set the Flag IsUpToDate.
 <dt> o 
    <a href="#SetVirtualUpToDate(CATBoolean)"><b>SetVirtualUpToDate</b></a>(CATBoolean)
<dd>  Clean the Virtual Nodes and Elements arrays in order to recalculate them if the flag is false.
 <dt> o 
    <a href="#UpdateActivityStatus()"><b>UpdateActivityStatus</b></a>()
<dd>  Update activity status of the mesh.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRef"></a><a name="AddRef()"></a> <dt> o <b>AddRef</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>AddRef</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Increase the reference counter by 1.
</dl>
<a name="GetElements"></a><a name="GetElements(CATMSHElement**)"></a> <dt> o <b>GetElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetElements</b>(<td> const <script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement**')</script> <td><tt>oElements</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Elements of the FEM Model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElements</tt>
   <dd>   The array of CATMSHElement (must be allocated with the size returned by GetNbElements).
   <br><b>Lifecycle rules deviation</b>
      Must be allocated with the size returned by the method GetNbElements() before calling
      the method, and be deleted after use.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMSHElement','','CATMSHElement') </script>
</dl>
</dl>
<a name="GetElements"></a><a name="GetElements(CATSamExplicitPtr*&amp;)"></a> <dt> o <b>GetElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetElements</b>(<td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oElements</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Elements of the FEM Model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElements</tt>
   <dd>   <br><b>Lifecycle rules deviation</b>
      Must be set to NULL before calling the method, and not be deleted after use.
   The array of Elements.</dd>
</dl>
</dl>
</dl>
<a name="GetElementsLinkedToNode"></a><a name="GetElementsLinkedToNode(CATMSHNode*,CATMSHElement**)"></a> <dt> o <b>GetElementsLinkedToNode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetElementsLinkedToNode</b>(<td> const <script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode*')</script> <td><tt>iNode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement**')</script> <td><tt>oLinkedElements</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Elements linked to a Node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd>   The Node.
 </dd>
    <dt><tt> oLinkedElements</tt>
   <dd>   The array of Elements linked to the Node (must be allocated with the size returned by GetElementsLinkedToNode).
   <br><b>Lifecycle rules deviation</b>
      Must be allocated with the size returned by the method GetElementsLinkedToNode() before calling
      the method, and be deleted after use.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMSHNode','','CATMSHNode') </script>, <script type="text/javascript"> activateLinkAnchor('CATMSHElement','','CATMSHElement') </script>
</dl>
</dl>
<a name="GetElementsLinkedToNode"></a><a name="GetElementsLinkedToNode(CATSamExplicitPtr,CATSamExplicitPtr*&amp;)"></a> <dt> o <b>GetElementsLinkedToNode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetElementsLinkedToNode</b>(<td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr')</script> <td><tt>iNode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oLinkedElements</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Elements linked to a Node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd>   The Node.
 </dd>
    <dt><tt> oLinkedElements</tt>
   <dd>   The array of Elements linked to the Node.
   <br><b>Lifecycle rules deviation</b>
      Must be set to NULL before calling the method, and not be deleted after use.</dd>
</dl>
</dl>
</dl>
<a name="GetMeshManager"></a><a name="GetMeshManager()"></a> <dt> o <b>GetMeshManager</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIMSHMeshManager','CATIMSHMeshManager *')</script>  <b>GetMeshManager</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a pointer to the mesh manager to which the Topology is linked to.<br>
 An AddRef() is done on the mesh manager before returning the pointer.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   CATBaseUnknown#Release  * @see CATIMSHMeshManager
</dl>
</dl>
<a name="GetNbElements"></a><a name="GetNbElements()"></a> <dt> o <b>GetNbElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbElements</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Elements of the FEM Model.
</dl>
<a name="GetNbElements"></a><a name="GetNbElements(int&amp;)"></a> <dt> o <b>GetNbElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbElements</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbElements</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Elements of the FEM Model.
</dl>
<a name="GetNbElementsLinkedToNode"></a><a name="GetNbElementsLinkedToNode(CATMSHNode*)"></a> <dt> o <b>GetNbElementsLinkedToNode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbElementsLinkedToNode</b>(<td> const <script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode*')</script> <td><tt>iNode</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Elements linked to a Node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd>   The Node.</dd>
</dl>
</dl>
</dl>
<a name="GetNbElementsLinkedToNode"></a><a name="GetNbElementsLinkedToNode(CATSamExplicitPtr)"></a> <dt> o <b>GetNbElementsLinkedToNode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbElementsLinkedToNode</b>(<td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr')</script> <td><tt>iNode</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Elements linked to a Node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd>   The Node.</dd>
</dl>
</dl>
</dl>
<a name="GetNbNodes"></a><a name="GetNbNodes()"></a> <dt> o <b>GetNbNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbNodes</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Nodes of the FEM Model.
</dl>
<a name="GetNbNodes"></a><a name="GetNbNodes(int&amp;)"></a> <dt> o <b>GetNbNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbNodes</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbNodes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Nodes of the FEM Model.
</dl>
<a name="GetNbNodesLinkedToElement"></a><a name="GetNbNodesLinkedToElement(CATMSHElement*)"></a> <dt> o <b>GetNbNodesLinkedToElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbNodesLinkedToElement</b>(<td> const <script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Nodes linked to an Element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   The Element.</dd>
</dl>
</dl>
</dl>
<a name="GetNbNodesLinkedToElement"></a><a name="GetNbNodesLinkedToElement(CATSamExplicitPtr)"></a> <dt> o <b>GetNbNodesLinkedToElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbNodesLinkedToElement</b>(<td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Nodes linked to an Element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   The Element.</dd>
</dl>
</dl>
</dl>
<a name="GetNbVirtualElements"></a><a name="GetNbVirtualElements()"></a> <dt> o <b>GetNbVirtualElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbVirtualElements</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Virtual Elements of the FEM Model.
</dl>
<a name="GetNbVirtualElements"></a><a name="GetNbVirtualElements(int&amp;)"></a> <dt> o <b>GetNbVirtualElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbVirtualElements</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbElements</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Virtual Elements of the FEM Model.
</dl>
<a name="GetNbVirtualNodes"></a><a name="GetNbVirtualNodes()"></a> <dt> o <b>GetNbVirtualNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbVirtualNodes</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Virtual Nodes of the FEM Model.
</dl>
<a name="GetNbVirtualNodes"></a><a name="GetNbVirtualNodes(int&amp;)"></a> <dt> o <b>GetNbVirtualNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbVirtualNodes</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbVirtualNodes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of Virtual Nodes of the FEM Model.
</dl>
<a name="GetNodes"></a><a name="GetNodes(CATMSHNode**)"></a> <dt> o <b>GetNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNodes</b>(<td> const <script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode**')</script> <td><tt>oNodes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Nodes of the FEM Model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodes</tt>
   <dd>   The array of CATMSHNode (must be allocated with the size returned by GetNbNodes)
   <br><b>Lifecycle rules deviation</b>
      Must be allocated with the size returned by the method GetNbNodes() before calling
      the method, and be deleted after use.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMSHNode','','CATMSHNode') </script>
</dl>
</dl>
<a name="GetNodes"></a><a name="GetNodes(CATSamExplicitPtr*&amp;)"></a> <dt> o <b>GetNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNodes</b>(<td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oNodes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Nodes of the FEM Model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodes</tt>
   <dd>   The array of Nodes.
   <br><b>Lifecycle rules deviation</b>
      Must be set to NULL before calling the method, and not be deleted after use.</dd>
</dl>
</dl>
</dl>
<a name="GetNodesLinkedToElement"></a><a name="GetNodesLinkedToElement(CATMSHElement*,CATMSHNode**)"></a> <dt> o <b>GetNodesLinkedToElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNodesLinkedToElement</b>(<td> const <script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement*')</script> <td><tt>iElement</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode**')</script> <td><tt>oLinkedNodes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Nodes linked to an Element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   The Element.
 </dd>
    <dt><tt> oLinkedNodes</tt>
   <dd>   The array of Nodes linked to the element (must be allocated with the size returned by GetNbNodesLinkedToElement).
   <br><b>Lifecycle rules deviation</b>
      Must be allocated with the size returned by the method GetNbNodesLinkedToElement() before calling
      the method, and be deleted after use.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMSHNode','','CATMSHNode') </script>, <script type="text/javascript"> activateLinkAnchor('CATMSHElement','','CATMSHElement') </script>
</dl>
</dl>
<a name="GetNodesLinkedToElement"></a><a name="GetNodesLinkedToElement(CATSamExplicitPtr,CATSamExplicitPtr*&amp;)"></a> <dt> o <b>GetNodesLinkedToElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNodesLinkedToElement</b>(<td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr')</script> <td><tt>iElement</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oLinkedNodes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Nodes linked to an Element.
 The method return the number of Nodes.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   The Element.
 </dd>
    <dt><tt> oLinkedNodes</tt>
   <dd>   The array of Nodes linked to the element.
   <br><b>Lifecycle rules deviation</b>
      Must be set to NULL before calling the method, and not be deleted after use.</dd>
</dl>
</dl>
</dl>
<a name="GetVirtualElements"></a><a name="GetVirtualElements(CATSamExplicitPtr*&amp;)"></a> <dt> o <b>GetVirtualElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetVirtualElements</b>(<td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oElements</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Virtual Elements of the FEM Model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElements</tt>
   <dd>   <br><b>Lifecycle rules deviation</b>
      Must be set to NULL before calling the method, and not be deleted after use.
   The array of Elements.</dd>
</dl>
</dl>
</dl>
<a name="GetVirtualNodes"></a><a name="GetVirtualNodes(CATSamExplicitPtr*&amp;)"></a> <dt> o <b>GetVirtualNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetVirtualNodes</b>(<td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oNodes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the array of Virtual Nodes of the FEM Model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodes</tt>
   <dd>   The array of Virtual Nodes.
   <br><b>Lifecycle rules deviation</b>
      Must be set to NULL before calling the method, and not be deleted after use.</dd>
</dl>
</dl>
</dl>
<a name="Release"></a><a name="Release()"></a> <dt> o <b>Release</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Release</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Decrease the reference counter by 1.
</dl>
<a name="RequestDelayedDestruction"></a><a name="RequestDelayedDestruction(CATBoolean)"></a> <dt> o <b>RequestDelayedDestruction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RequestDelayedDestruction</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iRequestDestruction</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Requests the topology delayed destruction.
 <br> Inline Method. <br>
 The topology will be destroyed as soon as this will be possible.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRequestDestruction</tt>
   <dd>   This parameter indicates the request for the collector deletion.</dd>
</dl>
</dl>
</dl>
<a name="SetUpToDate"></a><a name="SetUpToDate(CATBoolean)"></a> <dt> o <b>SetUpToDate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetUpToDate</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iUpToDate</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Set the Flag IsUpToDate. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUpToDate</tt>
   <dd>   The value of the flag IsUpToDate.</dd>
</dl>
</dl>
</dl>
<a name="SetVirtualUpToDate"></a><a name="SetVirtualUpToDate(CATBoolean)"></a> <dt> o <b>SetVirtualUpToDate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetVirtualUpToDate</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iVirtualUpToDate</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Clean the Virtual Nodes and Elements arrays in order to recalculate them if the flag is false.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVirtualUpToDate</tt>
   <dd>   The value of the flag IsVirtualUpToDate.</dd>
</dl>
</dl>
</dl>
<a name="UpdateActivityStatus"></a><a name="UpdateActivityStatus()"></a> <dt> o <b>UpdateActivityStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UpdateActivityStatus</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Update activity status of the mesh.
</dl>
<hr>
 This object is included in the file: <b>CATAnalysisExplicitTopology.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSAM0Explicit</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

