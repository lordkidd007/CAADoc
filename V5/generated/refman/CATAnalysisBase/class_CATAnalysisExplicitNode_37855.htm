<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisBase Class CATAnalysisExplicitNode</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAnalysisBase.htm" href="../CATAnalysisBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAnalysisBase";	}
		function getCurrentObjectName() { 
 	return "CATAnalysisExplicitNode"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAnalysisBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATAnalysisExplicitNode</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAnalysisExplicitNode_37855','CATAnalysisExplicitNode','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAnalysisExplicitNode</b>
</p>
<p>
<b><i> Field model node.</i></b><br>

 This object is the field model representation of the meshing nodes and their physical behavior.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAnalysisExplicitNode()"><b>CATAnalysisExplicitNode</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#CATAnalysisExplicitNode(CATAnalysisExplicitData&amp;)"><b>CATAnalysisExplicitNode</b></a>(CATAnalysisExplicitData&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATAnalysisExplicitNode(CATAnalysisExplicitNode&amp;)"><b>CATAnalysisExplicitNode</b></a>(CATAnalysisExplicitNode&amp;)
<dd>  Copy constructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CanEvaluateLocalAxis(CATBoolean&amp;)"><b>CanEvaluateLocalAxis</b></a>(CATBoolean&amp;)
<dd>  Returns if a local axis can be evaluated.
 <dt> o 
    <a href="#CreateNode(CATAnalysisExplicitSet&amp;,CATMSHNode*,CATSamPhysicalType)"><b>CreateNode</b></a>(CATAnalysisExplicitSet&amp;,CATMSHNode*,CATSamPhysicalType)
<dd>  Create the field model representation of a mesh node.
 <dt> o 
    <a href="#GetCoordinates(float[3],CATBoolean)"><b>GetCoordinates</b></a>(float[3],CATBoolean)
<dd>  Returns the float coordinates.
 <dt> o 
    <a href="#GetCoordinates(double[3],CATBoolean)"><b>GetCoordinates</b></a>(double[3],CATBoolean)
<dd>  Returns the double coordinates.
 <dt> o 
    <a href="#GetLinkedElements(CATSamExplicitPtr*(&amp;))"><b>GetLinkedElements</b></a>(CATSamExplicitPtr*(&amp;))
<dd>  Returns the linked Elements to the Node.
 <dt> o 
    <a href="#GetLocalAxis(CATSamExplicitPtr&amp;)"><b>GetLocalAxis</b></a>(CATSamExplicitPtr&amp;)
<dd>  Returns the Local axis attached to the ExplicitNode.
 <dt> o 
    <a href="#GetLocalAxis(CATAnalysisExplicitAxis&amp;)"><b>GetLocalAxis</b></a>(CATAnalysisExplicitAxis&amp;)
<dd>  Returns the Local axis attached to the ExplicitNode.
 <dt> o 
    <a href="#GetLocalAxis(CATMathVector&amp;,CATMathVector&amp;,CATMathVector&amp;)"><b>GetLocalAxis</b></a>(CATMathVector&amp;,CATMathVector&amp;,CATMathVector&amp;)
<dd>  Returns the definition of the local axis attached to the ExplicitNode according to a position identifier.
 <dt> o 
    <a href="#GetMeshPointer(void)"><b>GetMeshPointer</b></a>(void)
<dd>  Returns the pointer of the mesh node object.
 <dt> o 
    <a href="#GetMeshTag(unsigned int&amp;)"><b>GetMeshTag</b></a>(unsigned int&amp;)
<dd>  Returns the tag (ie unique identifier) of the mesh node object.
 <dt> o 
    <a href="#GetNumberOfLinkedElements(int&amp;)"><b>GetNumberOfLinkedElements</b></a>(int&amp;)
<dd>  Returns the number of linked elements.
 <dt> o 
    <a href="#IsCondensed()"><b>IsCondensed</b></a>()
<dd>  Returns if the explicit node is condensed or not.
 <dt> o 
    <a href="#LinkWithMeshPointer(CATMSHNode*,CATAnalysisExplicitModel*)"><b>LinkWithMeshPointer</b></a>(CATMSHNode*,CATAnalysisExplicitModel*)
<dd>  Retrieves the link to the current object with a field model node based on a mesh node pointer.
 <dt> o 
    <a href="#LinkWithMeshTag(unsigned int,CATAnalysisExplicitModel*)"><b>LinkWithMeshTag</b></a>(unsigned int,CATAnalysisExplicitModel*)
<dd>  Links the current object with a field model node based on a mesh node tag (ie unique identifier).
 <dt> o 
    <a href="#LinkWithPointer(CATSamExplicitPtr,CATAnalysisExplicitModel*)"><b>LinkWithPointer</b></a>(CATSamExplicitPtr,CATAnalysisExplicitModel*)
<dd>  Links the current object with a field model node based on its pointer.
 <dt> o 
    <a href="#SetMeshPointer(CATMSHNode*)"><b>SetMeshPointer</b></a>(CATMSHNode*)
<dd>  Creates the link to the current unlinked explicit node with a node mesh pointer.
 <dt> o 
    <a href="#operator =(CATAnalysisExplicitData&amp;)"><b>operator =</b></a>(CATAnalysisExplicitData&amp;)
<dd>  Assignment operator.
 <dt> o 
    <a href="#operator =(CATAnalysisExplicitNode&amp;)"><b>operator =</b></a>(CATAnalysisExplicitNode&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAnalysisExplicitNode"></a><a name="CATAnalysisExplicitNode()"></a> <dt> o <b>CATAnalysisExplicitNode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitNode</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CATAnalysisExplicitNode"></a><a name="CATAnalysisExplicitNode(CATAnalysisExplicitData&amp;)"></a> <dt> o <b>CATAnalysisExplicitNode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitNode</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitData','CATAnalysisExplicitData&amp;')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitData','','CATAnalysisExplicitData') </script>
</dl>
</dl>
<a name="CATAnalysisExplicitNode"></a><a name="CATAnalysisExplicitNode(CATAnalysisExplicitNode&amp;)"></a> <dt> o <b>CATAnalysisExplicitNode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitNode</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitNode','CATAnalysisExplicitNode&amp;')</script> <td><tt>iNode</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
 <h2>Methods</h2> <br>
<a name="CanEvaluateLocalAxis"></a><a name="CanEvaluateLocalAxis(CATBoolean&amp;)"></a> <dt> o <b>CanEvaluateLocalAxis</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CanEvaluateLocalAxis</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>isValid</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns if a local axis can be evaluated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isValid</tt>
   <dd> <br><b>Legal values</b>: 
 <ul>
 <li><font color="red">TRUE</font color="red"> if a local axis is valid.</li>
 <li><font color="red">FALSE</font color="red"> if a local axis can not be computed.</li></ul></dd>
</dl>
</dl>
</dl>
<a name="CreateNode"></a><a name="CreateNode(CATAnalysisExplicitSet&amp;,CATMSHNode*,CATSamPhysicalType)"></a> <dt> o <b>CreateNode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateNode</b>(<td><script type="text/javascript"> activateLink('CATAnalysisExplicitSet','CATAnalysisExplicitSet&amp;')</script> <td><tt>iNodeSet</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode*')</script> <td><tt>iMeshNode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamPhysicalType','CATSamPhysicalType')</script> <td><tt>iNodePhysicalType</tt><td><tt>= CATSamPhysicalTypeNone</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Create the field model representation of a mesh node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNodeSet</tt>
   <dd>    The parent node set.
 </dd>
    <dt><tt> iMeshNode</tt>
   <dd>    The mesh node pointer.
 </dd>
    <dt><tt> iNodePhysicalType</tt>
   <dd>    The physical type number of "NODE".<br>
    If it isn't provided, it will be obtained internally.</dd>
</dl>
</dl>
</dl>
<a name="GetCoordinates"></a><a name="GetCoordinates(float[3],CATBoolean)"></a> <dt> o <b>GetCoordinates</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCoordinates</b>(<td><script type="text/javascript"> activateLink('float[3','float[3]')</script> <td><tt>oCoordinates</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Local</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the float coordinates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoordinates</tt>
   <dd> The array of coordinates. </dd>
    <dt><tt> Local</tt>
   <dd> Boolean for local or global coordinates. <br><b>Legal values</b>: 
 <ul>
 <li><font color="red">TRUE</font color="red"> for coordinates in local reference frame.</li>
 <li><font color="red">FALSE</font color="red"> for coordinates in global reference frame.</li></ul></dd>
</dl>
</dl>
</dl>
<a name="GetCoordinates"></a><a name="GetCoordinates(double[3],CATBoolean)"></a> <dt> o <b>GetCoordinates</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCoordinates</b>(<td><script type="text/javascript"> activateLink('double[3','double[3]')</script> <td><tt>oCoordinates</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Local</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the double coordinates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoordinates</tt>
   <dd> The array of coordinates. </dd>
    <dt><tt> Local</tt>
   <dd> Boolean for local or global coordinates. <br><b>Legal values</b>: 
 <ul>
 <li><font color="red">TRUE</font color="red"> for coordinates in local reference frame.</li>
 <li><font color="red">FALSE</font color="red"> for coordinates in global reference frame.</li></ul></dd>
</dl>
</dl>
</dl>
<a name="GetLinkedElements"></a><a name="GetLinkedElements(CATSamExplicitPtr*(&amp;))"></a> <dt> o <b>GetLinkedElements</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLinkedElements</b>(<td><script type="text/javascript"> activateLink('CATSamExplicitPtr*(&)','CATSamExplicitPtr*(&amp;)')</script> <td><tt>oLinkedElements</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the linked Elements to the Node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLinkedElements</tt>
   <dd> The linked Elements. <br><b>Note</b>: 
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.</dd>
</dl>
</dl>
</dl>
<a name="GetLocalAxis"></a><a name="GetLocalAxis(CATSamExplicitPtr&amp;)"></a> <dt> o <b>GetLocalAxis</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLocalAxis</b>(<td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr&amp;')</script> <td><tt>oAxis</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the Local axis attached to the ExplicitNode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAxis</tt>
   <dd> The explicit pointer attached to the Explicit Node. <br><b>Note</b>:
 <ul>
 <li>This pointer can be NULL.</li>
 <li>This method is more performant than </dd>
<script type="text/javascript"> activateLinkAnchor('','GetLocalAxis(CATAnalysisExplicitAxis&)','GetLocalAxis(CATAnalysisExplicitAxis&)') </script> if you do not need to access the local axis data members.</li></ul>
</dl>
</dl>
</dl>
<a name="GetLocalAxis"></a><a name="GetLocalAxis(CATAnalysisExplicitAxis&amp;)"></a> <dt> o <b>GetLocalAxis</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLocalAxis</b>(<td><script type="text/javascript"> activateLink('CATAnalysisExplicitAxis','CATAnalysisExplicitAxis&amp;')</script> <td><tt>oAxis</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the Local axis attached to the ExplicitNode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAxis</tt>
   <dd> The CATAnalysisExplicitAxis attached to the Explicit Node.</dd>
</dl>
</dl>
</dl>
<a name="GetLocalAxis"></a><a name="GetLocalAxis(CATMathVector&amp;,CATMathVector&amp;,CATMathVector&amp;)"></a> <dt> o <b>GetLocalAxis</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLocalAxis</b>(<td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oVecU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oVecV</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oVecW</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the definition of the local axis attached to the ExplicitNode according to a position identifier.
 In case of the local axis can not be computed, the method return the Global Axis.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVecU</tt>
   <dd>   The U Vector of the local axis attached to the ExplicitNode.
 </dd>
    <dt><tt> oVecV</tt>
   <dd>   The V Vector of the local axis attached to the ExplicitNode.
 </dd>
    <dt><tt> oVecW</tt>
   <dd>   The W Vector of the local axis attached to the ExplicitNode.</dd>
</dl>
</dl>
</dl>
<a name="GetMeshPointer"></a><a name="GetMeshPointer(void)"></a> <dt> o <b>GetMeshPointer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode *')</script>  <b>GetMeshPointer</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the pointer of the mesh node object.
</dl>
<a name="GetMeshTag"></a><a name="GetMeshTag(unsigned int&amp;)"></a> <dt> o <b>GetMeshTag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMeshTag</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oMeshTag</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the tag (ie unique identifier) of the mesh node object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMeshTag</tt>
   <dd>  The CATMSHNode tag.</dd>
</dl>
</dl>
</dl>
<a name="GetNumberOfLinkedElements"></a><a name="GetNumberOfLinkedElements(int&amp;)"></a> <dt> o <b>GetNumberOfLinkedElements</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNumberOfLinkedElements</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumber</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of linked elements.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd> The number of linked elements.</dd>
</dl>
</dl>
</dl>
<a name="IsCondensed"></a><a name="IsCondensed()"></a> <dt> o <b>IsCondensed</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsCondensed</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns if the explicit node is condensed or not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   condensation flag. This consensation flag is dedicated to assembly of analysis.
 It is automatically set up in the CreateNode method if the meshing node is condensed. 
 <br><b>Legal values</b>: 
 <ul>
 <li><font color="red">TRUE</font color="red"> the explicit node is a condensed node.</li>
 <li><font color="red">FALSE</font color="red"> the explicit node is not condensed .</li></ul>
</dl>
</dl>
<a name="LinkWithMeshPointer"></a><a name="LinkWithMeshPointer(CATMSHNode*,CATAnalysisExplicitModel*)"></a> <dt> o <b>LinkWithMeshPointer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LinkWithMeshPointer</b>(<td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode*')</script> <td><tt>iMeshPointer</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitModel','CATAnalysisExplicitModel*')</script> <td><tt>iModel</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the link to the current object with a field model node based on a mesh node pointer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPointer</tt>
   <dd> Pointer of the mesh node. </dd>
    <dt><tt> iModel</tt>
   <dd> Pointer to the field model. <br><b>Note</b>: The CATMSHNode must be in the mesh container of the same document.
</dd>
</dl>
</dl>
</dl>
<a name="LinkWithMeshTag"></a><a name="LinkWithMeshTag(unsigned int,CATAnalysisExplicitModel*)"></a> <dt> o <b>LinkWithMeshTag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LinkWithMeshTag</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iMeshTag</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitModel','CATAnalysisExplicitModel*')</script> <td><tt>iModel</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Links the current object with a field model node based on a mesh node tag (ie unique identifier).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshTag</tt>
   <dd>    The tag of the mesh node.
 </dd>
    <dt><tt> iModel</tt>
   <dd>   A pointer to the field model.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitModel','','CATAnalysisExplicitModel') </script>
</dl>
</dl>
<a name="LinkWithPointer"></a><a name="LinkWithPointer(CATSamExplicitPtr,CATAnalysisExplicitModel*)"></a> <dt> o <b>LinkWithPointer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LinkWithPointer</b>(<td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr')</script> <td><tt>iExplicitPtr</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitModel','CATAnalysisExplicitModel*')</script> <td><tt>iModel</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Links the current object with a field model node based on its pointer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExplicitPtr</tt>
   <dd>   The pointer to the field model object.
 </dd>
    <dt><tt> iModel</tt>
   <dd>   A pointer to the field model.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitModel','','CATAnalysisExplicitModel') </script>
</dl>
</dl>
<a name="SetMeshPointer"></a><a name="SetMeshPointer(CATMSHNode*)"></a> <dt> o <b>SetMeshPointer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMeshPointer</b>(<td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode*')</script> <td><tt>iMeshNode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates the link to the current unlinked explicit node with a node mesh pointer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshNode</tt>
   <dd>   The pointer of the mesh Node.
 <br><b>Note</b>: The CATMSHNode must be in the mesh container of the same document.
   This Mesh Node must be undeleted, not linked to any Explicit Node.
   This Explicit Node must not be linked to any Mesh Node.</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATAnalysisExplicitData&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAnalysisExplicitNode','CATAnalysisExplicitNode')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitData','CATAnalysisExplicitData&amp;')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAnalysisExplicitData','','CATAnalysisExplicitData') </script>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATAnalysisExplicitNode&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAnalysisExplicitNode','CATAnalysisExplicitNode')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitNode','CATAnalysisExplicitNode&amp;')</script> <td><tt>iNode</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
</dl>
<hr>
 This object is included in the file: <b>CATAnalysisExplicitNode.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSAM0Explicit</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

