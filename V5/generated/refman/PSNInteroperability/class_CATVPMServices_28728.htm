<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PSNInteroperability Class CATVPMServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PSNInteroperability.htm" href="../PSNInteroperability.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PSNInteroperability";	}
		function getCurrentObjectName() { 
 	return "CATVPMServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PSNInteroperability <script type="text/javascript" > writeClassCharacteristic(); </script> CATVPMServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATVPMServices_28728','CATVPMServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATVPMServices</b>
</p>
<p>
<b><i> Class for VPM document services.</i></b><br>

 <b>Role:</b>This class delivers services to be used with ENOVIAvpm
<ul>
 <li> <script type="text/javascript"> activateLinkAnchor('CATVPMServices','SetPDMProperties','CATVPMServices.SetPDMProperties') </script> : Set the PDM properties of a document. <li> 
<script type="text/javascript"> activateLinkAnchor('CATPDMServices','SaveAsInVPM','CATPDMServices.SaveAsInVPM') </script> : SaveAs of a document in VPM database.</ul>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#SaveAsInVPM(CATDocument*,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,SaveAsMode)"><b>SaveAsInVPM</b></a>(CATDocument*,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,SaveAsMode)
<dd>  SaveAs of a document in ENOVIAvpm V4 .
 <dt> o 
    <a href="#SetPDMProperties(CATDocument*,Env,VaultMode)"><b>SetPDMProperties</b></a>(CATDocument*,Env,VaultMode)
<dd>  Set the PDM properties of a document for ENOVIAvpm V4.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#Env"><b>Env</b></a>
<dd>  <dt> o 
    <a href="#SaveAsMode"><b>SaveAsMode</b></a>
<dd>  <dt> o 
    <a href="#VaultMode"><b>VaultMode</b></a>
<dd> </dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="SaveAsInVPM"></a><a name="SaveAsInVPM(CATDocument*,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,SaveAsMode)"></a> <dt> o <b>SaveAsInVPM</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SaveAsInVPM</b>(<td><script type="text/javascript"> activateLink('CATDocument','CATDocument*')</script> <td><tt>iDoc</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCoid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCompid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatenv</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatab</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCnxString</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SaveAsMode','SaveAsMode')</script> <td><tt>iSaveMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 SaveAs of a document in ENOVIAvpm V4 .

 <br><b>Role:</b>This method allows save an ENOVIAvpm V4 document loaded in session by replacing 
 an existing document in the ENOVIAvpm V4 database.
 This method has the same effect as the "Extract&Save" menu in ENOVIAvpm V4 client application. 
 It proposes three similar modes for save: 
     <sl>
	  <li>"Replace by target" : this mode creates a new document in VPM and 
        replaces the modified document in the session by the new one. 
        All links are rerouted to the new document.
   <li>"Keep Modified" : this mode creates a new document in VPM and 
        keeps all the modification in the original part in the CATIA Session</li>
   <li>"Reload From Source" : this mode creates a new document in VPM and 
        replaces the modified document in the session by the original version in the database.
        All links pointing to the replaced document will be rerouted if possible.
        If not, the corresponding links are broken.
     </sl>
<p> If ENOVIAvpm application is VX0SERV : the commit in database is not done.  
<p> If ENOVIAvpm application is VX0VPM : the commit in database is done.  
<p>If needed, your Imakefile.mk should include the module: <b><b>CATPinServices</b></b> </p>
<p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDoc</tt>
   <dd>    the document to save

 </dd>
    <dt><tt> iCoid</tt>
   <dd>    the Coid of the document to overwrite (Hexadecimal 16 crc long)

 </dd>
    <dt><tt> iCompid</tt>
   <dd>    the Compid of the document to overwrite (Hexadecimal 16 crc long)

 </dd>
    <dt><tt> iCatenv</tt>
   <dd>    the VPM environment name of the document (8 crc long)
<br>For instance: <tt>"VPMENV  "</tt>

 </dd>
    <dt><tt> iCatab</tt>
   <dd>    the VPM DOCUMENT table name (18 crc long)
<br>For instance: <tt>"DOCUMENT          "</tt>

 </dd>
    <dt><tt> iCnxString</tt>
   <dd>    <i>(optional)</i> The connection string of the entity in VPM.

 <br>
 </dd>
    <dt><tt> iSaveMode</tt>
   <dd>     <sl>
     <li><tt>ReplaceByTarget</tt> Replace </li>
     <li><tt>KeepModified</tt> Keep Modified </li>
     <li><tt>ReloadFromSource</tt> Reload original version </li>
     </sl>

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The SaveAs has been successfuly executed</li> 
   <li><tt>E_FAIL</tt>: the method failed</li> 
   <li><tt>E_INVALIDARG</tt>: one of the input arguments is incorrect</li> 
   </ul>
</dl>
</dl>
<a name="SetPDMProperties"></a><a name="SetPDMProperties(CATDocument*,Env,VaultMode)"></a> <dt> o <b>SetPDMProperties</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPDMProperties</b>(<td><script type="text/javascript"> activateLink('CATDocument','CATDocument*')</script> <td><tt>iDoc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Env','Env')</script> <td><tt>iDocEnv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VaultMode','VaultMode')</script> <td><tt>iVaultMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the PDM properties of a document for ENOVIAvpm V4.

 <br><b>Role:</b>This method sets the PDM properties for ENOVIAvpm V4 of a document loaded in session.
 It sets the environment type and the exposition mode of a document.
 This method is intended to be used on a filebase document that will be saved in ENOVIAvpm V4.
 This method has the same effect as the "Set PDM Properties" interactive CATIA menu.
<br> 
 The <tt>VPM1</tt> environment is dedicated to ENOVIAvpm V4. 
 For this environment, two expositions modes are available as <tt>VaultMode</tt>:
   <sl>
     <li>the Publications Exposed mode (<tt>PermanentBlackBox</tt>) </li>
     <li>the Structure Exploded mode (<tt>VolatileExposed</tt>)</li>
   </sl>
<p>
 The rules for setting the environment type and the exposition mode of a document are:
 <ul>
 <li>if VaultMode is set to <tt>PermanentBlackBox</tt>, 
           the exposition mode is propagated to the children of the structure in session </li>
 <li>if VaultMode is set to <tt>VolatileExposed</tt>, 
           the exposition mode is not propagated to the children </li>
 <li>it is not possible to set <tt>VolatileExposed</tt> on a document if this document has already a 
         pointing document in Publication Exposed mode </li>
 <li>if the document comes from ENOVIAvpm V4 database:
   <ul>
     <li>its PDM exposition mode can't be modified </li>
     <li>its PDM environment can't be changed to File </li>
   </ul>
 </ul>
 <br><b>Note:</b>Only CATProduct type document supports the Structure Exploded mode.
*
<p>If needed, your Imakefile.mk should include the module: <b><b>CATPinServices</b></b> </p>
<p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDoc</tt>
   <dd>    the document on which we set the PDM properties
 </dd>
    <dt><tt> iDocEnv</tt>
   <dd>    the environment type to set to the document:
     <sl>
     <li><tt>File</tt> for filebased environment</li>
     <li><tt>VPM1</tt> for ENOVIAvpm V4 environment</li>
     </sl>
 </dd>
    <dt><tt> iVaultMode</tt>
   <dd>    the exposition mode for <tt>VPM1</tt> environment only:
     <sl>
     <li><tt>PermanentBlackBox</tt> for Publications Exposed</li>
     <li><tt>VolatileExposed</tt> for Structure Exploded </li>
     </sl> 

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The PDM properties has been successfuly set</li> 
   <li><tt>E_FAIL</tt>: incompatible input parameters</li> 
   <li><tt>E_FAIL</tt>: the method failed</li> 
   </ul>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="Env"> <dt> o <b>Env</b>
<dl>
  <dd>
<pre>
enum <b>Env</b> {
  File,
  VPM1
}
</pre>
</dl>
<a name="SaveAsMode"> <dt> o <b>SaveAsMode</b>
<dl>
  <dd>
<pre>
enum <b>SaveAsMode</b> {
  ReplaceByTarget,
  KeepModified,
  ReloadFromSource
}
</pre>
</dl>
<a name="VaultMode"> <dt> o <b>VaultMode</b>
<dl>
  <dd>
<pre>
enum <b>VaultMode</b> {
  PermanentBlackBox,
  VolatileExposed
}
</pre>
</dl>
<hr>
 This object is included in the file: <b>CATVPMServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPinServices</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

