<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisVisuInterfaces Interface CATISPMProcess</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAnalysisVisuInterfaces.htm" href="../CATAnalysisVisuInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAnalysisVisuInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATISPMProcess"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAnalysisVisuInterfaces Interface CATISPMProcess</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISPMProcess_44138','CATISPMProcess','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATISPMProcess</b>
</p>
<p>
<b><i> Analysis process general informations.</i></b><br>

 <b>Role:</b> Interface designed to manage <b>Analysis process behaviour</b>.<br>
 <p>
 A process is a mathematical operation applied on the values stored in a 
 CATAnalysisCharacCollector (or several) in order to create a new one (or several).
 This interface manages all general methods related to the process management. The 
 parameters of the processes are managed by CATISPMProcessAccess.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISPMProcessAccess','','CATISPMProcessAccess') </script>, <script type="text/javascript"> activateLinkAnchor('CATAnalysisCharacCollector','','CATAnalysisCharacCollector') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAvailableInputEntityType(int&amp;,CATSamValue*&amp;)"><b>GetAvailableInputEntityType</b></a>(int&amp;,CATSamValue*&amp;)
<dd>  Give the Input entity types that are supported by the process.
 <dt> o 
    <a href="#GetAvailableInputMathDimension(int&amp;,int*&amp;)"><b>GetAvailableInputMathDimension</b></a>(int&amp;,int*&amp;)
<dd>  Give the Input mathematical dimension types that are supported by the process.
 <dt> o 
    <a href="#GetAvailableInputMathType(int&amp;,CATSamMathType*&amp;)"><b>GetAvailableInputMathType</b></a>(int&amp;,CATSamMathType*&amp;)
<dd>  Give the Input mathematical types that are supported by the process.
 <dt> o 
    <a href="#GetAvailableInputRefFrame(int&amp;,CATSamRefFrame*&amp;)"><b>GetAvailableInputRefFrame</b></a>(int&amp;,CATSamRefFrame*&amp;)
<dd>  Give the Input reference frame types that are supported by the process.
 <dt> o 
    <a href="#GetAvailableInputValueType(int&amp;,CATSamValue*&amp;)"><b>GetAvailableInputValueType</b></a>(int&amp;,CATSamValue*&amp;)
<dd>  Give the Input Value types that are supported by the process.
 <dt> o 
    <a href="#GetEntityList(CATAnalysisExplicitParent&amp;,char*,CATSamValue,char*&amp;,CATSamValue&amp;)"><b>GetEntityList</b></a>(CATAnalysisExplicitParent&amp;,char*,CATSamValue,char*&amp;,CATSamValue&amp;)
<dd>  Give the entity list on which values can be computed by the process according to an input list.
 <dt> o 
    <a href="#GetOutputCharac(CATAnalysisCharacCollector**&amp;,int&amp;,char*,CATAnalysisCharacCollector* const*,int)"><b>GetOutputCharac</b></a>(CATAnalysisCharacCollector**&amp;,int&amp;,char*,CATAnalysisCharacCollector* const*,int)
<dd>  Create the output characteristic(s) according to the input one.
 <dt> o 
    <a href="#GetOutputCharacType(CATSamCharacVersion&amp;,CATSamCharacVersion&amp;)"><b>GetOutputCharacType</b></a>(CATSamCharacVersion&amp;,CATSamCharacVersion&amp;)
<dd>  Give the output characteristic version that will be created according to the input one.
 <dt> o 
    <a href="#GetProcessName()"><b>GetProcessName</b></a>()
<dd>  Returns the process name.
 <dt> o 
    <a href="#IsInputCharacTypeAvailable(CATSamCharacVersion&amp;)"><b>IsInputCharacTypeAvailable</b></a>(CATSamCharacVersion&amp;)
<dd>  Test if the CATSamCharacVersion can be supported by the process.
 <dt> o 
    <a href="#IsLinear(CATBoolean&amp;)"><b>IsLinear</b></a>(CATBoolean&amp;)
<dd>  Inform is the data returned by the process can be processed by linear interpolation
 This information is usefull for dynamic animation.
 <dt> o 
    <a href="#SetProcessDataAccess(CATISPMProcessAccess_var&amp;)"><b>SetProcessDataAccess</b></a>(CATISPMProcessAccess_var&amp;)
<dd>  Initialize the CATISPMProcess_access associated to the process.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAvailableInputEntityType"></a><a name="GetAvailableInputEntityType(int&amp;,CATSamValue*&amp;)"></a> <dt> o <b>GetAvailableInputEntityType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAvailableInputEntityType</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamValue','CATSamValue*&amp;')</script> <td><tt>oEntityType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Give the Input entity types that are supported by the process.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbType</tt>
   <dd>  Number of supported entity type
 </dd>
    <dt><tt> oEntityType</tt>
   <dd>  List of supported entity type
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamValue','','CATSamValue') </script>
</dl>
</dl>
<a name="GetAvailableInputMathDimension"></a><a name="GetAvailableInputMathDimension(int&amp;,int*&amp;)"></a> <dt> o <b>GetAvailableInputMathDimension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAvailableInputMathDimension</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oMathDimension</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Give the Input mathematical dimension types that are supported by the process.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbType</tt>
   <dd>  Number of supported Value types
 </dd>
    <dt><tt> oMathDimension</tt>
   <dd>  List of supported mathematical dimension</dd>
</dl>
</dl>
</dl>
<a name="GetAvailableInputMathType"></a><a name="GetAvailableInputMathType(int&amp;,CATSamMathType*&amp;)"></a> <dt> o <b>GetAvailableInputMathType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAvailableInputMathType</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamMathType','CATSamMathType*&amp;')</script> <td><tt>oMathType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Give the Input mathematical types that are supported by the process.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbType</tt>
   <dd>  Number of supported mathematical types
 </dd>
    <dt><tt> oMathType</tt>
   <dd>  List of supported mathematical types
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamMathType','','CATSamMathType') </script>
</dl>
</dl>
<a name="GetAvailableInputRefFrame"></a><a name="GetAvailableInputRefFrame(int&amp;,CATSamRefFrame*&amp;)"></a> <dt> o <b>GetAvailableInputRefFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAvailableInputRefFrame</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamRefFrame','CATSamRefFrame*&amp;')</script> <td><tt>oRefFrame</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Give the Input reference frame types that are supported by the process.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbType</tt>
   <dd>  Number of supported reference frame
 </dd>
    <dt><tt> oRefFrame</tt>
   <dd>  List of supported reference frame
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamRefFrame','','CATSamRefFrame') </script>
</dl>
</dl>
<a name="GetAvailableInputValueType"></a><a name="GetAvailableInputValueType(int&amp;,CATSamValue*&amp;)"></a> <dt> o <b>GetAvailableInputValueType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAvailableInputValueType</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamValue','CATSamValue*&amp;')</script> <td><tt>oValueType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Give the Input Value types that are supported by the process.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbType</tt>
   <dd>  Number of supported Value types
 </dd>
    <dt><tt> oValueType</tt>
   <dd>  List of supported Value types</dd>
</dl>
</dl>
</dl>
<a name="GetEntityList"></a><a name="GetEntityList(CATAnalysisExplicitParent&amp;,char*,CATSamValue,char*&amp;,CATSamValue&amp;)"></a> <dt> o <b>GetEntityList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEntityList</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitParent','CATAnalysisExplicitParent&amp;')</script> <td><tt>iContext</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iEntityFlag</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamValue','CATSamValue')</script> <td><tt>iEntityType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>oEntityFlag</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamValue','CATSamValue&amp;')</script> <td><tt>oEntityType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Give the entity list on which values can be computed by the process according to an input list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContext</tt>
   <dd> Context for the entities definition it is the Explicit set or entity.
 </dd>
    <dt><tt> iEntityFlag</tt>
   <dd> Inut list of flags to set up if values are defined on the entities.
 </dd>
    <dt><tt> iEntityType</tt>
   <dd> Entity type of the entities. 
 </dd>
    <dt><tt> oEntityFlag</tt>
   <dd> Output list of flags to set up if values are defined on the entities.
 </dd>
    <dt><tt> oEntityType</tt>
   <dd> Entity type of the entities that will be returned.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Status of the process execution .
 <br><b>Legal values</b>: S_OK if the execution is OK ,E_FAIL otherwise.
</dl>
</dl>
<a name="GetOutputCharac"></a><a name="GetOutputCharac(CATAnalysisCharacCollector**&amp;,int&amp;,char*,CATAnalysisCharacCollector* const*,int)"></a> <dt> o <b>GetOutputCharac</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOutputCharac</b>(<td><script type="text/javascript"> activateLink('CATAnalysisCharacCollector','CATAnalysisCharacCollector**&amp;')</script> <td><tt>oCharac</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbCharac</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iEntityFlag</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAnalysisCharacCollector* const','CATAnalysisCharacCollector* const*')</script> <td><tt>iCharac</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbCharac</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Create the output characteristic(s) according to the input one.
 This is the execution of the process.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCharac</tt>
   <dd>  Array of created CATAnalysisCharacCollector
 </dd>
    <dt><tt> oNbCharac</tt>
   <dd> Size of this array.
 </dd>
    <dt><tt> iEntityFlag</tt>
   <dd> Entity flag that inform if values have to be computed of the support.
 </dd>
    <dt><tt> iCharac</tt>
   <dd> Input list of CATAnalysisCharacCollector to process.
 </dd>
    <dt><tt> iNbCharac</tt>
   <dd> Size of this input array.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Status of the process execution .
 <br><b>Legal values</b>: S_OK if the execution is OK ,E_FAIL otherwise.
</dl>
</dl>
<a name="GetOutputCharacType"></a><a name="GetOutputCharacType(CATSamCharacVersion&amp;,CATSamCharacVersion&amp;)"></a> <dt> o <b>GetOutputCharacType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOutputCharacType</b>(<td><script type="text/javascript"> activateLink('CATSamCharacVersion','CATSamCharacVersion&amp;')</script> <td><tt>oVersion</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATSamCharacVersion','CATSamCharacVersion&amp;')</script> <td><tt>iVersion</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Give the output characteristic version that will be created according to the input one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVersion</tt>
   <dd>  Characteristic version as input of the process.
 </dd>
    <dt><tt> oVersion</tt>
   <dd>  Characteristic version that will be created by the process.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Status of the test.
 <br><b>Legal values</b>: S_OK if iVersion is supported,E_FAIL otherwise.
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamCharacVersion','','CATSamCharacVersion') </script>
</dl>
</dl>
<a name="GetProcessName"></a><a name="GetProcessName()"></a> <dt> o <b>GetProcessName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetProcessName</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the process name.
</dl>
<a name="IsInputCharacTypeAvailable"></a><a name="IsInputCharacTypeAvailable(CATSamCharacVersion&amp;)"></a> <dt> o <b>IsInputCharacTypeAvailable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsInputCharacTypeAvailable</b>(<td> const <script type="text/javascript"> activateLink('CATSamCharacVersion','CATSamCharacVersion&amp;')</script> <td><tt>iVersion</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Test if the CATSamCharacVersion can be supported by the process.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVersion</tt>
   <dd>  Characteristic version to test
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Status of the test.
 <br><b>Legal values</b>: S_OK if iVersion is supported,E_FAIL otherwise.
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSamCharacVersion','','CATSamCharacVersion') </script>
</dl>
</dl>
<a name="IsLinear"></a><a name="IsLinear(CATBoolean&amp;)"></a> <dt> o <b>IsLinear</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsLinear</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oresult</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Inform is the data returned by the process can be processed by linear interpolation
 This information is usefull for dynamic animation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oresult</tt>
   <dd> Entity type of the entities that will be returned.
 <br><b>Legal values</b>: CATTrue if the execution is linear ,CATFalse otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetProcessDataAccess"></a><a name="SetProcessDataAccess(CATISPMProcessAccess_var&amp;)"></a> <dt> o <b>SetProcessDataAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetProcessDataAccess</b>(<td><script type="text/javascript"> activateLink('CATISPMProcessAccess_var','CATISPMProcessAccess_var&amp;')</script> <td><tt>iProcessAccess</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Initialize the CATISPMProcess_access associated to the process. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProcessAccess</tt>
   <dd>  CATISPMProcessAccess</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISPMProcess.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSamVisuUUID</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

