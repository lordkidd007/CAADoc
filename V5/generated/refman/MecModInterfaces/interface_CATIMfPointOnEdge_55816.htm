<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MecModInterfaces Interface CATIMfPointOnEdge</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../MecModInterfaces.htm">This Framework</a>  <a href="interface_CATIMfPoint_23904.htm">Previous</a>  <a href="interface_CATIMfProcReport_51906.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>MecModInterfaces Interface CATIMfPointOnEdge</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIMfPointOnEdge
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMfPointOnEdge</b>
</p>
<p>
<b><i> Interface to manage a point on edge BRep feature.</i></b><br>

 A point on edge BRep feature is made of a <tt>CATIMfRedge</tt> support and a ratio.
 It is used to capture radius values for variable radius fillets.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../MecModInterfaces/interface_CATIMfBRepFactory_57021.htm">CATIMfBRepFactory</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetGNOrientation(CATEdge_var&amp;,int&amp;)"><b>GetGNOrientation</b></a>(CATEdge_var&amp;,int&amp;)
<dd>  Reads the local edge and the generic naming orientation of the edge.
 <dt> o 
    <a href="#GetLocalRatio(CATEdge_var&amp;,double&amp;)"><b>GetLocalRatio</b></a>(CATEdge_var&amp;,double&amp;)
<dd>  Reads the local ration and the associated edge.
 <dt> o 
    <a href="#GetLocalRatioFromPoint(CATMathPoint&amp;,CATEdge_var&amp;,double&amp;)"><b>GetLocalRatioFromPoint</b></a>(CATMathPoint&amp;,CATEdge_var&amp;,double&amp;)
<dd>  Computes the local ratio and the associated edge from a 3D point.
 <dt> o 
    <a href="#GetPointOnCurve(CATPointOnCurve_var&amp;,CATCurve_var&amp;,CATEdge_var&amp;,int&amp;)"><b>GetPointOnCurve</b></a>(CATPointOnCurve_var&amp;,CATCurve_var&amp;,CATEdge_var&amp;,int&amp;)
<dd>  Reads the point on curve, the curve, the edge and the orientation of the curve according to the edge.
 <dt> o 
    <a href="#GetRatio()"><b>GetRatio</b></a>()
<dd>  Returns the global ratio.
 <dt> o 
    <a href="#GetRatioFromPoint(CATMathPoint)"><b>GetRatioFromPoint</b></a>(CATMathPoint)
<dd>  Computes the glogal ratio from a 3D point.
 <dt> o 
    <a href="#GetSickMathPoint(CATMathPoint&amp;)"><b>GetSickMathPoint</b></a>(CATMathPoint&amp;)
<dd>  Reads the sick point in case of update error.
 <dt> o 
    <a href="#GetSupport()"><b>GetSupport</b></a>()
<dd>  Returns the <tt>CATIMfRedge</tt> support.
 <dt> o 
    <a href="#GetWire(CATWire_var&amp;,CATEdge_var&amp;,int&amp;)"><b>GetWire</b></a>(CATWire_var&amp;,CATEdge_var&amp;,int&amp;)
<dd>  Reads the wire and the orientation of the local edge according to the wire.
 <dt> o 
    <a href="#IsSame(CATIMfPointOnEdge_var&amp;)"><b>IsSame</b></a>(CATIMfPointOnEdge_var&amp;)
<dd>  Returns 1 if the points on edge are same.
 <dt> o 
    <a href="#SetRatio(double)"><b>SetRatio</b></a>(double)
<dd>  Sets the global ratio.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetGNOrientation"></a><a name="GetGNOrientation(CATEdge_var&amp;,int&amp;)"></a> <dt> o <b>GetGNOrientation</b>

<dt>  <table><tr><td>  public virtual void  <b>GetGNOrientation</b>(<td>CATEdge_var&amp; <td><tt>oLocalEdge</tt>,<tr><td></td><td>int&amp; <td><tt>oGNEdgeOrientation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Reads the local edge and the generic naming orientation of the edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLocalEdge</tt>
   <dd> Local edge.
 </dd>
    <dt><tt> oGNEdgeOrientation</tt>
   <dd> Equal to 1 if the intrinsic orientation of the edge fits with its generic naming orientation, 
 otherwise equal to -1.</dd>
</dl>
</dl>
</dl>
<a name="GetLocalRatio"></a><a name="GetLocalRatio(CATEdge_var&amp;,double&amp;)"></a> <dt> o <b>GetLocalRatio</b>

<dt>  <table><tr><td>  public virtual void  <b>GetLocalRatio</b>(<td>CATEdge_var&amp; <td><tt>oLocalEdge</tt>,<tr><td></td><td>double&amp; <td><tt>oLocalRatio</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Reads the local ration and the associated edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLocalEdge</tt>
   <dd> CATEdge.
 </dd>
    <dt><tt> oLocalRatio</tt>
   <dd> Local ratio.</dd>
</dl>
</dl>
</dl>
<a name="GetLocalRatioFromPoint"></a><a name="GetLocalRatioFromPoint(CATMathPoint&amp;,CATEdge_var&amp;,double&amp;)"></a> <dt> o <b>GetLocalRatioFromPoint</b>

<dt>  <table><tr><td>  public virtual void  <b>GetLocalRatioFromPoint</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>iPoint</tt>,<tr><td></td><td>CATEdge_var&amp; <td><tt>oLocalEdge</tt>,<tr><td></td><td>double&amp; <td><tt>oLocalRatio</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Computes the local ratio and the associated edge from a 3D point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> Point.
 </dd>
    <dt><tt> oLocalEdge</tt>
   <dd> Edge associated with the local ratio.
 </dd>
    <dt><tt> oLocalRatio</tt>
   <dd> Local ratio.</dd>
</dl>
</dl>
</dl>
<a name="GetPointOnCurve"></a><a name="GetPointOnCurve(CATPointOnCurve_var&amp;,CATCurve_var&amp;,CATEdge_var&amp;,int&amp;)"></a> <dt> o <b>GetPointOnCurve</b>

<dt>  <table><tr><td>  public virtual void  <b>GetPointOnCurve</b>(<td>CATPointOnCurve_var&amp; <td><tt>oPointOnCurve</tt>,<tr><td></td><td>CATCurve_var&amp; <td><tt>oLocalCurve</tt>,<tr><td></td><td>CATEdge_var&amp; <td><tt>oLocalEdge</tt>,<tr><td></td><td>int&amp; <td><tt>oOrientationEdgeCurve</tt>) = 0  </table></dt>
<dl>
  <dd>
 Reads the point on curve, the curve, the edge and the orientation of the curve according to the edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPointOnCurve</tt>
   <dd> Point on curve.
 </dd>
    <dt><tt> oLocalCurve</tt>
   <dd> Local curve.
 </dd>
    <dt><tt> oLocalEdge</tt>
   <dd> Local edge.
 </dd>
    <dt><tt> oOrientationEdgeCurve</tt>
   <dd> Equal to 1 if the intrinsic orientation of the edge fits with the curve orientation, 
 otherwise equal to -1.</dd>
</dl>
</dl>
</dl>
<a name="GetRatio"></a><a name="GetRatio()"></a> <dt> o <b>GetRatio</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetRatio</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the global ratio.
</dl>
<a name="GetRatioFromPoint"></a><a name="GetRatioFromPoint(CATMathPoint)"></a> <dt> o <b>GetRatioFromPoint</b>

<dt>  <table><tr><td>  public virtual <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetRatioFromPoint</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint</a> <td><tt>iPoint</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Computes the glogal ratio from a 3D point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> Point.</dd>
</dl>
</dl>
</dl>
<a name="GetSickMathPoint"></a><a name="GetSickMathPoint(CATMathPoint&amp;)"></a> <dt> o <b>GetSickMathPoint</b>

<dt>  <table><tr><td>  public virtual int  <b>GetSickMathPoint</b>(<td><a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint&amp;</a> <td><tt>oPoint</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Reads the sick point in case of update error.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPoint</tt>
   <dd> Point.</dd>
</dl>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport()"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>GetSupport</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the <tt>CATIMfRedge</tt> support.
</dl>
<a name="GetWire"></a><a name="GetWire(CATWire_var&amp;,CATEdge_var&amp;,int&amp;)"></a> <dt> o <b>GetWire</b>

<dt>  <table><tr><td>  public virtual void  <b>GetWire</b>(<td>CATWire_var&amp; <td><tt>oWire</tt>,<tr><td></td><td>CATEdge_var&amp; <td><tt>oLocalEdge</tt>,<tr><td></td><td>int&amp; <td><tt>oOrientationEdgeWire</tt>) = 0  </table></dt>
<dl>
  <dd>
 Reads the wire and the orientation of the local edge according to the wire.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWire</tt>
   <dd> Topological wire.
 </dd>
    <dt><tt> oLocalEdge</tt>
   <dd> Edge associated with the local ratio.
 </dd>
    <dt><tt> oOrientationEdgeWire</tt>
   <dd> Equal to 1 if the intrinsic orientation of the edge fits with the wire orientation, 
 otherwise equal to -1.</dd>
</dl>
</dl>
</dl>
<a name="IsSame"></a><a name="IsSame(CATIMfPointOnEdge_var&amp;)"></a> <dt> o <b>IsSame</b>

<dt>  <table><tr><td>  public virtual int  <b>IsSame</b>(<td> const CATIMfPointOnEdge_var&amp; <td><tt>iToCompare</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Returns 1 if the points on edge are same.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToCompare</tt>
   <dd> Point on edge BRep feature to be compared to <tt>this</tt>.</dd>
</dl>
</dl>
</dl>
<a name="SetRatio"></a><a name="SetRatio(double)"></a> <dt> o <b>SetRatio</b>

<dt>  <table><tr><td>  public virtual void  <b>SetRatio</b>(<td> const double <td><tt>iRatio</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the global ratio.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRatio</tt>
   <dd> Ratio.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMfPointOnEdge.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
