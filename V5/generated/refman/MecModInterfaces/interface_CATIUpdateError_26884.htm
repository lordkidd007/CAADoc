<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MecModInterfaces Interface CATIUpdateError</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MecModInterfaces.htm" href="../MecModInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MecModInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIUpdateError"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MecModInterfaces Interface CATIUpdateError</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIUpdateError_26884','CATIUpdateError','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIUpdateError</b>
</p>
<p>
<b><i> Interface to manage update error associated with mechanical features.</i></b><br>

 <b>Role</b>: This interface allows users to retrieve, create, or unset an update error associated 
 with a mechanical feature. A feature has an update error when its build has failed. There are 
 two usages of this interface:
 <ul>
  <li>Consultation</li>
   <p>To know if the feature
   has an update error, the first method to use is the <script type="text/javascript"> activateLinkAnchor('','TestExistingUpdateError','TestExistingUpdateError') </script> method.    This method is available
   in all cases. If there is an error, then you can use the 
<script type="text/javascript"> activateLinkAnchor('','GetUpdateError','GetUpdateError') </script> method to have more details about the error. </p>
   
  <li>Creation</li>
   <p>It is for those which must implement the 
<script type="text/javascript"> activateLinkAnchor('CATIBuild','','CATIBuild') </script> interface on a new mechanical feature. At the beginning of the 
<script type="text/javascript"> activateLinkAnchor('CATIBuild','Build','CATIBuild.Build') </script> method, the eventual last error is deleted   by the 
<script type="text/javascript"> activateLinkAnchor('','UnsetUpdateError','UnsetUpdateError') </script> method, and if an update error occurs during the method,    an error is associated with the feature thanks to the 
<script type="text/javascript"> activateLinkAnchor('','SetUpdateError','SetUpdateError') </script> method</p>   
 </ul>
 
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMfErrUpdate','','CATMfErrUpdate') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFullDiagnostic(int)"><b>GetFullDiagnostic</b></a>(int)
<dd>  Returns all the chained sick features diagnoses.
 <dt> o 
    <a href="#GetUpdateError()"><b>GetUpdateError</b></a>()
<dd>  Gets the update error associated with the feature.
 <dt> o 
    <a href="#SetUpdateError(CATMfErrUpdate*)"><b>SetUpdateError</b></a>(CATMfErrUpdate*)
<dd>  Associates an update error to the current feature.
 <dt> o 
    <a href="#TestExistingUpdateError()"><b>TestExistingUpdateError</b></a>()
<dd>  Gets a value indicating whether an update error is associated with the current feature.
 <dt> o 
    <a href="#UnsetUpdateError()"><b>UnsetUpdateError</b></a>()
<dd>  Unsets the update error associated with the feature.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFullDiagnostic"></a><a name="GetFullDiagnostic(int)"></a> <dt> o <b>GetFullDiagnostic</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetFullDiagnostic</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndentation</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns all the chained sick features diagnoses.
 <br><b>Role:</b> On an error it is possible to associate a set of features. Those features
 are called "sick" features. They are <i>chained</i> because an error has sick features, which 
 them-self can have an update error with sick features and so one. 
 This method makes the 
 concatenation of all the sick features diagnoses from the current feature. It is the same method
 as the 
<script type="text/javascript"> activateLinkAnchor('CATMfErrUpdate','GetFullDiagnostic','CATMfErrUpdate.GetFullDiagnostic') </script> method.   
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndentation</tt>
   <dd> The count of space before the first diagnosis string.</dd>
</dl>
</dl>
</dl>
<a name="GetUpdateError"></a><a name="GetUpdateError()"></a> <dt> o <b>GetUpdateError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMfErrUpdate','CATMfErrUpdate*')</script>  <b>GetUpdateError</b>(<td>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Gets the update error associated with the feature. 
 <br><b>Role:</b>This method returns the update error associated to the mechanical feature. It is
 important to check the existance of the error by the 
<script type="text/javascript"> activateLinkAnchor('','TestExistingUpdateError','TestExistingUpdateError') </script> method, and do not consider the NULL returned value as a valid respons. The error is not a persistent data. It
 means that in batch mode,when the Part's document is opened the
 error is not associated with the feature until an update has not been explicitely done. 
 <br>
 <b>Lifecycle deviation rule</b>: do not release the returned pointer
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The update error. A NULL pointer doesn't mean that the feature has no error. See the role of
 this method.
</dl>
</dl>
<a name="SetUpdateError"></a><a name="SetUpdateError(CATMfErrUpdate*)"></a> <dt> o <b>SetUpdateError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetUpdateError</b>(<td><script type="text/javascript"> activateLink('CATMfErrUpdate','CATMfErrUpdate*')</script> <td><tt>iUpdateError</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Associates an update error to the current feature.
 <br><b>Role:</b>It enables to set an update error to the feature.
 This method must only be used in a 
<script type="text/javascript"> activateLinkAnchor('CATIBuild','Build','CATIBuild.Build') </script> method.  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUpdateError</tt>
   <dd> The update error to be associated with the current feature.</dd>
</dl>
</dl>
</dl>
<a name="TestExistingUpdateError"></a><a name="TestExistingUpdateError()"></a> <dt> o <b>TestExistingUpdateError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>TestExistingUpdateError</b>(<td>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Gets a value indicating whether an update error is associated with the current feature.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   An integer value.
   <br><b>Legal values</b>: 
   <ul><li><b>1</b> an update error exists on the current feature.
   <li><b>0</b> no update error exists on the current feature.</ul>
</dl>
</dl>
<a name="UnsetUpdateError"></a><a name="UnsetUpdateError()"></a> <dt> o <b>UnsetUpdateError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>UnsetUpdateError</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Unsets the update error associated with the feature.
 <br><b>Role:</b>It enables to unset the possible update error to the feature.
 This method must be only used in a 
<script type="text/javascript"> activateLinkAnchor('CATIBuild','Build','CATIBuild.Build') </script> method. You call it at the beginning of the method, it is useless to test if the feature has an error.
</dl>
<hr>
 This object is included in the file: <b>CATIUpdateError.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

