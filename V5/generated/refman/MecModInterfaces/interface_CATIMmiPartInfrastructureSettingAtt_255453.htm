<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MecModInterfaces Interface CATIMmiPartInfrastructureSettingAtt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../MecModInterfaces.htm">This Framework</a>  <a href="interface_CATIMmiPartInfrastructurePreferencesAtt_315793.htm">Previous</a>  <a href="interface_CATIMmiResultFreeze_73650.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>MecModInterfaces Interface CATIMmiPartInfrastructureSettingAtt</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIMmiPartInfrastructureSettingAtt
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMmiPartInfrastructureSettingAtt</b>
</p>
<p>
<b><i> Interface to retrieve application parameters related to Part Infrastructure.</i></b><br>

 <b>Role:</b>This interface describes all the application parameters related 
 to Part infrastructure, as displayed in Tools/Options.
 <br/>Here under is an example on how to retrieve a pointer to this interface:
 <code><pre>
 #include "CATInstantiateComponent.h" //System
 #include "CATIMmiPartInfrastructureSettingAtt.h"  //MecModInterfaces
 { 
  ...
   CATIMmiPartInfrastructureSettingAtt *pIGetController=NULL;
   if(SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructureSettingCtrl", IID_CATIMmiPartInfrastructureSettingAtt,(void**)&pIGetController)))
     {
      <b>//insert your code here</b>
      pIGetController->Release(); pIGetController=NULL;
     }
   ...
 }
 </pre></code></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAlsoDeleteExclusiveParents(CATBoolean&amp;)"><b>GetAlsoDeleteExclusiveParents</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "AlsoDeleteExclusiveParents" parameter's value.
 <dt> o 
    <a href="#GetAlsoDeleteExclusiveParentsInfo(CATSettingInfo*)"><b>GetAlsoDeleteExclusiveParentsInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "AlsoDeleteExclusiveParents" parameter.
 <dt> o 
    <a href="#GetAxisSystemSize(unsigned int&amp;)"><b>GetAxisSystemSize</b></a>(unsigned int&amp;)
<dd>  Retrieves the "AxisSystemSize" parameter's value.
 <dt> o 
    <a href="#GetAxisSystemSizeInfo(CATSettingInfo*)"><b>GetAxisSystemSizeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "AxisSystemSize" parameter.
 <dt> o 
    <a href="#GetBodiesUnderOperationsInTree(CATBoolean&amp;)"><b>GetBodiesUnderOperationsInTree</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "BodiesUnderOperationsInTree" parameter's value.
 <dt> o 
    <a href="#GetBodiesUnderOperationsInTreeInfo(CATSettingInfo*)"><b>GetBodiesUnderOperationsInTreeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "BodiesUnderOperationsInTree" parameter.
 <dt> o 
    <a href="#GetChangeInBufferizedParametersEvent(CATCallbackEvent&amp;)"><b>GetChangeInBufferizedParametersEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is effective 
 for at least one of the parameters run by this settings controller.
 <dt> o 
    <a href="#GetColorSynchronizationMode(CATBoolean&amp;)"><b>GetColorSynchronizationMode</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ColorSynchronizationMode" parameter's value.
 <dt> o 
    <a href="#GetColorSynchronizationModeInfo(CATSettingInfo*)"><b>GetColorSynchronizationModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "SynchronizationMode" parameter.
 <dt> o 
    <a href="#GetConstraintsInGeometry(CATBoolean&amp;)"><b>GetConstraintsInGeometry</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ConstraintsInGeometry" parameter's value.
 <dt> o 
    <a href="#GetConstraintsInGeometryInfo(CATSettingInfo*)"><b>GetConstraintsInGeometryInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ConstraintsInGeometry" parameter.
 <dt> o 
    <a href="#GetConstraintsNodeInTree(CATBoolean&amp;)"><b>GetConstraintsNodeInTree</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ConstraintsNodeInTree" parameter's value.
 <dt> o 
    <a href="#GetConstraintsNodeInTreeInfo(CATSettingInfo*)"><b>GetConstraintsNodeInTreeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ConstraintsNodeInTree" parameter.
 <dt> o 
    <a href="#GetContextualFeaturesSelectableAtCreation(CATBoolean&amp;)"><b>GetContextualFeaturesSelectableAtCreation</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ContextualFeaturesSelectableAtCreation" parameter's value.
 <dt> o 
    <a href="#GetContextualFeaturesSelectableAtCreationInfo(CATSettingInfo*)"><b>GetContextualFeaturesSelectableAtCreationInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ContextualFeaturesSelectableAtCreation" parameter.
 <dt> o 
    <a href="#GetDeleteWarningBox(CATBoolean&amp;)"><b>GetDeleteWarningBox</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "DeleteWarningBox" parameter's value.
 <dt> o 
    <a href="#GetDeleteWarningBoxInfo(CATSettingInfo*)"><b>GetDeleteWarningBoxInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "DeleteWarningBox" parameter.
 <dt> o 
    <a href="#GetDisplayGeometryAfterCurrent(CATBoolean&amp;)"><b>GetDisplayGeometryAfterCurrent</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "DisplayGeometryAfterCurrent" parameter's value.
 <dt> o 
    <a href="#GetDisplayGeometryAfterCurrentInfo(CATSettingInfo*)"><b>GetDisplayGeometryAfterCurrentInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "DisplayGeometryAfterCurrent" parameter.
 <dt> o 
    <a href="#GetExpandSketchBasedFeaturesNodeAtCreation(CATBoolean&amp;)"><b>GetExpandSketchBasedFeaturesNodeAtCreation</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ExpandSketchBasedFeaturesNodeAtCreation" parameter's value.
 <dt> o 
    <a href="#GetExpandSketchBasedFeaturesNodeAtCreationInfo(CATSettingInfo*)"><b>GetExpandSketchBasedFeaturesNodeAtCreationInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ExpandSketchBasedFeaturesNodeAtCreation" parameter.
 <dt> o 
    <a href="#GetExternalReferencesAsVisible(CATBoolean&amp;)"><b>GetExternalReferencesAsVisible</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ExternalReferencesAsVisible" parameter's value.
 <dt> o 
    <a href="#GetExternalReferencesAsVisibleInfo(CATSettingInfo*)"><b>GetExternalReferencesAsVisibleInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ExternalReferencesAsVisible" parameter.
 <dt> o 
    <a href="#GetExternalReferencesAssemblyRootContext(CATBoolean&amp;)"><b>GetExternalReferencesAssemblyRootContext</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ExternalReferencesAssemblyRootContext" parameter's value.
 <dt> o 
    <a href="#GetExternalReferencesAssemblyRootContextInfo(CATSettingInfo*)"><b>GetExternalReferencesAssemblyRootContextInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ExternalReferencesAssemblyRootContext" parameter.
 <dt> o 
    <a href="#GetExternalReferencesNodeInTree(CATBoolean&amp;)"><b>GetExternalReferencesNodeInTree</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ExternalReferencesNodeInTree" parameter's value.
 <dt> o 
    <a href="#GetExternalReferencesNodeInTreeInfo(CATSettingInfo*)"><b>GetExternalReferencesNodeInTreeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ExternalReferencesNodeInTree" parameter.
 <dt> o 
    <a href="#GetHybridDesignMode(CATBoolean&amp;)"><b>GetHybridDesignMode</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "HybridDesignMode" parameter's value.
 <dt> o 
    <a href="#GetHybridDesignModeInfo(CATSettingInfo*)"><b>GetHybridDesignModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "HybridDesignMode" parameter.
 <dt> o 
    <a href="#GetKnowledgeInHybridDesignMode(CATBoolean&amp;)"><b>GetKnowledgeInHybridDesignMode</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "KnowledgeInHybridDesignMode" parameter's value.
 <dt> o 
    <a href="#GetKnowledgeInHybridDesignModeInfo(CATSettingInfo*)"><b>GetKnowledgeInHybridDesignModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "KnowledgeInHybridDesignMode" parameter.
 <dt> o 
    <a href="#GetLinkedExternalReferences(CATBoolean&amp;)"><b>GetLinkedExternalReferences</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "LinkedExternalReferences" parameter's value.
 <dt> o 
    <a href="#GetLinkedExternalReferencesInfo(CATSettingInfo*)"><b>GetLinkedExternalReferencesInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "LinkedExternalReferences" parameter.
 <dt> o 
    <a href="#GetLinkedExternalReferencesOnlyOnPublication(CATBoolean&amp;)"><b>GetLinkedExternalReferencesOnlyOnPublication</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "LinkedExternalReferencesOnlyOnPublication" parameter's value.
 <dt> o 
    <a href="#GetLinkedExternalReferencesOnlyOnPublicationInfo(CATSettingInfo*)"><b>GetLinkedExternalReferencesOnlyOnPublicationInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "LinkedExternalReferencesOnlyOnPublication" parameter.
 <dt> o 
    <a href="#GetLinkedExternalReferencesWarningAtCreation(CATBoolean&amp;)"><b>GetLinkedExternalReferencesWarningAtCreation</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "LinkedExternalReferencesWarningAtCreation" parameter's value.
 <dt> o 
    <a href="#GetLinkedExternalReferencesWarningAtCreationInfo(CATSettingInfo*)"><b>GetLinkedExternalReferencesWarningAtCreationInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "LinkedExternalReferencesWarningAtCreation" parameter.
 <dt> o 
    <a href="#GetNamingMode(CatPartElementsNamingMode&amp;)"><b>GetNamingMode</b></a>(CatPartElementsNamingMode&amp;)
<dd>  Retrieves the "NamingMode" parameter's value.
 <dt> o 
    <a href="#GetNamingModeInfo(CATSettingInfo*)"><b>GetNamingModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "NamingMode" parameter.
 <dt> o 
    <a href="#GetNewWith3DSupport(CATBoolean&amp;)"><b>GetNewWith3DSupport</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "NewWith3DSupport" parameter's value.
 <dt> o 
    <a href="#GetNewWith3DSupportInfo(CATSettingInfo*)"><b>GetNewWith3DSupportInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "NewWith3DSupport" parameter.
 <dt> o 
    <a href="#GetNewWithAxisSystem(CATBoolean&amp;)"><b>GetNewWithAxisSystem</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "NewWithAxisSystem" parameter's value.
 <dt> o 
    <a href="#GetNewWithAxisSystemInfo(CATSettingInfo*)"><b>GetNewWithAxisSystemInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the information object for the "NewWithAxisSystem" parameter.
 <dt> o 
    <a href="#GetNewWithGS(CATBoolean&amp;)"><b>GetNewWithGS</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "NewWithGS" parameter's value.
 <dt> o 
    <a href="#GetNewWithGSInfo(CATSettingInfo*)"><b>GetNewWithGSInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the information object for the "NewWithGS" parameter.
 <dt> o 
    <a href="#GetNewWithOGS(CATBoolean&amp;)"><b>GetNewWithOGS</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "NewWithOGS" parameter's value.
 <dt> o 
    <a href="#GetNewWithOGSInfo(CATSettingInfo*)"><b>GetNewWithOGSInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "NewWithOGS" parameter.
 <dt> o 
    <a href="#GetNewWithPanel(CATBoolean&amp;)"><b>GetNewWithPanel</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "NewWithPanel" parameter's value.
 <dt> o 
    <a href="#GetNewWithPanelInfo(CATSettingInfo*)"><b>GetNewWithPanelInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "NewWithPanel" parameter.
 <dt> o 
    <a href="#GetOnlyCurrentOperatedSolidSetInGeometry(CATBoolean&amp;)"><b>GetOnlyCurrentOperatedSolidSetInGeometry</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "OnlyCurrentOperatedSolidSetInGeometry" parameter's value.
 <dt> o 
    <a href="#GetOnlyCurrentOperatedSolidSetInGeometryInfo(CATSettingInfo*)"><b>GetOnlyCurrentOperatedSolidSetInGeometryInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "OnlyCurrentOperatedSolidSetInGeometry" parameter.
 <dt> o 
    <a href="#GetOnlyCurrentSolidSetInGeometry(CATBoolean&amp;)"><b>GetOnlyCurrentSolidSetInGeometry</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "OnlyCurrentSolidSetInGeometry" parameter's value.
 <dt> o 
    <a href="#GetOnlyCurrentSolidSetInGeometryInfo(CATSettingInfo*)"><b>GetOnlyCurrentSolidSetInGeometryInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "OnlyCurrentSolidSetInGeometry" parameter.
 <dt> o 
    <a href="#GetParametersNodeInTree(CATBoolean&amp;)"><b>GetParametersNodeInTree</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ParametersNodeInTree" parameter's value.
 <dt> o 
    <a href="#GetParametersNodeInTreeInfo(CATSettingInfo*)"><b>GetParametersNodeInTreeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ParametersNodeInTree" parameter.
 <dt> o 
    <a href="#GetPublishTopologicalElements(CATBoolean&amp;)"><b>GetPublishTopologicalElements</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "PublishTopologicalElements" parameter's value.
 <dt> o 
    <a href="#GetPublishTopologicalElementsInfo(CATSettingInfo*)"><b>GetPublishTopologicalElementsInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "PublishTopologicalElements" parameter.
 <dt> o 
    <a href="#GetRelationsNodeInTree(CATBoolean&amp;)"><b>GetRelationsNodeInTree</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "RelationsNodeInTree" parameter's value.
 <dt> o 
    <a href="#GetRelationsNodeInTreeInfo(CATSettingInfo*)"><b>GetRelationsNodeInTreeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "RelationsNodeInTree" parameter.
 <dt> o 
    <a href="#GetReplaceOnlyAfterCurrent(CATBoolean&amp;)"><b>GetReplaceOnlyAfterCurrent</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ReplaceOnlyAfterCurrent" parameter's value.
 <dt> o 
    <a href="#GetReplaceOnlyAfterCurrentInfo(CATSettingInfo*)"><b>GetReplaceOnlyAfterCurrentInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ReplaceOnlyAfterCurrent" parameter.
 <dt> o 
    <a href="#GetSurfaceElementsLocation(CatPartSurfaceElementsLocation&amp;)"><b>GetSurfaceElementsLocation</b></a>(CatPartSurfaceElementsLocation&amp;)
<dd>  Retrieves the "SurfaceElementsLocation" parameter's value.
 <dt> o 
    <a href="#GetSurfaceElementsLocationInfo(CATSettingInfo*)"><b>GetSurfaceElementsLocationInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "SurfaceElementsLocation" parameter.
 <dt> o 
    <a href="#GetTrueColorMode(CATBoolean&amp;)"><b>GetTrueColorMode</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ColorInheritanceMode" parameter's value.
 <dt> o 
    <a href="#GetTrueColorModeInfo(CATSettingInfo*)"><b>GetTrueColorModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "ColorInheritanceMode" parameter.
 <dt> o 
    <a href="#GetUpdateElementsRefreshed(CATBoolean&amp;)"><b>GetUpdateElementsRefreshed</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "UpdateElementsRefreshed" parameter's value.
 <dt> o 
    <a href="#GetUpdateElementsRefreshedInfo(CATSettingInfo*)"><b>GetUpdateElementsRefreshedInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "UpdateElementsRefreshed" parameter.
 <dt> o 
    <a href="#GetUpdateLinkedExternalReferences(CATBoolean&amp;)"><b>GetUpdateLinkedExternalReferences</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "UpdateLinkedExternalReferences" parameter's value.
 <dt> o 
    <a href="#GetUpdateLinkedExternalReferencesInfo(CATSettingInfo*)"><b>GetUpdateLinkedExternalReferencesInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "UpdateLinkedExternalReferences" parameter.
 <dt> o 
    <a href="#GetUpdateMode(CatPartUpdateMode&amp;)"><b>GetUpdateMode</b></a>(CatPartUpdateMode&amp;)
<dd>  Retrieves the "UpdateMode" parameter's value.
 <dt> o 
    <a href="#GetUpdateModeInfo(CATSettingInfo*)"><b>GetUpdateModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "UpdateMode" parameter.
 <dt> o 
    <a href="#GetUpdateStoppedOnError(CATBoolean&amp;)"><b>GetUpdateStoppedOnError</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "UpdateStoppedOnError" parameter's value.
 <dt> o 
    <a href="#GetUpdateStoppedOnErrorInfo(CATSettingInfo*)"><b>GetUpdateStoppedOnErrorInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the "UpdateStoppedOnError" parameter.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAlsoDeleteExclusiveParents"></a><a name="GetAlsoDeleteExclusiveParents(CATBoolean&amp;)"></a> <dt> o <b>GetAlsoDeleteExclusiveParents</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAlsoDeleteExclusiveParents</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oDeleted</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "AlsoDeleteExclusiveParents" parameter's value.
 <br/><b>Role:</b> This parameter defines if a exclusive parents of an object will also be deleted when the object is deleted.
 <br/>This option is effective only when the "Deletion warning box" is displayed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDeleted</tt>
   <dd>   Current "AlsoDeleteExclusiveParents" parameter's value:
      <ul><li>TRUE or 1 if exclusive parents are also deleted,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetAlsoDeleteExclusiveParentsInfo"></a><a name="GetAlsoDeleteExclusiveParentsInfo(CATSettingInfo*)"></a> <dt> o <b>GetAlsoDeleteExclusiveParentsInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAlsoDeleteExclusiveParentsInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "AlsoDeleteExclusiveParents" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetAxisSystemSize"></a><a name="GetAxisSystemSize(unsigned int&amp;)"></a> <dt> o <b>GetAxisSystemSize</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAxisSystemSize</b>(<td>unsigned int&amp; <td><tt>oSize</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "AxisSystemSize" parameter's value.
 <br/><b>Role:</b> This parameter determines the size of axis systems.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSize</tt>
   <dd>   Current size of axis systems
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetAxisSystemSizeInfo"></a><a name="GetAxisSystemSizeInfo(CATSettingInfo*)"></a> <dt> o <b>GetAxisSystemSizeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAxisSystemSizeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "AxisSystemSize" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetBodiesUnderOperationsInTree"></a><a name="GetBodiesUnderOperationsInTree(CATBoolean&amp;)"></a> <dt> o <b>GetBodiesUnderOperationsInTree</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetBodiesUnderOperationsInTree</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oNodeDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "BodiesUnderOperationsInTree" parameter's value.
 <br/><b>Role:</b> This parameter determines if a Body node is displayed when it is being aggregated under a boolean operation (Add, Assemble, Remove, Intersect, Union Trim).
 <br/>Its value can be changed even after a boolean operation has been created. Simply collapse and expand the federating boolean operation node for the specification tree to be refreshed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodeDisplayed</tt>
   <dd>   Current "BodiesUnderOperationsInTree" parameter's value:
      <ul><li>TRUE or 1 if such a node is displayed,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetBodiesUnderOperationsInTreeInfo"></a><a name="GetBodiesUnderOperationsInTreeInfo(CATSettingInfo*)"></a> <dt> o <b>GetBodiesUnderOperationsInTreeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetBodiesUnderOperationsInTreeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "BodiesUnderOperationsInTree" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetChangeInBufferizedParametersEvent"></a><a name="GetChangeInBufferizedParametersEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetChangeInBufferizedParametersEvent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetChangeInBufferizedParametersEvent</b>(<td><a href="../ObjectModelerSystem/typedef_CATCallbackEvent_51600.htm">CATCallbackEvent&amp;</a> <td><tt>oEvent</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is effective 
 for at least one of the parameters run by this settings controller.
 <br/><b>Role:</b> This event is complementary to the events sent by the CATSysSettingController class:
 <ul><li><code>Param_Updated</code> warns when a Setxyz method is called,</li>
 <li><code>SettingCtrl_Updated</code> warns whenever one of the 
<a href="../System/class_CATSysSettingController_112069.htm#Commit">CATSysSettingController.Commit</a>,  
<a href="../System/class_CATSysSettingController_112069.htm#Rollback">CATSysSettingController.Rollback</a> , 
<a href="../System/class_CATSysSettingController_112069.htm#SaveRepository">CATSysSettingController.SaveRepository</a> or 
<a href="../System/class_CATSysSettingController_112069.htm#ResetToAdminValues">CATSysSettingController.ResetToAdminValues</a> methods is called.</li></ul> <br/>The event defined here warns its users that at least one of the parameters' value is changed
 <b>AND</b> that this change is somewhat made permanent. This means:
 <ul><li>a change has been made and is followed by a call to 
<a href="../System/class_CATSysSettingController_112069.htm#SaveRepository">CATSysSettingController.SaveRepository</a>. </li> <li>at least one of the parameters' value is changed following a call to 
 
CATSysSettingController#RestToAdminValues (this typically happens when resetting values  through the Tools/Options command).</li></ul>
 <br/>In addition, the notification sent ( CATMmiPartInfrastructureNotification ) contains data
 regarding which parameter(s) is (are) affected. Parameters' names are detailed in the different 
 methods of this interface.  
 <br/><br/>
 Here is a coding sample for the use of this event:
 <code><pre>
 #include "CATSysMacros.h"            //System
 #include "CATInstantiateComponent.h" //System
 #include "CATMmiPartInfrastructureNotification.h" //MecModInterfaces
 #include "CATIMmiPartInfrastructureSettingAtt.h"  //MecModInterfaces
 { //Subscription
  CATIMmiPartInfrastructureSettingAtt *pIGetController=NULL;
  CATCallbackEvent event;
  if(SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructureSettingCtrl", IID_CATIMmiPartInfrastructureSettingAtt,(void**)&pIGetController)) &&
     SUCCEEDED(pIGetController->GetChangeInBufferizedParametersEvent(event)))
     _callbackId=AddCallback(this, pIGetController, event, CATSubscriberMethod)&MyClass::ValuesChangedCB, NULL);
    CATSysReleasePtr(pIGetController);
 }
 
 { //Unsubscription
  CATIMmiPartInfrastructureSettingAtt *pISettingCtrl=NULL;
  if(_callbackId && 
     SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructureSettingCtrl", IID_CATIMmiPartInfrastructureSettingAtt,(void**)&pISettingCtrl)))
    {
     RemoveCallback(this, pISettingCtrl, _callbackId);
     pISettingCtrl->Release(); pISettingCtrl=NULL;
    }
 }
 
 void MyClass::ValuesChangedCB(CATCallbackEvent iEvt,void * iSrv,
                               CATNotification * iNotif, 
                               CATSubscriberData iData,CATCallback iCB)
 {
   if(!iNotif || !iNotif->IsAKindOf(CATMmiPartInfrastructureNotification::ClassName()))
     return;
     
   //Let us find out which is the impacted parameter.
   CATListOfCATString parametersList=((CATMmiPartInfrastructureNotification*)iNotif)->_parametersList;
   if(parametersList.Locate("Parameter_Name_1") ||
      parametersList.Locate("Parameter_Name_2") ||
      ...                                       ||
      parametersList.Locate("Parameter_Name_N")           )
    {
     <b>//Insert the dedicated code here.</b>
    }
  }
 
 </pre></code>
 Now here is a coding sample concerning synchroneous event sent whenever a parameter's value 
 is changed.<code><pre>
 #include "CATInstantiateComponent.h" //System
 #include "CATSettingInfo.h"          //System
 #include "CATSysSettingController.h" //System
 #include "CATSysSettingCtrlNotif.h"  //System
 #include "CATIMmiPartInfrastructureSettingAtt.h" //MecModInterfaces
 { //Subscription
  CATIMmiPartInfrastructureSettingAtt *pISettingCtrl=NULL;
  if(SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructureSettingCtrl", 
                                         IID_CATIMmiPartInfrastructureSettingAtt,
                                         (void**)&pISettingCtrl)))
   {
    _callbackId= AddCallback(this, pISettingCtrl, CATSysSettingController::Param_Updated(),
                             (CATSubscriberMethod)&MyClass::OnSettingsChange, NULL);
    pISettingCtrl->Release(); pISettingCtrl=NULL;
   }
 }
 
 { //Unsubscription
  CATIMmiPartInfrastructureSettingAtt *pISettingCtrl=NULL;
  if(_callbackId && 
     SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructureSettingCtrl", IID_CATIMmiPartInfrastructureSettingAtt, (void**)&pISettingCtrl)))
    {
     RemoveCallback(this, pISettingCtrl, _callbackId);
     pISettingCtrl->Release(); pISettingCtrl=NULL;
    }
 }
 
 void MyClass::OnSettingsChange(CATCallbackEvent iEvt,void * iSrv,
                                CATNotification * iNotif, 
                                CATSubscriberData iData,CATCallback iCB)
 {
  if(!iNotif || !iNotif->IsAKindOf(CATSysSettingCtrlNotif::ClassName()))
    return;
   
  CATIMmiPartInfrastructureSettingAtt* pISettingCtrl=NULL;
  if(SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructureSettingCtrl", IID_CATIMmiPartInfrastructureSettingAtt, (void**)&pISettingCtrl)))
   {
    CATSettingInfo settingInfo, *notifSettingInfo=NULL;
       
    //Let us find out for which parameter the notification is sent.
    HRESULT rc=pISettingCtrl->Get<b><i>ParameterName</i></b>Info(&settingInfo);
    pISettingCtrl->Release(); pISettingCtrl=NULL;
    if(FAILED(rc) ||
       ((notifSettingInfo=((CATSysSettingCtrlNotif*)iNotif)->_Info) &&
       !(settingInfo==*notifSettingInfo)))
      return;
 
     <b>//Insert the dedicated code here.</b>
    }     
 }
 </pre></code>
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>  The name of the event sent
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK always.
</dl>
</dl>
<a name="GetColorSynchronizationMode"></a><a name="GetColorSynchronizationMode(CATBoolean&amp;)"></a> <dt> o <b>GetColorSynchronizationMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetColorSynchronizationMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oColorSynchronizationMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ColorSynchronizationMode" parameter's value.
 <br/><b>Role:</b> This parameter determines color synchronization mode for imported feature in a part.
 <br/>Color synchronization mode defines whether the imported feature, created through copy/paste as result with link mechanism, copies reference
 feature colors on its faces or not. If it is valuated to 1, synchronization will be effective and referece feature colors will be reported. 
 If it is defined to 0, nothing will be copied(default mode).
 This option cannot be changed after a document has been opened.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oColorSynchronizationMode</tt>
   <dd>   Current "ColorSynchronizationMode" parameter's value:
      <ul><li>TRUE or 1 if reference feature colors are reported on imported feature,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetColorSynchronizationModeInfo"></a><a name="GetColorSynchronizationModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetColorSynchronizationModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetColorSynchronizationModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "SynchronizationMode" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetConstraintsInGeometry"></a><a name="GetConstraintsInGeometry(CATBoolean&amp;)"></a> <dt> o <b>GetConstraintsInGeometry</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetConstraintsInGeometry</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ConstraintsInGeometry" parameter's value.
 <br/><b>Role:</b> This parameter enables constraints to be visualized in the 3D view.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDisplayed</tt>
   <dd>   Current "Display constraints within 3D" parameter's value:
      <ul><li>TRUE or 1 if constraints are displayed,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetConstraintsInGeometryInfo"></a><a name="GetConstraintsInGeometryInfo(CATSettingInfo*)"></a> <dt> o <b>GetConstraintsInGeometryInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetConstraintsInGeometryInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ConstraintsInGeometry" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetConstraintsNodeInTree"></a><a name="GetConstraintsNodeInTree(CATBoolean&amp;)"></a> <dt> o <b>GetConstraintsNodeInTree</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetConstraintsNodeInTree</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oNodeDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ConstraintsNodeInTree" parameter's value.
 <br/><b>Role:</b> This parameter determines if a node called "Constraints" is created to contain all constraints.
 <br/>Its value can be changed even after constraints have been created. The result is that the specification tree node display status will be affected.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodeDisplayed</tt>
   <dd>   Current "ConstraintsNodeInTree" parameter's value:
      <ul><li>TRUE or 1 if such a node is displayed,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetConstraintsNodeInTreeInfo"></a><a name="GetConstraintsNodeInTreeInfo(CATSettingInfo*)"></a> <dt> o <b>GetConstraintsNodeInTreeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetConstraintsNodeInTreeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ConstraintsNodeInTree" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetContextualFeaturesSelectableAtCreation"></a><a name="GetContextualFeaturesSelectableAtCreation(CATBoolean&amp;)"></a> <dt> o <b>GetContextualFeaturesSelectableAtCreation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetContextualFeaturesSelectableAtCreation</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oContextualFeaturesSelectable</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ContextualFeaturesSelectableAtCreation" parameter's value.
 <br/><b>Role:</b> This parameter determines if contextual features can be selected during the creation of an other feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oContextualFeaturesSelectable</tt>
   <dd>   Current "ContextualFeaturesSelectableAtCreation" parameter's value:
      <ul><li>TRUE or 1 if contextual features can be selected,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetContextualFeaturesSelectableAtCreationInfo"></a><a name="GetContextualFeaturesSelectableAtCreationInfo(CATSettingInfo*)"></a> <dt> o <b>GetContextualFeaturesSelectableAtCreationInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetContextualFeaturesSelectableAtCreationInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ContextualFeaturesSelectableAtCreation" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetDeleteWarningBox"></a><a name="GetDeleteWarningBox(CATBoolean&amp;)"></a> <dt> o <b>GetDeleteWarningBox</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDeleteWarningBox</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "DeleteWarningBox" parameter's value.
 <br/><b>Role:</b> This parameter defines if a warning box is displayed when an element is deleted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDisplayed</tt>
   <dd>   Current "DeleteWarningBox" parameter's value:
      <ul><li>TRUE or 1 if a warning box is displayed at deletion,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetDeleteWarningBoxInfo"></a><a name="GetDeleteWarningBoxInfo(CATSettingInfo*)"></a> <dt> o <b>GetDeleteWarningBoxInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDeleteWarningBoxInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "DeleteWarningBox" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetDisplayGeometryAfterCurrent"></a><a name="GetDisplayGeometryAfterCurrent(CATBoolean&amp;)"></a> <dt> o <b>GetDisplayGeometryAfterCurrent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDisplayGeometryAfterCurrent</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "DisplayGeometryAfterCurrent" parameter's value.
 <br/><b>Role:</b> This parameter enables to visualize in the 3D features after the current object in O.G.S. and "solid and surface set".
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDisplayed</tt>
   <dd>   Current "DisplayGeometryAfterCurrent" parameter's value:
      <ul><li>TRUE or 1 if such is the visualization,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetDisplayGeometryAfterCurrentInfo"></a><a name="GetDisplayGeometryAfterCurrentInfo(CATSettingInfo*)"></a> <dt> o <b>GetDisplayGeometryAfterCurrentInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDisplayGeometryAfterCurrentInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "DisplayGeometryAfterCurrent" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetExpandSketchBasedFeaturesNodeAtCreation"></a><a name="GetExpandSketchBasedFeaturesNodeAtCreation(CATBoolean&amp;)"></a> <dt> o <b>GetExpandSketchBasedFeaturesNodeAtCreation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetExpandSketchBasedFeaturesNodeAtCreation</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oNodeExpanded</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ExpandSketchBasedFeaturesNodeAtCreation" parameter's value.
 <br/><b>Role:</b> This parameter determines if specification tree nodes for sketch-based features are expanded when such elements are created. This will enable to view their sketch node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodeExpanded</tt>
   <dd>   Current "ExpandSketchBasedFeaturesNodeAtCreation" parameter's value:
      <ul><li>TRUE or 1 if such nodes are expanded,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetExpandSketchBasedFeaturesNodeAtCreationInfo"></a><a name="GetExpandSketchBasedFeaturesNodeAtCreationInfo(CATSettingInfo*)"></a> <dt> o <b>GetExpandSketchBasedFeaturesNodeAtCreationInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetExpandSketchBasedFeaturesNodeAtCreationInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ExpandSketchBasedFeaturesNodeAtCreation" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetExternalReferencesAsVisible"></a><a name="GetExternalReferencesAsVisible(CATBoolean&amp;)"></a> <dt> o <b>GetExternalReferencesAsVisible</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetExternalReferencesAsVisible</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oVisible</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ExternalReferencesAsVisible" parameter's value.
 <br/><b>Role:</b> This parameter defines if an external reference is visible when being created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVisible</tt>
   <dd>   Current "ExternalReferencesAsVisible" parameter's value:
      <ul><li>TRUE or 1 if external references are visible when being created,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetExternalReferencesAsVisibleInfo"></a><a name="GetExternalReferencesAsVisibleInfo(CATSettingInfo*)"></a> <dt> o <b>GetExternalReferencesAsVisibleInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetExternalReferencesAsVisibleInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ExternalReferencesAsVisible" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetExternalReferencesAssemblyRootContext"></a><a name="GetExternalReferencesAssemblyRootContext(CATBoolean&amp;)"></a> <dt> o <b>GetExternalReferencesAssemblyRootContext</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetExternalReferencesAssemblyRootContext</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oRootContextUsed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ExternalReferencesAssemblyRootContext" parameter's value.
 <br/><b>Role:</b> This parameter defines if external references are created using the root context of an assembly.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRootContextUsed</tt>
   <dd>   Current "ExternalReferencesAssemblyRootContext" parameter's value:
      <ul><li>TRUE or 1 if external references are created using the root context of an assembly,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetExternalReferencesAssemblyRootContextInfo"></a><a name="GetExternalReferencesAssemblyRootContextInfo(CATSettingInfo*)"></a> <dt> o <b>GetExternalReferencesAssemblyRootContextInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetExternalReferencesAssemblyRootContextInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ExternalReferencesAssemblyRootContext" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetExternalReferencesNodeInTree"></a><a name="GetExternalReferencesNodeInTree(CATBoolean&amp;)"></a> <dt> o <b>GetExternalReferencesNodeInTree</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetExternalReferencesNodeInTree</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oNodeDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ExternalReferencesNodeInTree" parameter's value.
 <br/><b>Role:</b> This parameter determines if a node called "External Reference" is created to contain all linked external references.
 <br/>Its value can be changed even after linked external references have been created. The result is that the specification tree node display status will be affected.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodeDisplayed</tt>
   <dd>   Current "ExternalReferencesNodeInTree" parameter's value:
      <ul><li>TRUE or 1 if such a node is displayed,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetExternalReferencesNodeInTreeInfo"></a><a name="GetExternalReferencesNodeInTreeInfo(CATSettingInfo*)"></a> <dt> o <b>GetExternalReferencesNodeInTreeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetExternalReferencesNodeInTreeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ExternalReferencesNodeInTree" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetHybridDesignMode"></a><a name="GetHybridDesignMode(CATBoolean&amp;)"></a> <dt> o <b>GetHybridDesignMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetHybridDesignMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oHybridDesign</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "HybridDesignMode" parameter's value.
 <br/><b>Role:</b> This parameter determines if hybrid design is possible inside Part Bodies and bodies.
 <br/>This option can be changed even after a document has been opened.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHybridDesign</tt>
   <dd>   Current "HybridDesignMode" parameter's value:
      <ul><li>TRUE or 1 if hybrid design is enabled,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetHybridDesignModeInfo"></a><a name="GetHybridDesignModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetHybridDesignModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetHybridDesignModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "HybridDesignMode" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetKnowledgeInHybridDesignMode"></a><a name="GetKnowledgeInHybridDesignMode(CATBoolean&amp;)"></a> <dt> o <b>GetKnowledgeInHybridDesignMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetKnowledgeInHybridDesignMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oKnowledgeInHybridDesign</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "KnowledgeInHybridDesignMode" parameter's value.
 <br/><b>Role:</b> This parameter determines if knowledge features (formulas, parameters, rules, ...) 
 can be located inside ordered sets.
 <br/>This option can be changed even after a document has been opened.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHybridDesign</tt>
   <dd>   Current "KnowledegInHybridDesignMode" parameter's value:
      <ul><li>TRUE or 1 if knowledge in hybrid design is enabled,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetKnowledgeInHybridDesignModeInfo"></a><a name="GetKnowledgeInHybridDesignModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetKnowledgeInHybridDesignModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetKnowledgeInHybridDesignModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "KnowledgeInHybridDesignMode" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetLinkedExternalReferences"></a><a name="GetLinkedExternalReferences(CATBoolean&amp;)"></a> <dt> o <b>GetLinkedExternalReferences</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetLinkedExternalReferences</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oWithLink</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "LinkedExternalReferences" parameter's value.
 <br/><b>Role:</b> This parameter enables creation of external references with links.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWithLink</tt>
   <dd>   "LinkedExternalReferences" parameter's value:
      <ul><li>TRUE or 1 if external references are created with links,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetLinkedExternalReferencesInfo"></a><a name="GetLinkedExternalReferencesInfo(CATSettingInfo*)"></a> <dt> o <b>GetLinkedExternalReferencesInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetLinkedExternalReferencesInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "LinkedExternalReferences" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetLinkedExternalReferencesOnlyOnPublication"></a><a name="GetLinkedExternalReferencesOnlyOnPublication(CATBoolean&amp;)"></a> <dt> o <b>GetLinkedExternalReferencesOnlyOnPublication</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetLinkedExternalReferencesOnlyOnPublication</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oOnlyForPublishedElements</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "LinkedExternalReferencesOnlyOnPublication" parameter's value.
 <br/><b>Role:</b> This parameter restricts the creation of external references with links to only published elements.
 <br/>This option is only used when external references are created with link. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOnlyForPublishedElements</tt>
   <dd>   Current "LinkedExternalReferencesOnlyOnPublication" parameter's value:
      <ul><li>TRUE or 1 if external references with link are only allowed on published elements,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetLinkedExternalReferencesOnlyOnPublicationInfo"></a><a name="GetLinkedExternalReferencesOnlyOnPublicationInfo(CATSettingInfo*)"></a> <dt> o <b>GetLinkedExternalReferencesOnlyOnPublicationInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetLinkedExternalReferencesOnlyOnPublicationInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "LinkedExternalReferencesOnlyOnPublication" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetLinkedExternalReferencesWarningAtCreation"></a><a name="GetLinkedExternalReferencesWarningAtCreation(CATBoolean&amp;)"></a> <dt> o <b>GetLinkedExternalReferencesWarningAtCreation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetLinkedExternalReferencesWarningAtCreation</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oWarningAtCreation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "LinkedExternalReferencesWarningAtCreation" parameter's value.
 <br/><b>Role:</b> This parameter defines if a warning panel is displayed each time an external reference with llink is created. The panel enables the user to decide whether the link will be kept or not.
 <br/>This option is only used when external references are created with link.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWarningAtCreation</tt>
   <dd>   Current "LinkedExternalReferencesWarningAtCreation" parameter's value:
      <ul><li>TRUE or 1 if a panel is displayed upon external references with link creation,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetLinkedExternalReferencesWarningAtCreationInfo"></a><a name="GetLinkedExternalReferencesWarningAtCreationInfo(CATSettingInfo*)"></a> <dt> o <b>GetLinkedExternalReferencesWarningAtCreationInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetLinkedExternalReferencesWarningAtCreationInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "LinkedExternalReferencesWarningAtCreation" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetNamingMode"></a><a name="GetNamingMode(CatPartElementsNamingMode&amp;)"></a> <dt> o <b>GetNamingMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNamingMode</b>(<td>CatPartElementsNamingMode&amp; <td><tt>oNamingMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "NamingMode" parameter's value.
 <br/><b>Role:</b> This parameter determines how an element can be named through Edit/Properties or any operation creating a feature (Copy-Paste, etc.).
 <br/>When this option is being changed, it only affects elements whose name is modified afterwards.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNamingMode</tt>
   <dd>   Current "NamingMode" parameter's value: <ul><li><tt>catNoCheck</tt> when naming is rule-free,</li><li><tt>catNamingCheckUnderSameNode</tt> when 2 elements cannot have the same name under the same node,</li><li><tt>catNamingCheckWithinUIActiveObject</tt> when 2 elements cannot have the same name within a defined UIActiveObject.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetNamingModeInfo"></a><a name="GetNamingModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetNamingModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNamingModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "NamingMode" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetNewWith3DSupport"></a><a name="GetNewWith3DSupport(CATBoolean&amp;)"></a> <dt> o <b>GetNewWith3DSupport</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWith3DSupport</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>o3DSupportCreated</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "NewWith3DSupport" parameter's value.
 <br/><b>Role:</b> This parameter determines if a new .CATPart document will be created with 3D working support.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> o3DSupportCreated</tt>
   <dd>    Current "NewWith3DSupport" parameter's value:
      <ul><li>TRUE or 1 if a 3D support is created,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetNewWith3DSupportInfo"></a><a name="GetNewWith3DSupportInfo(CATSettingInfo*)"></a> <dt> o <b>GetNewWith3DSupportInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWith3DSupportInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "NewWith3DSupport" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetNewWithAxisSystem"></a><a name="GetNewWithAxisSystem(CATBoolean&amp;)"></a> <dt> o <b>GetNewWithAxisSystem</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWithAxisSystem</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oAxisSystemCreated</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "NewWithAxisSystem" parameter's value.
 <br/><b>Role:</b> This parameter determines if a new .CATPart document will be created with an Axis System.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAxisSystemCreated</tt>
   <dd>    Current "NewWithAxisSystem" parameter's value:
      <ul><li>TRUE or 1 if an axis system is created,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetNewWithAxisSystemInfo"></a><a name="GetNewWithAxisSystemInfo(CATSettingInfo*)"></a> <dt> o <b>GetNewWithAxisSystemInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWithAxisSystemInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the information object for the "NewWithAxisSystem" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetNewWithGS"></a><a name="GetNewWithGS(CATBoolean&amp;)"></a> <dt> o <b>GetNewWithGS</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWithGS</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oGSCreated</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "NewWithGS" parameter's value.
 <br/><b>Role:</b> This parameter determines if a new .CATPart document will be created with a G.S..
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGSCreated</tt>
   <dd>    Current "NewWithGS" parameter's value:
      <ul><li>TRUE or 1 if a G.S. is created,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetNewWithGSInfo"></a><a name="GetNewWithGSInfo(CATSettingInfo*)"></a> <dt> o <b>GetNewWithGSInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWithGSInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the information object for the "NewWithGS" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetNewWithOGS"></a><a name="GetNewWithOGS(CATBoolean&amp;)"></a> <dt> o <b>GetNewWithOGS</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWithOGS</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oOGSCreated</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "NewWithOGS" parameter's value.
 <br/><b>Role:</b> This parameter determines if a new .CATPart document will be created with an O.G.S..
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOGSCreated</tt>
   <dd>    Current "NewWithOGS" parameter's value:
      <ul><li>TRUE or 1 if an O.G.S. is created,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetNewWithOGSInfo"></a><a name="GetNewWithOGSInfo(CATSettingInfo*)"></a> <dt> o <b>GetNewWithOGSInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWithOGSInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "NewWithOGS" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetNewWithPanel"></a><a name="GetNewWithPanel(CATBoolean&amp;)"></a> <dt> o <b>GetNewWithPanel</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWithPanel</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oNewPartPanelDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "NewWithPanel" parameter's value.
 <br/><b>Role:</b> This parameter determines if a dedicated '<i>New Part</i>' panel is displayed when createing a new .CATPart document.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNewPartPanelDisplayed</tt>
   <dd>    Current "NewWithPanel" parameter's value:
      <ul><li>TRUE or 1 if the 'New Part' panel is displayed,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetNewWithPanelInfo"></a><a name="GetNewWithPanelInfo(CATSettingInfo*)"></a> <dt> o <b>GetNewWithPanelInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetNewWithPanelInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "NewWithPanel" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetOnlyCurrentOperatedSolidSetInGeometry"></a><a name="GetOnlyCurrentOperatedSolidSetInGeometry(CATBoolean&amp;)"></a> <dt> o <b>GetOnlyCurrentOperatedSolidSetInGeometry</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOnlyCurrentOperatedSolidSetInGeometry</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "OnlyCurrentOperatedSolidSetInGeometry" parameter's value.
 <br/><b>Role:</b> This parameter enables to visualize in the 3D only the current operated body's feature (operated means being aggregated in a boolean operation), as well as all other bodies and sets direcly inserted under the Part feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDisplayed</tt>
   <dd>   Current "Display in 3D only current operated solid set" parameter's value:
      <ul><li>TRUE or 1 if such is the visualization,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetOnlyCurrentOperatedSolidSetInGeometryInfo"></a><a name="GetOnlyCurrentOperatedSolidSetInGeometryInfo(CATSettingInfo*)"></a> <dt> o <b>GetOnlyCurrentOperatedSolidSetInGeometryInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOnlyCurrentOperatedSolidSetInGeometryInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "OnlyCurrentOperatedSolidSetInGeometry" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetOnlyCurrentSolidSetInGeometry"></a><a name="GetOnlyCurrentSolidSetInGeometry(CATBoolean&amp;)"></a> <dt> o <b>GetOnlyCurrentSolidSetInGeometry</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOnlyCurrentSolidSetInGeometry</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "OnlyCurrentSolidSetInGeometry" parameter's value.
 <br/><b>Role:</b> This parameter enables to visualize in the 3D only current body's features.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDisplayed</tt>
   <dd>   Current "OnlyCurrentSolidSetInGeometry" parameter's value:
      <ul><li>TRUE or 1 if such is the visualization,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetOnlyCurrentSolidSetInGeometryInfo"></a><a name="GetOnlyCurrentSolidSetInGeometryInfo(CATSettingInfo*)"></a> <dt> o <b>GetOnlyCurrentSolidSetInGeometryInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetOnlyCurrentSolidSetInGeometryInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "OnlyCurrentSolidSetInGeometry" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetParametersNodeInTree"></a><a name="GetParametersNodeInTree(CATBoolean&amp;)"></a> <dt> o <b>GetParametersNodeInTree</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetParametersNodeInTree</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oNodeDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ParametersNodeInTree" parameter's value.
 <br/><b>Role:</b> This parameter determines if a node called "Parameters" is created to contain all Knowledgeware parameters.
 <br/>Its value can be changed even after parameters have been created. The result is that the specification tree node display status will be affected.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodeDisplayed</tt>
   <dd>   Current "ParametersNodeInTree" parameter's value:
      <ul><li>TRUE or 1 if such a node is displayed,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetParametersNodeInTreeInfo"></a><a name="GetParametersNodeInTreeInfo(CATSettingInfo*)"></a> <dt> o <b>GetParametersNodeInTreeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetParametersNodeInTreeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ParametersNodeInTree" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetPublishTopologicalElements"></a><a name="GetPublishTopologicalElements(CATBoolean&amp;)"></a> <dt> o <b>GetPublishTopologicalElements</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPublishTopologicalElements</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oTopologyAllowed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "PublishTopologicalElements" parameter's value.
 <br/><b>Role:</b> This parameter defines if topological elements (faces, edges, vertices, axes extremities) can be published.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTopologyAllowed</tt>
   <dd>   Current "PublishTopologicalElements" parameter's value:
      <ul><li>TRUE or 1 if topological elements can be used for publication,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetPublishTopologicalElementsInfo"></a><a name="GetPublishTopologicalElementsInfo(CATSettingInfo*)"></a> <dt> o <b>GetPublishTopologicalElementsInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPublishTopologicalElementsInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "PublishTopologicalElements" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetRelationsNodeInTree"></a><a name="GetRelationsNodeInTree(CATBoolean&amp;)"></a> <dt> o <b>GetRelationsNodeInTree</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRelationsNodeInTree</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oNodeDisplayed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "RelationsNodeInTree" parameter's value.
 <br/><b>Role:</b> This parameter determines if a node called "Relations" is created to contain all Knowledgeware relations (for instance formulas).
 <br/>Its value can be changed even after parameters have been created. The result is that the specification tree node display status will be affected.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNodeDisplayed</tt>
   <dd>   Current "RelationsNodeInTree" parameter's value:
      <ul><li>TRUE or 1 if such a node is displayed,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetRelationsNodeInTreeInfo"></a><a name="GetRelationsNodeInTreeInfo(CATSettingInfo*)"></a> <dt> o <b>GetRelationsNodeInTreeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRelationsNodeInTreeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "RelationsNodeInTree" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetReplaceOnlyAfterCurrent"></a><a name="GetReplaceOnlyAfterCurrent(CATBoolean&amp;)"></a> <dt> o <b>GetReplaceOnlyAfterCurrent</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetReplaceOnlyAfterCurrent</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oOnlyAfterCurrent</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ReplaceOnlyAfterCurrent" parameter's value.
 <br/><b>Role:</b> This parameter defines if the replace operation can only apply to components located after the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOnlyAfterCurrent</tt>
   <dd>   Current "ReplaceOnlyAfterCurrent" parameter's value:
      <ul><li>TRUE or 1 if the replace operation can only apply to components located after the current object,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetReplaceOnlyAfterCurrentInfo"></a><a name="GetReplaceOnlyAfterCurrentInfo(CATSettingInfo*)"></a> <dt> o <b>GetReplaceOnlyAfterCurrentInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetReplaceOnlyAfterCurrentInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ReplaceOnlyAfterCurrent" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetSurfaceElementsLocation"></a><a name="GetSurfaceElementsLocation(CatPartSurfaceElementsLocation&amp;)"></a> <dt> o <b>GetSurfaceElementsLocation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSurfaceElementsLocation</b>(<td>CatPartSurfaceElementsLocation&amp; <td><tt>oLocation</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "SurfaceElementsLocation" parameter's value.
 <br/><b>Role:</b> This parameter determines where wireframe and surface elements are created when hybrid design is active.
 <br/>This option can be changed when hybrid design mode is not active (but useless then), and also even after a document has been opened.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLocation</tt>
   <dd>    Current "SurfaceElementsLocation" parameter's value: 
   <ul><li><tt>catPartBodyLocation</tt> when elements are created within a PartBody,</li>
   <li><tt>catXGSLocation</tt> when elements are created within a G.S. or an O.G.S..</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetSurfaceElementsLocationInfo"></a><a name="GetSurfaceElementsLocationInfo(CATSettingInfo*)"></a> <dt> o <b>GetSurfaceElementsLocationInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSurfaceElementsLocationInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "SurfaceElementsLocation" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetTrueColorMode"></a><a name="GetTrueColorMode(CATBoolean&amp;)"></a> <dt> o <b>GetTrueColorMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetTrueColorMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oColorInheritanceMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "ColorInheritanceMode" parameter's value.
 <br/><b>Role:</b> This parameter determines color inheritance mode for absorbing features in a part.
 <br/>Color inheritance mode defines which mode of propagation will be used to set color on an absorbing feature. If it is valuated to 1, absorbing feature
 will inherit colors from all their input. If it is defined to 0, absorbing features will inherit colors from their main input only (default mode).
 This option can be changed even after a document has been opened.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oColorInheritanceMode</tt>
   <dd>   Current "ColorInheritanceMode" parameter's value:
      <ul><li>TRUE or 1 if absorbing features inherit from all their inputs,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetTrueColorModeInfo"></a><a name="GetTrueColorModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetTrueColorModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetTrueColorModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "ColorInheritanceMode" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetUpdateElementsRefreshed"></a><a name="GetUpdateElementsRefreshed(CATBoolean&amp;)"></a> <dt> o <b>GetUpdateElementsRefreshed</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateElementsRefreshed</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oElementsRefreshed</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "UpdateElementsRefreshed" parameter's value.
 <br/><b>Role:</b> This parameter determines if elements visualization has to be refreshed individually during update tasks.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElementsRefreshed</tt>
   <dd>    Current "UpdateElementsRefreshed" parameter's value:
      <ul><li>TRUE or 1 if elements visualization is refreshed,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetUpdateElementsRefreshedInfo"></a><a name="GetUpdateElementsRefreshedInfo(CATSettingInfo*)"></a> <dt> o <b>GetUpdateElementsRefreshedInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateElementsRefreshedInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "UpdateElementsRefreshed" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetUpdateLinkedExternalReferences"></a><a name="GetUpdateLinkedExternalReferences(CATBoolean&amp;)"></a> <dt> o <b>GetUpdateLinkedExternalReferences</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateLinkedExternalReferences</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oExternalReferencesUpdated</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "UpdateLinkedExternalReferences" parameter's value.
 <br/><b>Role:</b> This parameter determines if update tasks also apply to linked external references.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oExternalReferencesUpdated</tt>
   <dd>    Current "UpdateLinkedExternalReferences" parameter's value:
      <ul><li>TRUE or 1 if the update tasks apply to linked external references,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetUpdateLinkedExternalReferencesInfo"></a><a name="GetUpdateLinkedExternalReferencesInfo(CATSettingInfo*)"></a> <dt> o <b>GetUpdateLinkedExternalReferencesInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateLinkedExternalReferencesInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "UpdateLinkedExternalReferences" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetUpdateMode"></a><a name="GetUpdateMode(CatPartUpdateMode&amp;)"></a> <dt> o <b>GetUpdateMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateMode</b>(<td>CatPartUpdateMode&amp; <td><tt>oUpdateMode</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "UpdateMode" parameter's value.
 <br/><b>Role:</b> This parameter determines how the update of a .CATPart document is conducted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUpdateMode</tt>
   <dd>    Current update mode: <ul><li><tt>catAutomaticUpdate</tt> when update is automatically launched,</li><li><tt>catManualUpdate</tt> when update has to be launched manually.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetUpdateModeInfo"></a><a name="GetUpdateModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetUpdateModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "UpdateMode" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetUpdateStoppedOnError"></a><a name="GetUpdateStoppedOnError(CATBoolean&amp;)"></a> <dt> o <b>GetUpdateStoppedOnError</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateStoppedOnError</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oStoppedOnError</tt>) = 0  </table></dt>
<dl>
  <dd>
 Retrieves the "UpdateStoppedOnError" parameter's value.
 <br/><b>Role:</b> This parameter determines if update tasks stop on the first detected error.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStoppedOnError</tt>
   <dd>    Current "UpdateStoppedOnError" parameter's value:
      <ul><li>TRUE or 1 if update tasks stop,</li>
      <li>FALSE or 0 otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetUpdateStoppedOnErrorInfo"></a><a name="GetUpdateStoppedOnErrorInfo(CATSettingInfo*)"></a> <dt> o <b>GetUpdateStoppedOnErrorInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateStoppedOnErrorInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the "UpdateStoppedOnError" parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMmiPartInfrastructureSettingAtt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
