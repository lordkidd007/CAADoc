<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KinematicsInterfaces Interface CATIKinJoint</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KinematicsInterfaces.htm" href="../KinematicsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KinematicsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIKinJoint"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KinematicsInterfaces Interface CATIKinJoint</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIKinJoint_30174','CATIKinJoint','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIKinJoint</b>
</p>
<p>
<b><i> Interface to get and set kinematics joint's information.</i></b><br>

 <b>Role</b>: A kinematics joint has a type, involves up to three parts, has frames
 and parameters which are limited.
 The methods provided by this interface allow to access this information.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCmdTypes(char**,int*)"><b>GetCmdTypes</b></a>(char**,int*)
<dd>  Returns the available command types for the joint.
 <dt> o 
    <a href="#GetConnectors(CATLISTP(CATBaseUnknown)**)"><b>GetConnectors</b></a>(CATLISTP(CATBaseUnknown)**)
<dd>  Returns the connectors of the joint.
 <dt> o 
    <a href="#GetConstraints(CATLISTP(CATBaseUnknown)**)"><b>GetConstraints</b></a>(CATLISTP(CATBaseUnknown)**)
<dd>  Returns the constraints of the joint.
 <dt> o 
    <a href="#GetFrame(int,double**)"><b>GetFrame</b></a>(int,double**)
<dd>   Returns a frame from the joint definition.
 <dt> o 
    <a href="#GetJointValues(double**,int*)"><b>GetJointValues</b></a>(double**,int*)
<dd>   Returns the parameter values of the joint.
 <dt> o 
    <a href="#GetLowerLimit1(int*,double*)"><b>GetLowerLimit1</b></a>(int*,double*)
<dd>  Gets the lower limit existence and value
  for the first parameter of the joint.
 <dt> o 
    <a href="#GetLowerLimit2(int*,double*)"><b>GetLowerLimit2</b></a>(int*,double*)
<dd>  Gets the lower limit existence and value
  for the second parameter of the joint.
 <dt> o 
    <a href="#GetProductList(CATLISTP(CATBaseUnknown)**)"><b>GetProductList</b></a>(CATLISTP(CATBaseUnknown)**)
<dd>   Returns the products involved in the joint.
 <dt> o 
    <a href="#GetRatio(double*)"><b>GetRatio</b></a>(double*)
<dd>  Returns the ratio of the joint.
 <dt> o 
    <a href="#GetType(char**)"><b>GetType</b></a>(char**)
<dd>  Returns the type of the joint.
 <dt> o 
    <a href="#GetUpperLimit1(int*,double*)"><b>GetUpperLimit1</b></a>(int*,double*)
<dd>  Gets the upper limit existence and value
  for the first parameter of the joint.
 <dt> o 
    <a href="#GetUpperLimit2(int*,double*)"><b>GetUpperLimit2</b></a>(int*,double*)
<dd>  Gets the upper limit existence and value
  for the second parameter of the joint.
 <dt> o 
    <a href="#SetLowerLimit1(double)"><b>SetLowerLimit1</b></a>(double)
<dd>  Sets the lower limit of the joint, for the first parameter.
 <dt> o 
    <a href="#SetLowerLimit2(double)"><b>SetLowerLimit2</b></a>(double)
<dd>  Sets the lower limit of the joint, for the second parameter.
 <dt> o 
    <a href="#SetRatio(double)"><b>SetRatio</b></a>(double)
<dd>  Sets the ratio of the joint.
 <dt> o 
    <a href="#SetUpperLimit1(double)"><b>SetUpperLimit1</b></a>(double)
<dd>  Sets the upper limit of the joint, for the first parameter.
 <dt> o 
    <a href="#SetUpperLimit2(double)"><b>SetUpperLimit2</b></a>(double)
<dd>  Sets the upper limit of the joint, for the second parameter.
 <dt> o 
    <a href="#UnsetLowerLimit1()"><b>UnsetLowerLimit1</b></a>()
<dd>  Unsets the lower limit of the joint, for the first parameter.
 <dt> o 
    <a href="#UnsetLowerLimit2()"><b>UnsetLowerLimit2</b></a>()
<dd>  Unsets the lower limit of the joint, for the second parameter.
 <dt> o 
    <a href="#UnsetUpperLimit1()"><b>UnsetUpperLimit1</b></a>()
<dd>  Unsets the upper limit of the joint, for the first parameter.
 <dt> o 
    <a href="#UnsetUpperLimit2()"><b>UnsetUpperLimit2</b></a>()
<dd>  Unsets the upper limit of the joint, for the second parameter.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCmdTypes"></a><a name="GetCmdTypes(char**,int*)"></a> <dt> o <b>GetCmdTypes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCmdTypes</b>(<td> const <script type="text/javascript"> activateLink('char','char**')</script> <td><tt>oListTypes</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oSize</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the available command types for the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListTypes</tt>
   <dd>    The list (allocated by the method) of types (the basic types are defined in CATKinDefs).
 </dd>
    <dt><tt> oSize</tt>
   <dd>    The size of the list.</dd>
</dl>
</dl>
</dl>
<a name="GetConnectors"></a><a name="GetConnectors(CATLISTP(CATBaseUnknown)**)"></a> <dt> o <b>GetConnectors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConnectors</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)**')</script> <td><tt>oConnectors</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the connectors of the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oConnectors</tt>
   <dd>    The list of connectors involved in the joint (allocated by the method).
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATLISTP(CATBaseUnknown)','','CATLISTP(CATBaseUnknown)') </script>
</dl>
</dl>
<a name="GetConstraints"></a><a name="GetConstraints(CATLISTP(CATBaseUnknown)**)"></a> <dt> o <b>GetConstraints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConstraints</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)**')</script> <td><tt>oConstraints</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the constraints of the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oConstraints</tt>
   <dd>    The list of constraints involved in the joint (allocated by the method).
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATLISTP(CATBaseUnknown)','','CATLISTP(CATBaseUnknown)') </script>
</dl>
</dl>
<a name="GetFrame"></a><a name="GetFrame(int,double**)"></a> <dt> o <b>GetFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFrame</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFrameNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double**')</script> <td><tt>oFrame</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
  Returns a frame from the joint definition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFrameNumber</tt>
   <dd>    The index of the frame you want to get (1,2,3 or 4)
 </dd>
    <dt><tt> oFrame</tt>
   <dd>    The frame defined by a 12 double vector (allocated by the method) set as following :
 <dir>
  <li>Position 0 to 2  : the first vector coordinates
  <li>Position 3 to 5  : the second vector coordinates
  <li>Position 6 to 8 :  the third vector coordinates
  <li>Position 9 to 11 : the origin coordinates
 </dir></dd>
</dl>
</dl>
</dl>
<a name="GetJointValues"></a><a name="GetJointValues(double**,int*)"></a> <dt> o <b>GetJointValues</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetJointValues</b>(<td><script type="text/javascript"> activateLink('double','double**')</script> <td><tt>oValues</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oSize</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the parameter values of the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oValues</tt>
   <dd>   The list of values (allocated by the method).
 </dd>
    <dt><tt> oSize</tt>
   <dd>   The size of the list.</dd>
</dl>
</dl>
</dl>
<a name="GetLowerLimit1"></a><a name="GetLowerLimit1(int*,double*)"></a> <dt> o <b>GetLowerLimit1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLowerLimit1</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>isLimited</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLimitValue</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the lower limit existence and value
  for the first parameter of the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isLimited</tt>
   <dd>    isLimited equals 1 if the limit is defined, 0 otherwise
 </dd>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
    Table of joints that can have limits, and on which paramter:
  Revolute:         1
  Prismatic:        1
  Cylindrical:      1    2 
  Screw:            1    2 
  Gear:             1    2
  Rack:             1    2
  Cable:            1    2
  PointOnCurve:     1
  RollCurve:        1</dd>
</dl>
</dl>
</dl>
<a name="GetLowerLimit2"></a><a name="GetLowerLimit2(int*,double*)"></a> <dt> o <b>GetLowerLimit2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLowerLimit2</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>isLimited</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLimitValue</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the lower limit existence and value
  for the second parameter of the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isLimited</tt>
   <dd>    isLimited equals 1 if the limit is defined, 0 otherwise
 </dd>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
    Table of joints that can have limits, and on which paramter:
  Revolute:         1
  Prismatic:        1
  Cylindrical:      1    2 
  Screw:            1    2 
  Gear:             1    2
  Rack:             1    2
  Cable:            1    2
  PointOnCurve:     1
  RollCurve:        1</dd>
</dl>
</dl>
</dl>
<a name="GetProductList"></a><a name="GetProductList(CATLISTP(CATBaseUnknown)**)"></a> <dt> o <b>GetProductList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProductList</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)**')</script> <td><tt>oProductList</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the products involved in the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProductList</tt>
   <dd>    The list of products involved in the joint (allocated by the method)
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATLISTP(CATBaseUnknown)','','CATLISTP(CATBaseUnknown)') </script>
</dl>
</dl>
<a name="GetRatio"></a><a name="GetRatio(double*)"></a> <dt> o <b>GetRatio</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRatio</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oRatio</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the ratio of the joint.
  (applies only to the following types: gear, rack, cable, screw) 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRatio</tt>
   <dd>    The ratio (or pitch) of the joint</dd>
</dl>
</dl>
</dl>
<a name="GetType"></a><a name="GetType(char**)"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetType</b>(<td> const <script type="text/javascript"> activateLink('char','char**')</script> <td><tt>oJointType</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oJointType</tt>
   <dd>    The type of the joint (basic types are defined in CATKinDefs).</dd>
</dl>
</dl>
</dl>
<a name="GetUpperLimit1"></a><a name="GetUpperLimit1(int*,double*)"></a> <dt> o <b>GetUpperLimit1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUpperLimit1</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>isLimited</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLimitValue</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the upper limit existence and value
  for the first parameter of the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isLimited</tt>
   <dd>    isLimited equals 1 if the limit is defined, 0 otherwise
 </dd>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
    Table of joints that can have limits, and on which paramter:
  Revolute:         1
  Prismatic:        1
  Cylindrical:      1    2 
  Screw:            1    2 
  Gear:             1    2
  Rack:             1    2
  Cable:            1    2
  PointOnCurve:     1
  RollCurve:        1</dd>
</dl>
</dl>
</dl>
<a name="GetUpperLimit2"></a><a name="GetUpperLimit2(int*,double*)"></a> <dt> o <b>GetUpperLimit2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUpperLimit2</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>isLimited</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLimitValue</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the upper limit existence and value
  for the second parameter of the joint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isLimited</tt>
   <dd>    isLimited equals 1 if the limit is defined, 0 otherwise
 </dd>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
    Table of joints that can have limits, and on which paramter:
  Revolute:         1
  Prismatic:        1
  Cylindrical:      1    2 
  Screw:            1    2 
  Gear:             1    2
  Rack:             1    2
  Cable:            1    2
  PointOnCurve:     1
  RollCurve:        1</dd>
</dl>
</dl>
</dl>
<a name="SetLowerLimit1"></a><a name="SetLowerLimit1(double)"></a> <dt> o <b>SetLowerLimit1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLowerLimit1</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLimitValue</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the lower limit of the joint, for the first parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
    Table of joints that can have limits, and on which parameter:
  Revolute:         1
  Prismatic:        1
  Cylindrical:      1    2 
  Screw:            1    2 
  Gear:             1    2
  Rack:             1    2
  Cable:            1    2
  PointOnCurve:     1
  RollCurve:        1</dd>
</dl>
</dl>
</dl>
<a name="SetLowerLimit2"></a><a name="SetLowerLimit2(double)"></a> <dt> o <b>SetLowerLimit2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLowerLimit2</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLimitValue</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the lower limit of the joint, for the second parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
    Table of joints that can have limits on the second parameter:
  Cylindrical:      1    2 
  Screw:            1    2 
  Gear:             1    2
  Rack:             1    2
  Cable:            1    2</dd>
</dl>
</dl>
</dl>
<a name="SetRatio"></a><a name="SetRatio(double)"></a> <dt> o <b>SetRatio</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRatio</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRatio</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the ratio of the joint.
  (applies only to the following types: gear, rack, cable, screw) 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRatio</tt>
   <dd>    The ratio (or pitch) to set. It must be different to 0.</dd>
</dl>
</dl>
</dl>
<a name="SetUpperLimit1"></a><a name="SetUpperLimit1(double)"></a> <dt> o <b>SetUpperLimit1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetUpperLimit1</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLimitValue</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the upper limit of the joint, for the first parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
    Table of joints that can have limits, and on which parameter:
  Revolute:         1
  Prismatic:        1
  Cylindrical:      1    2 
  Screw:            1    2 
  Gear:             1    2
  Rack:             1    2
  Cable:            1    2
  PointOnCurve:     1
  RollCurve:        1</dd>
</dl>
</dl>
</dl>
<a name="SetUpperLimit2"></a><a name="SetUpperLimit2(double)"></a> <dt> o <b>SetUpperLimit2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetUpperLimit2</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLimitValue</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the upper limit of the joint, for the second parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
    Table of joints that can have limits on the second parameter:
  Cylindrical:      1    2 
  Screw:            1    2 
  Gear:             1    2
  Rack:             1    2
  Cable:            1    2</dd>
</dl>
</dl>
</dl>
<a name="UnsetLowerLimit1"></a><a name="UnsetLowerLimit1()"></a> <dt> o <b>UnsetLowerLimit1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnsetLowerLimit1</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Unsets the lower limit of the joint, for the first parameter.
</dl>
<a name="UnsetLowerLimit2"></a><a name="UnsetLowerLimit2()"></a> <dt> o <b>UnsetLowerLimit2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnsetLowerLimit2</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Unsets the lower limit of the joint, for the second parameter.
</dl>
<a name="UnsetUpperLimit1"></a><a name="UnsetUpperLimit1()"></a> <dt> o <b>UnsetUpperLimit1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnsetUpperLimit1</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Unsets the upper limit of the joint, for the first parameter.
</dl>
<a name="UnsetUpperLimit2"></a><a name="UnsetUpperLimit2()"></a> <dt> o <b>UnsetUpperLimit2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnsetUpperLimit2</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Unsets the upper limit of the joint, for the second parameter.
</dl>
<hr>
 This object is included in the file: <b>CATIKinJoint.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATKiiKinematicsItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

