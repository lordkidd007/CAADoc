<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Dialog Class CATDlgCheckItem</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../Dialog.htm" href="../Dialog.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "Dialog";	}
		function getCurrentObjectName() { 
 	return "CATDlgCheckItem"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Dialog <script type="text/javascript" > writeClassCharacteristic(); </script> CATDlgCheckItem</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDlgCheckItem_13006','CATDlgCheckItem','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDlgCheckItem</b>
</p>
<p>
<b><i>  Base class for check menu items.</i></b><br>

 <b>Role</b>:
 A check menu item is used to build menus and submenus and allows the user to set an option among 
 several available options in a menu, a submenu, or a toolbar.
 A check item has two states, "on" or "off". 
 Selecting a check item sets its state to "on" if it was "off" or to "off" if it was "on", 
 regardless the state of the other check items. So several check items can be in 
 the state "on" while several others can be in the state "off". 
 <br>
 Use check items whenever you propose to the end user a choice among several inclusive options, 
 that is when several options can be selected at the same time, in a menu, a submenu, a toolbar, or an icon box.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDlgCheckItem(CATDialog*,CATString&amp;,CATDlgStyle)"><b>CATDlgCheckItem</b></a>(CATDialog*,CATString&amp;,CATDlgStyle)
<dd>   Constructs a CATDlgCheckItem.
 <dt> o 
    <a href="#~CATDlgCheckItem()"><b>~CATDlgCheckItem</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetChkIModifyNotification()"><b>GetChkIModifyNotification</b></a>()
<dd>  Returns the event notification sent whenever the check item is checked or unchecked.
 <dt> o 
    <a href="#GetState()"><b>GetState</b></a>()
<dd>  Returns the state of the check item.
 <dt> o 
    <a href="#SetState(CATULong,int)"><b>SetState</b></a>(CATULong,int)
<dd>  Sets the state of the check item.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDlgCheckItem"></a><a name="CATDlgCheckItem(CATDialog*,CATString&amp;,CATDlgStyle)"></a> <dt> o <b>CATDlgCheckItem</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDlgCheckItem</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iParent</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iObjectName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDlgStyle','CATDlgStyle')</script> <td><tt>iStyle</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructs a CATDlgCheckItem.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd>   The parent of the check item.
 </dd>
    <dt><tt> iObjectName</tt>
   <dd>   The name of the check item.
 </dd>
    <dt><tt> iStyle</tt>
   <dd>   The style of the check item.</dd>
</dl>
</dl>
</dl>
<a name="~CATDlgCheckItem"></a><a name="~CATDlgCheckItem()"></a> <dt> o <b>~CATDlgCheckItem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATDlgCheckItem</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetChkIModifyNotification"></a><a name="GetChkIModifyNotification()"></a> <dt> o <b>GetChkIModifyNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetChkIModifyNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the event notification sent whenever the check item is checked or unchecked.
</dl>
<a name="GetState"></a><a name="GetState()"></a> <dt> o <b>GetState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATULong','CATULong')</script>  <b>GetState</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the state of the check item.
   <br>
 The state of the check item can be.
   <dl>
   <dt><tt>CATDlgCheck</tt><dd> if the check item is checked,
   <dt><tt>CATDlgUncheck</tt><dd> if it is unchecked.
   </dl>
</dl>
<a name="SetState"></a><a name="SetState(CATULong,int)"></a> <dt> o <b>SetState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetState</b>(<td><script type="text/javascript"> activateLink('CATULong','CATULong')</script> <td><tt>iState</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNotify</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the state of the check item.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iState</tt>
   <dd> The state of the check item to set.
   <br>
   <b>Legal values</b> : It can be set to either :
   <dl>
   <dt><tt>CATDlgCheck</tt><dd> to check the check item,
   <dt><tt>CATDlgUncheck</tt><dd> to uncheck it.
   </dl>
 </dd>
    <dt><tt> iNotify</tt>
   <dd> Set this parameter to a non null value if you want the corresponding notification to be sent.
 Otherwise set it to 0, so no notification will be sent.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDlgCheckItem.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DI0PANV2</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

