<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATConvertSurToNurbsSur</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATConvertSurToNurbsSur"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATConvertSurToNurbsSur</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATConvertSurToNurbsSur_49631','CATConvertSurToNurbsSur','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATConvertSurToNurbsSur</b>
</p>
<p>
<b><i> </i></b><br>
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R10 CATSurFittingToNurbsSur
 Class defining a geometric operator that computes the NURBS representation of a CATSurface.
<br>The operator deals with the CATSphere, CATCylinder, CATTorus, CATCone and CATRevolution surfaces
 and creates the corresponding rational CATNurbsSurface. CATPlane and CATTabulatedCylinder 
 give a non rational CATNurbsSurface. For a CATNurbsSurface, the corresponding CATNurbsSurface
 without extrapolation is created.
 The CATConvertSurToNurbsSur operator follows the global frame of the geometric operators: 
<ul>
 <li>A CATConvertSurToNurbsSur operator is created with the <tt>CreateConvertSurToNurbsSur</tt> global method 
 and must be
 directly <tt>delete</tt>d with the usual C++ operator after use.
 It is is not streamable. 
<li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. 
<li>In both cases, the result is accessed with the <tt>Getxxx</tt> methods. 
</ul>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATConvertSurToNurbsSur()"><b>CATConvertSurToNurbsSur</b></a>()
<dd>  <dt> o 
    <a href="#~CATConvertSurToNurbsSur()"><b>~CATConvertSurToNurbsSur</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ComputeNewParameter(CATSurParam&amp;)"><b>ComputeNewParameter</b></a>(CATSurParam&amp;)
<dd>  Maps a parameter on the initial surface to the corresponding parameter on the computed Nurbs representation.
 <dt> o 
    <a href="#ForbidPeriodicity()"><b>ForbidPeriodicity</b></a>()
<dd>  Avoids to create periodic Nurbs representation.
 <dt> o 
    <a href="#GetNurbsSurface()"><b>GetNurbsSurface</b></a>()
<dd>  Returns the corresponding CATNurbsSurface.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#RunWithSameParametrisation()"><b>RunWithSameParametrisation</b></a>()
<dd>  Runs <tt>this</tt> operator by keeping the same parameterization for the input
 and resulting surface (<tt>ADVANCED</tt> mode).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATConvertSurToNurbsSur"></a><a name="CATConvertSurToNurbsSur()"></a> <dt> o <b>CATConvertSurToNurbsSur</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATConvertSurToNurbsSur</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATConvertSurToNurbsSur"></a><a name="~CATConvertSurToNurbsSur()"></a> <dt> o <b>~CATConvertSurToNurbsSur</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATConvertSurToNurbsSur</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="ComputeNewParameter"></a><a name="ComputeNewParameter(CATSurParam&amp;)"></a> <dt> o <b>ComputeNewParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATSurParam','CATSurParam')</script>  <b>ComputeNewParameter</b>(<td> const <script type="text/javascript"> activateLink('CATSurParam','CATSurParam&amp;')</script> <td><tt>iParamOnSurface</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Maps a parameter on the initial surface to the corresponding parameter on the computed Nurbs representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParamOnSurface</tt>
   <dd> The parameter on the initial surface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter on the computed Nurbs representation.
</dl>
</dl>
<a name="ForbidPeriodicity"></a><a name="ForbidPeriodicity()"></a> <dt> o <b>ForbidPeriodicity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ForbidPeriodicity</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Avoids to create periodic Nurbs representation.
 <br>By default, periodic representations can be created.
</dl>
<a name="GetNurbsSurface"></a><a name="GetNurbsSurface()"></a> <dt> o <b>GetNurbsSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsSurface','CATNurbsSurface *')</script>  <b>GetNurbsSurface</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the corresponding CATNurbsSurface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created CATNurbsSurface. Use the 
<script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> if you do not want to keep it in the geometric factory.
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator (<tt>ADVANCED</tt> mode).
</dl>
<a name="RunWithSameParametrisation"></a><a name="RunWithSameParametrisation()"></a> <dt> o <b>RunWithSameParametrisation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>RunWithSameParametrisation</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator by keeping the same parameterization for the input
 and resulting surface (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>0</tt> if the the parameterization is not kept, <tt>1</tt> if it is kept.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATConvertSurToNurbsSur.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

