<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATDynEdgeFilletRibbon</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATDynEdgeFilletRibbon"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATDynEdgeFilletRibbon</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDynEdgeFilletRibbon_46427','CATDynEdgeFilletRibbon','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDynEdgeFilletRibbon</b>
</p>
<p>
<b><i> Class defining a fillet ribbon along an edge.</i></b><br>

 <br>A ribbon is an elementary process of the filleting operator.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDynEdgeFilletRibbon()"><b>CATDynEdgeFilletRibbon</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#CATDynEdgeFilletRibbon(CATLISTP(CATEdge)&amp;,CATLISTP(CATDynFilletRadius)&amp;,CATBody::CATPropagationTypePr3,CATLISTP(CATEdge)&amp;,CATDynEdgeCrossing)"><b>CATDynEdgeFilletRibbon</b></a>(CATLISTP(CATEdge)&amp;,CATLISTP(CATDynFilletRadius)&amp;,CATBody::CATPropagationTypePr3,CATLISTP(CATEdge)&amp;,CATDynEdgeCrossing)
<dd>  Constructs a ribbon along an edge.
 <dt> o 
    <a href="#~CATDynEdgeFilletRibbon()"><b>~CATDynEdgeFilletRibbon</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetPropagationType()"><b>GetPropagationType</b></a>()
<dd>  Returns the propagation mode.
 <dt> o 
    <a href="#GetRadii()"><b>GetRadii</b></a>()
<dd>  Returns the radius definitions of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetSupport()"><b>GetSupport</b></a>()
<dd>  Returns the input list of the edges defining <tt>this</tt> ribbon.
 <dt> o 
    <a href="#IsVariable()"><b>IsVariable</b></a>()
<dd>  Returns whether <tt>this</tt> ribbon is of variable radius.
 <dt> o 
    <a href="#SetSpine(CATBody*)"><b>SetSpine</b></a>(CATBody*)
<dd>  Defines the optional spine of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#SetVariable()"><b>SetVariable</b></a>()
<dd>  Defines that <tt>this</tt> ribbon is of variable radius.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDynEdgeFilletRibbon"></a><a name="CATDynEdgeFilletRibbon()"></a> <dt> o <b>CATDynEdgeFilletRibbon</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynEdgeFilletRibbon</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CATDynEdgeFilletRibbon"></a><a name="CATDynEdgeFilletRibbon(CATLISTP(CATEdge)&amp;,CATLISTP(CATDynFilletRadius)&amp;,CATBody::CATPropagationTypePr3,CATLISTP(CATEdge)&amp;,CATDynEdgeCrossing)"></a> <dt> o <b>CATDynEdgeFilletRibbon</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynEdgeFilletRibbon</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATEdge)','CATLISTP(CATEdge)&amp;')</script> <td><tt>iSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATDynFilletRadius)','CATLISTP(CATDynFilletRadius)&amp;')</script> <td><tt>iRadii</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody::CATPropagationTypePr3','CATBody::CATPropagationTypePr3')</script> <td><tt>iPropagation</tt><td><tt>=CATBody::CATEdgePropagAuto</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATEdge)','CATLISTP(CATEdge)&amp;')</script> <td><tt>iSpecialEdges</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDynEdgeCrossing','CATDynEdgeCrossing')</script> <td><tt>iDefaultBehaviour</tt><td><tt>=CATDynRolling</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a ribbon along an edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd> The list of the pointers to the edges to fillet.
 </dd>
    <dt><tt> iRadii</tt>
   <dd> The list of the radius definitions. There can be several radius definitions for each edge, in case
 of variable radius operation.
 </dd>
    <dt><tt> iPropagation</tt>
   <dd> The automatic propagation of the ribbon.
 <br><b>Legal values</b>:
 <dl><dt><tt>CATEdgePropagAuto</tt></dt><dd>Automatic propagation in tangency.
 <dt><tt>CATEdgePropagStopOnCorner</tt></dt><dd>Propagation in tangency but on corner.
 <dt><tt>CATEdgePropagManual</tt></dt><dd>No propagation.
 </dl>
 </dd>
    <dt><tt> iSpecialEdges</tt>
   <dd> The list of the pointers to the kept (or rolling) edges.
 </dd>
    <dt><tt> iDefaultBehaviour</tt>
   <dd> Not yet implemented.</dd>
</dl>
</dl>
</dl>
<a name="~CATDynEdgeFilletRibbon"></a><a name="~CATDynEdgeFilletRibbon()"></a> <dt> o <b>~CATDynEdgeFilletRibbon</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATDynEdgeFilletRibbon</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetPropagationType"></a><a name="GetPropagationType()"></a> <dt> o <b>GetPropagationType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBody::CATPropagationTypePr3','CATBody::CATPropagationTypePr3')</script>  <b>GetPropagationType</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the propagation mode.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The automatic propagation of the ribbon.
 <br><b>Legal values</b>:
 <dl><dt><tt>CATEdgePropagAuto</tt></dt><dd>Automatic propagation in tangency.
 <dt><tt>CATEdgePropagStopOnCorner</tt></dt><dd>Propagation in tangency but on corner.
 <dt><tt>CATEdgePropagManual</tt></dt><dd>No propagation.
 </dl>
</dl>
</dl>
<a name="GetRadii"></a><a name="GetRadii()"></a> <dt> o <b>GetRadii</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLISTP(CATDynFilletRadius)','const CATLISTP(CATDynFilletRadius)&')</script>  <b>GetRadii</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the radius definitions of <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The list of pointers to the radius definitions.
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport()"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLISTP(CATEdge)','const CATLISTP(CATEdge)&')</script>  <b>GetSupport</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the input list of the edges defining <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The list of the pointers to the edges.
</dl>
</dl>
<a name="IsVariable"></a><a name="IsVariable()"></a> <dt> o <b>IsVariable</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsVariable</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns whether <tt>this</tt> ribbon is of variable radius.
 <br>This directly returns the input of the <tt>SetVariable</tt> method, and does not enquire the
 <tt>CATDynFilletRadius</tt> associated with <tt>this</tt> ribbon
</dl>
<a name="SetSpine"></a><a name="SetSpine(CATBody*)"></a> <dt> o <b>SetSpine</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSpine</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iSpine</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the optional spine of <tt>this</tt> ribbon.
 <br>If used, the spine defines the center of the circle or of the sphere. Moreover,
 if the CATFilletCircleTool option is used, the plane of the circle is normal
 to the spine.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpine</tt>
   <dd> The pointer to the body only containing one wire.</dd>
</dl>
</dl>
</dl>
<a name="SetVariable"></a><a name="SetVariable()"></a> <dt> o <b>SetVariable</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetVariable</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines that <tt>this</tt> ribbon is of variable radius.
</dl>
<hr>
 This object is included in the file: <b>CATDynFilletRibbon.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

