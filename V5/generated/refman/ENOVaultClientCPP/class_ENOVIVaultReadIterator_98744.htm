<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ENOVaultClientCPP Class ENOVIVaultReadIterator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../ENOVaultClientCPP.htm">This Framework</a>  <a href="class_ENOVIVaultError_46079.htm">Previous</a>  <a href="class_ENOVIVaultResultSet_74292.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>ENOVaultClientCPP Class ENOVIVaultReadIterator</h1>
<pre>
ENOVIVaultReadIterator
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>ENOVIVaultReadIterator</b>
</p>
<p>
<b><i> This class supplies methods to read collections of document.</i></b><br>

 <b>role</b>: In combination with the cache mechanism, it provides significants performance
 improvements when reading collection of documents 

 <dl>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ENOVIVaultReadIterator()"><b>ENOVIVaultReadIterator</b></a>()
<dd>  Constructs an Iterator
 <dt> o 
    <a href="#ENOVIVaultReadIterator(ENOVIVaultDocumentColl&amp;)"><b>ENOVIVaultReadIterator</b></a>(ENOVIVaultDocumentColl&amp;)
<dd>  Constructs an iterator to be used with the document collection given as input.
 <dt> o 
    <a href="#~ENOVIVaultReadIterator()"><b>~ENOVIVaultReadIterator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#endRead()"><b>endRead</b></a>()
<dd>  Terminates the read operation.
 <dt> o 
    <a href="#hasNext()"><b>hasNext</b></a>()
<dd>  Tells if there are remaining documents to read.
 <dt> o 
    <a href="#next(ENOVIVaultDocument**,ENOVIVaultError&amp;)"><b>next</b></a>(ENOVIVaultDocument**,ENOVIVaultError&amp;)
<dd>  Fetches the next document to read.
 <dt> o 
    <a href="#startRead(ENOVIVaultError&amp;)"><b>startRead</b></a>(ENOVIVaultError&amp;)
<dd>  Starts the read operation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="ENOVIVaultReadIterator"></a><a name="ENOVIVaultReadIterator()"></a> <dt> o <b>ENOVIVaultReadIterator</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>ENOVIVaultReadIterator</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an Iterator
</dl>
<a name="ENOVIVaultReadIterator"></a><a name="ENOVIVaultReadIterator(ENOVIVaultDocumentColl&amp;)"></a> <dt> o <b>ENOVIVaultReadIterator</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>ENOVIVaultReadIterator</b>(<td> const <a href="../ENOVaultClientCPP/class_ENOVIVaultDocumentColl_98518.htm">ENOVIVaultDocumentColl&amp;</a> <td><tt>iDocColl</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an iterator to be used with the document collection given as input.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDocColl</tt>
   <dd> [in] - Document collection to read</dd>
</dl>
</dl>
</dl>
<a name="~ENOVIVaultReadIterator"></a><a name="~ENOVIVaultReadIterator()"></a> <dt> o <b>~ENOVIVaultReadIterator</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>~ENOVIVaultReadIterator</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="endRead"></a><a name="endRead()"></a> <dt> o <b>endRead</b>

<dt>  <table><tr><td>  public void  <b>endRead</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Terminates the read operation.
</dl>
<a name="hasNext"></a><a name="hasNext()"></a> <dt> o <b>hasNext</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>hasNext</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Tells if there are remaining documents to read.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATTrue, CATFalse
</dl>
</dl>
<a name="next"></a><a name="next(ENOVIVaultDocument**,ENOVIVaultError&amp;)"></a> <dt> o <b>next</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>next</b>(<td><a href="../ENOVaultClientCPP/class_ENOVIVaultDocument_66616.htm">ENOVIVaultDocument**</a> <td><tt>oNextDoc</tt>,<tr><td></td><td><a href="../ENOVaultClientCPP/class_ENOVIVaultError_46079.htm">ENOVIVaultError&amp;</a> <td><tt>oVaultError</tt>)<a href="../DNBSystem/struct__0.htm"> </a>  </table></dt>
<dl>
  <dd>
 Fetches the next document to read.
 The document can then be read using the appropriate methods 
 on the 
<a href="../ENOVaultClientCPP/class_ENOVIVaultDocument_66616.htm">ENOVIVaultDocument</a> class 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNextDoc</tt>
   <dd> [out] - Next Document to read</dd>
</dl>
</dl>
</dl>
<a name="startRead"></a><a name="startRead(ENOVIVaultError&amp;)"></a> <dt> o <b>startRead</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>startRead</b>(<td><a href="../ENOVaultClientCPP/class_ENOVIVaultError_46079.htm">ENOVIVaultError&amp;</a> <td><tt>oVaultError</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Starts the read operation.
 This method must only be called once for a given iterator
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVaultError</tt>
   <dd> [out] - Details about the error.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVIVaultReadIterator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>ENOVIVaultClientAPP</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
