<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ENOVaultClientCPP Class ENOVIVaultSessionFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ENOVaultClientCPP.htm" href="../ENOVaultClientCPP.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ENOVaultClientCPP";	}
		function getCurrentObjectName() { 
 	return "ENOVIVaultSessionFactory"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ENOVaultClientCPP <script type="text/javascript" > writeClassCharacteristic(); </script> ENOVIVaultSessionFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_ENOVIVaultSessionFactory_42944','ENOVIVaultSessionFactory','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>ENOVIVaultSessionFactory</b>
</p>
<p>
<b><i> Class to manage Vault sessions.</i></b><br>

 <b>role</b>: This class provides static methods enabling to get and release <script type="text/javascript"> activateLinkAnchor('ENOVIVaultSession','','ENOVIVaultSession') </script> objects. <p> 
<dl>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#endVaultSession(ENOVIVaultSession*,ENOVIVaultError&amp;)"><b>endVaultSession</b></a>(ENOVIVaultSession*,ENOVIVaultError&amp;)
<dd>  Terminates a Vault session.
 <dt> o 
    <a href="#endVaultSessionProxy(ENOVIVaultSession*,ENOVIVaultError&amp;)"><b>endVaultSessionProxy</b></a>(ENOVIVaultSession*,ENOVIVaultError&amp;)
<dd>  Terminates a Vault session proxy.
 <dt> o 
    <a href="#getDefaultAliasName(CATUnicodeString&amp;,ENOVIVaultError&amp;)"><b>getDefaultAliasName</b></a>(CATUnicodeString&amp;,ENOVIVaultError&amp;)
<dd>  Retrieves the alias name of the default Vault session.
 <dt> o 
    <a href="#getVaultAliasNames(CATListOfCATUnicodeString&amp;,ENOVIVaultError&amp;)"><b>getVaultAliasNames</b></a>(CATListOfCATUnicodeString&amp;,ENOVIVaultError&amp;)
<dd>  Retrieves the alias names of all the known Vaults.
 <dt> o 
    <a href="#getVaultSession(SEQUENCE_octet&amp;,CATBoolean&amp;,ENOVIVaultSession**,ENOVIVaultError&amp;)"><b>getVaultSession</b></a>(SEQUENCE_octet&amp;,CATBoolean&amp;,ENOVIVaultSession**,ENOVIVaultError&amp;)
<dd>  Retrieves the Vault session pertainning to the given parameters.
 <dt> o 
    <a href="#getVaultSession(CATUnicodeString&amp;,CATUnicodeString&amp;,int&amp;,CATBoolean&amp;,ENOVIVaultSession**,ENOVIVaultError&amp;)"><b>getVaultSession</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,int&amp;,CATBoolean&amp;,ENOVIVaultSession**,ENOVIVaultError&amp;)
<dd>  Retrieves the Vault session pertainning to the given parameters.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="endVaultSession"></a><a name="endVaultSession(ENOVIVaultSession*,ENOVIVaultError&amp;)"></a> <dt> o <b>endVaultSession</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>endVaultSession</b>(<td><script type="text/javascript"> activateLink('ENOVIVaultSession','ENOVIVaultSession*')</script> <td><tt>ipENOVIVaultSession</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVIVaultError','ENOVIVaultError&amp;')</script> <td><tt>oVaultError</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Terminates a Vault session.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iENOVIVaultSession</tt>
   <dd> [in] - Vault session to end.     <br><b>Lifecycle rules deviation</b>: The <tt>iENOVIVaultSession</tt> parameter will be deallocated.
 </dd>
    <dt><tt> oVaultError</tt>
   <dd> [out] - Details about the error. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK, E_FAIL
</dl>
</dl>
<a name="endVaultSessionProxy"></a><a name="endVaultSessionProxy(ENOVIVaultSession*,ENOVIVaultError&amp;)"></a> <dt> o <b>endVaultSessionProxy</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>endVaultSessionProxy</b>(<td><script type="text/javascript"> activateLink('ENOVIVaultSession','ENOVIVaultSession*')</script> <td><tt>ipENOVIVaultSession</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVIVaultError','ENOVIVaultError&amp;')</script> <td><tt>oVaultError</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Terminates a Vault session proxy.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iENOVIVaultSession</tt>
   <dd> [in] - Vault session to end.     <br><b>Lifecycle rules deviation</b>: The <tt>iENOVIVaultSession</tt> parameter will be deallocated.
 </dd>
    <dt><tt> oVaultError</tt>
   <dd> [out] - Details about the error. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK, E_FAIL
</dl>
</dl>
<a name="getDefaultAliasName"></a><a name="getDefaultAliasName(CATUnicodeString&amp;,ENOVIVaultError&amp;)"></a> <dt> o <b>getDefaultAliasName</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getDefaultAliasName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oDefaultAliasName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVIVaultError','ENOVIVaultError&amp;')</script> <td><tt>oVaultError</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the alias name of the default Vault session.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDefaultAliasName</tt>
   <dd> [out] - Alias name of the default Vault session. </dd>
    <dt><tt> oVaultError</tt>
   <dd> [out] - Details about the error. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK, E_FAIL 
</dl>
</dl>
<a name="getVaultAliasNames"></a><a name="getVaultAliasNames(CATListOfCATUnicodeString&amp;,ENOVIVaultError&amp;)"></a> <dt> o <b>getVaultAliasNames</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getVaultAliasNames</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oVaultAliasNamesliste</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVIVaultError','ENOVIVaultError&amp;')</script> <td><tt>oVaultError</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the alias names of all the known Vaults.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVaultAliasNamesliste</tt>
   <dd> [out] - Known Vaults alias names. </dd>
    <dt><tt> oVaultError</tt>
   <dd> [out] - Details about the error. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK, E_FAIL 
</dl>
</dl>
<a name="getVaultSession"></a><a name="getVaultSession(SEQUENCE_octet&amp;,CATBoolean&amp;,ENOVIVaultSession**,ENOVIVaultError&amp;)"></a> <dt> o <b>getVaultSession</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getVaultSession</b>(<td> const <script type="text/javascript"> activateLink('SEQUENCE_octet','SEQUENCE_octet&amp;')</script> <td><tt>ibvVaultSessionOId</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iIsTransactionMaster</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVIVaultSession','ENOVIVaultSession**')</script> <td><tt>oppENOVIVaultSession</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVIVaultError','ENOVIVaultError&amp;')</script> <td><tt>oVaultError</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Vault session pertainning to the given parameters.
 If the 
<script type="text/javascript"> activateLinkAnchor('ENOVIVaultSession','','ENOVIVaultSession') </script> Object doesn't exist yet, it will be created. <br> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ibvVaultSessionOId</tt>
   <dd> [in] - the vault user session object identifier. </dd>
    <dt><tt> iIsTransactionMaster</tt>
   <dd> [in] - specifies if this process is transaction master.     <br><b>Legal Values</b>: <tt>iAction</tt> may be set to:
         <dl>
         <dt><tt>CATTrue</tt>  <dd>To indicate that the session will support all transaction related methods
         <dt><tt>CATFalse</tt> <dd>To indicate that the session will not support all transaction related methods. Meaning that it is part of multi-process transaction whose master is another vault session. In this case, the iTransactionMasterHostName and iTransactionMasterListenPort parameters are mandatory.
         </dl> 
 </dd>
    <dt><tt> oppENOVIVaultSession</tt>
   <dd> [out] - Double pointer on ENOVIVaultSession Object.     <br><b>Lifecycle rules deviation</b>: <tt>oppENOVIVaultSession</tt> parameter must only be dealocated using the </dd>
<script type="text/javascript"> activateLinkAnchor('','endVaultSession','endVaultSession') </script> method. 
    <dt><tt> oVaultError</tt>
   <dd> [out] - Details about the error. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK, VAULT_E_NOSESSION, E_FAIL 
</dl>
</dl>
<a name="getVaultSession"></a><a name="getVaultSession(CATUnicodeString&amp;,CATUnicodeString&amp;,int&amp;,CATBoolean&amp;,ENOVIVaultSession**,ENOVIVaultError&amp;)"></a> <dt> o <b>getVaultSession</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getVaultSession</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iTransactionMasterServerMarker</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iTransactionMasterHostName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iTransactionMasterListenPort</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iIsTransactionMaster</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVIVaultSession','ENOVIVaultSession**')</script> <td><tt>oppENOVIVaultSession</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVIVaultError','ENOVIVaultError&amp;')</script> <td><tt>oVaultError</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Vault session pertainning to the given parameters.
 If the 
<script type="text/javascript"> activateLinkAnchor('ENOVIVaultSession','','ENOVIVaultSession') </script> Object doesn't exist yet, it will be created. <br> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTransactionMasterServerMarker</tt>
   <dd> [in] - Identifier of the server where the transaction manager is located.     <br><b>Legal Values</b>: <tt>iAction</tt> may be set to "" when the Vault session is transaction master
 </dd>
    <dt><tt> iTransactionMasterHostName</tt>
   <dd> [in] - Hostname of the transaction manager process.     <br><b>Legal Values</b>: <tt>iAction</tt> may be set to "" when the Vault session is transaction master
 </dd>
    <dt><tt> iTransactionMasterListenPort</tt>
   <dd> [in] - Listen port on which call the transaction manager     <br><b>Legal Values</b>: <tt>iAction</tt> may be set to 0 when the Vault session is transaction master.
 </dd>
    <dt><tt> iIsTransactionMaster</tt>
   <dd> [in] - specifies if this process is transaction master.     <br><b>Legal Values</b>: <tt>iAction</tt> may be set to:
         <dl>
         <dt><tt>CATTrue</tt>  <dd>To indicate that the session will support all transaction related methods
         <dt><tt>CATFalse</tt> <dd>To indicate that the session will not support all transaction related methods. Meaning that it is part of multi-process transaction whose master is another vault session. In this case, the iTransactionMasterHostName and iTransactionMasterListenPort parameters are mandatory.
         </dl> 
 </dd>
    <dt><tt> oppENOVIVaultSession</tt>
   <dd> [out] - Double pointer on ENOVIVaultSession Object.     <br><b>Lifecycle rules deviation</b>: <tt>oppENOVIVaultSession</tt> parameter must only be dealocated using the </dd>
<script type="text/javascript"> activateLinkAnchor('','endVaultSession','endVaultSession') </script> method. 
    <dt><tt> oVaultError</tt>
   <dd> [out] - Details about the error. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK, VAULT_E_NOSESSION, E_FAIL 
  <dt> <b>Deprecated:</b> 
  <dd>  V5R12
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVIVaultSessionFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>ENOVIVaultClientAPP</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

