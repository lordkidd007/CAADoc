<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerNavigator Class CATNavigController</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ObjectModelerNavigator.htm" href="../ObjectModelerNavigator.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ObjectModelerNavigator";	}
		function getCurrentObjectName() { 
 	return "CATNavigController"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ObjectModelerNavigator <script type="text/javascript" > writeClassCharacteristic(); </script> CATNavigController</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATNavigController_41544','CATNavigController','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATNavigController</b>
</p>
<p>
<b><i>  Class used to control navigation.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATNavigController()"><b>~CATNavigController</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetActivatorsVisibility()"><b>GetActivatorsVisibility</b></a>()
<dd>   Retrieves the +/- sign visibility.
 <dt> o 
    <a href="#GetAssociatedElements(CATBaseUnknown_var&amp;)"><b>GetAssociatedElements</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves nodes associated to an object.
 <dt> o 
    <a href="#GetContainer()"><b>GetContainer</b></a>()
<dd>     Returns the container.
 <dt> o 
    <a href="#GetDereferenceMode()"><b>GetDereferenceMode</b></a>()
<dd>  Retrieves the mode to manage the depth of representation.
 <dt> o 
    <a href="#SetActivatorsVisibility(int)"><b>SetActivatorsVisibility</b></a>(int)
<dd>  Sets the +/- sign visibility.
 <dt> o 
    <a href="#SetDepth(int)"><b>SetDepth</b></a>(int)
<dd>  Sets expansion depth under a node.
 <dt> o 
    <a href="#SetDereferenceMode(int)"><b>SetDereferenceMode</b></a>(int)
<dd>  Sets the mode to manage the display of + and -  on arcs.
 <dt> o 
    <a href="#SetNoDuplicate()"><b>SetNoDuplicate</b></a>()
<dd>   Instances management.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATNavigController"></a><a name="~CATNavigController()"></a> <dt> o <b>~CATNavigController</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATNavigController</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetActivatorsVisibility"></a><a name="GetActivatorsVisibility()"></a> <dt> o <b>GetActivatorsVisibility</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetActivatorsVisibility</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the +/- sign visibility.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Legal values:
   <ul>
  <li>0: signs are hidden  </li>
  <li>otherwise   </li>
   </ul>
</dl>
</dl>
<a name="GetAssociatedElements"></a><a name="GetAssociatedElements(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetAssociatedElements</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATListValCATBaseUnknown','CATListValCATBaseUnknown_var*')</script>  <b>GetAssociatedElements</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iObject</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves nodes associated to an object.
 <br><b>Role:</b>An object visualized in a tree, see 
<script type="text/javascript"> activateLinkAnchor('CATINavigateObject','','CATINavigateObject') </script> , is represented by a node implementing 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','','CATIGraphNode') </script> ,  
<script type="text/javascript"> activateLinkAnchor('CATINavigElement','','CATINavigElement') </script> , and 
<script type="text/javascript"> activateLinkAnchor('CATINavigModify','','CATINavigModify') </script>. This node is multi- represented: there are as many nodes as tree instances. This method retrieves 
 all the nodes associated with an object. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>    The object associated with the nodes.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The list of nodes. A node is an object implementing 
<script type="text/javascript"> activateLinkAnchor('CATINavigModify','','CATINavigModify') </script> ,  
<script type="text/javascript"> activateLinkAnchor('CATINavigElement','','CATINavigElement') </script> , and 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','','CATIGraphNode') </script> .
</dl>
</dl>
<a name="GetContainer"></a><a name="GetContainer()"></a> <dt> o <b>GetContainer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATINavigContainer','CATINavigContainer*')</script>  <b>GetContainer</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
    Returns the container.  
  Returned pointer must be released.
</dl>
<a name="GetDereferenceMode"></a><a name="GetDereferenceMode()"></a> <dt> o <b>GetDereferenceMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetDereferenceMode</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the mode to manage the depth of representation.
 <br><b>Role:</b>This method retrieves the mode to manage the depth of representation.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>      The mode.
</dl>
</dl>
<a name="SetActivatorsVisibility"></a><a name="SetActivatorsVisibility(int)"></a> <dt> o <b>SetActivatorsVisibility</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetActivatorsVisibility</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>mode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the +/- sign visibility.
 <br><b>Role:</b> Warning: Do not use this method if node already drawn in the graph. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> mode</tt>
   <dd>   Legal values:
   <ul>
  <li>0: Hide the +/- signs </li>
  <li>otherwise : show the +/- signs </li>
   </ul></dd>
</dl>
</dl>
</dl>
<a name="SetDepth"></a><a name="SetDepth(int)"></a> <dt> o <b>SetDepth</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetDepth</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDepth</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets expansion depth under a node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDepth</tt>
   <dd>     if iDepth < 0, expand all children till there is no one left</dd>
</dl>
</dl>
</dl>
<a name="SetDereferenceMode"></a><a name="SetDereferenceMode(int)"></a> <dt> o <b>SetDereferenceMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetDereferenceMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>mode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the mode to manage the display of + and -  on arcs.
 <br><b>Role:</b>This method sets the mode to manage the depth of representation.<br>
        <B>if mode =0 </B>: <BR>
         by default a + is always displayed on node. If you click on it,
          
<script type="text/javascript"> activateLinkAnchor('CATINavigateObject','GetChildren','CATINavigateObject.GetChildren') </script> method is called on node and we try to         display children.<br> 
         - If children exist, they are displayed and + is replace by a -.<br>
         - If there is no children, + disappear.<br>
         This behavior is same as windows explorer on network directory.
         Ergonomy is not perfect but it provides best performances.<br>
        <B>if mode =1 </B>: <BR>
         
<script type="text/javascript"> activateLinkAnchor('CATINavigateObject','GetChildren','CATINavigateObject.GetChildren') </script> is always called once         (even if children are not displayed) just to check if there are some children.<br>
          If there is no children, no sign is displayed on arc.<br>
          If there are some children a + is displayed on arc.<br>
         This behavior is same as windows explorer on local directory.<br>
         Ergonomy is better but it could impact performances if 
<script type="text/javascript"> activateLinkAnchor('CATINavigateObject','GetChildren','CATINavigateObject.GetChildren') </script> implementation is slow. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> mode</tt>
   <dd>    The mode value to manage the depth of representation.</dd>
</dl>
</dl>
</dl>
<a name="SetNoDuplicate"></a><a name="SetNoDuplicate()"></a> <dt> o <b>SetNoDuplicate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetNoDuplicate</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Instances management.
  <br><b>Role:</b> Warning: Do not use this method if node already drawn in the graph.
</dl>
<hr>
 This object is included in the file: <b>CATNavigController.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectModelerNavigator</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

