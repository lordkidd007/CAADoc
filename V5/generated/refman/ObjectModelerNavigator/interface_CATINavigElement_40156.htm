<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerNavigator Interface CATINavigElement</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ObjectModelerNavigator.htm" href="../ObjectModelerNavigator.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ObjectModelerNavigator";	}
		function getCurrentObjectName() { 
 	return "CATINavigElement"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ObjectModelerNavigator Interface CATINavigElement</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATINavigElement_40156','CATINavigElement','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../ObjectModelerNavigator/class_CATNodeExtension_38013.htm">CATNodeExtension</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATINavigElement</b>
</p>
<p>
<b><i> Interface to manage tree node modifications.</i></b><br>

 <br><b>Role:</b>This interface enables you to specify or apply behaviors for a node associated with
 your object. If to be visualized in object tree, an object must implement the <script type="text/javascript"> activateLinkAnchor('CATINavigateObject','','CATINavigateObject') </script>  interface, this interface implementation is not mandatory. Nodes associated with an object have a
 default implementation of this interface, such as the 
<script type="text/javascript"> activateLinkAnchor('CATINavigModify','','CATINavigModify') </script> and 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','','CATIGraphNode') </script> interfaces. <p>You can re-implement the <tt>Processxxx</tt> methods, but in most cases their default behavior 
 is sufficient. However, the three others: 
<script type="text/javascript"> activateLinkAnchor('','Update','Update') </script> ,
<script type="text/javascript"> activateLinkAnchor('','GetController','GetController') </script> ,  and 
<script type="text/javascript"> activateLinkAnchor('','GetAssociatedInstance','GetAssociatedInstance') </script> cannot be re-implemented, you can only use it. </p> <p>This implementation, full or partial, is not done on the object itself but on an object, named 
 <tt>MyObject<b>_node</b></tt>, where <tt>MyObject</tt> is the name of the object. </p>

 <p><b>BOA information</b>: this interface CANNOT be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAssociatedInstance()"><b>GetAssociatedInstance</b></a>()
<dd>  Retrieves the instance associated with the node.
 <dt> o 
    <a href="#GetController()"><b>GetController</b></a>()
<dd>  Retrieves the tree controller.
 <dt> o 
    <a href="#GetFatherContainer()"><b>GetFatherContainer</b></a>()
<dd>     Returns  the  father container.
 <dt> o 
    <a href="#ProcessAfterAction()"><b>ProcessAfterAction</b></a>()
<dd>  Defines behavior after double-click of the node.
 <dt> o 
    <a href="#ProcessAfterExpand()"><b>ProcessAfterExpand</b></a>()
<dd>  Defines behavior after expand of the node.
 <dt> o 
    <a href="#ProcessAfterExtSelect()"><b>ProcessAfterExtSelect</b></a>()
<dd>  Defines behavior after selection of several nodes.
 <dt> o 
    <a href="#ProcessAfterMethod()"><b>ProcessAfterMethod</b></a>()
<dd>  Defines behavior when the contextual menu is asked on the node.
 <dt> o 
    <a href="#ProcessAfterSelect()"><b>ProcessAfterSelect</b></a>()
<dd>  Defines behavior after selection of the node.
 <dt> o 
    <a href="#Update()"><b>Update</b></a>()
<dd>  Updates node.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAssociatedInstance"></a><a name="GetAssociatedInstance()"></a> <dt> o <b>GetAssociatedInstance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNavigInstance','CATNavigInstance*')</script>  <b>GetAssociatedInstance</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the instance associated with the node.
 <br><b>Role</b>: This method retrieves the object associated with the
  node.  
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The associated instance.
 <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
  returned value.
</dl>
</dl>
<a name="GetController"></a><a name="GetController()"></a> <dt> o <b>GetController</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNavigController','const CATNavigController*')</script>  <b>GetController</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the tree controller.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The tree controller.
 <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
  returned value.
</dl>
</dl>
<a name="GetFatherContainer"></a><a name="GetFatherContainer()"></a> <dt> o <b>GetFatherContainer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATINavigContainer','CATINavigContainer*')</script>  <b>GetFatherContainer</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
    Returns  the  father container.  
  Returned  pointer  must  be  released.
</dl>
<a name="ProcessAfterAction"></a><a name="ProcessAfterAction()"></a> <dt> o <b>ProcessAfterAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ProcessAfterAction</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines behavior after double-click of the node.
 <br><b>Role:</b>This method defines the behavior after double-click of the node. Refer to
 the 
<script type="text/javascript"> activateLinkAnchor('CATNodeExtension','ProcessAfterAction','CATNodeExtension.ProcessAfterAction') </script> method for the default implementation.
</dl>
<a name="ProcessAfterExpand"></a><a name="ProcessAfterExpand()"></a> <dt> o <b>ProcessAfterExpand</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ProcessAfterExpand</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines behavior after expand of the node.
 <br><b>Role:</b>This method defines the behavior when the end user clicks on the 
 +/- icons of the node. Refer to
 the 
<script type="text/javascript"> activateLinkAnchor('CATNodeExtension','ProcessAfterExpand','CATNodeExtension.ProcessAfterExpand') </script> method for the default implementation. <br>This method can be also used to produce an expand/collapse of the node.
</dl>
<a name="ProcessAfterExtSelect"></a><a name="ProcessAfterExtSelect()"></a> <dt> o <b>ProcessAfterExtSelect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ProcessAfterExtSelect</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines behavior after selection of several nodes.
 <br><b>Role:</b>This method defines the behavior after selection of several nodes. Refer to
 the 
<script type="text/javascript"> activateLinkAnchor('CATNodeExtension','ProcessAfterExtSelect','CATNodeExtension.ProcessAfterExtSelect') </script> method for the default implementation.
</dl>
<a name="ProcessAfterMethod"></a><a name="ProcessAfterMethod()"></a> <dt> o <b>ProcessAfterMethod</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ProcessAfterMethod</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines behavior when the contextual menu is asked on the node.
 <br><b>Role:</b>This method defines the behavior when the contextual menu is asked on the node. Refer to
 the 
<script type="text/javascript"> activateLinkAnchor('CATNodeExtension','ProcessAfterMethod','CATNodeExtension.ProcessAfterMethod') </script> method for the default implementation. <br>You may not have to re-implement this method, the contextual menu defined
 through the <tt>CATIContextualMenu</tt> or
 <tt>CATIContextualSubMenu</tt> interfaces is the contextual menu of an object, 
 in 3D such as in the object tree.
</dl>
<a name="ProcessAfterSelect"></a><a name="ProcessAfterSelect()"></a> <dt> o <b>ProcessAfterSelect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ProcessAfterSelect</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines behavior after selection of the node.
 <br><b>Role:</b>This method defines the behavior after selection of the node. Refer to
 the 
<script type="text/javascript"> activateLinkAnchor('CATNodeExtension','ProcessAfterSelect','CATNodeExtension.ProcessAfterSelect') </script> method for the default implementation.
</dl>
<a name="Update"></a><a name="Update()"></a> <dt> o <b>Update</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Update</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Updates node. 
 <br><b>Role:</b>This method is useful when an update of the node is necessary.
 You have used methods of the 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','','CATIGraphNode') </script>  interface to modify a visual aspect of the node, 
 a call to this method is necessary to update the visualization of the node.
</dl>
<hr>
 This object is included in the file: <b>CATINavigElement.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectModelerNavigator</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

