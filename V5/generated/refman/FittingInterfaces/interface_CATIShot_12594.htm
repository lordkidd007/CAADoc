<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FittingInterfaces Interface CATIShot</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../FittingInterfaces.htm">This Framework</a>  <a href="interface_CATISampled_23947.htm">Previous</a>  <a href="interface_CATISiFiFittingSettingAtt_126412.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>FittingInterfaces Interface CATIShot</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIShot
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 interface <b>CATIShot</b>
</p>
<p>
<b><i> The interface to access a CATIShot.</i></b><br>

 <b>Role:</b> A CATIShot (or shot) is the base element that <a href="../FittingInterfaces/interface_CATISampled_23947.htm">CATISampled</a> objects are composed of.  For example, when considering a 
 
<a href="../FittingInterfaces/interface_CATITrack_15668.htm">CATITrack</a>, each recorded position is a shot.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetApplicativeDatas(int&amp;,double*&amp;)"><b>GetApplicativeDatas</b></a>(int&amp;,double*&amp;)
<dd>  Retrieves data to the related objects in the previous API.
 <dt> o 
    <a href="#GetApplicativeId(unsigned int&amp;)"><b>GetApplicativeId</b></a>(unsigned int&amp;)
<dd>  Retrieves how special characteristics for different objects when creating a
 shot.
 <dt> o 
    <a href="#GetDirectionalDatas(void*&amp;)"><b>GetDirectionalDatas</b></a>(void*&amp;)
<dd>  Retrieves the compass position related to the shot
 
 <dt> o 
    <a href="#GetDuration(double&amp;)"><b>GetDuration</b></a>(double&amp;)
<dd>  Retrieves the duration (time) associated to a shot.
 <dt> o 
    <a href="#GetPositionData(double*,int&amp;)"><b>GetPositionData</b></a>(double*,int&amp;)
<dd>  Retrieves the positional/directional information related to the shot.
 <dt> o 
    <a href="#ResetDuration()"><b>ResetDuration</b></a>()
<dd>  Resets the duration (time) associated to a shot.
 <dt> o 
    <a href="#SetApplicativeDatas(int,double*)"><b>SetApplicativeDatas</b></a>(int,double*)
<dd>  Sets data to the related objects in the previous API.
 <dt> o 
    <a href="#SetApplicativeId(unsigned int)"><b>SetApplicativeId</b></a>(unsigned int)
<dd>  Sets special characteristics for different objects when creating a
 shot.
 <dt> o 
    <a href="#SetDirectionalDatas(void*)"><b>SetDirectionalDatas</b></a>(void*)
<dd>  Sets the compass position for the shot
 
 <dt> o 
    <a href="#SetDuration(double)"><b>SetDuration</b></a>(double)
<dd>  Sets the duration (time) associated to a shot.
 <dt> o 
    <a href="#SetPositionData(double*,int)"><b>SetPositionData</b></a>(double*,int)
<dd>  Sets the positional/directional information related to the shot.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetApplicativeDatas"></a><a name="GetApplicativeDatas(int&amp;,double*&amp;)"></a> <dt> o <b>GetApplicativeDatas</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetApplicativeDatas</b>(<td>int&amp; <td><tt>oSize</tt>,<tr><td></td><td>double*&amp; <td><tt>oDatas</tt>) =0  </table></dt>
<dl>
  <dd>
 Retrieves data to the related objects in the previous API.  For example: the zoom
 for a camera.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSize</tt>
   <dd>    The size/number of elements contained in oDatas
 </dd>
    <dt><tt> iDatas</tt>
   <dd>    A set of data values (stored as doubles) retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetApplicativeId"></a><a name="GetApplicativeId(unsigned int&amp;)"></a> <dt> o <b>GetApplicativeId</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetApplicativeId</b>(<td>unsigned int&amp; <td><tt>oId</tt>) =0  </table></dt>
<dl>
  <dd>
 Retrieves how special characteristics for different objects when creating a
 shot.  Again this is for different objects such as a camera.  It is 
 recommended for it to be set so that the correct interpolation can be 
 determined between shots.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oId</tt>
   <dd>    The value of the id</dd>
</dl>
</dl>
</dl>
<a name="GetDirectionalDatas"></a><a name="GetDirectionalDatas(void*&amp;)"></a> <dt> o <b>GetDirectionalDatas</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDirectionalDatas</b>(<td>void*&amp; <td><tt>oDatas</tt>) =0  </table></dt>
<dl>
  <dd>
 Retrieves the compass position related to the shot
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDatas</tt>
   <dd>         <ul>
        <li> Compass (or Manipulator) Position; it is relative to the object
              position
    </ul></dd>
</dl>
</dl>
</dl>
<a name="GetDuration"></a><a name="GetDuration(double&amp;)"></a> <dt> o <b>GetDuration</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDuration</b>(<td>double&amp; <td><tt>oTime</tt>) =0  </table></dt>
<dl>
  <dd>
 Retrieves the duration (time) associated to a shot.  The duration of a 
 shot is the amount of time needed to travel from the previous shot to 
 the current shot.  Some key things to note are:
 <ul>
     <li> The first shot should have a duration of zero.
     <li> The value of the duration is a positive real number.  Hence,
          0.454 & 1345 are legal while -18 is not.
 </ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTime</tt>
   <dd>    The duration of a shot.</dd>
</dl>
</dl>
</dl>
<a name="GetPositionData"></a><a name="GetPositionData(double*,int&amp;)"></a> <dt> o <b>GetPositionData</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPositionData</b>(<td>double* <td><tt>oPosDatas</tt>,<tr><td></td><td>int&amp; <td><tt>oSize</tt>)=0  </table></dt>
<dl>
  <dd>
 Retrieves the positional/directional information related to the shot.
 This method doesnt return information for Generic Shots because the Generic shots 
 do not cantain positional data. For ShotDouble we get 24 values for Shot Simple we get 12 values
 and for Shot Points we get 9 values.
 The caller should create an array of sufficient size
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPosDatas</tt>
   <dd>    If the shot is for a Track then it returns the shot information.     
    <ul>
        <li> Compass (or Manipulator) Position which is relative to the object
              position and the Object Position that is relative to the start 
              of the track. 
    </ul>
 </dd>
    <dt><tt> oSize</tt>
   <dd>    The size of the list of double that is returned</dd>
</dl>
</dl>
</dl>
<a name="ResetDuration"></a><a name="ResetDuration()"></a> <dt> o <b>ResetDuration</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ResetDuration</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Resets the duration (time) associated to a shot.
 <b>Role:</b> When reseting a shot's time, data values are unset (or deleted).
 Then the next time GetDuration is called, the duration will be recalculated.

</dl>
<a name="SetApplicativeDatas"></a><a name="SetApplicativeDatas(int,double*)"></a> <dt> o <b>SetApplicativeDatas</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetApplicativeDatas</b>(<td>int <td><tt>iSize</tt>,<tr><td></td><td>double* <td><tt>iDatas</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets data to the related objects in the previous API.  For example: the zoom
 for a camera.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSize</tt>
   <dd>    The size/number of elements contained in iDatas
 </dd>
    <dt><tt> iDatas</tt>
   <dd>    A set of data values (stored as doubles) to be stored.</dd>
</dl>
</dl>
</dl>
<a name="SetApplicativeId"></a><a name="SetApplicativeId(unsigned int)"></a> <dt> o <b>SetApplicativeId</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetApplicativeId</b>(<td>unsigned int <td><tt>iId</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets special characteristics for different objects when creating a
 shot.  Again this is for different object types such as a camera.  It is 
 recommended for it to be set so that the correct interpolation can be 
 determined between shots.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>    The number of the id to set.</dd>
</dl>
</dl>
</dl>
<a name="SetDirectionalDatas"></a><a name="SetDirectionalDatas(void*)"></a> <dt> o <b>SetDirectionalDatas</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDirectionalDatas</b>(<td>void* <td><tt>iDatas</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets the compass position for the shot
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDatas</tt>
   <dd>    <ul>
        <li> Compass Position is set, it is relative to the object position
    </ul></dd>
</dl>
</dl>
</dl>
<a name="SetDuration"></a><a name="SetDuration(double)"></a> <dt> o <b>SetDuration</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDuration</b>(<td>double <td><tt>iTime</tt>) =0  </table></dt>
<dl>
  <dd>
 Sets the duration (time) associated to a shot.  The duration of a 
 shot is the amount of time needed to travel from the previous shot to 
 the current shot.  Some key things to note are:
 <ul>
     <li> The first shot should have a duration of zero.
     <li> The value of the duration is a positive real number.  Hence,
          0.454 & 1345 are legal while -18 is not.
 </ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTime</tt>
   <dd>     The duration of a shot.</dd>
</dl>
</dl>
</dl>
<a name="SetPositionData"></a><a name="SetPositionData(double*,int)"></a> <dt> o <b>SetPositionData</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPositionData</b>(<td>double* <td><tt>iPosDatas</tt>,<tr><td></td><td>int <td><tt>iSize</tt>)=0  </table></dt>
<dl>
  <dd>
 Sets the positional/directional information related to the shot.
 This method doesnt set information for Generic Shots because the Generic shots 
 do not cantain positional data. For ShotDouble we get 24 values for Shot Simple 
 we get 12 values and for Shot Points we get 9 values.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPosDatas</tt>
   <dd>    If the shot is for a Track then it sets the shot information.  
    <ul>
        <li> iPosDatas contains Compass Position which is relative to the object
              position and the Object Position that is relative to the start 
              of the track. 
    </ul>
 </dd>
    <dt><tt> iSize</tt>
   <dd>   This is the size of double</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIShot.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFittingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
