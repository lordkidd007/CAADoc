<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FittingInterfaces Interface CATISiFiManipSettingAtt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../FittingInterfaces.htm">This Framework</a>  <a href="interface_CATISiFiFittingSettingAtt_126412.htm">Previous</a>  <a href="interface_CATISiShuttle_34480.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>FittingInterfaces Interface CATISiFiManipSettingAtt</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATISiFiManipSettingAtt
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISiFiManipSettingAtt</b>
</p>
<p>
<b><i>   Interface to handle parameters of DMU Manip Tools Options Tab page
 <b>Role</b>: This interface is implemented by a component which 
 represents the controller of DMU Manip Tools Options parameter settings.</i></b><br>

 <ul>
 <li>Methods to set value of each parameter</li>
 <li>Methods to get value of each parameter</li>
 <li>Methods to get information on each parameter</li>
 <li>Methods to lock/unlock value of each parameter</li>
 </ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAngleStep(float&amp;)"><b>GetAngleStep</b></a>(float&amp;)
<dd>  Returns the Angle Step parameter
 <br><b>Role</b>: Returns the Angle Step parameter
 
 <dt> o 
    <a href="#GetAngleStepInfo(CATSettingInfo*)"><b>GetAngleStepInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the AngleStepInfo parameter.
 <dt> o 
    <a href="#GetClashMode(CATManipClashMode&amp;)"><b>GetClashMode</b></a>(CATManipClashMode&amp;)
<dd>  Returns the ClashMode (manipulation mode) for simulation and tracks
 <br><b>Role</b>: Returns the ClashMode (manipulation mode) for simulation
 and tracks
 
 <dt> o 
    <a href="#GetClashModeInfo(CATSettingInfo*)"><b>GetClashModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the ClashModeInfo parameter.
 <dt> o 
    <a href="#GetClashSound(CATBoolean&amp;)"><b>GetClashSound</b></a>(CATBoolean&amp;)
<dd>  Returns the Clash Sound parameter
 <br><b>Role</b>: Returns the Clash Sound parameter
 
 <dt> o 
    <a href="#GetClashSoundInfo(CATSettingInfo*)"><b>GetClashSoundInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the ClashSoundInfo parameter.
 <dt> o 
    <a href="#GetDistanceStep(float&amp;)"><b>GetDistanceStep</b></a>(float&amp;)
<dd>  Returns the Distance Step parameter
 <br><b>Role</b>: Returns the Distance Step parameter
 
 <dt> o 
    <a href="#GetDistanceStepInfo(CATSettingInfo*)"><b>GetDistanceStepInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the DistanceStepInfo parameter.
 <dt> o 
    <a href="#GetManipAutoInsert(CATBoolean&amp;)"><b>GetManipAutoInsert</b></a>(CATBoolean&amp;)
<dd>  Returns the ManipAutoInsert parameter
 <br><b>Role</b>: Returns the ManipAutoInsert (Automatic insert for manipulation
 mode) parameter.
 <dt> o 
    <a href="#GetManipAutoInsertInfo(CATSettingInfo*)"><b>GetManipAutoInsertInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the ManipAutoInsertInfo parameter.
 <dt> o 
    <a href="#GetRecordMode(CATManipAutoInsertMode&amp;)"><b>GetRecordMode</b></a>(CATManipAutoInsertMode&amp;)
<dd>  Returns the RecordMode for Auto Insert configuration 
 <br><b>Role</b>: Returns the RecordMode for Auto Insert configuration
 
 <dt> o 
    <a href="#GetRecordModeInfo(CATSettingInfo*)"><b>GetRecordModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the RecordModeInfo parameter.
 <dt> o 
    <a href="#GetSnapAngleDistance(float&amp;)"><b>GetSnapAngleDistance</b></a>(float&amp;)
<dd>  Returns the Snap Angle Distance parameter
 <br><b>Role</b>: Returns the Angle Distance parameter of the Snap Sensitivity
 
 <dt> o 
    <a href="#GetSnapAngleDistanceInfo(CATSettingInfo*)"><b>GetSnapAngleDistanceInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the SnapAngleDistanceInfo parameter.
 <dt> o 
    <a href="#GetSnapPosition(float&amp;)"><b>GetSnapPosition</b></a>(float&amp;)
<dd>  Returns the Snap Position parameter
 <br><b>Role</b>: Returns the Position parameter of the Snap Sensitivity
 
 <dt> o 
    <a href="#GetSnapPositionInfo(CATSettingInfo*)"><b>GetSnapPositionInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the SnapPositionInfo parameter.
 <dt> o 
    <a href="#SetAngleStep(float)"><b>SetAngleStep</b></a>(float)
<dd>  Sets the Angle Step  parameter
 <br><b>Role</b>: Sets the Angle Step parameter
 
 <dt> o 
    <a href="#SetAngleStepLock(unsigned char)"><b>SetAngleStepLock</b></a>(unsigned char)
<dd>  Locks or unlocks the AngleStep parameter.
 <dt> o 
    <a href="#SetClashMode(CATManipClashMode)"><b>SetClashMode</b></a>(CATManipClashMode)
<dd>  Sets the ClashMode (manipulation mode) for simulation and tracks
 <br><b>Role</b>: Sets the ClashMode (manipulation mode) for simulation
 and tracks
 
 <dt> o 
    <a href="#SetClashModeLock(unsigned char)"><b>SetClashModeLock</b></a>(unsigned char)
<dd>  Locks or unlocks the ClashMode parameter.
 <dt> o 
    <a href="#SetClashSound(CATBoolean)"><b>SetClashSound</b></a>(CATBoolean)
<dd>  Sets the Clash Sound parameter
 <br><b>Role</b>: Sets the Clash Sound parameter
 
 <dt> o 
    <a href="#SetClashSoundLock(unsigned char)"><b>SetClashSoundLock</b></a>(unsigned char)
<dd>  Locks or unlocks the ClashSound parameter.
 <dt> o 
    <a href="#SetDistanceStep(float)"><b>SetDistanceStep</b></a>(float)
<dd>  Sets the Distance Step  parameter
 <br><b>Role</b>: Returns the Distance Step parameter
 
 <dt> o 
    <a href="#SetDistanceStepLock(unsigned char)"><b>SetDistanceStepLock</b></a>(unsigned char)
<dd>  Locks or unlocks the DistanceStep parameter.
 <dt> o 
    <a href="#SetManipAutoInsert(CATBoolean)"><b>SetManipAutoInsert</b></a>(CATBoolean)
<dd>  Sets the ManipAutoInsert parameter
 <br><b>Role</b>: Sets the ManipAutoInsert (Automatic insert for manipulation
 mode) parameter.
 <dt> o 
    <a href="#SetManipAutoInsertLock(unsigned char)"><b>SetManipAutoInsertLock</b></a>(unsigned char)
<dd>  Locks or unlocks the ManipAutoInsert parameter.
 <dt> o 
    <a href="#SetRecordMode(CATManipAutoInsertMode)"><b>SetRecordMode</b></a>(CATManipAutoInsertMode)
<dd>  Sets the RecordMode for Auto Insert configuration
 <br><b>Role</b>: Sets the RecordMode if angle limitation is being used
 
 <dt> o 
    <a href="#SetRecordModeLock(unsigned char)"><b>SetRecordModeLock</b></a>(unsigned char)
<dd>  Locks or unlocks the RecordMode parameter.
 <dt> o 
    <a href="#SetSnapAngleDistance(float)"><b>SetSnapAngleDistance</b></a>(float)
<dd>  Sets the Snap Angle Distance parameter
 <br><b>Role</b>: Sets the Angle Distance parameter of the Snap Sensitivity
 
 <dt> o 
    <a href="#SetSnapAngleDistanceLock(unsigned char)"><b>SetSnapAngleDistanceLock</b></a>(unsigned char)
<dd>  Locks or unlocks the SnapAngleDistance parameter.
 <dt> o 
    <a href="#SetSnapPosition(float)"><b>SetSnapPosition</b></a>(float)
<dd>  Sets the Snap Position parameter
 <br><b>Role</b>: Sets the Position parameter of the Snap Sensitivity
 
 <dt> o 
    <a href="#SetSnapPositionLock(unsigned char)"><b>SetSnapPositionLock</b></a>(unsigned char)
<dd>  Locks or unlocks the SnapPosition parameter.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAngleStep"></a><a name="GetAngleStep(float&amp;)"></a> <dt> o <b>GetAngleStep</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAngleStep</b>(<td>float&amp; <td><tt>oAngleStep</tt>)= 0  </table></dt>
<dl>
  <dd>
 Returns the Angle Step parameter
 <br><b>Role</b>: Returns the Angle Step parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDefaultSpeed</tt>
   <dd>     <br>Will be set to the current value of the Angle Step
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Angle Step value was correctly obtained
     E_FAIL : if the Angle Step value was not correctly obtained
</dl>
</dl>
<a name="GetAngleStepInfo"></a><a name="GetAngleStepInfo(CATSettingInfo*)"></a> <dt> o <b>GetAngleStepInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetAngleStepInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the AngleStepInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetClashMode"></a><a name="GetClashMode(CATManipClashMode&amp;)"></a> <dt> o <b>GetClashMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetClashMode</b>(<td><a href="../FittingInterfaces/enum_CATManipClashMode_57299.htm">CATManipClashMode&amp;</a> <td><tt>oMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 Returns the ClashMode (manipulation mode) for simulation and tracks
 <br><b>Role</b>: Returns the ClashMode (manipulation mode) for simulation
 and tracks
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>     The ClashMode (manipulation mode) for simulation and tracks
     <b>Legal values</b>:
     <br><tt>CATManipClashModeNo</tt>     Clash Detection is set to OFF
     <br><tt>CATManipClashModeOn</tt>     Clash Detection is set to ON
     <br><tt>CATManipClashModeStop</tt>   Clash Detection is set to STOP
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the ClashMode value was correctly obtained
     E_FAIL : if the ClashMode value was not correctly obtained
</dl>
</dl>
<a name="GetClashModeInfo"></a><a name="GetClashModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetClashModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetClashModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the ClashModeInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetClashSound"></a><a name="GetClashSound(CATBoolean&amp;)"></a> <dt> o <b>GetClashSound</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetClashSound</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oClashSound</tt>)= 0  </table></dt>
<dl>
  <dd>
 Returns the Clash Sound parameter
 <br><b>Role</b>: Returns the Clash Sound parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oClashSound</tt>
   <dd>     If Clash Beep feedback is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE</tt>  Clash Beep feedback is enabled
     <br><tt>FALSE</tt> Clash Beep feedback is disabled
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Clash Sound value was correctly obtained
     E_FAIL : if the Clash Sound value was not correctly obtained
</dl>
</dl>
<a name="GetClashSoundInfo"></a><a name="GetClashSoundInfo(CATSettingInfo*)"></a> <dt> o <b>GetClashSoundInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetClashSoundInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the ClashSoundInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetDistanceStep"></a><a name="GetDistanceStep(float&amp;)"></a> <dt> o <b>GetDistanceStep</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDistanceStep</b>(<td>float&amp; <td><tt>oDistanceStep</tt>)= 0  </table></dt>
<dl>
  <dd>
 Returns the Distance Step parameter
 <br><b>Role</b>: Returns the Distance Step parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDefaultSpeed</tt>
   <dd>     <br>Will be set to the current value of the Distance Step
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Distance Step value was correctly obtained
     E_FAIL : if the Distance Step value was not correctly obtained
</dl>
</dl>
<a name="GetDistanceStepInfo"></a><a name="GetDistanceStepInfo(CATSettingInfo*)"></a> <dt> o <b>GetDistanceStepInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDistanceStepInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the DistanceStepInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetManipAutoInsert"></a><a name="GetManipAutoInsert(CATBoolean&amp;)"></a> <dt> o <b>GetManipAutoInsert</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetManipAutoInsert</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oManipAutoInsert</tt>)= 0  </table></dt>
<dl>
  <dd>
 Returns the ManipAutoInsert parameter
 <br><b>Role</b>: Returns the ManipAutoInsert (Automatic insert for manipulation
 mode) parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oManipAutoInsert</tt>
   <dd>     If Automatic insert for manipulation mode is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE</tt>  Automatic insert for manipulation mode is enabled
     <br><tt>FALSE</tt> Automatic insert for manipulation mode is disabled
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the ManipAutoInsert value was correctly obtained
     E_FAIL : if the ManipAutoInsert value was not correctly obtained
</dl>
</dl>
<a name="GetManipAutoInsertInfo"></a><a name="GetManipAutoInsertInfo(CATSettingInfo*)"></a> <dt> o <b>GetManipAutoInsertInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetManipAutoInsertInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the ManipAutoInsertInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetRecordMode"></a><a name="GetRecordMode(CATManipAutoInsertMode&amp;)"></a> <dt> o <b>GetRecordMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRecordMode</b>(<td><a href="../FittingInterfaces/enum_CATManipAutoInsertMode_98682.htm">CATManipAutoInsertMode&amp;</a> <td><tt>oMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 Returns the RecordMode for Auto Insert configuration 
 <br><b>Role</b>: Returns the RecordMode for Auto Insert configuration
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>     The Record Mode that will be used for auto insert
     <b>Legal values</b>:
     <br><tt>CATOnMouseRelease</tt>     On each mouse release
     <br><tt>CATWhileMouseMoving</tt>   On specific parameters
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the RecordMode value was correctly obtained
     E_FAIL : if the RecordMode value was not correctly obtained
</dl>
</dl>
<a name="GetRecordModeInfo"></a><a name="GetRecordModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetRecordModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRecordModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the RecordModeInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetSnapAngleDistance"></a><a name="GetSnapAngleDistance(float&amp;)"></a> <dt> o <b>GetSnapAngleDistance</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSnapAngleDistance</b>(<td>float&amp; <td><tt>oSnapAngleDistance</tt>)= 0  </table></dt>
<dl>
  <dd>
 Returns the Snap Angle Distance parameter
 <br><b>Role</b>: Returns the Angle Distance parameter of the Snap Sensitivity
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSnapPosition</tt>
   <dd>     <br>Will be set to the current value of the Angle Distance parameter of the 
     Snap Sensitivity
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Snap Angle Distance value was correctly obtained
     E_FAIL : if the Snap Angle Distance value was not correctly obtained
</dl>
</dl>
<a name="GetSnapAngleDistanceInfo"></a><a name="GetSnapAngleDistanceInfo(CATSettingInfo*)"></a> <dt> o <b>GetSnapAngleDistanceInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSnapAngleDistanceInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the SnapAngleDistanceInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetSnapPosition"></a><a name="GetSnapPosition(float&amp;)"></a> <dt> o <b>GetSnapPosition</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSnapPosition</b>(<td>float&amp; <td><tt>oSnapPosition</tt>)= 0  </table></dt>
<dl>
  <dd>
 Returns the Snap Position parameter
 <br><b>Role</b>: Returns the Position parameter of the Snap Sensitivity
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSnapPosition</tt>
   <dd>     <br>Will be set to the current value of the Position parameter of the 
     Snap Sensitivity
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Snap Position value was correctly obtained
     E_FAIL : if the Snap Position value was not correctly obtained
</dl>
</dl>
<a name="GetSnapPositionInfo"></a><a name="GetSnapPositionInfo(CATSettingInfo*)"></a> <dt> o <b>GetSnapPositionInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSnapPositionInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the SnapPositionInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetAngleStep"></a><a name="SetAngleStep(float)"></a> <dt> o <b>SetAngleStep</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetAngleStep</b>(<td> const float <td><tt>iAngleStep</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the Angle Step  parameter
 <br><b>Role</b>: Sets the Angle Step parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDefaultSpeed</tt>
   <dd>     <br>Used to set the Angle Step parameter
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Angle Step value was correctly obtained
     E_FAIL : if the Angle Step value was not correctly obtained
</dl>
</dl>
<a name="SetAngleStepLock"></a><a name="SetAngleStepLock(unsigned char)"></a> <dt> o <b>SetAngleStepLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetAngleStepLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
 Locks or unlocks the AngleStep parameter.
 <br><b>Role</b>:Locks or unlocks the AngleStep parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetClashMode"></a><a name="SetClashMode(CATManipClashMode)"></a> <dt> o <b>SetClashMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetClashMode</b>(<td> const <a href="../FittingInterfaces/enum_CATManipClashMode_57299.htm">CATManipClashMode</a> <td><tt>iMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the ClashMode (manipulation mode) for simulation and tracks
 <br><b>Role</b>: Sets the ClashMode (manipulation mode) for simulation
 and tracks
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>     The ClashMode (manipulation mode) for simulation and tracks
     <b>Legal values</b>:
     <br><tt>CATManipClashModeNo</tt>     Clash Detection is set to OFF
     <br><tt>CATManipClashModeOn</tt>     Clash Detection is set to ON
     <br><tt>CATManipClashModeStop</tt>   Clash Detection is set to STOP
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the ClashMode value was set correctly
     E_FAIL : if the ClashMode value was not set correctly
</dl>
</dl>
<a name="SetClashModeLock"></a><a name="SetClashModeLock(unsigned char)"></a> <dt> o <b>SetClashModeLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetClashModeLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
 Locks or unlocks the ClashMode parameter.
 <br><b>Role</b>:Locks or unlocks the ClashMode parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetClashSound"></a><a name="SetClashSound(CATBoolean)"></a> <dt> o <b>SetClashSound</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetClashSound</b>(<td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iClashSound</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the Clash Sound parameter
 <br><b>Role</b>: Sets the Clash Sound parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClashSound</tt>
   <dd>     If Clash Beep feedback is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to enable Clash Beep feedback
     <br><tt>FALSE:</tt>   to disable Clash Beep feedback
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Clash Sound value was set correctly
     E_FAIL : if the Clash Sound value was not set correctly
</dl>
</dl>
<a name="SetClashSoundLock"></a><a name="SetClashSoundLock(unsigned char)"></a> <dt> o <b>SetClashSoundLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetClashSoundLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
 Locks or unlocks the ClashSound parameter.
 <br><b>Role</b>:Locks or unlocks the ClashSound parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetDistanceStep"></a><a name="SetDistanceStep(float)"></a> <dt> o <b>SetDistanceStep</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDistanceStep</b>(<td> const float <td><tt>iDistanceStep</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the Distance Step  parameter
 <br><b>Role</b>: Returns the Distance Step parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDefaultSpeed</tt>
   <dd>     <br>Used to set the Distance Step parameter
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Distance Step value was correctly obtained
     E_FAIL : if the Distance Step value was not correctly obtained
</dl>
</dl>
<a name="SetDistanceStepLock"></a><a name="SetDistanceStepLock(unsigned char)"></a> <dt> o <b>SetDistanceStepLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDistanceStepLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
 Locks or unlocks the DistanceStep parameter.
 <br><b>Role</b>:Locks or unlocks the DistanceStep parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetManipAutoInsert"></a><a name="SetManipAutoInsert(CATBoolean)"></a> <dt> o <b>SetManipAutoInsert</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetManipAutoInsert</b>(<td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iManipAutoInsert</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the ManipAutoInsert parameter
 <br><b>Role</b>: Sets the ManipAutoInsert (Automatic insert for manipulation
 mode) parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iManipAutoInsert</tt>
   <dd>     If Automatic insert for manipulation mode is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to enable Automatic insert for manipulation mode
     <br><tt>FALSE:</tt>   to disable Automatic insert for manipulation mode
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the ManipAutoInsert value was set correctly
     E_FAIL : if the ManipAutoInsert value was not set correctly
</dl>
</dl>
<a name="SetManipAutoInsertLock"></a><a name="SetManipAutoInsertLock(unsigned char)"></a> <dt> o <b>SetManipAutoInsertLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetManipAutoInsertLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
 Locks or unlocks the ManipAutoInsert parameter.
 <br><b>Role</b>:Locks or unlocks the ManipAutoInsert parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetRecordMode"></a><a name="SetRecordMode(CATManipAutoInsertMode)"></a> <dt> o <b>SetRecordMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRecordMode</b>(<td> const <a href="../FittingInterfaces/enum_CATManipAutoInsertMode_98682.htm">CATManipAutoInsertMode</a> <td><tt>iMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the RecordMode for Auto Insert configuration
 <br><b>Role</b>: Sets the RecordMode if angle limitation is being used
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>     The Record Mode that will be used for auto insert
     <b>Legal values</b>:
     <br><tt>CATOnMouseRelease</tt>     On each mouse release
     <br><tt>CATWhileMouseMoving</tt>   On specific parameters
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the RecordMode value was set correctly
     E_FAIL : if the RecordMode value was not set correctly
</dl>
</dl>
<a name="SetRecordModeLock"></a><a name="SetRecordModeLock(unsigned char)"></a> <dt> o <b>SetRecordModeLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetRecordModeLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
 Locks or unlocks the RecordMode parameter.
 <br><b>Role</b>:Locks or unlocks the RecordMode parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetSnapAngleDistance"></a><a name="SetSnapAngleDistance(float)"></a> <dt> o <b>SetSnapAngleDistance</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSnapAngleDistance</b>(<td> const float <td><tt>iSnapAngleDistance</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the Snap Angle Distance parameter
 <br><b>Role</b>: Sets the Angle Distance parameter of the Snap Sensitivity
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSnapPosition</tt>
   <dd>     <br>Used to set the Angle Distance parameter of the Snap Sensitivity
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Snap Angle Distance value was correctly obtained
     E_FAIL : if the Snap Angle Distance value was not correctly obtained
</dl>
</dl>
<a name="SetSnapAngleDistanceLock"></a><a name="SetSnapAngleDistanceLock(unsigned char)"></a> <dt> o <b>SetSnapAngleDistanceLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSnapAngleDistanceLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
 Locks or unlocks the SnapAngleDistance parameter.
 <br><b>Role</b>:Locks or unlocks the SnapAngleDistance parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetSnapPosition"></a><a name="SetSnapPosition(float)"></a> <dt> o <b>SetSnapPosition</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSnapPosition</b>(<td> const float <td><tt>iSnapPosition</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the Snap Position parameter
 <br><b>Role</b>: Sets the Position parameter of the Snap Sensitivity
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSnapPosition</tt>
   <dd>     <br>Used to set the Snap Position parameter of the Snap Sensitivity
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Snap Position value was correctly obtained
     E_FAIL : if the Snap Position value was not correctly obtained
</dl>
</dl>
<a name="SetSnapPositionLock"></a><a name="SetSnapPositionLock(unsigned char)"></a> <dt> o <b>SetSnapPositionLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSnapPositionLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
 Locks or unlocks the SnapPosition parameter.
 <br><b>Role</b>:Locks or unlocks the SnapPosition parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISiFiManipSettingAtt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFittingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
