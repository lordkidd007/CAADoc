<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATGSMUseItf Interface CATIGSMUsePointOnCurve</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATGSMUseItf.htm" href="../CATGSMUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATGSMUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIGSMUsePointOnCurve"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATGSMUseItf Interface CATIGSMUsePointOnCurve</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMUsePointOnCurve_33128','CATIGSMUsePointOnCurve','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMUsePointOnCurve</b>
</p>
<p>
<b><i> Interface to point on a curve feature.</i></b><br>
  
 <b>Role</b>: Allows you to access data of the point feature created with
 a curvilinear distance to an existing point or an extremity on a curve.  
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIGSMUseFactory','CreatePoint','CATIGSMUseFactory.CreatePoint') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDirection(CATIGSMUseDirection_var&amp;)"><b>GetDirection</b></a>(CATIGSMUseDirection_var&amp;)
<dd>  Gets the direction from the reference point.
 <dt> o 
    <a href="#GetDistanceType(DistanceType&amp;)"><b>GetDistanceType</b></a>(DistanceType&amp;)
<dd>  Gets the distance type : geodesic or euclidean.
 <dt> o 
    <a href="#GetLength(CATICkeParm_var&amp;)"><b>GetLength</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the distance.
 <dt> o 
    <a href="#GetOnCurveType(int&amp;)"><b>GetOnCurveType</b></a>(int&amp;)
<dd>  Gets the type for point created on curve.
 <dt> o 
    <a href="#GetOrientation(CATGSMOrientation&amp;)"><b>GetOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the orientation.
 <dt> o 
    <a href="#GetReferencePoint(CATIMmiMechanicalFeature_var&amp;)"><b>GetReferencePoint</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the reference point.
 <dt> o 
    <a href="#GetSupport(CATIMmiMechanicalFeature_var&amp;)"><b>GetSupport</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the curve.
 <dt> o 
    <a href="#InvertOrientation()"><b>InvertOrientation</b></a>()
<dd>  Inverts the orientation.
 <dt> o 
    <a href="#SetDirection(CATIGSMUseDirection_var&amp;)"><b>SetDirection</b></a>(CATIGSMUseDirection_var&amp;)
<dd>  Sets the direction from the reference point.
 <dt> o 
    <a href="#SetDistanceType(DistanceType)"><b>SetDistanceType</b></a>(DistanceType)
<dd>  Sets the distance type : geodesic or euclidean.
 <dt> o 
    <a href="#SetLength(CATICkeParm_var)"><b>SetLength</b></a>(CATICkeParm_var)
<dd>  Sets the distance.
 <dt> o 
    <a href="#SetOnCurveType(int&amp;)"><b>SetOnCurveType</b></a>(int&amp;)
<dd>  Sets the type for point created on curve.
 <dt> o 
    <a href="#SetOrientation(CATGSMOrientation)"><b>SetOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the orientation.
 <dt> o 
    <a href="#SetReferencePoint(CATIMmiMechanicalFeature_var)"><b>SetReferencePoint</b></a>(CATIMmiMechanicalFeature_var)
<dd>  Sets the reference point.
 <dt> o 
    <a href="#SetSupport(CATIMmiMechanicalFeature_var)"><b>SetSupport</b></a>(CATIMmiMechanicalFeature_var)
<dd>  Sets the curve.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#DistanceType"><b>DistanceType</b></a>
<dd>  Different kinds of distance types.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDirection"></a><a name="GetDirection(CATIGSMUseDirection_var&amp;)"></a> <dt> o <b>GetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirection</b>(<td><script type="text/javascript"> activateLink('CATIGSMUseDirection_var','CATIGSMUseDirection_var&amp;')</script> <td><tt>oDirection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the direction from the reference point.
   
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIGSMUseDirection','','CATIGSMUseDirection') </script>
</dl>
</dl>
<a name="GetDistanceType"></a><a name="GetDistanceType(DistanceType&amp;)"></a> <dt> o <b>GetDistanceType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDistanceType</b>(<td><script type="text/javascript"> activateLink('DistanceType','DistanceType&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the distance type : geodesic or euclidean.
 Default is Geodesic.
 Geodesic means that the distance is measured with a curvilinear abscissa
 Euclidean means that the point is created by intersection between the reference curve and a circle
         (whose radius is the length defined above).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>    distance type  enum {Geodesic, Euclidean}</dd>
</dl>
</dl>
</dl>
<a name="GetLength"></a><a name="GetLength(CATICkeParm_var&amp;)"></a> <dt> o <b>GetLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLength</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oDistance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the distance.
   
<dl>
</dl>
</dl>
<a name="GetOnCurveType"></a><a name="GetOnCurveType(int&amp;)"></a> <dt> o <b>GetOnCurveType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOnCurveType</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oOnCurveType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the type for point created on curve.
   
<dl>
</dl>
</dl>
<a name="GetOrientation"></a><a name="GetOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the orientation.
 Orientation = TRUE means that distance (length or ratio) is measured :
 - in the other orientation of the curve, when a reference point has been set,
 - in the other orientation of the curve and from the other extremity, when no reference point has been set.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd>      orientation</dd>
</dl>
</dl>
</dl>
<a name="GetReferencePoint"></a><a name="GetReferencePoint(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetReferencePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReferencePoint</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oRefPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the reference point.
 If the point does not lie on the curve, the point on the curve 
 with the smallest distance to this point is taken.
   
<dl>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oSupport</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSupport</tt>
   <dd>       reference curve</dd>
</dl>
</dl>
</dl>
<a name="InvertOrientation"></a><a name="InvertOrientation()"></a> <dt> o <b>InvertOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InvertOrientation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the orientation.
</dl>
<a name="SetDirection"></a><a name="SetDirection(CATIGSMUseDirection_var&amp;)"></a> <dt> o <b>SetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDirection</b>(<td> const <script type="text/javascript"> activateLink('CATIGSMUseDirection_var','CATIGSMUseDirection_var&amp;')</script> <td><tt>iDirection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the direction from the reference point.
   
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIGSMUseDirection','','CATIGSMUseDirection') </script>
</dl>
</dl>
<a name="SetDistanceType"></a><a name="SetDistanceType(DistanceType)"></a> <dt> o <b>SetDistanceType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDistanceType</b>(<td> const <script type="text/javascript"> activateLink('DistanceType','DistanceType')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the distance type : geodesic or euclidean.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    distance type:   enum {Geodesic, Euclidean}</dd>
</dl>
</dl>
</dl>
<a name="SetLength"></a><a name="SetLength(CATICkeParm_var)"></a> <dt> o <b>SetLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLength</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDistance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the distance.
   
<dl>
</dl>
</dl>
<a name="SetOnCurveType"></a><a name="SetOnCurveType(int&amp;)"></a> <dt> o <b>SetOnCurveType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOnCurveType</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iOnCurveType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the type for point created on curve.
   
<dl>
</dl>
</dl>
<a name="SetOrientation"></a><a name="SetOrientation(CATGSMOrientation)"></a> <dt> o <b>SetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOrientation</b>(<td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the orientation.
 Orientation = TRUE means that distance (length or ratio) is measured :
 - in the other orientation of the curve, when a reference point has been set,
 - in the other orientation of the curve and from the other extremity, when no reference point has been set.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd>      orientation</dd>
</dl>
</dl>
</dl>
<a name="SetReferencePoint"></a><a name="SetReferencePoint(CATIMmiMechanicalFeature_var)"></a> <dt> o <b>SetReferencePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetReferencePoint</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script> <td><tt>iRefPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the reference point.
 If the point does not lie on the curve, the point on the curve 
 with the smallest distance to this point is taken.
   
<dl>
</dl>
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATIMmiMechanicalFeature_var)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSupport</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script> <td><tt>iSupport</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd>       reference curve</dd>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="DistanceType"> <dt> o <b>DistanceType</b>
<dl>
  <dd>
<pre>
enum <b>DistanceType</b> {
  Geodesic,
  Euclidean
}
</pre>
 Different kinds of distance types.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Geodesic</tt>
   <dd>     geodesic computation
   </dd>
    <dt><tt> Euclidean</tt>
   <dd> Geodesic     euclidean  computation</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMUsePointOnCurve.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGSMUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

