<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATGSMUseItf Interface CATIGSMUseWorkingSupportFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATGSMUseItf.htm" href="../CATGSMUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATGSMUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIGSMUseWorkingSupportFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATGSMUseItf Interface CATIGSMUseWorkingSupportFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMUseWorkingSupportFactory_58821','CATIGSMUseWorkingSupportFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMUseWorkingSupportFactory</b>
</p>
<p>
<b><i> Factory allowing to create working support objects.</i></b><br>

 <b>Role</b>: Allows to create Working support set and working supports 
 <br> Working support set is the tool aggregated to the part for grouping Working supports 
 <br> several Working supports  can be created , one is current 
 <br> Note: the supports can be either planes or surfaces.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Create3DFurtiveGrid()"><b>Create3DFurtiveGrid</b></a>()
<dd>   Creates a 3D Furtive Grid.
 <dt> o 
    <a href="#CreateCartesianGrid()"><b>CreateCartesianGrid</b></a>()
<dd>   Creates a cartesian grid.
 <dt> o 
    <a href="#CreateWorkingSupport(CATIMmiMechanicalFeature_var&amp;,CATIGSMUseWorkingSupport::GridType)"><b>CreateWorkingSupport</b></a>(CATIMmiMechanicalFeature_var&amp;,CATIGSMUseWorkingSupport::GridType)
<dd>    Creates a working support.
 <dt> o 
    <a href="#GetWorkingSupportSet(int)"><b>GetWorkingSupportSet</b></a>(int)
<dd>    Gets or creates a working support set
   
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Create3DFurtiveGrid"></a><a name="Create3DFurtiveGrid()"></a> <dt> o <b>Create3DFurtiveGrid</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMUse3DFurtiveGrid','CATIGSMUse3DFurtiveGrid_var')</script>  <b>Create3DFurtiveGrid</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Creates a 3D Furtive Grid.
</dl>
<a name="CreateCartesianGrid"></a><a name="CreateCartesianGrid()"></a> <dt> o <b>CreateCartesianGrid</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMUseCartesianGrid','CATIGSMUseCartesianGrid_var')</script>  <b>CreateCartesianGrid</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Creates a cartesian grid.
   <br> By default, the created grid is visible
   <br> Note: Cartesian grid should  necessary be  associated to a planar working support 
	
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIGSMUseCartesianGrid','','CATIGSMUseCartesianGrid') </script>
</dl>
</dl>
<a name="CreateWorkingSupport"></a><a name="CreateWorkingSupport(CATIMmiMechanicalFeature_var&amp;,CATIGSMUseWorkingSupport::GridType)"></a> <dt> o <b>CreateWorkingSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMUseWorkingSupport','CATIGSMUseWorkingSupport_var')</script>  <b>CreateWorkingSupport</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ispSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIGSMUseWorkingSupport::GridType','CATIGSMUseWorkingSupport::GridType')</script> <td><tt>iType</tt><td><tt>=CATIGSMUseWorkingSupport::GSMNoGrid</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Creates a working support.
   <br> Note: a Working support set should exist before creation af a working support
	
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispSupport</tt>
   <dd>	  The reference support to take into account.
     <br> Note: the support can be either a plane or a surface.
	</dd>
    <dt><tt> iType</tt>
   <dd>	   The grid type
	</dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> CATIGSMUseWorkingSupport#
</dl>
</dl>
<a name="GetWorkingSupportSet"></a><a name="GetWorkingSupportSet(int)"></a> <dt> o <b>GetWorkingSupportSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMUseWorkingSupportSet','CATIGSMUseWorkingSupportSet_var')</script>  <b>GetWorkingSupportSet</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>WithCreation</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Gets or creates a working support set
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> WithCreation</tt>
   <dd>	   Tells if the set has to be created when it does not exist
      <br> Note: Only one Support set is created by Part document      
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       The working support set when it exists or has been created, NULL_var otherwise
	
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIGSMUseWorkingSupportSet','','CATIGSMUseWorkingSupportSet') </script>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMUseWorkingSupportFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGSMUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

