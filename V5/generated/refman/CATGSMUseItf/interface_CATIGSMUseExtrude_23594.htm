<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATGSMUseItf Interface CATIGSMUseExtrude</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATGSMUseItf.htm" href="../CATGSMUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATGSMUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIGSMUseExtrude"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATGSMUseItf Interface CATIGSMUseExtrude</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMUseExtrude_23594','CATIGSMUseExtrude','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMUseExtrude</b>
</p>
<p>
<b><i> Interface to extrusion feature.</i></b><br>

 <b>Role</b>: Allows you to access data of the Extrusion feature
 created by using  an element, a direction and two length values
 <p>  LICENSING INFORMATION: Creation of volume result requires GSO License
 <br> if GSO License is not granted , settting of volume context has not effect 
 <br>  
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIGSMUseFactory','CreateExtrude','CATIGSMUseFactory.CreateExtrude') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetContext(CATGSMFeatureContextType&amp;)"><b>GetContext</b></a>(CATGSMFeatureContextType&amp;)
<dd>  Gets the context of the extrude.
 <dt> o 
    <a href="#GetDir()"><b>GetDir</b></a>()
<dd>  Gets the extrusion direction.
 <dt> o 
    <a href="#GetFirstLimitType(CATGSMFeatureLimitType&amp;)"><b>GetFirstLimitType</b></a>(CATGSMFeatureLimitType&amp;)
<dd>  Gets First Limit Type.
 <dt> o 
    <a href="#GetFirstLimitValue(double&amp;)"><b>GetFirstLimitValue</b></a>(double&amp;)
<dd>  Gets the first length value.
 <dt> o 
    <a href="#GetFirstLimitValue(CATICkeParm_var&amp;)"><b>GetFirstLimitValue</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the first length value.
 <dt> o 
    <a href="#GetFirstUptoElement(CATIMmiMechanicalFeature_var&amp;)"><b>GetFirstUptoElement</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the up-to element used as Limit1.
 <dt> o 
    <a href="#GetOrientation(CATBoolean&amp;)"><b>GetOrientation</b></a>(CATBoolean&amp;)
<dd>  Gets the orientation of the extrude.
 <dt> o 
    <a href="#GetProfil()"><b>GetProfil</b></a>()
<dd>  Gets the feature that has been extruded.
 <dt> o 
    <a href="#GetSecondLimitType(CATGSMFeatureLimitType&amp;)"><b>GetSecondLimitType</b></a>(CATGSMFeatureLimitType&amp;)
<dd>  Gets Second Limit Type.
 <dt> o 
    <a href="#GetSecondLimitValue(double&amp;)"><b>GetSecondLimitValue</b></a>(double&amp;)
<dd>  Gets the second length value.
 <dt> o 
    <a href="#GetSecondLimitValue(CATICkeParm_var&amp;)"><b>GetSecondLimitValue</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the second length value.
 <dt> o 
    <a href="#GetSecondUptoElement(CATIMmiMechanicalFeature_var&amp;)"><b>GetSecondUptoElement</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the up-to element used as Limit2.
 <dt> o 
    <a href="#GetSymmetricalExtension(CATBoolean&amp;)"><b>GetSymmetricalExtension</b></a>(CATBoolean&amp;)
<dd>  Gets whether the symmetrical extension of Extrude Lengths is active.
 <dt> o 
    <a href="#InvertOrientation()"><b>InvertOrientation</b></a>()
<dd>  Inverts the orientation of the extrude.
 <dt> o 
    <a href="#SetContext(CATGSMFeatureContextType)"><b>SetContext</b></a>(CATGSMFeatureContextType)
<dd>  Sets the context of the extrude.
 <dt> o 
    <a href="#SetDir(CATIGSMUseDirection_var)"><b>SetDir</b></a>(CATIGSMUseDirection_var)
<dd>  Sets the direction of the extrusion.
 <dt> o 
    <a href="#SetFirstLimitType(CATGSMFeatureLimitType&amp;)"><b>SetFirstLimitType</b></a>(CATGSMFeatureLimitType&amp;)
<dd>  Sets First Limit Type.
 <dt> o 
    <a href="#SetFirstLimitValue(double)"><b>SetFirstLimitValue</b></a>(double)
<dd>  Sets the first length value.
 <dt> o 
    <a href="#SetFirstLimitValue(CATICkeParm_var)"><b>SetFirstLimitValue</b></a>(CATICkeParm_var)
<dd>  Sets the first length value.
 <dt> o 
    <a href="#SetFirstUptoElement(CATIMmiMechanicalFeature_var&amp;)"><b>SetFirstUptoElement</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Sets the up-to element to be used as Limit1.
 <dt> o 
    <a href="#SetOrientation(CATBoolean)"><b>SetOrientation</b></a>(CATBoolean)
<dd>  Sets  the orientation of the extrude.
 <dt> o 
    <a href="#SetProfil(CATIMmiMechanicalFeature_var)"><b>SetProfil</b></a>(CATIMmiMechanicalFeature_var)
<dd>  Sets the element that will be extruded.
 <dt> o 
    <a href="#SetSecondLimitType(CATGSMFeatureLimitType&amp;)"><b>SetSecondLimitType</b></a>(CATGSMFeatureLimitType&amp;)
<dd>  Sets Second Limit Type.
 <dt> o 
    <a href="#SetSecondLimitValue(double)"><b>SetSecondLimitValue</b></a>(double)
<dd>  Sets the second length value.
 <dt> o 
    <a href="#SetSecondLimitValue(CATICkeParm_var)"><b>SetSecondLimitValue</b></a>(CATICkeParm_var)
<dd>  Sets the second length value.
 <dt> o 
    <a href="#SetSecondUptoElement(CATIMmiMechanicalFeature_var&amp;)"><b>SetSecondUptoElement</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Sets the up-to element to be used as Limit2.
 <dt> o 
    <a href="#SetSymmetricalExtension(CATBoolean)"><b>SetSymmetricalExtension</b></a>(CATBoolean)
<dd>  Sets the symmetrical extension of Extrude Lengths (Limit 2 = -Limit 1).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetContext"></a><a name="GetContext(CATGSMFeatureContextType&amp;)"></a> <dt> o <b>GetContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContext</b>(<td><script type="text/javascript"> activateLink('CATGSMFeatureContextType','CATGSMFeatureContextType&amp;')</script> <td><tt>oContext</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the context of the extrude.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oContextType</tt>
   <dd>      CATGSMSurfaceCtxt if the result is surface, CATGSMVolumeCtxt if it is volume
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATGSMFeatureContextType','','CATGSMFeatureContextType') </script>
</dl>
</dl>
<a name="GetDir"></a><a name="GetDir()"></a> <dt> o <b>GetDir</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMUseDirection','CATIGSMUseDirection_var')</script>  <b>GetDir</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the extrusion direction.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>       direction
</dl>
</dl>
<a name="GetFirstLimitType"></a><a name="GetFirstLimitType(CATGSMFeatureLimitType&amp;)"></a> <dt> o <b>GetFirstLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstLimitType</b>(<td><script type="text/javascript"> activateLink('CATGSMFeatureLimitType','CATGSMFeatureLimitType&amp;')</script> <td><tt>oLim1Type</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets First Limit Type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLim1Type</tt>
   <dd>      Limit Type specified
 enum CATGSMFeatureLimitType { CATGSMFeatureLimitType_Unknown = 0,
</dd>
</dl>
</dl>
</dl>
<a name="GetFirstLimitValue"></a><a name="GetFirstLimitValue(double&amp;)"></a> <dt> o <b>GetFirstLimitValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstLimitValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oOfs1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first length value. For surface extrude, if limit type is upto, limit's value is not used.
 In case of Volume Extrude, if the up-to element is specified, value of Limit will act as offset value from that upto element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Ofs1</tt>
   <dd>      first length value</dd>
</dl>
</dl>
</dl>
<a name="GetFirstLimitValue"></a><a name="GetFirstLimitValue(CATICkeParm_var&amp;)"></a> <dt> o <b>GetFirstLimitValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstLimitValue</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oOfs1</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first length value. For surface extrude, if limit type is upto, limit's value is not used.
 In case of Volume Extrude, if the up-to element is specified, value of Limit will act as offset value from that upto element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Ofs1</tt>
   <dd>      first length value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script>
</dl>
</dl>
<a name="GetFirstUptoElement"></a><a name="GetFirstUptoElement(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetFirstUptoElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstUptoElement</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ohUptoElem1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the up-to element used as Limit1.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohUptoElem1</tt>
   <dd>      up-to element used to limit extrusion</dd>
</dl>
</dl>
</dl>
<a name="GetOrientation"></a><a name="GetOrientation(CATBoolean&amp;)"></a> <dt> o <b>GetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOrientation</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oOrient</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the orientation of the extrude.
  TRUE means that the natural  orientation of the direction
  is the right one. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrient</tt>
   <dd>      Extrude orientation</dd>
</dl>
</dl>
</dl>
<a name="GetProfil"></a><a name="GetProfil()"></a> <dt> o <b>GetProfil</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script>  <b>GetProfil</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the feature that has been extruded.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>       extruded feature
</dl>
</dl>
<a name="GetSecondLimitType"></a><a name="GetSecondLimitType(CATGSMFeatureLimitType&amp;)"></a> <dt> o <b>GetSecondLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondLimitType</b>(<td><script type="text/javascript"> activateLink('CATGSMFeatureLimitType','CATGSMFeatureLimitType&amp;')</script> <td><tt>oLim2Type</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets Second Limit Type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLim2Type</tt>
   <dd>      Limit Type specified
 enum CATGSMFeatureLimitType { CATGSMFeatureLimitType_Unknown = 0,
</dd>
</dl>
</dl>
</dl>
<a name="GetSecondLimitValue"></a><a name="GetSecondLimitValue(double&amp;)"></a> <dt> o <b>GetSecondLimitValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondLimitValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oOfs2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second length value. For surface extrude, if limit type is upto, limit's value is not used.
 In case of Volume Extrude, if the up-to element is specified, value of Limit will act as offset value from that upto element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Ofs2</tt>
   <dd>      first length value</dd>
</dl>
</dl>
</dl>
<a name="GetSecondLimitValue"></a><a name="GetSecondLimitValue(CATICkeParm_var&amp;)"></a> <dt> o <b>GetSecondLimitValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondLimitValue</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oOfs2</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second length value. For surface extrude, if limit type is upto, limit's value is not used.
 In case of Volume Extrude, if the up-to element is specified, value of Limit will act as offset value from that upto element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Ofs2</tt>
   <dd>      second length value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script>
</dl>
</dl>
<a name="GetSecondUptoElement"></a><a name="GetSecondUptoElement(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetSecondUptoElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondUptoElement</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ohUptoElem2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the up-to element used as Limit2.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohUptoElem2</tt>
   <dd>      up-to element used to limit extrusion</dd>
</dl>
</dl>
</dl>
<a name="GetSymmetricalExtension"></a><a name="GetSymmetricalExtension(CATBoolean&amp;)"></a> <dt> o <b>GetSymmetricalExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSymmetricalExtension</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oSym</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets whether the symmetrical extension of Extrude Lengths is active.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSym</tt>
   <dd>       Symetry flag</dd>
</dl>
</dl>
</dl>
<a name="InvertOrientation"></a><a name="InvertOrientation()"></a> <dt> o <b>InvertOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InvertOrientation</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the orientation of the extrude.
 TRUE means that the direction is inverted
</dl>
<a name="SetContext"></a><a name="SetContext(CATGSMFeatureContextType)"></a> <dt> o <b>SetContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetContext</b>(<td> const <script type="text/javascript"> activateLink('CATGSMFeatureContextType','CATGSMFeatureContextType')</script> <td><tt>iContext</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the context of the extrude.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContextType</tt>
   <dd>      CATGSMSurfaceCtxt to generate a surface, CATGSMVolumeCtxt (requires GSO License) to generate a volume
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATGSMFeatureContextType','','CATGSMFeatureContextType') </script>
</dl>
</dl>
<a name="SetDir"></a><a name="SetDir(CATIGSMUseDirection_var)"></a> <dt> o <b>SetDir</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDir</b>(<td> const <script type="text/javascript"> activateLink('CATIGSMUseDirection','CATIGSMUseDirection_var')</script> <td><tt>iElem1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the direction of the extrusion.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem1</tt>
   <dd>      Direction of the extrusion
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIGSMUseDirection','','CATIGSMUseDirection') </script>
</dl>
</dl>
<a name="SetFirstLimitType"></a><a name="SetFirstLimitType(CATGSMFeatureLimitType&amp;)"></a> <dt> o <b>SetFirstLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstLimitType</b>(<td> const <script type="text/javascript"> activateLink('CATGSMFeatureLimitType','CATGSMFeatureLimitType&amp;')</script> <td><tt>iLim1Type</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets First Limit Type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLim1Type</tt>
   <dd>      Limit Type specified
 enum CATGSMFeatureLimitType { CATGSMFeatureLimitType_Unknown = 0,
</dd>
</dl>
</dl>
</dl>
<a name="SetFirstLimitValue"></a><a name="SetFirstLimitValue(double)"></a> <dt> o <b>SetFirstLimitValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstLimitValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iElem1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first length value. For surface extrude, if limit type is upto, limit's value is not used.
 In case of Volume Extrude, if the up-to element is specified, value of Limit will act as offset value from that upto element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem1</tt>
   <dd>      New first length value</dd>
</dl>
</dl>
</dl>
<a name="SetFirstLimitValue"></a><a name="SetFirstLimitValue(CATICkeParm_var)"></a> <dt> o <b>SetFirstLimitValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstLimitValue</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iOfs1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first length value. For surface extrude, if limit type is upto, limit's value is not used.
 In case of Volume Extrude, if the up-to element is specified, value of Limit will act as offset value from that upto element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOfs1</tt>
   <dd>      New first length value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script>
</dl>
</dl>
<a name="SetFirstUptoElement"></a><a name="SetFirstUptoElement(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>SetFirstUptoElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstUptoElement</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ihUptoElem1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the up-to element to be used as Limit1.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihUptoElem1</tt>
   <dd>      up-to element which is used to limit extrusion</dd>
</dl>
</dl>
</dl>
<a name="SetOrientation"></a><a name="SetOrientation(CATBoolean)"></a> <dt> o <b>SetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOrientation</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOrient</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets  the orientation of the extrude.
 TRUE means that the direction is inverted
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrient</tt>
   <dd>      TRUE or FALSE</dd>
</dl>
</dl>
</dl>
<a name="SetProfil"></a><a name="SetProfil(CATIMmiMechanicalFeature_var)"></a> <dt> o <b>SetProfil</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetProfil</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script> <td><tt>iElem1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the element that will be extruded.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem1</tt>
   <dd>      Element to be extruded</dd>
</dl>
</dl>
</dl>
<a name="SetSecondLimitType"></a><a name="SetSecondLimitType(CATGSMFeatureLimitType&amp;)"></a> <dt> o <b>SetSecondLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondLimitType</b>(<td> const <script type="text/javascript"> activateLink('CATGSMFeatureLimitType','CATGSMFeatureLimitType&amp;')</script> <td><tt>iLim2Type</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets Second Limit Type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLim2Type</tt>
   <dd>      Limit Type specified
 enum CATGSMFeatureLimitType { CATGSMFeatureLimitType_Unknown = 0,
</dd>
</dl>
</dl>
</dl>
<a name="SetSecondLimitValue"></a><a name="SetSecondLimitValue(double)"></a> <dt> o <b>SetSecondLimitValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondLimitValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iElem1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second length value. For surface extrude, if limit type is upto, limit's value is not used.
 In case of Volume Extrude, if the up-to element is specified, value of Limit will act as offset value from that upto element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem1</tt>
   <dd>      New second length value</dd>
</dl>
</dl>
</dl>
<a name="SetSecondLimitValue"></a><a name="SetSecondLimitValue(CATICkeParm_var)"></a> <dt> o <b>SetSecondLimitValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondLimitValue</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iOfs2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second length value. For surface extrude, if limit type is upto, limit's value is not used.
 In case of Volume Extrude, if the up-to element is specified, value of Limit will act as offset value from that upto element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOfs2</tt>
   <dd>      New second length value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script>
</dl>
</dl>
<a name="SetSecondUptoElement"></a><a name="SetSecondUptoElement(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>SetSecondUptoElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondUptoElement</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ihUptoElem2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the up-to element to be used as Limit2.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihUptoElem2</tt>
   <dd>      up-to element which is used to limit extrusion</dd>
</dl>
</dl>
</dl>
<a name="SetSymmetricalExtension"></a><a name="SetSymmetricalExtension(CATBoolean)"></a> <dt> o <b>SetSymmetricalExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSymmetricalExtension</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSym</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the symmetrical extension of Extrude Lengths (Limit 2 = -Limit 1).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSym</tt>
   <dd>       Symetry flag</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMUseExtrude.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGSMUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

