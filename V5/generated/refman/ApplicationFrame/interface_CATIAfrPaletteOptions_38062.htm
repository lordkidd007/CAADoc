<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ApplicationFrame Interface CATIAfrPaletteOptions</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ApplicationFrame.htm" href="../ApplicationFrame.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ApplicationFrame";	}
		function getCurrentObjectName() { 
 	return "CATIAfrPaletteOptions"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ApplicationFrame Interface CATIAfrPaletteOptions</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIAfrPaletteOptions_38062','CATIAfrPaletteOptions','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIAfrPaletteOptions</b>
</p>
<p>
<b><i> Interface for workbenches to dynamically fill the Tools Palette.</i></b><br>

 <b>Role</b>: The Tools Palette is a special toolbar which updates dynamically when:
 <ul>
  <li>Entering a workbench. The workbench implements this interface.</li>
 <li>Executing a command. The command 
 implements the <script type="text/javascript"> activateLinkAnchor('CATIAfrCmdPaletteOptions','','CATIAfrCmdPaletteOptions') </script> interface. </li> </ul>
 To be exact, a workbench may implement <tt>CATIAfrPaletteOptions</tt> interface 
 using the <tt>WORKBENCHId<b>_Palette</b></tt> late type where 
 <tt>WORKBENCHId</tt> is the identifier of the workbench. This identifier is the third 
 argument of the 
<script type="text/javascript"> activateLinkAnchor('NewAccess','','NewAccess') </script> macro used in the 
<script type="text/javascript"> activateLinkAnchor('CATIWorkbench','CreateWorkbench','CATIWorkbench.CreateWorkbench') </script> method to define the contents of the workbench.
 <pre>
NewAccess(<b>CATCmdWorkbench</b>,pWORKBENCHId,WORKBENCHId);
</pre> 
 The Tools Palette contains <b>options</b>. 
 <br>An option is a 
<script type="text/javascript"> activateLinkAnchor('CATCommandHeader','','CATCommandHeader') </script> instance which may start a simple command  ( 
<script type="text/javascript"> activateLinkAnchor('CATCommand','','CATCommand') </script> ) ; avoid dialog ( 
<script type="text/javascript"> activateLinkAnchor('CATDlgDialog','','CATDlgDialog') </script> ) or state commands (<tt>CATStateCommand</tt>). Often a check header, encapsulated by the 
 
<script type="text/javascript"> activateLinkAnchor('CATAfrCheckHeaderAccessor','','CATAfrCheckHeaderAccessor') </script> class, is sufficient. <br>The 
<script type="text/javascript"> activateLinkAnchor('','GetPaletteOptions','GetPaletteOptions') </script> enables you to specify the options available when  the workbench is the current one.
 <br><br><b>About the</b> 
<script type="text/javascript"> activateLinkAnchor('CATCommandHeader','','CATCommandHeader') </script> </b>instance usage</b> <br>You may create the header instances at any time before the <tt>GetPaletteOptions</tt> 
 method is called or even inside this method. You have only one rule to respect, a
 command header instance must be created only once during the 
<script type="text/javascript"> activateLinkAnchor('CATFrmEditor','','CATFrmEditor') </script> life.  The 
<script type="text/javascript"> activateLinkAnchor('CATAfrGetCommandHeader','','CATAfrGetCommandHeader') </script> global fuction can be used to retrieve  a command header instance from its identifier, or to check its existence
 before its creation.

</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetPaletteOptions()"><b>GetPaletteOptions</b></a>()
<dd>   Gets the options to display when entering the workbench.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetPaletteOptions"></a><a name="GetPaletteOptions()"></a> <dt> o <b>GetPaletteOptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLISTP(CATCommandHeader)','CATLISTP(CATCommandHeader)')</script>  <b>GetPaletteOptions</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the options to display when entering the workbench. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   List of options.
 <br>The returned options are added to the Palette when the workbench 
 is started and they are automatically removed when leaving the workbench.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIAfrPaletteOptions.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATApplicationFrame</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

