<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ApplicationFrame Class CATCSO</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../ApplicationFrame.htm">This Framework</a>  <a href="class_CATBatchFrame_33211.htm">Previous</a>  <a href="class_CATCmdAccess_28342.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>ApplicationFrame Class CATCSO</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../System/class_CATEventSubscriber_67510.htm">System.CATEventSubscriber</a>
        |
        +---<a href="../System/class_CATCallbackManager_64582.htm">System.CATCallbackManager</a>
          |
          +---CATCSO
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATCSO</b>
</p>
<p>
<b><i> Class containing the selection.</i></b><br>

 <b>Role</b>: This class stores a list of the currently selected
 elements. There is only one instance of this class by document. A pointer
 to this class is returned by <a href="../ApplicationFrame/class_CATFrmEditor_29348.htm#GetCSO">CATFrmEditor.GetCSO</a> method. Use this class to add or remove elements from the selection.
 <br> This class dispatches a 
<a href="../ApplicationFrame/class_CATCSOChangeNotification_115962.htm">CATCSOChangeNotification</a> event  when elements are added or removed from the selection.
 <br> Elements added to the selection are automatically highlighted. Elements
 removed from the selection are automatically unhighlighted.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../ApplicationFrame/class_CATFrmEditor_29348.htm">CATFrmEditor</a>, <a href="../Visualization/class_CATHSO_5952.htm">CATHSO</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATCSO()"><b>~CATCSO</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddElement(CATBaseUnknown*,int)"><b>AddElement</b></a>(CATBaseUnknown*,int)
<dd>  Adds an element to the selection.
 <dt> o 
    <a href="#AddSO(CATSO*,AddSOType)"><b>AddSO</b></a>(CATSO*,AddSOType)
<dd>  Adds a set of elements to the selection.
 <dt> o 
    <a href="#Contains(CATBaseUnknown*)"><b>Contains</b></a>(CATBaseUnknown*)
<dd>  Tells whether an element is contained in the list.
 <dt> o 
    <a href="#Empty(int)"><b>Empty</b></a>(int)
<dd>  Empties the selection.
 <dt> o 
    <a href="#GetSize()"><b>GetSize</b></a>()
<dd>  Returns the number of selected elements.
 <dt> o 
    <a href="#InitElementList()"><b>InitElementList</b></a>()
<dd>  Initializes the cursor to the begining of the element list.
 <dt> o 
    <a href="#Locate(CATBaseUnknown*)"><b>Locate</b></a>(CATBaseUnknown*)
<dd>  Returns the position of an element in the selection.
 <dt> o 
    <a href="#NextElement()"><b>NextElement</b></a>()
<dd>  Returns the element at cursor position.
 <dt> o 
    <a href="#RemoveElement(CATBaseUnknown*,int)"><b>RemoveElement</b></a>(CATBaseUnknown*,int)
<dd>  Removes an element from the selection.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#AddSOType"><b>AddSOType</b></a>
<dd>  Indicates how to add a set of elements to the selection.
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATCSO"></a><a name="~CATCSO()"></a> <dt> o <b>~CATCSO</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATCSO</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddElement"></a><a name="AddElement(CATBaseUnknown*,int)"></a> <dt> o <b>AddElement</b>

<dt>  <table><tr><td>  public void  <b>AddElement</b>(<td><a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>iPathElement</tt>,<tr><td></td><td>int <td><tt>iDispatchChange</tt><td><tt>=1</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Adds an element to the selection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathElement</tt>
   <dd>   The element to be added to the selection.
   <br><b>Legal values</b>: Any valid pointer to a </dd>
<a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement</a> instance.   <br><b>Cyclic reference</b>: A copy of <tt>iPathElement</tt> is kept and
   AddRef'ed. It is released either when the element is removed from the set,
   or when the set is deleted or emptied.
 
    <dt><tt> iDispatchChange</tt>
   <dd>   Request that a </dd>
<a href="../ApplicationFrame/class_CATCSOChangeNotification_115962.htm">CATCSOChangeNotification</a> event is sent after    the operation. If the element was already in the selection, the
   selection is not modified and the event is not sent.
   <br><b>Legal values</b>: 1 or a non null value to send the event, 0 to
   prevent sending it. 1 is the default.
</dl>
</dl>
</dl>
<a name="AddSO"></a><a name="AddSO(CATSO*,AddSOType)"></a> <dt> o <b>AddSO</b>

<dt>  <table><tr><td>  public void  <b>AddSO</b>(<td><a href="../Visualization/class_CATSO_4242.htm">CATSO*</a> <td><tt>iSO</tt>,<tr><td></td><td>AddSOType <td><tt>iType</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Adds a set of elements to the selection.
 <br><b>Role</b>: Fast way to add a set of elements to
 selection. An 
<a href="../ApplicationFrame/class_CATCSOChangeNotification_115962.htm">CATCSOChangeNotification</a> is dispatched at the end of the operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSO</tt>
   <dd>   The set of elements to be added to the selection.
   <br><b>Legal values</b>: Each element of the set must be a pointer
   to a </dd>
<a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement</a> instance.   <br><b>Cyclic reference</b>: A pointer to each element of the set, added 
   in the CSO, is kept and AddRef'ed as long as the element is in the selection.
 
    <dt><tt> iType</tt>
   <dd>   Indicates how the set is added to the selection.
   <br><b>Legal values</b>: It can be set to either <tt>CATCSO::Merge</tt>
   to perform an XOR merge with the selection or to <tt>CATCSO::Replace</tt>
   to replace the existing selection or to <tt>CATCSO::Add</tt> to extend
   the existing selection.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#AddSOType">AddSOType</a>
</dl>
</dl>
<a name="Contains"></a><a name="Contains(CATBaseUnknown*)"></a> <dt> o <b>Contains</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>Contains</b>(<td><a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt></tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Tells whether an element is contained in the list.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if the element is here or FALSE otherwise
</dl>
</dl>
<a name="Empty"></a><a name="Empty(int)"></a> <dt> o <b>Empty</b>

<dt>  <table><tr><td>  public void  <b>Empty</b>(<td>int <td><tt>iDispatchChange</tt><td><tt>=1</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Empties the selection.
 <br><b>Role</b>: Fast way to remove all elements from the selection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDispatchChange</tt>
   <dd>   Requests that a </dd>
<a href="../ApplicationFrame/class_CATCSOChangeNotification_115962.htm">CATCSOChangeNotification</a> event is dispatched at    the end of the operation.
   <br><b>Legal values</b>: 1 or a non null value to send the event, 0 to
   prevent sending it. 1 is the default.
</dl>
</dl>
</dl>
<a name="GetSize"></a><a name="GetSize()"></a> <dt> o <b>GetSize</b>

<dt>  <table><tr><td>  public int  <b>GetSize</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Returns the number of selected elements.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an integer value
</dl>
</dl>
<a name="InitElementList"></a><a name="InitElementList()"></a> <dt> o <b>InitElementList</b>

<dt>  <table><tr><td>  public void  <b>InitElementList</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Initializes the cursor to the begining of the element list.
 <br><b>Role</b>: Use <tt>InitElementList</tt> to initialize a
 loop on the selected elements. Then use 
<a href="#NextElement">NextElement</a> to return each element.
</dl>
<a name="Locate"></a><a name="Locate(CATBaseUnknown*)"></a> <dt> o <b>Locate</b>

<dt>  <table><tr><td>  public int  <b>Locate</b>(<td><a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>element</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Returns the position of an element in the selection.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    0 if the element is not in the list else its position. Indice in this list begins at 1.
</dl>
</dl>
<a name="NextElement"></a><a name="NextElement()"></a> <dt> o <b>NextElement</b>

<dt>  <table><tr><td>  public <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown *</a>  <b>NextElement</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Returns the element at cursor position.
 <br><b>Role</b>: Returns a pointer to the <tt>CATPathElement</tt>
   instance at the cursor position. Increments the cursor position of 1
   after the operation.
   <br> Use <tt>NextElement</tt> to loop on the selection. The following
   code sample may be used:
   <br>
   <code>
   <br>cso->InitElementList();
   <br>while (element = cso->NextElement())
   <br>{
   <br>  // element processing here
   <br>}</code>
   <br>
   <br>where <tt>cso</tt> is a pointer to a <tt>CATCSO</tt> instance.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The element at cursor position.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#InitElementList">InitElementList</a>
</dl>
</dl>
<a name="RemoveElement"></a><a name="RemoveElement(CATBaseUnknown*,int)"></a> <dt> o <b>RemoveElement</b>

<dt>  <table><tr><td>  public void  <b>RemoveElement</b>(<td><a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>iPathElement</tt>,<tr><td></td><td>int <td><tt>iDispatchChange</tt><td><tt>=1</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Removes an element from the selection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathElement</tt>
   <dd>   The element to be removed from the selection.
   <br><b>Legal values</b>: Any valid pointer to a </dd>
<a href="../VisualizationBase/class_CATPathElement_39932.htm">CATPathElement</a>   instance.
 
    <dt><tt> iDispatchChange</tt>
   <dd>   Requests that a </dd>
<a href="../ApplicationFrame/class_CATCSOChangeNotification_115962.htm">CATCSOChangeNotification</a> event is sent after   the operation. If the element was not in the selection, the
   selection is not modified and the event is not sent.
   <br><b>Legal values</b>: 1 or a non null value to send the event, 0 to
   prevent sending it. 1 is the default.
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="AddSOType"> <dt> o <b>AddSOType</b>
<dl>
  <dd>
<pre>
enum <b>AddSOType</b> {
  Merge,
  Replace,
  Add
}
</pre>
 Indicates how to add a set of elements to the selection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Merge</tt>
   <dd>   The operation follows a XOR type merge rule. If the element
   was not in the selection then it is added to the selection. If
   the element was in the selection then it is removed from the 
   selection.
 </dd>
    <dt><tt> Replace</tt>
   <dd>   The set of elements replaces the existing selection.
 </dd>
    <dt><tt> Add</tt>
   <dd>   The set of elements is added to the existing selection.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCSO.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATApplicationFrame</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
