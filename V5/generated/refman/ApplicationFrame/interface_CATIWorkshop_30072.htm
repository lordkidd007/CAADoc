<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ApplicationFrame Interface CATIWorkshop</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../ApplicationFrame.htm">This Framework</a>  <a href="interface_CATIWorkbenchTransition_110617.htm">Previous</a>  <a href="interface_CATInPlaceSite_38644.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>ApplicationFrame Interface CATIWorkshop</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIWorkshop
 </pre>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIWorkshop</b>
</p>
<p>
<b><i> Interface to create a workshop.</i></b><br>

 <b>Role</b>: The workshop is the object that gathers the tools to work on the document. 
 It may contain different workbenches. Tools are grouped in toolbars and menus. 
 These tools are commands which are handled by workshop and its workbenches by means of 
 command headers. 
 To be able to request its workshop, the document must contain an object which implements 
 the <a href="../ApplicationFrame/interface_CATIUIActivate_38354.htm">CATIUIActivate</a>  interface. <br><br>
 To enable the instanciation of the workshop you must:
 <ul>
 <li> Create a workshop factory interface which derives from 
<a href="../ObjectModelerBase/interface_CATIGenericFactory_66052.htm">CATIGenericFactory</a>. </li> <li> Implement this factory interface with the help of these two macros: 
<a href="../ApplicationFrame/define_CATDeclareWorkshopFactory_130653.htm">CATDeclareWorkshopFactory</a>  and 
<a href="../ApplicationFrame/define_CATImplementWorkshopFactory_154226.htm">CATImplementWorkshopFactory</a>. </li> </ul>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../ApplicationFrame/interface_CATIWorkbench_34136.htm">CATIWorkbench</a>, <a href="../ApplicationFrame/interface_CATIWorkbenchAddin_64426.htm">CATIWorkbenchAddin</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateCommands()"><b>CreateCommands</b></a>()
<dd>  Instantiates the command headers.
 <dt> o 
    <a href="#CreateWorkshop()"><b>CreateWorkshop</b></a>()
<dd>  Creates the workshop accesses.
 <dt> o 
    <a href="#GetAddinInterface()"><b>GetAddinInterface</b></a>()
<dd>  Returns the name of the interface exposed by the workshop to create add-ins.
 <dt> o 
    <a href="#GetWorkbenchInterface()"><b>GetWorkbenchInterface</b></a>()
<dd>  Returns the name of the interface exposed by the workshop to create workbenches.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateCommands"></a><a name="CreateCommands()"></a> <dt> o <b>CreateCommands</b>

<dt>  <table><tr><td>  public virtual void  <b>CreateCommands</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Instantiates the command headers.  
 <br><b>Role</b>: Each command you want to make available in your workshop or 
 workbench must have a command header. The command header holds the necessary 
 information to load the command, such as the name of the 
 shared library in which the command's executable code is located, the name of the 
 command class, and the data to pass to the command's code when this command 
 becomes the current one. The command header has resources for each command to display 
 such as the command name shown to the end user, its ToolTip displayed in a balloon, 
 its help message, and its icon.
 <br>Each instance of header is deleted by CATIA.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../ApplicationFrame/class_CATCommandHeader_50982.htm">CATCommandHeader</a>
</dl>
</dl>
<a name="CreateWorkshop"></a><a name="CreateWorkshop()"></a> <dt> o <b>CreateWorkshop</b>

<dt>  <table><tr><td>  public virtual <a href="../ApplicationFrame/class_CATCmdWorkshop_40900.htm">CATCmdWorkshop *</a>  <b>CreateWorkshop</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Creates the workshop accesses.
 <br><b>Role</b>: Creates the containers for the workshop, the menubar, the menus, and the toolbars, 
 the starters for the commands, and arranges the commands in the menus and toolbars.
 With the 
<a href="../ApplicationFrame/define_NewAccess_17324.htm">NewAccess</a> macro you have explanations to create  each  component of the workshop and how to arrange it. 
 <br><b>Warning</b>:
 The workshop's name must be the same as the class implementing this interface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The workshop's container .
</dl>
</dl>
<a name="GetAddinInterface"></a><a name="GetAddinInterface()"></a> <dt> o <b>GetAddinInterface</b>

<dt>  <table><tr><td>  public virtual <a href="../CATIAApplicationFrame/typedef_CATClassId_19352.htm">CATClassId</a>  <b>GetAddinInterface</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns the name of the interface exposed by the workshop to create add-ins.
 <br><b>Role</b>: To enable client applications of your workshop to add their 
 own addins , you should provide an interface that the client application will implement. 
 This interface should derive from the 
<a href="../ApplicationFrame/interface_CATIWorkbenchAddin_64426.htm">CATIWorkbenchAddin</a> interface.  <br><b>Warning</b>: The name of this interface must be pppIxxx<b>Addin</b>, where 
 ppp is your application prefix (such as CAT for CATIA) and xxx is the name of your 
 workshop.
</dl>
<a name="GetWorkbenchInterface"></a><a name="GetWorkbenchInterface()"></a> <dt> o <b>GetWorkbenchInterface</b>

<dt>  <table><tr><td>  public virtual <a href="../CATIAApplicationFrame/typedef_CATClassId_19352.htm">CATClassId</a>  <b>GetWorkbenchInterface</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns the name of the interface exposed by the workshop to create workbenches.
 <br><b>Role</b>: To enable client applications of your workshop to add their 
 own workbenches, you should provide an interface that the client application will implement. 
 This interface should derive from the 
<a href="../ApplicationFrame/interface_CATIWorkbench_34136.htm">CATIWorkbench</a> interface. Each implementation  of this interface is a workbench of this workshop.
 <br><b>Warning</b>: The name of this interface must be <b>CATI</b>xxx<b>Configuration</b>, where xxx 
 is the name of your workshop.
</dl>
<hr>
 This object is included in the file: <b>CATIWorkshop.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATApplicationFrame</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
