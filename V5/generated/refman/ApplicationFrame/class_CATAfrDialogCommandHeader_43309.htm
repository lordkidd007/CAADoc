<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ApplicationFrame Class CATAfrDialogCommandHeader</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ApplicationFrame.htm" href="../ApplicationFrame.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ApplicationFrame";	}
		function getCurrentObjectName() { 
 	return "CATAfrDialogCommandHeader"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ApplicationFrame <script type="text/javascript" > writeClassCharacteristic(); </script> CATAfrDialogCommandHeader</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAfrDialogCommandHeader_43309','CATAfrDialogCommandHeader','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATAfrDialogCommandHeader</b>
</p>
<p>
<b><i> Base class to create a command header with a customized representation.</i></b><br>

 <b>Role:</b> This class enables you to create a command header with a  
 customized representation. It means a representation which will be not the 
 default one: a push button in a toolbar, and a push item in the
 menu bar or a contextual menu. 
 <p> To do that, you should implement the <script type="text/javascript"> activateLinkAnchor('CATIAfrCommandHeaderRep','','CATIAfrCommandHeaderRep') </script> interface on the class deriving of <tt>CATAfrDialogCommandHeader</tt>. This interface 
 enables you to provide your specific representation in the toolbar, or/and the menubar, or/and 
 the contextual menu. This representation is an instance of a class deriving of
 the 
<script type="text/javascript"> activateLinkAnchor('CATAfrCommandHeaderRep','','CATAfrCommandHeaderRep') </script> class.</p> <br>The 
<script type="text/javascript"> activateLinkAnchor('CATCommand','','CATCommand') </script> class describes how to create a customized command header.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAfrDialogCommandHeader(CATCommandHeader*)"><b>CATAfrDialogCommandHeader</b></a>(CATCommandHeader*)
<dd>  Constructs a command header instance.
 <dt> o 
    <a href="#CATAfrDialogCommandHeader(CATString&amp;,int)"><b>CATAfrDialogCommandHeader</b></a>(CATString&amp;,int)
<dd>  Constructs a command header instance.
 <dt> o 
    <a href="#~CATAfrDialogCommandHeader()"><b>~CATAfrDialogCommandHeader</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Clone()"><b>Clone</b></a>()
<dd>     Clones the command header.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAfrDialogCommandHeader"></a><a name="CATAfrDialogCommandHeader(CATCommandHeader*)"></a> <dt> o <b>CATAfrDialogCommandHeader</b>

<dt>  <table><tr><td>  protected <script type="text/javascript"> activateLink('','')</script>  <b>CATAfrDialogCommandHeader</b>(<td><script type="text/javascript"> activateLink('CATCommandHeader','CATCommandHeader*')</script> <td><tt>iHeaderToCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a command header instance.
 <br<b>Role:</b>This method calls the 
<script type="text/javascript"> activateLinkAnchor('CATCommandHeader','','CATCommandHeader') </script> copy constructor.  In your derived class overwrite this method such that:
 
 <pre>
 MyHeader::MyHeader(CATCommandHeader * iHeaderToCopy):
                           CATAfrDialogCommandHeader(iHeaderToCopy)
 {
 }   
 </pre>
 This method is called by the 
<script type="text/javascript"> activateLinkAnchor('','Clone','Clone') </script> method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeaderToCopy</tt>
   <dd> The header to copy.</dd>
</dl>
</dl>
</dl>
<a name="CATAfrDialogCommandHeader"></a><a name="CATAfrDialogCommandHeader(CATString&amp;,int)"></a> <dt> o <b>CATAfrDialogCommandHeader</b>

<dt>  <table><tr><td>  protected <script type="text/javascript"> activateLink('','')</script>  <b>CATAfrDialogCommandHeader</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iHeaderIdentificator</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iState</tt><td><tt>= CATFrmAvailable</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a command header instance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeaderIdentificator</tt>
   <dd> The identificator of the command header class instance. It is the <tt>command</tt> 
 argument of the <tt>SetAccessCommand</tt> macro. It is used for NLS resources.   
 </dd>
    <dt><tt> iState</tt>
   <dd>    The command header state.
    <br><b>Legal values</b>: 
       <li> <tt>CATFrmAvailable</tt> (The default value) </li>
       <li> <tt>CATFrmUnavailable</tt> </li></dd>
</dl>
</dl>
</dl>
<a name="~CATAfrDialogCommandHeader"></a><a name="~CATAfrDialogCommandHeader()"></a> <dt> o <b>~CATAfrDialogCommandHeader</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAfrDialogCommandHeader</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Clone"></a><a name="Clone()"></a> <dt> o <b>Clone</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCommandHeader','CATCommandHeader *')</script>  <b>Clone</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
    Clones the command header.
 <br<b>Role:</b>This method calls the constructor with a <tt>CATCommandHeader</tt> 
  pointer as argument. In your derived class overwrite this method such that:
  
 <pre>
 CATCommandHeader * MyHeader::Clone ()                                  
 { 
   return new MyHeader(this); 
 }   
 </pre>
 You must never call a <tt>Clone</tt> method. This method is called by the "frame".
 Today, it is called for your CAA instances in only one case: when the command header 
 instance is created in an Add-in of the General workshop, refer to the 
 
<script type="text/javascript"> activateLinkAnchor('CATIAfrGeneralWksAddin','','CATIAfrGeneralWksAddin') </script> interface for more details about these Add-ins.  
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The new command header instance.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAfrDialogCommandHeader.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATApplicationFrame</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

