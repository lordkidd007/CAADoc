<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SpaceAnalysisInterfaces Interface CATISPASectioningSettingAtt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../SpaceAnalysisInterfaces.htm">This Framework</a>  <a href="interface_CATISPAMeasureSettingAtt_115104.htm">Previous</a>  <a href="interface_CATISpaEnvironment_67460.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>SpaceAnalysisInterfaces Interface CATISPASectioningSettingAtt</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATISPASectioningSettingAtt
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISPASectioningSettingAtt</b>
</p>
<p>
<b><i> Definition of all parameters in Sectioning functionality.</i></b><br>

 <p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetClippingMode(CatSectionClippingMode*)"><b>GetClippingMode</b></a>(CatSectionClippingMode*)
<dd>  Retrieves the ClippingMode attribute.
 <dt> o 
    <a href="#GetClippingModeInfo(CATSettingInfo*)"><b>GetClippingModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the ClippingMode parameter.
 <dt> o 
    <a href="#GetDisplayCutInWireframe(int*)"><b>GetDisplayCutInWireframe</b></a>(int*)
<dd>  Retrieves the DisplayCutInWireframe attribute.
 <dt> o 
    <a href="#GetDisplayCutInWireframeInfo(CATSettingInfo*)"><b>GetDisplayCutInWireframeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the DisplayCutInWireframe parameter.
 <dt> o 
    <a href="#GetGridAutoFiltering(int*)"><b>GetGridAutoFiltering</b></a>(int*)
<dd>  Retrieves the GridAutoFiltering attribute.
 <dt> o 
    <a href="#GetGridAutoFilteringInfo(CATSettingInfo*)"><b>GetGridAutoFilteringInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the GridAutoFiltering parameter.
 <dt> o 
    <a href="#GetGridAutoResize(int*)"><b>GetGridAutoResize</b></a>(int*)
<dd>  Retrieves the GridAutoResize attribute.
 <dt> o 
    <a href="#GetGridAutoResizeInfo(CATSettingInfo*)"><b>GetGridAutoResizeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the GridAutoResize parameter.
 <dt> o 
    <a href="#GetGridHeightStep(float*)"><b>GetGridHeightStep</b></a>(float*)
<dd>  Retrieves the GridHeightStep attribute.
 <dt> o 
    <a href="#GetGridHeightStepInfo(CATSettingInfo*)"><b>GetGridHeightStepInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the GridHeightStep parameter.
 <dt> o 
    <a href="#GetGridPositionMode(CatGridPositionMode*)"><b>GetGridPositionMode</b></a>(CatGridPositionMode*)
<dd>  Retrieves the GridPositionMode attribute.
 <dt> o 
    <a href="#GetGridPositionModeInfo(CATSettingInfo*)"><b>GetGridPositionModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the GridPositionMode parameter.
 <dt> o 
    <a href="#GetGridStyle(CatSectionGridStyle*)"><b>GetGridStyle</b></a>(CatSectionGridStyle*)
<dd>  Retrieves the GridStyle attribute.
 <dt> o 
    <a href="#GetGridStyleInfo(CATSettingInfo*)"><b>GetGridStyleInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the GridStyle parameter.
 <dt> o 
    <a href="#GetGridWidthStep(float*)"><b>GetGridWidthStep</b></a>(float*)
<dd>  Retrieves the GridWidthStep attribute.
 <dt> o 
    <a href="#GetGridWidthStepInfo(CATSettingInfo*)"><b>GetGridWidthStepInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the GridWidthStep parameter.
 <dt> o 
    <a href="#GetHidePlane(int*)"><b>GetHidePlane</b></a>(int*)
<dd>  Retrieves the HidePlane attribute.
 <dt> o 
    <a href="#GetHidePlaneInfo(CATSettingInfo*)"><b>GetHidePlaneInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the HidePlane parameter.
 <dt> o 
    <a href="#GetHideResult(int*)"><b>GetHideResult</b></a>(int*)
<dd>  Retrieves the HideResult attribute.
 <dt> o 
    <a href="#GetHideResultInfo(CATSettingInfo*)"><b>GetHideResultInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the HideResult parameter.
 <dt> o 
    <a href="#GetPlaneColor(unsigned int*)"><b>GetPlaneColor</b></a>(unsigned int*)
<dd>  Retrieves the PlaneColor attribute.
 <dt> o 
    <a href="#GetPlaneColorInfo(CATSettingInfo*)"><b>GetPlaneColorInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the PlaneColor parameter.
 <dt> o 
    <a href="#GetPlaneNormal(CatSectionPlaneNormal*)"><b>GetPlaneNormal</b></a>(CatSectionPlaneNormal*)
<dd>  Retrieves the PlaneNormal attribute.
 <dt> o 
    <a href="#GetPlaneNormalInfo(CATSettingInfo*)"><b>GetPlaneNormalInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the PlaneNormal parameter.
 <dt> o 
    <a href="#GetPlaneOrigin(CatSectionPlaneOrigin*)"><b>GetPlaneOrigin</b></a>(CatSectionPlaneOrigin*)
<dd>  Retrieves the PlaneOrigin attribute.
 <dt> o 
    <a href="#GetPlaneOriginInfo(CATSettingInfo*)"><b>GetPlaneOriginInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the PlaneOrigin parameter.
 <dt> o 
    <a href="#GetSectionFill(int*)"><b>GetSectionFill</b></a>(int*)
<dd>  Retrieves the SectionFill attribute.
 <dt> o 
    <a href="#GetSectionFillInfo(CATSettingInfo*)"><b>GetSectionFillInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the SectionFill parameter.
 <dt> o 
    <a href="#GetUpdateResult(int*)"><b>GetUpdateResult</b></a>(int*)
<dd>  Retrieves the UpdateResult attribute.
 <dt> o 
    <a href="#GetUpdateResultInfo(CATSettingInfo*)"><b>GetUpdateResultInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the UpdateResult parameter.
 <dt> o 
    <a href="#GetViewerAutoOpen(int*)"><b>GetViewerAutoOpen</b></a>(int*)
<dd>  Retrieves the ViewerAutoOpen attribute.
 <dt> o 
    <a href="#GetViewerAutoOpenInfo(CATSettingInfo*)"><b>GetViewerAutoOpenInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the ViewerAutoOpen parameter.
 <dt> o 
    <a href="#GetViewerAutoReframe(int*)"><b>GetViewerAutoReframe</b></a>(int*)
<dd>  Retrieves the ViewerAutoReframe attribute.
 <dt> o 
    <a href="#GetViewerAutoReframeInfo(CATSettingInfo*)"><b>GetViewerAutoReframeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the ViewerAutoReframe parameter.
 <dt> o 
    <a href="#GetViewerLock2D(int*)"><b>GetViewerLock2D</b></a>(int*)
<dd>  Retrieves the ViewerLock2D attribute.
 <dt> o 
    <a href="#GetViewerLock2DInfo(CATSettingInfo*)"><b>GetViewerLock2DInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the ViewerLock2D parameter.
 <dt> o 
    <a href="#GetWindowDefaultHeight(int&amp;)"><b>GetWindowDefaultHeight</b></a>(int&amp;)
<dd>  <br><b>Role</b>:Retrieve section window default height if the 
 window open mode is catSecWindow_DefaultSize
 
 <dt> o 
    <a href="#GetWindowDefaultHeightInfo(CATSettingInfo*)"><b>GetWindowDefaultHeightInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the WindowDefaultHeight parameter.
 <dt> o 
    <a href="#GetWindowDefaultWidth(int&amp;)"><b>GetWindowDefaultWidth</b></a>(int&amp;)
<dd>  <br><b>Role</b>:Retrieve section window default width if the 
 window open mode is catSecWindow_DefaultSize
 
 <dt> o 
    <a href="#GetWindowDefaultWidthInfo(CATSettingInfo*)"><b>GetWindowDefaultWidthInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the WindowDefaultWidth parameter.
 <dt> o 
    <a href="#GetWindowOpenMode(CatSecWindowOpenMode&amp;)"><b>GetWindowOpenMode</b></a>(CatSecWindowOpenMode&amp;)
<dd>   <br><b>Role</b>: Get section window open mode
 
 <dt> o 
    <a href="#GetWindowOpenModeInfo(CATSettingInfo*)"><b>GetWindowOpenModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the WindowOpenMode parameter.
 <dt> o 
    <a href="#SetClippingMode(CatSectionClippingMode*)"><b>SetClippingMode</b></a>(CatSectionClippingMode*)
<dd>  Sets the ClippingMode attribute.
 <dt> o 
    <a href="#SetClippingModeLock(unsigned char)"><b>SetClippingModeLock</b></a>(unsigned char)
<dd>   Locks or unlocks the ClippingMode parameter.
 <dt> o 
    <a href="#SetDisplayCutInWireframe(int*)"><b>SetDisplayCutInWireframe</b></a>(int*)
<dd>  Sets the DisplayCutInWireframe attribute.
 <dt> o 
    <a href="#SetDisplayCutInWireframeLock(unsigned char)"><b>SetDisplayCutInWireframeLock</b></a>(unsigned char)
<dd>   Locks or unlocks the DisplayCutInWireframe parameter.
 <dt> o 
    <a href="#SetGridAutoFiltering(int*)"><b>SetGridAutoFiltering</b></a>(int*)
<dd>  Sets the GridAutoFiltering attribute.
 <dt> o 
    <a href="#SetGridAutoFilteringLock(unsigned char)"><b>SetGridAutoFilteringLock</b></a>(unsigned char)
<dd>   Locks or unlocks the GridAutoFiltering parameter.
 <dt> o 
    <a href="#SetGridAutoResize(int*)"><b>SetGridAutoResize</b></a>(int*)
<dd>  Sets the GridAutoResize attribute.
 <dt> o 
    <a href="#SetGridAutoResizeLock(unsigned char)"><b>SetGridAutoResizeLock</b></a>(unsigned char)
<dd>   Locks or unlocks the GridAutoResize parameter.
 <dt> o 
    <a href="#SetGridHeightStep(float*)"><b>SetGridHeightStep</b></a>(float*)
<dd>  Sets the GridHeightStep attribute.
 <dt> o 
    <a href="#SetGridHeightStepLock(unsigned char)"><b>SetGridHeightStepLock</b></a>(unsigned char)
<dd>   Locks or unlocks the GridHeightStep parameter.
 <dt> o 
    <a href="#SetGridPositionMode(CatGridPositionMode*)"><b>SetGridPositionMode</b></a>(CatGridPositionMode*)
<dd>  Sets the GridPositionMode attribute.
 <dt> o 
    <a href="#SetGridPositionModeLock(unsigned char)"><b>SetGridPositionModeLock</b></a>(unsigned char)
<dd>   Locks or unlocks the GridPositionMode parameter.
 <dt> o 
    <a href="#SetGridStyle(CatSectionGridStyle*)"><b>SetGridStyle</b></a>(CatSectionGridStyle*)
<dd>  Sets the GridStyle attribute.
 <dt> o 
    <a href="#SetGridStyleLock(unsigned char)"><b>SetGridStyleLock</b></a>(unsigned char)
<dd>   Locks or unlocks the GridStyle parameter.
 <dt> o 
    <a href="#SetGridWidthStep(float*)"><b>SetGridWidthStep</b></a>(float*)
<dd>  Sets the GridWidthStep attribute.
 <dt> o 
    <a href="#SetGridWidthStepLock(unsigned char)"><b>SetGridWidthStepLock</b></a>(unsigned char)
<dd>   Locks or unlocks the GridWidthStep parameter.
 <dt> o 
    <a href="#SetHidePlane(int*)"><b>SetHidePlane</b></a>(int*)
<dd>  Sets the PlaneAutoHide attribute.
 <dt> o 
    <a href="#SetHidePlaneLock(unsigned char)"><b>SetHidePlaneLock</b></a>(unsigned char)
<dd>   Locks or unlocks the HidePlane parameter.
 <dt> o 
    <a href="#SetHideResult(int*)"><b>SetHideResult</b></a>(int*)
<dd>  Sets the HideResult attribute.
 <dt> o 
    <a href="#SetHideResultLock(unsigned char)"><b>SetHideResultLock</b></a>(unsigned char)
<dd>   Locks or unlocks the HideResult parameter.
 <dt> o 
    <a href="#SetPlaneColor(unsigned int*)"><b>SetPlaneColor</b></a>(unsigned int*)
<dd>  Sets the PlaneColor attribute.
 <dt> o 
    <a href="#SetPlaneColorLock(unsigned char)"><b>SetPlaneColorLock</b></a>(unsigned char)
<dd>   Locks or unlocks the PlaneColor parameter.
 <dt> o 
    <a href="#SetPlaneNormal(CatSectionPlaneNormal*)"><b>SetPlaneNormal</b></a>(CatSectionPlaneNormal*)
<dd>  Sets the PlaneNormal attribute.
 <dt> o 
    <a href="#SetPlaneNormalLock(unsigned char)"><b>SetPlaneNormalLock</b></a>(unsigned char)
<dd>   Locks or unlocks the PlaneNormal parameter.
 <dt> o 
    <a href="#SetPlaneOrigin(CatSectionPlaneOrigin*)"><b>SetPlaneOrigin</b></a>(CatSectionPlaneOrigin*)
<dd>  Sets the PlaneOrigin attribute.
 <dt> o 
    <a href="#SetPlaneOriginLock(unsigned char)"><b>SetPlaneOriginLock</b></a>(unsigned char)
<dd>   Locks or unlocks the PlaneOrigin parameter.
 <dt> o 
    <a href="#SetSectionFill(int*)"><b>SetSectionFill</b></a>(int*)
<dd>  Sets the SectionFill attribute.
 <dt> o 
    <a href="#SetSectionFillLock(unsigned char)"><b>SetSectionFillLock</b></a>(unsigned char)
<dd>   Locks or unlocks the SectionFill parameter.
 <dt> o 
    <a href="#SetUpdateResult(int*)"><b>SetUpdateResult</b></a>(int*)
<dd>  Sets the UpdateResult attribute.
 <dt> o 
    <a href="#SetUpdateResultLock(unsigned char)"><b>SetUpdateResultLock</b></a>(unsigned char)
<dd>   Locks or unlocks the UpdateResult parameter.
 <dt> o 
    <a href="#SetViewerAutoOpen(int*)"><b>SetViewerAutoOpen</b></a>(int*)
<dd>  Sets the ViewerAutoOpen attribute.
 <dt> o 
    <a href="#SetViewerAutoOpenLock(unsigned char)"><b>SetViewerAutoOpenLock</b></a>(unsigned char)
<dd>   Locks or unlocks the ViewerAutoOpen parameter.
 <dt> o 
    <a href="#SetViewerAutoReframe(int*)"><b>SetViewerAutoReframe</b></a>(int*)
<dd>  Sets the ViewerAutoReframe attribute.
 <dt> o 
    <a href="#SetViewerAutoReframeLock(unsigned char)"><b>SetViewerAutoReframeLock</b></a>(unsigned char)
<dd>   Locks or unlocks the ViewerAutoReframe parameter.
 <dt> o 
    <a href="#SetViewerLock2D(int*)"><b>SetViewerLock2D</b></a>(int*)
<dd>  Sets the ViewerLock2D attribute.
 <dt> o 
    <a href="#SetViewerLock2DLock(unsigned char)"><b>SetViewerLock2DLock</b></a>(unsigned char)
<dd>   Locks or unlocks the ViewerLock2D parameter.
 <dt> o 
    <a href="#SetWindowDefaultHeight(int)"><b>SetWindowDefaultHeight</b></a>(int)
<dd>  <br><b>Role</b>:Set the section window default height if the
 window open mode is catSecWindow_DefaultSize
 
 <dt> o 
    <a href="#SetWindowDefaultHeightLock(unsigned char)"><b>SetWindowDefaultHeightLock</b></a>(unsigned char)
<dd>   Locks or unlocks the WindowDefaultHeight parameter.
 <dt> o 
    <a href="#SetWindowDefaultWidth(int)"><b>SetWindowDefaultWidth</b></a>(int)
<dd>  <br><b>Role</b>:Set the section window default width if the
 window open mode is catSecWindow_DefaultSize
 
 <dt> o 
    <a href="#SetWindowDefaultWidthLock(unsigned char)"><b>SetWindowDefaultWidthLock</b></a>(unsigned char)
<dd>   Locks or unlocks the WindowDefaultWidth parameter.
 <dt> o 
    <a href="#SetWindowOpenMode(CatSecWindowOpenMode)"><b>SetWindowOpenMode</b></a>(CatSecWindowOpenMode)
<dd>  <br><b>Role</b>:Set the section window open mode
 
 <dt> o 
    <a href="#SetWindowOpenModeLock(unsigned char)"><b>SetWindowOpenModeLock</b></a>(unsigned char)
<dd>   Locks or unlocks the WindowOpenMode parameter.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetClippingMode"></a><a name="GetClippingMode(CatSectionClippingMode*)"></a> <dt> o <b>GetClippingMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetClippingMode</b>(<td>CatSectionClippingMode* <td><tt>oClippingMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the ClippingMode attribute.
</dl>
<a name="GetClippingModeInfo"></a><a name="GetClippingModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetClippingModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetClippingModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the ClippingMode parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetDisplayCutInWireframe"></a><a name="GetDisplayCutInWireframe(int*)"></a> <dt> o <b>GetDisplayCutInWireframe</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDisplayCutInWireframe</b>(<td>int* <td><tt>oDisplayCutInWireframe</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the DisplayCutInWireframe attribute.
</dl>
<a name="GetDisplayCutInWireframeInfo"></a><a name="GetDisplayCutInWireframeInfo(CATSettingInfo*)"></a> <dt> o <b>GetDisplayCutInWireframeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDisplayCutInWireframeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the DisplayCutInWireframe parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetGridAutoFiltering"></a><a name="GetGridAutoFiltering(int*)"></a> <dt> o <b>GetGridAutoFiltering</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridAutoFiltering</b>(<td>int* <td><tt>oGridAutoFiltering</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the GridAutoFiltering attribute.
</dl>
<a name="GetGridAutoFilteringInfo"></a><a name="GetGridAutoFilteringInfo(CATSettingInfo*)"></a> <dt> o <b>GetGridAutoFilteringInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridAutoFilteringInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the GridAutoFiltering parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetGridAutoResize"></a><a name="GetGridAutoResize(int*)"></a> <dt> o <b>GetGridAutoResize</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridAutoResize</b>(<td>int* <td><tt>oGridAutoResize</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the GridAutoResize attribute.
</dl>
<a name="GetGridAutoResizeInfo"></a><a name="GetGridAutoResizeInfo(CATSettingInfo*)"></a> <dt> o <b>GetGridAutoResizeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridAutoResizeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the GridAutoResize parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetGridHeightStep"></a><a name="GetGridHeightStep(float*)"></a> <dt> o <b>GetGridHeightStep</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridHeightStep</b>(<td>float* <td><tt>oGridHeightStep</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the GridHeightStep attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGridHeightStep</tt>
   <dd> The interval between two horizontal lines of the grid, expressed
 in the storage unit of the length magnitude.
 (see </dd>
<a href="../KnowledgeInterfaces/interface_CATICkeMagnitude_51192.htm">CATICkeMagnitude</a> for details).
</dl>
</dl>
</dl>
<a name="GetGridHeightStepInfo"></a><a name="GetGridHeightStepInfo(CATSettingInfo*)"></a> <dt> o <b>GetGridHeightStepInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridHeightStepInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the GridHeightStep parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetGridPositionMode"></a><a name="GetGridPositionMode(CatGridPositionMode*)"></a> <dt> o <b>GetGridPositionMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridPositionMode</b>(<td>CatGridPositionMode* <td><tt>oGridPositionMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the GridPositionMode attribute.
</dl>
<a name="GetGridPositionModeInfo"></a><a name="GetGridPositionModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetGridPositionModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridPositionModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the GridPositionMode parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetGridStyle"></a><a name="GetGridStyle(CatSectionGridStyle*)"></a> <dt> o <b>GetGridStyle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridStyle</b>(<td>CatSectionGridStyle* <td><tt>oGridStyle</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the GridStyle attribute.
</dl>
<a name="GetGridStyleInfo"></a><a name="GetGridStyleInfo(CATSettingInfo*)"></a> <dt> o <b>GetGridStyleInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridStyleInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the GridStyle parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetGridWidthStep"></a><a name="GetGridWidthStep(float*)"></a> <dt> o <b>GetGridWidthStep</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridWidthStep</b>(<td>float* <td><tt>oGridWidthStep</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the GridWidthStep attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGridWidthStep</tt>
   <dd> The interval between two vertical lines of the grid, expressed
 in the storage unit of the length magnitude.
 (see </dd>
<a href="../KnowledgeInterfaces/interface_CATICkeMagnitude_51192.htm">CATICkeMagnitude</a> for details).
</dl>
</dl>
</dl>
<a name="GetGridWidthStepInfo"></a><a name="GetGridWidthStepInfo(CATSettingInfo*)"></a> <dt> o <b>GetGridWidthStepInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetGridWidthStepInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the GridWidthStep parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetHidePlane"></a><a name="GetHidePlane(int*)"></a> <dt> o <b>GetHidePlane</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetHidePlane</b>(<td>int* <td><tt>oHidePlane</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the HidePlane attribute.
</dl>
<a name="GetHidePlaneInfo"></a><a name="GetHidePlaneInfo(CATSettingInfo*)"></a> <dt> o <b>GetHidePlaneInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetHidePlaneInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the HidePlane parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetHideResult"></a><a name="GetHideResult(int*)"></a> <dt> o <b>GetHideResult</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetHideResult</b>(<td>int* <td><tt>oHideResult</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the HideResult attribute.
</dl>
<a name="GetHideResultInfo"></a><a name="GetHideResultInfo(CATSettingInfo*)"></a> <dt> o <b>GetHideResultInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetHideResultInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the HideResult parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetPlaneColor"></a><a name="GetPlaneColor(unsigned int*)"></a> <dt> o <b>GetPlaneColor</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPlaneColor</b>(<td>unsigned int* <td><tt>oPlaneColor</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the PlaneColor attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioPlaneColor:</tt>
   <dd>  <b>Legal values</b>:
	<br><tt>Array of 3 unsigned int (R,G,B). </tt></dd>
</dl>
</dl>
</dl>
<a name="GetPlaneColorInfo"></a><a name="GetPlaneColorInfo(CATSettingInfo*)"></a> <dt> o <b>GetPlaneColorInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPlaneColorInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the PlaneColor parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetPlaneNormal"></a><a name="GetPlaneNormal(CatSectionPlaneNormal*)"></a> <dt> o <b>GetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPlaneNormal</b>(<td>CatSectionPlaneNormal* <td><tt>oPlaneNormal</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the PlaneNormal attribute.
</dl>
<a name="GetPlaneNormalInfo"></a><a name="GetPlaneNormalInfo(CATSettingInfo*)"></a> <dt> o <b>GetPlaneNormalInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPlaneNormalInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the PlaneNormal parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetPlaneOrigin"></a><a name="GetPlaneOrigin(CatSectionPlaneOrigin*)"></a> <dt> o <b>GetPlaneOrigin</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPlaneOrigin</b>(<td>CatSectionPlaneOrigin* <td><tt>oPlaneOrigin</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the PlaneOrigin attribute.
</dl>
<a name="GetPlaneOriginInfo"></a><a name="GetPlaneOriginInfo(CATSettingInfo*)"></a> <dt> o <b>GetPlaneOriginInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetPlaneOriginInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the PlaneOrigin parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetSectionFill"></a><a name="GetSectionFill(int*)"></a> <dt> o <b>GetSectionFill</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSectionFill</b>(<td>int* <td><tt>oSectionFill</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the SectionFill attribute.
</dl>
<a name="GetSectionFillInfo"></a><a name="GetSectionFillInfo(CATSettingInfo*)"></a> <dt> o <b>GetSectionFillInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSectionFillInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the SectionFill parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetUpdateResult"></a><a name="GetUpdateResult(int*)"></a> <dt> o <b>GetUpdateResult</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateResult</b>(<td>int* <td><tt>oUpdateResult</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the UpdateResult attribute.
</dl>
<a name="GetUpdateResultInfo"></a><a name="GetUpdateResultInfo(CATSettingInfo*)"></a> <dt> o <b>GetUpdateResultInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetUpdateResultInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the UpdateResult parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetViewerAutoOpen"></a><a name="GetViewerAutoOpen(int*)"></a> <dt> o <b>GetViewerAutoOpen</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetViewerAutoOpen</b>(<td>int* <td><tt>oViewerAutoOpen</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the ViewerAutoOpen attribute.
</dl>
<a name="GetViewerAutoOpenInfo"></a><a name="GetViewerAutoOpenInfo(CATSettingInfo*)"></a> <dt> o <b>GetViewerAutoOpenInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetViewerAutoOpenInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the ViewerAutoOpen parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetViewerAutoReframe"></a><a name="GetViewerAutoReframe(int*)"></a> <dt> o <b>GetViewerAutoReframe</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetViewerAutoReframe</b>(<td>int* <td><tt>oViewerAutoReframe</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the ViewerAutoReframe attribute.
</dl>
<a name="GetViewerAutoReframeInfo"></a><a name="GetViewerAutoReframeInfo(CATSettingInfo*)"></a> <dt> o <b>GetViewerAutoReframeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetViewerAutoReframeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the ViewerAutoReframe parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetViewerLock2D"></a><a name="GetViewerLock2D(int*)"></a> <dt> o <b>GetViewerLock2D</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetViewerLock2D</b>(<td>int* <td><tt>oViewerLock2D</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the ViewerLock2D attribute.
</dl>
<a name="GetViewerLock2DInfo"></a><a name="GetViewerLock2DInfo(CATSettingInfo*)"></a> <dt> o <b>GetViewerLock2DInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetViewerLock2DInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the ViewerLock2D parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetWindowDefaultHeight"></a><a name="GetWindowDefaultHeight(int&amp;)"></a> <dt> o <b>GetWindowDefaultHeight</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetWindowDefaultHeight</b>(<td>int&amp; <td><tt>oWindowDefaultHeight</tt>)=0  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>:Retrieve section window default height if the 
 window open mode is catSecWindow_DefaultSize
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWindowDefaultHeight</tt>
   <dd> </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK Successfully retieved the window open mode
      E_FAIL Failed to retrieved the window open mode
</dl>
</dl>
<a name="GetWindowDefaultHeightInfo"></a><a name="GetWindowDefaultHeightInfo(CATSettingInfo*)"></a> <dt> o <b>GetWindowDefaultHeightInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetWindowDefaultHeightInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the WindowDefaultHeight parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetWindowDefaultWidth"></a><a name="GetWindowDefaultWidth(int&amp;)"></a> <dt> o <b>GetWindowDefaultWidth</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetWindowDefaultWidth</b>(<td>int&amp; <td><tt>oWindowDefaultWidth</tt>)= 0  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>:Retrieve section window default width if the 
 window open mode is catSecWindow_DefaultSize
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWindowDefaultWidth</tt>
   <dd> </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK Successfully retieved the window open mode
      E_FAIL Failed to retrieved the window open mode
</dl>
</dl>
<a name="GetWindowDefaultWidthInfo"></a><a name="GetWindowDefaultWidthInfo(CATSettingInfo*)"></a> <dt> o <b>GetWindowDefaultWidthInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetWindowDefaultWidthInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the WindowDefaultWidth parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetWindowOpenMode"></a><a name="GetWindowOpenMode(CatSecWindowOpenMode&amp;)"></a> <dt> o <b>GetWindowOpenMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetWindowOpenMode</b>(<td>CatSecWindowOpenMode&amp; <td><tt>oWindowOpenMode</tt>) = 0  </table></dt>
<dl>
  <dd>
  <br><b>Role</b>: Get section window open mode
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWindowOpenMode</tt>
   <dd>	<b>Legal values</b>:
   <br><tt>catSecWindow_DefaultSize :</tt>Opens the sectioning window(s) with the default size specified in the Tools->Options.
   <br><tt>catSecWindow_TileVertically :</tt>Tiles the sectioning window(s) vertically in the viewer
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetWindowOpenModeInfo"></a><a name="GetWindowOpenModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetWindowOpenModeInfo</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetWindowOpenModeInfo</b>(<td><a href="../System/class_CATSettingInfo_40158.htm">CATSettingInfo*</a> <td><tt>oInfo</tt>)= 0  </table></dt>
<dl>
  <dd>
 Retrieves the state of the WindowOpenMode parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetClippingMode"></a><a name="SetClippingMode(CatSectionClippingMode*)"></a> <dt> o <b>SetClippingMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetClippingMode</b>(<td>CatSectionClippingMode* <td><tt>iClippingMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the ClippingMode attribute.
</dl>
<a name="SetClippingModeLock"></a><a name="SetClippingModeLock(unsigned char)"></a> <dt> o <b>SetClippingModeLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetClippingModeLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the ClippingMode parameter.
 <br><b>Role</b>: Locks or unlocks the ClippingMode parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetDisplayCutInWireframe"></a><a name="SetDisplayCutInWireframe(int*)"></a> <dt> o <b>SetDisplayCutInWireframe</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDisplayCutInWireframe</b>(<td>int* <td><tt>iDisplayCutInWireframe</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the DisplayCutInWireframe attribute.
</dl>
<a name="SetDisplayCutInWireframeLock"></a><a name="SetDisplayCutInWireframeLock(unsigned char)"></a> <dt> o <b>SetDisplayCutInWireframeLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetDisplayCutInWireframeLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the DisplayCutInWireframe parameter.
 <br><b>Role</b>: Locks or unlocks the DisplayCutInWireframe parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetGridAutoFiltering"></a><a name="SetGridAutoFiltering(int*)"></a> <dt> o <b>SetGridAutoFiltering</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridAutoFiltering</b>(<td>int* <td><tt>iGridAutoFiltering</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the GridAutoFiltering attribute.
</dl>
<a name="SetGridAutoFilteringLock"></a><a name="SetGridAutoFilteringLock(unsigned char)"></a> <dt> o <b>SetGridAutoFilteringLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridAutoFilteringLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the GridAutoFiltering parameter.
 <br><b>Role</b>: Locks or unlocks the GridAutoFiltering parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetGridAutoResize"></a><a name="SetGridAutoResize(int*)"></a> <dt> o <b>SetGridAutoResize</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridAutoResize</b>(<td>int* <td><tt>iGridAutoResize</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the GridAutoResize attribute.
</dl>
<a name="SetGridAutoResizeLock"></a><a name="SetGridAutoResizeLock(unsigned char)"></a> <dt> o <b>SetGridAutoResizeLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridAutoResizeLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the GridAutoResize parameter.
 <br><b>Role</b>: Locks or unlocks the GridAutoResize parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetGridHeightStep"></a><a name="SetGridHeightStep(float*)"></a> <dt> o <b>SetGridHeightStep</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridHeightStep</b>(<td>float* <td><tt>iGridHeightStep</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the GridHeightStep attribute.
</dl>
<a name="SetGridHeightStepLock"></a><a name="SetGridHeightStepLock(unsigned char)"></a> <dt> o <b>SetGridHeightStepLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridHeightStepLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the GridHeightStep parameter.
 <br><b>Role</b>: Locks or unlocks the GridHeightStep parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetGridPositionMode"></a><a name="SetGridPositionMode(CatGridPositionMode*)"></a> <dt> o <b>SetGridPositionMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridPositionMode</b>(<td>CatGridPositionMode* <td><tt>iGridPositionMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the GridPositionMode attribute.
</dl>
<a name="SetGridPositionModeLock"></a><a name="SetGridPositionModeLock(unsigned char)"></a> <dt> o <b>SetGridPositionModeLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridPositionModeLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the GridPositionMode parameter.
 <br><b>Role</b>: Locks or unlocks the GridPositionMode parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetGridStyle"></a><a name="SetGridStyle(CatSectionGridStyle*)"></a> <dt> o <b>SetGridStyle</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridStyle</b>(<td>CatSectionGridStyle* <td><tt>iGridStyle</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the GridStyle attribute.
</dl>
<a name="SetGridStyleLock"></a><a name="SetGridStyleLock(unsigned char)"></a> <dt> o <b>SetGridStyleLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridStyleLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the GridStyle parameter.
 <br><b>Role</b>: Locks or unlocks the GridStyle parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetGridWidthStep"></a><a name="SetGridWidthStep(float*)"></a> <dt> o <b>SetGridWidthStep</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridWidthStep</b>(<td>float* <td><tt>iGridWidthStep</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the GridWidthStep attribute.
</dl>
<a name="SetGridWidthStepLock"></a><a name="SetGridWidthStepLock(unsigned char)"></a> <dt> o <b>SetGridWidthStepLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetGridWidthStepLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the GridWidthStep parameter.
 <br><b>Role</b>: Locks or unlocks the GridWidthStep parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetHidePlane"></a><a name="SetHidePlane(int*)"></a> <dt> o <b>SetHidePlane</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetHidePlane</b>(<td>int* <td><tt>iHidePlane</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the PlaneAutoHide attribute.
</dl>
<a name="SetHidePlaneLock"></a><a name="SetHidePlaneLock(unsigned char)"></a> <dt> o <b>SetHidePlaneLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetHidePlaneLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the HidePlane parameter.
 <br><b>Role</b>: Locks or unlocks the HidePlane parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetHideResult"></a><a name="SetHideResult(int*)"></a> <dt> o <b>SetHideResult</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetHideResult</b>(<td>int* <td><tt>iHideResult</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the HideResult attribute.
</dl>
<a name="SetHideResultLock"></a><a name="SetHideResultLock(unsigned char)"></a> <dt> o <b>SetHideResultLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetHideResultLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the HideResult parameter.
 <br><b>Role</b>: Locks or unlocks the HideResult parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetPlaneColor"></a><a name="SetPlaneColor(unsigned int*)"></a> <dt> o <b>SetPlaneColor</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPlaneColor</b>(<td>unsigned int* <td><tt>iPlaneColor</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the PlaneColor attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlaneColor:</tt>
   <dd>  <b>Legal values</b>:
	<br><tt>Array of 3 unsigned int (R,G,B). </tt></dd>
</dl>
</dl>
</dl>
<a name="SetPlaneColorLock"></a><a name="SetPlaneColorLock(unsigned char)"></a> <dt> o <b>SetPlaneColorLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPlaneColorLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the PlaneColor parameter.
 <br><b>Role</b>: Locks or unlocks the PlaneColor parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetPlaneNormal"></a><a name="SetPlaneNormal(CatSectionPlaneNormal*)"></a> <dt> o <b>SetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPlaneNormal</b>(<td>CatSectionPlaneNormal* <td><tt>iPlaneNormal</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the PlaneNormal attribute.
</dl>
<a name="SetPlaneNormalLock"></a><a name="SetPlaneNormalLock(unsigned char)"></a> <dt> o <b>SetPlaneNormalLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPlaneNormalLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the PlaneNormal parameter.
 <br><b>Role</b>: Locks or unlocks the PlaneNormal parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetPlaneOrigin"></a><a name="SetPlaneOrigin(CatSectionPlaneOrigin*)"></a> <dt> o <b>SetPlaneOrigin</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPlaneOrigin</b>(<td>CatSectionPlaneOrigin* <td><tt>iPlaneOrigin</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the PlaneOrigin attribute.
</dl>
<a name="SetPlaneOriginLock"></a><a name="SetPlaneOriginLock(unsigned char)"></a> <dt> o <b>SetPlaneOriginLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetPlaneOriginLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the PlaneOrigin parameter.
 <br><b>Role</b>: Locks or unlocks the PlaneOrigin parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetSectionFill"></a><a name="SetSectionFill(int*)"></a> <dt> o <b>SetSectionFill</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSectionFill</b>(<td>int* <td><tt>iSectionFill</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the SectionFill attribute.
</dl>
<a name="SetSectionFillLock"></a><a name="SetSectionFillLock(unsigned char)"></a> <dt> o <b>SetSectionFillLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetSectionFillLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the SectionFill parameter.
 <br><b>Role</b>: Locks or unlocks the SectionFill parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetUpdateResult"></a><a name="SetUpdateResult(int*)"></a> <dt> o <b>SetUpdateResult</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetUpdateResult</b>(<td>int* <td><tt>iUpdateResult</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets the UpdateResult attribute.
</dl>
<a name="SetUpdateResultLock"></a><a name="SetUpdateResultLock(unsigned char)"></a> <dt> o <b>SetUpdateResultLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetUpdateResultLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the UpdateResult parameter.
 <br><b>Role</b>: Locks or unlocks the UpdateResult parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetViewerAutoOpen"></a><a name="SetViewerAutoOpen(int*)"></a> <dt> o <b>SetViewerAutoOpen</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetViewerAutoOpen</b>(<td>int* <td><tt>iViewerAutoOpen</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the ViewerAutoOpen attribute.
</dl>
<a name="SetViewerAutoOpenLock"></a><a name="SetViewerAutoOpenLock(unsigned char)"></a> <dt> o <b>SetViewerAutoOpenLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetViewerAutoOpenLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the ViewerAutoOpen parameter.
 <br><b>Role</b>: Locks or unlocks the ViewerAutoOpen parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetViewerAutoReframe"></a><a name="SetViewerAutoReframe(int*)"></a> <dt> o <b>SetViewerAutoReframe</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetViewerAutoReframe</b>(<td>int* <td><tt>iViewerAutoReframe</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the ViewerAutoReframe attribute.
</dl>
<a name="SetViewerAutoReframeLock"></a><a name="SetViewerAutoReframeLock(unsigned char)"></a> <dt> o <b>SetViewerAutoReframeLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetViewerAutoReframeLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the ViewerAutoReframe parameter.
 <br><b>Role</b>: Locks or unlocks the ViewerAutoReframe parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetViewerLock2D"></a><a name="SetViewerLock2D(int*)"></a> <dt> o <b>SetViewerLock2D</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetViewerLock2D</b>(<td>int* <td><tt>iViewerLock2D</tt>)= 0  </table></dt>
<dl>
  <dd>
 Sets the ViewerLock2D attribute.
</dl>
<a name="SetViewerLock2DLock"></a><a name="SetViewerLock2DLock(unsigned char)"></a> <dt> o <b>SetViewerLock2DLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetViewerLock2DLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the ViewerLock2D parameter.
 <br><b>Role</b>: Locks or unlocks the ViewerLock2D parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetWindowDefaultHeight"></a><a name="SetWindowDefaultHeight(int)"></a> <dt> o <b>SetWindowDefaultHeight</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetWindowDefaultHeight</b>(<td>int <td><tt>iWindowDefaultHeight</tt>)=0  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>:Set the section window default height if the
 window open mode is catSecWindow_DefaultSize
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWindowDefaultHeight</tt>
   <dd> </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK Successfully set the window open mode
      E_FAIL Failed to set the window open mode
</dl>
</dl>
<a name="SetWindowDefaultHeightLock"></a><a name="SetWindowDefaultHeightLock(unsigned char)"></a> <dt> o <b>SetWindowDefaultHeightLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetWindowDefaultHeightLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the WindowDefaultHeight parameter.
 <br><b>Role</b>: Locks or unlocks the WindowDefaultHeight parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetWindowDefaultWidth"></a><a name="SetWindowDefaultWidth(int)"></a> <dt> o <b>SetWindowDefaultWidth</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetWindowDefaultWidth</b>(<td>int <td><tt>iWindowDefaultWidth</tt>)= 0  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>:Set the section window default width if the
 window open mode is catSecWindow_DefaultSize
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWindowDefaultWidth</tt>
   <dd> </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK Successfully set the window open mode
      E_FAIL Failed to set the window open mode
</dl>
</dl>
<a name="SetWindowDefaultWidthLock"></a><a name="SetWindowDefaultWidthLock(unsigned char)"></a> <dt> o <b>SetWindowDefaultWidthLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetWindowDefaultWidthLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the WindowDefaultWidth parameter.
 <br><b>Role</b>: Locks or unlocks the WindowDefaultWidth parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetWindowOpenMode"></a><a name="SetWindowOpenMode(CatSecWindowOpenMode)"></a> <dt> o <b>SetWindowOpenMode</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetWindowOpenMode</b>(<td>CatSecWindowOpenMode <td><tt>iWindowOpenMode</tt>)= 0  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>:Set the section window open mode
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWindowOpenMode</tt>
   <dd>	<b>Legal values</b>:
   <br><tt>catSecWindow_DefaultSize :</tt>Open the sectioning window(s) with the default size specified in the Tools->Options.
   <br><tt>catSecWindow_TileVertically :</tt>Tile the sectioning window(s) vertically in the viewer
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetWindowOpenModeLock"></a><a name="SetWindowOpenModeLock(unsigned char)"></a> <dt> o <b>SetWindowOpenModeLock</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SetWindowOpenModeLock</b>(<td>unsigned char <td><tt>iLocked</tt>)= 0  </table></dt>
<dl>
  <dd>
  Locks or unlocks the WindowOpenMode parameter.
 <br><b>Role</b>: Locks or unlocks the WindowOpenMode parameter if the
 operation is allowed in the current administrated environment. In user mode 
 this method will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 	<br><tt>0:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	<b>Legal values</b>:
	<br><tt>S_OK :</tt>   on Success
 	<br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISPASectioningSettingAtt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSaiSpaceAnalysisItf</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
