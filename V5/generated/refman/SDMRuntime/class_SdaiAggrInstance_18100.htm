<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SDMRuntime Class SdaiAggrInstance</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SDMRuntime.htm" href="../SDMRuntime.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SDMRuntime";	}
		function getCurrentObjectName() { 
 	return "SdaiAggrInstance"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SDMRuntime <script type="text/javascript" > writeClassCharacteristic(); </script> SdaiAggrInstance</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_SdaiAggrInstance_18100','SdaiAggrInstance','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>SdaiAggrInstance</b>
</p>
<p>
<b><i> Class aggregating SDAI instances.</i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddMember(SdaiPrimitiveH&amp;)"><b>AddMember</b></a>(SdaiPrimitiveH&amp;)
<dd>  Adds a SdaiPrimitive in a SdaiAggrInstance.
 <dt> o 
    <a href="#DeleteAggr(SdaiAggrInstanceH)"><b>DeleteAggr</b></a>(SdaiAggrInstanceH)
<dd>  Destroys a SdaiAggrInstance logically.
 <dt> o 
    <a href="#Empty()"><b>Empty</b></a>()
<dd>  Empties a SdaiAggrInstance.
 <dt> o 
    <a href="#GetInstanceTypeName()"><b>GetInstanceTypeName</b></a>()
<dd>  Gets the type of a SdaiAggrInstance.
 <dt> o 
    <a href="#GetMemberCount()"><b>GetMemberCount</b></a>()
<dd>  Gets the number of items in the SdaiAggrInstance, or the size if it is an array.
 <dt> o 
    <a href="#IsKindOf(SdaiString&amp;)"><b>IsKindOf</b></a>(SdaiString&amp;)
<dd>  Tests if a SdaiAggrInstance is of a specified type.
 <dt> o 
    <a href="#IsMember(SdaiPrimitiveH&amp;)"><b>IsMember</b></a>(SdaiPrimitiveH&amp;)
<dd>  Tests if a specified SdaiPrimitive is a member of a SdaiAggrAggrInstance.
 <dt> o 
    <a href="#RemoveMember(SdaiPrimitiveH&amp;)"><b>RemoveMember</b></a>(SdaiPrimitiveH&amp;)
<dd>  Removes a SdaiPrimitive from a SdaiAggrInstance.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddMember"></a><a name="AddMember(SdaiPrimitiveH&amp;)"></a> <dt> o <b>AddMember</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('SdaiBoolean','const SdaiBoolean&')</script>  <b>AddMember</b>(<td> const <script type="text/javascript"> activateLink('SdaiPrimitiveH','SdaiPrimitiveH&amp;')</script> <td><tt>iMbr</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a SdaiPrimitive in a SdaiAggrInstance.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMbr</tt>
   <dd> - the SdaiPrimitive to add  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>
   <dl>
     <dt>SdaiTRUE</dt>
     <dd>Add succeeded</dd>
	  <dt>SdaiFALSE</dt>
     <dd>Add failed</dd>
   </dl>

</dl>
</dl>
<a name="DeleteAggr"></a><a name="DeleteAggr(SdaiAggrInstanceH)"></a> <dt> o <b>DeleteAggr</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>DeleteAggr</b>(<td><script type="text/javascript"> activateLink('SdaiAggrInstanceH','SdaiAggrInstanceH')</script> <td><tt>ioAggr</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Destroys a SdaiAggrInstance logically.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioAggr</tt>
   <dd> - the concerned SdaiAggrInstance</dd>
</dl>
</dl>
</dl>
<a name="Empty"></a><a name="Empty()"></a> <dt> o <b>Empty</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Empty</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Empties a SdaiAggrInstance.
</dl>
<a name="GetInstanceTypeName"></a><a name="GetInstanceTypeName()"></a> <dt> o <b>GetInstanceTypeName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('SdaiString','const SdaiString &')</script>  <b>GetInstanceTypeName</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets the type of a SdaiAggrInstance.
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The type of the instance
</dl>
</dl>
<a name="GetMemberCount"></a><a name="GetMemberCount()"></a> <dt> o <b>GetMemberCount</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiInteger','SdaiInteger')</script>  <b>GetMemberCount</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of items in the SdaiAggrInstance, or the size if it is an array.
</dl>
<a name="IsKindOf"></a><a name="IsKindOf(SdaiString&amp;)"></a> <dt> o <b>IsKindOf</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('SdaiBoolean','const SdaiBoolean &')</script>  <b>IsKindOf</b>(<td> const <script type="text/javascript"> activateLink('SdaiString','SdaiString&amp;')</script> <td><tt>iTypename</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Tests if a SdaiAggrInstance is of a specified type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypename</tt>
   <dd> - the specified type</dd>
</dl>
</dl>
</dl>
<a name="IsMember"></a><a name="IsMember(SdaiPrimitiveH&amp;)"></a> <dt> o <b>IsMember</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiBoolean','const SdaiBoolean&')</script>  <b>IsMember</b>(<td> const <script type="text/javascript"> activateLink('SdaiPrimitiveH','SdaiPrimitiveH&amp;')</script> <td><tt>iMbr</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Tests if a specified SdaiPrimitive is a member of a SdaiAggrAggrInstance.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMbr</tt>
   <dd> - the specified SdaiPrimitive</dd>
</dl>
</dl>
</dl>
<a name="RemoveMember"></a><a name="RemoveMember(SdaiPrimitiveH&amp;)"></a> <dt> o <b>RemoveMember</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>RemoveMember</b>(<td> const <script type="text/javascript"> activateLink('SdaiPrimitiveH','SdaiPrimitiveH&amp;')</script> <td><tt>iMbr</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a SdaiPrimitive from a SdaiAggrInstance.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMbr</tt>
   <dd> - the SdaiPrimitive to remove  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>
   <dl>
     <dt>0</dt>
     <dd> Remove succeeded</dd>
	  <dt>1</dt>
     <dd>Remove failed</dd>
   </dl>

</dl>
</dl>
<hr>
 This object is included in the file: <b>SdaiAggrInstance.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSrtSimpleTypes</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

