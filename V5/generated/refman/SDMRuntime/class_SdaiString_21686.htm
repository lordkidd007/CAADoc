<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SDMRuntime Class SdaiString</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../SDMRuntime.htm">This Framework</a>  <a href="class_SdaiSessionInstance_76542.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>SDMRuntime Class SdaiString</h1>
<pre>
SdaiString
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>SdaiString</b>
</p>
<p>
<b><i> Class representing any type supporting a string in SDAI -- C++ Language Binding.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~SdaiString()"><b>~SdaiString</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#operator=(CATString&amp;)"><b>operator=</b></a>(CATString&amp;)
<dd>    = operator to construct a SdaiString from a CATString
 <dt> o 
    <a href="#operator=(CATUnicodeString&amp;)"><b>operator=</b></a>(CATUnicodeString&amp;)
<dd>    = operator to construct a SdaiString from a CATUnicodeString
 <dt> o 
    <a href="#operator=(SdaiString&amp;)"><b>operator=</b></a>(SdaiString&amp;)
<dd>    = operator to construct a SdaiString from another one
 <dt> o 
    <a href="#operator=(char*)"><b>operator=</b></a>(char*)
<dd>    = operator to construct a SdaiString from a char *
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~SdaiString"></a><a name="~SdaiString()"></a> <dt> o <b>~SdaiString</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>~SdaiString</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="operator="></a><a name="operator=(CATString&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <a href="../SDMRuntime/class_SdaiString_21686.htm">SdaiString&</a>  <b>operator=</b>(<td> const <a href="../System/class_CATString_16797.htm">CATString&amp;</a> <td><tt>iStr</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
   = operator to construct a SdaiString from a CATString
</dl>
<a name="operator="></a><a name="operator=(CATUnicodeString&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <a href="../SDMRuntime/class_SdaiString_21686.htm">SdaiString&</a>  <b>operator=</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iStr</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
   = operator to construct a SdaiString from a CATUnicodeString
</dl>
<a name="operator="></a><a name="operator=(SdaiString&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <a href="../SDMRuntime/class_SdaiString_21686.htm">SdaiString&</a>  <b>operator=</b>(<td> const <a href="../SDMRuntime/class_SdaiString_21686.htm">SdaiString&amp;</a> <td><tt>iStr</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
   = operator to construct a SdaiString from another one
</dl>
<a name="operator="></a><a name="operator=(char*)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <a href="../SDMRuntime/class_SdaiString_21686.htm">SdaiString&</a>  <b>operator=</b>(<td> const char* <td><tt>iStr</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
   = operator to construct a SdaiString from a char *
</dl>
<hr>
 This object is included in the file: <b>SdaiString.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSrtSimpleTypes</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
