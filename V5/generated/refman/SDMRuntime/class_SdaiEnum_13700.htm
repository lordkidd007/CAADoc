<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SDMRuntime Class SdaiEnum</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../SDMRuntime.htm">This Framework</a>  <a href="class_SdaiEntityInstance_68900.htm">Previous</a>  <a href="class_SdaiExplicitAttr_54524.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>SDMRuntime Class SdaiEnum</h1>
<pre>
SdaiEnum
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>SdaiEnum</b>
</p>
<p>
<b><i> Class representing an SDAI enumeration.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~SdaiEnum()"><b>~SdaiEnum</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetEnumTypeName()"><b>GetEnumTypeName</b></a>()
<dd>  Gets the name of the type of a SdaiEnum.
 <dt> o 
    <a href="#IsKindOf(SdaiString&amp;)"><b>IsKindOf</b></a>(SdaiString&amp;)
<dd>  Tests if an SdaiEnum is of a given type.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~SdaiEnum"></a><a name="~SdaiEnum()"></a> <dt> o <b>~SdaiEnum</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~SdaiEnum</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetEnumTypeName"></a><a name="GetEnumTypeName()"></a> <dt> o <b>GetEnumTypeName</b>

<dt>  <table><tr><td>  public <a href="../SDMRuntime/class_SdaiString_21686.htm">const SdaiString&</a>  <b>GetEnumTypeName</b>(<td>)const   </table></dt>
<dl>
  <dd>
 Gets the name of the type of a SdaiEnum.
</dl>
<a name="IsKindOf"></a><a name="IsKindOf(SdaiString&amp;)"></a> <dt> o <b>IsKindOf</b>

<dt>  <table><tr><td>  public virtual <a href="../SDMRuntime/class_SdaiBoolean_25419.htm">const SdaiBoolean&</a>  <b>IsKindOf</b>(<td> const <a href="../SDMRuntime/class_SdaiString_21686.htm">SdaiString&amp;</a> <td><tt>iTypeName</tt>)const  </table></dt>
<dl>
  <dd>
 Tests if an SdaiEnum is of a given type.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeName</tt>
   <dd> - the type to check with</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>SdaiEnum.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSrtSimpleTypes</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
