<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AdvancedTopologicalOpe Class CATTopSimilarCurve</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../AdvancedTopologicalOpe.htm">This Framework</a>  <a href="class_CATTopShellOrientation_101302.htm">Previous</a>  <a href="class_CATTopSpine_24664.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>AdvancedTopologicalOpe Class CATTopSimilarCurve</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../GeometricObjects/class_CATCGMOperator_38910.htm">GeometricObjects.CATCGMOperator</a>
    |
    +---<a href="../NewTopologicalObjects/class_CATTopOperator_41154.htm">NewTopologicalObjects.CATTopOperator</a>
      |
      +---CATTopSimilarCurve
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTopSimilarCurve</b>
</p>
<p>
<b><i> Class defining the topological operator that connects two wires with 
 the "Base Curve" option.</i></b><br>

<ul>
 <li>A CATTopSimilarCurve operator is created with the <tt>CATCreateTopSimilarCurve</tt> global function;
 it must be directly deleted with the usual C++ <tt>delete</tt> operator after use. 
 It is is not streamable. 
<li>Options such as the start and end points must be 
 precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. 
<li>The result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a> method to remove it from the  geometric factory.Although several sucessive 
 <tt>Run</tt>s with different inputs
 are possible, it is strongly recommended to <tt>Run</tt> it only once.
</ul>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATTopSimilarCurve()"><b>~CATTopSimilarCurve</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetResult()"><b>GetResult</b></a>()
<dd>  Returns the result of <tt>this</tt> operator.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetEndPoint(CATBody*,CATBody*)"><b>SetEndPoint</b></a>(CATBody*,CATBody*)
<dd>  Defines the end point.
 <dt> o 
    <a href="#SetStartPoint(CATBody*,CATBody*)"><b>SetStartPoint</b></a>(CATBody*,CATBody*)
<dd>  Defines the start point.
 <dt> o 
    <a href="#SetTrimmingMode(CATLONG32,CATLONG32)"><b>SetTrimmingMode</b></a>(CATLONG32,CATLONG32)
<dd>  Defines whether the input bodies must be trimmed.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATTopSimilarCurve"></a><a name="~CATTopSimilarCurve()"></a> <dt> o <b>~CATTopSimilarCurve</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATTopSimilarCurve</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetResult"></a><a name="GetResult()"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody *</a>  <b>GetResult</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Returns the result of <tt>this</tt> operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created body. You must delete it with the 
<a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a>  method if you do not want to keep it.
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual int  <b>Run</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator.
</dl>
<a name="SetEndPoint"></a><a name="SetEndPoint(CATBody*,CATBody*)"></a> <dt> o <b>SetEndPoint</b>

<dt>  <table><tr><td>  public virtual int  <b>SetEndPoint</b>(<td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iEndPoint</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iCurve2</tt>)=0  </table></dt>
<dl>
  <dd>
 Defines the end point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEndPoint</tt>
   <dd> The endpoint. It must be laid down on <tt>iCurve2</tt>
 </dd>
    <dt><tt> iCurve2</tt>
   <dd> The second curve. If iCurve2 is NULL the point is free.</dd>
</dl>
</dl>
</dl>
<a name="SetStartPoint"></a><a name="SetStartPoint(CATBody*,CATBody*)"></a> <dt> o <b>SetStartPoint</b>

<dt>  <table><tr><td>  public virtual int  <b>SetStartPoint</b>(<td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iStartPoint</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iCurve1</tt>)=0  </table></dt>
<dl>
  <dd>
 Defines the start point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartPoint</tt>
   <dd> The start point. It must be laid down on <tt>iCurve1</tt>
 </dd>
    <dt><tt> iCurve</tt>
   <dd> The first curve. If iCurve1 is NULL the point is free.</dd>
</dl>
</dl>
</dl>
<a name="SetTrimmingMode"></a><a name="SetTrimmingMode(CATLONG32,CATLONG32)"></a> <dt> o <b>SetTrimmingMode</b>

<dt>  <table><tr><td>  public virtual void  <b>SetTrimmingMode</b>(<td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iWire</tt>,<tr><td></td><td> const <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a> <td><tt>iTrimmingMode</tt>)=0  </table></dt>
<dl>
  <dd>
 Defines whether the input bodies must be trimmed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWire</tt>
   <dd> The first (1) or the second (2) wire body.
 If not precised and if iTrimmingMode is set to ON,
 the two wire bodies are trimmed.
 </dd>
    <dt><tt> iTrimmingMode</tt>
   <dd> trim ON (1), trim OFF (0)</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATTopSimilarCurve.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAdvancedTopologicalOpe</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
