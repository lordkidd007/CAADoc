<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Typedef HRESULT</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>System Typedef HRESULT</h1>
<pre>
typedef int HRESULT</pre>
<b><i> Return type for the QueryInterface method, and for most interface methods.</i></b><br>
 
 <br><b>Role</b>: This type allows you to analyze the result of a call for
 the <tt>QueryInterface</tt> method and for most interface methods. 
 <ol>
 <li>In the case of the <tt>QueryInterface</tt> method </li>
 <br><br>To test the result, always use the macros <a href="../System/define_SUCCEEDED_12047.htm">SUCCEEDED</a> and 
<a href="../System/define_FAILED_5478.htm">FAILED</a>. <pre>

  IMyInterface * pIMyInterface = NULL ;
  HRESULT rc = pIMyOtherInterface->QueryInterface(IID_IMyInterface,(void**) &pIMyInterface);
 
  //Test with SUCCEEDED macro:
  
  if ( SUCCEEDED(rc) )
  {
      // In this case, rc is <b>S_OK</b>
      // pIMyInterface is valid 
      ....
  }

  //Test with FAILED macro

  if ( FAILED(rc) )
  {
      // In this case, rc is <b>E_NOINTERFACE</b> or <b>E_UNEXPECTED</b>
      // pIMyInterface is not valid 
  }

 </pre>
 <li>In the case of an interface method </li>
 <br><br>You can use the  macros 
<a href="../System/define_SUCCEEDED_12047.htm">SUCCEEDED</a> and 
<a href="../System/define_FAILED_5478.htm">FAILED</a> or test directly the value to have more details. Refer to the method documentation to know about its 
 possible HRESULT values.
 <pre>
  IMyInterface * pIMyInterface = NULL ;
  HRESULT rc = pIMyOtherInterface->QueryInterface(IID_IMyInterface,(void**) &pIMyInterface);
  if ( SUCCEEDED(rc) )
  {
      // rc = S_OK
      rc = pIMyInterface->Method();
      
      // Test with SUCCEEDED macro

      if ( SUCCEEDED(rc) )
      {
         // In this case, rc is <b>S_OK</b> or <b>S_FALSE</b>   
         // You can directly test the rc value  
         if ( S_FALSE == rc )
         {
                ...
         }else
         {
                ....
         }
      }

      // Test with FAILED macro

      if ( FAILED(rc) )
      {
         // In this case, rc is <b>E_xxxxx</b> 
         // You can directly test the rc value, 
         if ( E_FAIL == rc )
         {
               ....
         }
         ....
      }
  }
 </pre> 
 </ol>
 The possible values are:
 
<dl>
  <dt> <b>Values:</b>
  <dd>
    <dl>
    <dt><tt> S_OK</tt>
   <dd> Method succeeded. In some contexts, it means additionally that the function returns
 a boolean true.
 </dd>
    <dt><tt> S_FALSE</tt>
   <dd> Method succeeded. In some contexts, it means additionally that the function returns
 a boolean false.
 </dd>
    <dt><tt> E_FAIL</tt>
   <dd> Unspecified failure.
 </dd>
    <dt><tt> E_NOINTERFACE</tt>
   <dd> Component does not support the requested interface.
 </dd>
    <dt><tt> E_UNEXPECTED</tt>
   <dd> For an unexpected failure.
 </dd>
    <dt><tt> E_NOTIMPL</tt>
   <dd>  Method is not implemented.
 </dd>
    <dt><tt> E_OUTOFMEMORY</tt>
   <dd> Required memory can not be allocated.</dd>
</dl>
</dl>
<hr>
 This object is included in the file: <b>IUnknown.h</b><br>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
