<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Interface CATIVBExtension</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="interface_CATIUnknownList_46757.htm">Previous</a>  <a href="interface_IClassFactory_36265.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>System Interface CATIVBExtension</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIVBExtension
 </pre>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIVBExtension</b>
</p>
<p>
<b><i> Interface to implement in order to extend the V5 Automation object model using the CATIABase::GetItem mechanism.</i></b><br>

 The <a href="../System/interface_CATIABase_14537.htm#GetItem">CATIABase.GetItem</a> mechanism offers a generic way to extend the V5 Automation object model with custom Automation interfaces. It is the
 preferred way to achieve such extensions.
 Script developers use the <tt>GetItem</tt> mechanism in the following
 manner:
 <pre>
 ' VBA sample
 Dim X As MyAutomationInterface
 ' Retrieve the extension object associated to Y under the key "MyCATIVBExtensionImpl"
 Set X = Y.GetItem("MyCATIVBExtensionImpl")
 </pre>
 <ul>
 <li>
 <tt>Y</tt> is any script object which derives from 
<a href="../System/interface_CATIABase_14537.htm">CATIABase</a> or 
<a href="../System/interface_CATIACollection_45132.htm">CATIACollection</a>. Such objects can be either native V5 Automation objects such as <tt>Viewer</tt> or <tt>Part</tt> or custom objects.
 </li>
 <li>
 <tt>MyCATIVBExtensionImpl</tt> is the name of a V5 implementation object which implements
 
<a href="../System/interface_CATIVBExtension_45416.htm">CATIVBExtension</a>. <tt>MyCATIVBExtensionImpl</tt> is responsible for instantiating the Automation extension object which will ultimately be returned by 
<a href="../System/interface_CATIABase_14537.htm#GetItem">CATIABase.GetItem</a> method. Note that the <tt>MyCATIVBExtensionImpl</tt> object itself is instantiated using 
 the 
<a href="../System/interface_CATICreateInstance_65218.htm">CATICreateInstance</a> mechanism, so it must also implement the 
<a href="../System/interface_CATICreateInstance_65218.htm">CATICreateInstance</a> interface in a code extension. </li>
 <li>
 <tt>X</tt> is the Automation extension object, of type <tt>MyAutomationInterface</tt>. It
 is associated to the <tt>Y</tt> object and is the result of invoking the 
<a href="../System/interface_CATIABase_14537.htm#GetItem">CATIABase.GetItem</a> on <tt>Y</tt> with the <tt>MyCATIVBExtensionImpl</tt> key.
 </li>
 </ul>
 Please note that the 
<a href="../System/interface_CATIABase_14537.htm#GetItem">CATIABase.GetItem</a> mechanism is  implemented by the 
<a href="../System/class_CATBaseObject_33474.htm">CATBaseObject</a> class (the 
<a href="../System/interface_CATIABase_14537.htm">CATIABase</a> interface adaptor)  or 
<a href="../System/class_CATBaseCollection_59211.htm">CATBaseCollection</a> class (the 
<a href="../System/interface_CATIACollection_45132.htm">CATIACollection</a> interface adaptor),  so make sure your <tt>Y</tt> class derives from either of these adaptors.
 For implementations which override the 
<a href="../System/interface_CATIABase_14537.htm#GetItem">CATIABase.GetItem</a> method, the overriding implementation must make sure to first invoke the implementation of
 its superclass. If the implementation of the superclass fails to retrieve
 the proper Automation extension, then the overriding implementation can use its own
 algorithm to retrieve it.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetObjects(CATBaseUnknown*,CATBaseDispatch*&amp;)"><b>GetObjects</b></a>(CATBaseUnknown*,CATBaseDispatch*&amp;)
<dd>  Returns the extension object associated
 to the <tt>iGetItemTarget</tt> Automation object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetObjects"></a><a name="GetObjects(CATBaseUnknown*,CATBaseDispatch*&amp;)"></a> <dt> o <b>GetObjects</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetObjects</b>(<td><a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>iGetItemTarget</tt>,<tr><td></td><td><a href="../System/class_CATBaseDispatch_45333.htm">CATBaseDispatch*&amp;</a> <td><tt>oGetItemResult</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Returns the extension object associated
 to the <tt>iGetItemTarget</tt> Automation object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGetItemTarget</tt>
   <dd> The Automation object on which <tt>GetItem</tt> is invoked.
 </dd>
    <dt><tt> oGetItemResult</tt>
   <dd> The Automation extension object returned by <tt>GetItem</tt>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>S_OK</tt> if the object is extension object is successfully instantiated,
 <tt>E_FAIL</tt> otherwise
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIVBExtension.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
