<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Interface CATICommunicator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="interface_CATICommMsg_23486.htm">Previous</a>  <a href="interface_CATICommunicatorLoop_83052.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>System Interface CATICommunicator</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---CATICommunicator
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICommunicator</b>
</p>
<p>
<b><i> Interface to represent the logical connexion to the backbone bus.</i></b><br>

 <b>Role</b>: This interface provides all the main services to exchange
 messages with the  backbone bus:
 <ul>
  <li> Gets a connexion to the bus </li>
  <li> Declares itself on the bus </li>
  <li> Sends a message on the bus </li>
  <li> Receives a message from other applications connected to the bus (via the bus)</li>
  <li> Declares the messages the process may handle </li>
  <li> Associates handlers to these messages </li>
  <li> Removes these handlers  </li>
  <li> Disconnects from the bus </li>
 </ul>
 <br>
 <b>Example of code</b>:
 <ul>
 <li> Get a connexion to the backbone bus with the <a href="../System/function_CATGetBackboneConnection_239218.htm">CATGetBackboneConnection</a> global method </li> <li> Declare to be a backbone application with the 
<a href="#Declare">Declare</a> method</li> <br>
 To receive message an application should:
 <ul>
 <li> Declare to be interested in receiving messages thanks the 
      
<a href="#DeclareEventManaged">DeclareEventManaged</a> method </li> <li> Declare an handler for message class it want to receive thanks 
       to the  
<a href="#AssociateHandler">AssociateHandler</a> </li> method </ul>
 <br>
 To send message an application should:
 <ul>
 <li> used the 
<a href="#SendRequest">SendRequest</a> method </li> </ul>
 <li> Disconnect to the backbone bus thanks the 
<a href="#Disconnect">Disconnect</a> method </li> </ul>
 <br> 
   
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../System/interface_CATIStreamMsg_33626.htm">CATIStreamMsg</a>, <a href="../System/interface_CATIBBStreamer_38176.htm">CATIBBStreamer</a>, <a href="../System/interface_CATICommMsg_23486.htm">CATICommMsg</a>, <a href="../System/interface_CATIMessageReceiver_73239.htm">CATIMessageReceiver</a>, <a href="../System/class_CATBBMessage_27648.htm">CATBBMessage</a>, <a href="../System/interface_CATICommunicatorLoop_83052.htm">CATICommunicatorLoop</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AssociateHandler(CATApplicationClass,CATMessageClass,CATIMessageReceiver*)"><b>AssociateHandler</b></a>(CATApplicationClass,CATMessageClass,CATIMessageReceiver*)
<dd>   Declares an handler for a backbone message class.
 <dt> o 
    <a href="#Declare(CATApplicationClass,CATApplicationType)"><b>Declare</b></a>(CATApplicationClass,CATApplicationType)
<dd>   Declares an application as a backbone application.
 <dt> o 
    <a href="#DeclareEventManaged(CATMessageClass)"><b>DeclareEventManaged</b></a>(CATMessageClass)
<dd>   Declares a backbone message class the application is interested with to receive.
 <dt> o 
    <a href="#Disconnect()"><b>Disconnect</b></a>()
<dd>   Logical disconnection from the backbone bus.
 <dt> o 
    <a href="#GetLastErrorId(int*)"><b>GetLastErrorId</b></a>(int*)
<dd>   Gets the last error.
 <dt> o 
    <a href="#GetRequestAnswer(CATICommMsg*,CATICommMsg**,int)"><b>GetRequestAnswer</b></a>(CATICommMsg*,CATICommMsg**,int)
<dd>   Permits to wait for the answer of a synchronous backbone message.
 <dt> o 
    <a href="#RemoveHandler(CATApplicationClass,CATMessageClass,CATIMessageReceiver*)"><b>RemoveHandler</b></a>(CATApplicationClass,CATMessageClass,CATIMessageReceiver*)
<dd>   Removes a backbone message handler.
 <dt> o 
    <a href="#SendRequest(CATApplicationClass,CATICommMsg*)"><b>SendRequest</b></a>(CATApplicationClass,CATICommMsg*)
<dd>   Emits a backbone message on the backbone bus.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AssociateHandler"></a><a name="AssociateHandler(CATApplicationClass,CATMessageClass,CATIMessageReceiver*)"></a> <dt> o <b>AssociateHandler</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AssociateHandler</b>(<td><a href="../System/typedef_CATApplicationClass_74410.htm">CATApplicationClass</a> <td><tt>iAppClassReceiver</tt>,<tr><td></td><td><a href="../System/typedef_CATMessageClass_45603.htm">CATMessageClass</a> <td><tt>iMsgClass</tt>,<tr><td></td><td><a href="../System/interface_CATIMessageReceiver_73239.htm">CATIMessageReceiver*</a> <td><tt>iReceiver</tt>)=0  </table></dt>
<dl>
  <dd>
  Declares an handler for a backbone message class.
 <br><b>Role</b>: Permits to associate a handler object to any arriving message 
 of class iMsgClass sent for the iAppClassReceiver application.
 If a message of class iMsgClass incomes to the application iAppClassReceiver,
 iReceiver will be called  on the 
<a href="../System/interface_CATIMessageReceiver_73239.htm#HandleMessage">CATIMessageReceiver.HandleMessage</a> method  to process the message.
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAppClassReceiver</tt>
   <dd>   The  identificator under which the receiver application is known on 
   the backbone bus.
 </dd>
    <dt><tt> iMsgClass</tt>
   <dd>   The message class of the future incoming messages to which we want to 
   associate a handler
 </dd>
    <dt><tt> iReceiver</tt>
   <dd>   This object will be called in the future when a message of type 
   iMsgClass sent to the application iAppClassReceiver will arrive on the receiver application
</dd>
</dl>
</dl>
</dl>
<a name="Declare"></a><a name="Declare(CATApplicationClass,CATApplicationType)"></a> <dt> o <b>Declare</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Declare</b>(<td><a href="../System/typedef_CATApplicationClass_74410.htm">CATApplicationClass</a> <td><tt>iAppClass</tt>,<tr><td></td><td><a href="../System/typedef_CATApplicationType_67602.htm">CATApplicationType</a> <td><tt>iAppType</tt><td><tt>=CATStandardApp</tt>)=0  </table></dt>
<dl>
  <dd>
  Declares an application as a backbone application.
 <br><b>Role</b>: This service should be called only once for a given application during
 a connexion.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAppClass</tt>
   <dd>   The identificator under which the application is known on 
   the backbone bus.
 </dd>
    <dt><tt> iAppType</tt>
   <dd>   <b>Legal Values</b>:<tt>CATStandardApp</tt></dd>
</dl>
</dl>
</dl>
<a name="DeclareEventManaged"></a><a name="DeclareEventManaged(CATMessageClass)"></a> <dt> o <b>DeclareEventManaged</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>DeclareEventManaged</b>(<td><a href="../System/typedef_CATMessageClass_45603.htm">CATMessageClass</a> <td><tt>iMsgClass</tt>)=0  </table></dt>
<dl>
  <dd>
  Declares a backbone message class the application is interested with to receive.
 <br><b>Role</b>: Permits an application to declare that it is interested with receiving
 message of class iMsgClass 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMsgClass</tt>
   <dd>   iMsgClass is the class name of the message class the application wishes to receive</dd>
</dl>
</dl>
</dl>
<a name="Disconnect"></a><a name="Disconnect()"></a> <dt> o <b>Disconnect</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Disconnect</b>(<td>)=0  </table></dt>
<dl>
  <dd>
  Logical disconnection from the backbone bus.
 <br><b>Role</b>: This method permits the disconnection from the bus. It's the end of 
 the connexion done by the 
<a href="../System/function_CATGetBackboneConnection_239218.htm">CATGetBackboneConnection</a>  global method.
</dl>
<a name="GetLastErrorId"></a><a name="GetLastErrorId(int*)"></a> <dt> o <b>GetLastErrorId</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetLastErrorId</b>(<td>int* <td><tt>oLastError</tt>)=0  </table></dt>
<dl>
  <dd>
  Gets the last error.
 <br><b>Role</b>: This method permits to get the last error.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLastError</tt>
   <dd> <b>Legal Values</b>:
  <ul>
    <li>CATBBErr_PortNotFound  : Unable to contact given port</li>
    <li>CATBBErr_UnableToGetPort  : Unable to declare on given port</li>
    <li>CATBBErr_AnswerPortAcceptFailed  : failed because invalid answer port</li>
    <li>CATBBErr_ErrorWaitingForPort  : error during WaitForPort operation</li>
    <li>CATBBErr_InitSendSocketInvalid  : Try to send a message on a close or invalid socket
                                          during the declaration phase,
                                          contact to bus probably lost </li>
    <li>CATBBErr_SendSocketInvalid  : Try to send a message on a close or invalid socket,
                                      contact to bus probably lost</li>
    <li>CATBBErr_RcvSocketInvalid  : Try to receive a message from a close or invalid socket,
                                     contact to bus probably lost</li>
    <li>CATBBErr_MessageClassNotFound  : message class not found</li>
    <li>CATBBErr_DataStreamingFailure  : error during stream operation</li>
    <li>CATBBErr_DataUntreamingFailure  : error during unstream operation</li>
    <li>CATBBErr_MustImplementCATIStreamMsg  : message object doesn't implements CATIStreamMsg</li>
    <li>CATBBErr_MustNeedAnAnswer  : message object doesn't need answers</li>
    <li>CATBBErr_UnableToInstanciateMsg  : unable to instanciate message object</li>
    <li>CATBBErr_ReentranceConditionFound  : </li>
    <li>CATBBErr_TimeoutOccurred  : </li>
    <li>CATBBErr_TargetApplicationNotPresent  : </li>
  </ul>
</dd>
</dl>
</dl>
</dl>
<a name="GetRequestAnswer"></a><a name="GetRequestAnswer(CATICommMsg*,CATICommMsg**,int)"></a> <dt> o <b>GetRequestAnswer</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetRequestAnswer</b>(<td><a href="../System/interface_CATICommMsg_23486.htm">CATICommMsg*</a> <td><tt>iMsg</tt>,<tr><td></td><td><a href="../System/interface_CATICommMsg_23486.htm">CATICommMsg**</a> <td><tt>oAnswer</tt>,<tr><td></td><td>int <td><tt>timeout</tt><td><tt>=-1</tt>)=0  </table></dt>
<dl>
  <dd>
  Permits to wait for the answer of a synchronous backbone message.
 
 <br><b>Role</b>: This method permits to wait for the answer of a given  
  backbone message.
 We advise user to avoid as much as possible synchronous messages and the use
 of GetRequestAnswer.  
 <br>Using  synchronous messages and waiting to the answers has the following 
 disadvantages :
 <br> - costs more resources
 <br> - may generate interblocking conditions ( two applications waiting for each other)
 <p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMsg</tt>
   <dd>   synchronous backbone request needing a immediate answer
 </dd>
    <dt><tt> oAnswer</tt>
   <dd>   Answer to the iMsg request 
</dd>
</dl>
</dl>
</dl>
<a name="RemoveHandler"></a><a name="RemoveHandler(CATApplicationClass,CATMessageClass,CATIMessageReceiver*)"></a> <dt> o <b>RemoveHandler</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveHandler</b>(<td><a href="../System/typedef_CATApplicationClass_74410.htm">CATApplicationClass</a> <td><tt>iAppClass</tt>,<tr><td></td><td><a href="../System/typedef_CATMessageClass_45603.htm">CATMessageClass</a> <td><tt>iMsgClass</tt>,<tr><td></td><td><a href="../System/interface_CATIMessageReceiver_73239.htm">CATIMessageReceiver*</a> <td><tt>iReceiver</tt>)=0  </table></dt>
<dl>
  <dd>
  Removes a backbone message handler.
 <br><b>Role</b>: This method permits to remove the handler iReceiver of the message
 identified by its target application iAppClass and its class iMsgClass.
 <br> This method cancels  effects of the corresponding 
<a href="#AssociateHandler">AssociateHandler</a> method. <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAppClass</tt>
   <dd>   The identificator under which the application is known on the backbone bus
 </dd>
    <dt><tt> iMsgClass</tt>
   <dd>   The message class to which iReceiver is associated
 </dd>
    <dt><tt> iReceiver</tt>
   <dd>   The object which handles the message 
</dd>
</dl>
</dl>
</dl>
<a name="SendRequest"></a><a name="SendRequest(CATApplicationClass,CATICommMsg*)"></a> <dt> o <b>SendRequest</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SendRequest</b>(<td><a href="../System/typedef_CATApplicationClass_74410.htm">CATApplicationClass</a> <td><tt>iAppClass</tt>,<tr><td></td><td><a href="../System/interface_CATICommMsg_23486.htm">CATICommMsg*</a> <td><tt>iMsg</tt>)=0  </table></dt>
<dl>
  <dd>
  Emits a backbone message on the backbone bus.
 <br><b>Role</b>: This method permits to send messages to other backbone 
 applications via the backbone bus.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAppClass</tt>
   <dd>   Target application of the message
 </dd>
    <dt><tt> iMsg</tt>
   <dd>   Backbone message to emit
</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICommunicator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSysCommunication</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
