<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Interface CATIScriptManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="interface_CATIScriptJournal_59747.htm">Previous</a>  <a href="interface_CATIScriptMethodCall_80022.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>System Interface CATIScriptManager</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIScriptManager
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIScriptManager</b>
</p>
<p>
<b><i> Interface to represent the manager of macros generation.</i></b><br>

 <b>Role:</b>
 <tt>CATScriptManager</tt> is the high level object used to trigger user interaction
 recording and script generation in various scripting syntaxes.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../System/interface_CATIScriptJournal_59747.htm">CATIScriptJournal</a>, <a href="../System/enum_CATScriptLanguage_59191.htm">CATScriptLanguage</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GenerateResolutionScriptOfObject(CATBaseDispatch*,CATScriptLanguage,CATUnicodeString&amp;)"><b>GenerateResolutionScriptOfObject</b></a>(CATBaseDispatch*,CATScriptLanguage,CATUnicodeString&amp;)
<dd>  Generates the script representing the resolution of an automation object in the specified language.
 <dt> o 
    <a href="#GenerateScript(CATScriptLanguage,CATString&amp;,iostream*)"><b>GenerateScript</b></a>(CATScriptLanguage,CATString&amp;,iostream*)
<dd>  Generates a script.
 <dt> o 
    <a href="#GetJournal(CATIScriptJournal*&amp;)"><b>GetJournal</b></a>(CATIScriptJournal*&amp;)
<dd>  Returns the journal used for internal storage.
 <dt> o 
    <a href="#IsRecording(CATBoolean&amp;)"><b>IsRecording</b></a>(CATBoolean&amp;)
<dd>  Returns TRUE if the Script Manager is recording, FALSE otherwise.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Flushes the journal used for internal storage.
 <dt> o 
    <a href="#ResumeRecording()"><b>ResumeRecording</b></a>()
<dd>  Resumes the recording halted by <tt>SuspendRecording</tt>.
 <dt> o 
    <a href="#StartRecording()"><b>StartRecording</b></a>()
<dd>  Starts recording.
 <dt> o 
    <a href="#StopRecording()"><b>StopRecording</b></a>()
<dd>  Stops recording.
 <dt> o 
    <a href="#SuspendRecording()"><b>SuspendRecording</b></a>()
<dd>  Temporarily suspends the recording.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GenerateResolutionScriptOfObject"></a><a name="GenerateResolutionScriptOfObject(CATBaseDispatch*,CATScriptLanguage,CATUnicodeString&amp;)"></a> <dt> o <b>GenerateResolutionScriptOfObject</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GenerateResolutionScriptOfObject</b>(<td><a href="../System/class_CATBaseDispatch_45333.htm">CATBaseDispatch*</a> <td><tt>iObject</tt>,<tr><td></td><td><a href="../System/enum_CATScriptLanguage_59191.htm">CATScriptLanguage</a> <td><tt>iLanguage</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>ioScript</tt>) = 0  </table></dt>
<dl>
  <dd>
 Generates the script representing the resolution of an automation object in the specified language.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> The automation object to resolve.
 </dd>
    <dt><tt> iLanguage</tt>
   <dd> The specified language of the generated script.
 </dd>
    <dt><tt> ioScript</tt>
   <dd> The supplied CATUnicodeString in which the script will be written.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<a name="GenerateScript"></a><a name="GenerateScript(CATScriptLanguage,CATString&amp;,iostream*)"></a> <dt> o <b>GenerateScript</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GenerateScript</b>(<td><a href="../System/enum_CATScriptLanguage_59191.htm">CATScriptLanguage</a> <td><tt>iLanguage</tt>,<tr><td></td><td> const <a href="../System/class_CATString_16797.htm">CATString&amp;</a> <td><tt>iMainMethodName</tt>,<tr><td></td><td>iostream* <td><tt>ioStream</tt>) = 0  </table></dt>
<dl>
  <dd>
 Generates a script.
 <br><b>Role:</b>
 Use this method to write a script in the proper syntax of the specified language with
 the given method name and write it to the supplied stream.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLanguage</tt>
   <dd> The specified language of the generated script.
 </dd>
    <dt><tt> iMainMethodName</tt>
   <dd> The main method name that can be used later as the entry point of the script.
 </dd>
    <dt><tt> ioStream</tt>
   <dd> The supplied stream in which the script will be generated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<a name="GetJournal"></a><a name="GetJournal(CATIScriptJournal*&amp;)"></a> <dt> o <b>GetJournal</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetJournal</b>(<td><a href="../System/interface_CATIScriptJournal_59747.htm">CATIScriptJournal*&amp;</a> <td><tt>oJournal</tt>) = 0  </table></dt>
<dl>
  <dd>
 Returns the journal used for internal storage.
 <br>
 Returns an error if the script manager is not recording.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oJournal</tt>
   <dd> The returned journal.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<a name="IsRecording"></a><a name="IsRecording(CATBoolean&amp;)"></a> <dt> o <b>IsRecording</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsRecording</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>oIsRecording</tt>) = 0  </table></dt>
<dl>
  <dd>
 Returns TRUE if the Script Manager is recording, FALSE otherwise.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIsRecording</tt>
   <dd> The returned boolean descripting the state of the script manager.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>Reset</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Flushes the journal used for internal storage.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<a name="ResumeRecording"></a><a name="ResumeRecording()"></a> <dt> o <b>ResumeRecording</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ResumeRecording</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Resumes the recording halted by <tt>SuspendRecording</tt>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<a name="StartRecording"></a><a name="StartRecording()"></a> <dt> o <b>StartRecording</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>StartRecording</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Starts recording.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<a name="StopRecording"></a><a name="StopRecording()"></a> <dt> o <b>StopRecording</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>StopRecording</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Stops recording.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<a name="SuspendRecording"></a><a name="SuspendRecording()"></a> <dt> o <b>SuspendRecording</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>SuspendRecording</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Temporarily suspends the recording. 
 <br><b>Role:</b>
 Use this function when you want to inhibit macro generation for
 Automation API calls which would normally result in 
 declarations in the journal. <tt>SuspendRecording</tt> can
 be called several times in a row. If such is the case, the
 same number of calls to <tt>ResumeRecording</tt> must be done
 before the macro generationa actually resumes.
 This method must be called only after the call to <tt>StartRecording</tt>
 has been made.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   S_OK if the operation succeeded, E_FAIL otherwise.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIScriptManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
