<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Tessellation Class CATTessVertexIter</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Tessellation.htm">This Framework</a>  <a href="class_CATTessTrianIter_52384.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Tessellation Class CATTessVertexIter</h1>
<pre>
CATTessVertexIter
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTessVertexIter</b>
</p>
<p>
<b><i> Class that outputs the point tessellation numbers corresponding to the
 the points on a given vertex.</i></b><br>

 <br>The points are given relatively to one bounded (or adjacent) face.
 <br> Such class is directly created by the <a href="../Tessellation/class_CATBodyTessellator_68290.htm#GetVertex">CATBodyTessellator.GetVertex</a> method.  Its deletion is managed at the
 CATBodyTessellator deletion. 
 <br> Use it according to the following scheme:
 <ul> 
 <li> Retrieve the number of points for a given vertex, with regards to a given face. 
 <li> Allocate the array of numbers
 <li> Retrieve the result
 <li> Delete the array.
 </ul>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFace()"><b>GetFace</b></a>()
<dd>  Returns the pointer to the current face.
 <dt> o 
    <a href="#GetNbFace()"><b>GetNbFace</b></a>()
<dd>  Returns the number of faces.
 <dt> o 
    <a href="#GetPoec()"><b>GetPoec</b></a>()
<dd>  Returns the pointer to a PointOnEdgeCurve for the current face.
 <dt> o 
    <a href="#GetVertexAllNuPts(int[])"><b>GetVertexAllNuPts</b></a>(int[])
<dd>  Globally retrieves the points ranks for all the faces.
 <dt> o 
    <a href="#GetVertexNuPts(int&amp;)"><b>GetVertexNuPts</b></a>(int&amp;)
<dd>  Retrieves the points ranks (as int) defining the current face.
 <dt> o 
    <a href="#GetVertexXyz()"><b>GetVertexXyz</b></a>()
<dd>  Returns the Cartesian coordinates of the current point.
 <dt> o 
    <a href="#GoToNext()"><b>GoToNext</b></a>()
<dd>  Skips to the next face.
 <dt> o 
    <a href="#IsExhausted()"><b>IsExhausted</b></a>()
<dd>  Tests whether the list is completed.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Resets the iterator to the beginning.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFace"></a><a name="GetFace()"></a> <dt> o <b>GetFace</b>

<dt>  <table><tr><td>  public <a href="../NewTopologicalObjects/interface_CATFace_9111.htm">CATFace *</a>  <b>GetFace</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the pointer to the current face.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the current face.
</dl>
</dl>
<a name="GetNbFace"></a><a name="GetNbFace()"></a> <dt> o <b>GetNbFace</b>

<dt>  <table><tr><td>  public <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">inline CATLONG32</a>  <b>GetNbFace</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the number of faces.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of faces.
</dl>
</dl>
<a name="GetPoec"></a><a name="GetPoec()"></a> <dt> o <b>GetPoec</b>

<dt>  <table><tr><td>  public <a href="../GeometricObjects/interface_CATPointOnEdgeCurve_72589.htm">inline CATPointOnEdgeCurve *</a>  <b>GetPoec</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the pointer to a PointOnEdgeCurve for the current face.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the corresponding PointOnEdgeCurve.
</dl>
</dl>
<a name="GetVertexAllNuPts"></a><a name="GetVertexAllNuPts(int[])"></a> <dt> o <b>GetVertexAllNuPts</b>

<dt>  <table><tr><td>  public virtual void  <b>GetVertexAllNuPts</b>(<td>int[] <td><tt>oNuPts</tt>) const  </table></dt>
<dl>
  <dd>
 Globally retrieves the points ranks for all the faces.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNuPts[]</tt>
   <dd> The array of the point numbers. The allocation has to be managed by
 the caller: use </tt>GetNbFace()</tt> for its dimension.</dd>
</dl>
</dl>
</dl>
<a name="GetVertexNuPts"></a><a name="GetVertexNuPts(int&amp;)"></a> <dt> o <b>GetVertexNuPts</b>

<dt>  <table><tr><td>  public virtual void  <b>GetVertexNuPts</b>(<td>int&amp; <td><tt>oNuPts</tt>) const  </table></dt>
<dl>
  <dd>
 Retrieves the points ranks (as int) defining the current face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNuPts</tt>
   <dd> The point ranks.</dd>
</dl>
</dl>
</dl>
<a name="GetVertexXyz"></a><a name="GetVertexXyz()"></a> <dt> o <b>GetVertexXyz</b>

<dt>  <table><tr><td>  public virtual double const *  <b>GetVertexXyz</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Returns the Cartesian coordinates of the current point.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The array of the Cartesian coordinates.
</dl>
</dl>
<a name="GoToNext"></a><a name="GoToNext()"></a> <dt> o <b>GoToNext</b>

<dt>  <table><tr><td>  public virtual void  <b>GoToNext</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Skips to the next face.
</dl>
<a name="IsExhausted"></a><a name="IsExhausted()"></a> <dt> o <b>IsExhausted</b>

<dt>  <table><tr><td>  public virtual <a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32</a>  <b>IsExhausted</b>(<td>)const  </table></dt>
<dl>
  <dd>
 Tests whether the list is completed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>1</tt> if the list is completed, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public virtual void  <b>Reset</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Resets the iterator to the beginning.
</dl>
<hr>
 This object is included in the file: <b>CATTessVertexIter.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTessellation</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
