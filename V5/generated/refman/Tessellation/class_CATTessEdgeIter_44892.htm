<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Tessellation Class CATTessEdgeIter</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../Tessellation.htm">This Framework</a>  <a href="class_CATSurfaceTessellator_92729.htm">Previous</a>  <a href="class_CATTessFanIter_39212.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>Tessellation Class CATTessEdgeIter</h1>
<pre>
CATTessEdgeIter
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTessEdgeIter</b>
</p>
<p>
<b><i> Class that outputs the point tessellation numbers corresponding to the
 the points on a given edge.</i></b><br>

 <br>The points are given relatively to one bounded (or adjacent) face. By assumption, the edges are
 considered here to bound two faces at most.
 <br> Such class is directly created by the <a href="../Tessellation/class_CATBodyTessellator_68290.htm#GetEdge">CATBodyTessellator.GetEdge</a> method.  Its deletion is managed at the
 CATBodyTessellator deletion. 
 <br> Use it according to the following scheme:
 <ul> 
 <li> Retrieve the number of points for a given edge, with regards to a given face. 
 <li> Allocate the array of numbers
 <li> Retrieve the result
 <li> Delete the array.
 </ul>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetEdgeNbPts(int)"><b>GetEdgeNbPts</b></a>(int)
<dd>  Returns the number of tesselation points for the edge relative to an adjacent face.
 <dt> o 
    <a href="#GetEdgeNuPts(int,int[])"><b>GetEdgeNuPts</b></a>(int,int[])
<dd>  Returns the tessellation point numbers for the edge relative to an adjacent face.
 <dt> o 
    <a href="#GetEdgeW(int,double[],short[])"><b>GetEdgeW</b></a>(int,double[],short[])
<dd>  Returns the tessellation point parameters for the edge relative to an adjacent face.
 <dt> o 
    <a href="#GetFace(int)"><b>GetFace</b></a>(int)
<dd>  Returns the pointer to an adjacent face.
 <dt> o 
    <a href="#GetPCurve(int)"><b>GetPCurve</b></a>(int)
<dd>  Returns the pointer to a PCurve.
 <dt> o 
    <a href="#GetSameSens(int)"><b>GetSameSens</b></a>(int)
<dd>  Returns a CATBoolean is TRUE if the tessellation point numbers for the edge and
 the Edge are traveling throughtthe same sense.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetEdgeNbPts"></a><a name="GetEdgeNbPts(int)"></a> <dt> o <b>GetEdgeNbPts</b>

<dt>  <table><tr><td>  public inline int  <b>GetEdgeNbPts</b>(<td>int <td><tt>iNuFace</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the number of tesselation points for the edge relative to an adjacent face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNuFace</tt>
   <dd> The first (<tt>iNuFace=1</tt>) or second (<tt>iNuFace=2</tt>) adjacent face.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of tessellation points for the edge relative the <tt>iNuFace</tt> adjacent face.
</dl>
</dl>
<a name="GetEdgeNuPts"></a><a name="GetEdgeNuPts(int,int[])"></a> <dt> o <b>GetEdgeNuPts</b>

<dt>  <table><tr><td>  public virtual void  <b>GetEdgeNuPts</b>(<td>int <td><tt>iNuFace</tt>,<tr><td></td><td>int[] <td><tt>ioNuPts</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the tessellation point numbers for the edge relative to an adjacent face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNuFace</tt>
   <dd> The first (<tt>iNuFace=1</tt>) or second (<tt>iNuFace=2</tt>) adjacent face.
 </dd>
    <dt><tt> ioNuPts</tt>
   <dd> The array of the tessellation point numbers. This array must be allocated and deallocated
 by the caller. Its dimension is given by the </dd>
<a href="../Tessellation/class_CATTessEdgeIter_44892.htm#GetEdgeNbPts">CATTessEdgeIter.GetEdgeNbPts</a> method. If the contour is open, the first and last points are different.
</dl>
</dl>
</dl>
<a name="GetEdgeW"></a><a name="GetEdgeW(int,double[],short[])"></a> <dt> o <b>GetEdgeW</b>

<dt>  <table><tr><td>  public virtual void  <b>GetEdgeW</b>(<td>int <td><tt>iNuFace</tt>,<tr><td></td><td>double[] <td><tt>ioCrvParam</tt>,<tr><td></td><td>short[] <td><tt>ioQualPts</tt>)const  </table></dt>
<dl>
  <dd>
 Returns the tessellation point parameters for the edge relative to an adjacent face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNuFace</tt>
   <dd> The first (<tt>iNuFace=1</tt>) or second (<tt>iNuFace=2</tt>) adjacent face.
 </dd>
    <dt><tt> ioCrvParam</tt>
   <dd> The array of the tessellation point parameters (as a CATCrvParam on the underlying edge curve)
 </dd>
    <dt><tt> ioQualPts</tt>
   <dd> The array which allows you to determine the ioCrvParam  quality:
   <ul>
 <li> 0 : ioCrvParam impossible computation
 <li> 1 : ioCrvParam exact computation
 <li> 2 : ioCrvParam does not neccessarily correspond to Xyz or Uv (merged points)
 </ul>
 These arrayes must be allocated and deallocated by the caller. 
 Its dimension is given by the </dd>
<a href="../Tessellation/class_CATTessEdgeIter_44892.htm#GetEdgeNbPts">CATTessEdgeIter.GetEdgeNbPts</a> method. If the contour is open, the first and last points are different.
</dl>
</dl>
</dl>
<a name="GetFace"></a><a name="GetFace(int)"></a> <dt> o <b>GetFace</b>

<dt>  <table><tr><td>  public <a href="../NewTopologicalObjects/interface_CATFace_9111.htm">inline CATFace *</a>  <b>GetFace</b>(<td>int <td><tt>iNuFace</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the pointer to an adjacent face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNuFace</tt>
   <dd> The first (<tt>iNuFace=1</tt>) or second (<tt>iNuFace=2</tt>) adjacent face.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the corresponding face.
</dl>
</dl>
<a name="GetPCurve"></a><a name="GetPCurve(int)"></a> <dt> o <b>GetPCurve</b>

<dt>  <table><tr><td>  public <a href="../GeometricObjects/interface_CATPCurve_16231.htm">inline CATPCurve *</a>  <b>GetPCurve</b>(<td>int <td><tt>iNuFace</tt>) const  </table></dt>
<dl>
  <dd>
 Returns the pointer to a PCurve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNuFace</tt>
   <dd> The first (<tt>iNuFace=1</tt>) or second (<tt>iNuFace=2</tt>) adjacent face.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the corresponding PCurve.
</dl>
</dl>
<a name="GetSameSens"></a><a name="GetSameSens(int)"></a> <dt> o <b>GetSameSens</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">inline CATBoolean</a>  <b>GetSameSens</b>(<td>int <td><tt>iNuFace</tt>) const  </table></dt>
<dl>
  <dd>
 Returns a CATBoolean is TRUE if the tessellation point numbers for the edge and
 the Edge are traveling throughtthe same sense.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNuFace</tt>
   <dd> The first (<tt>iNuFace=1</tt>) or second (<tt>iNuFace=2</tt>) adjacent face.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a CATBoolean is TRUE if the tessellation point numbers for the edge and
 the Edge are traveling throughtthe same sense.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATTessEdgeIter.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTessellation</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
