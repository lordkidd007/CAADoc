<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PCBoardBase Interface CATIACbdUserImportIDF</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PCBoardBase.htm" href="../PCBoardBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PCBoardBase";	}
		function getCurrentObjectName() { 
 	return "CATIACbdUserImportIDF"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PCBoardBase Interface CATIACbdUserImportIDF</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIACbdUserImportIDF_28709','CATIACbdUserImportIDF','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../PCBoardBase/class_CATCbdUserImportAdapter_32570.htm">CATCbdUserImportAdapter</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIACbdUserImportIDF</b>
</p>
<p>
<b><i> Interface to implement by late type CATCbdSoftwareOpeness.</i></b><br>

 <b>Role:</b> If this interface is implemented by using this late type, 
 the main import box of Circuit Board Design is modified as following :
 <br>
 a path has to be selected for exporting the report test file of the import
 <br>
 a choice for importing or not IDF 3.0 ++ features 
 <br>
 a selection of thickness for the copper holes.
<br>
 <b>Important notice</b>: Using the <script type="text/javascript"> activateLinkAnchor('CATCbdUserImportAdapter','','CATCbdUserImportAdapter') </script> as a base class when implementing <tt>CATIACbdUserImportIDF</tt> is mandatory. 
 <p><b>BOA information</b>: this interface can be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page. 
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ImportFile(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,boolean,boolean,CATUnicodeString&amp;,boolean,boolean,boolean,double,CATUnicodeString)"><b>ImportFile</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,boolean,boolean,CATUnicodeString&amp;,boolean,boolean,boolean,double,CATUnicodeString)
<dd>  Import an IDF file using the implementation of the partner.
 <dt> o 
    <a href="#IsLicenseAvailable()"><b>IsLicenseAvailable</b></a>()
<dd>  Check if the license of the partner is activated on the current installation.
 <dt> o 
    <a href="#SetProgressionBar(CATDlgProgress*)"><b>SetProgressionBar</b></a>(CATDlgProgress*)
<dd>  Set the progression bar object
 <br><b>Role:</b> this method allows giving a pointer on the  progression bar object displayed in the Import IDF dialog box.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ImportFile"></a><a name="ImportFile(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,boolean,boolean,CATUnicodeString&amp;,boolean,boolean,boolean,double,CATUnicodeString)"></a> <dt> o <b>ImportFile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ImportFile</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iRootProduct</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iBoardReference</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPathFile</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPathLib</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatalogPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iWithCatalog</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>icataloginReadWrite</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCsvPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iWithCsvFile</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>DrillHoles</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iImportCopperAndLayer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iHoleCopperThickness</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iImportOutputPath</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Import an IDF file using the implementation of the partner. 
 <br><b>Role:</b> The import IDF can be provided by a partner supporting IDF 3.0 + features. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootProduct</tt>
   <dd>  The root product of the current opened document
 </dd>
    <dt><tt> iBoardReference</tt>
   <dd>  The current Board reference . Only valuated in mode Import in context. 
 </dd>
    <dt><tt> iPathFile</tt>
   <dd> path of the IDF file to import
 </dd>
    <dt><tt> iPathLib</tt>
   <dd>  path of  the library file to import (can be empty) 
 </dd>
    <dt><tt> iCatalogPath</tt>
   <dd>   path of  the catalog file where the components are stored potentially (can be empty) 
 </dd>
    <dt><tt> iWithCatalog</tt>
   <dd> true if the catalog option is checked 
 </dd>
    <dt><tt> icataloginReadWrite</tt>
   <dd> true if the catalog is in readWrite mode 
 </dd>
    <dt><tt> iCsvPath</tt>
   <dd> path of the csv file (can be empty) 
 </dd>
    <dt><tt> iWithCsvFile</tt>
   <dd> true if the csv file option is checked 
 </dd>
    <dt><tt> DrillHoles</tt>
   <dd> true is the DrillHoles option is checked
 </dd>
    <dt><tt>	iImportCopperAndLayer</tt>
   <dd> true if the import of the IDF 3.0+ features option is checked
 </dd>
    <dt><tt> iHoleCopperThickness,</tt>
   <dd> The thickness of the copper holes  in USI unit.
 </dd>
    <dt><tt> iImportOutputPath</tt>
   <dd> the path if the output import Report
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK or E_FAIL
</dl>
</dl>
<a name="IsLicenseAvailable"></a><a name="IsLicenseAvailable()"></a> <dt> o <b>IsLicenseAvailable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsLicenseAvailable</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Check if the license of the partner is activated on the current installation.
 <br><b>Role:</b>
 this method is called by the CBD import code. 
 <br>
 If the return value is S_OK , the new 
 section in the dialog box is displayed and activated. 
 <br>
 If the return value is E_FAIL, the new new 
 section in the dialog box is displayed and deactivated. 
 <br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK or E_FAIL
</dl>
</dl>
<a name="SetProgressionBar"></a><a name="SetProgressionBar(CATDlgProgress*)"></a> <dt> o <b>SetProgressionBar</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetProgressionBar</b>(<td><script type="text/javascript"> activateLink('CATDlgProgress','CATDlgProgress*')</script> <td><tt>iptrProgressBar</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Set the progression bar object
 <br><b>Role:</b> this method allows giving a pointer on the  progression bar object displayed in the Import IDF dialog box.
 <br>
 The partner will be able to manage the range and steps of the  progression bar. 
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptrProgressBar</tt>
   <dd>  The root product of the current opened document
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK or E_FAIL
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIACbdUserImportIDF.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPCBInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

