<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAssemblyInterfaces Class CATAsmConstraintServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAssemblyInterfaces.htm" href="../CATAssemblyInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAssemblyInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATAsmConstraintServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAssemblyInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATAsmConstraintServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAsmConstraintServices_52077','CATAsmConstraintServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAsmConstraintServices</b>
</p>
<p>
<b><i> Class dedicated to Assembly Constraints services.</i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ListConstraints(CATIProduct*,CATLISTV(CATICst_var)&amp;)"><b>ListConstraints</b></a>(CATIProduct*,CATLISTV(CATICst_var)&amp;)
<dd>  Gets the list of constraints under a given reference product.
 <dt> o 
    <a href="#RefreshConstraint(CATICst*)"><b>RefreshConstraint</b></a>(CATICst*)
<dd>  Refreshes a constraint's status.
 <dt> o 
    <a href="#RefreshConstraintsInProduct(CATIProduct*)"><b>RefreshConstraintsInProduct</b></a>(CATIProduct*)
<dd>  Refreshes the status of every constraint in a given product.
 <dt> o 
    <a href="#RemoveConstraint(CATICst*)"><b>RemoveConstraint</b></a>(CATICst*)
<dd>  Removes a constraint.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ListConstraints"></a><a name="ListConstraints(CATIProduct*,CATLISTV(CATICst_var)&amp;)"></a> <dt> o <b>ListConstraints</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListConstraints</b>(<td> const <script type="text/javascript"> activateLink('CATIProduct','CATIProduct*')</script> <td><tt>iProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATICst_var)','CATLISTV(CATICst_var)&amp;')</script> <td><tt>oConstraintsList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of constraints under a given reference product.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd>    The product identifies the document where the constraint were created. 
    You can only get the constraints of a reference product.
 </dd>
    <dt><tt> oConstraintsList</tt>
   <dd>    The resulting constraints list
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>          <dd>if the product contains at least one constraint
   <dt><tt>E_POINTER</tt>     <dd>if iProduct is NULL
   <dt><tt>E_INVALIDARG</tt>  <dd>if iProduct is not a reference product
   <dt><tt>E_FAIL</tt>        <dd>elsewhere.
   </dl>
</dl>
</dl>
<a name="RefreshConstraint"></a><a name="RefreshConstraint(CATICst*)"></a> <dt> o <b>RefreshConstraint</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RefreshConstraint</b>(<td> const <script type="text/javascript"> activateLink('CATICst','CATICst*')</script> <td><tt>iConstraint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Refreshes a constraint's status.
 This method only works with the PX1 product licence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConstraint</tt>
   <dd>    The constraint to refresh
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>          <dd>if the constraint is refreshed
   <dt><tt>E_POINTER</tt>     <dd>if iConstraint is NULL
   <dt><tt>E_NOTIMPL</tt>     <dd>if the PX1 licence si not available
   <dt><tt>E_FAIL</tt>        <dd>elsewhere.
   </dl>
</dl>
</dl>
<a name="RefreshConstraintsInProduct"></a><a name="RefreshConstraintsInProduct(CATIProduct*)"></a> <dt> o <b>RefreshConstraintsInProduct</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RefreshConstraintsInProduct</b>(<td> const <script type="text/javascript"> activateLink('CATIProduct','CATIProduct*')</script> <td><tt>iProduct</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Refreshes the status of every constraint in a given product.
 This method is not recursive: the constraints of the sub assemblies won't be refreshed.
 This method only works with the PX1 product licence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd>    The product which constraints must be refreshed
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>          <dd>if at least one constraint is refreshed
   <dt><tt>E_POINTER</tt>     <dd>if iProduct is NULL
   <dt><tt>E_NOTIMPL</tt>     <dd>if the PX1 licence si not available
   <dt><tt>E_FAIL</tt>        <dd>elsewhere.
   </dl>
</dl>
</dl>
<a name="RemoveConstraint"></a><a name="RemoveConstraint(CATICst*)"></a> <dt> o <b>RemoveConstraint</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveConstraint</b>(<td> const <script type="text/javascript"> activateLink('CATICst','CATICst*')</script> <td><tt>iCst</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCst</tt>
   <dd>    The constraint to remove. 
    You can only remove a reference constraint i.e. under a reference product.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>          <dd>if the constraint is removed
   <dt><tt>E_POINTER</tt>     <dd>if iCst is NULL
   <dt><tt>E_INVALIDARG</tt>  <dd>if iCst is not a reference constraint
   <dt><tt>E_FAIL</tt>        <dd>elsewhere.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAsmConstraintServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAssemblyInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

