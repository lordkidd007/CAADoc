<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAssemblyInterfaces Interface CATIAsmCstSetFeature</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAssemblyInterfaces.htm" href="../CATAssemblyInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAssemblyInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIAsmCstSetFeature"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAssemblyInterfaces Interface CATIAsmCstSetFeature</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIAsmCstSetFeature_44831','CATIAsmCstSetFeature','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIAsmCstSetFeature</b>
</p>
<p>
<b><i> Interface to manage the set of constraints.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFatherSet(CATIAsmCstSetFeature_var&amp;)"><b>GetFatherSet</b></a>(CATIAsmCstSetFeature_var&amp;)
<dd>  Give the father set.
 <dt> o 
    <a href="#ListCstChildren(CATLISTV(CATBaseUnknown_var)&amp;)"><b>ListCstChildren</b></a>(CATLISTV(CATBaseUnknown_var)&amp;)
<dd>  Give the list of constraints included in the set
 <br>by default the root set hold all the constraints.
 <dt> o 
    <a href="#ListSetChildren(CATListValCATISpecObject_var&amp;)"><b>ListSetChildren</b></a>(CATListValCATISpecObject_var&amp;)
<dd>  Give the list of set child.
 <dt> o 
    <a href="#MoveConstraintsFrom(CATListValCATISpecObject_var&amp;,CATLISTV(CATBaseUnknown_var)&amp;,CATBaseUnknown_var&amp;)"><b>MoveConstraintsFrom</b></a>(CATListValCATISpecObject_var&amp;,CATLISTV(CATBaseUnknown_var)&amp;,CATBaseUnknown_var&amp;)
<dd>  Move a list of constraints on this set from this set or another one.
 <dt> o 
    <a href="#MoveSetFrom(CATIAsmCstSetFeature_var&amp;,CATIAsmCstSetFeature_var&amp;,CATISpecObject_var&amp;)"><b>MoveSetFrom</b></a>(CATIAsmCstSetFeature_var&amp;,CATIAsmCstSetFeature_var&amp;,CATISpecObject_var&amp;)
<dd>  Move a set on this set from this set or another one.
 <dt> o 
    <a href="#RemoveSetChild(CATIAsmCstSetFeature_var&amp;)"><b>RemoveSetChild</b></a>(CATIAsmCstSetFeature_var&amp;)
<dd>  Remove a set child.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFatherSet"></a><a name="GetFatherSet(CATIAsmCstSetFeature_var&amp;)"></a> <dt> o <b>GetFatherSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFatherSet</b>(<td><script type="text/javascript"> activateLink('CATIAsmCstSetFeature_var','CATIAsmCstSetFeature_var&amp;')</script> <td><tt>oFatherSet</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Give the father set.
 <br>for the root set, the method return NULL_var (no father set)
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFatherSet</tt>
   <dd>      the returned father set.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       Error code of function.
</dl>
</dl>
<a name="ListCstChildren"></a><a name="ListCstChildren(CATLISTV(CATBaseUnknown_var)&amp;)"></a> <dt> o <b>ListCstChildren</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListCstChildren</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oCstChildrenList</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Give the list of constraints included in the set
 <br>by default the root set hold all the constraints.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCstChildrenList</tt>
   <dd>      list of the included constraints.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       Error code of function.
</dl>
</dl>
<a name="ListSetChildren"></a><a name="ListSetChildren(CATListValCATISpecObject_var&amp;)"></a> <dt> o <b>ListSetChildren</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListSetChildren</b>(<td><script type="text/javascript"> activateLink('CATListValCATISpecObject_var','CATListValCATISpecObject_var&amp;')</script> <td><tt>oSetChildrenList</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Give the list of set child.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSetChildrenList</tt>
   <dd>      the returned list of child.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       Error code of function.
</dl>
</dl>
<a name="MoveConstraintsFrom"></a><a name="MoveConstraintsFrom(CATListValCATISpecObject_var&amp;,CATLISTV(CATBaseUnknown_var)&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>MoveConstraintsFrom</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>MoveConstraintsFrom</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATISpecObject_var','CATListValCATISpecObject_var&amp;')</script> <td><tt>iListFromSet</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>iListCst</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iPreviousCst</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Move a list of constraints on this set from this set or another one.
 <br>for the root set, the method return NULL_var (no father set)
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListFromSet</tt>
   <dd>      list of origin sets of the moved constraints.
   </dd>
    <dt><tt> iListCst</tt>
   <dd>      list of constraints to move.
   </dd>
    <dt><tt> iPreviousCst</tt>
   <dd>      moved constraints will appear after this previous constraint.
      <br>by default (NULL_var), they appear after all other brother constraints
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       Error code of function.
</dl>
</dl>
<a name="MoveSetFrom"></a><a name="MoveSetFrom(CATIAsmCstSetFeature_var&amp;,CATIAsmCstSetFeature_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>MoveSetFrom</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>MoveSetFrom</b>(<td> const <script type="text/javascript"> activateLink('CATIAsmCstSetFeature_var','CATIAsmCstSetFeature_var&amp;')</script> <td><tt>iFromSet</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIAsmCstSetFeature_var','CATIAsmCstSetFeature_var&amp;')</script> <td><tt>iSetToMove</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iPreviousCst</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Move a set on this set from this set or another one.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFromSet</tt>
   <dd>      the origin father of the moved set.
   </dd>
    <dt><tt> iSetToMove</tt>
   <dd>      the set to move.
   </dd>
    <dt><tt> iPreviousCst</tt>
   <dd>      the moved set will appear after this previous set.
      <br>by default (NULL_var), the moved set will appear after all other brother set
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       Error code of function.
</dl>
</dl>
<a name="RemoveSetChild"></a><a name="RemoveSetChild(CATIAsmCstSetFeature_var&amp;)"></a> <dt> o <b>RemoveSetChild</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveSetChild</b>(<td> const <script type="text/javascript"> activateLink('CATIAsmCstSetFeature_var','CATIAsmCstSetFeature_var&amp;')</script> <td><tt>iSetChild</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Remove a set child.
 <br>All his children set and constraints are affected to the father set
 <br>(To delete the set and all his children, use the method remove on LyfeCycleObject Interface)
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSetChild</tt>
   <dd>      the set child to be removed.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       Error code of function.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIAsmCstSetFeature.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAssemblyInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

