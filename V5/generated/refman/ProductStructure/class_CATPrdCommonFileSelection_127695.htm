<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ProductStructure Class CATPrdCommonFileSelection</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../ProductStructure.htm">This Framework</a>  <a href="class_CATPrsWorkModeServices_99846.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>ProductStructure Class CATPrdCommonFileSelection</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATPrdCommonFileSelection
 </pre>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATPrdCommonFileSelection</b>
</p>
<p>
<b><i> Base class to give basic implementation for CATIProductFileSelection.</i></b><br>

 <b>usage:</b> To define a new kind of file recognized by ProductStructure's import,
 use C++ inheritance on CATPrdCommonFileSelection class to implement this interface on your file, 
 and in the constructor of the implementation, add the kind of file to recognize.

 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../ProductStructure/interface_CATIProductFileSelection_117816.htm">CATIProductFileSelection</a>, <a href="../ProductStructure/interface_CATIProductSelection_82824.htm">CATIProductSelection</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATPrdCommonFileSelection()"><b>CATPrdCommonFileSelection</b></a>()
<dd>  Constructs a CATPrdCommonFileSelection.
 <dt> o 
    <a href="#~CATPrdCommonFileSelection()"><b>~CATPrdCommonFileSelection</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ExtractProducts(CATIContainer*,CATIProduct*,CATListValCATBaseUnknown_var*&amp;)"><b>ExtractProducts</b></a>(CATIContainer*,CATIProduct*,CATListValCATBaseUnknown_var*&amp;)
<dd>   Extracts products representing the selected files.
 <dt> o 
    <a href="#GetSelectionCount(long&amp;)"><b>GetSelectionCount</b></a>(long&amp;)
<dd>   Default implementation assumes that each selected file is able to generate exactly one product.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATPrdCommonFileSelection"></a><a name="CATPrdCommonFileSelection()"></a> <dt> o <b>CATPrdCommonFileSelection</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATPrdCommonFileSelection</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs a CATPrdCommonFileSelection.
 <br><b>usage:</b> Add the kind of file to recognize in _typesList after creating that list.
</dl>
<a name="~CATPrdCommonFileSelection"></a><a name="~CATPrdCommonFileSelection()"></a> <dt> o <b>~CATPrdCommonFileSelection</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATPrdCommonFileSelection</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="ExtractProducts"></a><a name="ExtractProducts(CATIContainer*,CATIProduct*,CATListValCATBaseUnknown_var*&amp;)"></a> <dt> o <b>ExtractProducts</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ExtractProducts</b>(<td><a href="../ObjectModelerBase/interface_CATIContainer_34394.htm">CATIContainer*</a> <td><tt>iOptionalContainer</tt>,<tr><td></td><td><a href="../ProductStructure/interface_CATIProduct_24728.htm">CATIProduct*</a> <td><tt>iTargetProduct</tt>,<tr><td></td><td>CATListValCATBaseUnknown_var*&amp; <td><tt>oList</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Extracts products representing the selected files.
 <br>Default implementation is valid for files which contain 3D information ( as vrml ).
</dl>
<a name="GetSelectionCount"></a><a name="GetSelectionCount(long&amp;)"></a> <dt> o <b>GetSelectionCount</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetSelectionCount</b>(<td>long&amp; <td><tt>oCount</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Default implementation assumes that each selected file is able to generate exactly one product.
</dl>
<hr>
 This object is included in the file: <b>CATPrdCommonFileSelection.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATProductStructure1</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
