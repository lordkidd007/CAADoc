<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSchPlatformInterfaces Class CATEASchAppCCPCGCntrInfo</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSchPlatformInterfaces.htm" href="../CATSchPlatformInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSchPlatformInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATEASchAppCCPCGCntrInfo"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATSchPlatformInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATEASchAppCCPCGCntrInfo</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATEASchAppCCPCGCntrInfo_55140','CATEASchAppCCPCGCntrInfo','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATEASchAppCCPCGCntrInfo</b>
</p>
<p>
<b><i> Super class to derive implementation for interface CATISchAppCCPCGCntrInfo.</i></b><br>

 <b>Role</b>: Adaptor</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATEASchAppCCPCGCntrInfo()"><b>CATEASchAppCCPCGCntrInfo</b></a>()
<dd>  Constructs an empty CATEASchAppCCPCGCntrInfo.
 <dt> o 
    <a href="#~CATEASchAppCCPCGCntrInfo()"><b>~CATEASchAppCCPCGCntrInfo</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AppGetCGConnectInfo(CATISchAppConnector*,CATIUnknownList**,CATICStringList**)"><b>AppGetCGConnectInfo</b></a>(CATISchAppConnector*,CATIUnknownList**,CATICStringList**)
<dd>  
 <dt> o 
    <a href="#AppGetCGConnectInfo2(CATISchAppConnector*,CATIUnknownList**,CATListValCATUnicodeString&amp;)"><b>AppGetCGConnectInfo2</b></a>(CATISchAppConnector*,CATIUnknownList**,CATListValCATUnicodeString&amp;)
<dd>  Store appropriate information as attributes of iCompGroup.
 <dt> o 
    <a href="#AppPostCGPlacementConnect(CATISchAppConnector*,char*)"><b>AppPostCGPlacementConnect</b></a>(CATISchAppConnector*,char*)
<dd>  
 <dt> o 
    <a href="#AppPostCGPlacementConnect2(CATISchAppConnector*,CATUnicodeString&amp;)"><b>AppPostCGPlacementConnect2</b></a>(CATISchAppConnector*,CATUnicodeString&amp;)
<dd>  Post process after placing this connector whoes owner is a component group.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATEASchAppCCPCGCntrInfo"></a><a name="CATEASchAppCCPCGCntrInfo()"></a> <dt> o <b>CATEASchAppCCPCGCntrInfo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATEASchAppCCPCGCntrInfo</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty CATEASchAppCCPCGCntrInfo.
</dl>
<a name="~CATEASchAppCCPCGCntrInfo"></a><a name="~CATEASchAppCCPCGCntrInfo()"></a> <dt> o <b>~CATEASchAppCCPCGCntrInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATEASchAppCCPCGCntrInfo</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AppGetCGConnectInfo"></a><a name="AppGetCGConnectInfo(CATISchAppConnector*,CATIUnknownList**,CATICStringList**)"></a> <dt> o <b>AppGetCGConnectInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AppGetCGConnectInfo</b>(<td> const <script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iCntrSrcOfThis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList**')</script> <td><tt>oLConCntrNeedsMapping</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICStringList','CATICStringList**')</script> <td><tt>oLCStrConMainCntrName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 
 Use 
<script type="text/javascript"> activateLinkAnchor('CATEASchAppCCPCGCntrInfo','AppGetCGConnectInfo2','CATEASchAppCCPCGCntrInfo.AppGetCGConnectInfo2') </script> instead. Store appropriate information as attributes of iCompGroup.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCntrSrcOfThis</tt>
   <dd>   The connector that is a counterpart of this connector in the 
   source component. It provides connectivity information of the
   connector in the source component (this connector is in the target
   component. Terminology as used in cut-copy-paste architecture).
 </dd>
    <dt><tt> oLConCntrNeedsMapping</tt>
   <dd>   A list of connector interfaces. These are the connectors that
   are connected to iCntrSrcOfThis. The caller needs to find the
   corresponding copies under the CCP architecture.
 </dd>
    <dt><tt> oLCStrConMainCntrName</tt>
   <dd>   A list of names of connectors. These connectors will be used
   used to identify the reference connection (such as cable connection)
   when the pin/wire connections are made in AppPostCGPlacementConnect.</dd>
</dl>
</dl>
</dl>
<a name="AppGetCGConnectInfo2"></a><a name="AppGetCGConnectInfo2(CATISchAppConnector*,CATIUnknownList**,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>AppGetCGConnectInfo2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AppGetCGConnectInfo2</b>(<td> const <script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iCntrSrcOfThis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList**')</script> <td><tt>oLConCntrNeedsMapping</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>oLCStrConMainCntrName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Store appropriate information as attributes of iCompGroup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCntrSrcOfThis</tt>
   <dd>   The connector that is a counterpart of this connector in the 
   source component. It provides connectivity information of the
   connector in the source component (this connector is in the target
   component. Terminology as used in cut-copy-paste architecture).
 </dd>
    <dt><tt> oLConCntrNeedsMapping</tt>
   <dd>   A list of connector interfaces. These are the connectors that
   are connected to iCntrSrcOfThis. The caller needs to find the
   corresponding copies under the CCP architecture.
 </dd>
    <dt><tt> oLUStrConMainCntrName</tt>
   <dd>   A list of names of connectors. These connectors will be used
   used to identify the reference connection (such as cable connection)
   when the pin/wire connections are made in AppPostCGPlacementConnect.</dd>
</dl>
</dl>
</dl>
<a name="AppPostCGPlacementConnect"></a><a name="AppPostCGPlacementConnect(CATISchAppConnector*,char*)"></a> <dt> o <b>AppPostCGPlacementConnect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AppPostCGPlacementConnect</b>(<td> const <script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iCntrToConnect</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iConMainCntrName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 
 Use 
<script type="text/javascript"> activateLinkAnchor('CATEASchAppCCPCGCntrInfo','AppPostCGPlacementConnect2','CATEASchAppCCPCGCntrInfo.AppPostCGPlacementConnect2') </script> instead. Post process after placing this connector whoes owner is a component group.
 Through this method application will make use of the information 
 stored by AppGetCGConnectInfo to connect this connector to the input
 connector.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCntrToConnect</tt>
   <dd>   The connector to connect to. 
 </dd>
    <dt><tt> iConMainCntrName</tt>
   <dd>   The name of the connector. The owner of this connector is connected
   to the owner of iCntrToConnect (for .e.g. if iCntrToConnect is a wire 
   connector, the iConMainCntrName is the name of a cable-extremity 
   connector).</dd>
</dl>
</dl>
</dl>
<a name="AppPostCGPlacementConnect2"></a><a name="AppPostCGPlacementConnect2(CATISchAppConnector*,CATUnicodeString&amp;)"></a> <dt> o <b>AppPostCGPlacementConnect2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AppPostCGPlacementConnect2</b>(<td> const <script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iCntrToConnect</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iConMainCntrName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Post process after placing this connector whoes owner is a component group.
 Through this method application will make use of the information 
 stored by AppGetCGConnectInfo to connect this connector to the input
 connector.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCntrToConnect</tt>
   <dd>   The connector to connect to. 
 </dd>
    <dt><tt> iConMainCntrName</tt>
   <dd>   The name of the connector. The owner of this connector is connected
   to the owner of iCntrToConnect (for .e.g. if iCntrToConnect is a wire 
   connector, the iConMainCntrName is the name of a cable-extremity 
   connector).</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATEASchAppCCPCGCntrInfo.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSchItfCPP</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

