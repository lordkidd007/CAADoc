<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPDMBaseInterfaces Interface CATIPDMUESaveProcess</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPDMBaseInterfaces.htm" href="../CATPDMBaseInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPDMBaseInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIPDMUESaveProcess"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPDMBaseInterfaces Interface CATIPDMUESaveProcess</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPDMUESaveProcess_41542','CATIPDMUESaveProcess','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIPDMUESaveProcess</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeforeCommit(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"><b>BeforeCommit</b></a>(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)
<dd>   Method to implement user-exit before commit “Save in ENOVIA”.
 <dt> o 
    <a href="#BeforeRollback(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"><b>BeforeRollback</b></a>(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)
<dd>   Method to implement user-exit before Rollback ENOVIA session.
 <dt> o 
    <a href="#BeforeSaveDialog(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"><b>BeforeSaveDialog</b></a>(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)
<dd>  Calls to the user exit occur at the following point in time BeforeSaveDialog   : Before the save pannel is proposed to the user
 OnOK               : When the OnOK is pressed by the user
 BeforeStartingSave : Before the save action is started 
 OnSaveSucceeded    : At successfull completion of the save action
 OnSaveFailed       : At failure of the save action

 They have all the same signature: 

 
 <dt> o 
    <a href="#BeforeStartingSave(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"><b>BeforeStartingSave</b></a>(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)
<dd>  Calls to the user exit occur at the following point in time BeforeStartingSave : Before the save action is started
 <dt> o 
    <a href="#OnOK(CATLISTP(CATDocument)*,int,CATIPDMSaveInfo*,CATIPDMSaveAction*)"><b>OnOK</b></a>(CATLISTP(CATDocument)*,int,CATIPDMSaveInfo*,CATIPDMSaveAction*)
<dd>  Calls to the user exit occur at the following point in time OnOK               : When the OnOK is pressed by the user
 <dt> o 
    <a href="#OnSaveFailed(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"><b>OnSaveFailed</b></a>(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)
<dd>  Calls to the user exit occur at the following point in time OnSaveFailed       : At failure of the save action
 <dt> o 
    <a href="#OnSaveSucceeded(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"><b>OnSaveSucceeded</b></a>(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)
<dd>  Calls to the user exit occur at the following point in time OnSaveSucceeded    : At successfull completion of the save action
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BeforeCommit"></a><a name="BeforeCommit(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"></a> <dt> o <b>BeforeCommit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeforeCommit</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATDocument)','CATLISTP(CATDocument)*')</script> <td><tt>iDocsToSave</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveInfo','CATIPDMSaveInfo*')</script> <td><tt>ipInfo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveAction','CATIPDMSaveAction*')</script> <td><tt>ipAction</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Method to implement user-exit before commit “Save in ENOVIA”.

 <br><b>Role</b>: When implemented, this method will be called when Save process is completed successfully and before Commit the ENOVIA session.
<p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDocsToSave</tt>
   <dd>    (input) The list of documents involved in the Save process.
 </dd>
    <dt><tt> ipInfo</tt>
   <dd>    (input) The list of information related to the documents given in first parameter.
* @param ipAction
    (input) The list of actions related to the documents given in first parameter.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul>
     <li><tt>E_FAIL</tt>: Function has failed, and as consequence Rollback of the ENOVIA session will be 
                          performed. Notice also that in case user-exit BeforeRollback is implemented, 
                          it will be executed before actually rolling back the ENOVIA session 
                          (see BeforeRollBack).</li>
     <li><tt>Otherwise</tt>: Function is considered successfull, and hence Commit will be performed.</li> 
  </ul>
</dl>
</dl>
<a name="BeforeRollback"></a><a name="BeforeRollback(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"></a> <dt> o <b>BeforeRollback</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeforeRollback</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATDocument)','CATLISTP(CATDocument)*')</script> <td><tt>iDocsToSave</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveInfo','CATIPDMSaveInfo*')</script> <td><tt>ipInfo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveAction','CATIPDMSaveAction*')</script> <td><tt>ipAction</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Method to implement user-exit before Rollback ENOVIA session.

 <br><b>Role</b>: When implemented, this method will be called when Save process failed and before Rollback the ENOVIA session.
<p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDocsToSave</tt>
   <dd>    (input) The list of documents involved in the Save process.
 </dd>
    <dt><tt> ipInfo</tt>
   <dd>    (input) The list of information related to the documents given in first parameter.
* @param ipAction
    (input) The list of actions related to the documents given in first parameter.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> : Whatever is the function returned code, the Rollback will be performed
</dl>
</dl>
<a name="BeforeSaveDialog"></a><a name="BeforeSaveDialog(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"></a> <dt> o <b>BeforeSaveDialog</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeforeSaveDialog</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATDocument)','CATLISTP(CATDocument)*')</script> <td><tt>iDocsToSave</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveInfo','CATIPDMSaveInfo*')</script> <td><tt>ipInfo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveAction','CATIPDMSaveAction*')</script> <td><tt>ipAction</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Calls to the user exit occur at the following point in time BeforeSaveDialog   : Before the save pannel is proposed to the user
 OnOK               : When the OnOK is pressed by the user
 BeforeStartingSave : Before the save action is started 
 OnSaveSucceeded    : At successfull completion of the save action
 OnSaveFailed       : At failure of the save action

 They have all the same signature: 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDocsToSave</tt>
   <dd> List of documents that are being saved
 </dd>
    <dt><tt> ipInfo</tt>
   <dd>   Interface pointer to let the user exit acess information about the saving context.                 Refer to the intf definition for available info

 </dd>
    <dt><tt> ipAction</tt>
   <dd> Interface pointer to let the user exit influence the save process                 Refer to the intf definition for available action
 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     S_OK:   Success 
    E_FAIL: Failure If returns from BeforeSaveDialog, OnOK, BeforeStartingSave interupt the save 

</dl>
</dl>
<a name="BeforeStartingSave"></a><a name="BeforeStartingSave(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"></a> <dt> o <b>BeforeStartingSave</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeforeStartingSave</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATDocument)','CATLISTP(CATDocument)*')</script> <td><tt>iDocsToSave</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveInfo','CATIPDMSaveInfo*')</script> <td><tt>ipInfo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveAction','CATIPDMSaveAction*')</script> <td><tt>ipAction</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Calls to the user exit occur at the following point in time BeforeStartingSave : Before the save action is started
</dl>
<a name="OnOK"></a><a name="OnOK(CATLISTP(CATDocument)*,int,CATIPDMSaveInfo*,CATIPDMSaveAction*)"></a> <dt> o <b>OnOK</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OnOK</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATDocument)','CATLISTP(CATDocument)*')</script> <td><tt>iDocsToSave</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>onOKNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveInfo','CATIPDMSaveInfo*')</script> <td><tt>ipInfo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveAction','CATIPDMSaveAction*')</script> <td><tt>ipAction</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Calls to the user exit occur at the following point in time OnOK               : When the OnOK is pressed by the user
</dl>
<a name="OnSaveFailed"></a><a name="OnSaveFailed(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"></a> <dt> o <b>OnSaveFailed</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OnSaveFailed</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATDocument)','CATLISTP(CATDocument)*')</script> <td><tt>iDocsToSave</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveInfo','CATIPDMSaveInfo*')</script> <td><tt>ipInfo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveAction','CATIPDMSaveAction*')</script> <td><tt>ipAction</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Calls to the user exit occur at the following point in time OnSaveFailed       : At failure of the save action
</dl>
<a name="OnSaveSucceeded"></a><a name="OnSaveSucceeded(CATLISTP(CATDocument)*,CATIPDMSaveInfo*,CATIPDMSaveAction*)"></a> <dt> o <b>OnSaveSucceeded</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OnSaveSucceeded</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATDocument)','CATLISTP(CATDocument)*')</script> <td><tt>iDocsToSave</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveInfo','CATIPDMSaveInfo*')</script> <td><tt>ipInfo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPDMSaveAction','CATIPDMSaveAction*')</script> <td><tt>ipAction</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Calls to the user exit occur at the following point in time OnSaveSucceeded    : At successfull completion of the save action
</dl>
<hr>
 This object is included in the file: <b>CATIPDMUESaveProcess.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPDMBaseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

