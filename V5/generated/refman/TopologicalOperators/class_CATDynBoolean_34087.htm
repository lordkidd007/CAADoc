<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>TopologicalOperators Class CATDynBoolean</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../TopologicalOperators.htm">This Framework</a>  <a href="class_CATDistanceMinBodyBody_97178.htm">Previous</a>  <a href="class_CATDynChamfer_33849.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>TopologicalOperators Class CATDynBoolean</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../GeometricObjects/class_CATCGMOperator_38910.htm">GeometricObjects.CATCGMOperator</a>
    |
    +---<a href="../NewTopologicalObjects/class_CATTopOperator_41154.htm">NewTopologicalObjects.CATTopOperator</a>
      |
      +---<a href="../TopologicalOperators/class_CATDynOperator_40990.htm">TopologicalOperators.CATDynOperator</a>
        |
        +---CATDynBoolean
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDynBoolean</b>
</p>
<p>
<b><i> Class defining the Boolean operators on bodies.</i></b><br>

 <br>The Boolean operations are defined between two lump bodies.  
<br>
 The CATDynBoolean operator follows the global frame of the topological operators and satisfies the smart mechanism: 
 the input bodies are not modified. A new resulting body is created, 
 possibly sharing data with the input bodies.
<ul>
 <li>A CATDynBoolean operator is created with the <tt>CATCreateDynBoolean</tt> global function:
 It must be directly deleted after use with the usual C++ <tt>delete</tt> operator. It is not streamable. 
<li>Options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. In particular, an optimized mode
 allows you to do some local operations in union mode.
<li>In both cases, the result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a> method to remove it from the  geometric factory. 
</ul>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATDynBoolean()"><b>~CATDynBoolean</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#NoSimplif()"><b>NoSimplif</b></a>()
<dd>  Defines a mode such that the resulting body is not simplified.
 <dt> o 
    <a href="#SetContactFacesForUnion(CATBody*,CATLISTP(CATFace)&amp;)"><b>SetContactFacesForUnion</b></a>(CATBody*,CATLISTP(CATFace)&amp;)
<dd>  Defines an upper set of faces that are touched by the operation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATDynBoolean"></a><a name="~CATDynBoolean()"></a> <dt> o <b>~CATDynBoolean</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATDynBoolean</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="NoSimplif"></a><a name="NoSimplif()"></a> <dt> o <b>NoSimplif</b>

<dt>  <table><tr><td>  public virtual void  <b>NoSimplif</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Defines a mode such that the resulting body is not simplified.
</dl>
<a name="SetContactFacesForUnion"></a><a name="SetContactFacesForUnion(CATBody*,CATLISTP(CATFace)&amp;)"></a> <dt> o <b>SetContactFacesForUnion</b>

<dt>  <table><tr><td>  public virtual void  <b>SetContactFacesForUnion</b>(<td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iBody</tt>,<tr><td></td><td> const <a href="../NewTopologicalObjects/class_CATLISTP(CATFace)_45018.htm">CATLISTP(CATFace)&amp;</a> <td><tt>iContactFaces</tt>)= 0  </table></dt>
<dl>
  <dd>
 Defines an upper set of faces that are touched by the operation.
 <br> This method must be called for both input bodies. This optimizes the boolean operation,
 that only processes the faces declared here, and can be used to stick
 bodies together when then share faces. It is important to give at least all
 the faces that are in (even partial) contact or that are intersecting, otherwise
 the Boolean operator cannot return a consistent result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBody</tt>
   <dd> The pointer to the body for which the faces are given.
 </dd>
    <dt><tt> iContactFaces</tt>
   <dd> The list of the pointers to the faces of <tt>iBody</tt> that are touched in the operation (at least).</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDynBoolean.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalOperators</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
