<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>TopologicalOperators Class CATDistanceMinBodyBody</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../TopologicalOperators.htm">This Framework</a>  <a href="class_CATCloseOperator_53432.htm">Previous</a>  <a href="class_CATDynBoolean_34087.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>TopologicalOperators Class CATDistanceMinBodyBody</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../GeometricObjects/class_CATCGMOperator_38910.htm">GeometricObjects.CATCGMOperator</a>
    |
    +---<a href="../NewTopologicalObjects/class_CATTopOperator_41154.htm">NewTopologicalObjects.CATTopOperator</a>
      |
      +---CATDistanceMinBodyBody
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDistanceMinBodyBody</b>
</p>
<p>
<b><i> Class defining the operator that computes the minimum distance between two bodies.</i></b><br>

 To use the operator:
 <ul><li>Create it with the <tt>CATCreateDistanceMinTopo</tt> global function,
 <li>Set parameters to tune its use (<tt>ADVANCED</tt> mode),
 <li>Run the operator (<tt>ADVANCED</tt> mode),
 <li>Retrieve the results with the <tt>Get</tt> methods, 
 <li>If needed, change an input body and rerun the modified operator (<tt>ADVANCED</tt> mode),
 <li><tt>delete</tt> it after use with the usual C++ <tt>delete</tt> operator.
 </ul>
 Note: If the operator is used in <tt>BASIC</tt> mode, the operation is directly computed at the 
 operator creation. So that you directly access the result without <tt>Run</tt>ning the operator.
 But you cannot tune the parameters, nor reuse it in another run with other input bodies.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATDistanceMinBodyBody()"><b>~CATDistanceMinBodyBody</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDistance()"><b>GetDistance</b></a>()
<dd>  Returns the computed minimum distance between the two bodies.
 <dt> o 
    <a href="#GetPointComputationMode()"><b>GetPointComputationMode</b></a>()
<dd>  Returns the computation mode (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#GetPoints(CATPoint*&amp;,CATPoint*&amp;)"><b>GetPoints</b></a>(CATPoint*&amp;,CATPoint*&amp;)
<dd>  Returns the points realizing the minimum distance (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#GetSupportCells(CATCell*&amp;,CATCell*&amp;)"><b>GetSupportCells</b></a>(CATCell*&amp;,CATCell*&amp;)
<dd>  Returns the cells on which are the points realizing the minimum distance (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#ReplaceBody(CATBody*,CATBody*)"><b>ReplaceBody</b></a>(CATBody*,CATBody*)
<dd>   Defines another computation (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Computes the distance (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetDistanceMax(double)"><b>SetDistanceMax</b></a>(double)
<dd>  Defines a maximum distance between the two bodies (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetPointComputationMode(CATBoolean)"><b>SetPointComputationMode</b></a>(CATBoolean)
<dd>  Asks for the computation of the points realizing the minimum distance (<tt>ADVANCED</tt> mode).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATDistanceMinBodyBody"></a><a name="~CATDistanceMinBodyBody()"></a> <dt> o <b>~CATDistanceMinBodyBody</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATDistanceMinBodyBody</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDistance"></a><a name="GetDistance()"></a> <dt> o <b>GetDistance</b>

<dt>  <table><tr><td>  public <a href="../AnalysisMeshingToolsItf/function_double_23506.htm">double</a>  <b>GetDistance</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Returns the computed minimum distance between the two bodies.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The minimum distance. If the distance could not be computed, returns <tt>-1</tt>.
</dl>
</dl>
<a name="GetPointComputationMode"></a><a name="GetPointComputationMode()"></a> <dt> o <b>GetPointComputationMode</b>

<dt>  <table><tr><td>  public <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a>  <b>GetPointComputationMode</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Returns the computation mode (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The computation mode.
 <br><b>Legal values</b>:
 <tt>TRUE</tt> if the points must be computed, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="GetPoints"></a><a name="GetPoints(CATPoint*&amp;,CATPoint*&amp;)"></a> <dt> o <b>GetPoints</b>

<dt>  <table><tr><td>  public void  <b>GetPoints</b>(<td><a href="../GeometricObjects/interface_CATPoint_13208.htm">CATPoint*&amp;</a> <td><tt>oPoint1</tt>,<tr><td></td><td><a href="../GeometricObjects/interface_CATPoint_13208.htm">CATPoint*&amp;</a> <td><tt>oPoint2</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Returns the points realizing the minimum distance (<tt>ADVANCED</tt> mode).
 <br>Useless points must be deleted. Their life cycle is not managed by the operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPoint1</tt>
   <dd> The pointer to the point on the first body.
 </dd>
    <dt><tt> oPoint2</tt>
   <dd> The pointer to the point on the second body.</dd>
</dl>
</dl>
</dl>
<a name="GetSupportCells"></a><a name="GetSupportCells(CATCell*&amp;,CATCell*&amp;)"></a> <dt> o <b>GetSupportCells</b>

<dt>  <table><tr><td>  public void  <b>GetSupportCells</b>(<td><a href="../NewTopologicalObjects/interface_CATCell_9452.htm">CATCell*&amp;</a> <td><tt>oCell1</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/interface_CATCell_9452.htm">CATCell*&amp;</a> <td><tt>oCell2</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Returns the cells on which are the points realizing the minimum distance (<tt>ADVANCED</tt> mode).
 The SetPointComputationMode method should be called before, otherwise NULL pointers are returned.
 <br>The life cyle of the cells is managed by the operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCell1</tt>
   <dd> The pointer to the cell on the first body.
 </dd>
    <dt><tt> oCell2</tt>
   <dd> The pointer to the cell on the second body.</dd>
</dl>
</dl>
</dl>
<a name="ReplaceBody"></a><a name="ReplaceBody(CATBody*,CATBody*)"></a> <dt> o <b>ReplaceBody</b>

<dt>  <table><tr><td>  public void  <b>ReplaceBody</b>(<td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iBodyToReplace</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iNewBody</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Defines another computation (<tt>ADVANCED</tt> mode).
 <br>If points were computed, they are deleted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBodyToReplace</tt>
   <dd> The pointer to the body to be replaced in the definition of the operator.
 </dd>
    <dt><tt> iNewBody</tt>
   <dd> The pointer to the body replacing <tt>iBodyToReplace</tt> in this operator.</dd>
</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual int  <b>Run</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Computes the distance (<tt>ADVANCED</tt> mode).
</dl>
<a name="SetDistanceMax"></a><a name="SetDistanceMax(double)"></a> <dt> o <b>SetDistanceMax</b>

<dt>  <table><tr><td>  public void  <b>SetDistanceMax</b>(<td>double <td><tt>iDistance</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Defines a maximum distance between the two bodies (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDistance</tt>
   <dd> The value of the distance known to be an upper bound of the distance between the 
 two bodies. This can optimize the performance of the computation.</dd>
</dl>
</dl>
</dl>
<a name="SetPointComputationMode"></a><a name="SetPointComputationMode(CATBoolean)"></a> <dt> o <b>SetPointComputationMode</b>

<dt>  <table><tr><td>  public void  <b>SetPointComputationMode</b>(<td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iTrueOrFalse</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Asks for the computation of the points realizing the minimum distance (<tt>ADVANCED</tt> mode).
 This method is to be used prior to calling the GetSupportCells method.
 <br>The life cycle of the points is managed by the operator: they are deleted at the
 operator deletion, or when another computation is asked for
 (
<a href="../TopologicalOperators/class_CATDistanceMinBodyBody_97178.htm#ReplaceBody">CATDistanceMinBodyBody.ReplaceBody</a>. This is not applicable to the GetPoints method. Points retrieved by using GetPoints must be deleted when they become useless.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTrueOrFalse</tt>
   <dd> The computation mode.
 <br><b>Legal values</b>:
 <tt>TRUE</tt> if the points must be computed, <tt>FALSE</tt> otherwise.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDistanceMinBodyBody.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalOperators</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
