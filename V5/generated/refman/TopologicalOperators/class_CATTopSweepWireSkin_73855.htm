<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>TopologicalOperators Class CATTopSweepWireSkin</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../TopologicalOperators.htm">This Framework</a>  <a href="class_CATTopSweepSkinSkinSegment_139020.htm">Previous</a>  <a href="class_CATTopSweepWireSkinCircle_126705.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>TopologicalOperators Class CATTopSweepWireSkin</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---<a href="../GeometricObjects/class_CATCGMOperator_38910.htm">GeometricObjects.CATCGMOperator</a>
    |
    +---<a href="../NewTopologicalObjects/class_CATTopOperator_41154.htm">NewTopologicalObjects.CATTopOperator</a>
      |
      +---<a href="../NewTopologicalObjects/class_CATTopMultiResult_60917.htm">NewTopologicalObjects.CATTopMultiResult</a>
        |
        +---CATTopSweepWireSkin
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTopSweepWireSkin</b>
</p>
<p>
<b><i> Class defining the topological operator that creates a sweep between a skin body and a wire body.</i></b><br>

<br>The sweep is defined by
 <ul>
 <li>a skin body, to which the generated sweep is tangent and defining the first extremity of the sweep.
 <li>a wire guide, defining the second extremity.
 <li>a spine wire body:  defines the moving plane (orthogonal to the spine) that is
 swept along the spine. In this moving plane, the sweep is an arc of circle tangent to the skin body 
 and limited by the wire body.
 </ul>
 As several solutions can be found, signatures are defined to distinguish them
 <ul>
 <li>signature with regards to the skin orientation: the solution is on the semi-space defined by the
 normal to the skin, or in the opposite semi-space, or in both.
 <li>signature with respect to the wire orientation: the wire, the normal to the skin and the tangent
 to the profile are counter clockwise or not.
 <li>for a same skin and wire signatures, the rank of the solution.
 </ul>
 This operator follows the general scheme of the topological operators producing several resulting bodies:
 <ul>
<li> Create the operator with the global function <a href="../TopologicalOperators/function_CATCreateTopSweepWireSkinCircle_673474.htm">CATCreateTopSweepWireSkinCircle</a> <li> Set the parameters,
<li> Run,
<li> Get the resulting bodies (in this case, use the iterator on the resulting bodies, because
 several bodies can be solution of the computation).
<li> Delete the operator with the usual C++ <tt>delete</tt> operator.
</ul>
 Sample:
 <pre> 
 CATTopSweepWireSkinCircle * pOp =  CATCreateTopSweepWireSkinCircle(factory,Skin,Wire,Spine);
 pOp->Run();
 pOp->BeginningResult();
 int nbBodies = pOp->GetNumberOfResults();
 for (int iBody = 1 ; iBody <= nbBodies ; iBody ++)
 {
   pOp->NextResult();
   CATBody * pCurBody = pOp->GetResult(pReport);
 }  
 delete pOp;
</pre>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATTopSweepWireSkin()"><b>~CATTopSweepWireSkin</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetResultInformation(int&amp;,int&amp;,int&amp;)"><b>GetResultInformation</b></a>(int&amp;,int&amp;,int&amp;)
<dd>  Retrieves the signature relative to the current resulting body.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetGuideOrientation(int)"><b>SetGuideOrientation</b></a>(int)
<dd>  Defines the signature of the desired results with regards to the wire orientation.
 <dt> o 
    <a href="#SetShellOrientation(int)"><b>SetShellOrientation</b></a>(int)
<dd>  Defines the signature of the desired results with regards to the skin orientation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATTopSweepWireSkin"></a><a name="~CATTopSweepWireSkin()"></a> <dt> o <b>~CATTopSweepWireSkin</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATTopSweepWireSkin</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetResultInformation"></a><a name="GetResultInformation(int&amp;,int&amp;,int&amp;)"></a> <dt> o <b>GetResultInformation</b>

<dt>  <table><tr><td>  public virtual void  <b>GetResultInformation</b>(<td>int&amp; <td><tt>ioShellOrientation</tt>,<tr><td></td><td>int&amp; <td><tt>ioWireOrientation</tt>,<tr><td></td><td>int&amp; <td><tt>ioIndex</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Retrieves the signature relative to the current resulting body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioShellOrientation</tt>
   <dd> The signature with regards to the skin orientation.
<br><b>Legal values</b>:
 <dl>
 <dt> <tt>1</tt></dt><dd> The results are in the semi-space defined by the normal to the skin.
 <dt><tt>-1</tt></dt><dd> The results are in the semi-space defined by the opposite to the normal to the skin.
 <dt> <tt>0</tt></dt><dd> All the results must be output (<tt>1</tt>, <tt>-1</tt>, <tt>2</tt> cases all together).
 <dt> <tt>2</tt></dt><dd> The results change of semi-space along the spine. 
 </dl>
 </dd>
    <dt><tt> ioWireOrientation</tt>
   <dd> The signature with regards to the wire orientation.
<br><b>Legal values</b>:
 <dl>
 <dt> <tt>1</tt></dt><dd> The output results are such that the triedron is counter clockwise.
 <dt><tt>-1</tt></dt><dd> The output results are such that the triedron is clockwise.
 <dt> <tt>0</tt></dt><dd> All the results must be output (<tt>1</tt>, <tt>-1</tt>, <tt>2</tt> cases all together).
 <dt> <tt>2</tt></dt><dd> The orientation of the trihedron changes along the spine. 
 </dl>
 </dd>
    <dt><tt> ioIndex</tt>
   <dd> The rank (beginning at <tt>1</tt>) of the current body inside 
 a given couple (<tt>ioShellOrientation, ioWireOrientation</tt>)</dd>
</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual int  <b>Run</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator.
 <br>To retrieve the resulting bodies, use the iterator on the bodies provided by 
<a href="../NewTopologicalObjects/class_CATTopMultiResult_60917.htm">CATTopMultiResult</a>.
</dl>
<a name="SetGuideOrientation"></a><a name="SetGuideOrientation(int)"></a> <dt> o <b>SetGuideOrientation</b>

<dt>  <table><tr><td>  public virtual void  <b>SetGuideOrientation</b>(<td> const int <td><tt>iOrientation</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Defines the signature of the desired results with regards to the wire orientation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd> The orientation of the trihedron defined by the the wire, the normal to the skin and
 the tangent to the profile.
<br><b>Legal values</b>:
 <dl>
 <dt> <tt>1</tt></dt><dd> The output results are such that the triedron is counter clockwise.
 <dt><tt>-1</tt></dt><dd> The output results are such that the triedron is clockwise.
 <dt> <tt>0</tt></dt><dd> All the results must be output (<tt>1</tt>, <tt>-1</tt>, <tt>2</tt> cases all together).
 <dt> <tt>2</tt></dt><dd> The orientation of the trihedron changes along the spine. 
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetShellOrientation"></a><a name="SetShellOrientation(int)"></a> <dt> o <b>SetShellOrientation</b>

<dt>  <table><tr><td>  public virtual void  <b>SetShellOrientation</b>(<td> const int <td><tt>iOrientation</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Defines the signature of the desired results with regards to the skin orientation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd> The semi-space to which the solution belongs.
<br><b>Legal values</b>:
 <dl>
 <dt> <tt>1</tt></dt><dd> The results are in the semi-space defined by the normal to the skin.
 <dt><tt>-1</tt></dt><dd> The results are in the semi-space defined by the opposite to the normal to the skin.
 <dt> <tt>0</tt></dt><dd> All the results must be output (<tt>1</tt>, <tt>-1</tt>, <tt>2</tt> cases all together).
 <dt> <tt>2</tt></dt><dd> The results change of semi-space along the spine. 
 </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATTopSweepWireSkin.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalOperators</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
