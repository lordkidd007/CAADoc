<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>NewTopologicalObjects Class CATVertexIterator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../NewTopologicalObjects.htm">This Framework</a>  <a href="class_CATTopSewSkin_34341.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>NewTopologicalObjects Class CATVertexIterator</h1>
<pre>
CATVertexIterator
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATVertexIterator</b>
</p>
<p>
<b><i> Class defining an iterator that recursively scans (inside the context 
 of a specified body) the cells that bound a vertex.</i></b><br>

  <br>  The input vertex must belong to the specified Body. 
    The returned bounded cells belong to the specified body.
<br>
 This means that this class performs a radial iteration around the vertex,
    each call to the <tt>Next</tt> method returning a new cell 
   (whatever its dimension) that can be :
 <ul>
     <li> an edge (bounded by the vertex)
     <li> a face (bounded by a domain VertexInFace)
     <li> a face (bounded by an edge that is itself bounded by the vertex)
 </ul>
 For instance: the iterator on the 
    corner of a cube returns by iteration six cells (of the same shell):
         Edge1, Face1, Edge2, Face2, Edge3, Face3.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATVertexIterator()"><b>CATVertexIterator</b></a>()
<dd>  
 <dt> o 
    <a href="#CATVertexIterator(CATTopData*)"><b>CATVertexIterator</b></a>(CATTopData*)
<dd>  Default constructor.
 <dt> o 
    <a href="#CATVertexIterator(CATVertexIterator&amp;)"><b>CATVertexIterator</b></a>(CATVertexIterator&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATVertexIterator()"><b>~CATVertexIterator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Duplicate()"><b>Duplicate</b></a>()
<dd>  Duplicates <tt>this</tt> CATVertexIterator.
 <dt> o 
    <a href="#GetBody()"><b>GetBody</b></a>()
<dd>  Returns a pointer to the body inside which <tt>this</tt> iterator iterates.
 <dt> o 
    <a href="#GetVertex()"><b>GetVertex</b></a>()
<dd>  Returns a pointer to the vertex around which <tt>this</tt> iterator iterates.
 <dt> o 
    <a href="#Next(CATSide*,CATDomain**)"><b>Next</b></a>(CATSide*,CATDomain**)
<dd>  Skips to the next cell of <tt>this</tt> iterator.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Initializes the iterator.
 <dt> o 
    <a href="#SetVertex(CATVertex*,CATBody*)"><b>SetVertex</b></a>(CATVertex*,CATBody*)
<dd>  Defines <tt>this</tt> vertex iterator.
 <dt> o 
    <a href="#operator=(CATVertexIterator&amp;)"><b>operator=</b></a>(CATVertexIterator&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATVertexIterator"></a><a name="CATVertexIterator()"></a> <dt> o <b>CATVertexIterator</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATVertexIterator</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17.
 Default constructor.
</dl>
</dl>
<a name="CATVertexIterator"></a><a name="CATVertexIterator(CATTopData*)"></a> <dt> o <b>CATVertexIterator</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATVertexIterator</b>(<td> const <a href="../NewTopologicalObjects/class_CATTopData_19566.htm">CATTopData*</a> <td><tt>iData</tt><td><tt>= 0</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Default constructor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTopData</tt>
   <dd> The object defining the CATSoftwareConfiguration and the CATCGMJournalList.</dd>
</dl>
</dl>
</dl>
<a name="CATVertexIterator"></a><a name="CATVertexIterator(CATVertexIterator&amp;)"></a> <dt> o <b>CATVertexIterator</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATVertexIterator</b>(<td> const <a href="../NewTopologicalObjects/class_CATVertexIterator_61220.htm">CATVertexIterator&amp;</a> <td><tt>iToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="~CATVertexIterator"></a><a name="~CATVertexIterator()"></a> <dt> o <b>~CATVertexIterator</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATVertexIterator</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Duplicate"></a><a name="Duplicate()"></a> <dt> o <b>Duplicate</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/class_CATVertexIterator_61220.htm">CATVertexIterator*</a>  <b>Duplicate</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Duplicates <tt>this</tt> CATVertexIterator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A pointer to the duplicated iterator.
</dl>
</dl>
<a name="GetBody"></a><a name="GetBody()"></a> <dt> o <b>GetBody</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a>  <b>GetBody</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns a pointer to the body inside which <tt>this</tt> iterator iterates.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the body.
</dl>
</dl>
<a name="GetVertex"></a><a name="GetVertex()"></a> <dt> o <b>GetVertex</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATVertex_17050.htm">CATVertex*</a>  <b>GetVertex</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns a pointer to the vertex around which <tt>this</tt> iterator iterates.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the vertex.
</dl>
</dl>
<a name="Next"></a><a name="Next(CATSide*,CATDomain**)"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATCell_9452.htm">CATCell*</a>  <b>Next</b>(<td><a href="../NewTopologicalObjects/define_CATSide_9461.htm">CATSide*</a> <td><tt>ioSide</tt><td><tt>=NULL</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/interface_CATDomain_16222.htm">CATDomain**</a> <td><tt>ioDomain</tt><td><tt>=NULL </tt>)=0  </table></dt>
<dl>
  <dd>
 Skips to the next cell of <tt>this</tt> iterator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioSide</tt>
   <dd> The side attribute of </tt>this</tt> with regards to the returned cell.
 If <tt>NULL</tt>, this attribute is not returned.
 </dd>
    <dt><tt> ioDomain</tt>
   <dd> The pointer to the domain to which the returned cell belongs to.
 If <tt>NULL</tt>, this argument is not output.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the next cell of the iterator. <tt>NULL</tt> after the last cell.
 <br>Sample:
<pre>CATVertexIterator iter;
 iter.SetVertex(AVertex, InsideThisBody);
 iter.Reset();
 // to only retrieve the next cell
 CATCell * nextcell=iter.Next(NULL,NULL);
 // to retrieve the cell and more information
 CATSide side;
 CATDomain * domain;
 nextcell=iter.Next(&side,&domain);
 </pre>
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public virtual void  <b>Reset</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Initializes the iterator.
 <br> Allows you to run again the iterations.
</dl>
<a name="SetVertex"></a><a name="SetVertex(CATVertex*,CATBody*)"></a> <dt> o <b>SetVertex</b>

<dt>  <table><tr><td>  public virtual void  <b>SetVertex</b>(<td><a href="../NewTopologicalObjects/interface_CATVertex_17050.htm">CATVertex*</a> <td><tt>iVertex</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iBody</tt>) = 0  </table></dt>
<dl>
  <dd>
 Defines <tt>this</tt> vertex iterator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVertex</tt>
   <dd> The pointer to the vertex around which the iteration is done. <tt>iVertex</tt>
 must belong to <tt>iBody</tt>.
 </dd>
    <dt><tt> iBody</tt>
   <dd> The pointer to the body inside which the iteration is done. As cells can be shared
 by several bodies, this argument precises the context of the iteration.</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATVertexIterator&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <a href="../NewTopologicalObjects/class_CATVertexIterator_61220.htm">CATVertexIterator&</a>  <b>operator=</b>(<td> const <a href="../NewTopologicalObjects/class_CATVertexIterator_61220.htm">CATVertexIterator&amp;</a> <td><tt>iToCopy</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Assignment operator.
</dl>
<hr>
 This object is included in the file: <b>CATVertexIterator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalObjects</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
