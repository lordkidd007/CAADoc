<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>NewTopologicalObjects Class CATBoundaryIterator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../NewTopologicalObjects.htm">This Framework</a>  <a href="class_CATBoundedCellsIterator_109232.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>NewTopologicalObjects Class CATBoundaryIterator</h1>
<pre>
<a href="../Mathematics/class_CATCGMVirtual_33296.htm">Mathematics.CATCGMVirtual</a>
  |
  +---CATBoundaryIterator
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATBoundaryIterator</b>
</p>
<p>
<b><i> Class that defines the iterator on the cells that bound a given cell.</i></b><br>

 <br>This iterator is often returned by scan methods on the cells.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATBoundaryIterator()"><b>CATBoundaryIterator</b></a>()
<dd>  Constructs an iterator on the bounding cells.
 <dt> o 
    <a href="#~CATBoundaryIterator()"><b>~CATBoundaryIterator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Duplicate()"><b>Duplicate</b></a>()
<dd>  Duplicates <tt>this</tt> iterator.
 <dt> o 
    <a href="#GetElement()"><b>GetElement</b></a>()
<dd>  Returns the cell which bounding cells are asked for.
 <dt> o 
    <a href="#Next(CATSide*,CATDomain**,short*)"><b>Next</b></a>(CATSide*,CATDomain**,short*)
<dd>   Skips to the next cell of <tt>this</tt> iterator.
 <dt> o 
    <a href="#Next(CATSide*,CATDomain**,short*,CATPCurve**,CATOrientation*,CATCrvParam*,CATCrvParam*)"><b>Next</b></a>(CATSide*,CATDomain**,short*,CATPCurve**,CATOrientation*,CATCrvParam*,CATCrvParam*)
<dd>   Skips to the next bounding cell of a face.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Initializes the iterator at the first cell.
 <dt> o 
    <a href="#SetElement(CATCell*)"><b>SetElement</b></a>(CATCell*)
<dd>  Defines the cell which boundary are asked for.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATBoundaryIterator"></a><a name="CATBoundaryIterator()"></a> <dt> o <b>CATBoundaryIterator</b>

<dt>  <table><tr><td>  public <a href="../DNBSystem/struct__0.htm"></a>  <b>CATBoundaryIterator</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
 Constructs an iterator on the bounding cells.
</dl>
<a name="~CATBoundaryIterator"></a><a name="~CATBoundaryIterator()"></a> <dt> o <b>~CATBoundaryIterator</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATBoundaryIterator</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Duplicate"></a><a name="Duplicate()"></a> <dt> o <b>Duplicate</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/class_CATBoundaryIterator_76146.htm">CATBoundaryIterator*</a>  <b>Duplicate</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Duplicates <tt>this</tt> iterator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A pointer to the created iterator. To <tt>delete</tt> after use.
</dl>
</dl>
<a name="GetElement"></a><a name="GetElement()"></a> <dt> o <b>GetElement</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATCell_9452.htm">CATCell*</a>  <b>GetElement</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the cell which bounding cells are asked for.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the cell which boundaries are asked for.
</dl>
</dl>
<a name="Next"></a><a name="Next(CATSide*,CATDomain**,short*)"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATCell_9452.htm">CATCell *</a>  <b>Next</b>(<td><a href="../NewTopologicalObjects/define_CATSide_9461.htm">CATSide*</a> <td><tt>ioSide</tt><td><tt>=NULL</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/interface_CATDomain_16222.htm">CATDomain**</a> <td><tt>oDomain</tt><td><tt>=NULL</tt>,<tr><td></td><td>short* <td><tt>ioNewDomain</tt><td><tt>=NULL </tt>)= 0  </table></dt>
<dl>
  <dd>
  Skips to the next cell of <tt>this</tt> iterator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioSide</tt>
   <dd> The pointer to the matter side of the next cell. If <tt>NULL</tt> in input, this is not output.
 </dd>
    <dt><tt> oDomain</tt>
   <dd> The pointer to the corresponding domain. If <tt>NULL</tt> in input, this is not output.
 </dd>
    <dt><tt> ioNewDomain</tt>
   <dd> The dectection of the scan of a new domain.
 <br><b>Legal values</b>:
 <tt>TRUE</tt> for the first cell of each new scanned domain, <tt>FALSE</tt> otherwise.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the next edge, <tt>NULL</tt> after the last one.
</dl>
</dl>
<a name="Next"></a><a name="Next(CATSide*,CATDomain**,short*,CATPCurve**,CATOrientation*,CATCrvParam*,CATCrvParam*)"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATCell_9452.htm">CATCell *</a>  <b>Next</b>(<td><a href="../NewTopologicalObjects/define_CATSide_9461.htm">CATSide*</a> <td><tt>oSide</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/interface_CATDomain_16222.htm">CATDomain**</a> <td><tt>oDomain</tt>,<tr><td></td><td>short* <td><tt>oNewDomain</tt>,<tr><td></td><td><a href="../GeometricObjects/interface_CATPCurve_16231.htm">CATPCurve**</a> <td><tt>oPCurve</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/define_CATOrientation_41490.htm">CATOrientation*</a> <td><tt>oOrientation</tt><td><tt>= NULL</tt>,<tr><td></td><td><a href="../GeometricObjects/class_CATCrvParam_24184.htm">CATCrvParam*</a> <td><tt>oStartParam</tt><td><tt>= NULL</tt>,<tr><td></td><td><a href="../GeometricObjects/class_CATCrvParam_24184.htm">CATCrvParam*</a> <td><tt>oEndParam</tt><td><tt>= NULL</tt>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
  Skips to the next bounding cell of a face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioSide</tt>
   <dd> The pointer to the matter side of the next edge. If <tt>NULL</tt> in input, this is not output.
 </dd>
    <dt><tt> oDomain</tt>
   <dd> The pointer to the corresponding domain. If <tt>NULL</tt> in input, this is not output.
 </dd>
    <dt><tt> ioNewDomain</tt>
   <dd> The dectection of the scan of a new loop.
 <br><b>Legal values</b>:
 <tt>TRUE</tt> for the first edge of each new scanned loop, <tt>FALSE</tt> otherwise. 
 </dd>
    <dt><tt> oPCurve</tt>
   <dd> The pointer to the corresponding CATPCurve. If <tt>NULL</tt> in input, this is not output.
 </dd>
    <dt><tt> oOrientation</tt>
   <dd> The pointer to the relative orientation of the returned edge with regards to its geometry 
 <tt>oPCurve</tt>. If <tt>NULL</tt> in input, this is not output.
 </dd>
    <dt><tt> oStartParam</tt>
   <dd> A pointer to the low limitation of the returned edge on <tt>oPCurve</tt>. 
 </dd>
    <dt><tt> oEndParam</tt>
   <dd> A pointer to the high limitation of the returned edge on <tt>oPCurve</tt>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the next edge, <tt>NULL</tt> after the last one.
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public virtual void  <b>Reset</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Initializes the iterator at the first cell.
 <br>This allows you to do multiple iterations around the same cell.
</dl>
<a name="SetElement"></a><a name="SetElement(CATCell*)"></a> <dt> o <b>SetElement</b>

<dt>  <table><tr><td>  public virtual void  <b>SetElement</b>(<td><a href="../NewTopologicalObjects/interface_CATCell_9452.htm">CATCell*</a> <td><tt>iBoundedCell</tt>) = 0  </table></dt>
<dl>
  <dd>
 Defines the cell which boundary are asked for. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBoundedCell</tt>
   <dd> The pointer to the cell which boundaries are asked for.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATBoundaryIterator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalObjects</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
