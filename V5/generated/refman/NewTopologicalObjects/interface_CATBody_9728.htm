<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>NewTopologicalObjects Interface CATBody</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../NewTopologicalObjects.htm">This Framework</a>  <a href="interface_CATCell_9452.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>NewTopologicalObjects Interface CATBody</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---<a href="../GeometricObjects/interface_CATICGMUnknown_38404.htm">GeometricObjects.CATICGMUnknown</a>
        |
        +---<a href="../GeometricObjects/interface_CATICGMObject_31183.htm">GeometricObjects.CATICGMObject</a>
          |
          +---<a href="../GeometricObjects/interface_CATGeometry_25640.htm">GeometricObjects.CATGeometry</a>
            |
            +---<a href="../NewTopologicalObjects/interface_CATTopology_25873.htm">NewTopologicalObjects.CATTopology</a>
              |
              +---<a href="../NewTopologicalObjects/interface_CATTopObject_29052.htm">NewTopologicalObjects.CATTopObject</a>
                |
                +---CATBody
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATBody</b>
</p>
<p>
<b><i> Interface representing a topological body.</i></b><br>
 
<br>
 A body is a set of cells with the following conditions:
<ul><li>If one of the cells belongs to the body, all the bounding cells also 
        belong to this body.
    <li>If two cells of a same body are intersecting together, their 
        intersection is a set of cells belonging to this body.
     <li> Cells can be shared between several bodies.
</ul>
This interface is dedicated to represent all kind of cell-complexes including
 non-manifold, non connected complexes, mixing dimensions of topological cells.
 The boundaries of a body are grouped into 
 domains (CATDomain), connected sets of cells (CATCell) of same
 dimension. This definition is unique. 
<ul><li>a vertex can border:
         <ul><li>an egde (the vertex is one of the edge extremities)
             <li>a face ( the vertex is immersed inside the face:
 non manifold case -> <tt>CATVertexInFace</tt> domain )
             <li>a volume or a body ( the vertex is immersed into the volume: 
 non manifold case -> <tt>CATVertexInVolume</tt> domain) </ul>
    <li>an edge may border:
         <ul><li>a face ( the edge is one of the face borders
 -> <tt>CATLoop</tt> domain)
             <li>a face ( the edge is immersed inside the face:
 non manifold case -> <tt>CATLoop</tt> domain)
             <li>a volume or a body( the edge is immersed inside the volume: 
 non manifold case -> <tt>CATWire</tt> domain) </ul>
    <li>an face may border (-> <tt>CATShell</tt> domain ):
         <ul><li>a volume ( the face is one of the volume borders)
             <li>a volume ( the face is immersed into the volume: 
 non manifold case) </ul>
    <li>a <tt>CATLump</tt> is a domain of dimension 3.
</ul>
 Note that a vertex can not be immersed inside an egde, because it would cut
 the edge in two pieces. As the same manner, an edge (/face) or a set
 of edges (/faces) may be immersed inside a face (/volume) only if it does
 not go right through it.
 A CATCell is composed of CATDomains of lower dimension.
 The CATBody interface is the factory of all domains and cells that it owns.
 A CATBody is created with the  
  <a href="../GeometricObjects/interface_CATGeoFactory_34717.htm#CreateBody">CATGeoFactory.CreateBody</a> method and deleted with the 
<a href="../GeometricObjects/interface_CATICGMContainer_49680.htm#Remove">CATICGMContainer.Remove</a> method.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddDomain(CATDomain*,CATLocation)"><b>AddDomain</b></a>(CATDomain*,CATLocation)
<dd>  Adds a CATDomain to <tt>this</tt> CATBody.
 <dt> o 
    <a href="#CreateCell(short)"><b>CreateCell</b></a>(short)
<dd>  Creates a topological cell of a given dimension.
 <dt> o 
    <a href="#CreateDomain(short,short,CATLocation)"><b>CreateDomain</b></a>(short,short,CATLocation)
<dd>  Creates a topological domain.
 <dt> o 
    <a href="#CreateEdge()"><b>CreateEdge</b></a>()
<dd>  Creates an edge.
 <dt> o 
    <a href="#CreateFace()"><b>CreateFace</b></a>()
<dd>  Creates a face.
 <dt> o 
    <a href="#CreateLoop(CATLocation)"><b>CreateLoop</b></a>(CATLocation)
<dd>  Creates a topological domain (called loop) representing a set of connected egdes bounding 
 a face .
 <dt> o 
    <a href="#CreateLump()"><b>CreateLump</b></a>()
<dd>  Creates a topological domain (called lump) which contained cells are CATVolumes.
 <dt> o 
    <a href="#CreateShell(CATLocation)"><b>CreateShell</b></a>(CATLocation)
<dd>  Creates a topological domain (called shell) which contained connected cells are CATFaces.
 <dt> o 
    <a href="#CreateSmartDuplicator(CATBody*,CATTopData&amp;)"><b>CreateSmartDuplicator</b></a>(CATBody*,CATTopData&amp;)
<dd>  Creates a smart duplicator.
 <dt> o 
    <a href="#CreateVertex()"><b>CreateVertex</b></a>()
<dd>  Creates a vertex.
 <dt> o 
    <a href="#CreateVertexInFace()"><b>CreateVertexInFace</b></a>()
<dd>  Creates a topological domain representing a vertex immersed inside a face.
 <dt> o 
    <a href="#CreateVertexInVolume()"><b>CreateVertexInVolume</b></a>()
<dd>  Creates a topological domain representing a vertex immersed inside a volume.
 <dt> o 
    <a href="#CreateVolume()"><b>CreateVolume</b></a>()
<dd>  Creates a volume.
 <dt> o 
    <a href="#CreateWire()"><b>CreateWire</b></a>()
<dd>  Creates a topological domain representing a set of connected edges (called wire) of a
 body or a volume.
 <dt> o 
    <a href="#Freeze()"><b>Freeze</b></a>()
<dd>  
 <dt> o 
    <a href="#GetCellsHighestDimension(CATLONG32&amp;,CATBoolean&amp;,CATBoolean*,ListPOfCATCell*)"><b>GetCellsHighestDimension</b></a>(CATLONG32&amp;,CATBoolean&amp;,CATBoolean*,ListPOfCATCell*)
<dd>   Gets information on the dimensions in <tt>this</tt> body.
 <dt> o 
    <a href="#GroupCells(CATLISTP(CATCell)*,CATListOfLong&amp;)"><b>GroupCells</b></a>(CATLISTP(CATCell)*,CATListOfLong&amp;)
<dd>   Retrieves the number of manifold domains inside a list of cells.
 <dt> o 
    <a href="#IsLyingOn(CATBody*)"><b>IsLyingOn</b></a>(CATBody*)
<dd>  Tests whether <tt>this</tt> CATBody is lying on another one.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddDomain"></a><a name="AddDomain(CATDomain*,CATLocation)"></a> <dt> o <b>AddDomain</b>

<dt>  <table><tr><td>  public virtual void  <b>AddDomain</b>(<td><a href="../NewTopologicalObjects/interface_CATDomain_16222.htm">CATDomain*</a> <td><tt>iDomainToAdd</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/define_CATLocation_24999.htm">CATLocation</a> <td><tt>iLocation</tt><td><tt>=CATLocationIn3DSpace </tt>)=0  </table></dt>
<dl>
  <dd>
 Adds a CATDomain to <tt>this</tt> CATBody.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDomainToAdd</tt>
   <dd> The pointer to the domain to add, which location must be set to 
 <tt>CATLocationIn3DSpace</tt>.
 </dd>
    <dt><tt> iLocation</tt>
   <dd> The location of the domain to bound <tt>this</tt>.</dd>
</dl>
</dl>
</dl>
<a name="CreateCell"></a><a name="CreateCell(short)"></a> <dt> o <b>CreateCell</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATCell_9452.htm">CATCell *</a>  <b>CreateCell</b>(<td>short <td><tt>iDimension</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates a topological cell of a given dimension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDimension</tt>
   <dd> <dl><dt>0</dt><dd> Creates a CATVertex
    <dt>1</dt><dd> Creates a CATEdge
    <dt>2</dt><dd> Creates a CATFace
    <dt>3</dt><dd> Creates a CATVolume </dl></dd>
</dl>
</dl>
</dl>
<a name="CreateDomain"></a><a name="CreateDomain(short,short,CATLocation)"></a> <dt> o <b>CreateDomain</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATDomain_16222.htm">CATDomain *</a>  <b>CreateDomain</b>(<td>short <td><tt>iContainedCellsDimension</tt>,<tr><td></td><td>short <td><tt>iContainingCellDimension</tt><td><tt>=3</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/define_CATLocation_24999.htm">CATLocation</a> <td><tt>iLocation</tt><td><tt>=CATLocationIn3DSpace</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates a topological domain.
<br>A CATDomain is composed of connected cells 
 of same dimension. It represents a cell boundary.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContainedCellsDimension</tt>
   <dd> The dimension of the cells contained into the domain to create.
 </dd>
    <dt><tt> iContainingCellDimension</tt>
   <dd> The dimension of the unique cell containing the domain to create.
<br> Note that <tt>iContainedCellDimension <= iContainingCellDimension</tt>.
 For a CATDomain contained into a CATBody, this dimension is 3. 
 </dd>
    <dt><tt> iLocation</tt>
   <dd> The location of the contained cells relative to the containing cell.
 <dl><dt><tt>CATLocationInner</tt></dt><dd> For internal boundaries (holes 
 into a faces or cavities into a volumes).
     <dt><tt>CATLocationOuter</tt></dt><dd> For external boundaries.
     <dt><tt>CATLocationFull</tt></dt><dd> All cells of the domain to
 create are immersed into the containing cell (non-manifold topology).
     <dt><tt>CATLocationIn3DSpace</tt></dt><dd> For creation into a body.
</dl></dd>
</dl>
</dl>
</dl>
<a name="CreateEdge"></a><a name="CreateEdge()"></a> <dt> o <b>CreateEdge</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATEdge_9223.htm">CATEdge *</a>  <b>CreateEdge</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates an edge.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created edge (cell of dimension 1)
</dl>
</dl>
<a name="CreateFace"></a><a name="CreateFace()"></a> <dt> o <b>CreateFace</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATFace_9111.htm">CATFace *</a>  <b>CreateFace</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates a face.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created face (cell of dimension 2)
</dl>
</dl>
<a name="CreateLoop"></a><a name="CreateLoop(CATLocation)"></a> <dt> o <b>CreateLoop</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATLoop_9898.htm">CATLoop *</a>  <b>CreateLoop</b>(<td><a href="../NewTopologicalObjects/define_CATLocation_24999.htm">CATLocation</a> <td><tt>iLocation</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates a topological domain (called loop) representing a set of connected egdes bounding 
 a face .
 <br>It corresponds to <tt>iContainedCellsDimension = 1,
 iContainingCellDimension = 2</tt>. The loop may be closed or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocation</tt>
   <dd> The location of the contained cells relative to the containing cell.
 <dl><dt><tt>CATLocationInner</tt></dt><dd> For internal boundaries (holes 
 into a faces).
     <dt><tt>CATLocationOuter</tt></dt><dd> For external boundaries.
     <dt><tt>CATLocationFull</tt></dt><dd> All cells of the domain to
 create are immersed into the containing cell (non-manifold topology).
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created loop.
</dl>
</dl>
<a name="CreateLump"></a><a name="CreateLump()"></a> <dt> o <b>CreateLump</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATLump_9962.htm">CATLump *</a>  <b>CreateLump</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates a topological domain (called lump) which contained cells are CATVolumes. 
 <br>It corresponds to <tt>iContainedCellsDimension = 3,
 iContainingCellDimension = 3</tt>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created lump.
</dl>
</dl>
<a name="CreateShell"></a><a name="CreateShell(CATLocation)"></a> <dt> o <b>CreateShell</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATShell_12814.htm">CATShell *</a>  <b>CreateShell</b>(<td><a href="../NewTopologicalObjects/define_CATLocation_24999.htm">CATLocation</a> <td><tt>iLocation</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates a topological domain (called shell) which contained connected cells are CATFaces.
 <br>It corresponds to <tt>iContainedCellsDimension = 2,
 iContainingCellDimension = 3</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocation</tt>
   <dd> The location of the contained cells relative to the containing cell.
 <dl><dt><tt>CATLocationInner</tt></dt><dd> For internal boundaries ( 
 cavities into volumes).
     <dt><tt>CATLocationOuter</tt></dt><dd> For external boundaries.
     <dt><tt>CATLocationFull</tt></dt><dd> All cells of the domain to
 create are immersed into the containing cell (non-manifold topology).
     <dt><tt>CATLocationIn3DSpace</tt></dt><dd> For creation into a body.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created shell.
</dl>
</dl>
<a name="CreateSmartDuplicator"></a><a name="CreateSmartDuplicator(CATBody*,CATTopData&amp;)"></a> <dt> o <b>CreateSmartDuplicator</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/class_CATSmartBodyDuplicator_100738.htm">CATSmartBodyDuplicator*</a>  <b>CreateSmartDuplicator</b>(<td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iBodyToRecopy</tt>,<tr><td></td><td><a href="../NewTopologicalObjects/class_CATTopData_19566.htm">CATTopData&amp;</a> <td><tt>iTopData</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates a smart duplicator.
<br>This is used in the context of the "smart mechanism".
   When a body is frozen, the cells and domains that it contains cannot be modified anymore.
 To allow an operator to operate on cells of a frozen body, 
   the smart duplicator only duplicates the touched cells and 
   domains. Hence:
<ul>
    <li> This is used to duplicate or share cells and domains from <tt>iBodyToRecopy</tt> into <tt>this</tt>.
    <li> a cell or domain will be duplicated if it is non-modifiable and touched,
      otherwise, it will be shared
    <li> <tt>iBodyToRecopy</tt> and <tt>this</tt> can be the same body.
</ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBodyToRecopy</tt>
   <dd> The frozen body where cells are touched.
 </dd>
    <dt><tt> iTopData</tt>
   <dd> The object defining the CATSoftwareConfiguration and the CATCGMJournalList.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created duplicator. After use, you
 have to <tt>delete</tt> it.
 
  <dt> <b>See also:</b> 
  <dd> <a href="../NewTopologicalObjects/class_CATSmartBodyDuplicator_100738.htm">CATSmartBodyDuplicator</a>
</dl>
</dl>
<a name="CreateVertex"></a><a name="CreateVertex()"></a> <dt> o <b>CreateVertex</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATVertex_17050.htm">CATVertex *</a>  <b>CreateVertex</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates a vertex.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created vertex (cell of dimension 0)
</dl>
</dl>
<a name="CreateVertexInFace"></a><a name="CreateVertexInFace()"></a> <dt> o <b>CreateVertexInFace</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATVertexInFace_44308.htm">CATVertexInFace *</a>  <b>CreateVertexInFace</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates a topological domain representing a vertex immersed inside a face.
 <br>It corresponds to <tt>iContainedCellsDimension = 0,
 iContainingCellDimension = 2</tt>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created VertexInFace domain.
</dl>
</dl>
<a name="CreateVertexInVolume"></a><a name="CreateVertexInVolume()"></a> <dt> o <b>CreateVertexInVolume</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATVertexInVolume_60023.htm">CATVertexInVolume *</a>  <b>CreateVertexInVolume</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates a topological domain representing a vertex immersed inside a volume.
 <br>It corresponds to <tt>iContainedCellsDimension = 0,
 iContainingCellDimension = 3</tt>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created VertexInVolume domain.
</dl>
</dl>
<a name="CreateVolume"></a><a name="CreateVolume()"></a> <dt> o <b>CreateVolume</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATVolume_16824.htm">CATVolume *</a>  <b>CreateVolume</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates a volume.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created volume (cell of dimension 3)
</dl>
</dl>
<a name="CreateWire"></a><a name="CreateWire()"></a> <dt> o <b>CreateWire</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/interface_CATWire_9787.htm">CATWire *</a>  <b>CreateWire</b>(<td>)=0  </table></dt>
<dl>
  <dd>
 Creates a topological domain representing a set of connected edges (called wire) of a
 body or a volume.
 <br>It corresponds to <tt>iContainedCellsDimension = 1,
 iContainingCellDimension = 3</tt>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created wire.
</dl>
</dl>
<a name="Freeze"></a><a name="Freeze()"></a> <dt> o <b>Freeze</b>

<dt>  <table><tr><td>  public virtual void  <b>Freeze</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R14 Completed.
 <br>Use now 
<a href="../GeometricObjects/interface_CATICGMObject_31183.htm#Completed">CATICGMObject.Completed</a> with the <tt>TRUE</tt> value. Freezes the contents of <tt>this</tt> body.<br> Further modifications of this
 body will imply that all modified elements will be copied first,
 thus keeping the current body state unmodified.
</dl>
</dl>
<a name="GetCellsHighestDimension"></a><a name="GetCellsHighestDimension(CATLONG32&amp;,CATBoolean&amp;,CATBoolean*,ListPOfCATCell*)"></a> <dt> o <b>GetCellsHighestDimension</b>

<dt>  <table><tr><td>  public virtual void  <b>GetCellsHighestDimension</b>(<td><a href="../SpecialAPI/typedef_CATLONG32_11531.htm">CATLONG32&amp;</a> <td><tt>ioCellsMaxDim</tt>,<tr><td></td><td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean&amp;</a> <td><tt>ioIsHomogeneous</tt>,<tr><td></td><td><a href="../System/typedef_CATBoolean_20142.htm">CATBoolean*</a> <td><tt>ioIsLocallyManifold</tt><td><tt>= NULL</tt>,<tr><td></td><td>ListPOfCATCell* <td><tt>oNonManifoldCells</tt><td><tt>= NULL</tt>) = 0  </table></dt>
<dl>
  <dd>
  Gets information on the dimensions in <tt>this</tt> body.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioCellsMaxDim</tt>
   <dd>   The maximum dimension of the cells.
  </dd>
    <dt><tt> ioIsHomogeneous</tt>
   <dd>  The homogeneity in dimension.
 <br><b>Legal values</b>:
 <dl><dt><tt>TRUE</tt></dt><dd>Every domain at the higest level has the same dimension <tt>ioCellsMaxDim</tt>.
      <dt><tt>FALSE</tt> <dd>otherwise.</dl>
  </dd>
    <dt><tt> IsLocallyManifold</tt>
   <dd>  If not <tt>NULL</tt>, it will be filled by :
  <dl><dt> <tt>TRUE</tt></dt><dd>if <tt>ioIsHomogeneous</tt> is <tt>TRUE</tt> 
 and the body is locally <tt>ioCellsMaxDim</tt>-Manifold 
  <dt> <tt>FALSE</tt></dt> <dd>otherwise</dl>
  </dd>
    <dt><tt> oNonManifoldCells</tt>
   <dd> The optional pointer to a list containing the cells that lead to a non manifold context.</dd>
</dl>
</dl>
</dl>
<a name="GroupCells"></a><a name="GroupCells(CATLISTP(CATCell)*,CATListOfLong&amp;)"></a> <dt> o <b>GroupCells</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/class_CATLISTP(CATCell)_45835.htm">CATLISTP(CATCell)</a>  <b>GroupCells</b>(<td> const <a href="../NewTopologicalObjects/class_CATLISTP(CATCell)_45835.htm">CATLISTP(CATCell)*</a> <td><tt>iCellList</tt>,<tr><td></td><td>CATListOfLong&amp; <td><tt>ioNbOfCellsByDomain</tt>)= 0  </table></dt>
<dl>
  <dd>
  Retrieves the number of manifold domains inside a list of cells.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCellList</tt>
   <dd> The pointer to the list of cells to handle.
 </dd>
    <dt><tt> oNbOfCellsByDomain</tt>
   <dd> The number of manifold groups.</dd>
</dl>
</dl>
</dl>
<a name="IsLyingOn"></a><a name="IsLyingOn(CATBody*)"></a> <dt> o <b>IsLyingOn</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/enum_CATTopLyingOnDiagnostic_108508.htm">CATTopLyingOnDiagnostic</a>  <b>IsLyingOn</b>(<td><a href="../NewTopologicalObjects/interface_CATBody_9728.htm">CATBody*</a> <td><tt>iDomain</tt>) = 0  </table></dt>
<dl>
  <dd>
 Tests whether <tt>this</tt> CATBody is lying on another one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDomain</tt>
   <dd> The body on which <tt>this</tt> may lay.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The diagnosis of the test.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATBody.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalObjects</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
