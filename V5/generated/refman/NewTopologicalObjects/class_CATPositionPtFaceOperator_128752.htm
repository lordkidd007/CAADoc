<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>NewTopologicalObjects Class CATPositionPtFaceOperator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../NewTopologicalObjects.htm">This Framework</a>  <a href="class_CATBoundedCellsIterator_109232.htm">Previous</a>  <a href="class_CATPositionPtVolOperator_120822.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>NewTopologicalObjects Class CATPositionPtFaceOperator</h1>
<pre>
CATPositionPtFaceOperator
 </pre>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPositionPtFaceOperator</b>
</p>
<p>
<b><i> Class defining the operator that tests the position of a 2D point with respect to a face.</i></b><br>

 The CATPositionPtFaceOperator operator follows the global frame of the topological operators:
<ul>
 <li>It is created with the <tt>CATCreatePositionPtFaceOperator</tt> global function:
 It must be directly deleted with the usual C++ <tt>delete</tt> operator after use. It is not streamable. 
<li>Options can be precised (such as the point to test) with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. 
<li>The result ot the test is accessed with the <tt>GetOneResult</tt> method for a point, 
 and the<tt>GetResults</tt> method for an array of points. 
</ul></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATPositionPtFaceOperator()"><b>~CATPositionPtFaceOperator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetOneResult()"><b>GetOneResult</b></a>()
<dd>  Returns the result of the test in case of a point.
 <dt> o 
    <a href="#GetResults()"><b>GetResults</b></a>()
<dd>  Returns the result of the test in case of an array of points.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetSurParam(CATSurParam&amp;)"><b>SetSurParam</b></a>(CATSurParam&amp;)
<dd>  Defines another point to test.
 <dt> o 
    <a href="#SetSurParams(int,CATSurParam[])"><b>SetSurParams</b></a>(int,CATSurParam[])
<dd>  Defines another array of points to test.
 <dt> o 
    <a href="#SetToleranceOnBoundary(double)"><b>SetToleranceOnBoundary</b></a>(double)
<dd>  Defines the tolerance for a point to be on the face boundary.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATPositionPtFaceOperator"></a><a name="~CATPositionPtFaceOperator()"></a> <dt> o <b>~CATPositionPtFaceOperator</b>

<dt>  <table><tr><td>  public virtual <a href="../DNBSystem/struct__0.htm"></a>  <b>~CATPositionPtFaceOperator</b>(<td>)<a href="../DNBSystem/struct__0.htm"></a>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetOneResult"></a><a name="GetOneResult()"></a> <dt> o <b>GetOneResult</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/define_CATLocation_24999.htm">CATLocation</a>  <b>GetOneResult</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Returns the result of the test in case of a point.
 <br>To call after the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the location test.
 <br><b>Legal values</b>:
 <dl><dt><tt>CATLocationInner</tt></dt><dd> if the point is inside the face
     <dt><tt>CATLocationOuter</tt></dt><dd> if the point is outside the face
     <dt><tt>CATLocationFull</tt></dt><dd> if the point is on the boundary of
 the face.</dl>
</dl>
</dl>
<a name="GetResults"></a><a name="GetResults()"></a> <dt> o <b>GetResults</b>

<dt>  <table><tr><td>  public virtual <a href="../NewTopologicalObjects/define_CATLocation_24999.htm">const CATLocation*</a>  <b>GetResults</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the result of the test in case of an array of points.
 <br>To call after the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the array <tt>[iNbPoints]</tt> of locations.
 <br><b>Legal values</b>:
 <dl><dt><tt>CATLocationInner</tt></dt><dd> if the point is inside the face
     <dt><tt>CATLocationOuter</tt></dt><dd> if the point is outside the face
     <dt><tt>CATLocationFull</tt></dt><dd> if the point is on the boundary of
 the face.</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual void  <b>Run</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator.
</dl>
<a name="SetSurParam"></a><a name="SetSurParam(CATSurParam&amp;)"></a> <dt> o <b>SetSurParam</b>

<dt>  <table><tr><td>  public virtual void  <b>SetSurParam</b>(<td> const <a href="../GeometricObjects/class_CATSurParam_24459.htm">CATSurParam&amp;</a> <td><tt>iPoint</tt>) = 0  </table></dt>
<dl>
  <dd>
 Defines another point to test.
 <br>To have the result, <tt>Run</tt> again the operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The 2D point to test.</dd>
</dl>
</dl>
</dl>
<a name="SetSurParams"></a><a name="SetSurParams(int,CATSurParam[])"></a> <dt> o <b>SetSurParams</b>

<dt>  <table><tr><td>  public virtual void  <b>SetSurParams</b>(<td>int <td><tt>iNbPoints</tt>,<tr><td></td><td><a href="../GeometricObjects/class_CATSurParam_24459.htm">CATSurParam[]</a> <td><tt>iPoints</tt>) = 0  </table></dt>
<dl>
  <dd>
 Defines another array of points to test.
 <br>To have the result, <tt>Run</tt> again the operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbPoints</tt>
   <dd> The number of points to test in the array <tt>iPoints</tt>.
 </dd>
    <dt><tt> iPoints</tt>
   <dd> The array <tt>[iNbPoints]</tt> of points to test.</dd>
</dl>
</dl>
</dl>
<a name="SetToleranceOnBoundary"></a><a name="SetToleranceOnBoundary(double)"></a> <dt> o <b>SetToleranceOnBoundary</b>

<dt>  <table><tr><td>  public virtual void  <b>SetToleranceOnBoundary</b>(<td>double <td><tt>iTol</tt>) = 0  </table></dt>
<dl>
  <dd>
 Defines the tolerance for a point to be on the face boundary.
 <br>To call before the <tt>Run</tt> method if needed. By default, the tolerance is
 set to the factory resolution.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTol</tt>
   <dd> The tolerance.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPositionPtFaceOperator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalObjects</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
