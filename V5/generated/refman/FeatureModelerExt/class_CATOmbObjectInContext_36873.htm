<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FeatureModelerExt Class CATOmbObjectInContext</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../FeatureModelerExt.htm" href="../FeatureModelerExt.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "FeatureModelerExt";	}
		function getCurrentObjectName() { 
 	return "CATOmbObjectInContext"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>FeatureModelerExt <script type="text/javascript" > writeClassCharacteristic(); </script> CATOmbObjectInContext</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATOmbObjectInContext_36873','CATOmbObjectInContext','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATOmbObjectInContext</b>
</p>
<p>
<b><i> Class representing an object in a context.</i></b><br>

 <b>Role</b>: This class represents an object in a context. 
 A context means an occurrence or a representation occurrence
 which can be seen as a path of instances and/or a representation instance.
 An object is a PLM object other that an instance (a connection, a port, a reference or a representation)
 or an internal object of a representation or of a connection.
 An object in a context means the usage of this object in the context of this occurrence. <br>
 <b>Note</b>: Since PLM concepts have no equivalent in V5, this class is just a V5 emulation of V6 class CATOmbObjectInContext, 
 allowing to ensure that the code working in V5 will also work in V6.</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Compare(CATOmbObjectInContext*)"><b>Compare</b></a>(CATOmbObjectInContext*)
<dd>  Compares this object in context to another object in context.
 <dt> o 
    <a href="#CreateObjectInContext(CATBaseUnknown*,CATOmbObjectInContext*&amp;)"><b>CreateObjectInContext</b></a>(CATBaseUnknown*,CATOmbObjectInContext*&amp;)
<dd>  Creates a CATOmbObjectInContext from an object.
 <dt> o 
    <a href="#GetObjectOutOfContext(CATBaseUnknown*&amp;,IID&amp;)"><b>GetObjectOutOfContext</b></a>(CATBaseUnknown*&amp;,IID&amp;)
<dd>  Gets (if exists) the object defining this CATOmbObjectInContext instance.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Compare"></a><a name="Compare(CATOmbObjectInContext*)"></a> <dt> o <b>Compare</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Compare</b>(<td> const <script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipObjectInContextToCompare</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Compares this object in context to another object in context.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipObjectInContextToCompare</tt>
   <dd> [in]   The object in context to compare with. <br>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The two objects in context are identical.</dd>
     <dt>E_FAIL</dt>
     <dd>The two objects in context are different.</dd>
  </dl>
</dl>
</dl>
<a name="CreateObjectInContext"></a><a name="CreateObjectInContext(CATBaseUnknown*,CATOmbObjectInContext*&amp;)"></a> <dt> o <b>CreateObjectInContext</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateObjectInContext</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*&amp;')</script> <td><tt>oObjectInContext</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a CATOmbObjectInContext from an object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> [in]   The object from which to create the object in context.
 </dd>
    <dt><tt> oObjectInContext</tt>
   <dd> [out, CATBaseUnknown#Release]   The built CATOmbObjectInContext representing the object in this context.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The object in context has been successfully created.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The input object is not valid.</dd>
     <dt>E_FAIL</dt>
     <dd>Another failure has occurred.</dd>
  </dl>
</dl>
</dl>
<a name="GetObjectOutOfContext"></a><a name="GetObjectOutOfContext(CATBaseUnknown*&amp;,IID&amp;)"></a> <dt> o <b>GetObjectOutOfContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetObjectOutOfContext</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt><td><tt>= IID_CATBaseUnknown</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets (if exists) the object defining this CATOmbObjectInContext instance. <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oObject</tt>
   <dd> [out, CATBaseUnknown#Release]   A (caller provided) object in which retrieved object will be stored.
   <br>If the method fails <tt>oObject</tt> is not modified, it is otherwise overwritten with the retrieved value.
  </dd>
    <dt><tt>  iIID</tt>
   <dd> [in]    The interface identifier for which a pointer is requested.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The object has been successfully retrieved.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The output object is not NULL.</dd>
     <dt>E_NOINTERFACE</dt>
     <dd>The interface is not supported.</dd>
     <dt>E_FAIL</dt>
     <dd>Another failure has occurred.</dd>
  </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATOmbObjectInContext.h</b><br>
If needed, your Imakefile.mk should include the module: <b>FeatureModelerExt</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

