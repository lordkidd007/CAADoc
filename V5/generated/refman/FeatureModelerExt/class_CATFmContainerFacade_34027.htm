<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FeatureModelerExt Class CATFmContainerFacade</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../FeatureModelerExt.htm" href="../FeatureModelerExt.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "FeatureModelerExt";	}
		function getCurrentObjectName() { 
 	return "CATFmContainerFacade"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>FeatureModelerExt <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmContainerFacade</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmContainerFacade_34027','CATFmContainerFacade','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmContainerFacade</b>
</p>
<p>
<b><i> Class representing a Feature Container.</i></b><br>

 <b>Role</b>: This class is a Facade object providing access to a Feature Container, according to the provided Accreditations.
 <br>It gathers in a single place all operations defined at the Feature Modeler level that can be performed on a Feature Container.
 <p><b>Lifecycle</b> information.<br>
   The recommended usage is to create Facades as local variables in functions and methods bodies.<br>
   Facades expose methods such as <script type="text/javascript"> activateLinkAnchor('CATFmFeatureFacade','DeleteSelf','CATFmFeatureFacade.DeleteSelf') </script> and 
<script type="text/javascript"> activateLinkAnchor('CATFmStartUpFacade','Instantiate','CATFmStartUpFacade.Instantiate') </script> that can explicitly change the life   cycle of objects they reference, but the mere existence of a Facade should not implicitely influence the life cycle (either logical or C++) of
   the object it is bound to. Consequently Facades use weak references to ensure secure operation: attempts to access deleted objects will safely fail.
   Facades are then not really intended to be used as global variables or class member data. The life cycle of Facades should not extend
   beyond the scope of the function in which they have been created, and cannot be used safely to store a reference to an object over an extended
   duration. Most notably, while the correct comparison (see 
<script type="text/javascript"> activateLinkAnchor('CATBaseUnknown','IsEqual','CATBaseUnknown.IsEqual') </script> ) of 2 <tt>AddRef</tt>'d pointers can descriminate   between two pointers to the same Logically deleted object and two pointers to the distinct Logically deleted objects,the comparison of 2 Facades
   does not provide this ability.<br>
   Refer to the CAA Encyclopedia Feature Modeler pages to learn how to manage the Life Cycle of your objects.</p>
 <p><b>Access Control</b> information.<br>
   Interactions with Feature Modeler entities, either read-only or read+write, are subject to authorization.<br>
   On a Facade with no (or insufficient) Accreditations only the methods related to the Facade binding will succeed.
   Such a Facade can most notably be used as an output parameter for a method like 
<script type="text/javascript"> activateLinkAnchor('CATFmFeatureFacade','GetContainerFacade','CATFmFeatureFacade.GetContainerFacade') </script>   to retrieve immediatly a pointer to the Feature Container through 
<script type="text/javascript"> activateLinkAnchor('','GetContainer','GetContainer') </script> or 
<script type="text/javascript"> activateLinkAnchor('','QueryInterfaceOnContainer','QueryInterfaceOnContainer') </script> .   All other methods, i.e. those for wich E_ACCESSDENIED is a legal return value, will fail.<br>
   To be allowed to create Feature Containers, instantiate its own Features in a Feature Container and scan a Feature Container for
   its own Features, an application must be registered as being based on Feature Modeler.</p>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmCredentials','','CATFmCredentials') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATFmContainerFacade()"><b>CATFmContainerFacade</b></a>()
<dd>  Constructs an empty Feature Container Facade.
 <dt> o 
    <a href="#CATFmContainerFacade(CATFmCredentials&amp;)"><b>CATFmContainerFacade</b></a>(CATFmCredentials&amp;)
<dd>  Constructs a Feature Container Facade.
 <dt> o 
    <a href="#CATFmContainerFacade(CATFmContainerFacade&amp;)"><b>CATFmContainerFacade</b></a>(CATFmContainerFacade&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATFmContainerFacade(CATFmCredentials&amp;,CATBaseUnknown*)"><b>CATFmContainerFacade</b></a>(CATFmCredentials&amp;,CATBaseUnknown*)
<dd>  Constructs a Feature Container Facade.
 <dt> o 
    <a href="#~CATFmContainerFacade()"><b>~CATFmContainerFacade</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Clear()"><b>Clear</b></a>()
<dd>  Unbinds the Facade from its bound Feature Container.
 <dt> o 
    <a href="#CompareContainerWith(CATFmContainerFacade&amp;)"><b>CompareContainerWith</b></a>(CATFmContainerFacade&amp;)
<dd>  Compares the bound Feature Container(s) of two Facades.
 <dt> o 
    <a href="#GetContainer()"><b>GetContainer</b></a>()
<dd>  Returns the bound Feature Container through a CATBaseUnknown smart pointer.
 <dt> o 
    <a href="#IsValid()"><b>IsValid</b></a>()
<dd>  Checks the Facade validity.
 <dt> o 
    <a href="#QueryInterfaceOnContainer(IID&amp;,void**)"><b>QueryInterfaceOnContainer</b></a>(IID&amp;,void**)
<dd>  Retrieves the bound Feature Container through a user specified interface pointer.
 <dt> o 
    <a href="#ScanFeatures(CATFmFeatureIterator&amp;)"><b>ScanFeatures</b></a>(CATFmFeatureIterator&amp;)
<dd>  Scans the bound Container for Features.
 <dt> o 
    <a href="#ScanRootFeatures(CATFmFeatureIterator&amp;)"><b>ScanRootFeatures</b></a>(CATFmFeatureIterator&amp;)
<dd>  Scans the bound Container for Root Features.
 <dt> o 
    <a href="#operator!()"><b>operator!</b></a>()
<dd>  Logical-negation (or logical-NOT) operator.
 <dt> o 
    <a href="#operator=(CATBaseUnknown*)"><b>operator=</b></a>(CATBaseUnknown*)
<dd>  Binds the Facade to a Feature Container.
 <dt> o 
    <a href="#operator=(CATFmContainerFacade&amp;)"><b>operator=</b></a>(CATFmContainerFacade&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATFmContainerFacade"></a><a name="CATFmContainerFacade()"></a> <dt> o <b>CATFmContainerFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmContainerFacade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty Feature Container Facade.
 <br><b>Role</b>: This constructor creates a Facade with no Accreditation and not bound to any Feature Container.
 <br>Only the assignment operator can affect the Accreditations Set of a Facade after its construction.
</dl>
<a name="CATFmContainerFacade"></a><a name="CATFmContainerFacade(CATFmCredentials&amp;)"></a> <dt> o <b>CATFmContainerFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmContainerFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iAccreditations</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Feature Container Facade.
 <br><b>Role</b>: This constructor creates a Facade with the provided Accreditations Set and not bound to any Feature Container.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAccreditations</tt>
   <dd> [in]   The Accreditations Set obtained by the application.
   Refer to the Access Control section of the </dd>
<script type="text/javascript"> activateLinkAnchor('CATFmContainerFacade','','CATFmContainerFacade') </script> class documentation.   <br>Only the assignment operator can affect the Accreditations Set of a Facade after its construction.
   <br><b>Lifecycle</b>: A Facade keeps a copy of the Accreditations Set. Any change in <tt>iAccreditations</tt>
   (RegisterAsCatalogOwner ...) performed after the Facade creation will not affect the Facade.
</dl>
</dl>
</dl>
<a name="CATFmContainerFacade"></a><a name="CATFmContainerFacade(CATFmContainerFacade&amp;)"></a> <dt> o <b>CATFmContainerFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmContainerFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmContainerFacade','CATFmContainerFacade&amp;')</script> <td><tt>iContainerFacade</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 <br><b>Role</b>: This method creates an exact copy of a Feature Container Facade.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContainerFacade</tt>
   <dd> [in]   The Facade to copy.</dd>
</dl>
</dl>
</dl>
<a name="CATFmContainerFacade"></a><a name="CATFmContainerFacade(CATFmCredentials&amp;,CATBaseUnknown*)"></a> <dt> o <b>CATFmContainerFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmContainerFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iAccreditations</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iContainer</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Feature Container Facade.
 <br><b>Role</b>: This constructor creates a Facade with the provided Accreditations Set and bound to a Feature Container.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAccreditations</tt>
   <dd> [in]   The Accreditations Set obtained by the application.
   Refer to the Access Control section of the </dd>
<script type="text/javascript"> activateLinkAnchor('CATFmContainerFacade','','CATFmContainerFacade') </script> class documentation.   <br>Only the assignment operator can affect the Accreditations Set of a Facade after its construction.
   <br><b>Lifecycle</b>: A Facade keeps a copy of the Accreditations Set. Any change in <tt>iAccreditations</tt>
   (RegisterAsCatalogOwner ...) performed after the Facade creation will not affect the Facade.
 
    <dt><tt> iContainer</tt>
   <dd> [in]   Any interface on the Container, as a <tt>CATBaseUnknown</tt> pointer.
   <br><b>Legal values</b>:<ul>
     <li>NULL</li>
     <li>Any interface pointer on a Feature Container.</li></ul>
   Any other value, such as an interface on an object that is not a Feature Container, will be handled like a NULL pointer.
   <br><b>Lifecycle</b>: Refer to the Lifecycle section of the </dd>
<script type="text/javascript"> activateLinkAnchor('CATFmContainerFacade','','CATFmContainerFacade') </script> class documentation.
</dl>
</dl>
</dl>
<a name="~CATFmContainerFacade"></a><a name="~CATFmContainerFacade()"></a> <dt> o <b>~CATFmContainerFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATFmContainerFacade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="Clear"></a><a name="Clear()"></a> <dt> o <b>Clear</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmContainerFacade','CATFmContainerFacade &')</script>  <b>Clear</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Unbinds the Facade from its bound Feature Container.
 <br>This method does not affect the Accreditations Set of the Facade.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    This Facade.
</dl>
</dl>
<a name="CompareContainerWith"></a><a name="CompareContainerWith(CATFmContainerFacade&amp;)"></a> <dt> o <b>CompareContainerWith</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>CompareContainerWith</b>(<td> const <script type="text/javascript"> activateLink('CATFmContainerFacade','CATFmContainerFacade&amp;')</script> <td><tt>iContainerFacade</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Compares the bound Feature Container(s) of two Facades.
 <br><b>Role</b>: compares the bound Feature Container(s) of two Facades without taking the Accreditations into account.
 <br>An Feature Container is valid if and only has neither been Logically deleted nor unloaded.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContainerFacade</tt>
   <dd> [in]   The Feature Container Facade to be compared to this.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An integer value.
   <br><b>Legal values</b>:
   <ul><li><tt>TRUE</tt>: if the Facades are either both invalid or both bound to the same valid Feature Container.</li>
       <li><tt>FALSE</tt>: in any other case.</li></ul>
</dl>
</dl>
<a name="GetContainer"></a><a name="GetContainer()"></a> <dt> o <b>GetContainer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown_var')</script>  <b>GetContainer</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the bound Feature Container through a CATBaseUnknown smart pointer.
 <br><b>Role</b>: Use to retrieve an Applicative Modeler level interface on the bound Feature Container through smart pointers.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    A smart pointer to the Feature Container.
   <br>Warning: the exact type of the interface returned as a <tt>CATBaseUnknown</tt> pointer
   is not part of the specification and may vary. Do not make any assumption about it.
</dl>
</dl>
<a name="IsValid"></a><a name="IsValid()"></a> <dt> o <b>IsValid</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsValid</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Checks the Facade validity.
 <br>A Feature Container Facade is valid if and only if it is bound to a Feature Container that has neither been Logically deleted nor unloaded.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An integer value.
   <br><b>Legal values</b>:
   <ul><li><tt>TRUE</tt>: if the Facade is valid.</li>
       <li><tt>FALSE</tt>: if the Facade is invalid.</li></ul>
</dl>
</dl>
<a name="QueryInterfaceOnContainer"></a><a name="QueryInterfaceOnContainer(IID&amp;,void**)"></a> <dt> o <b>QueryInterfaceOnContainer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>QueryInterfaceOnContainer</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void**')</script> <td><tt>oPPV</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the bound Feature Container through a user specified interface pointer.
 <br><b>Role</b>: Use to query Applicative Modeler level interfaces on the bound Feature Container.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIID</tt>
   <dd> [in]   The interface identifier for which a pointer is requested.
 </dd>
    <dt><tt> oPPV</tt>
   <dd> [out, CATBaseUnknown#Release]   The address where the returned pointer to the interface is located.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The query succeeds.</dd>
     <dt>E_NOINTERFACE</dt>
     <dd>The interface does not exist.</dd>
     <dt>E_FAIL</dt>
     <dd>The object is not valid.</dd>
     <dt>E_OUTOFMEMORY</dt>
     <dd>A memory allocation failed.</bb>
     <dt>E_UNEXPECTED</dt>
     <dd>The query failed for any other reason.</dd>
   </dl>
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATBaseUnknown','QueryInterface','CATBaseUnknown.QueryInterface') </script>
</dl>
</dl>
<a name="ScanFeatures"></a><a name="ScanFeatures(CATFmFeatureIterator&amp;)"></a> <dt> o <b>ScanFeatures</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ScanFeatures</b>(<td><script type="text/javascript"> activateLink('CATFmFeatureIterator','CATFmFeatureIterator&amp;')</script> <td><tt>oIterator</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Scans the bound Container for Features.
 <br><b>Role</b>: This method fills an iterator with the Features found in a Container, either Root or not. "Root" Features are not-aggregated Features.
 <br>An application declared as being based on Feature Modeler will be able to find the Features defined in its registered catalogs (according
 to the provided Accreditations Set).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIterator</tt>
   <dd> [out]   A (caller provided) Iterator that will be filled with the Features of this Container.
   <br>If the method fails <tt>oIterator</tt> is not modified, it is otherwise overwritten with the retrieved value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Iterator has been successfuly populated.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>Credentials do not grant access to this Feature Container.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>Facade is not bound to a valid Container.</dd>
     <dt>E_FMNOTLOADED</dt>
     <dd>This Container is not loaded.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
  </dl>
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmFeatureIterator','','CATFmFeatureIterator') </script>
</dl>
</dl>
<a name="ScanRootFeatures"></a><a name="ScanRootFeatures(CATFmFeatureIterator&amp;)"></a> <dt> o <b>ScanRootFeatures</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ScanRootFeatures</b>(<td><script type="text/javascript"> activateLink('CATFmFeatureIterator','CATFmFeatureIterator&amp;')</script> <td><tt>oIterator</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Scans the bound Container for Root Features.
 <br><b>Role</b>: This method fills an iterator with the Root Features found in a Container. "Root" Features are not-aggregated Features.
 <br>An application declared as being based on Feature Modeler will be able to find the Features defined in its registered catalogs (according
 to the provided Accreditations Set).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIterator</tt>
   <dd> [out]   A (caller provided) Iterator that will be filled with the Features of this Container.
   <br>If the method fails <tt>oIterator</tt> is not modified, it is otherwise overwritten with the retrieved value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Iterator has been successfuly populated.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>Credentials do not grant access to this Feature Container.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>Facade is not bound to a valid Container.</dd>
     <dt>E_FMNOTLOADED</dt>
     <dd>This Container is not loaded.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
  </dl>
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmFeatureIterator','','CATFmFeatureIterator') </script>
</dl>
</dl>
<a name="operator!"></a><a name="operator!()"></a> <dt> o <b>operator!</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator!</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Logical-negation (or logical-NOT) operator.
 <br><b>Role</b>: Checks if the Facade is invalid.
 <br>A Feature Container Facade is valid if and only if it is bound to a Feature Container that has neither been Logically deleted nor unloaded.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An integer value.
   <br><b>Legal values</b>:
   <ul><li><tt>1</tt>: if the Facade is invalid.</li>
       <li><tt>0</tt>: if the Facade is valid.</li></ul>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATBaseUnknown*)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmContainerFacade','CATFmContainerFacade &')</script>  <b>operator=</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iContainer</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Binds the Facade to a Feature Container.
 <br>This method does not affect the Accreditations Set of the Facade.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContainer</tt>
   <dd> [in]   Any interface pointer to the Container as a <tt>CATBaseUnknown</tt> pointer.
   <br><b>Legal values</b>:<ul>
     <li>NULL</li>
     <li>Any interface pointer on a Feature Container.</li></ul>
   Any other value, such as an interface on an object that is not a Feature Container, will be handled like a NULL pointer.
   <br><b>Lifecycle</b>: Refer to the Lifecycle section of the </dd>
<script type="text/javascript"> activateLinkAnchor('CATFmContainerFacade','','CATFmContainerFacade') </script> class documentation. 
  <dt> <b>Returns:</b> 
  <dd>    This Facade.
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATFmContainerFacade&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmContainerFacade','CATFmContainerFacade &')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATFmContainerFacade','CATFmContainerFacade&amp;')</script> <td><tt>iContainerFacade</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 <br><b>Role</b>: This method transforms this Facade to an exact copy of another Feature Container Facade.
 <br>Both the Credentials and the bound Feature Container are copied.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContainerFacade</tt>
   <dd> [in]   The Facade to copy.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmContainerFacade.h</b><br>
If needed, your Imakefile.mk should include the module: <b>FeatureModelerExt</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

