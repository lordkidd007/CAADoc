<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FeatureModelerExt Class CATFmStartUpFacade</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../FeatureModelerExt.htm" href="../FeatureModelerExt.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "FeatureModelerExt";	}
		function getCurrentObjectName() { 
 	return "CATFmStartUpFacade"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>FeatureModelerExt <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmStartUpFacade</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmStartUpFacade_30201','CATFmStartUpFacade','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmStartUpFacade</b>
</p>
<p>
<b><i> Class representing a Feature Definition (StartUp).</i></b><br>

 <b>Role</b>: This class is a Facade object providing access to a Feature Definition, according to the provided Accreditations.
 <br>It gathers in a single place all operations defined at the Feature Modeler level that can be performed on a Feature Definition.
 <p>LifeCycle information.<br>
   The recommended usage is to create Facades as local variables in functions and methods bodies.<br>
   Feature Definition Facades are valid during the whole PLM Session in which they have been bound.
   They are nevertheless not really intended to be used as global variables or class member data. The life cycle of Facades should not extend
   beyond the scope of the funtion in which they have been created.<p>
 <p><b>Access Control</b> information.<br>
   Interactions with Feature Modeler entities, either read-only or read+write, are subject to authorization.<br>
   On a Facade with no (or insufficient) Accreditations only the methods related to the Facade binding will succeed.
   Such a Facade can most notably be used as an output parameter for a method like <script type="text/javascript"> activateLinkAnchor('CATFmFeatureFacade','GetStartUpFacade','CATFmFeatureFacade.GetStartUpFacade') </script>   to compare it immediatly with another Feature Definition through 
<script type="text/javascript"> activateLinkAnchor('','CompareStartUpWith','CompareStartUpWith') </script> .   All other methods, i.e. those for wich E_ACCESSDENIED is a legal return value, will fail.<br>
   To be allowed to instantiate a Feature, an application must be registered as the owner of the Feature Catalog defining the Feature.</p>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmCredentials','','CATFmCredentials') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATFmStartUpFacade()"><b>CATFmStartUpFacade</b></a>()
<dd>  Constructs an empty Feature Definition (StartUp) Facade.
 <dt> o 
    <a href="#CATFmStartUpFacade(CATFmCredentials&amp;)"><b>CATFmStartUpFacade</b></a>(CATFmCredentials&amp;)
<dd>  Constructs a Feature Definition (StartUp) Facade.
 <dt> o 
    <a href="#CATFmStartUpFacade(CATFmStartUpFacade&amp;)"><b>CATFmStartUpFacade</b></a>(CATFmStartUpFacade&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATFmStartUpFacade(CATFmCredentials&amp;,CATUnicodeString&amp;)"><b>CATFmStartUpFacade</b></a>(CATFmCredentials&amp;,CATUnicodeString&amp;)
<dd>  Constructs a Feature Definition (StartUp) Facade.
 <dt> o 
    <a href="#~CATFmStartUpFacade()"><b>~CATFmStartUpFacade</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BindTo(CATUnicodeString&amp;)"><b>BindTo</b></a>(CATUnicodeString&amp;)
<dd>  Binds the Facade to a Feature Definition (StartUp).
 <dt> o 
    <a href="#Clear()"><b>Clear</b></a>()
<dd>  Unbinds the Facade from its bound Feature Definition.
 <dt> o 
    <a href="#CompareStartUpWith(CATFmStartUpFacade&amp;)"><b>CompareStartUpWith</b></a>(CATFmStartUpFacade&amp;)
<dd>  Compares the bound Feature Definition(s) of two Facades.
 <dt> o 
    <a href="#GetTypeName(CATUnicodeString&amp;)"><b>GetTypeName</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the Late Type of a Feature Definition.
 <dt> o 
    <a href="#InstantiateIn(CATFmContainerFacade&amp;,CATFmFeatureFacade&amp;)"><b>InstantiateIn</b></a>(CATFmContainerFacade&amp;,CATFmFeatureFacade&amp;)
<dd>  Instantiates a Feature.
 <dt> o 
    <a href="#InstantiateUnder(CATFmContainerFacade&amp;,CATFmFeatureFacade&amp;,CATFmAttributeName&amp;,CATFmFeatureFacade&amp;)"><b>InstantiateUnder</b></a>(CATFmContainerFacade&amp;,CATFmFeatureFacade&amp;,CATFmAttributeName&amp;,CATFmFeatureFacade&amp;)
<dd>  Instantiates a Feature.
 <dt> o 
    <a href="#IsValid()"><b>IsValid</b></a>()
<dd>  Checks the Facade validity.
 <dt> o 
    <a href="#operator!()"><b>operator!</b></a>()
<dd>  Logical-negation (or logical-NOT) operator.
 <dt> o 
    <a href="#operator=(CATFmStartUpFacade&amp;)"><b>operator=</b></a>(CATFmStartUpFacade&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATFmStartUpFacade"></a><a name="CATFmStartUpFacade()"></a> <dt> o <b>CATFmStartUpFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmStartUpFacade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty Feature Definition (StartUp) Facade.
 <br><b>Role</b>: This constructor creates a Facade with no Accreditation and not bound to any Feature Definition.
 <br>Only the assignment operator can affect the Credentials Set of a Facade after its construction.
</dl>
<a name="CATFmStartUpFacade"></a><a name="CATFmStartUpFacade(CATFmCredentials&amp;)"></a> <dt> o <b>CATFmStartUpFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmStartUpFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iAccreditations</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Feature Definition (StartUp) Facade.
 <br><b>Role</b>: This constructor creates a Facade with the provided credentials and not bound to any Feature Definition.
 <br>Only the assignment operator can affect the Credentials Set of a Facade after its construction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAccreditations</tt>
   <dd> [in]   The set of Accreditations obtained by the application.
   <br>These Accreditations will be used to authorize or not any operation attempted on the bound Feature Container.
   <br><b>Lifecycle</b>: A Facade keeps a copy of the set of accreditations it created with.
   Any addition of accreditations performed on the Crendentials object after the Facade has been created will not be reflected.</dd>
</dl>
</dl>
</dl>
<a name="CATFmStartUpFacade"></a><a name="CATFmStartUpFacade(CATFmStartUpFacade&amp;)"></a> <dt> o <b>CATFmStartUpFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmStartUpFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmStartUpFacade','CATFmStartUpFacade&amp;')</script> <td><tt>iStartUpFacade</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 <br><b>Role</b>: This method creates an exact copy of a Feature Definition (StartUp) Facade.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartUpFacade</tt>
   <dd> [in]   The Facade to copy.</dd>
</dl>
</dl>
</dl>
<a name="CATFmStartUpFacade"></a><a name="CATFmStartUpFacade(CATFmCredentials&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CATFmStartUpFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmStartUpFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iAccreditations</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iIdentification</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Feature Definition (StartUp) Facade.
 <br><b>Role</b>: This constructor creates a Facade with the provided credentials and bound to a Feature Definition.
 <br>Only the assignment operator can affect the Credentials Set of a Facade after its construction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAccreditations</tt>
   <dd> [in]   The set of Accreditations obtained by the application.
   <br>These Accreditations will be used to authorize or not any operation attempted on the bound Feature Container.
   <br><b>Lifecycle</b>: A Facade keeps a copy of the set of accreditations it created with.
   Any addition of accreditations performed on the Crendentials object after the Facade has been created will not be reflected.
 </dd>
    <dt><tt> iIdentification</tt>
   <dd>   An identification of the Feature Definition.
   <br><b>Legal values</b>:
   <ul><li><tt>"`StartUpIdentifier`@`Catalog.CATfct`"</tt></li>
       <li><tt>"`StartUpIdentifier`#<number>@`Catalog.CATfct`"</tt></li>
       <li><tt>"0u???????-????-????-????????????????@`Catalog.CATfct`"</tt></li></ul>
   <br><b>Deprecated value (V5-6R2015 / 3DEXPERIENCER2015x)</b>:
    <ul>
    <li>"StartUpLateType"</li>
   </ul>   
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('','BindTo','BindTo') </script>
</dl>
</dl>
<a name="~CATFmStartUpFacade"></a><a name="~CATFmStartUpFacade()"></a> <dt> o <b>~CATFmStartUpFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATFmStartUpFacade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="BindTo"></a><a name="BindTo(CATUnicodeString&amp;)"></a> <dt> o <b>BindTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BindTo</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iIdentification</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Binds the Facade to a Feature Definition (StartUp).
 <br>This method does not affect the Accreditations Set of the Facade.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIdentification</tt>
   <dd>   An identification of the Feature Definition.
   <br><b>Legal values</b>:
   <ul><li><tt>"`StartUpIdentifier`@`Catalog.CATfct`"</tt></li>
       <li><tt>"`StartUpIdentifier`#<number>@`Catalog.CATfct`"</tt></li>
       <li><tt>"0u???????-????-????-????????????????@`Catalog.CATfct`"</tt></li></ul>
   <br><b>Deprecated value (V5-6R2015 / 3DEXPERIENCER2015x)</b>:
    <ul>
    <li>"StartUpLateType"</li>
   </ul>   
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Feature Definition has been found and the Facade bound to it.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The Feature Definition has not been found.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>Credentials do not grant access to this Feature Definition.</dd>
     <dt>E_FAIL</dt>
     <dd>Another failure has occured.</dd>
   </dl></dd>
</dl>
</dl>
</dl>
<a name="Clear"></a><a name="Clear()"></a> <dt> o <b>Clear</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmStartUpFacade','CATFmStartUpFacade &')</script>  <b>Clear</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Unbinds the Facade from its bound Feature Definition.
 <br>This method does not affect the Accreditations Set of the Facade.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    This Facade.
</dl>
</dl>
<a name="CompareStartUpWith"></a><a name="CompareStartUpWith(CATFmStartUpFacade&amp;)"></a> <dt> o <b>CompareStartUpWith</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>CompareStartUpWith</b>(<td> const <script type="text/javascript"> activateLink('CATFmStartUpFacade','CATFmStartUpFacade&amp;')</script> <td><tt>iStartUpFacade</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Compares the bound Feature Definition(s) of two Facades.
 <br><b>Role</b>: compares the bound Feature Definition(s) (StartUp) of two Facades without taking the Accreditations into account.
 <br>An Feature Definition remains valid until the PLM session is closed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartUpFacade</tt>
   <dd> [in]   The Feature Definition Facade to be compared to this.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An integer value.
   <br><b>Legal values</b>:
   <ul><li><tt>TRUE</tt>: if the Facades are either both invalid or both bound to the same valid Feature Definition.</li>
       <li><tt>FALSE</tt>: in any other case.</li></ul>
</dl>
</dl>
<a name="GetTypeName"></a><a name="GetTypeName(CATUnicodeString&amp;)"></a> <dt> o <b>GetTypeName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTypeName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oLateType</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Late Type of a Feature Definition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLateType</tt>
   <dd> [out]   A (caller provided) string in which the Late Type associated to the Feature Definition will be stored.
   The Late Type associated to the Feature Definition is the Late Type of the instances of Feature Definition.
   <br>If the method fails <tt>oLateType</tt> is not modified, it is otherwise overwritten with the retrieved value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Late Type has been successfuly retrieved.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>Facade is not bound to a valid Feature Definition.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>Credentials do not grant access to this Feature Definition.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
  </dl>
</dl>
</dl>
<a name="InstantiateIn"></a><a name="InstantiateIn(CATFmContainerFacade&amp;,CATFmFeatureFacade&amp;)"></a> <dt> o <b>InstantiateIn</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InstantiateIn</b>(<td> const <script type="text/javascript"> activateLink('CATFmContainerFacade','CATFmContainerFacade&amp;')</script> <td><tt>iContainer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmFeatureFacade','CATFmFeatureFacade&amp;')</script> <td><tt>oInstance</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Instantiates a Feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContainer</tt>
   <dd> [in]   A valid Facade bound to the container in which an Instance of this Feature Definition must be created.
 </dd>
    <dt><tt> oInstance</tt>
   <dd> [out]   A (caller provided) Facade that will bound to the created Instance.
   <br>Notice that the Credentials of the provided Facade will not be used nor be modified.
   <br>If the method fails <tt>oInstance</tt> is not modified, it is otherwise overwritten with the retrieved value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The instantiation succeeded.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>Credentials do not grant access to this Feature or the container.</dd>
     <dt>E_FMINVALIDFEATURE</dt>
     <dd>This Facade is not bound to a valid Base Feature.</dd>
     <dt>LCC_E_FAIL</dt>
     <dd>The currently used license does not authorize the requested operation.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
  </dl>
</dl>
</dl>
<a name="InstantiateUnder"></a><a name="InstantiateUnder(CATFmContainerFacade&amp;,CATFmFeatureFacade&amp;,CATFmAttributeName&amp;,CATFmFeatureFacade&amp;)"></a> <dt> o <b>InstantiateUnder</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InstantiateUnder</b>(<td> const <script type="text/javascript"> activateLink('CATFmContainerFacade','CATFmContainerFacade&amp;')</script> <td><tt>iContainer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmFeatureFacade','CATFmFeatureFacade&amp;')</script> <td><tt>iParent</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFmAttributeName','CATFmAttributeName&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmFeatureFacade','CATFmFeatureFacade&amp;')</script> <td><tt>oInstance</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Instantiates a Feature.
 <br><b>Role</b>: Instantiates a Feature and aggregates the new instance under an existing Feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContainer</tt>
   <dd> [in]   A valid Facade bound to the container in which an Instance of this Feature Definition must be created.
 </dd>
    <dt><tt> iParent</tt>
   <dd> [in]   A valid Facade bound to the Feature that will agregate the new Instance.
 </dd>
    <dt><tt> iKey</tt>
   <dd> [in]   The name of the component (or list of components) typed attribute that will be used for aggregation.
   In case of a list, the new Feature is added at the end of the list. The attribute value must otherwise be empty.
 </dd>
    <dt><tt> oInstance</tt>
   <dd> [out]   A (caller provided) Facade that will bound to the created Instance.
   <br>Notice that the Credentials of the provided Facade will not be used nor be modified.
   <br>If the method fails <tt>oInstance</tt> is not modified, it is otherwise overwritten with the retrieved value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The instantiation succeeded.</dd>
     <dt>E_ABORT</dt>
     <dd>The attribute is not a list and there is already a component.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>Credentials do not grant access to the bound Feature, the target Container, the target Feature or its attribute.</dd>
     <dt>E_FMINVALIDFEATURE</dt>
     <dd>This Facade is not bound to a valid Base Feature.</dd>
     <dt>E_FMTYPEMISMATCH</dt>
     <dd>Attribute is not an aggregation attribute.</dd>
     <dt>LCC_E_FAIL</dt>
     <dd>The currently used license does not authorize the requested operation.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
  </dl>
</dl>
</dl>
<a name="IsValid"></a><a name="IsValid()"></a> <dt> o <b>IsValid</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsValid</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Checks the Facade validity.
 <br>An Feature Definition (StartUp) Facade remains valid until the PLM session is closed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An boolean value.
   <br><b>Legal values</b>:
   <ul><li><tt>TRUE</tt>: if the Facade is valid.</li>
       <li><tt>FALSE</tt>: if the Facade is invalid.</li></ul>
</dl>
</dl>
<a name="operator!"></a><a name="operator!()"></a> <dt> o <b>operator!</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator!</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Logical-negation (or logical-NOT) operator.
 <br><b>Role</b>: Checks if the Facade is invalid.
 <br>An Feature Definition (StartUp) Facade remains valid until the PLM session is closed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An integer value.
   <br><b>Legal values</b>:
   <ul><li><tt>1</tt>: if the Facade is invalid.</li>
       <li><tt>0</tt>: if the Facade is valid.</li></ul>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATFmStartUpFacade&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmStartUpFacade','CATFmStartUpFacade &')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATFmStartUpFacade','CATFmStartUpFacade&amp;')</script> <td><tt>iStartUpFacade</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 <br><b>Role</b>: This method transforms this Facade to an exact copy of another Feature Definition (StartUp) Facade.
 <br>Both the Credentials and the bound Feature Definition are copied.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartUpFacade</tt>
   <dd> [in]   The Facade to copy.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmStartUpFacade.h</b><br>
If needed, your Imakefile.mk should include the module: <b>FeatureModelerExt</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

