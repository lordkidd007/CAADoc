<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPlantShipInterfaces Interface CATIPspValidation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../CATPlantShipInterfaces.htm">This Framework</a>  <a href="interface_CATIPspStretchableData_96818.htm">Previous</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>CATPlantShipInterfaces Interface CATIPspValidation</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---CATIPspValidation
 </pre>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../CATPlantShipInterfaces/class_CATEAPspValidation_65192.htm">CATEAPspValidation</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIPspValidation</b>
</p>
<p>
<b><i> Interface base for all types of validation check interfaces.</i></b><br>
 Should not be implemented.
 <b>Role</b>: Base for other validation check interfaces.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCheckName(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>GetCheckName</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Get the NLS name for the given validation check
 
 <dt> o 
    <a href="#GetClassification(CATUnicodeString&amp;)"><b>GetClassification</b></a>(CATUnicodeString&amp;)
<dd>  Get the validation check classification for this type (e.
 <dt> o 
    <a href="#GetColumnTitles(CATListValCATUnicodeString&amp;)"><b>GetColumnTitles</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Get the NLS column titles for the given validation type.
 <dt> o 
    <a href="#GetContextObjectViolation(int&amp;,CATPspViolationProduct**,CATListPV**)"><b>GetContextObjectViolation</b></a>(int&amp;,CATPspViolationProduct**,CATListPV**)
<dd>  Get the violation product and check violation data for the given
 context violation index.
 <dt> o 
    <a href="#GetContextObjectViolationCount(int&amp;)"><b>GetContextObjectViolationCount</b></a>(int&amp;)
<dd>  Get the number of violation objects (e.
 <dt> o 
    <a href="#GetDocColumnTitles(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)"><b>GetDocColumnTitles</b></a>(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)
<dd>  Get the NLS column titles of the document and the object for a given validation type.
 <dt> o 
    <a href="#GetValidationChecks(CATListValCATUnicodeString&amp;)"><b>GetValidationChecks</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Get the validation checks associated with this type (e.
 <dt> o 
    <a href="#GetViolationObjectType(CATUnicodeString&amp;)"><b>GetViolationObjectType</b></a>(CATUnicodeString&amp;)
<dd>  Get the violation object type
 
 <dt> o 
    <a href="#IsAFromToCheck()"><b>IsAFromToCheck</b></a>()
<dd>  Determine if the validation type has FROM/TO validation checks.
 <dt> o 
    <a href="#IsAnIntegrationCheck()"><b>IsAnIntegrationCheck</b></a>()
<dd>  Determine if the validation type has integration validation checks.
 <dt> o 
    <a href="#IsMemberAViolation(CATIPspGroup*,CATIUnknownList*,IUnknown*,CATListValCATUnicodeString&amp;,CATListPV**,unsigned int&amp;)"><b>IsMemberAViolation</b></a>(CATIPspGroup*,CATIUnknownList*,IUnknown*,CATListValCATUnicodeString&amp;,CATListPV**,unsigned int&amp;)
<dd>  Is the group members in violation with any of the given validation checks?
 
 <dt> o 
    <a href="#IsObjectAViolation(CATBaseUnknown*,CATListValCATUnicodeString&amp;,CATListPV**,unsigned int&amp;)"><b>IsObjectAViolation</b></a>(CATBaseUnknown*,CATListValCATUnicodeString&amp;,CATListPV**,unsigned int&amp;)
<dd>  Is the object in violation with any of the given validation checks?
 
 <dt> o 
    <a href="#LogContextObject(CATBaseUnknown*,unsigned int&amp;)"><b>LogContextObject</b></a>(CATBaseUnknown*,unsigned int&amp;)
<dd>  If this object is applicable for this check, then retain this object for
 post-processing.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCheckName"></a><a name="GetCheckName(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetCheckName</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetCheckName</b>(<td> const <a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>iCheck</tt>,<tr><td></td><td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oName</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get the NLS name for the given validation check
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCheck</tt>
   <dd>   The validation check (e.g. Spec01)
 </dd>
    <dt><tt> oName</tt>
   <dd>   The validation check name (e.g. Out-of-spec )
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK if oName is non-blank
</dl>
</dl>
<a name="GetClassification"></a><a name="GetClassification(CATUnicodeString&amp;)"></a> <dt> o <b>GetClassification</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetClassification</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oClassification</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get the validation check classification for this type (e.g. Object)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oClassification</tt>
   <dd>   The validation check classification
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK if oClassification is non-blank
</dl>
</dl>
<a name="GetColumnTitles"></a><a name="GetColumnTitles(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>GetColumnTitles</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetColumnTitles</b>(<td><a href="../System/class_CATListValCATUnicodeString_134434.htm">CATListValCATUnicodeString&amp;</a> <td><tt>oTitles</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get the NLS column titles for the given validation type. The data
 return is specific to the validation type does NOT include the
 column titles for the violation object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTitles</tt>
   <dd>   The column titles (e.g. Part Spec   Line Spec )
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK if oTitles is not empty
</dl>
</dl>
<a name="GetContextObjectViolation"></a><a name="GetContextObjectViolation(int&amp;,CATPspViolationProduct**,CATListPV**)"></a> <dt> o <b>GetContextObjectViolation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetContextObjectViolation</b>(<td> const int&amp; <td><tt>iIndex</tt>,<tr><td></td><td>CATPspViolationProduct** <td><tt>oProduct</tt>,<tr><td></td><td><a href="../System/typedef_CATListPV_15534.htm">CATListPV**</a> <td><tt>oViolation</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get the violation product and check violation data for the given
 context violation index.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   Violation index beginning with 1
 </dd>
    <dt><tt> oProduct</tt>
   <dd>   CATPspViolationProduct identification record.  This record excludes
   any violation checks.
 </dd>
    <dt><tt> oViolation</tt>
   <dd>   The check violation, CATPspCheckViolation, information. Delete array
   when done.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK check violation returned
   E_FAIL invalid input or no violation found
</dl>
</dl>
<a name="GetContextObjectViolationCount"></a><a name="GetContextObjectViolationCount(int&amp;)"></a> <dt> o <b>GetContextObjectViolationCount</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetContextObjectViolationCount</b>(<td>int&amp; <td><tt>oNumber</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get the number of violation objects (e.g. CATPspViolationProduct) that
 will be generated as a result of this validation check.  This method
 must be execute after the whole context has been processed through
 LogContextObject method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd>   The number of violation products to be generated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK if oNumber > 0
</dl>
</dl>
<a name="GetDocColumnTitles"></a><a name="GetDocColumnTitles(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>GetDocColumnTitles</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetDocColumnTitles</b>(<td><a href="../System/class_CATListValCATUnicodeString_134434.htm">CATListValCATUnicodeString&amp;</a> <td><tt>oDocTitles</tt>,<tr><td></td><td><a href="../System/class_CATListValCATUnicodeString_134434.htm">CATListValCATUnicodeString&amp;</a> <td><tt>oObjectTitles</tt>) = 0  </table></dt>
<dl>
  <dd>
 Get the NLS column titles of the document and the object for a given validation type.
 There is a one to one relation between oDocTitles and oObjectTitles 
 (for each title listed in oDocTitles, there must be a title in oObjectTitles.)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDocTitles</tt>
   <dd>   The column titles for the documents (e.g. "Document Name", "Function Document Name")
   The documents listed in this column will be available for viewing when the report is shown.
 </dd>
    <dt><tt> oObjectTitles</tt>
   <dd>   The column titles for the object to be reframed (e.g. "Part Instance Name")
   The object listed in this column will be reframed. If there is no object to be reframed, 
   a null should be appended to oObjectTitles.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK if oDocTitles and oObjectTitles are not empty
</dl>
</dl>
<a name="GetValidationChecks"></a><a name="GetValidationChecks(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>GetValidationChecks</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetValidationChecks</b>(<td><a href="../System/class_CATListValCATUnicodeString_134434.htm">CATListValCATUnicodeString&amp;</a> <td><tt>oChecks</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get the validation checks associated with this type (e.g. Spec01, Spec02)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oChecks</tt>
   <dd>   The list of validation checks
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK if checks exist; E_FAIL no checks exist
</dl>
</dl>
<a name="GetViolationObjectType"></a><a name="GetViolationObjectType(CATUnicodeString&amp;)"></a> <dt> o <b>GetViolationObjectType</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>GetViolationObjectType</b>(<td><a href="../System/class_CATUnicodeString_52958.htm">CATUnicodeString&amp;</a> <td><tt>oType</tt>)= 0  </table></dt>
<dl>
  <dd>
 Get the violation object type
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>   The violation object type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK if oType is non-blank
</dl>
</dl>
<a name="IsAFromToCheck"></a><a name="IsAFromToCheck()"></a> <dt> o <b>IsAFromToCheck</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsAFromToCheck</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Determine if the validation type has FROM/TO validation checks.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK Is a FROM/TO check; else FALSE
</dl>
</dl>
<a name="IsAnIntegrationCheck"></a><a name="IsAnIntegrationCheck()"></a> <dt> o <b>IsAnIntegrationCheck</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsAnIntegrationCheck</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Determine if the validation type has integration validation checks.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK Is an integration check; else FALSE
</dl>
</dl>
<a name="IsMemberAViolation"></a><a name="IsMemberAViolation(CATIPspGroup*,CATIUnknownList*,IUnknown*,CATListValCATUnicodeString&amp;,CATListPV**,unsigned int&amp;)"></a> <dt> o <b>IsMemberAViolation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsMemberAViolation</b>(<td> const <a href="../CATPlantShipInterfaces/interface_CATIPspGroup_29352.htm">CATIPspGroup*</a> <td><tt>iGroup</tt>,<tr><td></td><td> const <a href="../System/interface_CATIUnknownList_46757.htm">CATIUnknownList*</a> <td><tt>iMembers</tt>,<tr><td></td><td> const <a href="../System/interface_IUnknown_14460.htm">IUnknown*</a> <td><tt>iObject</tt>,<tr><td></td><td> const <a href="../System/class_CATListValCATUnicodeString_134434.htm">CATListValCATUnicodeString&amp;</a> <td><tt>iChecks</tt>,<tr><td></td><td><a href="../System/typedef_CATListPV_15534.htm">CATListPV**</a> <td><tt>oViolation</tt>,<tr><td></td><td> const unsigned int&amp; <td><tt>iErrorFile</tt><td><tt>= 0 </tt>)= 0  </table></dt>
<dl>
  <dd>
 Is the group members in violation with any of the given validation checks?
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMembers</tt>
   <dd>   iGroup's members.
 </dd>
    <dt><tt> iObject</tt>
   <dd>   The group member being processed
 </dd>
    <dt><tt> iChecks</tt>
   <dd>   The list of check to be processed
 </dd>
    <dt><tt> oViolation</tt>
   <dd>    The check violation, CATPspCheckViolation, information. Delete array
   when done.
 </dd>
    <dt><tt> iErrorFile</tt>
   <dd>   The file descriptor to the opened error file.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK iObject violated at least one check
   S_FALSE iObject did not violate any checks or not applicable for check
   E_FAIL invalid input or error found such that check can not be performed
</dl>
</dl>
<a name="IsObjectAViolation"></a><a name="IsObjectAViolation(CATBaseUnknown*,CATListValCATUnicodeString&amp;,CATListPV**,unsigned int&amp;)"></a> <dt> o <b>IsObjectAViolation</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>IsObjectAViolation</b>(<td> const <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>iObject</tt>,<tr><td></td><td> const <a href="../System/class_CATListValCATUnicodeString_134434.htm">CATListValCATUnicodeString&amp;</a> <td><tt>iChecks</tt>,<tr><td></td><td><a href="../System/typedef_CATListPV_15534.htm">CATListPV**</a> <td><tt>oViolation</tt>,<tr><td></td><td> const unsigned int&amp; <td><tt>iErrorFile</tt><td><tt>= 0 </tt>)= 0  </table></dt>
<dl>
  <dd>
 Is the object in violation with any of the given validation checks?
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>   The object to be checked
 </dd>
    <dt><tt> iChecks</tt>
   <dd>   The list of check to be processed
 </dd>
    <dt><tt> oViolation</tt>
   <dd>   The check violation, CATPspCheckViolation, information.  Delete array
   when done.
 </dd>
    <dt><tt> iErrorFile</tt>
   <dd>   The file descriptor to the opened error file.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   S_OK iObject violated at least one check
   S_FALSE iObject did not violate any checks or not applicable for check
   E_FAIL invalid input or error found such that check can not be performed
</dl>
</dl>
<a name="LogContextObject"></a><a name="LogContextObject(CATBaseUnknown*,unsigned int&amp;)"></a> <dt> o <b>LogContextObject</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>LogContextObject</b>(<td> const <a href="../System/class_CATBaseUnknown_40786.htm">CATBaseUnknown*</a> <td><tt>iObject</tt>,<tr><td></td><td> const unsigned int&amp; <td><tt>iErrorFile</tt><td><tt>=0 </tt>)= 0  </table></dt>
<dl>
  <dd>
 If this object is applicable for this check, then retain this object for
 post-processing. This object will be processed through the validation
 check.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>   The object to be checked
 </dd>
    <dt><tt> iErrorFile</tt>
   <dd>   The file descriptor to the opened error file.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   E_FAIL invalid input or error found such that check can not be performed;
   otherwise S_OK
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPspValidation.h</b><br>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
