<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MechanicalModelerUI Class CATMMUIPanelStateCmd</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MechanicalModelerUI.htm" href="../MechanicalModelerUI.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MechanicalModelerUI";	}
		function getCurrentObjectName() { 
 	return "CATMMUIPanelStateCmd"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MechanicalModelerUI <script type="text/javascript" > writeClassCharacteristic(); </script> CATMMUIPanelStateCmd</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMMUIPanelStateCmd_36219','CATMMUIPanelStateCmd','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATMMUIPanelStateCmd</b>
</p>
<p>
<b><i> Base class for mechanical feature creation and edition commands.</i></b><br>

 <b>Role</b>: Derives this class to implement your command.
 Overrides the <tt>GiveMyPanel</tt> method to return the dialog box
 associated with your command.
 Overrides the <tt>OkAction</tt>, <tt>ApplyAction</tt>,... to customize
 the actions on click button events.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMMUIPanelStateCmd(CATString&amp;,CATDlgEngBehavior,CATCommandMode,int,CATPathElement*,CATPathElement*)"><b>CATMMUIPanelStateCmd</b></a>(CATString&amp;,CATDlgEngBehavior,CATCommandMode,int,CATPathElement*,CATPathElement*)
<dd>  Constructs the commands.
 <dt> o 
    <a href="#~CATMMUIPanelStateCmd()"><b>~CATMMUIPanelStateCmd</b></a>()
<dd>  Deletes the command.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddPanelState(CATString&amp;)"><b>AddPanelState</b></a>(CATString&amp;)
<dd>  Creates a CATCustomizableState associated with your dialog box.
 <dt> o 
    <a href="#ApplyAction(void*)"><b>ApplyAction</b></a>(void*)
<dd>  Deals with Appply button click event.
 <dt> o 
    <a href="#BuildGraph()"><b>BuildGraph</b></a>()
<dd>  Builds the command graph.
 <dt> o 
    <a href="#Cancel(CATCommand*,CATNotification*)"><b>Cancel</b></a>(CATCommand*,CATNotification*)
<dd>  Cancels the command.
 <dt> o 
    <a href="#CancelAction(void*)"><b>CancelAction</b></a>(void*)
<dd>  Deals with Cancel button click event.
 <dt> o 
    <a href="#GetInitialPanelState(CATString&amp;)"><b>GetInitialPanelState</b></a>(CATString&amp;)
<dd>  Returns the first CATCustomizableState associated with your dialog box.
 <dt> o 
    <a href="#GetMode()"><b>GetMode</b></a>()
<dd>  Gets the command mode.
 <dt> o 
    <a href="#GiveMyPanel()"><b>GiveMyPanel</b></a>()
<dd>  Gets the dialog box.
 <dt> o 
    <a href="#OkAction(void*)"><b>OkAction</b></a>(void*)
<dd>  Deals with Ok button click event.
 <dt> o 
    <a href="#PreviewAction(void*)"><b>PreviewAction</b></a>(void*)
<dd>  Deals with Preview button click event.
 <dt> o 
    <a href="#UpdateKOAction(void*)"><b>UpdateKOAction</b></a>(void*)
<dd>  Deals with Ok button click event.
 <dt> o 
    <a href="#UpdateOKAction(void*)"><b>UpdateOKAction</b></a>(void*)
<dd>  Deals with Ok button click event.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMMUIPanelStateCmd"></a><a name="CATMMUIPanelStateCmd(CATString&amp;,CATDlgEngBehavior,CATCommandMode,int,CATPathElement*,CATPathElement*)"></a> <dt> o <b>CATMMUIPanelStateCmd</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CmdDeclareResource(CATMMUIPanelStateCmd,CATMMUIStateCommand)','CmdDeclareResource(CATMMUIPanelStateCmd,CATMMUIStateCommand)')</script>  <b>CATMMUIPanelStateCmd</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDlgEngBehavior','CATDlgEngBehavior')</script> <td><tt>iBehavior</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCommandMode','CATCommandMode')</script> <td><tt>iStatus</tt><td><tt>= CATCommandModeExclusive</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCreateCommand</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iWorkingPath</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iActiveObjectPath</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs the commands.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>   as in CATStateCommand.
 </dd>
    <dt><tt> iBehavior</tt>
   <dd>   as in CATStateCommand.
 </dd>
    <dt><tt> iStatus</tt>
   <dd>   as in CATStateCommand.
 </dd>
    <dt><tt> iCreateCommand</tt>
   <dd>   The command mode: 
   <br><b>Legal values</b>:
   <ul><li>0: edition mode.
   <li>1: creation mode.</ul>
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATStateCommand','','CATStateCommand') </script>
</dl>
</dl>
<a name="~CATMMUIPanelStateCmd"></a><a name="~CATMMUIPanelStateCmd()"></a> <dt> o <b>~CATMMUIPanelStateCmd</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATMMUIPanelStateCmd</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deletes the command.
 If the command has been constructed with the third argument iStatus equal to CATCommandModeUndefined, 
 it must be deleted by calling the method RequestDelayedDestruction. 
 In the other cases, it it will be automatically deleted.
 Never call a delete on it.
</dl>
 <h2>Methods</h2> <br>
<a name="AddPanelState"></a><a name="AddPanelState(CATString&amp;)"></a> <dt> o <b>AddPanelState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCustomizableState','CATCustomizableState *')</script>  <b>AddPanelState</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a CATCustomizableState associated with your dialog box.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The resource identifier used to retrieve the state prompt in the command
   message file.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created CATCustomizableState.
 Do not release the return value.
</dl>
</dl>
<a name="ApplyAction"></a><a name="ApplyAction(void*)"></a> <dt> o <b>ApplyAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>ApplyAction</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deals with Appply button click event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iData</tt>
   <dd>   An object that can be useful for the action.</dd>
</dl>
</dl>
</dl>
<a name="BuildGraph"></a><a name="BuildGraph()"></a> <dt> o <b>BuildGraph</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BuildGraph</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Builds the command graph.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATStateCommand','','CATStateCommand') </script>
</dl>
</dl>
<a name="Cancel"></a><a name="Cancel(CATCommand*,CATNotification*)"></a> <dt> o <b>Cancel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATStatusChangeRC','CATStatusChangeRC')</script>  <b>Cancel</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iCmd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotif</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Cancels the command.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCommand','','CATCommand') </script>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCmd</tt>
   <dd>   The command that requests to cancel the current one
 </dd>
    <dt><tt> iNotif</tt>
   <dd>   The notification sent</dd>
</dl>
</dl>
</dl>
<a name="CancelAction"></a><a name="CancelAction(void*)"></a> <dt> o <b>CancelAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>CancelAction</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deals with Cancel button click event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iData</tt>
   <dd>   An object that can be useful for the action.</dd>
</dl>
</dl>
</dl>
<a name="GetInitialPanelState"></a><a name="GetInitialPanelState(CATString&amp;)"></a> <dt> o <b>GetInitialPanelState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCustomizableState','CATCustomizableState *')</script>  <b>GetInitialPanelState</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the first CATCustomizableState associated with your dialog box.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The resource identifier used to retrieve the state prompt in the command
   message file.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The first CATCustomizableState.
 Do not release the return value.
</dl>
</dl>
<a name="GetMode"></a><a name="GetMode()"></a> <dt> o <b>GetMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetMode</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets the command mode.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The value.
   <br><b>Legal values</b>: <ul>
   <li>0 edit mode.</li>
   <li>1 create mode.</li></ul>
</dl>
</dl>
<a name="GiveMyPanel"></a><a name="GiveMyPanel()"></a> <dt> o <b>GiveMyPanel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDlgDialog','CATDlgDialog*')</script>  <b>GiveMyPanel</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the dialog box.
 Override this method to return your own dialog box.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The dialog box associated with the command.
</dl>
</dl>
<a name="OkAction"></a><a name="OkAction(void*)"></a> <dt> o <b>OkAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>OkAction</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deals with Ok button click event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iData</tt>
   <dd>   An object that can be useful for the action.</dd>
</dl>
</dl>
</dl>
<a name="PreviewAction"></a><a name="PreviewAction(void*)"></a> <dt> o <b>PreviewAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>PreviewAction</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deals with Preview button click event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iData</tt>
   <dd>   An object that can be useful for the action.</dd>
</dl>
</dl>
</dl>
<a name="UpdateKOAction"></a><a name="UpdateKOAction(void*)"></a> <dt> o <b>UpdateKOAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>UpdateKOAction</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deals with Ok button click event. Update is KO.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iData</tt>
   <dd>   An object that can be useful for the action.</dd>
</dl>
</dl>
</dl>
<a name="UpdateOKAction"></a><a name="UpdateOKAction(void*)"></a> <dt> o <b>UpdateOKAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>UpdateOKAction</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deals with Ok button click event. Update is OK.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iData</tt>
   <dd>   An object that can be useful for the action.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMMUIPanelStateCmd.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMechanicalModelerUI</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

