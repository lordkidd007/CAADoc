<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSurfacicOpeInterfaces Interface CATIGSMFactoryGeo</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSurfacicOpeInterfaces.htm" href="../CATSurfacicOpeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSurfacicOpeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIGSMFactoryGeo"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATSurfacicOpeInterfaces Interface CATIGSMFactoryGeo</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMFactoryGeo_45256','CATIGSMFactoryGeo','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMFactoryGeo</b>
</p>
<p>
<b><i> Class defining the topological operator that fills  a space defined by a set of wires.</i></b><br>

 <br> The wires must define a closed area and be connected.
 Continuity criteria can be precised: G0, G1 if the supporting surfaces of the wire
 are given, G0 otherwise. The supporting surfaces must be coherent to allow the operator to
 compute a G1 continuity.
 If the given continuity constraints are not compatible, the fill result could not
 not satisfy the continuity contraints. 
 if the given continuity constraints define a too scattered set of normals, the shape of
 fill result could not be correct.It is also possible to have no result.  
 
 <br>The CATIGSMFactoryGeoFill operator creates the resulting filling skin body
 separately from the inputs: the wires of the input bodies are not used to define the topology
 of the resulting fill body.  
<ul>
 <li>A CATIGSMFactoryGeoFill operator is created with the <tt>CreateTopologicalAutomaticFill</tt> global function.
 It must be directly deleted with the usual C++ <tt>delete</tt> operator. It is is not streamable. 
<li>Options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method 
<li>The result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometric factory.
 <li>The journal corresponding to the fill operation is not yet implemented.
</ul>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATGSMCreateTopologicalAutomaticFill(CATGeoFactory*,CATTopData*,CATListPtrCATBody const&amp;,CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType)"><b>CATGSMCreateTopologicalAutomaticFill</b></a>(CATGeoFactory*,CATTopData*,CATListPtrCATBody const&amp;,CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType)
<dd>  Creates a topological operator that fills a closed area defined by a set of wires.
 <dt> o 
    <a href="#CATGSMCreateTopologicalAutomaticFill(CATGeoFactory*,CATTopData*,CATListPtrCATBody const&amp;,CATListPtrCATBody const&amp;,CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType)"><b>CATGSMCreateTopologicalAutomaticFill</b></a>(CATGeoFactory*,CATTopData*,CATListPtrCATBody const&amp;,CATListPtrCATBody const&amp;,CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType)
<dd>  Creates a topological operator that fills a closed area defined by a set of wires.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CATGSMCreateTopologicalAutomaticFill"></a><a name="CATGSMCreateTopologicalAutomaticFill(CATGeoFactory*,CATTopData*,CATListPtrCATBody const&amp;,CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType)"></a> <dt> o <b>CATGSMCreateTopologicalAutomaticFill</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAutomaticFillGeo','CATIGSMAutomaticFillGeo *')</script>  <b>CATGSMCreateTopologicalAutomaticFill</b>(<td><script type="text/javascript"> activateLink('CATGeoFactory','CATGeoFactory*')</script> <td><tt>iFactory</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATTopData','CATTopData*')</script> <td><tt>iData</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATBody const','CATListPtrCATBody const&amp;')</script> <td><tt>iListOfWires</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType','CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType')</script> <td><tt>iFillType</tt><td><tt>=CATIGSMAutomaticFillGeo::Analytic</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a topological operator that fills a closed area defined by a set of wires.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFactory</tt>
   <dd> The pointer to the factory of the geometry.
 </dd>
    <dt><tt> iListOfWires</tt>
   <dd> The list of pointers to the wire bodies, each containing only one wire. 
 The set of wires must defined a closed area and connected. 
 </dd>
    <dt><tt> iFillType</tt>
   <dd> Type of the fill to compute. iFillType can have three values. 
 CATTopologicalFill::analytic:
 The edges of the domain to fill are isoparametric  curves of the final surfaces. The number
 of generated faces is depending on the number of wires.
 Use it for simple domain to fill, as rectangular area.
 CATTopologicalFill::power
 The area is filled with a single surface. This allows you to manage wires which describe 
 a complex topology.
 CATTopologicalFill::autofill_level1 
 Automatically determines the most suitable method according to the input topology.
 </dd>
    <dt><tt> iJournal</tt>
   <dd> The pointer to the journal corresponding to the operation. If <tt>NULL</tt>, the journal is not filled in.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created operator. To <tt>delete</tt> afer use.
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATTopologicalFill','','CATTopologicalFill') </script>
</dl>
</dl>
<a name="CATGSMCreateTopologicalAutomaticFill"></a><a name="CATGSMCreateTopologicalAutomaticFill(CATGeoFactory*,CATTopData*,CATListPtrCATBody const&amp;,CATListPtrCATBody const&amp;,CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType)"></a> <dt> o <b>CATGSMCreateTopologicalAutomaticFill</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAutomaticFillGeo','CATIGSMAutomaticFillGeo *')</script>  <b>CATGSMCreateTopologicalAutomaticFill</b>(<td><script type="text/javascript"> activateLink('CATGeoFactory','CATGeoFactory*')</script> <td><tt>iFactory</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATTopData','CATTopData*')</script> <td><tt>iData</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATBody const','CATListPtrCATBody const&amp;')</script> <td><tt>iListOfWires</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATBody const','CATListPtrCATBody const&amp;')</script> <td><tt>iListOfSupports</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType','CATIGSMAutomaticFillGeo::CATGSMAutomaticFillGeoType')</script> <td><tt>iFillType</tt><td><tt>=CATIGSMAutomaticFillGeo::Analytic</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a topological operator that fills a closed area defined by a set of wires.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFactory</tt>
   <dd> The pointer to the factory of the geometry.
 </dd>
    <dt><tt> iListOfWires</tt>
   <dd> The list of pointers to the wire bodies, each containing only one wire. 
 The set of wires must defined a closed area and be connected.
 </dd>
    <dt><tt> iListOfSupports</tt>
   <dd> The list of pointers to the supporting bodies of the wires, thus allowing you to define G1 continuity
 criteria. 
 </dd>
    <dt><tt> iFillType</tt>
   <dd> Type of the fill to compute. iFillType can have three values. 
 CATTopologicalFill::analytic:
 The edges of the domain to fill are isoparametric  curves of the final surfaces. The number
 of generated faces is depending on the number of wires.
 Use it for simple domain to fill, as rectangular area.
 CATTopologicalFill::power
 The area is filled with a single surface. This allows you to manage wires which describe 
 a complex topology.
 CATTopologicalFill::autofill_level1 
 Automatically determines the most suitable method according to the input topology.
 </dd>
    <dt><tt> iJournal</tt>
   <dd> The pointer to the journal corresponding to the operation. If <tt>NULL</tt>, the journal is not filled in.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created operator. To <tt>delete</tt> afer use.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMFactoryGeo.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSoiInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

