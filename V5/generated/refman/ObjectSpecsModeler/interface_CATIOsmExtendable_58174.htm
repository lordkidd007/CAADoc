<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectSpecsModeler Interface CATIOsmExtendable</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../ObjectSpecsModeler.htm">This Framework</a>  <a href="interface_CATIDescendants_45987.htm">Previous</a>  <a href="interface_CATIOsmExtension_53188.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>ObjectSpecsModeler Interface CATIOsmExtendable</h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">System.IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">System.IDispatch</a>
    |
    +---<a href="../System/class_CATBaseUnknown_40786.htm">System.CATBaseUnknown</a>
      |
      +---CATIOsmExtendable
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIOsmExtendable</b>
</p>
<p>
<b><i> Interface to manage extension features on a base feature.</i></b><br>

 <b>Role</b>: CATIOsmExtendable is implemented by all features except the extension features.</br>
 The ressource file ExtensionName.CATRsc describes the properties of the extension.</br>
 Its format is as follows:</br>
 <ul>
 <li>ExtensionFeature.IsLocal=<value>; whether or not the extension is local. A local extension is not instanciated when its base feature is instanciated. Allowable values are "TRUE" or "FALSE".</li>
 <li>ExtensionFeature.Extends=<featureName>; name of the base feature(s) that this feature extends. Comma separated list of 1-n elements.</li>
 <li>ExtensionFeature.Container=<container>; applicative container in which the extension is to be stored.</li>
 <li>ExtensionFeature.ContType=<type>; type of the container.</li>
 <li>ExtensionFeature.ContSuperType=<type>; supertype of the container.</li>
 *</ul>
 Refer to CAAOsmBiographicalNovel.CATRsc for a complete example.
 An extension feature implements <a href="../ObjectSpecsModeler/interface_CATIOsmExtension_53188.htm">CATIOsmExtension</a> to retrieve its unique base feature.</br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddExtension(char*)"><b>AddExtension</b></a>(char*)
<dd>  Creates and adds an extension.
 <dt> o 
    <a href="#ListExtensions(CATListOfCATUnicodeString&amp;)"><b>ListExtensions</b></a>(CATListOfCATUnicodeString&amp;)
<dd>  Returns all the extensions' identifier types.
 <dt> o 
    <a href="#QueryAllExtensions(IID&amp;,CATListPtrCATBaseUnknown**)"><b>QueryAllExtensions</b></a>(IID&amp;,CATListPtrCATBaseUnknown**)
<dd>  Returns all the extensions implementing the requested interface.
 <dt> o 
    <a href="#QueryApplicativeExtension(char*,IID&amp;,void**)"><b>QueryApplicativeExtension</b></a>(char*,IID&amp;,void**)
<dd>  Returns the extension implementing the requested interface in a given applicative container.
 <dt> o 
    <a href="#QueryExtension(char*,IID&amp;,void**)"><b>QueryExtension</b></a>(char*,IID&amp;,void**)
<dd>  Returns the extension implementing the requested interface.
 <dt> o 
    <a href="#RemoveApplicativeExtensions(char*)"><b>RemoveApplicativeExtensions</b></a>(char*)
<dd>  Removes all the extensions of a feature located in an applicative container.
 <dt> o 
    <a href="#RemoveExtension(CATIOsmExtension*)"><b>RemoveExtension</b></a>(CATIOsmExtension*)
<dd>  Removes an extension.
 <dt> o 
    <a href="#RemoveExtension(char*)"><b>RemoveExtension</b></a>(char*)
<dd>  Removes an extension by its name.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddExtension"></a><a name="AddExtension(char*)"></a> <dt> o <b>AddExtension</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>AddExtension</b>(<td> const char* <td><tt>iExtensionId</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates and adds an extension.</br>
 The catalog containing the startup of the extension should have previously been opened </br>
 on the container which type is given by the resource file associated to the extension.</br>
 The extension is created in that container.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtensionId</tt>
   <dd>        The identifier type of the extension to be instantiated and added.</br>
				This type can be given by </dd>
<a href="../ObjectSpecsModeler/interface_CATIOsmExtension_53188.htm#GetID">CATIOsmExtension.GetID</a>        
 
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
			S_FALSE if extension already exists <br>
			E_INVALIDARG if creation failed because of a problem in the resource file associated to iExtensionId <br>
      E_FAIL if creation failed because startup of extension can not be found
</dl>
</dl>
</dl>
<a name="ListExtensions"></a><a name="ListExtensions(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>ListExtensions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>ListExtensions</b>(<td><a href="../System/typedef_CATListOfCATUnicodeString_123909.htm">CATListOfCATUnicodeString&amp;</a> <td><tt>ioList</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Returns all the extensions' identifier types.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioList</tt>
   <dd>        List of extensions' identifier types added on the feature
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
      E_FAIL problems during list composition
</dl>
</dl>
<a name="QueryAllExtensions"></a><a name="QueryAllExtensions(IID&amp;,CATListPtrCATBaseUnknown**)"></a> <dt> o <b>QueryAllExtensions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>QueryAllExtensions</b>(<td> const <a href="../System/typedef_IID_1488.htm">IID&amp;</a> <td><tt>iIID</tt>,<tr><td></td><td><a href="../ObjectModelerSystem/class_CATListPtrCATBaseUnknown_114916.htm">CATListPtrCATBaseUnknown**</a> <td><tt>oLst</tt>)const = 0  </table></dt>
<dl>
  <dd>
 Returns all the extensions implementing the requested interface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIID</tt>
   <dd>        The IID of the requested interface
 </dd>
    <dt><tt> oLst</tt>
   <dd>        The list of all the extensions implementing the requested interface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
      E_FAIL no extension found <br>
</dl>
</dl>
<a name="QueryApplicativeExtension"></a><a name="QueryApplicativeExtension(char*,IID&amp;,void**)"></a> <dt> o <b>QueryApplicativeExtension</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>QueryApplicativeExtension</b>(<td> const char* <td><tt>iApplicationId</tt>,<tr><td></td><td> const <a href="../System/typedef_IID_1488.htm">IID&amp;</a> <td><tt>iIID</tt>,<tr><td></td><td>void** <td><tt>oResult</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Returns the extension implementing the requested interface in a given applicative container.</br>
 If exists, this extension should be unique in the container.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplicationId</tt>
   <dd>        The name of the applicative container containing the extensions
 </dd>
    <dt><tt> iIID</tt>
   <dd>        The IID of the requested interface
 </dd>
    <dt><tt> oResult</tt>
   <dd> [out, CATBaseUnknown#Release]        The extension implementing the interface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
      E_FAIL no extension implementing the interface found <br>
      E_INVALIDARG several extensions implement the same interface in the container
</dl>
</dl>
<a name="QueryExtension"></a><a name="QueryExtension(char*,IID&amp;,void**)"></a> <dt> o <b>QueryExtension</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>QueryExtension</b>(<td> const char* <td><tt>iExtensionId</tt>,<tr><td></td><td> const <a href="../System/typedef_IID_1488.htm">IID&amp;</a> <td><tt>iIID</tt>,<tr><td></td><td>void** <td><tt>oResult</tt>) const = 0  </table></dt>
<dl>
  <dd>
 Returns the extension implementing the requested interface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtensionId</tt>
   <dd>        The identifier type of the extension to query on.
 </dd>
    <dt><tt> iIID</tt>
   <dd>        The IID of the requested interface
 </dd>
    <dt><tt> oResult</tt>
   <dd> [out, CATBaseUnknown#Release]        The extension implementing the interface
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
      E_FAIL no extension implementing the interface found
</dl>
</dl>
<a name="RemoveApplicativeExtensions"></a><a name="RemoveApplicativeExtensions(char*)"></a> <dt> o <b>RemoveApplicativeExtensions</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveApplicativeExtensions</b>(<td> const char* <td><tt>iApplicationId</tt>)=0   </table></dt>
<dl>
  <dd>
 Removes all the extensions of a feature located in an applicative container.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplicationId</tt>
   <dd>        The name of the applicative container containing the extensions to be removed
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
      S_FALSE no extension found <br>
      E_FAIL if extensions could'nt be removed
</dl>
</dl>
<a name="RemoveExtension"></a><a name="RemoveExtension(CATIOsmExtension*)"></a> <dt> o <b>RemoveExtension</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveExtension</b>(<td><a href="../ObjectSpecsModeler/interface_CATIOsmExtension_53188.htm">CATIOsmExtension*</a> <td><tt>iExtensionToRemove</tt>)=0   </table></dt>
<dl>
  <dd>
 Removes an extension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtensionToRemove</tt>
   <dd>        The extension to be removed
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
      S_FALSE if extension not valid <br>
      E_FAIL if extension could'nt be removed
</dl>
</dl>
<a name="RemoveExtension"></a><a name="RemoveExtension(char*)"></a> <dt> o <b>RemoveExtension</b>

<dt>  <table><tr><td>  public virtual <a href="../System/typedef_HRESULT_8345.htm">HRESULT</a>  <b>RemoveExtension</b>(<td> const char* <td><tt>iExtensionId</tt>)=0   </table></dt>
<dl>
  <dd>
 Removes an extension by its name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtensionId</tt>
   <dd>        The identifier type of the extension to be removed
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
      S_FALSE if extension not found <br>
      E_FAIL if extension could'nt be removed
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIOsmExtendable.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectSpecsModeler</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
