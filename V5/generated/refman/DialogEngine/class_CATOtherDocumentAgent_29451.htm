<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DialogEngine Class CATOtherDocumentAgent</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DialogEngine.htm" href="../DialogEngine.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DialogEngine";	}
		function getCurrentObjectName() { 
 	return "CATOtherDocumentAgent"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DialogEngine <script type="text/javascript" > writeClassCharacteristic(); </script> CATOtherDocumentAgent</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATOtherDocumentAgent_29451','CATOtherDocumentAgent','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATOtherDocumentAgent</b>
</p>
<p>
<b><i> Class to define a dialog agent that enables selection in a nonactive document.</i></b><br>
 
 <b>Role:</b>This dialog agent enables you to select objects in a nonactive document 
 thanks to a command launched from the active state dialog command. As usual, you need
 to instantiate the dialog agent in the state dialog command' BuildGraph method and 
 associate it with a given state. The dialog agent constructor includes a parameter to
 indicate the class name of the command to launch when the state becomes 
 the active one. This command is then launched in all the other open documents' editors. 
 Such a command class must derive from <script type="text/javascript"> activateLinkAnchor('CATMultiDocumentCommand','','CATMultiDocumentCommand') </script>.  The dialog agent is assigned a value using this command, and all the launched
 command instances are automatically deleted.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATOtherDocumentAgent(CATString&amp;,CATClassId,char*,CATClassId,CATDlgEngBehavior)"><b>CATOtherDocumentAgent</b></a>(CATString&amp;,CATClassId,char*,CATClassId,CATDlgEngBehavior)
<dd>  Constructs a dialog agent that enables selection in a non-active document
 
 <dt> o 
    <a href="#~CATOtherDocumentAgent()"><b>~CATOtherDocumentAgent</b></a>()
<dd> </dl>
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATOtherDocumentAgent"></a><a name="CATOtherDocumentAgent(CATString&amp;,CATClassId,char*,CATClassId,CATDlgEngBehavior)"></a> <dt> o <b>CATOtherDocumentAgent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATOtherDocumentAgent</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iCommandToLaunchInDocuments</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iLibrary</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iType</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDlgEngBehavior','CATDlgEngBehavior')</script> <td><tt>iBehavior</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a dialog agent that enables selection in a non-active document
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iId</tt>
   <dd>   The agent identifier. It is used to retrieve the undo/redo titles in 
   the command message file.
 </dd>
    <dt><tt>  iCommandToLaunchInDocuments</tt>
   <dd>   The class name of the command to launch in the other documents to select
   objects. This command must 
   derive from </dd>
<script type="text/javascript"> activateLinkAnchor('CATMultiDocumentCommand','','CATMultiDocumentCommand') </script>.  
    <dt><tt>  iLibrary</tt>
   <dd>   The name of the shared library, without its extension and without 
   the prefix <tt>lib</tt>, that contains the command code.
 </dd>
    <dt><tt>  iType</tt>
   <dd>   The type of the expected objects.
   The type corresponds to an interface implemented by the object. 
   <br><b>Legal values</b>: <tt>iType</tt> is the name of an interface
   that the expected objects must implement. If it is NULL, all the objects
   are accepted.
 </dd>
    <dt><tt>  iBehavior</tt>
   <dd>    The behavior of the dialog agent.
   <br><b>Legal values</b>: The behavior is given as a
   concatenation of the facet values using the | character.
   <br>e.g.: <code>CATDlgEngRepeat|CATDlgEngActive</code>
   <br>If it is NULL, the agent has the default behavior value for each
   facet.
   <br>The behavior may be specified later using the </dd>
<script type="text/javascript"> activateLinkAnchor('CATDialogAgent','SetBehavior','CATDialogAgent.SetBehavior') </script>    method.
</dl>
</dl>
</dl>
<a name="~CATOtherDocumentAgent"></a><a name="~CATOtherDocumentAgent()"></a> <dt> o <b>~CATOtherDocumentAgent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATOtherDocumentAgent</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<hr>
 This object is included in the file: <b>CATOtherDocumentAgent.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDialogEngine</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

