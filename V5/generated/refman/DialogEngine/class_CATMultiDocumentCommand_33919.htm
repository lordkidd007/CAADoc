<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DialogEngine Class CATMultiDocumentCommand</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DialogEngine.htm" href="../DialogEngine.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DialogEngine";	}
		function getCurrentObjectName() { 
 	return "CATMultiDocumentCommand"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DialogEngine <script type="text/javascript" > writeClassCharacteristic(); </script> CATMultiDocumentCommand</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMultiDocumentCommand_33919','CATMultiDocumentCommand','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATMultiDocumentCommand</b>
</p>
<p>
<b><i> Base class to define a state dialog command to achieve a selection in any nonactive document.</i></b><br>
 
 <b>Role</b>: This class enables a selection in a nonactive document from a state dialog 
 command running in the workbench of the active document.
 <br>Derive <tt>CATMultiDocumentCommand</tt>  to create a class that should be instantiated 
 by a dialog agent of another state dialog command that runs in the active document. 
 The dialog agent must be an instance of <script type="text/javascript"> activateLinkAnchor('CATOtherDocumentAgent','','CATOtherDocumentAgent') </script>. <br>
 When the state with which the dialog agent is associated becomes active, an instance 
 of <tt>CATMultiDocumentCommand</tt> is created for any nonactive document as a proxy of
 the active command to select either an object or a set of objects in one of these 
 nonactive documents.
 <br>
 As for any state dialog command, you need to override the 
<script type="text/javascript"> activateLinkAnchor('CATStateCommand','BuildGraph','CATStateCommand.BuildGraph') </script> method,  create at least a state, associate with this state a 
<script type="text/javascript"> activateLinkAnchor('CATPathElement','','CATPathElement') </script> Agent instance  to enable selection, and create an Action method that uses the 
<script type="text/javascript"> activateLinkAnchor('','ReturnValue','ReturnValue') </script> or  
<script type="text/javascript"> activateLinkAnchor('','ReturnListOfValues','ReturnListOfValues') </script> method, depending on whether you enable multiselection.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATBasicMultiDocumentCommand','','CATBasicMultiDocumentCommand') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ReturnListOfValues(CATSO*)"><b>ReturnListOfValues</b></a>(CATSO*)
<dd>  Returns to the agent the selected objects as a path element.
 <dt> o 
    <a href="#ReturnValue(CATPathElement*)"><b>ReturnValue</b></a>(CATPathElement*)
<dd>  Returns to the agent the selected object as a path element.
</dl>
<dl>
</dl>
<dl>
 <h2>Data Member Index</h2> <br>
 <dt> o 
    <a href="#_fromCommand"><b>_fromCommand</b></a>
<dd>  The agent which has instantiated this command.
</dl>
 <h2>Methods</h2> <br>
<a name="ReturnListOfValues"></a><a name="ReturnListOfValues(CATSO*)"></a> <dt> o <b>ReturnListOfValues</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReturnListOfValues</b>(<td><script type="text/javascript"> activateLink('CATSO','CATSO*')</script> <td><tt>iList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns to the agent the selected objects as a path element.
 <br><b>Role:</b>Use this method in case of multi-selection.
 Just after executing this method the command will be automatically deleted.
 <br>The list is sent to the <tt>CATOtherDocumentAgent</tt> which has instantiated
 this command.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iList</tt>
   <dd>   List of selected elements.</dd>
</dl>
</dl>
</dl>
<a name="ReturnValue"></a><a name="ReturnValue(CATPathElement*)"></a> <dt> o <b>ReturnValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReturnValue</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns to the agent the selected object as a path element.
 <br><b>Role:</b>Use this method when the selection is single.
 Just after executing this method the command will be automatically deleted.
 <br>The value is sent to the <tt>CATOtherDocumentAgent</tt> which has instantiated
 this command.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iValue</tt>
   <dd>  Element selected.</dd>
</dl>
</dl>
</dl>
 <h2>Data Members</h2> <br>
<a name="_fromCommand"></a> <dt> o <b>_fromCommand</b>
<pre>
  protected CATOtherDocumentAgent * _fromCommand</dt>
</pre>
<dl>
  <dd>
 The agent which has instantiated this command.
</dl>
<hr>
 This object is included in the file: <b>CATMultiDocumentCommand.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDialogEngine</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

