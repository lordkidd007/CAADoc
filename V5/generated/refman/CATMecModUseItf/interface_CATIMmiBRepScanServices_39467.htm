<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMecModUseItf Interface CATIMmiBRepScanServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMecModUseItf.htm" href="../CATMecModUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMecModUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIMmiBRepScanServices"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMecModUseItf Interface CATIMmiBRepScanServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMmiBRepScanServices_39467','CATIMmiBRepScanServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 interface <b>CATIMmiBRepScanServices</b>
</p>
<p>
<b><i>    Class providing services which allow the traversal of a part through selecting objects.</i></b><br>

  Use CATMmiUseServicesFactory::CreateMmiBRepScanServices to get the services component.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#FindDualBRepAccess(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATIMmiUseBRepAccess_var&amp;,CATIMmiUseBRepAccess_var&amp;)"><b>FindDualBRepAccess</b></a>(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATIMmiUseBRepAccess_var&amp;,CATIMmiUseBRepAccess_var&amp;)
<dd>     Retrieves the corresponding selecting object in the copied or reference feature.
 <dt> o 
    <a href="#ListAncestorsSinceGenerationFeature(CATIMmiUseBRepAccess_var&amp;,CATListValCATIMmiMechanicalFeature_var&amp;)"><b>ListAncestorsSinceGenerationFeature</b></a>(CATIMmiUseBRepAccess_var&amp;,CATListValCATIMmiMechanicalFeature_var&amp;)
<dd>     Retrieves all the ancestors since the generation feature from a selecting object.
 <dt> o 
    <a href="#ListFeaturesForGeometry(CATIMmiUseBRepAccess_var&amp;,CATListValCATIMmiMechanicalFeature_var&amp;)"><b>ListFeaturesForGeometry</b></a>(CATIMmiUseBRepAccess_var&amp;,CATListValCATIMmiMechanicalFeature_var&amp;)
<dd>     Retrieves from a selecting object all the ancestors since the generation feature that modified the geometry.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="FindDualBRepAccess"></a><a name="FindDualBRepAccess(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATIMmiUseBRepAccess_var&amp;,CATIMmiUseBRepAccess_var&amp;)"></a> <dt> o <b>FindDualBRepAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FindDualBRepAccess</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iRefFeature</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iCopyFeature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIMmiUseBRepAccess_var','CATIMmiUseBRepAccess_var&amp;')</script> <td><tt>ioRefBRepAccess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIMmiUseBRepAccess_var','CATIMmiUseBRepAccess_var&amp;')</script> <td><tt>ioCopyBRepAccess</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
    Retrieves the corresponding selecting object in the copied or reference feature.<br>
  <br>
  <b>Role</b>: This method retrieves the corresponding selecting object in the copied/reference feature, 
  when given a selecting object in the reference/copied feature respectively.<br>
  It succeeds in finding the dual selecting object only in the <b><tt>Paste As Result With Link</tt></b> 
  and <b><tt>Paste As Result</tt></b> cases. This service does not work in the case of <b><tt>Paste As Spec</tt></b>.<br>
  <br>
  The reference feature should be copied using <tt>CATIMmiUseCreateImport</tt>.<br>
  Subsequently, the method presented here may be called right after the copy-paste operation.<br>
  Note:<br>
  <ul>          
   <li>The results are not guaranteed if an action on the model such as <b><tt>Save</tt></b> has been done 
       before calling the method presented here.</li>
  </ul>
  <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRefSpecObject</tt>
   <dd>     The reference feature.<br>
     This is a mechanical feature, which can be a surfacic element (curve, line) or a sketch, or a solid body 
     (PartBody, Body).<br>
   Note:<br>
   <ul>
     <li>This parameter can be NULL in the case of a <b><tt>Paste As Result with Link</tt></b>, 
         in which case the reference feature is internally retrieved by using <tt>iCopySpecObject</tt>.</li>
     <li>This parameter must not be omitted in the case of <b><tt>Paste As Result</tt></b>.</li>
   </ul>
  <br>
  <br>
  </dd>
    <dt><tt> iCopySpecObject</tt>
   <dd>     The copied feature.<br>
     This feature results from a copy-paste operation (except <b><tt>Paste As Spec</tt></b>)
     of the reference feature <tt>iRefSpecObject</tt>.<br>
   Note:<br>
   <ul>
     <li>This parameter must not be NULL.</li>
   </ul>
  <br>
  <br>
  </dd>
    <dt><tt> ioRefBRepAccess</tt>
   <dd>     The input or output selecting object.<br>
      <ul> 
        <li>When this parameter is NULL, it is used as the output corresponding to the input in the copied feature: 
            <tt>ioCopyBRepAccess</tt>.</li>
        <li>When this parameter is not NULL, it is used as an input in order to get the corresponding output 
            in the copy: <tt>ioCopyBRepAccess</tt>.</li>
      </ul>
   Note:<br>
   <ul>
     <li>When this parameter is NULL, <tt>ioCopyBRepAccess</tt> must not be NULL.</li>
     <li>This parameter must not be NULL when <tt>ioCopyBRepAccess</tt> is NULL.</li>
   </ul>
  <br>
  <br> 
  </dd>
    <dt><tt> ioCopyBRepAccess</tt>
   <dd>     The input or output selecting object.<br>
     <ul> 
       <li>When this parameter is NULL, it is used as the output corresponding to the input in the reference feature: 
           <tt>ioRefBRepAccess</tt>.</li>
       <li>When this parameter is not NULL, it is used as an input in order to get the corresponding output 
           in the reference: <tt>ioRefBRepAccess</tt>.</li>
     </ul>
   Note:<br>
   <ul>
     <li>When this parameter is NULL, <tt>ioRefBRepAccess</tt> must not be NULL.</li>
     <li>This parameter must not be NULL when <tt>ioRefBRepAccess</tt> is NULL.</li>
   </ul>
  <br>
  <br>                 
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <ul>
      <li>S_OK if the interface <tt>CATIMmiUseBRepAccess</tt> of the dual selecting object has been found.</li>
      <li>E_FAIL if the interface to the dual selecting object has not been found.</li>
      <li>E_INVALIDARG if <tt>iCopySpecObject</tt> is NULL.</li>
      <li>E_INVALIDARG if <tt>iRefSpecObject</tt> is NULL and no reference feature could be retrieved 
          by <tt>iCopySpecObject</tt> (e.g. in the case of a <tt>Paste As Result</tt>).</li>
      <li>E_INVALIDARG if <tt>iRefSpecObject</tt> is not NULL and the feature does not match the one referred 
          to by <tt>iCopySpecObject</tt>.</li>
      <li>E_INVALIDARG if <tt>ioRefBRepAccess</tt> is NULL and <tt>ioCopyBRepAccess</tt> is NULL too.</li>
      <li>E_INVALIDARG if <tt>ioRefBRepAccess</tt> is not NULL and <tt>ioCopyBRepAccess</tt> is not NULL either.</li>
      <li>E_UNEXPECTED in case an unexpected internal error occurs.
    </ul>
</dl>
</dl>
<a name="ListAncestorsSinceGenerationFeature"></a><a name="ListAncestorsSinceGenerationFeature(CATIMmiUseBRepAccess_var&amp;,CATListValCATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>ListAncestorsSinceGenerationFeature</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListAncestorsSinceGenerationFeature</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiUseBRepAccess_var','CATIMmiUseBRepAccess_var&amp;')</script> <td><tt>iBRepAccess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIMmiMechanicalFeature_var','CATListValCATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ioAncestorsFeatures</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
    Retrieves all the ancestors since the generation feature from a selecting object.<br>
  <br>
  <b>Role</b>: This method retrieves all the ancestors features since the generation feature from a selecting object.<br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBRepAccess</tt>
   <dd>     The selecting object.<br>
  <br>
  </dd>
    <dt><tt> ioAncestorsFeatures</tt>
   <dd>     The method appends the list of ancestors features of the selecting object to the input list.<br>
     The features are ordered from the most recent feature to the oldest feature.<br> 
  <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the list of ancestors features of the selecting object has been found.</li>
           <li>E_FAIL if the list of ancestors features of the selecting object has not been found.</li>
           <li>E_INVALIDARG  if <tt>iBRepAccess</tt> is NULL.</li>
         </ul>
</dl>
</dl>
<a name="ListFeaturesForGeometry"></a><a name="ListFeaturesForGeometry(CATIMmiUseBRepAccess_var&amp;,CATListValCATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>ListFeaturesForGeometry</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListFeaturesForGeometry</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiUseBRepAccess_var','CATIMmiUseBRepAccess_var&amp;')</script> <td><tt>iBRepAccess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIMmiMechanicalFeature_var','CATListValCATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ioAncestorsFeatures</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Retrieves from a selecting object all the ancestors since the generation feature that modified the geometry.<br>
  <br>
  <b>Role</b>: This method retrieves from a selecting object all the ancestors features since the generation 
                feature that modified the geometry of the selecting object.<br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBRepAccess</tt>
   <dd>     The selecting object.<br>
  <br>
  </dd>
    <dt><tt> ioAncestorsFeatures</tt>
   <dd>     The method appends the list of ancestors features of the selecting object to the input list.<br>
     The features are ordered from the most recent feature to the oldest feature.<br> 
  <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the list of ancestors features of the selecting object has been found.</li>
           <li>E_FAIL if the list of ancestors features of the selecting object has not been found.</li>
           <li>E_INVALIDARG  if <tt>iBRepAccess</tt> is NULL.</li>
         </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMmiBRepScanServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

