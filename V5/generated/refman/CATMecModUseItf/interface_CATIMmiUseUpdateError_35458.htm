<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMecModUseItf Interface CATIMmiUseUpdateError</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMecModUseItf.htm" href="../CATMecModUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMecModUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIMmiUseUpdateError"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMecModUseItf Interface CATIMmiUseUpdateError</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMmiUseUpdateError_35458','CATIMmiUseUpdateError','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMmiUseUpdateError</b>
</p>
<p>
<b><i> Interface to manage update error associated with mechanical features.</i></b><br>

 <b>Role</b>: This interface allows users to retrieve an update error associated 
 with a mechanical feature. A feature has an update error when its build has failed. 
 <p>To know if the feature has an update error, the first method to use is the 
 <script type="text/javascript"> activateLinkAnchor('','HasAnUpdateError','HasAnUpdateError') </script> method. This method is always available.  If there is an error, then you can use the 
<script type="text/javascript"> activateLinkAnchor('','GetFullDiagnostic','GetFullDiagnostic') </script> method to get more details on the error. </p>

</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAssociatedSickFeatures(CATLISTV(CATIMmiMechanicalFeature_var)&amp;)"><b>GetAssociatedSickFeatures</b></a>(CATLISTV(CATIMmiMechanicalFeature_var)&amp;)
<dd>  Retrieves the list of sick features associated with the update error.
 <dt> o 
    <a href="#GetDiagnostic(CATUnicodeString&amp;)"><b>GetDiagnostic</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the update error diagnosis.
 <dt> o 
    <a href="#GetFullDiagnostic(CATUnicodeString&amp;,int)"><b>GetFullDiagnostic</b></a>(CATUnicodeString&amp;,int)
<dd>  Retrieves all the chained sick features diagnosis.
 <dt> o 
    <a href="#HasAnUpdateError()"><b>HasAnUpdateError</b></a>()
<dd>  Returns a value indicating whether an update error is associated with the current feature.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAssociatedSickFeatures"></a><a name="GetAssociatedSickFeatures(CATLISTV(CATIMmiMechanicalFeature_var)&amp;)"></a> <dt> o <b>GetAssociatedSickFeatures</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAssociatedSickFeatures</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATIMmiMechanicalFeature_var)','CATLISTV(CATIMmiMechanicalFeature_var)&amp;')</script> <td><tt>oSickFeatures</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of sick features associated with the update error.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSickFeatures</tt>
   <dd>   The list of sick features

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>: 
   <ul><li><b>S_OK</b> if the features have been successfully retried.
   <li><b>S_FALSE</b> otherwise.</ul>
</dl>
</dl>
<a name="GetDiagnostic"></a><a name="GetDiagnostic(CATUnicodeString&amp;)"></a> <dt> o <b>GetDiagnostic</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDiagnostic</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oString</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the update error diagnosis.
</dl>
<a name="GetFullDiagnostic"></a><a name="GetFullDiagnostic(CATUnicodeString&amp;,int)"></a> <dt> o <b>GetFullDiagnostic</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFullDiagnostic</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oString</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndentation</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves all the chained sick features diagnosis.
 <br><b>Role:</b> On an error it is possible to associate a set of features. Those features
 are called "sick" features. They are <i>chained</i> because an error has sick features, which 
 them-self can have an update error with sick features and so one. 
 This method makes the 
 concatenation of all the sick features diagnoses from the current feature. 
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oString</tt>
   <dd>   The concatenation of diagnoses.

 </dd>
    <dt><tt> iIndentation</tt>
   <dd>   The count of space before the first diagnosis string.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>: 
   <ul><li><b>S_OK</b> if the diagnostic has been successfully retried.
   <li><b>E_FAIL</b> otherwise.</ul>
</dl>
</dl>
<a name="HasAnUpdateError"></a><a name="HasAnUpdateError()"></a> <dt> o <b>HasAnUpdateError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>HasAnUpdateError</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns a value indicating whether an update error is associated with the current feature.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>: 
   <ul><li><b>S_OK</b> an update error exists on the current feature.
   <li><b>S_FALSE</b> no update error exists on the current feature.</ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMmiUseUpdateError.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

