<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Interface CATIPrtFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../PartInterfaces.htm">This Framework</a>  <a href="interface_CATIPrtCfgAddin_43177.htm">Previous</a>  <a href="interface_CATIPrtLimit_28974.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>PartInterfaces Interface CATIPrtFactory</h1>
<pre>
CATIPrtFactory
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPrtFactory</b>
</p>
<p>
<b><i> Interface to create all types of Mechanical Design feature.</i></b><br>

 <b>Role</b>: The CATIPrtfactory role is to build from scratch features that
 will be used within the design process of parts.
 In most cases, features are created from a factory with a minimum number 
 of parameters. Other feature parameters will be set by using 
 methods offered by the feature itself.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateAffinity(CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;)"><b>CreateAffinity</b></a>(CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;)
<dd>  Creates and returns an Affinity feature.
 <dt> o 
    <a href="#CreateAlign(CATISpecObject_var,CATPrtSplitType)"><b>CreateAlign</b></a>(CATISpecObject_var,CATPrtSplitType)
<dd>  Creates and returns a replace face feature.
 <dt> o 
    <a href="#CreateAxisToAxis(CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;)"><b>CreateAxisToAxis</b></a>(CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;)
<dd>  Creates and returns an AxisToAxis transformation feature.
 <dt> o 
    <a href="#CreateChamfer(CATLISTV(CATISpecObject_var)*,CATPrtChamferPropagation,CATPrtChamferMode,double,double,CATPrtChamferReferenceFace,CATISpecObject_var,int)"><b>CreateChamfer</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtChamferPropagation,CATPrtChamferMode,double,double,CATPrtChamferReferenceFace,CATISpecObject_var,int)
<dd>  Creates and returns a chamfer feature.
 <dt> o 
    <a href="#CreateCircPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean)"><b>CreateCircPatt</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean)
<dd>  Creates and returns a new solid circular pattern.
 <dt> o 
    <a href="#CreateCircPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean,int)"><b>CreateCircPatt</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean,int)
<dd>  
 <dt> o 
    <a href="#CreateClose(CATISpecObject_var)"><b>CreateClose</b></a>(CATISpecObject_var)
<dd>  
 <dt> o 
    <a href="#CreateCloseSurface(CATISpecObject_var)"><b>CreateCloseSurface</b></a>(CATISpecObject_var)
<dd>  Creates and returns a close feature.
 <dt> o 
    <a href="#CreateDraft(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int)"><b>CreateDraft</b></a>(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int)
<dd>  Creates and returns a new draft.
 <dt> o 
    <a href="#CreateFillet(CATIMfBRepFeature_var,CATIMfBRepFeature_var,CATIMfBRepFeature_var,CATISpecObject_var,int)"><b>CreateFillet</b></a>(CATIMfBRepFeature_var,CATIMfBRepFeature_var,CATIMfBRepFeature_var,CATISpecObject_var,int)
<dd>  
 <dt> o 
    <a href="#CreateFillet(CATIMfBRepFeature_var,CATIMfBRepFeature_var,double,CATISpecObject_var,int)"><b>CreateFillet</b></a>(CATIMfBRepFeature_var,CATIMfBRepFeature_var,double,CATISpecObject_var,int)
<dd>  
 <dt> o 
    <a href="#CreateFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var,int)"><b>CreateFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var,int)
<dd>  
 <dt> o 
    <a href="#CreateFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var,int)"><b>CreateFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var,int)
<dd>  
 <dt> o 
    <a href="#CreateFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var,int)"><b>CreateFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var,int)
<dd>  
 <dt> o 
    <a href="#CreateFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var,int)"><b>CreateFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var,int)
<dd>  
 <dt> o 
    <a href="#CreateGroove(CATISpecObject_var&amp;)"><b>CreateGroove</b></a>(CATISpecObject_var&amp;)
<dd>  Creates a new groove.
 <dt> o 
    <a href="#CreateHole(CATISpecObject_var,CATISpecObject_var)"><b>CreateHole</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates and returns a new hole feature.
 <dt> o 
    <a href="#CreateHole(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,int)"><b>CreateHole</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,int)
<dd>  Creates and returns a new hole feature.
 <dt> o 
    <a href="#CreateHole(CATMathPoint,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"><b>CreateHole</b></a>(CATMathPoint,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)
<dd>  Creates and returns a new hole feature.
 <dt> o 
    <a href="#CreateHole(CATMathPoint,CATISpecObject_var,CATISpecObject_var,int)"><b>CreateHole</b></a>(CATMathPoint,CATISpecObject_var,CATISpecObject_var,int)
<dd>  Creates and returns a new hole feature.
 <dt> o 
    <a href="#CreateLoft()"><b>CreateLoft</b></a>()
<dd>  Creates and returns a new loft feature.
 <dt> o 
    <a href="#CreateMirror(CATISpecObject_var)"><b>CreateMirror</b></a>(CATISpecObject_var)
<dd>  Creates and returns a new mirror.
 <dt> o 
    <a href="#CreateOffset(CATISpecObject_var,CATPrtOffsetSens,double,double)"><b>CreateOffset</b></a>(CATISpecObject_var,CATPrtOffsetSens,double,double)
<dd>  
 <dt> o 
    <a href="#CreatePad(CATISpecObject_var&amp;)"><b>CreatePad</b></a>(CATISpecObject_var&amp;)
<dd>  Creates a new pad.
 <dt> o 
    <a href="#CreatePocket(CATISpecObject_var&amp;)"><b>CreatePocket</b></a>(CATISpecObject_var&amp;)
<dd>  Creates a new pocket.
 <dt> o 
    <a href="#CreateRectPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double)"><b>CreateRectPatt</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double)
<dd>  Creates and returns a new solid rectangular pattern.
 <dt> o 
    <a href="#CreateRectPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double,int)"><b>CreateRectPatt</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double,int)
<dd>  
 <dt> o 
    <a href="#CreateRemovedLoft()"><b>CreateRemovedLoft</b></a>()
<dd>  Creates and returns a new removed loft feature.
 <dt> o 
    <a href="#CreateRib()"><b>CreateRib</b></a>()
<dd>  Creates and returns a new rib feature.
 <dt> o 
    <a href="#CreateRib(CATISpecObject_var&amp;,CATISpecObject_var&amp;)"><b>CreateRib</b></a>(CATISpecObject_var&amp;,CATISpecObject_var&amp;)
<dd>  Creates and returns a new rib feature.
 <dt> o 
    <a href="#CreateRotate(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"><b>CreateRotate</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)
<dd>  Creates and returns a Rotate feature.
 <dt> o 
    <a href="#CreateScaling(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"><b>CreateScaling</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)
<dd>  Creates and returns a Scaling feature.
 <dt> o 
    <a href="#CreateSewing(CATISpecObject_var,CATPrtSplitType)"><b>CreateSewing</b></a>(CATISpecObject_var,CATPrtSplitType)
<dd>  Creates and returns a sewing feature.
 <dt> o 
    <a href="#CreateShaft(CATISpecObject_var&amp;)"><b>CreateShaft</b></a>(CATISpecObject_var&amp;)
<dd>  Creates a new shaft.
 <dt> o 
    <a href="#CreateShell(CATLISTV(CATISpecObject_var)*,double,double)"><b>CreateShell</b></a>(CATLISTV(CATISpecObject_var)*,double,double)
<dd>  Creates and returns a shell feature.
 <dt> o 
    <a href="#CreateSlot()"><b>CreateSlot</b></a>()
<dd>  Creates and returns a new slot feature.
 <dt> o 
    <a href="#CreateSlot(CATISpecObject_var&amp;,CATISpecObject_var&amp;)"><b>CreateSlot</b></a>(CATISpecObject_var&amp;,CATISpecObject_var&amp;)
<dd>  Creates and returns a new slot feature.
 <dt> o 
    <a href="#CreateSolidFillet(CATIMfBRep_var,CATIMfBRep_var,CATIMfBRep_var,CATISpecObject_var)"><b>CreateSolidFillet</b></a>(CATIMfBRep_var,CATIMfBRep_var,CATIMfBRep_var,CATISpecObject_var)
<dd>  Creates and returns a tritangent fillet feature.
 <dt> o 
    <a href="#CreateSolidFillet(CATIMfBRep_var,CATIMfBRep_var,double,CATISpecObject_var)"><b>CreateSolidFillet</b></a>(CATIMfBRep_var,CATIMfBRep_var,double,CATISpecObject_var)
<dd>  Creates and returns a solid face fillet feature.
 <dt> o 
    <a href="#CreateSolidFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var)"><b>CreateSolidFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var)
<dd>  Creates and returns a solid variable edge fillet feature.
 <dt> o 
    <a href="#CreateSolidFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)"><b>CreateSolidFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)
<dd>  Creates and returns a variable solid edge fillet feature with Keep Edge.
 <dt> o 
    <a href="#CreateSolidFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var)"><b>CreateSolidFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var)
<dd>  Creates and returns a solid constant edge fillet feature.
 <dt> o 
    <a href="#CreateSolidFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)"><b>CreateSolidFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)
<dd>  Creates and returns a solid constant edge fillet feature with Keep Edge.
 <dt> o 
    <a href="#CreateSolidOffset(CATISpecObject_var,CATPrtOffsetSens,double,double)"><b>CreateSolidOffset</b></a>(CATISpecObject_var,CATPrtOffsetSens,double,double)
<dd>  Creates and returns an offset feature.
 <dt> o 
    <a href="#CreateSolidSplit(CATISpecObject_var,CATPrtSplitType)"><b>CreateSolidSplit</b></a>(CATISpecObject_var,CATPrtSplitType)
<dd>  Creates and returns a split feature.
 <dt> o 
    <a href="#CreateSplit(CATISpecObject_var,CATPrtSplitType)"><b>CreateSplit</b></a>(CATISpecObject_var,CATPrtSplitType)
<dd>  
 <dt> o 
    <a href="#CreateStiffener(CATISpecObject_var&amp;)"><b>CreateStiffener</b></a>(CATISpecObject_var&amp;)
<dd>  Creates a new stiffener.
 <dt> o 
    <a href="#CreateSurfaceFillet(CATIMfBRep_var,CATIMfBRep_var,CATIMfBRep_var,CATISpecObject_var)"><b>CreateSurfaceFillet</b></a>(CATIMfBRep_var,CATIMfBRep_var,CATIMfBRep_var,CATISpecObject_var)
<dd>  Creates and returns a tritangent fillet feature.
 <dt> o 
    <a href="#CreateSurfaceFillet(CATIMfBRep_var,CATIMfBRep_var,double,CATISpecObject_var)"><b>CreateSurfaceFillet</b></a>(CATIMfBRep_var,CATIMfBRep_var,double,CATISpecObject_var)
<dd>  Creates and returns a surface face fillet feature.
 <dt> o 
    <a href="#CreateSurfaceFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var)"><b>CreateSurfaceFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var)
<dd>  Creates and returns a surface variable edge fillet feature.
 <dt> o 
    <a href="#CreateSurfaceFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)"><b>CreateSurfaceFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)
<dd>  Creates and returns a variable surfacic edge fillet feature with Keep Edge.
 <dt> o 
    <a href="#CreateSurfaceFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var)"><b>CreateSurfaceFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var)
<dd>  Creates and returns a surface constant edge fillet feature.
 <dt> o 
    <a href="#CreateSurfaceFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)"><b>CreateSurfaceFillet</b></a>(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)
<dd>  Creates and returns a surface constant edge fillet feature with Keep Edge.
 <dt> o 
    <a href="#CreateSurfacicCircPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean)"><b>CreateSurfacicCircPatt</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean)
<dd>  Creates and returns a new surfacic or volumic circular pattern.
 <dt> o 
    <a href="#CreateSurfacicRectPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double)"><b>CreateSurfacicRectPatt</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double)
<dd>  Creates and returns a new surfacic or volumic rectangular pattern.
 <dt> o 
    <a href="#CreateSurfacicUserPatt(CATISpecObject_var,int,CATLISTV(CATISpecObject_var),CATISpecObject_var)"><b>CreateSurfacicUserPatt</b></a>(CATISpecObject_var,int,CATLISTV(CATISpecObject_var),CATISpecObject_var)
<dd>  Creates and returns a new surfacic or volumic user pattern.
 <dt> o 
    <a href="#CreateSymmetry(CATISpecObject_var,CATISpecObject_var)"><b>CreateSymmetry</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates and returns a Symmetry feature.
 <dt> o 
    <a href="#CreateThickness(CATLISTV(CATISpecObject_var)*,double)"><b>CreateThickness</b></a>(CATLISTV(CATISpecObject_var)*,double)
<dd>  Creates and returns a thickness feature.
 <dt> o 
    <a href="#CreateThread()"><b>CreateThread</b></a>()
<dd>  Creates and returns a new thread feature.
 <dt> o 
    <a href="#CreateThread(CATISpecObject_var,CATISpecObject_var)"><b>CreateThread</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates and returns a thread feature.
 <dt> o 
    <a href="#CreateTranslate(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)"><b>CreateTranslate</b></a>(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)
<dd>  Creates and returns a Translate feature.
 <dt> o 
    <a href="#CreateUserPatt(CATISpecObject_var,int,CATLISTV(CATISpecObject_var),CATISpecObject_var)"><b>CreateUserPatt</b></a>(CATISpecObject_var,int,CATLISTV(CATISpecObject_var),CATISpecObject_var)
<dd>  Creates and returns a new solid user pattern.
 <dt> o 
    <a href="#CreateVolumicCloseSurface(CATISpecObject_var)"><b>CreateVolumicCloseSurface</b></a>(CATISpecObject_var)
<dd>  Creates and returns a volumic close feature.
 <dt> o 
    <a href="#CreateVolumicDraft(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int,CATISpecObject_var)"><b>CreateVolumicDraft</b></a>(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int,CATISpecObject_var)
<dd>  Creates and returns a volumic draft feature.
 <dt> o 
    <a href="#CreateVolumicDraft(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int,int,CATISpecObject_var)"><b>CreateVolumicDraft</b></a>(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int,int,CATISpecObject_var)
<dd>  
 <dt> o 
    <a href="#CreateVolumicDraftAngle()"><b>CreateVolumicDraftAngle</b></a>()
<dd>   Creates and returns a Draft feature in volumic context.
 <dt> o 
    <a href="#CreateVolumicDraftAngle(int&amp;)"><b>CreateVolumicDraftAngle</b></a>(int&amp;)
<dd>  
 <dt> o 
    <a href="#CreateVolumicOffset(CATISpecObject_var,CATPrtOffsetSens,double,double)"><b>CreateVolumicOffset</b></a>(CATISpecObject_var,CATPrtOffsetSens,double,double)
<dd>  Creates and returns a volumic offset feature.
 <dt> o 
    <a href="#CreateVolumicSewing(int&amp;,CATISpecObject_var&amp;,CATISpecObject_var,CATPrtSplitType)"><b>CreateVolumicSewing</b></a>(int&amp;,CATISpecObject_var&amp;,CATISpecObject_var,CATPrtSplitType)
<dd>  Creates and returns a volumic sewing feature.
 <dt> o 
    <a href="#CreateVolumicShell(CATISpecObject_var,CATLISTV(CATISpecObject_var)*,double,double)"><b>CreateVolumicShell</b></a>(CATISpecObject_var,CATLISTV(CATISpecObject_var)*,double,double)
<dd>  Creates and returns a volumic shell feature.
 <dt> o 
    <a href="#CreateVolumicShell(int,CATISpecObject_var,CATLISTV(CATISpecObject_var)*,double,double)"><b>CreateVolumicShell</b></a>(int,CATISpecObject_var,CATLISTV(CATISpecObject_var)*,double,double)
<dd>  
 <dt> o 
    <a href="#CreateVolumicThickness(CATLISTV(CATISpecObject_var)*,double,CATISpecObject_var)"><b>CreateVolumicThickness</b></a>(CATLISTV(CATISpecObject_var)*,double,CATISpecObject_var)
<dd>  Creates and returns a thickness feature.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateAffinity"></a><a name="CreateAffinity(CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;)"></a> <dt> o <b>CreateAffinity</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateAffinity</b>(<td> const CATISpecObject_var&amp; <td><tt>ihElemToTransfor</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>ihAxisOrigin</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>ihAxisPlane</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>ihAxisFirstDirection</tt>,<tr><td></td><td> const CATICkeParm_var&amp; <td><tt>ihRatioX</tt>,<tr><td></td><td> const CATICkeParm_var&amp; <td><tt>ihRatioY</tt>,<tr><td></td><td> const CATICkeParm_var&amp; <td><tt>ihRatioZ</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns an Affinity feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihElemToTransfor</tt>
   <dd>  The object on which Affinity transformation will be applied.
 </dd>
    <dt><tt> ihAxisOrigin</tt>
   <dd>  Origin for the affinity.
 </dd>
    <dt><tt> ihAxisPlane</tt>
   <dd>  Plane for the affinity.
 </dd>
    <dt><tt> ihAxisFirstDirection</tt>
   <dd>  Direction for the affinity.
 </dd>
    <dt><tt> ihRatioX</tt>
   <dd>  XRatio Value for the affinity.
 </dd>
    <dt><tt> ihRatioY</tt>
   <dd>  YRatio Value for the affinity.
 </dd>
    <dt><tt> ihRatioZ</tt>
   <dd>  ZRatio Value for the affinity.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Affinity feature.
</dl>
</dl>
<a name="CreateAlign"></a><a name="CreateAlign(CATISpecObject_var,CATPrtSplitType)"></a> <dt> o <b>CreateAlign</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateAlign</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihAlignPlane</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtSplitType_46968.htm">CATPrtSplitType</a> <td><tt>iAlignType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a replace face feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihAlignPlane</tt>
   <dd>	The surfacic feature to be used to perform the replace operation.
 </dd>
    <dt><tt> iAlignType</tt>
   <dd>	Represents the side to be kept after the replace operation.
	<br><b>Legal values</b>: <tt>iAlignType</tt> equals PositiveSide 
	or NegativeSide.
	The PositiveSide value refers to the same orientation as the replacing
	element normal vector.
	The NegativeSide value refers to the opposite orientation as the 
      replacing element normal vector.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the created replace face feature.
</dl>
</dl>
<a name="CreateAxisToAxis"></a><a name="CreateAxisToAxis(CATISpecObject_var&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>CreateAxisToAxis</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateAxisToAxis</b>(<td> const CATISpecObject_var&amp; <td><tt>ihToTransform</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>ihReferenceAxis</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>ihTargetAxis</tt>)= 0  </table></dt>
<dl>
  <dd>
 Creates and returns an AxisToAxis transformation feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihToTransform</tt>
   <dd>	The object on which AxisToAxis transformation will be applied.
 </dd>
    <dt><tt> ihReferenceAxis</tt>
   <dd>	The refrence axis.
 </dd>
    <dt><tt> ihTargetAxis</tt>
   <dd> 	The target axis.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created AxisToAxis feature.
</dl>
</dl>
<a name="CreateChamfer"></a><a name="CreateChamfer(CATLISTV(CATISpecObject_var)*,CATPrtChamferPropagation,CATPrtChamferMode,double,double,CATPrtChamferReferenceFace,CATISpecObject_var,int)"></a> <dt> o <b>CreateChamfer</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateChamfer</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtChamferPropagation_119438.htm">CATPrtChamferPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtChamferMode_57703.htm">CATPrtChamferMode</a> <td><tt>iParameterMode</tt>,<tr><td></td><td> const double <td><tt>iLength1</tt>,<tr><td></td><td> const double <td><tt>iLength2</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtChamferReferenceFace_134224.htm">CATPrtChamferReferenceFace</a> <td><tt>iReferenceFace</tt><td><tt>= NO_REVERSE</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const int <td><tt>iContext</tt><td><tt>= -1</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a chamfer feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges or faces to be chamfered.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd> The propagation mode specifies the edges taken into account when chamfering.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>: CATIA continues chamfering beyond the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtChamferPropagation propagation mode can be set
 to <tt>_TANGENCY</tt> or <tt>_MINIMAL</tt>.
 </dd>
    <dt><tt> iParameterMode</tt>
   <dd>  The chamfer parameter mode specifies both parameters required 
 to define the chamfer: two lengthes (Length1/Length2) or 
 a length and an angle (Length1/Angle).
 <br><b>Legal values</b>: The CATPrtChamferMode parameter mode can be set
 to <tt>LENGTH</tt> or <tt>LENGTH_ANGLE</tt>.
 </dd>
    <dt><tt> iLength1</tt>
   <dd>  This is the first length value if the chamfer is defined with two lengthes,
 or if the chamfer is defined with a length and an angle.
 <br><b>Legal values</b>: The first length value must be greater 
 than 0 but not equal to 0.
 </dd>
    <dt><tt> iLength2</tt>
   <dd>  This is the second length value if the chamfer is defined with two lengthes,
 or the angle value if the chamfer is defined with a length and an angle.
 <br><b>Legal values</b>: The second length value must be greater 
 than 0 but not equal to 0 and the angle value must be greater than 0 
 but not equal to 0 and smaller than 90 but not equal to 90.
 </dd>
    <dt><tt> iReferenceFace</tt>
   <dd>  The first length, or the single length, depending on the way the
 chamfer is defined, is measured on the reference face from the
 edge to be chamfered. 
 <br>This reference face is either the face selected or the face
 determined by CATIA if the edge to be chamfered was selected.
 <br>The chamfer orientation defines whether to keep the face selected or determined 
 by CATIA as the chamfer reference face.
 <br><b>Legal values</b>: The CATPrtChamferReferenceFace orientation can be set
 to <tt>NO_REVERSE</tt> (the chamfer reference face is the face selected or determined
 by CATIA) or <tt>REVERSE</tt> (the chamfer reference face is the other face).
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
    <dt><tt> iContext</tt>
   <dd>  Specifies the chamfer context. Set to 5 for Functional Chamfer.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created chamfer feature.
</dl>
</dl>
<a name="CreateCircPatt"></a><a name="CreateCircPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean)"></a> <dt> o <b>CreateCircPatt</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateCircPatt</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihMotif</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iDir</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iPto</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iSensa</tt>,<tr><td></td><td> const int <td><tt>iNbr</tt>,<tr><td></td><td> const int <td><tt>iNba</tt>,<tr><td></td><td> const double <td><tt>iStepr</tt>,<tr><td></td><td> const double <td><tt>iStepa</tt>,<tr><td></td><td> const int <td><tt>iNr</tt>,<tr><td></td><td> const int <td><tt>iNa</tt>,<tr><td></td><td> const double <td><tt>iRotationAngle</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iInstRot</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iCompleteCrown</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new solid circular pattern.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihMotif</tt>
   <dd>   The feature to be duplicated with the circular pattern.
 </dd>
    <dt><tt> iDir</tt>
   <dd>   The line or linear edge that specifies the axis around which duplications
   will be rotated relative to each other.
 </dd>
    <dt><tt> iPto</tt>
   <dd>   The point or vertex that specifies the pattern rotation center.
 </dd>
    <dt><tt> iSensa</tt>
   <dd>   The boolean flag indicating the natural orientation of 
   <tt>iDir</tt> used to orientate the pattern operation.
   A value of true indicates that <tt>ihMotif</tt> are duplicated in the 
   direction of the natural orientation of <tt>iDir</tt>.
 </dd>
    <dt><tt> iNbr</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated along
   pattern radial direction.
   <br><b>Legal values</b>: <tt>iNbr</tt> must be greater or equal than 1.
 </dd>
    <dt><tt> iNba</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated along
   pattern angular direction.
   <br><b>Legal values</b>: <tt>iNba</tt> must be greater or equal than 1.
 </dd>
    <dt><tt> iStepr</tt>
   <dd>   The distance that will separate two consecutive duplications in the pattern
   along its radial direction.
   <br><b>Legal values</b>: <tt>iStepr</tt> must be greater than 0 but not equal to 0.
 </dd>
    <dt><tt> iStepa</tt>
   <dd>   The angle that will separate two consecutive duplications in the pattern
   along its angular direction.
   <br><b>Legal values</b>: <tt>iStepa</tt> must be greater than 0 but not equal to 0.
 </dd>
    <dt><tt> iNr</tt>
   <dd>   Specifies the position of the original feature <tt>ihMotif</tt>
   among its duplications along the radial direction.
 </dd>
    <dt><tt> iNa</tt>
   <dd>   Specifies the position of the original feature <tt>ihMotif</tt>
   among its duplications along the angular direction.
 </dd>
    <dt><tt> iRotationAngle</tt>
   <dd>   Do not use, iRotationAngle must be already equal to 0.
 </dd>
    <dt><tt> iInstRot</tt>
   <dd>   The boolean flag that specifies:
   <br>True to keep the same orientation of <tt>ihMotif</tt>
   for its duplications.
   <br>False to orientate the duplications of <tt>ihMotif</tt> same
   according to the radial direction.
 </dd>
    <dt><tt> iCompleteCrown</tt>
   <dd>   The boolean flag specifies the mode of angular distribution.
   True indicates that the angular step will be equal to 360 degrees <tt>iNba</tt>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created circular pattern.
</dl>
</dl>
<a name="CreateCircPatt"></a><a name="CreateCircPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean,int)"></a> <dt> o <b>CreateCircPatt</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateCircPatt</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihMotif</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iDir</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iPto</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iSensa</tt>,<tr><td></td><td> const int <td><tt>iNbr</tt>,<tr><td></td><td> const int <td><tt>iNba</tt>,<tr><td></td><td> const double <td><tt>iStepr</tt>,<tr><td></td><td> const double <td><tt>iStepa</tt>,<tr><td></td><td> const int <td><tt>iNr</tt>,<tr><td></td><td> const int <td><tt>iNa</tt>,<tr><td></td><td> const double <td><tt>iRotationAngle</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iInstRot</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iCompleteCrown</tt>,<tr><td></td><td> const int <td><tt>iContext</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateCircPatt(const CATISpecObject_var ihMotif,
                                          const CATISpecObject_var iDir,
                                          const CATISpecObject_var iPto,
                                          const CATBoolean iSensa, 
                                          const int iNbr,
                                          const int iNba,
                                          const double iStepr,
                                          const double iStepa,
                                          const int iNr,
                                          const int iNa,
                                          const double iRotationAngle,
                                          const CATBoolean iInstRot,
                                          const CATBoolean iCompleteCrown)
</dl>
</dl>
<a name="CreateClose"></a><a name="CreateClose(CATISpecObject_var)"></a> <dt> o <b>CreateClose</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateClose</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihCloseElement</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateClose
 use CreateCloseSurface
</dl>
</dl>
<a name="CreateCloseSurface"></a><a name="CreateCloseSurface(CATISpecObject_var)"></a> <dt> o <b>CreateCloseSurface</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateCloseSurface</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihCloseElement</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a close feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihCloseElement</tt>
   <dd>  The surfacic feature to be closed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created close feature.
</dl>
</dl>
<a name="CreateDraft"></a><a name="CreateDraft(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int)"></a> <dt> o <b>CreateDraft</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateDraft</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>ihSupportToDraft</tt>,<tr><td></td><td> const int <td><tt>iBid1</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihNeutral</tt>,<tr><td></td><td> const int <td><tt>iBid2</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihParting</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection</a> <td><tt>iPullDir</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihPullDirSpec</tt>,<tr><td></td><td> const int <td><tt>iMode</tt>,<tr><td></td><td> const double <td><tt>iAngle</tt>,<tr><td></td><td> const int <td><tt>iBid4</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new draft.
 Drafts are defined on molded parts to make them easier to remove from molds.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSupportToDraft</tt>
   <dd>   The list of faces to be drafted.
    <br><b>Legal values</b>: The CATISpecObject_var must be a face.
    <br>NULL_var value is not allowed.
 </dd>
    <dt><tt> iBid1</tt>
   <dd>    Not used. Must be set to 0.
 </dd>
    <dt><tt> ihNeutral</tt>
   <dd>    The neutral element.
    The intersection of this element and the faces to be drafted,
    defines a neutral curve on which the drafted face will lie.
    This element will remain the same during the draft.
    The neutral element and parting element may be the same element. 
    <br><b>Legal values</b>: The CATISpecObject_var could be a plane, a face or a surface.
    <br>NULL_var value is not allowed.
 </dd>
    <dt><tt> iBid2</tt>
   <dd>    Not used. Must be set to 0.
 </dd>
    <dt><tt> ihParting</tt>
   <dd>    The parting element.
    This element cuts the faces to be drafted in two and one portion is drafted according to its
    previously defined pulling direction.
    The parting element and neutral element may be the same element.
    <br><b>Legal values</b>: The CATISpecObject_var could be a plane, a face or a surface.
    <br>NULL_var value means the draft has <b>no</b> parting element.
 </dd>
    <dt><tt> iPullDir</tt>
   <dd>     The pulling direction.
     This is the direction in which the mold will be removed from the part.
 </dd>
    <dt><tt> ihPullDirSpec</tt>
   <dd>     The pulling direction reference.
     <br><b>Precondition</b>: If you used a reference, you must set the pulling direction iPullDir with the
     CATMathDirection of the reference.
    <br><b>Legal values</b>: The CATISpecObject_var is either
    <tt>a plane or a planar face or a planar surface</tt>  the pulling direction is normal to this element,
    <tt>a line or a linear edge</tt> the pulling direction is the direction of the element.
    <tt>NULL_var</tt> there is no pulling direction reference.
 </dd>
    <dt><tt> iMode</tt>
   <dd>	  The draft mode (standard or reflectline).
    <br><b>Legal values</b>: The Draft mode is either
	  <tt>0</tt> standard (the draft's neutral element must be input).
	  <tt>1</tt> reflectline (the draft's neutral element is computed as the reflect line).
 </dd>
    <dt><tt> iAngle</tt>
   <dd>    The draft angle value.
    <br><b>Legal values</b>: Angle between -90 degrees (not included) and +90 degrees (not included).
    The value should be set in degree.
 </dd>
    <dt><tt> iBid4</tt>
   <dd>    Not used. Must be set to 0.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created draft.
</dl>
</dl>
<a name="CreateFillet"></a><a name="CreateFillet(CATIMfBRepFeature_var,CATIMfBRepFeature_var,CATIMfBRepFeature_var,CATISpecObject_var,int)"></a> <dt> o <b>CreateFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateFillet</b>(<td> const CATIMfBRepFeature_var <td><tt>ihRsur1</tt>,<tr><td></td><td> const CATIMfBRepFeature_var <td><tt>ihRsur2</tt>,<tr><td></td><td> const CATIMfBRepFeature_var <td><tt>ihRemoveRsur</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const int <td><tt>iType</tt><td><tt>= -1</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateFillet 
 use CATISpecObject_var CreateSolidFillet (const CATIMfBRep_var ihRsur1, const CATIMfBRep_var ihRsur2, const CATIMfBRep_var ihRemoveRsur, const CATISpecObject_var ihSupport=NULL_var) = 0;
 or  CATISpecObject_var CreateSurfaceFillet (const CATIMfBRep_var ihRsur1, const CATIMfBRep_var ihRsur2, const CATIMfBRep_var ihRemoveRsur, const CATISpecObject_var ihSupport=NULL_var) = 0;
 depending of the type of the fillet you want to create.
</dl>
</dl>
<a name="CreateFillet"></a><a name="CreateFillet(CATIMfBRepFeature_var,CATIMfBRepFeature_var,double,CATISpecObject_var,int)"></a> <dt> o <b>CreateFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateFillet</b>(<td> const CATIMfBRepFeature_var <td><tt>ihRsur1</tt>,<tr><td></td><td> const CATIMfBRepFeature_var <td><tt>ihRsur2</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const int <td><tt>iType</tt><td><tt>= -1</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R14 #CreateFillet 
 use CreateSolidFillet (const CATIMfBRep_var ihRsur1, const CATIMfBRep_var ihRsur2, const double iRadius, const CATISpecObject_var ihSupport=NULL_var) = 0;  
 or 
 CreateSurfaceFillet (const CATIMfBRep_var ihRsur1, const CATIMfBRep_var ihRsur2, const double iRadius, const CATISpecObject_var ihSupport=NULL_var) = 0;  
 depending on the type of fillet.
</dl>
</dl>
<a name="CreateFillet"></a><a name="CreateFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var,int)"></a> <dt> o <b>CreateFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletVariation_91671.htm">CATPrtFilletVariation</a> <td><tt>iVariationMode</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const int <td><tt>iType</tt><td><tt>= -1</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R14 #CreateFillet
 use CATISpecObject_var CreateSolidFillet (const CATLISTV(CATISpecObject_var)* iObjectList, const CATPrtFilletPropagation iPropagationMode ,const CATPrtFilletVariation iVariationMode, const CATISpecObject_var ihSupport=NULL_var) = 0;
 or  CATISpecObject_var CreateSurfaceFillet (const CATLISTV(CATISpecObject_var)* iObjectList, const CATPrtFilletPropagation iPropagationMode ,const CATPrtFilletVariation iVariationMode, const CATISpecObject_var ihSupport=NULL_var) = 0;
 depending of the type of the fillet you want to create
</dl>
</dl>
<a name="CreateFillet"></a><a name="CreateFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var,int)"></a> <dt> o <b>CreateFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletVariation_91671.htm">CATPrtFilletVariation</a> <td><tt>iVariationMode</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iKeepEdgeList</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const int <td><tt>iType</tt><td><tt>= -1</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R14 #CreateFillet
 use 	CATISpecObject_var CreateSolidFillet (const CATLISTV(CATISpecObject_var)* iObjectList, const CATPrtFilletPropagation iPropagationMode ,const CATPrtFilletVariation iVariationMode, const CATLISTV(CATISpecObject_var)* iKeepEdgeList, const CATISpecObject_var ihSupport=NULL_var) = 0;
 or 	CATISpecObject_var CreateSurfaceFillet (const CATLISTV(CATISpecObject_var)* iObjectList, const CATPrtFilletPropagation iPropagationMode ,const CATPrtFilletVariation iVariationMode, const CATLISTV(CATISpecObject_var)* iKeepEdgeList, const CATISpecObject_var ihSupport=NULL_var) = 0;
 depending on the type of the fillet
</dl>
</dl>
<a name="CreateFillet"></a><a name="CreateFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var,int)"></a> <dt> o <b>CreateFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const int <td><tt>iType</tt><td><tt>= -1</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R14 #CreateFillet
 use CATISpecObject_var CreateSolidFillet (const CATLISTV(CATISpecObject_var)* iObjectList, const CATPrtFilletPropagation iPropagationMode ,const double iRadius, const CATISpecObject_var ihSupport=NULL_var) = 0;
 or  CATISpecObject_var CreateSurfaceFillet (const CATLISTV(CATISpecObject_var)* iObjectList, const CATPrtFilletPropagation iPropagationMode ,const double iRadius, const CATISpecObject_var ihSupport=NULL_var) = 0;
 depending of the type of the fillet you want to create
</dl>
</dl>
<a name="CreateFillet"></a><a name="CreateFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var,int)"></a> <dt> o <b>CreateFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iKeepEdgeList</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const int <td><tt>iType</tt><td><tt>= -1</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R14 #CreateFillet
 use CATISpecObject_var CreateSolidFillet (const CATLISTV(CATISpecObject_var)* iObjectList, const CATPrtFilletPropagation iPropagationMode ,const double iRadius,const CATLISTV(CATISpecObject_var)* iKeepEdgeList, const CATISpecObject_var ihSupport=NULL_var) = 0;
 or  CATISpecObject_var CreateSurfaceFillet (const CATLISTV(CATISpecObject_var)* iObjectList, const CATPrtFilletPropagation iPropagationMode ,const double iRadius,const CATLISTV(CATISpecObject_var)* iKeepEdgeList, const CATISpecObject_var ihSupport=NULL_var) = 0;
 depending of the type of fillet you want to create
</dl>
</dl>
<a name="CreateGroove"></a><a name="CreateGroove(CATISpecObject_var&amp;)"></a> <dt> o <b>CreateGroove</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateGroove</b>(<td> const CATISpecObject_var&amp; <td><tt>ihSketch</tt><td><tt>= NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates a new groove.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSketch</tt>
   <dd>   The sketch defining the groove profile.<br>It must contain an axis used as revolution axis.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The groove feature.
</dl>
</dl>
<a name="CreateHole"></a><a name="CreateHole(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateHole</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateHole</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSurface</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihDirection</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new hole feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSurface</tt>
   <dd>      Selected face or plane used as support for the hole feature.
 </dd>
    <dt><tt> ihDirection</tt>
   <dd>      Selected direction.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The hole feature.
</dl>
</dl>
<a name="CreateHole"></a><a name="CreateHole(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,int)"></a> <dt> o <b>CreateHole</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateHole</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihPoint</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSurface</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihDirection</tt>,<tr><td></td><td> const int <td><tt>IsPointOnSurface</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new hole feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihPoint</tt>
   <dd>      Selected point uses to locate the hole feature on its support  
 </dd>
    <dt><tt> ihSurface</tt>
   <dd>      Selected face used as support for the hole feature.
 </dd>
    <dt><tt> ihDirection</tt>
   <dd>      Selected direction.
 </dd>
    <dt><tt> IsPointOnSurface</tt>
   <dd> <br>     = 0 if ihPoint does not lay down support (ihSurface).
 <br>     = 1 if ihPoint lays down support (ihSurface).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The Hole feature.
</dl>
</dl>
<a name="CreateHole"></a><a name="CreateHole(CATMathPoint,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateHole</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateHole</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint</a> <td><tt>iMathPoint</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihFirstEdge</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSecndEdge</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSurface</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iDirection</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new hole feature. 
 This method creates a constraint in positionning sketch between
 hole origine and selected edge .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMathPoint</tt>
   <dd>      Coordinates of the point uses to locate the hole feature on its support. 
 </dd>
    <dt><tt> ihFirstEdge</tt>
   <dd>      First selected edge.
 </dd>
    <dt><tt> ihSecndEdge</tt>
   <dd>      Second selected edge.
 </dd>
    <dt><tt> ihSurface</tt>
   <dd>      Selected face used as support for the hole feature.
 </dd>
    <dt><tt> ihDirection</tt>
   <dd>      Selected direction.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The hole feature.
</dl>
</dl>
<a name="CreateHole"></a><a name="CreateHole(CATMathPoint,CATISpecObject_var,CATISpecObject_var,int)"></a> <dt> o <b>CreateHole</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateHole</b>(<td> const <a href="../Mathematics/class_CATMathPoint_29498.htm">CATMathPoint</a> <td><tt>iMathPoint</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSurface</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihDirection</tt>,<tr><td></td><td> const int <td><tt>IsPointOnSurface</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new hole feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMathPoint</tt>
   <dd>      Coordinates of the point uses to locate the hole feature on its support. 
 </dd>
    <dt><tt> ihSurface</tt>
   <dd>      Selected face used as support for the hole feature.
 </dd>
    <dt><tt> ihDirection</tt>
   <dd>      Selected direction.
 </dd>
    <dt><tt> IsPointOnSurface</tt>
   <dd> <br>     = 0 if iMathPoint doesn't lay down support (ihSurface).
 <br>     = 1 if iMathPoint lays down support (ihSurface).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The hole feature.
</dl>
</dl>
<a name="CreateLoft"></a><a name="CreateLoft()"></a> <dt> o <b>CreateLoft</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateLoft</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new loft feature. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The loft feature.
</dl>
</dl>
<a name="CreateMirror"></a><a name="CreateMirror(CATISpecObject_var)"></a> <dt> o <b>CreateMirror</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateMirror</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSymPlane</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new mirror.
 A mirror allows users for transforming by duplication existing feature 
 by a symmetry with respect to an existing plane. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSymPlane</tt>
   <dd>   The plane used by the mirror as the symmetry plane.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created mirror.
</dl>
</dl>
<a name="CreateOffset"></a><a name="CreateOffset(CATISpecObject_var,CATPrtOffsetSens,double,double)"></a> <dt> o <b>CreateOffset</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateOffset</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSurface</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtOffsetSens_52716.htm">CATPrtOffsetSens</a> <td><tt>iIsensOffset</tt>,<tr><td></td><td>double <td><tt>iTopOffset</tt>,<tr><td></td><td>double <td><tt>iBotOffset</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateOffset
 use CreateSolidOffset
</dl>
</dl>
<a name="CreatePad"></a><a name="CreatePad(CATISpecObject_var&amp;)"></a> <dt> o <b>CreatePad</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreatePad</b>(<td> const CATISpecObject_var&amp; <td><tt>ihSketch</tt><td><tt>= NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates a new pad.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSketch</tt>
   <dd>   The sketch defining the pad profile.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The pad feature.
</dl>
</dl>
<a name="CreatePocket"></a><a name="CreatePocket(CATISpecObject_var&amp;)"></a> <dt> o <b>CreatePocket</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreatePocket</b>(<td> const CATISpecObject_var&amp; <td><tt>ihSketch</tt><td><tt>= NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates a new pocket.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSketch</tt>
   <dd>   The sketch defining the pocket profile.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The pocket feature.
</dl>
</dl>
<a name="CreateRectPatt"></a><a name="CreateRectPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double)"></a> <dt> o <b>CreateRectPatt</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateRectPatt</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihMotif</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihLine1</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihLine2</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iDir1</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iDir2</tt>,<tr><td></td><td> const int <td><tt>iNb1</tt>,<tr><td></td><td> const int <td><tt>iNb2</tt>,<tr><td></td><td> const double <td><tt>iStep1</tt>,<tr><td></td><td> const double <td><tt>iStep2</tt>,<tr><td></td><td> const int <td><tt>iNu</tt>,<tr><td></td><td> const int <td><tt>iNv</tt>,<tr><td></td><td> const double <td><tt>iRotationAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new solid rectangular pattern.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihMotif</tt>
   <dd>   The feature to be duplicated with the rectangular pattern.
 </dd>
    <dt><tt> ihLine1</tt>
   <dd>   The line or linear edge that specifies the pattern first distribution
   direction.
 </dd>
    <dt><tt> iLine2</tt>
   <dd>   The line or linear edge that specifies the pattern second distribution
   direction.
 </dd>
    <dt><tt> iDir1</tt>
   <dd>   The boolean flag indicating if the natural orientation of
   <tt>iLine1</tt> used to orientate the pattern operation.
   True indicates that <tt>ihMotif</tt> is duplicated in the
   direction of the natural orientation of <tt>iLine1</tt>.
 </dd>
    <dt><tt> iDir2</tt>
   <dd>   The boolean flag indicating if the natural orientation of 
   <tt>iLine2</tt> used to orientate the pattern operation.
   True indicates that <tt>ihMotif</tt> is duplicated in the 
   direction of the natural orientation of <tt>iLine2</tt>.
 </dd>
    <dt><tt> iNb1</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated along
   the pattern first direction. <tt>ihMotif</tt> is the first
   instance.
   <br><b>Legal values</b>: <tt>iNb1</tt> must be greater or equal than 1.
 </dd>
    <dt><tt> iNb2</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated along
   the pattern second direction.
   <br><b>Legal values</b>: <tt>iNb2</tt> must be greater or equal than 1.
 </dd>
    <dt><tt> iStep1</tt>
   <dd>   The distance that will separate two consecutive duplications in the pattern
   along its first direction.
   <br><b>Legal values</b>: <tt>iStep1</tt> must be greater than 0 but not equal to 0.
 </dd>
    <dt><tt> iStep2</tt>
   <dd>   The distance that will separate two consecutive duplications in the pattern
   along its second direction.
   <br><b>Legal values</b>: <tt>iStep2</tt> must be greater than 0 but not equal to 0.
 </dd>
    <dt><tt> iNu</tt>
   <dd>   Specifies the position of the original feature <tt>ihMotif</tt>
   among its duplications along <tt>iLine1</tt>.
   <br><b>Legal values</b>: <tt>iNu</tt> must be greater or equal than 1
   and less or equal than <tt>iNb1</tt>.
 </dd>
    <dt><tt> iNv</tt>
   <dd>   Specifies the position of the original feature <tt>ihMotif</tt>
   among its duplications along <tt>iLine2</tt>.
   <br><b>Legal values</b>: <tt>iNv</tt> must be greater or equal than 1
   and less or equal than <tt>iNb2</tt>.
 </dd>
    <dt><tt> iRotationAngle</tt>
   <dd>   The angle between the real pattern directions and the two defined directions
   <tt>iLine1</tt> and <tt>iLine2</tt>, in case of two defined directions only.
   The original feature <tt>ihMotif</tt> is used as the rotation center.
   Nevertheless the duplicated shapes are not own rotated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created rectangular pattern.
</dl>
</dl>
<a name="CreateRectPatt"></a><a name="CreateRectPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double,int)"></a> <dt> o <b>CreateRectPatt</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateRectPatt</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihMotif</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihLine1</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihLine2</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iDir1</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iDir2</tt>,<tr><td></td><td> const int <td><tt>iNb1</tt>,<tr><td></td><td> const int <td><tt>iNb2</tt>,<tr><td></td><td> const double <td><tt>iStep1</tt>,<tr><td></td><td> const double <td><tt>iStep2</tt>,<tr><td></td><td> const int <td><tt>iNu</tt>,<tr><td></td><td> const int <td><tt>iNv</tt>,<tr><td></td><td> const double <td><tt>iRotationAngle</tt>,<tr><td></td><td> const int <td><tt>iContext</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateRectPatt(const CATISpecObject_var ihMotif,
                                          const CATISpecObject_var ihLine1,
                                          const CATISpecObject_var ihLine2,
                                          const CATBoolean iDir1, 
                                          const CATBoolean iDir2,
                                          const int iNb1,
                                          const int iNb2,
                                          const double iStep1,
                                          const double iStep2,
                                          const int iNu,
                                          const int iNv,
                                          const double iRotationAngle)
</dl>
</dl>
<a name="CreateRemovedLoft"></a><a name="CreateRemovedLoft()"></a> <dt> o <b>CreateRemovedLoft</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateRemovedLoft</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new removed loft feature. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The removed loft feature.
</dl>
</dl>
<a name="CreateRib"></a><a name="CreateRib()"></a> <dt> o <b>CreateRib</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateRib</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new rib feature. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The rib feature.
</dl>
</dl>
<a name="CreateRib"></a><a name="CreateRib(CATISpecObject_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>CreateRib</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateRib</b>(<td> const CATISpecObject_var&amp; <td><tt>ihSketch</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>ihCenterCrv</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new rib feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSketch</tt>
   <dd>      Selected profile.
 </dd>
    <dt><tt> ihCenterCrv</tt>
   <dd>      Selected center curve.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The rib feature.
</dl>
</dl>
<a name="CreateRotate"></a><a name="CreateRotate(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"></a> <dt> o <b>CreateRotate</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateRotate</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihToRotate</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihAxis</tt>,<tr><td></td><td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>ihAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a Rotate feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihToRotate</tt>
   <dd>	The object on which rotate will be applied.
 </dd>
    <dt><tt> ihAxis</tt>
   <dd>	The rotation axis.
 </dd>
    <dt><tt> ihAngle</tt>
   <dd>	The rotation angle.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Rotate feature.
</dl>
</dl>
<a name="CreateScaling"></a><a name="CreateScaling(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"></a> <dt> o <b>CreateScaling</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateScaling</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihToScale</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihReference</tt>,<tr><td></td><td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>ihRatio</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a Scaling feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihToScale</tt>
   <dd>	The object on which scaling will be applied.
 </dd>
    <dt><tt> ihReference</tt>
   <dd>	The scaling reference element.
 </dd>
    <dt><tt> ihRatio</tt>
   <dd>	The scaling ratio.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Scaling feature.
</dl>
</dl>
<a name="CreateSewing"></a><a name="CreateSewing(CATISpecObject_var,CATPrtSplitType)"></a> <dt> o <b>CreateSewing</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSewing</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSewingPlane</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtSplitType_46968.htm">CATPrtSplitType</a> <td><tt>iSewingType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a sewing feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSewingPlane</tt>
   <dd>	The surfacic feature to be sewn to perform the sewing operation.
 </dd>
    <dt><tt> iSewingType</tt>
   <dd>	Represents the side to be kept after the sewing operation.
	<br><b>Legal values</b>: <tt>iSewingType</tt> equals PositiveSide 
	or NegativeSide.
	The PositiveSide value refers to the same orientation as the sewing
	element normal vector.
	The NegativeSide value refers to the opposite orientation as the sewing
	element normal vector.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the created sewing feature.
</dl>
</dl>
<a name="CreateShaft"></a><a name="CreateShaft(CATISpecObject_var&amp;)"></a> <dt> o <b>CreateShaft</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateShaft</b>(<td> const CATISpecObject_var&amp; <td><tt>ihSketch</tt><td><tt>= NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates a new shaft.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSketch</tt>
   <dd>   The sketch defining the shaft profile.<br>It must contain an axis used as revolution axis.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The shaft feature.
</dl>
</dl>
<a name="CreateShell"></a><a name="CreateShell(CATLISTV(CATISpecObject_var)*,double,double)"></a> <dt> o <b>CreateShell</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateShell</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>ihObjectList</tt>,<tr><td></td><td>double <td><tt>iIntOffset</tt>,<tr><td></td><td>double <td><tt>iExtOffset</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a shell feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihObjectList</tt>
   <dd>	The list of the faces which corresponds to the shell openings.
 </dd>
    <dt><tt> iIntOffset</tt>
   <dd>	The internal offset value.
 </dd>
    <dt><tt> iExtOffset</tt>
   <dd>	The external offset value. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created shell feature.
</dl>
</dl>
<a name="CreateSlot"></a><a name="CreateSlot()"></a> <dt> o <b>CreateSlot</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSlot</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new slot feature. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The slot feature.
</dl>
</dl>
<a name="CreateSlot"></a><a name="CreateSlot(CATISpecObject_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>CreateSlot</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSlot</b>(<td> const CATISpecObject_var&amp; <td><tt>ihSketch</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>ihCenterCrv</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new slot feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSketch</tt>
   <dd>      Selected profile.
 </dd>
    <dt><tt> ihCenterCrv</tt>
   <dd>      Selected center curve.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The slot feature.
</dl>
</dl>
<a name="CreateSolidFillet"></a><a name="CreateSolidFillet(CATIMfBRep_var,CATIMfBRep_var,CATIMfBRep_var,CATISpecObject_var)"></a> <dt> o <b>CreateSolidFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSolidFillet</b>(<td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRsur1</tt>,<tr><td></td><td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRsur2</tt>,<tr><td></td><td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRemoveRsur</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a tritangent fillet feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihRsur1</tt>
   <dd> Specifies the first face to be filleted.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> ihRsur2</tt>
   <dd> Specifies the second face to be filleted.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> ihRemoveRsur</tt>
   <dd> Specifies the face to be removed.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created tritangent fillet feature.
</dl>
</dl>
<a name="CreateSolidFillet"></a><a name="CreateSolidFillet(CATIMfBRep_var,CATIMfBRep_var,double,CATISpecObject_var)"></a> <dt> o <b>CreateSolidFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSolidFillet</b>(<td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRsur1</tt>,<tr><td></td><td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRsur2</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a solid face fillet feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihRsur1</tt>
   <dd> Specifies the first face to be filleted.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> ihRsur2</tt>
   <dd> Specifies the second face to be filleted.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> iRadius</tt>
   <dd> Specifies the radius value.
 <br><b>Legal values</b>: The radius value must be greater 
 than 0 but not equal to 0. 
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Face Fillet feature.
</dl>
</dl>
<a name="CreateSolidFillet"></a><a name="CreateSolidFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var)"></a> <dt> o <b>CreateSolidFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSolidFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletVariation_91671.htm">CATPrtFilletVariation</a> <td><tt>iVariationMode</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a solid variable edge fillet feature. 
 <br><b>Postcondition</b>: It just adds the edges to the fillet. So 
 you have to use AddFilletRadius method of CATIEdgeFillet on the edge  
 to add vertices for computing variable fillet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges to be filleted.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd>  The propagation mode specifies the edges taken into account when filleting.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>:CATIA continues filleting belong the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtFilletPropagation propagation mode can be set
 to <tt>TANGENCY</tt> or <tt>MINIMAL</tt>.
 </dd>
    <dt><tt> iVariationMode</tt>
   <dd> The variation mode specifies the way the fillet shape changes
 from one radius to another.
 <br>The variation can be performed in two ways:
 <br><b>Cubic</b>: The fillet changes smoothly from one
 radius to another.
 <br><b>Linear</b>: The fillet changes straight from one
 radius to another.
 <br><b>Legal values</b>: The CATPrtFilletVariation variation mode can be set
 to <tt>CUBIC</tt> or <tt>LINEAR</tt>.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created variable edge fillet feature.
</dl>
</dl>
<a name="CreateSolidFillet"></a><a name="CreateSolidFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)"></a> <dt> o <b>CreateSolidFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSolidFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletVariation_91671.htm">CATPrtFilletVariation</a> <td><tt>iVariationMode</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iKeepEdgeList</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a variable solid edge fillet feature with Keep Edge. 
 <br><b>Precondition</b>: only for edge fillets with constant radius.
 <br><b>Postcondition</b>: It just adds the edges to the fillet. So 
 you have to use AddFilletRadius method of CATIEdgeFillet on the edge  
 to add vertices for computing variable fillet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges to be filleted.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd>  The propagation mode specifies the edges taken into account when filleting.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>:CATIA continues filleting belong the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtFilletPropagation propagation mode can be set
 to <tt>TANGENCY</tt> or <tt>MINIMAL</tt>.
 </dd>
    <dt><tt> iVariationMode</tt>
   <dd> The variation mode specifies the way the fillet shape changes
 from one radius to another.
 <br>The variation can be performed in two ways:
 <br><b>Cubic</b>: The fillet changes smoothly from one
 radius to another.
 <br><b>Linear</b>: The fillet changes straight from one
 radius to another.
 <br><b>Legal values</b>: The CATPrtFilletVariation variation mode can be set
 to <tt>CUBIC</tt> or <tt>LINEAR</tt>.
 </dd>
    <dt><tt> iKeepEdgeList</tt>
   <dd> Specifies the list of sharp edges that must not be modified. 
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) feature
 created with CATIMfBRepFactory. 
 This edge should not be already used in the fillet.
 This edge should belong to the same mechanical body.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created variable edge fillet feature.
</dl>
</dl>
<a name="CreateSolidFillet"></a><a name="CreateSolidFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var)"></a> <dt> o <b>CreateSolidFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSolidFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a solid constant edge fillet feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges or faces to be filleted.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd>  The propagation mode specifies the edges taken into account when filleting.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>:CATIA continues filleting belong the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtFilletPropagation propagation mode can be set
 to <tt>TANGENCY</tt> or <tt>MINIMAL</tt>.
 </dd>
    <dt><tt> iRadius</tt>
   <dd> Specifies the constant radius value.
 <br><b>Legal values</b>: The radius value must be greater 
 than 0 but not equal to 0.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created constant edge fillet feature.
</dl>
</dl>
<a name="CreateSolidFillet"></a><a name="CreateSolidFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)"></a> <dt> o <b>CreateSolidFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSolidFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iKeepEdgeList</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a solid constant edge fillet feature with Keep Edge. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges or faces to be filleted.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd>  The propagation mode specifies the edges taken into account when filleting.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>:CATIA continues filleting belong the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtFilletPropagation propagation mode can be set
 to <tt>TANGENCY</tt> or <tt>MINIMAL</tt>.
 </dd>
    <dt><tt> iRadius</tt>
   <dd> Specifies the constant radius value.
 <br><b>Legal values</b>: The radius value must be greater 
 than 0 but not equal to 0.
 </dd>
    <dt><tt> iKeepEdgeList</tt>
   <dd> Specifies the list of sharp edges that must not be modified. 
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) feature
 created with CATIMfBRepFactory. 
 This edge should not be already used in the fillet.
 This edge should belong to the same mechanical body.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created constant edge fillet feature.
</dl>
</dl>
<a name="CreateSolidOffset"></a><a name="CreateSolidOffset(CATISpecObject_var,CATPrtOffsetSens,double,double)"></a> <dt> o <b>CreateSolidOffset</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSolidOffset</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSurface</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtOffsetSens_52716.htm">CATPrtOffsetSens</a> <td><tt>iIsensOffset</tt>,<tr><td></td><td>double <td><tt>iTopOffset</tt>,<tr><td></td><td>double <td><tt>iBotOffset</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns an offset feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSurface</tt>
   <dd>	The surfacic feature to be offseted to perform an offset operation.
 </dd>
    <dt><tt> iIsensOffset</tt>
   <dd>	Represents the orientation of the offset.
	<br><b>Legal values</b>: <tt>iIsensOffset</tt> equals NormalSide
	or InverseNormalSide.
	The NormalSide value refers to the same orientation as the normal vector of 
      the surfacic feature.
	The InverseNormalSide value refers to the opposite orientation as the normal 
      vector of the surfacic feature.	
 </dd>
    <dt><tt> iTopOffset</tt>
   <dd>	Represents the offset value between the surfacic feature to be offseted and the top skin
	of the offset feature.
 </dd>
    <dt><tt> iBotOffset</tt>
   <dd>	Represents the offset value between the surfacic feature to be offseted and the bottom skin
	of the offset feature. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the created offset feature.
</dl>
</dl>
<a name="CreateSolidSplit"></a><a name="CreateSolidSplit(CATISpecObject_var,CATPrtSplitType)"></a> <dt> o <b>CreateSolidSplit</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSolidSplit</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSplitPlane</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtSplitType_46968.htm">CATPrtSplitType</a> <td><tt>iSplitType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a split feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSplitPlane</tt>
   <dd>	The surfacic feature as splitting element to perform the split operation.
 </dd>
    <dt><tt> iSplitType</tt>
   <dd>	Represents the side to be kept after the split operation.
	<br><b>Legal values</b>: <tt>iSplitType</tt> equals PositiveSide 
	or NegativeSide.
	The PositiveSide value refers to the same orientation as the splitting
	element normal vector.
	The NegativeSide value refers to the opposite orientation as the splitting
	element normal vector.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the created split feature.
</dl>
</dl>
<a name="CreateSplit"></a><a name="CreateSplit(CATISpecObject_var,CATPrtSplitType)"></a> <dt> o <b>CreateSplit</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSplit</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSplitPlane</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtSplitType_46968.htm">CATPrtSplitType</a> <td><tt>iSplitType</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateSplit
 use CreateSplitSolid
</dl>
</dl>
<a name="CreateStiffener"></a><a name="CreateStiffener(CATISpecObject_var&amp;)"></a> <dt> o <b>CreateStiffener</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateStiffener</b>(<td> const CATISpecObject_var&amp; <td><tt>ihSketch</tt><td><tt>= NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates a new stiffener.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSketch</tt>
   <dd>   The sketch defining the stiffener profile.<br>It must be an open profile.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The stiffener feature.
</dl>
</dl>
<a name="CreateSurfaceFillet"></a><a name="CreateSurfaceFillet(CATIMfBRep_var,CATIMfBRep_var,CATIMfBRep_var,CATISpecObject_var)"></a> <dt> o <b>CreateSurfaceFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfaceFillet</b>(<td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRsur1</tt>,<tr><td></td><td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRsur2</tt>,<tr><td></td><td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRemoveRsur</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a tritangent fillet feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihRsur1</tt>
   <dd> Specifies the first face to be filleted.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> ihRsur2</tt>
   <dd> Specifies the second face to be filleted.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> ihRemoveRsur</tt>
   <dd> Specifies the face to be removed.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created tritangent fillet feature.
</dl>
</dl>
<a name="CreateSurfaceFillet"></a><a name="CreateSurfaceFillet(CATIMfBRep_var,CATIMfBRep_var,double,CATISpecObject_var)"></a> <dt> o <b>CreateSurfaceFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfaceFillet</b>(<td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRsur1</tt>,<tr><td></td><td> const <a href="../MecModInterfaces/interface_CATIMfBRep_18060.htm">CATIMfBRep_var</a> <td><tt>ihRsur2</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a surface face fillet feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihRsur1</tt>
   <dd> Specifies the first face to be filleted.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> ihRsur2</tt>
   <dd> Specifies the second face to be filleted.
 The CATIMfBRep_var should be a Rsur feature (CATIMfRsur) created with CATIMfBRepFactory.
 This face should not be already used in the fillet.
 This face should belong to the same mechanical body.
 </dd>
    <dt><tt> iRadius</tt>
   <dd> Specifies the radius value.
 <br><b>Legal values</b>: The radius value must be greater 
 than 0 but not equal to 0. 
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Face Fillet feature.
</dl>
</dl>
<a name="CreateSurfaceFillet"></a><a name="CreateSurfaceFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATISpecObject_var)"></a> <dt> o <b>CreateSurfaceFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfaceFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletVariation_91671.htm">CATPrtFilletVariation</a> <td><tt>iVariationMode</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a surface variable edge fillet feature. 
 <br><b>Postcondition</b>: It just adds the edges to the fillet. So 
 you have to use AddFilletRadius method of CATIEdgeFillet on the edge  
 to add vertices for computing variable fillet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges to be filleted.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd>  The propagation mode specifies the edges taken into account when filleting.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>:CATIA continues filleting belong the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtFilletPropagation propagation mode can be set
 to <tt>TANGENCY</tt> or <tt>MINIMAL</tt>.
 </dd>
    <dt><tt> iVariationMode</tt>
   <dd> The variation mode specifies the way the fillet shape changes
 from one radius to another.
 <br>The variation can be performed in two ways:
 <br><b>Cubic</b>: The fillet changes smoothly from one
 radius to another.
 <br><b>Linear</b>: The fillet changes straight from one
 radius to another.
 <br><b>Legal values</b>: The CATPrtFilletVariation variation mode can be set
 to <tt>CUBIC</tt> or <tt>LINEAR</tt>.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created variable edge fillet feature.
</dl>
</dl>
<a name="CreateSurfaceFillet"></a><a name="CreateSurfaceFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,CATPrtFilletVariation,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)"></a> <dt> o <b>CreateSurfaceFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfaceFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletVariation_91671.htm">CATPrtFilletVariation</a> <td><tt>iVariationMode</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iKeepEdgeList</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a variable surfacic edge fillet feature with Keep Edge. 
 <br><b>Precondition</b>: only for edge fillets with constant radius.
 <br><b>Postcondition</b>: It just adds the edges to the fillet. So 
 you have to use AddFilletRadius method of CATIEdgeFillet on the edge  
 to add vertices for computing variable fillet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges to be filleted.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd>  The propagation mode specifies the edges taken into account when filleting.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>:CATIA continues filleting belong the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtFilletPropagation propagation mode can be set
 to <tt>TANGENCY</tt> or <tt>MINIMAL</tt>.
 </dd>
    <dt><tt> iVariationMode</tt>
   <dd> The variation mode specifies the way the fillet shape changes
 from one radius to another.
 <br>The variation can be performed in two ways:
 <br><b>Cubic</b>: The fillet changes smoothly from one
 radius to another.
 <br><b>Linear</b>: The fillet changes straight from one
 radius to another.
 <br><b>Legal values</b>: The CATPrtFilletVariation variation mode can be set
 to <tt>CUBIC</tt> or <tt>LINEAR</tt>.
 </dd>
    <dt><tt> iKeepEdgeList</tt>
   <dd> Specifies the list of sharp edges that must not be modified. 
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) feature
 created with CATIMfBRepFactory. 
 This edge should not be already used in the fillet.
 This edge should belong to the same mechanical body.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created variable edge fillet feature.
</dl>
</dl>
<a name="CreateSurfaceFillet"></a><a name="CreateSurfaceFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATISpecObject_var)"></a> <dt> o <b>CreateSurfaceFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfaceFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a surface constant edge fillet feature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges or faces to be filleted.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd>  The propagation mode specifies the edges taken into account when filleting.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>:CATIA continues filleting belong the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtFilletPropagation propagation mode can be set
 to <tt>TANGENCY</tt> or <tt>MINIMAL</tt>.
 </dd>
    <dt><tt> iRadius</tt>
   <dd> Specifies the constant radius value.
 <br><b>Legal values</b>: The radius value must be greater 
 than 0 but not equal to 0.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created constant edge fillet feature.
</dl>
</dl>
<a name="CreateSurfaceFillet"></a><a name="CreateSurfaceFillet(CATLISTV(CATISpecObject_var)*,CATPrtFilletPropagation,double,CATLISTV(CATISpecObject_var)*,CATISpecObject_var)"></a> <dt> o <b>CreateSurfaceFillet</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfaceFillet</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtFilletPropagation_110382.htm">CATPrtFilletPropagation</a> <td><tt>iPropagationMode</tt>,<tr><td></td><td> const double <td><tt>iRadius</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>iKeepEdgeList</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt><td><tt>=NULL_var</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a surface constant edge fillet feature with Keep Edge. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectList</tt>
   <dd> Specifies the list of sharp edges or faces to be filleted.
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) or Rsur (CATIMfRsur) feature
 created with CATIMfBRepFactory. 
 This edge or face should not be already used in the fillet.
 This edge or face should belong to the same mechanical body.
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd>  The propagation mode specifies the edges taken into account when filleting.
 <br>The propagation can be performed in two ways:
 <br><b>Tangency</b>:CATIA continues filleting belong the selected edge 
 until it encounters an edge that is non continuous in tangency.
 <br><b>Minimal</b>: The propagation is done up to the first natural relimitation
 by the geometry.
 <br><b>Legal values</b>: The CATPrtFilletPropagation propagation mode can be set
 to <tt>TANGENCY</tt> or <tt>MINIMAL</tt>.
 </dd>
    <dt><tt> iRadius</tt>
   <dd> Specifies the constant radius value.
 <br><b>Legal values</b>: The radius value must be greater 
 than 0 but not equal to 0.
 </dd>
    <dt><tt> iKeepEdgeList</tt>
   <dd> Specifies the list of sharp edges that must not be modified. 
 <br>The CATISpecObject_var should be a Redge (CATIMfRedge) feature
 created with CATIMfBRepFactory. 
 This edge should not be already used in the fillet.
 This edge should belong to the same mechanical body.
 </dd>
    <dt><tt> ihSupport</tt>
   <dd>  Do not use this parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created constant edge fillet feature.
</dl>
</dl>
<a name="CreateSurfacicCircPatt"></a><a name="CreateSurfacicCircPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,int,int,double,double,int,int,double,CATBoolean,CATBoolean)"></a> <dt> o <b>CreateSurfacicCircPatt</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfacicCircPatt</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihMotif</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iDir</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>iPto</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iSensa</tt>,<tr><td></td><td> const int <td><tt>iNbr</tt>,<tr><td></td><td> const int <td><tt>iNba</tt>,<tr><td></td><td> const double <td><tt>iStepr</tt>,<tr><td></td><td> const double <td><tt>iStepa</tt>,<tr><td></td><td> const int <td><tt>iNr</tt>,<tr><td></td><td> const int <td><tt>iNa</tt>,<tr><td></td><td> const double <td><tt>iRotationAngle</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iInstRot</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iCompleteCrown</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new surfacic or volumic circular pattern.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihMotif</tt>
   <dd>   The feature to be duplicated with the circular pattern.
 </dd>
    <dt><tt> iDir</tt>
   <dd>   The line or linear edge that specifies the axis around which duplications
   will be rotated relative to each other.
 </dd>
    <dt><tt> iPto</tt>
   <dd>   The point or vertex that specifies the pattern rotation center.
 </dd>
    <dt><tt> iSensa</tt>
   <dd>   The boolean flag indicating the natural orientation of 
   <tt>iDir</tt> used to orientate the pattern operation.
   A value of true indicates that <tt>ihMotif</tt> are duplicated in the 
   direction of the natural orientation of <tt>iDir</tt>.
 </dd>
    <dt><tt> iNbr</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated along
   pattern radial direction.
   <br><b>Legal values</b>: <tt>iNbr</tt> must be greater or equal than 1.
 </dd>
    <dt><tt> iNba</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated along
   pattern angular direction.
   <br><b>Legal values</b>: <tt>iNba</tt> must be greater or equal than 1.
 </dd>
    <dt><tt> iStepr</tt>
   <dd>   The distance that will separate two consecutive duplications in the pattern
   along its radial direction.
   <br><b>Legal values</b>: <tt>iStepr</tt> must be greater than 0 but not equal to 0.
 </dd>
    <dt><tt> iStepa</tt>
   <dd>   The angle that will separate two consecutive duplications in the pattern
   along its angular direction.
   <br><b>Legal values</b>: <tt>iStepa</tt> must be greater than 0 but not equal to 0.
 </dd>
    <dt><tt> iNr</tt>
   <dd>   Specifies the position of the original feature <tt>ihMotif</tt>
   among its duplications along the radial direction.
 </dd>
    <dt><tt> iNa</tt>
   <dd>   Specifies the position of the original feature <tt>ihMotif</tt>
   among its duplications along the angular direction.
 </dd>
    <dt><tt> iRotationAngle</tt>
   <dd>   Do not use, iRotationAngle must be already equal to 0.
 </dd>
    <dt><tt> iInstRot</tt>
   <dd>   The boolean flag that specifies:
   <br>True to keep the same orientation of <tt>ihMotif</tt>
   for its duplications.
   <br>False to orientate the duplications of <tt>ihMotif</tt> same
   according to the radial direction.
 </dd>
    <dt><tt> iCompleteCrown</tt>
   <dd>   The boolean flag specifies the mode of angular distribution.
   True indicates that the angular step will be equal to 360 degrees <tt>iNba</tt>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created circular pattern.
</dl>
</dl>
<a name="CreateSurfacicRectPatt"></a><a name="CreateSurfacicRectPatt(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATBoolean,int,int,double,double,int,int,double)"></a> <dt> o <b>CreateSurfacicRectPatt</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfacicRectPatt</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihMotif</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihLine1</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihLine2</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iDir1</tt>,<tr><td></td><td> const <a href="../System/typedef_CATBoolean_20142.htm">CATBoolean</a> <td><tt>iDir2</tt>,<tr><td></td><td> const int <td><tt>iNb1</tt>,<tr><td></td><td> const int <td><tt>iNb2</tt>,<tr><td></td><td> const double <td><tt>iStep1</tt>,<tr><td></td><td> const double <td><tt>iStep2</tt>,<tr><td></td><td> const int <td><tt>iNu</tt>,<tr><td></td><td> const int <td><tt>iNv</tt>,<tr><td></td><td> const double <td><tt>iRotationAngle</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new surfacic or volumic rectangular pattern.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihMotif</tt>
   <dd>   The feature to be duplicated with the rectangular pattern.
 </dd>
    <dt><tt> ihLine1</tt>
   <dd>   The line or linear edge that specifies the pattern first distribution
   direction.
 </dd>
    <dt><tt> iLine2</tt>
   <dd>   The line or linear edge that specifies the pattern second distribution
   direction.
 </dd>
    <dt><tt> iDir1</tt>
   <dd>   The boolean flag indicating if the natural orientation of
   <tt>iLine1</tt> used to orientate the pattern operation.
   True indicates that <tt>ihMotif</tt> is duplicated in the
   direction of the natural orientation of <tt>iLine1</tt>.
 </dd>
    <dt><tt> iDir2</tt>
   <dd>   The boolean flag indicating if the natural orientation of 
   <tt>iLine2</tt> used to orientate the pattern operation.
   True indicates that <tt>ihMotif</tt> is duplicated in the 
   direction of the natural orientation of <tt>iLine2</tt>.
 </dd>
    <dt><tt> iNb1</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated along
   the pattern first direction. <tt>ihMotif</tt> is the first
   instance.
   <br><b>Legal values</b>: <tt>iNb1</tt> must be greater or equal than 1.
 </dd>
    <dt><tt> iNb2</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated along
   the pattern second direction.
   <br><b>Legal values</b>: <tt>iNb2</tt> must be greater or equal than 1.
 </dd>
    <dt><tt> iStep1</tt>
   <dd>   The distance that will separate two consecutive duplications in the pattern
   along its first direction.
   <br><b>Legal values</b>: <tt>iStep1</tt> must be greater than 0 but not equal to 0.
 </dd>
    <dt><tt> iStep2</tt>
   <dd>   The distance that will separate two consecutive duplications in the pattern
   along its second direction.
   <br><b>Legal values</b>: <tt>iStep2</tt> must be greater than 0 but not equal to 0.
 </dd>
    <dt><tt> iNu</tt>
   <dd>   Specifies the position of the original feature <tt>ihMotif</tt>
   among its duplications along <tt>iLine1</tt>.
   <br><b>Legal values</b>: <tt>iNu</tt> must be greater or equal than 1
   and less or equal than <tt>iNb1</tt>.
 </dd>
    <dt><tt> iNv</tt>
   <dd>   Specifies the position of the original feature <tt>ihMotif</tt>
   among its duplications along <tt>iLine2</tt>.
   <br><b>Legal values</b>: <tt>iNv</tt> must be greater or equal than 1
   and less or equal than <tt>iNb2</tt>.
 </dd>
    <dt><tt> iRotationAngle</tt>
   <dd>   The angle between the real pattern directions and the two defined directions
   <tt>iLine1</tt> and <tt>iLine2</tt>, in case of two defined directions only.
   The original feature <tt>ihMotif</tt> is used as the rotation center.
   Nevertheless the duplicated shapes are not own rotated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created rectangular pattern.
</dl>
</dl>
<a name="CreateSurfacicUserPatt"></a><a name="CreateSurfacicUserPatt(CATISpecObject_var,int,CATLISTV(CATISpecObject_var),CATISpecObject_var)"></a> <dt> o <b>CreateSurfacicUserPatt</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSurfacicUserPatt</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihMotif</tt>,<tr><td></td><td> const int <td><tt>iNbCopy</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihStepElt</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new surfacic or volumic user pattern.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihMotif</tt>
   <dd>   The feature to be duplicated by the user pattern.
 </dd>
    <dt><tt> iNbCopy</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated.
 </dd>
    <dt><tt> iObjectList</tt>
   <dd>   The list must be composed of one sketch of points to locate duplications. 
 </dd>
    <dt><tt> ihStepElt</tt>
   <dd>   Do not use, ihStepElt must be equal to NULL_var.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created user pattern.
</dl>
</dl>
<a name="CreateSymmetry"></a><a name="CreateSymmetry(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateSymmetry</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateSymmetry</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSpec</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihPlane</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates and returns a Symmetry feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSpec</tt>
   <dd>	The object on which symmetry will be applied.
 </dd>
    <dt><tt> ihPlane</tt>
   <dd>	The plane used as mirroring element.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Symmetry feature.
</dl>
</dl>
<a name="CreateThickness"></a><a name="CreateThickness(CATLISTV(CATISpecObject_var)*,double)"></a> <dt> o <b>CreateThickness</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateThickness</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>ihObjectList</tt>,<tr><td></td><td>double <td><tt>iOffset</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a thickness feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihObjectList</tt>
   <dd>	The list of the faces which corresponds to the shell openings.
 </dd>
    <dt><tt> iOffset</tt>
   <dd>	The offset value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Thickness feature.
</dl>
</dl>
<a name="CreateThread"></a><a name="CreateThread()"></a> <dt> o <b>CreateThread</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateThread</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new thread feature. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The thread feature.
</dl>
</dl>
<a name="CreateThread"></a><a name="CreateThread(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateThread</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateThread</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupportElement</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihLimitElement</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a thread feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSupportElement</tt>
   <dd>	Face to thread or to tap. 	
 </dd>
    <dt><tt> ihLimitElement</tt>
   <dd>	Face to limit top of thread or tap. 	
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created thread feature.
</dl>
</dl>
<a name="CreateTranslate"></a><a name="CreateTranslate(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)"></a> <dt> o <b>CreateTranslate</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateTranslate</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSpecToTranslate</tt>,<tr><td></td><td> const <a href="../GSMInterfaces/interface_CATIGSMDirection_50112.htm">CATIGSMDirection_var</a> <td><tt>ihDirection</tt>,<tr><td></td><td> const <a href="../KnowledgeInterfaces/interface_CATICkeParm_23158.htm">CATICkeParm_var</a> <td><tt>ihDistance</tt>)=0  </table></dt>
<dl>
  <dd>
 Creates and returns a Translate feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSpecToTranslate</tt>
   <dd>	The object on which translation will be applied.
 </dd>
    <dt><tt> ihDirection</tt>
   <dd>	The translation direction.
 </dd>
    <dt><tt> ihDistance</tt>
   <dd>	The translation length.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Symmetry feature.
</dl>
</dl>
<a name="CreateUserPatt"></a><a name="CreateUserPatt(CATISpecObject_var,int,CATLISTV(CATISpecObject_var),CATISpecObject_var)"></a> <dt> o <b>CreateUserPatt</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateUserPatt</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihMotif</tt>,<tr><td></td><td> const int <td><tt>iNbCopy</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)</a> <td><tt>iObjectList</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihStepElt</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a new solid user pattern.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihMotif</tt>
   <dd>   The feature to be duplicated by the user pattern.
 </dd>
    <dt><tt> iNbCopy</tt>
   <dd>   The number of times that <tt>ihMotif</tt> will be duplicated.
 </dd>
    <dt><tt> iObjectList</tt>
   <dd>   The list must be composed of one sketch of points to locate duplications. 
 </dd>
    <dt><tt> ihStepElt</tt>
   <dd>   Do not use, ihStepElt must be equal to NULL_var.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created user pattern.
</dl>
</dl>
<a name="CreateVolumicCloseSurface"></a><a name="CreateVolumicCloseSurface(CATISpecObject_var)"></a> <dt> o <b>CreateVolumicCloseSurface</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicCloseSurface</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihCloseElement</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a volumic close feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihCloseElement</tt>
   <dd>  The surfacic feature to be closed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created close feature.
</dl>
</dl>
<a name="CreateVolumicDraft"></a><a name="CreateVolumicDraft(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int,CATISpecObject_var)"></a> <dt> o <b>CreateVolumicDraft</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicDraft</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>ihSupportToDraft</tt>,<tr><td></td><td> const int <td><tt>iBid1</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihNeutral</tt>,<tr><td></td><td> const int <td><tt>iBid2</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihParting</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection</a> <td><tt>iPullDir</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihPullDirSpec</tt>,<tr><td></td><td> const int <td><tt>iMode</tt>,<tr><td></td><td> const double <td><tt>iAngle</tt>,<tr><td></td><td> const int <td><tt>iBid4</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>hSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a volumic draft feature.
 Drafts are defined on molded parts to make them easier to remove from molds.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSupportToDraft</tt>
   <dd>   The list of faces to be drafted.
    <br><b>Legal values</b>: The CATISpecObject_var must be a face.
    <br>NULL_var value is not allowed.
 </dd>
    <dt><tt> iBid1</tt>
   <dd>    Not used. Must be set to 0.
 </dd>
    <dt><tt> ihNeutral</tt>
   <dd>    The neutral element.
    The intersection of this element and the faces to be drafted,
    defines a neutral curve on which the drafted face will lie.
    This element will remain the same during the draft.
    The neutral element and parting element may be the same element. 
    <br><b>Legal values</b>: The CATISpecObject_var could be a plane, a face or a surface.
    <br>NULL_var value is not allowed.
 </dd>
    <dt><tt> iBid2</tt>
   <dd>    Not used. Must be set to 0.
 </dd>
    <dt><tt> ihParting</tt>
   <dd>    The parting element.
    This element cuts the faces to be drafted in two and one portion is drafted according to its
    previously defined pulling direction.
    The parting element and neutral element may be the same element.
    <br><b>Legal values</b>: The CATISpecObject_var could be a plane, a face or a surface.
    <br>NULL_var value means the draft has <b>no</b> parting element.
 </dd>
    <dt><tt> iPullDir</tt>
   <dd>     The pulling direction.
     This is the direction in which the mold will be removed from the part.
 </dd>
    <dt><tt> ihPullDirSpec</tt>
   <dd>     The pulling direction reference.
     <br><b>Precondition</b>: If you used a reference, you must set the pulling direction iPullDir with the
     CATMathDirection of the reference.
    <br><b>Legal values</b>: The CATISpecObject_var is either
    <tt>a plane or a planar face or a planar surface</tt>  the pulling direction is normal to this element,
    <tt>a line or a linear edge</tt> the pulling direction is the direction of the element.
    <tt>NULL_var</tt> there is no pulling direction reference.
 </dd>
    <dt><tt> iMode</tt>
   <dd>	  The draft mode (standard or reflectline).
    <br><b>Legal values</b>: The Draft mode is either
	  <tt>0</tt> standard (the draft's neutral element must be input).
	  <tt>1</tt> reflectline (the draft's neutral element is computed as the reflect line).
 </dd>
    <dt><tt> iAngle</tt>
   <dd>    The draft angle value.
    <br><b>Legal values</b>: Angle between -90 degrees (not included) and +90 degrees (not included).
    The value should be set in degree.
 </dd>
    <dt><tt> iBid4</tt>
   <dd>    Not used. Must be set to 0.
 </dd>
    <dt><tt> hSupport</tt>
   <dd>    The volumic feature to be operated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created volumic draft.
</dl>
</dl>
<a name="CreateVolumicDraft"></a><a name="CreateVolumicDraft(CATLISTV(CATISpecObject_var)*,int,CATISpecObject_var,int,CATISpecObject_var,CATMathDirection,CATISpecObject_var,int,double,int,int,CATISpecObject_var)"></a> <dt> o <b>CreateVolumicDraft</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicDraft</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>ihSupportToDraft</tt>,<tr><td></td><td> const int <td><tt>iBid1</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihNeutral</tt>,<tr><td></td><td> const int <td><tt>iBid2</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihParting</tt>,<tr><td></td><td> const <a href="../Mathematics/class_CATMathDirection_52618.htm">CATMathDirection</a> <td><tt>iPullDir</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihPullDirSpec</tt>,<tr><td></td><td> const int <td><tt>iMode</tt>,<tr><td></td><td> const double <td><tt>iAngle</tt>,<tr><td></td><td> const int <td><tt>iBid4</tt>,<tr><td></td><td> const int <td><tt>iType</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>hSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateVolumicDraft
 use CreateVolumicDraft (const CATLISTV(CATISpecObject_var)* ihSupportToDraft, const int iBid1, const CATISpecObject_var ihNeutral,

</dl>
</dl>
<a name="CreateVolumicDraftAngle"></a><a name="CreateVolumicDraftAngle()"></a> <dt> o <b>CreateVolumicDraftAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicDraftAngle</b>(<td>)=0  </table></dt>
<dl>
  <dd>
  Creates and returns a Draft feature in volumic context.
</dl>
<a name="CreateVolumicDraftAngle"></a><a name="CreateVolumicDraftAngle(int&amp;)"></a> <dt> o <b>CreateVolumicDraftAngle</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicDraftAngle</b>(<td> const int&amp; <td><tt>type</tt>) =0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateVolumicDraftAngle 
 use CreateVolumicDraftAngle() to create Draft feature in Volumic context.
</dl>
</dl>
<a name="CreateVolumicOffset"></a><a name="CreateVolumicOffset(CATISpecObject_var,CATPrtOffsetSens,double,double)"></a> <dt> o <b>CreateVolumicOffset</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicOffset</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSurface</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtOffsetSens_52716.htm">CATPrtOffsetSens</a> <td><tt>iIsensOffset</tt>,<tr><td></td><td>double <td><tt>iTopOffset</tt>,<tr><td></td><td>double <td><tt>iBotOffset</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a volumic offset feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihSurface</tt>
   <dd>	The surfacic feature to be offseted to perform an offset operation.
 </dd>
    <dt><tt> iIsensOffset</tt>
   <dd>	Represents the orientation of the offset.
	<br><b>Legal values</b>: <tt>iIsensOffset</tt> equals NormalSide
	or InverseNormalSide.
	The NormalSide value refers to the same orientation as the normal vector of 
      the surfacic feature.
	The InverseNormalSide value refers to the opposite orientation as the normal 
      vector of the surfacic feature.	
 </dd>
    <dt><tt> iTopOffset</tt>
   <dd>	Represents the offset value between the surfacic feature to be offseted and the top skin
	of the offset feature.
 </dd>
    <dt><tt> iBotOffset</tt>
   <dd>	Represents the offset value between the surfacic feature to be offseted and the bottom skin
	of the offset feature. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the created offset feature.
</dl>
</dl>
<a name="CreateVolumicSewing"></a><a name="CreateVolumicSewing(int&amp;,CATISpecObject_var&amp;,CATISpecObject_var,CATPrtSplitType)"></a> <dt> o <b>CreateVolumicSewing</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicSewing</b>(<td> const int&amp; <td><tt>Type</tt>,<tr><td></td><td> const CATISpecObject_var&amp; <td><tt>hVolume</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSewingPlane</tt>,<tr><td></td><td> const <a href="../PartInterfaces/enum_CATPrtSplitType_46968.htm">CATPrtSplitType</a> <td><tt>iSewingType</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a volumic sewing feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Type</tt>
   <dd>      Must be set to 4.
 </dd>
    <dt><tt> ihVolume</tt>
   <dd>	The volumic feature to be operated.
 </dd>
    <dt><tt> ihSewingPlane</tt>
   <dd>	The surfacic feature to be sewn to perform the sewing operation.
 </dd>
    <dt><tt> iSewingType</tt>
   <dd>	Represents the side to be kept after the sewing operation.
	<br><b>Legal values</b>: <tt>iSewingType</tt> equals PositiveSide 
	or NegativeSide.
	The PositiveSide value refers to the same orientation as the sewing
	element normal vector.
	The NegativeSide value refers to the opposite orientation as the sewing
	element normal vector.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the created sewing feature.
</dl>
</dl>
<a name="CreateVolumicShell"></a><a name="CreateVolumicShell(CATISpecObject_var,CATLISTV(CATISpecObject_var)*,double,double)"></a> <dt> o <b>CreateVolumicShell</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicShell</b>(<td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihVolume</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>ihObjectList</tt>,<tr><td></td><td>double <td><tt>iIntOffset</tt>,<tr><td></td><td>double <td><tt>iExtOffset</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a volumic shell feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihVolume</tt>
   <dd>	The volumic feature to be operated.
 </dd>
    <dt><tt> ihObjectList</tt>
   <dd>	The list of the faces which corresponds to the shell openings.
 </dd>
    <dt><tt> iIntOffset</tt>
   <dd>	The internal offset value.
 </dd>
    <dt><tt> iExtOffset</tt>
   <dd>	The external offset value. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created shell feature.
</dl>
</dl>
<a name="CreateVolumicShell"></a><a name="CreateVolumicShell(int,CATISpecObject_var,CATLISTV(CATISpecObject_var)*,double,double)"></a> <dt> o <b>CreateVolumicShell</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicShell</b>(<td> const int <td><tt>type</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihVolume</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>ihObjectList</tt>,<tr><td></td><td>double <td><tt>iIntOffset</tt>,<tr><td></td><td>double <td><tt>iExtOffset</tt>) = 0  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 #CreateVolumicShell
 use CreateVolumicShell (const CATISpecObject_var ihVolume, const CATLISTV(CATISpecObject_var)* ihObjectList, double iIntOffset, double iExtOffset)
</dl>
</dl>
<a name="CreateVolumicThickness"></a><a name="CreateVolumicThickness(CATLISTV(CATISpecObject_var)*,double,CATISpecObject_var)"></a> <dt> o <b>CreateVolumicThickness</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>CreateVolumicThickness</b>(<td> const <a href="../ObjectSpecsModeler/class_CATLISTV(CATISpecObject_var)_141536.htm">CATLISTV(CATISpecObject_var)*</a> <td><tt>ihObjectList</tt>,<tr><td></td><td>double <td><tt>iOffset</tt>,<tr><td></td><td> const <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a> <td><tt>ihSupport</tt>) = 0  </table></dt>
<dl>
  <dd>
 Creates and returns a thickness feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihObjectList</tt>
   <dd>	The list of the faces which corresponds to the shell openings.
 </dd>
    <dt><tt> iOffset</tt>
   <dd>	The offset value.
 </dd>
    <dt><tt> hSupport</tt>
   <dd>    The volumic feature to be operated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Thickness feature.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPrtFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPartInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
