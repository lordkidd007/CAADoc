<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Interface CATIPrtAxis1</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Class Hierarchy</a>  <a href="../PartInterfaces.htm">This Framework</a>  <a href="interface_CATIPrismLimit_39868.htm">Previous</a>  <a href="interface_CATIPrtBooleanFactory_90207.htm">Next</a>  <a href="../HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>PartInterfaces Interface CATIPrtAxis1</h1>
<pre>
CATIPrtAxis1
 </pre>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPrtAxis1</b>
</p>
<p>
<b><i> Interface which provides a direction management behaviour to an axis feature.</i></b><br>

 <b>Role</b>: Some features contain an axis component which allows users to specify 
 and use a direction. This internal feature is managed through this interface.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDirReference()"><b>GetDirReference</b></a>()
<dd>  Returns the reference element which specifies the direction.
 <dt> o 
    <a href="#GetDirection()"><b>GetDirection</b></a>()
<dd>  Returns the mathematical direction.
 <dt> o 
    <a href="#IsReversed()"><b>IsReversed</b></a>()
<dd>  Tests whether the direction is opposite to the reference one or not.
 <dt> o 
    <a href="#ReverseDirection()"><b>ReverseDirection</b></a>()
<dd>  Reverses the specified direction.
 <dt> o 
    <a href="#SetDirection(CATISpecObject_var&amp;)"><b>SetDirection</b></a>(CATISpecObject_var&amp;)
<dd>  Sets a reference element as direction specification.
 <dt> o 
    <a href="#SetDirection(CATMathVector&amp;)"><b>SetDirection</b></a>(CATMathVector&amp;)
<dd>  Sets an absolute direction as specification.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDirReference"></a><a name="GetDirReference()"></a> <dt> o <b>GetDirReference</b>

<dt>  <table><tr><td>  public virtual <a href="../ObjectSpecsModeler/interface_CATISpecObject_38576.htm">CATISpecObject_var</a>  <b>GetDirReference</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the reference element which specifies the direction.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The reference element.
</dl>
</dl>
<a name="GetDirection"></a><a name="GetDirection()"></a> <dt> o <b>GetDirection</b>

<dt>  <table><tr><td>  public virtual <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector</a>  <b>GetDirection</b>(<td>)const = 0  </table></dt>
<dl>
  <dd>
 Returns the mathematical direction.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The direction vector.
</dl>
</dl>
<a name="IsReversed"></a><a name="IsReversed()"></a> <dt> o <b>IsReversed</b>

<dt>  <table><tr><td>  public virtual int  <b>IsReversed</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Tests whether the direction is opposite to the reference one or not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    0 if the direction is the same,
   1 if the direction has been reversed.
</dl>
</dl>
<a name="ReverseDirection"></a><a name="ReverseDirection()"></a> <dt> o <b>ReverseDirection</b>

<dt>  <table><tr><td>  public virtual void  <b>ReverseDirection</b>(<td>)= 0  </table></dt>
<dl>
  <dd>
 Reverses the specified direction.
</dl>
<a name="SetDirection"></a><a name="SetDirection(CATISpecObject_var&amp;)"></a> <dt> o <b>SetDirection</b>

<dt>  <table><tr><td>  public virtual void  <b>SetDirection</b>(<td> const CATISpecObject_var&amp; <td><tt>ihDirection</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets a reference element as direction specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihDirection</tt>
   <dd>   The reference element.</dd>
</dl>
</dl>
</dl>
<a name="SetDirection"></a><a name="SetDirection(CATMathVector&amp;)"></a> <dt> o <b>SetDirection</b>

<dt>  <table><tr><td>  public virtual void  <b>SetDirection</b>(<td> const <a href="../Mathematics/class_CATMathVector_34767.htm">CATMathVector&amp;</a> <td><tt>iDirection</tt>) = 0  </table></dt>
<dl>
  <dd>
 Sets an absolute direction as specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDirection</tt>
   <dd>   The direction vector.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPrtAxis1.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPartInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
