<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Interface CATIPrtTrimFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PartInterfaces.htm" href="../PartInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PartInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIPrtTrimFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PartInterfaces Interface CATIPrtTrimFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPrtTrimFactory_29172','CATIPrtTrimFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPrtTrimFactory</b>
</p>
<p>
<b><i> Class to define advanced boolean operations called trim operations.</i></b><br>

 <b>Role</b>: A boolean operation is an operation between two non operated
 mechanical bodies. The operation will insert iSecond body
 after the last feature 
 of iFirst body, the iFirst body must have at least one feature.
 The trim operation starts with a step of dividing the volumes of the two
 bodies in a set of new volumes (volumes which belong only to iFirst body,
 volumes which belong only to iSecond body, volumes which belong to both
 bodies). 
 The second step consist to take into account a list of specified faces in
 order to define which volumes must be kept or removed.
 <br><b>Precondition</b>:<br>
 - Users must set iFirst body as current body.<br> 
 - The two bodies must be both updated.<br>
 - iSecond body must be different of iFirst body and therefore not be 
 linked to iFirst body (no specification loop is tolered).</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateTrim(CATISpecObject_var,CATISpecObject_var,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*)"><b>CreateTrim</b></a>(CATISpecObject_var,CATISpecObject_var,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*)
<dd>  Trim iSecond body to iFirst body.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateTrim"></a><a name="CreateTrim(CATISpecObject_var,CATISpecObject_var,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*,CATLISTV(CATISpecObject_var)*)"></a> <dt> o <b>CreateTrim</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>CreateTrim</b>(<td><script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirst</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecond</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)*')</script> <td><tt>iRemoveList</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)*')</script> <td><tt>iKeepList</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)*')</script> <td><tt>iRemoveByAdjacentList</tt><td><tt>=0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)*')</script> <td><tt>iAdjacentForRemoveList</tt><td><tt>=0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)*')</script> <td><tt>iKeepByAdjacentList</tt><td><tt>=0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)*')</script> <td><tt>iAdjacentForKeepList</tt><td><tt>=0 </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Trim iSecond body to iFirst body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirst</tt>
   <dd>   Current body.
 </dd>
    <dt><tt> iSecond</tt>
   <dd>   Body to be trimmed to iFirst body. 
   <br> <b>Legal values</b>: if iSecond = NULL_var, the operation is a 
 special trim operation called remove lump operation.
 </dd>
    <dt><tt> iRemoveList</tt>
   <dd>   List of non divided faces by trim operation used to indicate which 
 resulting volumes must be removed. 
 </dd>
    <dt><tt> iKeepList</tt>
   <dd>   List of non divided faces by trim operation used to indicate which 
 resulting volumes must be kept.
 </dd>
    <dt><tt> iRemoveByAdjacentList</tt>
   <dd>   List of divided faces by trim operation used to indicate which 
 resulting volumes must be removed. 
   <br> <b>Legal values</b>:  iRemoveByAdjacentList = 0 
 </dd>
    <dt><tt> iAdjacentForRemoveList</tt>
   <dd>   List of adjacent faces. For each face of iRemoveByAdjacentList list, an
 adjacent face which belongs to the other body is needed.
   <br> <b>Legal values</b>:  iAdjacentForRemoveList = 0   
 </dd>
    <dt><tt> iKeepByAdjacentList</tt>
   <dd>   List of divided faces by trim operation used to indicate which 
 resulting volumes must be kept.
   <br> <b>Legal values</b>:  iKeepByAdjacentList = 0 
 </dd>
    <dt><tt> iAdjacentForKeepList</tt>
   <dd>   List of adjacent faces. For each face of iKeepByAdjacentList list, an
 adjacent face which belongs to the other body is needed. 
   <br> <b>Legal values</b>:  iAdjacentForKeepList = 0
 </dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPrtTrimFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPartInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

