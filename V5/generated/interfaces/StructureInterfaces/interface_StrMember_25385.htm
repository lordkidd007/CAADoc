<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>StructureInterfaces StrMember (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../StructureInterfaces.htm" href="../StructureInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "StructureInterfaces";	}
		function getCurrentObjectName() { 
 	return "StrMember"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>StrMember<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_StrMember_25385','StrMember','0');</script>
<b><i> Represents a member object.</i></b><br>
 The member object aggregates a section coming
 from a catalog, a support and two extremities.

 The member object inherits all methods from the structure object and the 
 product object.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Angle"><b>Angle</b></a>
<dd>  Returns or set the orientation of the section on the support object.
 <dt>
    <a href="#AngleParameter"><b>AngleParameter</b></a>
<dd>  Returns the parameter used to define the orientation of the section on the
 support object.
 <dt>
    <a href="#CurrentAnchorPointName"><b>CurrentAnchorPointName</b></a>
<dd>  Returns or sets the current anchor point used to locate the section on the
 support object.
 <dt>
    <a href="#EndExtremity"><b>EndExtremity</b></a>
<dd>  Returns the member's end extremity object.
 <dt>
    <a href="#InputSupport"><b>InputSupport</b></a>
<dd>  Retrieves the input support.
 <dt>
    <a href="#Section"><b>Section</b></a>
<dd>  Returns or sets the section object.
 <dt>
    <a href="#StartExtremity"><b>StartExtremity</b></a>
<dd>  Returns the member's start extremity object.
 <dt>
    <a href="#Support"><b>Support</b></a>
<dd>  Retrieves the result support object.
 <dt>
    <a href="#SurfaceReference"><b>SurfaceReference</b></a>
<dd>  Retrieves or sets the surface reference object for the member.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateCutback"><b>CreateCutback</b></a>
<dd>  Creates a cutback object between two member objects.
 <dt>
    <a href="#Flip"><b>Flip</b></a>
<dd>  Flips the section.
 <dt>
    <a href="#Rotate"><b>Rotate</b></a>
<dd>   Rotates the section on its support object.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Angle"><dt>

<table><tr><td>o Property <b>Angle</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or set the orientation of the section on the support object.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 angle = Member_1.<font color="red">Angle</font>
 </pre></pre></dd>
</dl>
</dl>
<a name="AngleParameter"><dt>

<table><tr><td>o Property <b>AngleParameter</b>(<td>) As <script type="text/javascript"> activateLink('Parameter','Parameter')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the parameter used to define the orientation of the section on the
 support object.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim angle As Parameter
 Set angle = Member_1.<font color="red">AngleParameter</font>
 </pre></pre></dd>
</dl>
</dl>
<a name="CurrentAnchorPointName"><dt>

<table><tr><td>o Property <b>CurrentAnchorPointName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the current anchor point used to locate the section on the
 support object.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 name = Member_1.<font color="red">CurrentAnchorPointName</font>
 </pre></pre></dd>
</dl>
</dl>
<a name="EndExtremity"><dt>

<table><tr><td>o Property <b>EndExtremity</b>(<td>) As <script type="text/javascript"> activateLink('StrMemberExtremity','StrMemberExtremity')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the member's end extremity object.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim extremity As StrMemberExtremity
 Set extremity = Member_1.<font color="red">EndExtremity</font>
 </pre></pre></dd>
</dl>
</dl>
<a name="InputSupport"><dt>

<table><tr><td>o Property <b>InputSupport</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Retrieves the input support. The input support is the given support at the creation
 of the member.
</dl>
<a name="Section"><dt>

<table><tr><td>o Property <b>Section</b>(<td>) As <script type="text/javascript"> activateLink('StrSection','StrSection')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns or sets the section object.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim section As StrSection
 Set section = Member_1.<font color="red">Section</font>
 </pre></pre></dd>
</dl>
</dl>
<a name="StartExtremity"><dt>

<table><tr><td>o Property <b>StartExtremity</b>(<td>) As <script type="text/javascript"> activateLink('StrMemberExtremity','StrMemberExtremity')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the member's start extremity object.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim extremity As StrMemberExtremity
 Set extremity = Member_1.<font color="red">StartExtremity</font>
 </pre></pre></dd>
</dl>
</dl>
<a name="Support"><dt>

<table><tr><td>o Property <b>Support</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Retrieves the result support object. 

 For example, if your member object is created using two points, the result
 support object will be the line joining these two points.
</dl>
<a name="SurfaceReference"><dt>

<table><tr><td>o Property <b>SurfaceReference</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Retrieves or sets the surface reference object for the member. The 
 section will be oriented using this surface reference object if one is set.
 Nevertheless, the surface reference object can be null.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the reference object to null.
 <pre>
 myMember.<font color="red">SurfaceReference</font> = Nothing
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateCutback"><dt>

<table><tr><td>o Func <b>CreateCutback</b>(<td><script type="text/javascript"> activateLink('StrMember','StrMember')</script> <td><tt>iMember</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrCutbackType','CatStrCutbackType')</script> <td><tt>iCutback</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>) As <script type="text/javascript"> activateLink('StrCutback','StrCutback')</script> </table></dt>
<dl>
  <dd>
 Creates a cutback object between two member objects.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMember</tt>
   <dd>	The relimiting member
 </dd>
    <dt><tt> iCutback</tt>
   <dd>	The type of the cutback.
 </dd>
    <dt><tt> iOffset</tt>
   <dd>	The offset used in the cutback.

 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  The following example create a cutback 
 
 <pre>
 Dim cutback As StrCutback
 Set cutback = Member_1.<font color="red">CreateCutback</font>(Member_2, catStrWeldedType, 0.05)  
 </pre></pre></dd>
</dl>
</dl>
<a name="Flip"><dt>

<table><tr><td>o Sub <b>Flip</b>(<td>)</table></dt>
<dl>
  <dd>
 Flips the section. Useful for asymetric section as the angle section, or the channel
 section.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Member_1.<font color="red">Rotate</font>(1,25)
 </pre></pre></dd>
</dl>
</dl>
<a name="Rotate"><dt>

<table><tr><td>o Sub <b>Rotate</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>)</table></dt>
<dl>
  <dd>
  Rotates the section on its support object. The given angle is applied using
 the current orientation of the section.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim extremity As StrMemberExtremity
 Set extremity = Member_1.<font color="red">StartExtremity</font>
 </pre></pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

