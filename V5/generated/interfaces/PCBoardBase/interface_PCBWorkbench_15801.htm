<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PCBoardBase PCBWorkbench (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PCBoardBase.htm" href="../PCBoardBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PCBoardBase";	}
		function getCurrentObjectName() { 
 	return "PCBWorkbench"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PCBWorkbench<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PCBWorkbench_15801','PCBWorkbench','0');</script>
<b><i>   Interface to access  Circuit Board Design workbench object.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateBoard"><b>CreateBoard</b></a>
<dd>  Allows to create a Board.
 <dt>
    <a href="#CreateComponent"><b>CreateComponent</b></a>
<dd>  Allows to create a Component.
 <dt>
    <a href="#CreatePanel"><b>CreatePanel</b></a>
<dd>  Allows to create a panel.
 <dt>
    <a href="#GetRootProduct"><b>GetRootProduct</b></a>
<dd>   Allows to get the root product of a document.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateBoard"><dt>

<table><tr><td>o Func <b>CreateBoard</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>iRoot</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Allows to create a Board.
  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRoot</tt>
   <dd>  Root product of the Part to extend
 </dd>
    <dt><tt> oBoard</tt>
   <dd>  The board created
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <UL>          <LH>The result of the method:
         <LI>S_OK if succeeded
         <LI>E_FAIL if failed
         </UL>
</dl>
</dl>
<a name="CreateComponent"><dt>

<table><tr><td>o Func <b>CreateComponent</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>iRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iElecPackageNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iElecPartNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iElecType</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Allows to create a Component.
  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRoot</tt>
   <dd>  Root product of the Part to extend
 </dd>
    <dt><tt> iElecPackageNumber</tt>
   <dd> The package number used to valuate the component attribute
 </dd>
    <dt><tt> iElecPartNumber</tt>
   <dd> The part number used to valuate the part number of the component
 </dd>
    <dt><tt> iElecType</tt>
   <dd>  The Type of the component to create : ELECTRICAL or MECHANICAL
 </dd>
    <dt><tt> oComponent</tt>
   <dd>  The Component created
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <UL>          <LH>The result of the method:
         <LI>S_OK if succeeded
         <LI>E_FAIL if failed
         </UL>
</dl>
</dl>
<a name="CreatePanel"><dt>

<table><tr><td>o Func <b>CreatePanel</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>iRoot</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Allows to create a panel.
  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRoot</tt>
   <dd>  Root product of the Part to extend
 </dd>
    <dt><tt> oPanel</tt>
   <dd>  The panel created
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <UL>          <LH>The result of the method:
         <LI>S_OK if succeeded
         <LI>E_FAIL if failed
         </UL>
</dl>
</dl>
<a name="GetRootProduct"><dt>

<table><tr><td>o Func <b>GetRootProduct</b>(<td><script type="text/javascript"> activateLink('Document','Document')</script> <td><tt>doc</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
  Allows to get the root product of a document.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> doc</tt>
   <dd> The document to scan
 </dd>
    <dt><tt> oRoot</tt>
   <dd> The root product of the document scanned
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <UL>          <LH>The result of the method:
         <LI>S_OK if succeeded
         <LI>E_FAIL if failed
         </UL>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

