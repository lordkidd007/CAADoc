<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SpaceAnalysisInterfaces Inertia (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SpaceAnalysisInterfaces.htm" href="../SpaceAnalysisInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SpaceAnalysisInterfaces";	}
		function getCurrentObjectName() { 
 	return "Inertia"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Inertia<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Inertia_32321','Inertia','0');</script>
<b><i>   Represents the Inertia object.</i></b><br>

 The Inertia object can be associated with any relevant object of a document
 in order to get or compute its inertia data. It takes into account all bodies of a part.
 <p>This version allows you to compute the following data:
 <ul>
 <li>mass
 <li>density
 <li>position of the center of gravity
 <li>inertia matrix
 <li>principal axes
 <li>principal moments
 </ul>
 of a product.
 <p>The units are:
 <ul>
 <li>Kilogram (Kg) for Mass
 <li>Square meter (M^2) for Wet Area
 <li>Cubic meter (M^3) for Volume
 <li>Meter (M) for Position
 <li>Square Kilogram meter ((KgM)^2) for Inertia Matrix and Principal Moments
 <li>Kilogram per cubic meter (Kg/M^3) for Density
 </ul>
 <p>The method <tt>GetTechnologicalObject("Inertia")</tt> on the product to analyze, allows you to retrieve this object.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Density"><b>Density</b></a>
<dd>  Returns or sets the density for the computation.
 <dt>
    <a href="#GranularityMode"><b>GranularityMode</b></a>
<dd>  Returns or sets the Granularity Mode for Inertia Computation.
 <dt>
    <a href="#Mass"><b>Mass</b></a>
<dd>  Returns the mass.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetCOGPosition"><b>GetCOGPosition</b></a>
<dd>  Retrieves the position of the center of gravity.
 <dt>
    <a href="#GetInertiaMatrix"><b>GetInertiaMatrix</b></a>
<dd>  Retrieves the matrix of inertia.
 <dt>
    <a href="#GetPrincipalAxes"><b>GetPrincipalAxes</b></a>
<dd>  Retrieves the the principal axes of inertia.
 <dt>
    <a href="#GetPrincipalMoments"><b>GetPrincipalMoments</b></a>
<dd>  Retrieves the principal moments of inertia.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Density"><dt>

<table><tr><td>o Property <b>Density</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the density for the computation.
 <p>The density value is set to:
 <ul>
 <li>0: the computation must use densities attached to each object.
 <li>any positive value: the computation has to use this value.
 </ul>
 <p>The density value is returned as:
 <ul>
 <li>1: a default value is used (there is no density attached to objects).
 <li>-1: the density is not homogeneous for each object.
 <li>other positive values: the density attached to all objects.
 </ul>
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">     The first example gets the density of <tt>NewInertia</tt> inertia.
    <pre>
    Dim ADensity As double
    ADensity = NewInertia.<font color="red">Density</font>
    </pre>
    <dd>
    The second example sets the density of <tt>NewInertia</tt> inertia.
    <pre>
    NewInertia.<font color="red">Density</font> = 10.
    </pre></pre></dd>
</dl>
</dl>
<a name="GranularityMode"><dt>

<table><tr><td>o Property <b>GranularityMode</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the Granularity Mode for Inertia Computation.
 <p>The Granularity value is set to:
 <ul>
 <li>0: Only main bodies option is selected => the computation must not use All bodies. 
 <li>1: Only main bodies option is not selected => the computation must use All bodies. 
 </ul>
 <p>The Granularity value is returned as:
 <ul>
 <li>0: the computation had considered only main bodies. 
 <li>1: the computation had not considered only main bodies. 
 </ul>
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">     The first example gets the Granularity of <tt>NewInertia</tt> inertia.
    <pre>
    Dim AGranularityMode As Integer
    AGranularityMode = NewInertia.<font color="red">GranularityMode</font>
    </pre>
    <dd>
    The second example sets the Granularity of <tt>NewInertia</tt> inertia to deselect the "only main bodies".
    <pre>
    NewInertia.<font color="red">GranularityMode</font> = 1
    </pre></pre></dd>
</dl>
</dl>
<a name="Mass"><dt>

<table><tr><td>o Property <b>Mass</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the mass.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example retrieves the mass of <tt>NewInertia</tt> inertia.
    <pre>
    Dim AMass As double
    AMass = NewInertia.<font color="red">Mass</font>
    </pre></pre></dd>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetCOGPosition"><dt>

<table><tr><td>o Sub <b>GetCOGPosition</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oCoordinates</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the position of the center of gravity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoordinates</tt>
   <dd>    The position of the center of gravity with respect to the product coordinate system:
    <ul>
    <li>oCoordinates(0) is the X coordinate
    <li>oCoordinates(1) is the Y coordinate
    <li>oCoordinates(2) is the Z coordinate
    </ul>
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example retrieves the position of the center of gravity of <tt>NewInertia</tt> inertia.
    <pre>
    Dim Coordinates (2)
    NewInertia.<font color="red">GetCOGPosition</font> Coordinates
    </pre></pre></dd>
</dl>
</dl>
<a name="GetInertiaMatrix"><dt>

<table><tr><td>o Sub <b>GetInertiaMatrix</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oMatrix</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the matrix of inertia.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMatrix</tt>
   <dd>    The matrix of inertia array:
    <ul>
    <li>oMatrix(0) is the Ixx component
    <li>oMatrix(1) is the Ixy component
    <li>oMatrix(2) is the Ixz component
    <li>oMatrix(3) is the Iyx component
    <li>oMatrix(4) is the Iyy component
    <li>oMatrix(5) is the Iyz component
    <li>oMatrix(6) is the Izx component
    <li>oMatrix(7) is the Izy component
    <li>oMatrix(8) is the Izz component
    </ul>
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example retrieves the matrix of inertia of <tt>NewInertia</tt> inertia.
    <pre>
    Dim Matrix (8)
    NewInertia.<font color="red">GetInertiaMatrix</font> Matrix
    </pre></pre></dd>
</dl>
</dl>
<a name="GetPrincipalAxes"><dt>

<table><tr><td>o Sub <b>GetPrincipalAxes</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oComponents</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the the principal axes of inertia.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oComponents</tt>
   <dd>    The principal axes of inertia array (A1, A2 and A3 are the principal axes of inertia):
    <ul>
    <li>oComponents(0) is the A1x component
    <li>oComponents(1) is the A2x component
    <li>oComponents(2) is the A3x component
    <li>oComponents(3) is the A1y component
    <li>oComponents(4) is the A2y component
    <li>oComponents(5) is the A3y component
    <li>oComponents(6) is the A1z component
    <li>oComponents(7) is the A2z component
    <li>oComponents(8) is the A3z component
    </ul>
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example retrieves the principal axes of inertia of <tt>NewInertia</tt> inertia.
    <pre>
    Dim Components (8)
    NewInertia.<font color="red">GetPrincipalAxes</font> Components
    </pre></pre></dd>
</dl>
</dl>
<a name="GetPrincipalMoments"><dt>

<table><tr><td>o Sub <b>GetPrincipalMoments</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oValues</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the principal moments of inertia.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oValues</tt>
   <dd>    The principal moments of inertia array:
    <ul>
    <li>oValues(0) is the M1 value with respect to the first principal exes of inertia
    <li>oValues(1) is the M2 value with respect to the second principal exes of inertia
    <li>oValues(2) is the M3 value with respect to the third principal exes of inertia
    </ul>
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example retrieves principal moments of inertia of <tt>NewInertia</tt> inertia.
    <pre>
    Dim Values (2)
    NewInertia.<font color="red">GetPrincipalMoments</font> Values
    </pre></pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

