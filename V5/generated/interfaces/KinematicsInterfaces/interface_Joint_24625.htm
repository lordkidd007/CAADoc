<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KinematicsInterfaces Joint (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KinematicsInterfaces.htm" href="../KinematicsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KinematicsInterfaces";	}
		function getCurrentObjectName() { 
 	return "Joint"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Joint<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Joint_24625','Joint','0');</script>
<b><i> Interface to manage the Joint object.</i></b><br>

 Depending on their type, joints have parameters or not, representing length or angle:
 <table>
  <tr><td><b>Joint type</b></td> <td><b>Parameter1</b></td>  <td><b>Parameter2</b></td></tr>
  <tr><td>Revolute</td>          <td>Angle</td>              <td> </td>                </tr>
  <tr><td>Prismatic</td>         <td>Length</td>             <td> </td>                </tr>
  <tr><td>Cylindrical</td>       <td>Length</td>             <td>Angle</td>            </tr> 
  <tr><td>Screw</td>             <td>Length</td>             <td>Angle</td>            </tr> 
  <tr><td>Gear</td>              <td>Angle</td>              <td>Angle</td>            </tr>
  <tr><td>Rack</td>              <td>Length</td>             <td>Angle</td>            </tr>
  <tr><td>Cable</td>             <td>Length</td>             <td>Length</td>           </tr>
  <tr><td>PointOnCurve</td>      <td>Length</td>             <td> </td>                </tr>
  <tr><td>RollCurve</td>         <td>Length</td>             <td> </td>                </tr>
 </table>
 <p>Each parameter can have a lower and/or an upper limit. 
 <p>Methods are provided to set, unset and return the limits for each parameter.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#CurrentValue1"><b>CurrentValue1</b></a>
<dd>  Gets the joint current value for first parameter.
 <dt>
    <a href="#CurrentValue2"><b>CurrentValue2</b></a>
<dd>  Gets the joint current value for second parameter.
 <dt>
    <a href="#LowerLimit1"><b>LowerLimit1</b></a>
<dd>  Gets or returns the lower limit of the joint, for the first parameter.
 <dt>
    <a href="#LowerLimit2"><b>LowerLimit2</b></a>
<dd>  Gets or returns the lower limit of the joint, for the second parameter.
 <dt>
    <a href="#Type"><b>Type</b></a>
<dd>  Returns the joint type.
 <dt>
    <a href="#UpperLimit1"><b>UpperLimit1</b></a>
<dd>  Gets or returns the upper limit of the joint, for the first parameter.
 <dt>
    <a href="#UpperLimit2"><b>UpperLimit2</b></a>
<dd>  Gets or returns the upper limit of the joint, for the second parameter.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#UnsetLowerLimit1"><b>UnsetLowerLimit1</b></a>
<dd>  Unsets the lower limit of the joint, for the first parameter.
 <dt>
    <a href="#UnsetLowerLimit2"><b>UnsetLowerLimit2</b></a>
<dd>  Unsets the lower limit of the joint, for the second parameter.
 <dt>
    <a href="#UnsetUpperLimit1"><b>UnsetUpperLimit1</b></a>
<dd>  Unsets the upper limit of the joint, for the first parameter.
 <dt>
    <a href="#UnsetUpperLimit2"><b>UnsetUpperLimit2</b></a>
<dd>  Unsets the upper limit of the joint, for the second parameter.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="CurrentValue1"><dt>

<table><tr><td>o Property <b>CurrentValue1</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Gets the joint current value for first parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCurrentValue</tt>
   <dd> This property is read only because current value modification is done by solver</dd>
</dl>
</dl>
</dl>
<a name="CurrentValue2"><dt>

<table><tr><td>o Property <b>CurrentValue2</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Gets the joint current value for second parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCurrentValue</tt>
   <dd> This property is read only because current value modification is done by solver</dd>
</dl>
</dl>
</dl>
<a name="LowerLimit1"><dt>

<table><tr><td>o Property <b>LowerLimit1</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Gets or returns the lower limit of the joint, for the first parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
 When reading, an error is returned if the joint type has no such parameter, or if the limit is unset.</dd>
</dl>
</dl>
</dl>
<a name="LowerLimit2"><dt>

<table><tr><td>o Property <b>LowerLimit2</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Gets or returns the lower limit of the joint, for the second parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
 When reading, an error is returned if the joint type has no such parameter, or if the limit is unset.</dd>
</dl>
</dl>
</dl>
<a name="Type"><dt>

<table><tr><td>o Property <b>Type</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the joint type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>     The type of the joint
 This property is read only because the construction of the object depends on the type.</dd>
</dl>
</dl>
</dl>
<a name="UpperLimit1"><dt>

<table><tr><td>o Property <b>UpperLimit1</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Gets or returns the upper limit of the joint, for the first parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
 When reading, an error is returned if the joint type has no such parameter, or if the limit is unset.</dd>
</dl>
</dl>
</dl>
<a name="UpperLimit2"><dt>

<table><tr><td>o Property <b>UpperLimit2</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Gets or returns the upper limit of the joint, for the second parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
 When reading, an error is returned if the joint type has no such parameter, or if the limit is unset.</dd>
</dl>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="UnsetLowerLimit1"><dt>

<table><tr><td>o Sub <b>UnsetLowerLimit1</b>(<td>)</table></dt>
<dl>
  <dd>
 Unsets the lower limit of the joint, for the first parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit
 When reading, an error is returned if the joint type has no such parameter, or if the limit is unset.</dd>
</dl>
</dl>
</dl>
<a name="UnsetLowerLimit2"><dt>

<table><tr><td>o Sub <b>UnsetLowerLimit2</b>(<td>)</table></dt>
<dl>
  <dd>
 Unsets the lower limit of the joint, for the second parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit</dd>
</dl>
</dl>
</dl>
<a name="UnsetUpperLimit1"><dt>

<table><tr><td>o Sub <b>UnsetUpperLimit1</b>(<td>)</table></dt>
<dl>
  <dd>
 Unsets the upper limit of the joint, for the first parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit</dd>
</dl>
</dl>
</dl>
<a name="UnsetUpperLimit2"><dt>

<table><tr><td>o Sub <b>UnsetUpperLimit2</b>(<td>)</table></dt>
<dl>
  <dd>
 Unsets the upper limit of the joint, for the second parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitValue</tt>
   <dd>     The value for the limit</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

