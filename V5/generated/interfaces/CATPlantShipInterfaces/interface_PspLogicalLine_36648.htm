<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPlantShipInterfaces PspLogicalLine (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPlantShipInterfaces.htm" href="../CATPlantShipInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPlantShipInterfaces";	}
		function getCurrentObjectName() { 
 	return "PspLogicalLine"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PspLogicalLine<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PspLogicalLine_36648','PspLogicalLine','0');</script>
<b><i> Represents the logical line.</i></b><br>

 <b>Role</b>: To query the logical line object's from/to members.<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetFromTo"><b>GetFromTo</b></a>
<dd>  Retrieves the lists of major and minor from/to members from this line.
 <dt>
    <a href="#GetFromToInfoArrayMaxSize"><b>GetFromToInfoArrayMaxSize</b></a>
<dd>  Returns the maximum possible size of the from-to information.
 <dt>
    <a href="#GetFromToInformation"><b>GetFromToInformation</b></a>
<dd>  Retrieves the from/to information of a logical line.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetFromTo"><dt>

<table><tr><td>o Sub <b>GetFromTo</b>(<td><script type="text/javascript"> activateLink('PspListOfObjects','PspListOfObjects')</script> <td><tt>oListFromMajor</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PspListOfObjects','PspListOfObjects')</script> <td><tt>oListFromMinor</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PspListOfObjects','PspListOfObjects')</script> <td><tt>oListToMajor</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PspListOfObjects','PspListOfObjects')</script> <td><tt>oListToMinor</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the lists of major and minor from/to members from this line.
 <br>The members retrieved are all 
<script type="text/javascript"> activateLinkAnchor('PspGroupable','','PspGroupable') </script> objects. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListFromMajor</tt>
   <dd>   The list of major from members
 </dd>
    <dt><tt> oListFromMinor</tt>
   <dd>   The list of minor from members
 </dd>
    <dt><tt> oListToMajor</tt>
   <dd>   The list of major to members
 </dd>
    <dt><tt> oListToMinor</tt>
   <dd>   The list of minor to members
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As PspLogicalLine  
 Dim objArg1 As PspListOfObjects
 Dim objArg2 As PspListOfObjects
 Dim objArg3 As PspListOfObjects
 Dim objArg4 As PspListOfObjects
 ...
 objThisIntf.<font color="red">GetFromTo</font> objArg1, objArg2, objArg3, objArg4
 </pre></pre></dd>
</dl>
</dl>
<a name="GetFromToInfoArrayMaxSize"><dt>

<table><tr><td>o Func <b>GetFromToInfoArrayMaxSize</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the maximum possible size of the from-to information.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The maximum possible size of the array to hold the information returned
   by 
<script type="text/javascript"> activateLinkAnchor('','GetFromToInformation','GetFromToInformation') </script> 
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As PspLogicalLine  
 Dim intValueMaxSize As Integer
 ...
 intValueMaxSize = objThisIntf.<font color="red">GetFromToInfoArrayMaxSize</font> 
 </pre></pre></dd>
</dl>
</dl>
<a name="GetFromToInformation"><dt>

<table><tr><td>o Sub <b>GetFromToInformation</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oFromToLabel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oFTMajor</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oFTMinor</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>oSizeOfOutput</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the from/to information of a logical line.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFromToLabel</tt>
   <dd>   The array of labels ("From" or "To")
 </dd>
    <dt><tt> oFTMajor</tt>
   <dd>   The array of from/to major IDs
 </dd>
    <dt><tt> oFTMinor</tt>
   <dd>   The array of from/to minor IDs
 </dd>
    <dt><tt>   The</tt>
   <dd> size of the output arrays
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As PspLogicalLine  
 Dim strFromToLabel(20) As String
 Dim strFromToMajor(20) As String
 Dim strFromToMinor(20) As String
 Dim intValueMaxSize As Integer
 intValueMaxSize = objThisIntf.<font color="red">GetFromToInfoArrayMaxSize</font>
 ... 
 '----  make sure the array size if big enough
 If (intValueMaxSize &le; 20)  Then
    objThisIntf.<font color="red">GetFromToInformation</font> _
      strFromToLabel, strFromToMajor, strFromToMinor, intValueMaxSize
 End If

 The following table can then be filled with the output arrays.
 
    From/To        |   F/T Major       |    F/T Minor
 strFromToLabel(i) | strFromToMajor(i) |  strFromToMinor(i)

 </pre></pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

