<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Drafting2DLInterfaces Layout2DSheet (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../Drafting2DLInterfaces.htm" href="../Drafting2DLInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "Drafting2DLInterfaces";	}
		function getCurrentObjectName() { 
 	return "Layout2DSheet"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Layout2DSheet<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Layout2DSheet_32096','Layout2DSheet','0');</script>
<b><i> The interface to access a Layout2D Sheet.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Orientation"><b>Orientation</b></a>
<dd>  Returns or sets the paper orientation.
 <dt>
    <a href="#PageSetup"><b>PageSetup</b></a>
<dd>  Returns the page setup.
 <dt>
    <a href="#PaperHeight"><b>PaperHeight</b></a>
<dd>  Gets or Sets the paper width of the layout sheet.
 <dt>
    <a href="#PaperName"><b>PaperName</b></a>
<dd>  Returns or sets the paper format name.
 <dt>
    <a href="#PaperSize"><b>PaperSize</b></a>
<dd>  Returns or sets the paper size.
 <dt>
    <a href="#PaperWidth"><b>PaperWidth</b></a>
<dd>  Gets or Sets the paper width of the layout sheet.
 <dt>
    <a href="#PrintArea"><b>PrintArea</b></a>
<dd>  Returns the print area definition object.
 <dt>
    <a href="#ProjectionMethod"><b>ProjectionMethod</b></a>
<dd>  Returns or sets the sheet projection mode .
 <dt>
    <a href="#SheetScale"><b>SheetScale</b></a>
<dd>  Returns or sets the scale of the Layout2D sheet.
 <dt>
    <a href="#Views"><b>Views</b></a>
<dd>  Returns the Layout2D view collection of the Layout2D sheet.
 <dt>
    <a href="#VisuIn3D"><b>VisuIn3D</b></a>
<dd>  Set/Get the 3D visualization mode of the sheet in the 3D Viewer
 ie in the 3D windows and in the background of each view in every 2D context.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Activate"><b>Activate</b></a>
<dd>  Activates the Layout2D sheet.
 <dt>
    <a href="#IsDetail"><b>IsDetail</b></a>
<dd>  Checks whether the sheet is a detail sheet.
 <dt>
    <a href="#PrintOut"><b>PrintOut</b></a>
<dd>  Prints the Layout2D sheet according to its page setup on the default printer.
 <dt>
    <a href="#PrintOut2"><b>PrintOut2</b></a>
<dd>  Prints the Layout2D sheet according to its page setup on the default printer.
 <dt>
    <a href="#PrintToFile"><b>PrintToFile</b></a>
<dd>  Prints the Layout2D sheet according its page setup 
 in a file instead of being sent to a printer.
 <dt>
    <a href="#PrintToFile2"><b>PrintToFile2</b></a>
<dd>  Prints the Layout2D sheet according its page setup 
 in a file instead of being sent to a printer.
 <dt>
    <a href="#reorder_Views"><b>reorder_Views</b></a>
<dd>  Changes the positions of the views in this sheet according to the given 
 ordered list.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Orientation"><dt>

<table><tr><td>o Property <b>Orientation</b>(<td>) As <script type="text/javascript"> activateLink('CatPaperOrientation','CatPaperOrientation')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the paper orientation.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the paper orientation for the <tt>MySheet</tt>
 Layout2D sheet to <tt>catPaperLandscape</tt>.
 <pre>
 MySheet.<font color="red">Orientation</font> = catPaperLandscape
 </pre>
 </dl>
</dl>
<a name="PageSetup"><dt>

<table><tr><td>o Property <b>PageSetup</b>(<td>) As <script type="text/javascript"> activateLink('DrawingPageSetup','DrawingPageSetup')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the page setup.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the page setup for the <tt>MySheet</tt>
 Layout2D sheet.
 <pre>
 Dim MySheetPageSetup As DrawingPageSetup
 Set MySheetPageSetup = MySheet.<font color="red">PageSetup</font>
 </pre>
 </dl>
</dl>
<a name="PaperHeight"><dt>

<table><tr><td>o Property <b>PaperHeight</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Gets or Sets the paper width of the layout sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPaperHeight</tt>
   <dd> <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example get the height of the <tt>Layout2DSheet1</tt>.
 <pre>
 Layout2DSheet1.<font color="red">GetPaperHeight</font> oPaperHeight
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="PaperName"><dt>

<table><tr><td>o Property <b>PaperName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the paper format name.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the paper format name for the <tt>MySheet</tt>
 Layout2D sheet to <tt>DSFormat1</tt>.
 <pre>
 MySheet.<font color="red">PaperName</font> = DSFormat1
 </pre>
 </dl>
</dl>
<a name="PaperSize"><dt>

<table><tr><td>o Property <b>PaperSize</b>(<td>) As <script type="text/javascript"> activateLink('CatPaperSize','CatPaperSize')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the paper size.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the page size for the <tt>MySheet</tt>
 Layout2D sheet to <tt>catPaperA4</tt>.
 <pre>
 MySheet.<font color="red">PaperSize</font> = catPaperA4
 </pre>
 </dl>
</dl>
<a name="PaperWidth"><dt>

<table><tr><td>o Property <b>PaperWidth</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Gets or Sets the paper width of the layout sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPaperWidth</tt>
   <dd> <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example get the width of the <tt>Sheet1</tt>.
 <pre>
 Sheet1.<font color="red">GetPaperWidth</font> oPaperWidth
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="PrintArea"><dt>

<table><tr><td>o Property <b>PrintArea</b>(<td>) As <script type="text/javascript"> activateLink('PrintArea','PrintArea')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the print area definition object.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the print area for the <tt>MySheet</tt>
 Layout2D sheet 2DL.
 <pre>
 Dim MyPrintArea As PrintArea
 Set MyPrintArea = MySheet.<font color="red">PrintArea</font>
 </pre>
 </dl>
</dl>
<a name="ProjectionMethod"><dt>

<table><tr><td>o Property <b>ProjectionMethod</b>(<td>) As <script type="text/javascript"> activateLink('CatSheetProjectionMethod','CatSheetProjectionMethod')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the sheet projection mode .
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the projection mode of the <tt>MySheet</tt> Layout2D sheet to catFirstAngle.
 <pre>
 MySheet.<font color="red">ProjectionMethod</font> = catFirstAngle
 </pre>
 </dl>
</dl>
<a name="SheetScale"><dt>

<table><tr><td>o Property <b>SheetScale</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the scale of the Layout2D sheet.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the scale of the <tt>MySheet</tt> Layout2D sheet to 0.5.
 <pre>
 MySheet.<font color="red">SheetScale</font> = 0.5
 </pre>
 </dl>
</dl>
<a name="Views"><dt>

<table><tr><td>o Property <b>Views</b>(<td>) As <script type="text/javascript"> activateLink('Layout2DViews','Layout2DViews')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the Layout2D view collection of the Layout2D sheet.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ViewCollection</tt> the collection of
 views 2DL of the <tt>MySheet</tt> Layout2D sheet.
 <pre>
 Dim ViewCollection As Layout2DViews
 Set ViewCollection = MySheet.<font color="red">Views</font>.
 </pre>
 </dl>
</dl>
<a name="VisuIn3D"><dt>

<table><tr><td>o Property <b>VisuIn3D</b>(<td>) As <script type="text/javascript"> activateLink('CatVisuIn3DMode','CatVisuIn3DMode')</script> </table></dt>
<dl>
  <dd>
 Set/Get the 3D visualization mode of the sheet in the 3D Viewer
 ie in the 3D windows and in the background of each view in every 2D context.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CatVisuIn3DMode','','CatVisuIn3DMode') </script>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Activate"><dt>

<table><tr><td>o Sub <b>Activate</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the Layout2D sheet.
 Activating a Layout2D sheet means that this Layout2D sheet is the one on which
 the end user is now working.
 The window in the application's window collection which contains this
 Layout2D sheet becomes the active one.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the <tt>MySheet</tt> layout2dsheet.
 <pre>
 MySheet.<font color="red">Activate</font>
 </pre>
 </dl>
</dl>
<a name="IsDetail"><dt>

<table><tr><td>o Func <b>IsDetail</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Checks whether the sheet is a detail sheet.
 <br>TRUE if the sheet is a detail sheet.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example checks whether <tt>MySheet</tt> is a detail sheet.
 <pre>
 IsDetail = MySheet.<font color="red">IsDetail</font>
 </pre>
 </dl>
</dl>
<a name="PrintOut"><dt>

<table><tr><td>o Sub <b>PrintOut</b>(<td><script type="text/javascript"> activateLink('CatRenderingMode','CatRenderingMode')</script> <td><tt>iRenderingMode</tt>)</table></dt>
<dl>
  <dd>
 Prints the Layout2D sheet according to its page setup on the default printer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRenderingMode</tt>
   <dd>   The rendering mode to use for the backgrounds of the views in the sheet.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the <tt>Layout2DSheet1</tt> 
 on the default printer.
 <pre>
 Layout2DSheet1.<font color="red">PrintOut</font> catRenderShadingWithEdges
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="PrintOut2"><dt>

<table><tr><td>o Sub <b>PrintOut2</b>(<td>)</table></dt>
<dl>
  <dd>
 Prints the Layout2D sheet according to its page setup on the default printer.
 If a rendering mode has been stored on the 2D Layout, it is used during print
 process for the backgrounds. Otherwise, "Shading with edges" rendering mode is used.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the <tt>Layout2DSheet1</tt> 
 on the default printer.
 <pre>
 Layout2DSheet1.<font color="red">PrintOut2</font>
 </pre>
 </dl>
</dl>
<a name="PrintToFile"><dt>

<table><tr><td>o Sub <b>PrintToFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>fileName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatRenderingMode','CatRenderingMode')</script> <td><tt>iRenderingMode</tt>)</table></dt>
<dl>
  <dd>
 Prints the Layout2D sheet according its page setup 
 in a file instead of being sent to a printer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> fileName</tt>
   <dd>   The full pathname of the file receiving the data.
 </dd>
    <dt><tt> iRenderingMode</tt>
   <dd>   The rendering mode to use for the backgrounds of the views in the sheet.
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the <tt>Layout2DSheet1</tt> 
 in a file.
 <pre>
 Layout2DSheet1.<font color="red">PrintToFile</font> "e:\temp\sheet1.prn",catRenderShadingWithEdges
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="PrintToFile2"><dt>

<table><tr><td>o Sub <b>PrintToFile2</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>fileName</tt>)</table></dt>
<dl>
  <dd>
 Prints the Layout2D sheet according its page setup 
 in a file instead of being sent to a printer.
 If a rendering mode has been stored on the 2D Layout, it is used during print
 process for the backgrounds. Otherwise, "Shading with edges" rendering mode is used.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> fileName</tt>
   <dd> The full pathname of the file receiving the data.
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the <tt>Layout2DSheet1</tt> 
 in a file.
 <pre>
 Layout2DSheet1.<font color="red">PrintToFile2</font> "e:\temp\sheet1.prn"
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="reorder_Views"><dt>

<table><tr><td>o Sub <b>reorder_Views</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iOrderedViews</tt>)</table></dt>
<dl>
  <dd>
 Changes the positions of the views in this sheet according to the given 
 ordered list.
 iOrderedViews is the result of a permutation applied to 
 the list of <b>all</b> the views of this sheet with the following
 constraint: the two first elements of the list must be 
 respectively the sheet's mainview and background view.

 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd> 
 This example modifies the  views order of a sheet made of 
 a mainview, a backgroundview and two user-created views.
 (user-created views are inverted).
 <pre>
 Set drw =  CATIA.ActiveDocument.Part.GetItem("CATLayoutRoot")
 Set drwviewsorder = drwsheetsorder.Sheets.ActiveSheet
 Set drwviews = drwviewsorder.Views
 Set mainview = drwviews.item(1)
 Set backview = drwviews.item(2)
 Set view1 = drwviews.item(3)
 Set view2 = drwviews.item(4)
 newvieworder = Array(mainview, backview, view2, view1)
 drwviewsorder.<font color="red">reorder_Views</font>(newvieworder)
 </pre>
 </dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

