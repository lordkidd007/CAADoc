<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBHumanModelingInterfaces SWKSegment (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBHumanModelingInterfaces.htm" href="../DNBHumanModelingInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBHumanModelingInterfaces";	}
		function getCurrentObjectName() { 
 	return "SWKSegment"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SWKSegment<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SWKSegment_41824','SWKSegment','0');</script>
<b><i>  This interface deals with a segment of a manikin.</i></b><br>

<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#AttachSize"><b>AttachSize</b></a>
<dd>  Returns the number of objects currently attached to the segment.
 <dt>
    <a href="#EndPositionX"><b>EndPositionX</b></a>
<dd>  Returns the global x coordinate of the endpoint of the segment.
 <dt>
    <a href="#EndPositionY"><b>EndPositionY</b></a>
<dd>  Returns the global y coordinate of the endpoint of the segment.
 <dt>
    <a href="#EndPositionZ"><b>EndPositionZ</b></a>
<dd>  Returns the global z coordinate of the endpoint of the segment.
 <dt>
    <a href="#IsDOFAt0"><b>IsDOFAt0</b></a>
<dd>  Returns <code><strong>True</strong></code> if there is a DOF
 at index 0, <code><strong>False</strong></code> otherwise.
 <dt>
    <a href="#IsDOFAt1"><b>IsDOFAt1</b></a>
<dd>  Returns <code><strong>True</strong></code> if there is a DOF
 at index 1, <code><strong>False</strong></code> otherwise.
 <dt>
    <a href="#IsDOFAt2"><b>IsDOFAt2</b></a>
<dd>  Returns <code><strong>True</strong></code> if there is a DOF
 at index 2, <code><strong>False</strong></code> otherwise.
 <dt>
    <a href="#IsOnHand"><b>IsOnHand</b></a>
<dd>  This property is <strong>True</strong> if this segment belongs to
 the manikin's hand.
 <dt>
    <a href="#IsOnLeftSide"><b>IsOnLeftSide</b></a>
<dd>  This property is <strong>True</strong> if this segment is on the
 left side of the manikin.
 <dt>
    <a href="#IsOnRightSide"><b>IsOnRightSide</b></a>
<dd>  This property is <strong>True</strong> if this segment is on the
 right side of the manikin.
 <dt>
    <a href="#IsOnSpine"><b>IsOnSpine</b></a>
<dd>  This property is <strong>True</strong> if this segment belongs to
 the manikin's spine.
 <dt>
    <a href="#Length"><b>Length</b></a>
<dd>  Returns the length of the segment, in centimeters.
 <dt>
    <a href="#MirrorSegment"><b>MirrorSegment</b></a>
<dd>  This property returns the equivalent segment, but on the
 opposite side (ex.
 <dt>
    <a href="#NbDOFs"><b>NbDOFs</b></a>
<dd>  Returns the number of degrees of freedom on the current segment.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#ApplyPosition"><b>ApplyPosition</b></a>
<dd>    Applies a new relative position for the segment.
 <dt>
    <a href="#Attach"><b>Attach</b></a>
<dd>  Attach a geometry to the segment.
 <dt>
    <a href="#CreateReachEnvelope"><b>CreateReachEnvelope</b></a>
<dd>  This method creates and displayed the reach envelope on the
 current segment.
 <dt>
    <a href="#DestroyReachEnvelope"><b>DestroyReachEnvelope</b></a>
<dd>  This method destroys the reach envelope previously created
 for this segment.
 <dt>
    <a href="#Detach"><b>Detach</b></a>
<dd>  Detach a geometry previously attached to the segment.
 <dt>
    <a href="#DetachAll"><b>DetachAll</b></a>
<dd>  Detach all objects attached so far to the segment.
 <dt>
    <a href="#GetAttachedObject"><b>GetAttachedObject</b></a>
<dd>  Retrieve one object currently attached to the segment.
 <dt>
    <a href="#GetDOF"><b>GetDOF</b></a>
<dd>  Returns a specific degree of freedom of the segment.
 <dt>
    <a href="#GetIKOffset"><b>GetIKOffset</b></a>
<dd>  
 <dt>
    <a href="#GetIKPosition"><b>GetIKPosition</b></a>
<dd>  
 <dt>
    <a href="#IsAttached"><b>IsAttached</b></a>
<dd>  
 <dt>
    <a href="#IsObjectReachable"><b>IsObjectReachable</b></a>
<dd>  Reachability check.
 <dt>
    <a href="#IsReachable"><b>IsReachable</b></a>
<dd>  Reachability check.
 <dt>
    <a href="#LockPosture"><b>LockPosture</b></a>
<dd>  Lock the posture of the segment.
 <dt>
    <a href="#MirrorCopyAngularLimitations"><b>MirrorCopyAngularLimitations</b></a>
<dd>  Mirror copy the angular limitations of the segment.
 <dt>
    <a href="#MirrorCopyPosture"><b>MirrorCopyPosture</b></a>
<dd>  Copy the posture on the equivalent segment, on the other side
 of the manikin.
 <dt>
    <a href="#MirrorCopyPrefAngles"><b>MirrorCopyPrefAngles</b></a>
<dd>  Mirror copy the preferred angles of the segment.
 <dt>
    <a href="#Optimize"><b>Optimize</b></a>
<dd>  Sets the limits to match the best PrefAngle for the DOF piDOFId

 <dt>
    <a href="#RemoveLimits"><b>RemoveLimits</b></a>
<dd>  Removes the angular limitations of the segment.
 <dt>
    <a href="#ResetAngularLimitations"><b>ResetAngularLimitations</b></a>
<dd>  Reset the angular limitations of the segment depending on piReset:
 0 -> 2 OR 3 OR 4 depending of the first encountered.
 <dt>
    <a href="#ResetPosture"><b>ResetPosture</b></a>
<dd>  Set the segment's posture back to its default position.
 <dt>
    <a href="#ResetPrefAngles"><b>ResetPrefAngles</b></a>
<dd>  Reset the preferred angles of the segment.
 <dt>
    <a href="#SetPercentage"><b>SetPercentage</b></a>
<dd>  Sets the angular limitations to a percentage for the DOF piDOFId

 <dt>
    <a href="#SetPosition"><b>SetPosition</b></a>
<dd>    Sets a new absolute position for the segment.
 <dt>
    <a href="#SwapAngularLimitations"><b>SwapAngularLimitations</b></a>
<dd>  Swap the angular limitations of the segment.
 <dt>
    <a href="#SwapPosture"><b>SwapPosture</b></a>
<dd>  Swap the posture with the equivalent segment, on the other side
 of the manikin.
 <dt>
    <a href="#SwapPrefAngles"><b>SwapPrefAngles</b></a>
<dd>  Swap the preferred angles of the segment.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="AttachSize"><dt>

<table><tr><td>o Property <b>AttachSize</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the number of objects currently attached to the segment.<br>

</dl>
<a name="EndPositionX"><dt>

<table><tr><td>o Property <b>EndPositionX</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the global x coordinate of the endpoint of the segment.<br>

</dl>
<a name="EndPositionY"><dt>

<table><tr><td>o Property <b>EndPositionY</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the global y coordinate of the endpoint of the segment.<br>

</dl>
<a name="EndPositionZ"><dt>

<table><tr><td>o Property <b>EndPositionZ</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the global z coordinate of the endpoint of the segment.<br>

</dl>
<a name="IsDOFAt0"><dt>

<table><tr><td>o Property <b>IsDOFAt0</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns <code><strong>True</strong></code> if there is a DOF
 at index 0, <code><strong>False</strong></code> otherwise.

</dl>
<a name="IsDOFAt1"><dt>

<table><tr><td>o Property <b>IsDOFAt1</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns <code><strong>True</strong></code> if there is a DOF
 at index 1, <code><strong>False</strong></code> otherwise.

</dl>
<a name="IsDOFAt2"><dt>

<table><tr><td>o Property <b>IsDOFAt2</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns <code><strong>True</strong></code> if there is a DOF
 at index 2, <code><strong>False</strong></code> otherwise.

</dl>
<a name="IsOnHand"><dt>

<table><tr><td>o Property <b>IsOnHand</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 This property is <strong>True</strong> if this segment belongs to
 the manikin's hand.

</dl>
<a name="IsOnLeftSide"><dt>

<table><tr><td>o Property <b>IsOnLeftSide</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 This property is <strong>True</strong> if this segment is on the
 left side of the manikin.

</dl>
<a name="IsOnRightSide"><dt>

<table><tr><td>o Property <b>IsOnRightSide</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 This property is <strong>True</strong> if this segment is on the
 right side of the manikin.

</dl>
<a name="IsOnSpine"><dt>

<table><tr><td>o Property <b>IsOnSpine</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 This property is <strong>True</strong> if this segment belongs to
 the manikin's spine.

</dl>
<a name="Length"><dt>

<table><tr><td>o Property <b>Length</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the length of the segment, in centimeters.

</dl>
<a name="MirrorSegment"><dt>

<table><tr><td>o Property <b>MirrorSegment</b>(<td>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 This property returns the equivalent segment, but on the
 opposite side (ex.: right leg <-> left leg).

</dl>
<a name="NbDOFs"><dt>

<table><tr><td>o Property <b>NbDOFs</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the number of degrees of freedom on the current segment.<br>
 Each segment can have up to three degrees of freedom.  Therefore<br>
 the value of this property will never be higher than 3.<br>

</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="ApplyPosition"><dt>

<table><tr><td>o Sub <b>ApplyPosition</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>piPositionIncrement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>piStartSegment</tt>)</table></dt>
<dl>
  <dd>
   Applies a new relative position for the segment.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piPositionIncrement</tt>
   <dd>   The new position to combine with the segment's current position.<br>
   This array must contain 12 numbers, and msut be initialized
   using the four columns of a transformation matrix.

   The first nine components represent the rotation matrix.<br>
   The last three components represent the translation vector.<br>

 </dd>
    <dt><tt> piStartSegment</tt>
   <dd> The short name of the first segment of the kinematics chain. The short name specified has to identify a
 valid segment, which is an ancestor of the current one.
 For instance, is the segment to position is the right hand, then
 that start segment might be "RSArCl" (right clavicular).

 If the string "Default" is specified, then the start segment
 will be automatically chosen.

 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example sets the segment to a 45-degree rotation around
 the x axis and at a (10, 20, 30) translation from the origin.<br>

 <pre>
 Dim myPosition(11)
 'Rotation (45 degrees around the x axis)
 myPosition(0)  = 1.000
 myPosition(1)  = 0
 myPosition(2)  = 0
 myPosition(3)  = 0
 myPosition(4)  = 0.707
 myPosition(5)  = 0.707
 myPosition(6)  = 0
 myPosition(7)  = -0.707
 myPosition(8)  = 0.707
 'Translation vector (10,20,30)
 myPosition(9)  = 10.000
 myPosition(10) = 20.000
 myPosition(11) = 30.000
 myManikin.Body.GetItem("LSHaCPr").ApplyPosition myPosition
 </pre>
</pre></dd>
</dl>
</dl>
<a name="Attach"><dt>

<table><tr><td>o Sub <b>Attach</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>piObjectToAttach</tt>)</table></dt>
<dl>
  <dd>
 Attach a geometry to the segment.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piObjectToAttach</tt>
   <dd> The object to attach. This object must be a movable object.

 Once the attach relationship is made, the object's postition
 will be updated every time the segment moves.
</dd>
</dl>
</dl>
</dl>
<a name="CreateReachEnvelope"><dt>

<table><tr><td>o Sub <b>CreateReachEnvelope</b>(<td>)</table></dt>
<dl>
  <dd>
 This method creates and displayed the reach envelope on the
 current segment.  This segment must be part of the hand,
 otherwise an error code is returned.<br>
 Property <code>IsOnHand</code> can be used to check whether
 the segment is located on the hand.

</dl>
<a name="DestroyReachEnvelope"><dt>

<table><tr><td>o Sub <b>DestroyReachEnvelope</b>(<td>)</table></dt>
<dl>
  <dd>
 This method destroys the reach envelope previously created
 for this segment.

</dl>
<a name="Detach"><dt>

<table><tr><td>o Sub <b>Detach</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>piObjectToDetach</tt>)</table></dt>
<dl>
  <dd>
 Detach a geometry previously attached to the segment.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piObjectToDetach</tt>
   <dd> The object to detach. This object's will no longer be driven by the segment's
 position.
</dd>
</dl>
</dl>
</dl>
<a name="DetachAll"><dt>

<table><tr><td>o Sub <b>DetachAll</b>(<td>)</table></dt>
<dl>
  <dd>
 Detach all objects attached so far to the segment.

</dl>
<a name="GetAttachedObject"><dt>

<table><tr><td>o Func <b>GetAttachedObject</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piIndex</tt>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> </table></dt>
<dl>
  <dd>
 Retrieve one object currently attached to the segment.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piIndex</tt>
   <dd> The index of the object to retrieve.  First attached object is at index 0.
</dd>
</dl>
</dl>
</dl>
<a name="GetDOF"><dt>

<table><tr><td>o Func <b>GetDOF</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFNumber</tt>) As <script type="text/javascript"> activateLink('SWKDOF','SWKDOF')</script> </table></dt>
<dl>
  <dd>
 Returns a specific degree of freedom of the segment.<br>
 A segment may have up to three degrees of freedom,<br>
 and these are numbered from 0 to 2.<br>
 However, the degrees of freedom do not always have<br>
 consecutive indices.  For instance the forearm<br>
 has 2 DOFs, but these are numbered 0 and 2.<br>
 That is why the set of DOFs under a segment cannot<br>
 be properly accessed as if it was a collection.<br>
 To loop through the degrees of freedom of a segment,<br>
 one should test the value of properties <code>IsDOFAt0</code>,
 <code>IsDOFAt1</code> or <code>IsDOFAt2</code>, and work with the<br>
 DOF only if the value of one of the corresponding property is<br>
 <code><strong>True</strong></code>.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piDOFNumber</tt>
   <dd>  The index of the DOF to retrieve.<br> This parameter must be either 0, 1 or 2.
</dd>
</dl>
</dl>
</dl>
<a name="GetIKOffset"><dt>

<table><tr><td>o Sub <b>GetIKOffset</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>poOffset</tt>)</table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The IK offset for this segment.
</dl>
</dl>
<a name="GetIKPosition"><dt>

<table><tr><td>o Sub <b>GetIKPosition</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>poIKPosition</tt>)</table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The position used for IK on this segment.
</dl>
</dl>
<a name="IsAttached"><dt>

<table><tr><td>o Func <b>IsAttached</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>piObject</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <code><font color="blue"><strong>true</strong></font></code> if the object passed in the parameter is attached to the segment,
 <code><font color="blue"><strong>false</strong></font></code>
 otherwise.

</dl>
</dl>
<a name="IsObjectReachable"><dt>

<table><tr><td>o Func <b>IsObjectReachable</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>piObject</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Reachability check.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <code><font color="blue"><strong>true</strong></font></code> if the object passed is reachable by the segment,
 <code><font color="blue"><strong>false</strong></font></code>
 otherwise.  The position taken is that of the center of the object.

</dl>
</dl>
<a name="IsReachable"><dt>

<table><tr><td>o Func <b>IsReachable</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>piX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>piY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>piZ</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Reachability check.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <code><font color="blue"><strong>true</strong></font></code> if the location expressed in the coordinates is reachable by the segment,
 <code><font color="blue"><strong>false</strong></font></code>
 otherwise.

</dl>
</dl>
<a name="LockPosture"><dt>

<table><tr><td>o Sub <b>LockPosture</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Lock the posture of the segment.

</dl>
<a name="MirrorCopyAngularLimitations"><dt>

<table><tr><td>o Sub <b>MirrorCopyAngularLimitations</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Mirror copy the angular limitations of the segment.

</dl>
<a name="MirrorCopyPosture"><dt>

<table><tr><td>o Sub <b>MirrorCopyPosture</b>(<td>)</table></dt>
<dl>
  <dd>
 Copy the posture on the equivalent segment, on the other side
 of the manikin. For instance, it copies the posture from the
 right leg to the left leg.

</dl>
<a name="MirrorCopyPrefAngles"><dt>

<table><tr><td>o Sub <b>MirrorCopyPrefAngles</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Mirror copy the preferred angles of the segment.

</dl>
<a name="Optimize"><dt>

<table><tr><td>o Sub <b>Optimize</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Sets the limits to match the best PrefAngle for the DOF piDOFId

</dl>
<a name="RemoveLimits"><dt>

<table><tr><td>o Sub <b>RemoveLimits</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Removes the angular limitations of the segment.

</dl>
<a name="ResetAngularLimitations"><dt>

<table><tr><td>o Sub <b>ResetAngularLimitations</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piReset</tt>)</table></dt>
<dl>
  <dd>
 Reset the angular limitations of the segment depending on piReset:
 0 -> 2 OR 3 OR 4 depending of the first encountered.
 1 -> 2 AND 3 AND 4
 2 -> Unlock the value
 3 -> Restore the angular limitations if it is "No Limits"
 4 -> Set back the angular limitations to their default value (50.0%)

</dl>
<a name="ResetPosture"><dt>

<table><tr><td>o Sub <b>ResetPosture</b>(<td>)</table></dt>
<dl>
  <dd>
 Set the segment's posture back to its default position.

</dl>
<a name="ResetPrefAngles"><dt>

<table><tr><td>o Sub <b>ResetPrefAngles</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Reset the preferred angles of the segment.

</dl>
<a name="SetPercentage"><dt>

<table><tr><td>o Sub <b>SetPercentage</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>piPercentage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Sets the angular limitations to a percentage for the DOF piDOFId

</dl>
<a name="SetPosition"><dt>

<table><tr><td>o Sub <b>SetPosition</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>piNewPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>piStartSegment</tt>)</table></dt>
<dl>
  <dd>
   Sets a new absolute position for the segment.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piNewPosition</tt>
   <dd>   The new position to place the segment.<br>
   This array must contain 12 numbers, and msut be initialized
   using the four columns of a transformation matrix.

   The first nine components represent the rotation matrix.<br>
   The last three components represent the translation vector.<br>

 </dd>
    <dt><tt> piStartSegment</tt>
   <dd> The short name of the first segment of the kinematics chain. The short name specified has to identify a
 valid segment, which is an ancestor of the current one.
 For instance, is the segment to position is the right hand, then
 that start segment might be "RSArCl" (right clavicular).

 If the string "Default" is specified, then the start segment
 will be automatically chosen.

 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example sets the segment to a 45-degree rotation around
 the x axis and at a (10, 20, 30) translation from the origin.<br>

 <pre>
 Dim myPosition(11)
 'Rotation (45 degrees around the x axis)
 myPosition(0)  = 1.000
 myPosition(1)  = 0
 myPosition(2)  = 0
 myPosition(3)  = 0
 myPosition(4)  = 0.707
 myPosition(5)  = 0.707
 myPosition(6)  = 0
 myPosition(7)  = -0.707
 myPosition(8)  = 0.707
 'Translation vector (10,20,30)
 myPosition(9)  = 10.000
 myPosition(10) = 20.000
 myPosition(11) = 30.000
 myManikin.Body.GetItem("LSHaCPr").SetPosition myPosition, "Default"
 </pre>
</pre></dd>
</dl>
</dl>
<a name="SwapAngularLimitations"><dt>

<table><tr><td>o Sub <b>SwapAngularLimitations</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Swap the angular limitations of the segment.

</dl>
<a name="SwapPosture"><dt>

<table><tr><td>o Sub <b>SwapPosture</b>(<td>)</table></dt>
<dl>
  <dd>
 Swap the posture with the equivalent segment, on the other side
 of the manikin. For instance, the right leg takes the posture of
 the left leg, and vice versa.

</dl>
<a name="SwapPrefAngles"><dt>

<table><tr><td>o Sub <b>SwapPrefAngles</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>piDOFId</tt>)</table></dt>
<dl>
  <dd>
 Swap the preferred angles of the segment.

</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

