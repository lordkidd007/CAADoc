<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATGSMIDLItf HybridShapeDevelop (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATGSMIDLItf.htm" href="../CATGSMIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATGSMIDLItf";	}
		function getCurrentObjectName() { 
 	return "HybridShapeDevelop"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>HybridShapeDevelop<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_HybridShapeDevelop_25125','HybridShapeDevelop','0');</script>
<b><i> Represents the hybrid shape develop feature object.</i></b><br>

 <b>Role</b>: To access the data of the hybrid shape develop feature object.
 This data includes:
 <ul>
 <li>The developing mode</li>
 <li>The positining mode used for the 2D wire</li>
 <li>The 2D wire to be developed</li>
 <li>The positioning transformation</li>
 <li>The support revolution surface on which the development is operated</li>
 <li>The point designated as the origin of the planar 2D wire</li>
 <li>The direction corresponding to the first axis of the
 planar axis system related to the planar 2D wire</li>
 <li>The development origin on the support surface</li>
 </ul>
 <p>Use the  CATIAHybridShapeFactory to create a HybridShapeDevelop object.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('HybridShapeFactory','','HybridShapeFactory') </script>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Mode"><b>Mode</b></a>
<dd>  Returns or sets the developing mode.
 <dt>
    <a href="#ModePos"><b>ModePos</b></a>
<dd>  Returns or sets the positioning mode used for the 2D wire.
 <dt>
    <a href="#PlaneAxisDirection"><b>PlaneAxisDirection</b></a>
<dd>  Returns or sets the direction corresponding to the first axis of the
 planar axis system related to the planar 2D wire.
 <dt>
    <a href="#PlaneAxisOrigin"><b>PlaneAxisOrigin</b></a>
<dd>  Returns or sets the point designated as the origin of the planar 2D wire.
 <dt>
    <a href="#PointOnSupport"><b>PointOnSupport</b></a>
<dd>  Returns or sets the development origin on the support surface.
 <dt>
    <a href="#PositionedWire"><b>PositionedWire</b></a>
<dd>  Returns or sets the positioning transformation.
 <dt>
    <a href="#Support"><b>Support</b></a>
<dd>  Returns or sets the support revolution surface on which the development
 is operated.
 <dt>
    <a href="#WireToDevelop"><b>WireToDevelop</b></a>
<dd>  Returns or sets the 2D wire to be developed.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetPlaneAxisAngle"><b>GetPlaneAxisAngle</b></a>
<dd>  Retrieves the rotation angle.
 <dt>
    <a href="#GetPlaneAxisCoord"><b>GetPlaneAxisCoord</b></a>
<dd>  Retrieves the translation coordinates.
 <dt>
    <a href="#GetPlaneAxisSwapAxes"><b>GetPlaneAxisSwapAxes</b></a>
<dd>  Retrieves the inversion axes from their previous definitions.
 <dt>
    <a href="#SetPlaneAxisAngle"><b>SetPlaneAxisAngle</b></a>
<dd>  Sets the rotation angle.
 <dt>
    <a href="#SetPlaneAxisCoord"><b>SetPlaneAxisCoord</b></a>
<dd>  Sets the translation coordinates.
 <dt>
    <a href="#SetPlaneAxisSwapAxes"><b>SetPlaneAxisSwapAxes</b></a>
<dd>  Sets the inversion axes from their previous definitions.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Mode"><dt>

<table><tr><td>o Property <b>Mode</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the developing mode.
 <br><b>Legal values</b>: 
 <dl>
   <dt>CATGSMDevelopMethod_DevDev</dt>
   <dd>Develop / develop algorithm</dd>
   <dt>CATGSMDevelopMethod_DevProj</dt>
   <dd>Develop / project algorithm</dd>
 </dl>
</dl>
<a name="ModePos"><dt>

<table><tr><td>o Property <b>ModePos</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the positioning mode used for the 2D wire.
 <br><b>Legal values</b>: 
 <dl>
   <dt>CATGSMPositionMode_NoneOrPositioned</dt>
   <dd>No positioning
   <dt>CATGSMPositionMode_ExplicitSweep
   <dd><b>=== DO NOT USE IN THIS CASE ===</b>
   <dt>CATGSMPositionMode_Develop
   <dd>The 2D wire is to be moved from its initial position</dd>
 </dl>
</dl>
<a name="PlaneAxisDirection"><dt>

<table><tr><td>o Property <b>PlaneAxisDirection</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the direction corresponding to the first axis of the
 planar axis system related to the planar 2D wire.
 <br>Sub-element(s) supported (see 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object):  
<script type="text/javascript"> activateLinkAnchor('RectilinearTriDimFeatEdge','','RectilinearTriDimFeatEdge') </script>, 
<script type="text/javascript"> activateLinkAnchor('BiDimFeatEdge','','BiDimFeatEdge') </script> or 
<script type="text/javascript"> activateLinkAnchor('RectilinearMonoDimFeatEdge','','RectilinearMonoDimFeatEdge') </script>.
</dl>
<a name="PlaneAxisOrigin"><dt>

<table><tr><td>o Property <b>PlaneAxisOrigin</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the point designated as the origin of the planar 2D wire.
 <br>Sub-element(s) supported (see 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object):  
<script type="text/javascript"> activateLinkAnchor('Vertex','','Vertex') </script>.
</dl>
<a name="PointOnSupport"><dt>

<table><tr><td>o Property <b>PointOnSupport</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the development origin on the support surface.
 <br>Sub-element(s) supported (see 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object):  
<script type="text/javascript"> activateLinkAnchor('Vertex','','Vertex') </script>.
</dl>
<a name="PositionedWire"><dt>

<table><tr><td>o Property <b>PositionedWire</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the positioning transformation.
 <br><b>Role</b>: To retrieve or set the positioning transformation associated to the
 develop feature and which result corresponds to the positioned 2D wire.
</dl>
<a name="Support"><dt>

<table><tr><td>o Property <b>Support</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the support revolution surface on which the development
 is operated.
 <br>Sub-element(s) supported (see 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object):  
<script type="text/javascript"> activateLinkAnchor('Face','','Face') </script>.
</dl>
<a name="WireToDevelop"><dt>

<table><tr><td>o Property <b>WireToDevelop</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the 2D wire to be developed.
 <br>Sub-element(s) supported (see 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object):  
<script type="text/javascript"> activateLinkAnchor('TriDimFeatEdge','','TriDimFeatEdge') </script> or 
<script type="text/javascript"> activateLinkAnchor('BiDimFeatEdge','','BiDimFeatEdge') </script>.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetPlaneAxisAngle"><dt>

<table><tr><td>o Func <b>GetPlaneAxisAngle</b>(<td>) As <script type="text/javascript"> activateLink('Angle','Angle')</script> </table></dt>
<dl>
  <dd>
 Retrieves the rotation angle.
 <br><b>Role</b>: The rotation angle is expressed in the planar coordinate system
  related to the 2D planar wire from its default position.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The rotation value
</dl>
</dl>
<a name="GetPlaneAxisCoord"><dt>

<table><tr><td>o Func <b>GetPlaneAxisCoord</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iCoorIdx</tt>) As <script type="text/javascript"> activateLink('Length','Length')</script> </table></dt>
<dl>
  <dd>
 Retrieves the translation coordinates.
 <br><b>Role</b>: The translation coordinates are expressed with respect to
 the planar coordinate system related to the 2D planar wire from its default position.
 <code>GetPlaneAxisCoord</code> retrieves one coordinate at a time.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoorIdx</tt>
   <dd>    The coordinate index
   <br><b>Legal values</br>: 1 for X and 2 for Y
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The coordinate value
</dl>
</dl>
<a name="GetPlaneAxisSwapAxes"><dt>

<table><tr><td>o Func <b>GetPlaneAxisSwapAxes</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>ii</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Retrieves the inversion axes from their previous definitions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iI</tt>
   <dd>    == NOT USED YET == 
   Must always be set to 0 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The inversion value
   <br><b>Legal values</b>: 
   <dl>
     <dt>CATGSMAxisInversionMode_None</dt>
     <dd>No axis inverted
     <dt>CATGSMAxisInversionMode_X</dt>
     <dd>Only the X axis is inverted</dd>
     <dt>CATGSMAxisInversionMode_Y</dt>
     <dd>Only the Y axis is inverted</dd>
     <dt>CATGSMAxisInversionMode_Both</dt>
     <dd>Both axes are inverted</dd>
   </dl>
</dl>
</dl>
<a name="SetPlaneAxisAngle"><dt>

<table><tr><td>o Sub <b>SetPlaneAxisAngle</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>)</table></dt>
<dl>
  <dd>
 Sets the rotation angle.
 <br><b>Role</b>: The rotation angle is expressed in the planar coordinate system
  related to the 2D planar wire from its default position.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAngle</tt>
   <dd>    The rotation angle value.</dd>
</dl>
</dl>
</dl>
<a name="SetPlaneAxisCoord"><dt>

<table><tr><td>o Sub <b>SetPlaneAxisCoord</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iCoorIdx</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCoordValue</tt>)</table></dt>
<dl>
  <dd>
 Sets the translation coordinates.
 <br><b>Role</b>: The translation coordinates are expressed with respect to
 the planar coordinate system related to the 2D planar wire from its default position.
 <code>SetPlaneAxisCoord</code> sets one coordinate at a time.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoorIdx</tt>
   <dd>    The coordinate index
   <br><b>Legal values</br>: 1 for X and 2 for Y
 </dd>
    <dt><tt> iCoordValue</tt>
   <dd>   The coordinate value</dd>
</dl>
</dl>
</dl>
<a name="SetPlaneAxisSwapAxes"><dt>

<table><tr><td>o Sub <b>SetPlaneAxisSwapAxes</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iIdx</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iInversionValue</tt>)</table></dt>
<dl>
  <dd>
 Sets the inversion axes from their previous definitions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIdx</tt>
   <dd>    == NOT USED YET == 
   Must always be set to 0
 </dd>
    <dt><tt> iInversionValue</tt>
   <dd>    The inversion value
   <br><b>Legal values</b>: 
   <dl>
     <dt>CATGSMAxisInversionMode_None</dt>
     <dd>No axis inverted
     <dt>CATGSMAxisInversionMode_X</dt>
     <dd>Only the X axis is inverted</dd>
     <dt>CATGSMAxisInversionMode_Y</dt>
     <dd>Only the Y axis is inverted</dd>
     <dt>CATGSMAxisInversionMode_Both</dt>
     <dd>Both axes are inverted</dd>
   </dl></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

