<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ComponentsCatalogsInterfaces CatalogDocument (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ComponentsCatalogsInterfaces.htm" href="../ComponentsCatalogsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ComponentsCatalogsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CatalogDocument"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CatalogDocument<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CatalogDocument_54210','CatalogDocument','0');</script>
<b><i> Represents the Document object for catalog.</i></b><br>

 <b>Role</b>: A catalog document references data (documents: CATPart..., features, etc) organized as a tree: the nodes are called chapters and
 the leaves are called descriptions. Each description may reference a document (CATPart...) and couples of keyword + value.
 The keywords are defined at the parent chapter level.<br>
 A catalog may reference parametric Parts. In that case, the Part is associated with a Design Table.
 A Design Table is a file (text file, Excel document) that contains named columns and rows.
 Each row corresponds to a description, and each column may correspond to a keyword.<br>
 Refer to CATIA V5 Documentation, Component Catalog Editor and to CAA V5 Encyclopedia, Document, Catalog.<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateCatalogFromLibrary"><b>CreateCatalogFromLibrary</b></a>
<dd>  Creates a catalog from a V4 library.
 <dt>
    <a href="#CreateCatalogFromcsv"><b>CreateCatalogFromcsv</b></a>
<dd>  Creates a catalog from a csv file.
 <dt>
    <a href="#CreateChapterFromDesignTable"><b>CreateChapterFromDesignTable</b></a>
<dd>  Creates a chapter in the current catalog document where keywords 
 correspond to parameters of the Design Table and add the descriptions
 corresponding to whole configurations of the Design Table.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateCatalogFromLibrary"><dt>

<table><tr><td>o Sub <b>CreateCatalogFromLibrary</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iLibraryPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProjectPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iCatalogPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iTablePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iConvFormat</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iBatchMode</tt>)</table></dt>
<dl>
  <dd>
 Creates a catalog from a V4 library.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLibraryPath</tt>
   <dd>   The V4 library path.
 </dd>
    <dt><tt> iProjectPath</tt>
   <dd>   The V4 project path.
 </dd>
    <dt><tt> iCatalogPath</tt>
   <dd>   The new catalog path.
 </dd>
    <dt><tt> iTablePath</tt>
   <dd>   The mapping table path.
 </dd>
    <dt><tt> iConvFormat</tt>
   <dd>   <tt>0</tt>: As Specification<br>
   <tt>1</tt>: As Result
 </dd>
    <dt><tt> iBatchMode</tt>
   <dd>   <tt>0</tt>: As Specification<br>
   <tt>1</tt>: As Result
 </dd>
    <dt><tt> iBatchMode</tt>
   <dd>   <tt>0</tt>: Create the V5 documents<br>
   <tt>1</tt>: Simulate: the V5 documents are not created<br>
   <tt>2</tt>: If the previous migration has failed, continue since this point.</dd>
</dl>
</dl>
</dl>
<a name="CreateCatalogFromcsv"><dt>

<table><tr><td>o Sub <b>CreateCatalogFromcsv</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iInitData</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iNewCatalog</tt>)</table></dt>
<dl>
  <dd>
 Creates a catalog from a csv file.<br>
 Refer to CATIA V5 Documentation, Component Catalog Editor, Creating a Catalog in Batch Mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInitData</tt>
   <dd>   The csv (Comma Separated Values) file path.
 </dd>
    <dt><tt> iNewCatalog</tt>
   <dd>   The new catalog path.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example creates a catalog from a csv file.
 <pre>
   InputFile ="E:\users\Catalogs\BatchCatalog.csv"
   OutputFile ="E:\users\Catalogs\Catalog_Result.catalog"
   Dim Catalog As Document
   Set Catalog=CATIA.Documents.Add("CatalogDocument")
   Catalog.<font color="red">CreateCatalogFromcsv</font> InputFile, OutputFile
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="CreateChapterFromDesignTable"><dt>

<table><tr><td>o Sub <b>CreateChapterFromDesignTable</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iChapterName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDocumentContainingDT</tt>)</table></dt>
<dl>
  <dd>
 Creates a chapter in the current catalog document where keywords 
 correspond to parameters of the Design Table and add the descriptions
 corresponding to whole configurations of the Design Table.<br>
 Refer to CATIA V5 Documentation, Component Catalog Editor, Creating a Catalog in Batch Mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChapterName</tt>
   <dd>   The name of the new chapter.
 </dd>
    <dt><tt> iDocumentContainingDT</tt>
   <dd>   The path of the Design Table.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example creates a catalog and a chapter is added from a Design Table.
 <pre>
   Chapter = "NewChapter"
   DTFile ="E:\users\Catalogs\DesignTable.xls"
   Dim Catalog As Document
   Set Catalog=CATIA.Documents.Add("CatalogDocument")
   Catalog.<font color="red">CreateChapterFromDesignTable</font> Chapter, DTFile
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

