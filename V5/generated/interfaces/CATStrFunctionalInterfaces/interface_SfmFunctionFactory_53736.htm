<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrFunctionalInterfaces SfmFunctionFactory (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrFunctionalInterfaces.htm" href="../CATStrFunctionalInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrFunctionalInterfaces";	}
		function getCurrentObjectName() { 
 	return "SfmFunctionFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SfmFunctionFactory<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SfmFunctionFactory_53736','SfmFunctionFactory','0');</script>
<b><i> Gets the Function Factory.</i></b><br>
 
<dl>
<dt><b>Example:<b>
<dd>
 This Example Retrieves SfmFunctionFactory from Part.
 <pre>
 Set part1 = partDocument1.Part
 Dim Factory As SfmFunctionFactory
 Set Factory =  part1.GetCustomerFactory("SfmFunctionFactory")
 </pre>
 </dl><hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#SfmReferences"><b>SfmReferences</b></a>
<dd>  Gets the list of Sfm References.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateOpening"><b>CreateOpening</b></a>
<dd>  Creates Opening on SuperPlate or a Profile using a sketch or 3DObject.
 <dt>
    <a href="#CreateStandardOpening"><b>CreateStandardOpening</b></a>
<dd>  Creates a StandardOpening on SuperPlate.
 <dt>
    <a href="#GetOpeningMgr"><b>GetOpeningMgr</b></a>
<dd>  Gets the Opening Manager.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="SfmReferences"><dt>

<table><tr><td>o Property <b>SfmReferences</b>(<td>) As <script type="text/javascript"> activateLink('SfmReferences','SfmReferences')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Gets the list of Sfm References. Use it to prepare a list of U & V References for Standard Opening.
<dl>
<dt><b>Example:<b>
<dd>
 This example populates a list for U References. Use the Add Method to add a reference to the list.
 <pre>
 Dim Factory As SfmFunctionFactory
 Set Factory = Part1.GetCustomerFactory("SfmFunctionFactory") 
 Dim Uref1 As Reference
 Set Uref1 = Part1.FindObjectByName("CROSS.95")
 Dim UrefList As SfmReferences
 Set UrefList = Factory.<font color="red">SfmReferences</font>
 UrefList.Add Uref1
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateOpening"><dt>

<table><tr><td>o Func <b>CreateOpening</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iCategory</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iIntersectingElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSfmObject</tt>) As <script type="text/javascript"> activateLink('SfmOpening','SfmOpening')</script> </table></dt>
<dl>
  <dd>
 Creates Opening on SuperPlate or a Profile using a sketch or 3DObject.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCategory</tt>
   <dd> [in]      Category of Opening
 </dd>
    <dt><tt> iMode</tt>
   <dd> [in]       Enter 1: To Create Opening Using Sketch Mode
      Enter 0: To Create Opening Using 3D Object Mode
 </dd>
    <dt><tt> iIntersectingElement</tt>
   <dd> [in]       Sketch or 3D Object
 </dd>
    <dt><tt> iSfmObject</tt>
   <dd> [in]      Object on which Opening is to be created.
 </dd>
    <dt><tt> oOpening</tt>
   <dd> [out]      Created Opening
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok
 <dl>
 <dt><b>Example:<b>
 <dd>
 This Example Creates Opening on the Plate using Sketch Mode. The Factory is retrieved from the Part.
 <pre>
  'Retrieve the Factory
  Set Factory =  part1.GetCustomerFactory("SfmFunctionFactory")
  Set sketch = part1.FindObjectByName("Sketch.1")
  Set sketchref = part1.CreateReferenceFromObject(sketch)
  Set plate = part1.FindObjectByName("Deck_117")
  Set plateref = part1.CreateReferenceFromObject(plate)
  'Create Opening
  Dim OpeningRes as SfmOpening
  Set OpeningRes = Factory.CreateOpening("FunctionalOpening",1,sketchref, plateref)
 </pre>
 </dl>
</dl>
</dl>
<a name="CreateStandardOpening"><dt>

<table><tr><td>o Func <b>CreateStandardOpening</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iCategory</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iContourName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SfmStandardContourParameters','SfmStandardContourParameters')</script> <td><tt>iListContourParams</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPosStrategyName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SfmStandardPosStrategyParameters','SfmStandardPosStrategyParameters')</script> <td><tt>iPositionStrategyParms</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>ispTargetSfmObject</tt>) As <script type="text/javascript"> activateLink('SfmStandardOpening','SfmStandardOpening')</script> </table></dt>
<dl>
  <dd>
 Creates a StandardOpening on SuperPlate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCategory</tt>
   <dd> [in]      Category of Opening
 </dd>
    <dt><tt> iContourName</tt>
   <dd> [in]       Name of the Contour. To Get List of Available contour names ,please see CATIASfmOpeningContoursMgr
 </dd>
    <dt><tt> iListContourParams</tt>
   <dd> [in]       List of Conotour Parameters for selected Contour
      For Setting these parameters,Please see CATIASfmOpeningContoursMgr
 </dd>
    <dt><tt> iPosStrategyName</tt>
   <dd> [in]       Name of the Position Strategy.
      Legal Values:"CATSfmPosOffsetOffset","CATSfmPosHalfHeightOffset","CATSfmPosMidDistOffset","CATSfmPosMidDistMidDist","CATSfmPosHalfHeightMidDist"
      Please see CATIASfmPositioningStrategyManager
 </dd>
    <dt><tt> iPositionStrategyParms</tt>
   <dd> [in ]       List of Parameters for Positioning the Contour. See CATIASfmStandardPosStrategyParameters
 </dd>
    <dt><tt> ispTargetSfmObject</tt>
   <dd> [in ]      Object on which Opening will be created
 </dd>
    <dt><tt> ospOpening</tt>
   <dd> [out]       Created Opening
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.
<dl>
<dt><b>Example:<b>
<dd>
 This Creates Opening on the Plate using StandardOpening Mode.The Factory is retrieved from the Part
 <pre>
  'Get the Factory
  Set Factory =  part1.GetCustomerFactory("SfmFunctionFactory")
  Dim StdOpening as SfmStandardOpening
  Set StdOpening = Factory.CreateStandardOpening("FunctionalOpening", "Sfm_Rect", oListCkeParms, "CATSfmPosMidDistMidDist", PositionStrategyParms, plateref)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetOpeningMgr"><dt>

<table><tr><td>o Func <b>GetOpeningMgr</b>(<td><script type="text/javascript"> activateLink('Part','Part')</script> <td><tt>iPrtPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iMgrName</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Gets the Opening Manager.Use this manager to get SfmOpeningContoursMgr or SfmPositioningStrategyManager. 
 Use SfmOpeningContoursMgr to GetAvailableStdOpeningContours and GetStdOpeningContourParams Methods.See CATIASfmOpeningContoursMgr
 Use SfmPositioningStrategyManager to manage Position of contour.See CATIASfmPositioningStrategyManager
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrtPart</tt>
   <dd> [in]      Part which contains the plate on which opening is to be created.
   </dd>
    <dt><tt> iMgrName</tt>
   <dd> [in]       SfmOpeningContoursMgr: Use to Get Contour Manager.
      SfmPositioningStrategyManager: Use to Get Position Strategy Manager
   </dd>
    <dt><tt> oSfmOpeningMgr</tt>
   <dd> [out]       Manager Object
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.
<dl>
<dt><b>Example:<b>
<dd>
 This Example gets the Manager from Factory.
 <pre>
  'Get the Factory
  Set Factory =  part1.GetCustomerFactory("SfmFunctionFactory")
  'Retrieve the Contour Manager
  Dim ObjSfmContourMgr As SfmOpeningContoursMgr
  Set ObjSfmContourMgr = Factory.GetOpeningMgr(Part1, "SfmOpeningContoursMgr")
  'Retrieve the Postion Strategy Manager
  Dim ObjSfmPosStrategyMgr  As SfmPositioningStrategyManager
  Set ObjSfmPosStrategyMgr = Factory.GetOpeningMgr(Part1, "SfmPositioningStrategyManager")
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

