<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrFunctionalInterfaces SfmOperationFactory (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrFunctionalInterfaces.htm" href="../CATStrFunctionalInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrFunctionalInterfaces";	}
		function getCurrentObjectName() { 
 	return "SfmOperationFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SfmOperationFactory<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SfmOperationFactory_55637','SfmOperationFactory','0');</script>
<b><i> Gets the Operation Factory.</i></b><br>
 
<dl>
<dt><b>Example:<b>
<dd>
 This Example Retrieves SfmOperationFactory from Part.
 <pre>
 Set part1 = partDocument1.Part
 Dim Factory As SfmOperationFactory
 Set Factory =  part1.GetCustomerFactory("SfmOperationFactory")
 </pre>
 </dl><hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetAvailableSlotsFromCatalog"><b>GetAvailableSlotsFromCatalog</b></a>
<dd>  Gets the list of available Slots from catalog for a given Profile(Stiffener/Member).
 <dt>
    <a href="#GetEndcutManager"><b>GetEndcutManager</b></a>
<dd>  Gets the Endcut Manager.
 <dt>
    <a href="#GetSlotParameters"><b>GetSlotParameters</b></a>
<dd>  Gets the Slot Parameters and Names for a slot from catalog.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetAvailableSlotsFromCatalog"><dt>

<table><tr><td>o Func <b>GetAvailableSlotsFromCatalog</b>(<td><script type="text/javascript"> activateLink('SfmProfile','SfmProfile')</script> <td><tt>iSfmProfile</tt>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> </table></dt>
<dl>
  <dd>
 Gets the list of available Slots from catalog for a given Profile(Stiffener/Member).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSfmProfile</tt>
   <dd> [in]     The given profile.
 </dd>
    <dt><tt> oListofSlotNames</tt>
   <dd> [out]   The List of Slots available.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
 <dl>
 <dt><b>Example:<b>
 <dd>
 This Example retrieves the list of avaliable Slots.
 <pre>
 Dim FactoryObj As SfmOperationFactory
 Set FactoryObj = PartObj.GetCustomerFactory("SfmOperationFactory")
 Dim ListOfAvailableSlots() As Variant
 ListOfAvailableSlots = SlotFactoryObj.<font color="red">GetAvailableSlotsFromCatalog(SfmProfileObj)</font>
 </pre>
 </dl>
</dl>
</dl>
<a name="GetEndcutManager"><dt>

<table><tr><td>o Func <b>GetEndcutManager</b>(<td>) As <script type="text/javascript"> activateLink('SfmEndcutManager','SfmEndcutManager')</script> </table></dt>
<dl>
  <dd>
 Gets the Endcut Manager.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSfmEndcutManager</tt>
   <dd> [out]   The retrieved Manager.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
 <dl>
 <dt><b>Example:<b>
 <dd>
 This Example retrieves the Endcut Manager from the Factory.
 <pre>
 Dim FactoryObj As SfmOperationFactory
 Set FactoryObj = PartObj.GetCustomerFactory("SfmOperationFactory")
 Dim EndCutManagerObj As SfmEndcutManager
 Set EndCutManagerObj = FactoryObj.<font color="red">GetEndcutManager</font>
 </pre>
 </dl>
</dl>
</dl>
<a name="GetSlotParameters"><dt>

<table><tr><td>o Sub <b>GetSlotParameters</b>(<td><script type="text/javascript"> activateLink('SfmProfile','SfmProfile')</script> <td><tt>iSfmProfile</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iSlotName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SfmConnectionParameters','SfmConnectionParameters')</script> <td><tt>oListSlotParameters</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListSlotParamNames</tt>)</table></dt>
<dl>
  <dd>
 Gets the Slot Parameters and Names for a slot from catalog.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSfmProfile</tt>
   <dd> [in]     The given profile.
 </dd>
    <dt><tt> iSlotName</tt>
   <dd> [in]   Name of the Slot.
 </dd>
    <dt><tt> oListSlotParameters</tt>
   <dd> [out]   The Slot UDF Parameters with deafult values.
 </dd>
    <dt><tt> oListSlotParamNames</tt>
   <dd> [out]   Slot Parameter Names.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
 <dl>
 <dt><b>Example:<b>
 <dd>
 This Example retrieves Parameters for Slot.
 <pre>
 Dim FactoryObj As SfmOperationFactory
 Set FactoryObj = PartObj.GetCustomerFactory("SfmOperationFactory")
 Dim oListSlotParams As SfmConnectionParameters
 Dim oListSlotPramNames() As Variant
 SlotFactoryObj.<font color="red">GetSlotParameters SfmProfileObj, "Tee_Slot_thru_Plate", oListSlotParams, oListSlotPramNames</font>
 'Reading Slot Param Values
 Dim UDFParam As Parameter
 ParamCount = oListSlotParams.Count
 For i = 1 To ParamCount
 Set UDFParam = oListSlotParams.Item(i)
 ParamName = oListSlotPramNames(i - 1)
 ParamValue = UDFParam.ValueAsString
 End If
 Next
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

