<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrFunctionalInterfaces SfmSlot (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrFunctionalInterfaces.htm" href="../CATStrFunctionalInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrFunctionalInterfaces";	}
		function getCurrentObjectName() { 
 	return "SfmSlot"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SfmSlot<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SfmSlot_39704','SfmSlot','0');</script>
<b><i> Interface to Get and Set inputs to existing Slot.</i></b><br>
 
 <b>Role</b>:  Allows managing (mainly retreiving parameters)Slots.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('SfmProfile','','SfmProfile') </script>, <script type="text/javascript"> activateLinkAnchor('SfmSuperPlate','','SfmSuperPlate') </script>, <script type="text/javascript"> activateLinkAnchor('SfmSlots','','SfmSlots') </script>, <script type="text/javascript"> activateLinkAnchor('SfmConnectionParameters','','SfmConnectionParameters') </script>
</dl>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetCntnDetailName"><b>GetCntnDetailName</b></a>
<dd>  Gets the name of the UDF used for creating the slot.
 <dt>
    <a href="#GetCntnDetailParameters"><b>GetCntnDetailParameters</b></a>
<dd>  Gets the Information on Existing Slot.
 <dt>
    <a href="#GetConnectionCoordinate"><b>GetConnectionCoordinate</b></a>
<dd>  Gets thelocation of existing slot.
 <dt>
    <a href="#GetMasterObject"><b>GetMasterObject</b></a>
<dd>  Gets the Penetrating Element used in the creation of the Slot.
 <dt>
    <a href="#GetSlaveObject"><b>GetSlaveObject</b></a>
<dd>  Gets the Penetrated Element used in the creation of the Slot.
 <dt>
    <a href="#SetSlaveObject"><b>SetSlaveObject</b></a>
<dd>  Sets/Replaces the Penetrated Element used in the creation of the Slot.
 <dt>
    <a href="#UpdateConnectionsSet"><b>UpdateConnectionsSet</b></a>
<dd>  Updates the Connection Set.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetCntnDetailName"><dt>

<table><tr><td>o Func <b>GetCntnDetailName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Gets the name of the UDF used for creating the slot.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUDFName</tt>
   <dd> [in]      Name of the UDF.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
 <dl>
 <dt>Example</dt>:
 <dd>
 This example gives the name of the UDF used in creating the slot.
 <pre>
 Dim SlotsonPlate As SfmSlots
 Set SlotsonPlate = SfmSuperPlateObj.GetSlotsOnPlate
 Dim SlotObj As SfmSlot
 Set SlotObj = SlotsonPlate.Item(1)
 Dim UDFName As String
 UDFName = SlotObj.<font color="red">GetCntnDetailName</font>
 </pre>
 </dl>
</dl>
</dl>
<a name="GetCntnDetailParameters"><dt>

<table><tr><td>o Sub <b>GetCntnDetailParameters</b>(<td><script type="text/javascript"> activateLink('SfmConnectionParameters','SfmConnectionParameters')</script> <td><tt>oListOfSlotParameters</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListOfParameterNames</tt>)</table></dt>
<dl>
  <dd>
 Gets the Information on Existing Slot.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfSlotParameters</tt>
   <dd> [out]      List of SfmConnectionParameters.
 </dd>
    <dt><tt> oListOfParameterNames</tt>
   <dd> [out]      List of Parameter Names set.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
 <dl>
 <dt>Example</dt>:
 <dd>
 This retrieves the Parameter List and Parameter Names and checks values assigned to these parameters.
 <pre>
 Dim SlotsonPlate As SfmSlots
 Set SlotsonPlate = SfmSuperPlateObj.GetSlotsOnPlate
 Dim SlotObj As SfmSlot
 Set SlotObj = SlotsonPlate.Item(1)
 Dim oListSlotParams As SfmConnectionParameters
 Dim ListOfParamNames() As Variant
 SlotObj.<font color="red">GetCntnDetailParameters</font>oListSlotParams,ListOfParamNames
 Dim UDFParam As Parameter
 ParamCount = oListSlotParams.Count
 Dim Value As String
 For i = 1 To ParamCount
  Set UDFParam = oListSlotParams.Item(i)  
  Value = UDFParam.ValueAsString
 Next
 </pre>
 </dl>
</dl>
</dl>
<a name="GetConnectionCoordinate"><dt>

<table><tr><td>o Func <b>GetConnectionCoordinate</b>(<td>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> </table></dt>
<dl>
  <dd>
 Gets thelocation of existing slot.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoordinate</tt>
   <dd> [out]      The Coordinates.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
 <dl>
 <dt>Example</dt>:
 <dd>
 The example retrieves slot Coordinates defined on start end.
 <pre>
 Dim SlotsonPlate As SfmSlots
 Set SlotsonPlate = SfmSuperPlateObj.GetSlotsOnPlate
 Dim SlotObj As SfmSlot
 Set SlotObj = SlotsonPlate.Item(1)
 Dim Coord() As Variant
 Dim x,y,z as Double
 Coord() = SlotObj.<font color="red">GetConnectionCoordinate</font>
 x = Coord(0)
 y = Coord(1)
 z = Coord(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetMasterObject"><dt>

<table><tr><td>o Func <b>GetMasterObject</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Gets the Penetrating Element used in the creation of the Slot.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPenetratingObject</tt>
   <dd> [out]      The retrieved element(Profile).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
<dl>
<dt>Example</dt>:
<dd>
 This example gets the Master Object.
 <pre>
 Dim SlotsonPlate As SfmSlots
 Set SlotsonPlate = SfmSuperPlateObj.GetSlotsOnPlate
 Dim SlotObj As SfmSlot
 Set SlotObj = SlotsonPlate.Item(1)
 Dim oPenetratingRef As Reference
 Set oPenetratingRef = SlotObj.<font color="red">GetMasterObject</font>
 </pre>
 </dl>
</dl>
</dl>
<a name="GetSlaveObject"><dt>

<table><tr><td>o Func <b>GetSlaveObject</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Gets the Penetrated Element used in the creation of the Slot.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPenetratedObject</tt>
   <dd> [out]      The retrieved element(Plate/Profile).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
<dl>
<dt>Example</dt>:
<dd>
 This example gets the Slave Object.
 <pre>
 Dim SlotsonPlate As SfmSlots
 Set SlotsonPlate = SfmSuperPlateObj.GetSlotsOnPlate
 Dim SlotObj As SfmSlot
 Set SlotObj = SlotsonPlate.Item(1)
 Dim oPenetratedRef As Reference
 Set oPenetratedRef = SlotObj.<font color="red">GetSlaveObject</font>
 </pre>
 </dl>
</dl>
</dl>
<a name="SetSlaveObject"><dt>

<table><tr><td>o Sub <b>SetSlaveObject</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSlaveObject</tt>)</table></dt>
<dl>
  <dd>
 Sets/Replaces the Penetrated Element used in the creation of the Slot.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSlaveObject</tt>
   <dd> [in]      The retrieved element(Plate/Profile).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
 <dl>
 <dt>Example</dt>:
 <dd>
 This example sets the Slave Object.
 <pre>
 Dim SlotsonPlate As SfmSlots
 Set SlotsonPlate = SfmSuperPlateObj.GetSlotsOnPlate
 Dim SlotObj As SfmSlot
 Set SlotObj = SlotsonPlate.Item(1)
 Dim oPenetratedRef As Reference
 Set oPenetratedRef = PartObj.CreateReferenceFromObject(SfmNewPlateObj)
 SlotObj.<font color="red">SetSlaveObject(oPenetratedRef)</font>
 </pre>
 </dl>
</dl>
</dl>
<a name="UpdateConnectionsSet"><dt>

<table><tr><td>o Sub <b>UpdateConnectionsSet</b>(<td>)</table></dt>
<dl>
  <dd>
 Updates the Connection Set.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <code>S_OK</code> if everything ran ok
 <dl>
 <dt>Example</dt>:
 <dd>
 The example Updates the Connection Set.
 <pre>
 Dim SlotsonPlate As SfmSlots
 Set SlotsonPlate = SfmSuperPlateObj.GetSlotsOnPlate
 Dim SlotObj As SfmSlot
 Set SlotObj = SlotsonPlate.Item(1)
 SlotObj.<font color="red">UpdateConnectionsSet</font>
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

