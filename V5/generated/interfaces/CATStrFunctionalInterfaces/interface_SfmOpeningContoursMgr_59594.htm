<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrFunctionalInterfaces SfmOpeningContoursMgr (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrFunctionalInterfaces.htm" href="../CATStrFunctionalInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrFunctionalInterfaces";	}
		function getCurrentObjectName() { 
 	return "SfmOpeningContoursMgr"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SfmOpeningContoursMgr<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SfmOpeningContoursMgr_59594','SfmOpeningContoursMgr','0');</script>
<b><i> Gets CATIASfmOpeningContoursMgr.</i></b><br>
Use this manager to GetAvailableStdOpeningContours & GetStdOpeningContourParams.
 <dl>
 <dt>Example</dt>:
<dd>
 Retrives the Manager from factory
 <pre>
  'Get the Factory
  Set Factory =  part1.GetCustomerFactory("SfmFunctionFactory")
  'Retrieve the Contour Manager
  Dim ObjSfmContourMgr As SfmOpeningContoursMgr
  Set ObjSfmContourMgr = Factory.GetOpeningMgr(Part1, "SfmOpeningContoursMgr")
 </pre>
 </dl><hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetAvailableStdOpeningContours"><b>GetAvailableStdOpeningContours</b></a>
<dd>  Get The list of Available Contours.
 <dt>
    <a href="#GetStdOpeningContourParams"><b>GetStdOpeningContourParams</b></a>
<dd>  Get The list of Parameters for a selected Contour Name.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetAvailableStdOpeningContours"><dt>

<table><tr><td>o Sub <b>GetAvailableStdOpeningContours</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListContourNames</tt>)</table></dt>
<dl>
  <dd>
 Get The list of Available Contours.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListContourNames</tt>
   <dd> [out]      Available Contour names
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok
 <dl>
 <dt>Example</dt>:
<dd>
 The Example demonstrates how to see available contours. Choose the required contour from the list.
 <pre>
  'Get the Factory
  Set Factory =  part1.GetCustomerFactory("SfmFunctionFactory")
  'Get the Contour Manager
  Dim ObjSfmContourMgr As SfmOpeningContoursMgr
  Set ObjSfmContourMgr = Factory.GetOpeningMgr(Part1, "SfmOpeningContoursMgr")
  'Get The List of Available Contours
  Dim oListContourNames() As Variant
  ObjSfmContourMgr.GetAvailableStdOpeningContours oListContourNames
  'Display The List of Available Contours
  Dim NbOfContour As Long
  NbOfContour = UBound(oListContourNames)
  Display List of contours
  For i = 0 To NbOfContour
  MsgBox oListContourNames(i)
  Next
 </pre>
 </dl>
</dl>
</dl>
<a name="GetStdOpeningContourParams"><dt>

<table><tr><td>o Func <b>GetStdOpeningContourParams</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iContourName</tt>) As <script type="text/javascript"> activateLink('SfmStandardContourParameters','SfmStandardContourParameters')</script> </table></dt>
<dl>
  <dd>
 Get The list of Parameters for a selected Contour Name.The list varies depending on the type of contour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContourName</tt>
   <dd> [in]      Contour names for which parameters need to be set.
 </dd>
    <dt><tt> oListCkeParms</tt>
   <dd> [out]      List of Parameters.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok
 <dl>
 <dt>Example</dt>:
<dd>
 The Example demonstartes what parameters are required to be set for a chosen contour.Here "Sfm_Rect" is the chosen contour.
 <pre>
  'Retrieve the Factory
  Set Factory =  part1.GetCustomerFactory("SfmFunctionFactory")
  'Retrieve the Contour Manager
  Dim ObjSfmContourMgr As SfmOpeningContoursMgr
  Set ObjSfmContourMgr = Factory.GetOpeningMgr(Part1, "SfmOpeningContoursMgr")
  ' Enter Contour Name for which Parameter values need to be set
  Dim oListCkeParms As SfmStandardContourParameters
  Set oListCkeParms = ObjSfmContourMgr.GetStdOpeningContourParams("Sfm_Rect")
 'Display List of Parameters for Selected Contour
  Dim NbOfParam As Long
  NbOfParam = oListCkeParms.Count
  Dim ContourParam As Parameter
  Dim ContourParamName As String
  For i = 1 To NbOfParam
  Set ContourParam = oListCkeParms.Item(i)
  ContourParamName = oListCkeParms.Item(i).Name
  MsgBox ContourParamName
 'Set Contour Parameter Values
 If ContourParamName = "Sfm_Width" Then
   ContourParam.ValuateFromString ("1000mm")
   End If
 If ContourParamName = "Sfm_Height" Then
  ContourParam.ValuateFromString ("5000mm")
   End If
 If ContourParamName = "Sfm_CornerRadius" Then
  ContourParam.ValuateFromString ("10mm")
   End If
   Next
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

