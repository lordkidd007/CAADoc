<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisInterfaces AnalysisImages (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAnalysisInterfaces.htm" href="../CATAnalysisInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAnalysisInterfaces";	}
		function getCurrentObjectName() { 
 	return "AnalysisImages"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AnalysisImages<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_AnalysisImages_35091','AnalysisImages','0');</script>
<b><i>   The collection of analysis images.</i></b><br>

 <p><hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates a new image and adds it to the analysis image collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns an analysis image using its index or its name from the analysis images collection.
 <dt>
    <a href="#RemoveImage"><b>RemoveImage</b></a>
<dd>  Deletes the Analysis Image from the analysis images collection of the Analysis Set.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iImageName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iHideExistingImages</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iShowMesh</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iDuplicate</tt>) As <script type="text/javascript"> activateLink('AnalysisImage','AnalysisImage')</script> </table></dt>
<dl>
  <dd>
 Creates a new image and adds it to the analysis image collection.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iImageName</tt>
   <dd> The name of the image to create.
 </dd>
    <dt><tt> iHideExistingImages</tt>
   <dd> To deactivate or not all the activated images before create the new image.
 </dd>
    <dt><tt> iShowMesh</tt>
   <dd> To show or not the mesh image.
 </dd>
    <dt><tt> iDuplicate</tt>
   <dd> To duplicate or not the new image, if same image already exists in collection of images.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Analysis Image
 
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example create <tt>ThisAnalysisImage</tt> in the <tt>analysisImages</tt>analysis <br>
 images collection. The image to create is supposed to be a mesh deformed image. <br>
 <pre>
 Dim ThisAnalysisImage As AnalysisImage
 Set ThisAnalysisImage = analysisImages.Add("Mesh_Deformed", True, False, False)
 </pre></pre></dd>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('AnalysisImage','AnalysisImage')</script> </table></dt>
<dl>
  <dd>
 Returns an analysis image using its index or its name from the analysis images collection. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the analysis image to retrieve from
   the collection of analysis images.
   This index is the rank of the analysis image in the collection.
   The index of the first analysis image in the collection is 1, and
   the index of the last analysis image is Count.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The retrieved analysis image
 
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example retrieves in <tt>ThisAnalysisImage</tt> the third analysis image.
 <pre>
 Dim ThisAnalysisImage As AnalysisImage
 Set ThisAnalysisImage = analysisImages.<font color="red">Item</font>(3)
 </pre></pre></dd>
</dl>
</dl>
<a name="RemoveImage"><dt>

<table><tr><td>o Sub <b>RemoveImage</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iImageIdentifier</tt>)</table></dt>
<dl>
  <dd>
 Deletes the Analysis Image from the analysis images collection of the Analysis Set. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iImageIdentifier</tt>
   <dd>   The index or the name of the analysis image to delete from the Analysis Set.
   Note: The index given is the position of the image in the Analysis Set.
   Note: The name given is the string got from analysisImage.Name
	  If the index or the name specified is not present in the Analysis Set, this method FAILS.
   The index of the first analysis image in the collection is 1, and
   the index of the last analysis image is Count.

 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  Example 1
 In this example analysisImages1 is the Analysis Set and analysisImage1 is the image present in it.
 imageName = analysisImage1.Name
 analysisImages1.RemoveImage(imageName)
 
 Example 2
 analysisImages1.RemoveImage(4)
 In this example 4 is the index of the Image to be deleted in Analysis Set: analysisImages1</pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

