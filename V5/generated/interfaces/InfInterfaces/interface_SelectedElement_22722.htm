<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InfInterfaces SelectedElement (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../InfInterfaces.htm" href="../InfInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "InfInterfaces";	}
		function getCurrentObjectName() { 
 	return "SelectedElement"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SelectedElement<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SelectedElement_22722','SelectedElement','0');</script>
<b><i> Represents an element contained by a Selection object.</i></b><br>

 This object is an object contained by a <script type="text/javascript"> activateLinkAnchor('Selection','','Selection') </script> object. The 
<script type="text/javascript"> activateLinkAnchor('Selection','','Selection') </script> object contains 
<script type="text/javascript"> activateLinkAnchor('SelectedElement','','SelectedElement') </script> objects, which are accessed through the 
<script type="text/javascript"> activateLinkAnchor('Selection','Count2','Selection.Count2') </script> and 
<script type="text/javascript"> activateLinkAnchor('Selection','Item2','Selection.Item2') </script> methods.
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Document"><b>Document</b></a>
<dd>  Returns the document to which the selected element belongs.
 <dt>
    <a href="#LeafProduct"><b>LeafProduct</b></a>
<dd>  Returns the leaf product corresponding to the selection in the specification tree.
 <dt>
    <a href="#Reference"><b>Reference</b></a>
<dd>  Returns a Reference version of the Value property.
 <dt>
    <a href="#Type"><b>Type</b></a>
<dd>  Returns the string constant which describes the selected element Automation type.
 <dt>
    <a href="#Value"><b>Value</b></a>
<dd>  Returns the actual selected automation object.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetCoordinates"><b>GetCoordinates</b></a>
<dd>  Returns the coordinates of the pick point.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Document"><dt>

<table><tr><td>o Property <b>Document</b>(<td>) As <script type="text/javascript"> activateLink('Document','Document')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the document to which the selected element belongs.
</dl>
<a name="LeafProduct"><dt>

<table><tr><td>o Property <b>LeafProduct</b>(<td>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the leaf product corresponding to the selection in the specification tree.
 <br><b>Role</b>: Returns the leaf 
<script type="text/javascript"> activateLinkAnchor('Product','','Product') </script> (component, corresponding for example to "Product1.1" in the specification tree). The 
<script type="text/javascript"> activateLinkAnchor('AnyObject','','AnyObject') </script> returned is a 
<script type="text/javascript"> activateLinkAnchor('Product','','Product') </script> if a product appears in the specification tree, in the path corresponding to the current selection, and a fake 
<script type="text/javascript"> activateLinkAnchor('AnyObject','','AnyObject') </script> whose 
<script type="text/javascript"> activateLinkAnchor('AnyObject','Name','AnyObject.Name') </script> property equals to "InvalidLeafProduct" otherwise.</br> Cumulated with the use of the 
<script type="text/javascript"> activateLinkAnchor('AnyObject','Parent','AnyObject.Parent') </script> property (which enables to navigate into the object structure), the current property enables the scripter to obtain the path, in the specification tree,
 corresponding to the selection.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  The following example supposes a </pre></dd>
<script type="text/javascript"> activateLinkAnchor('Part','','Part') </script> or a 
<script type="text/javascript"> activateLinkAnchor('Product','','Product') </script> is opened. It asks the end user to select a 
<script type="text/javascript"> activateLinkAnchor('Shape','','Shape') </script> in the current window. It then sends message boxes containing the names of the automation objects contained in the specification tree path corresponding to the shape selected, and, regarding the 
 automation objects which are products (only products which are components), a message box containing the 
 abcissa of the translation of the product compared to its reference product.
 <pre>
 Dim Status,Feature,LeafProduct,LeafProductProcessed,InputObjectType(0)
 Dim Document,Selection,AutomationTreeNodeOrProduct,Position,AxisComponentsArray(11)
 Set Document = CATIA.ActiveDocument : Set Selection = Document.Selection
'We propose to the user that he select a feature
 InputObjectType(0)="AnyObject" 
 Status=Selection.SelectElement2(InputObjectType,"Select a feature",true)
 if (Status = "Cancel") then Exit Sub
 Set Feature = Selection.Item(1).Value
 Set LeafProduct = Selection.Item(1).LeafProduct
 LeafProductProcessed = true
 if (LeafProduct.Name&lt;&gt;"InvalidLeafProduct") then LeafProductProcessed = false
 Set AutomationTreeNodeOrProduct = Feature
 do while (TypeName(AutomationTreeNodeOrProduct)&lt;&gt;"Application")
'  We send a message box, if AutomationTreeNodeOrProduct is not nor a Shapes object neither a PartDocument object
     if ((TypeName(AutomationTreeNodeOrProduct)&lt;&gt;"Shapes") And _
         (TypeName(AutomationTreeNodeOrProduct)&lt;&gt;"Bodies") And _
         (TypeName(AutomationTreeNodeOrProduct)&lt;&gt;"PartDocument") And _
         (TypeName(AutomationTreeNodeOrProduct)&lt;&gt;"Products") And _
         (TypeName(AutomationTreeNodeOrProduct)&lt;&gt;"ProductDocument")) then
         msgbox AutomationTreeNodeOrProduct.Name
         if (TypeName(AutomationTreeNodeOrProduct)="Product") then
'          We display a message box containing the abcissa of the translation, except in the case of the
'          root product
             if (TypeName(AutomationTreeNodeOrProduct.Parent.Parent)&lt;&gt;"Application") then
                 Set Position = AutomationTreeNodeOrProduct.Position
                 Call Position.GetComponents(AxisComponentsArray)
                 msgbox AxisComponentsArray(9)
             end if
         end if
     end if
'  We determine the next automation tree node or product
     Set AutomationTreeNodeOrProduct = AutomationTreeNodeOrProduct.Parent
     if ((TypeName(AutomationTreeNodeOrProduct)="Application") And (Not LeafProductProcessed)) then
'      The specification tree path corresponding to the selection contains at least one product, which the current
'      loop as not yet processed. It means that the parent in the specification tree of the feature corresponding
'      to the last message box sent is LeafProduct
         Set AutomationTreeNodeOrProduct = LeafProduct
         LeafProductProcessed = true
     end if
 loop</pre>
 If you run the preceeding piece of script, the current document beeing a product with the following specification
 tree: 
 <pre>
     +--------+ 
     !Product3!
     +----+---+
          !
          +- Product2 (Product2.1)             'translation value: 10
          !     !
          !     +- Product1 (Product1.1)       'translation value: 20
          !           !
          !           +- Part1 (Part1.1)       
          !                !
          !                +- Part1
          !                     !
          !                     +- PartBody
          !                           !
          !                           +- Pad.1
          +- Part2 (Part2.1)</pre>
 and you select Pad.1, the message boxes displayed will be:
 <pre>
     Pad.1
     PartBody
     Part1
     Part1.1
     Product1.1
     20
     Product2.1
     10
     Product3
 </pre>
</dl>
</dl>
<a name="Reference"><dt>

<table><tr><td>o Property <b>Reference</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns a Reference version of the Value property.
 <br><b>Role</b>: Returns a 
<script type="text/javascript"> activateLinkAnchor('Reference','','Reference') </script> version of 
<script type="text/javascript"> activateLinkAnchor('','Value','Value') </script> .
</dl>
<a name="Type"><dt>

<table><tr><td>o Property <b>Type</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the string constant which describes the selected element Automation type.
 <br>This type is returned by the 
<script type="text/javascript"> activateLinkAnchor('','Value','Value') </script> property, and may be, for instance <tt>"Pad"</tt> or <tt>"Line2D"</tt>.
 <br><b>Caution</b>: This property gives the leaf automation type of the object, in the
 inheritance hierarchy. Nevertheless, after a call to 
<script type="text/javascript"> activateLinkAnchor('Selection','SelectElement2','Selection.SelectElement2') </script> , 
<script type="text/javascript"> activateLinkAnchor('Selection','SelectElement3','Selection.SelectElement3') </script> , 
<script type="text/javascript"> activateLinkAnchor('Selection','SelectElement4','Selection.SelectElement4') </script> , 
<script type="text/javascript"> activateLinkAnchor('Selection','IndicateOrSelectElement2D','Selection.IndicateOrSelectElement2D') </script> or 
<script type="text/javascript"> activateLinkAnchor('Selection','IndicateOrSelectElement3D','Selection.IndicateOrSelectElement3D') </script> ,  this property gives the input filter string constant relative to the effective selection (more precisely 
 the first filter string constant delivered through the iFilterType
 parameter, for which the current automation object fullfills the string constant). This string constant may be
 an automation object name corresponding to the iFilterType parameter with which
 
<script type="text/javascript"> activateLinkAnchor('Selection','SelectElement2','Selection.SelectElement2') </script> has previously been called, or even a 
<script type="text/javascript"> activateLinkAnchor('CATSelectionFilter','','CATSelectionFilter') </script> value name. 
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  Suppose you run the following piece of script: 
 <pre>
 Set Selection = CATIA.ActiveDocument.Selection
'  We propose to the user that he select a Prism or a Hole
 ReDim InputObjectType(1) : InputObjectType(0)="Prism" : InputObjectType(1)="Hole"
 Status=Selection.SelectElement2(InputObjectType,"Select a prism or a hole",true)
 if (Status = "Cancel") then Exit Sub
 AutomationType = Selection.Item(1).Type</pre>
 If the user selects a Pad, the script <tt>AutomationType</tt> variable will contain <tt>"Prism"</tt>
 and not <tt>"Pad"</tt>.
 <br><p>Consequently, in most cases, use the VBScript TypeName function instead of this property.</pre></dd>
</dl>
</dl>
<a name="Value"><dt>

<table><tr><td>o Property <b>Value</b>(<td>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the actual selected automation object.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetCoordinates"><dt>

<table><tr><td>o Sub <b>GetCoordinates</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>ioPoint</tt>)</table></dt>
<dl>
  <dd>
 Returns the coordinates of the pick point. 	
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPoint</tt>
   <dd> The coordinates of the pick point, i.e. the hit between the geometric object and the cursor.</br> 
 The length of this parameter will be 3, except if the document is a </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('DrawingDocument','','DrawingDocument') </script> <br> 
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example retrieves the coordinates of the pick point in the
 array myArray:
<pre>
 Dim oSelElem As SelectedElement
 Set oSelElem = CATIA.ActiveDocument.Selection.Item(1)
 ReDim myArray(2)
 oSelElem.GetCoordinates myArray
</pre></pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

