<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMTInterfaces VibrationVolumes (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMTInterfaces.htm" href="../SMTInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMTInterfaces";	}
		function getCurrentObjectName() { 
 	return "VibrationVolumes"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VibrationVolumes<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_VibrationVolumes_24682','VibrationVolumes','0');</script>
<b><i>   Interface to compute vibration volumes</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CleanUp"><b>CleanUp</b></a>
<dd>  Cleans up.
 <dt>
    <a href="#ComputeVibrationVolume"><b>ComputeVibrationVolume</b></a>
<dd>  Computes a vibration volume, from a position input file.
 <dt>
    <a href="#ComputeVibrationVolumeFromTrack"><b>ComputeVibrationVolumeFromTrack</b></a>
<dd>  Computes a vibration volume, from a track.
 <dt>
    <a href="#ComputeVibrationVolumeFromTrackWithAReference"><b>ComputeVibrationVolumeFromTrackWithAReference</b></a>
<dd>  Computes a vibration volume, from a track, according to a reference product.
 <dt>
    <a href="#ComputeVibrationVolumeWithAReference"><b>ComputeVibrationVolumeWithAReference</b></a>
<dd>  Computes a vibration volume, from a position input file, according to a reference product.
 <dt>
    <a href="#VibrationVolumeShapeName"><b>VibrationVolumeShapeName</b></a>
<dd>  Returns the name of the associated shape.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CleanUp"><dt>

<table><tr><td>o Sub <b>CleanUp</b>(<td>)</table></dt>
<dl>
  <dd>
 Cleans up.
</dl>
<a name="ComputeVibrationVolume"><dt>

<table><tr><td>o Func <b>ComputeVibrationVolume</b>(<td><script type="text/javascript"> activateLink('Group','Group')</script> <td><tt>GroupOfSelectedProducts</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>PositionsFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAccuracy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSimplifAccuracy</tt>) As <script type="text/javascript"> activateLink('Document','Document')</script> </table></dt>
<dl>
  <dd>
 Computes a vibration volume, from a position input file.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> GroupOfSelectedProducts</tt>
   <dd>   Selection of products to make vibrate.
 </dd>
    <dt><tt> PositionsFilePath</tt>
   <dd>   Positions file path.
 </dd>
    <dt><tt> iAccuracy</tt>
   <dd>   Grain for wrapping.
 </dd>
    <dt><tt> iSimplifAccuracy</tt>
   <dd>   Accuracy for simplification. A non positive value makes the simplification inactive.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    VibrationVolumeDocument: Document containing the result.
</dl>
</dl>
<a name="ComputeVibrationVolumeFromTrack"><dt>

<table><tr><td>o Func <b>ComputeVibrationVolumeFromTrack</b>(<td><script type="text/javascript"> activateLink('Group','Group')</script> <td><tt>GroupOfSelectedProducts</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>iSweptAble</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAccuracy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSimplifAccuracy</tt>) As <script type="text/javascript"> activateLink('Document','Document')</script> </table></dt>
<dl>
  <dd>
 Computes a vibration volume, from a track.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> GroupOfSelectedProducts</tt>
   <dd>   Selection of products to make vibrate.
 </dd>
    <dt><tt> iSweptAble</tt>
   <dd>   Track containing the positions.
 </dd>
    <dt><tt> iAccuracy</tt>
   <dd>   Grain for wrapping.
 </dd>
    <dt><tt> iSimplifAccuracy</tt>
   <dd>   Accuracy for simplification. A non positive value makes the simplification inactive.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    VibrationVolumeDocument: Document containing the result.
</dl>
</dl>
<a name="ComputeVibrationVolumeFromTrackWithAReference"><dt>

<table><tr><td>o Func <b>ComputeVibrationVolumeFromTrackWithAReference</b>(<td><script type="text/javascript"> activateLink('Group','Group')</script> <td><tt>GroupOfSelectedProducts</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iReferenceProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>iSweptAble</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAccuracy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSimplifAccuracy</tt>) As <script type="text/javascript"> activateLink('Document','Document')</script> </table></dt>
<dl>
  <dd>
 Computes a vibration volume, from a track, according to a reference product.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> GroupOfSelectedProducts</tt>
   <dd>   Selection of products to make vibrate.
 </dd>
    <dt><tt> iReferenceProduct</tt>
   <dd>   Product taken as a reference.
 </dd>
    <dt><tt> iSweptAble</tt>
   <dd>   Track containing the positions.
 </dd>
    <dt><tt> iAccuracy</tt>
   <dd>   Grain for wrapping.
 </dd>
    <dt><tt> iSimplifAccuracy</tt>
   <dd>   Accuracy for simplification. A non positive value makes the simplification inactive.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    VibrationVolumeDocument: Document containing the result.
</dl>
</dl>
<a name="ComputeVibrationVolumeWithAReference"><dt>

<table><tr><td>o Func <b>ComputeVibrationVolumeWithAReference</b>(<td><script type="text/javascript"> activateLink('Group','Group')</script> <td><tt>iGroupOfSelectedProducts</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iReferenceProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>PositionsFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAccuracy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSimplifAccuracy</tt>) As <script type="text/javascript"> activateLink('Document','Document')</script> </table></dt>
<dl>
  <dd>
 Computes a vibration volume, from a position input file, according to a reference product.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGroupOfSelectedProducts</tt>
   <dd>   Selection of products to make vibrate.
 </dd>
    <dt><tt> iReferenceProduct</tt>
   <dd>   Product taken as a reference.
 </dd>
    <dt><tt> PositionsFilePath</tt>
   <dd>   Positions file path.
 </dd>
    <dt><tt> iAccuracy</tt>
   <dd>   Grain for wrapping.
 </dd>
    <dt><tt> iSimplifAccuracy</tt>
   <dd>   Accuracy for simplification. A non positive value makes the simplification inactive.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    VibrationVolumeDocument: Document containing the result.
</dl>
</dl>
<a name="VibrationVolumeShapeName"><dt>

<table><tr><td>o Func <b>VibrationVolumeShapeName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns the name of the associated shape.
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

