<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Collection (Collection)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Object Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href=".htm">Previous</a>  <a href="interface_CommandStatisticsSettingAtt_154823.htm">Next</a>  <a href="../CAAHomeIdx.htm">Indexes</a>  </pre>
<hr>
<h1>Collection<font size=-1> (Collection)</font></h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">IDispatch</a>
    |
    +---<a href="../System/interface_CATBaseUnknown_40786.htm">CATBaseUnknown</a>
      |
      +---<a href="../System/interface_CATBaseDispatch_45333.htm">CATBaseDispatch</a>
        |
        +---Collection
 </pre>
<hr><br>
<b><i> Represents the base object for collections.</i></b><br>

 As a base object, it provides properties and methods shared by
 any other object.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Application"><b>Application</b></a>
<dd>  Returns the application.
 <dt>
    <a href="#Count"><b>Count</b></a>
<dd>  Returns the number of objects in the collection.
 <dt>
    <a href="#Name"><b>Name</b></a>
<dd>  Returns or sets the name of the object.
 <dt>
    <a href="#Parent"><b>Parent</b></a>
<dd>  Returns the parent object.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetItem"><b>GetItem</b></a>
<dd>  Returns an object from its name.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Application"><dt>

<table><tr><td>o Property <b>Application</b>(<td>) As <a href="../InfInterfaces/interface_Application_26636.htm">CATIAApplication</a>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the application.
 The application is the root object in the object structure and can be
 retrieved from any object
 in the object structure using the Application property.
 The Application property is the way to jump from any object up to the
 root of the object data structure, allowing then to navigate downwards.
 For in-process scripting, the application is always referred to as
 <tt>CATIA</tt>.
 Note that the Application property of the Application object returns the
 Application object itself.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>CurrentApplication</tt> the application
 object, root of the object structure, from a given object of this
 structure: a document refered to using the <tt>MyDocCollecion</tt>
 variable.
 <pre>
 Dim CurrentApplication As Application
 Set CurrentApplication = MyDocCollecion.<font color="red">Application</font>
 </pre>
 </dl>
</dl>
<a name="Count"><dt>

<table><tr><td>o Property <b>Count</b>(<td>) As long  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the number of objects in the collection.
 This is handy to scan all the objects in a collection.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in  <tt>ObjectNumber</tt> the number of objects
 currently gathered in <tt>MyCollection</tt>.
 <pre>
 ObjectNumber = MyCollection.<font color="red">Count</font>
 </pre>
 </dl>
</dl>
<a name="Name"><dt>

<table><tr><td>o Property <b>Name</b>(<td>) As <a href="../System/typedef_CATBSTR_8129.htm">CATBSTR</a>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns or sets the name of the object.
 The name is a character string you can assign to any object to
 handle it easier.
 In the case of an object part of a collection, the name can often
 be used in place of the object rank to retrieve or remove the object,
 providing the Item and Remove methods of the collection feature
 an argument with the Variant type.
 If the object has no name set, the name returned is the one of
 its parent.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets to <tt>MyObject</tt> the name <tt>Nice and Handy
 Object Name</tt>.
 <pre>
 MyObject.<font color="red">Name</font>("Nice and Handy Object Name")
 </pre>
 </dl>
</dl>
<a name="Parent"><dt>

<table><tr><td>o Property <b>Parent</b>(<td>) As <a href="../System/interface_CATBaseDispatch_45333.htm">CATBaseDispatch</a>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the parent object.
 The parent object of a given object is the object that created this
 object, usually the object just above in the object tree structure
 and that aggregates it.
 In the case of an object part of a collection, the parent object
 is not the collection object itself, but the object that
 aggregates the collection object.
 The Parent property is the way to step upwards in the object data
 structure.
 Note that the Parent property of the Application object returns the
 Application object itself.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ParentObject</tt> the parent object
 of the <tt>GivenObject</tt> object.
 <pre>
 Dim ParentObject As AnyObject
 Set ParentObject = GivenObject.<font color="red">Parent</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetItem"><dt>

<table><tr><td>o Func <b>GetItem</b>(<td><a href="../System/typedef_CATBSTR_8129.htm">CATBSTR</a> <td><tt>IDName</tt>) As <a href="../System/interface_CATBaseDispatch_45333.htm">CATBaseDispatch</a> </table></dt>
<dl>
  <dd>
 Returns an object from its name.
 <br><b>Role</b>: To retrieve an object when only its name is available.
 <b>You should not use this method</b>, but you can find it in the macros generated
 by the Tools->Macro command.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> IDName</tt>
   <dd>   The searched obect name
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The searched object
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
