<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSchPlatformInterfaces SchGRRRoute (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSchPlatformInterfaces.htm" href="../CATSchPlatformInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSchPlatformInterfaces";	}
		function getCurrentObjectName() { 
 	return "SchGRRRoute"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SchGRRRoute<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SchGRRRoute_37812','SchGRRRoute','0');</script>
<b><i>  Manage the graphical representations of a schematic route.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddPoints"><b>AddPoints</b></a>
<dd>  Add a list of point to a route.
 <dt>
    <a href="#Break"><b>Break</b></a>
<dd>  Break a route graphic into 2 pieces.
 <dt>
    <a href="#Compress"><b>Compress</b></a>
<dd>  Compress a the defining points of a route graphic, removing coincident points.
 <dt>
    <a href="#Compress2"><b>Compress2</b></a>
<dd>  Compress the defining points of a route graphic, removing coincident points.
 <dt>
    <a href="#Concatenate"><b>Concatenate</b></a>
<dd>  Concatenate 2 route graphic objects into one.
 <dt>
    <a href="#ConcatenateKeepGRR2"><b>ConcatenateKeepGRR2</b></a>
<dd>  Concatenate 2 route graphic objects into one.
 <dt>
    <a href="#CreateRouteSymbol"><b>CreateRouteSymbol</b></a>
<dd>  Place a symbol on the route.
 <dt>
    <a href="#GetEndPoint"><b>GetEndPoint</b></a>
<dd>  Get the end point of the route graphic.
 <dt>
    <a href="#GetPath"><b>GetPath</b></a>
<dd>  Get the defining points of a route graphic.
 <dt>
    <a href="#GetStartPoint"><b>GetStartPoint</b></a>
<dd>  Get the start point of the route graphic.
 <dt>
    <a href="#ListRouteSymbols"><b>ListRouteSymbols</b></a>
<dd>  List route symbols on the route.
 <dt>
    <a href="#RemovePoints"><b>RemovePoints</b></a>
<dd>  Remove points from route graphic.
 <dt>
    <a href="#SetEndPoint"><b>SetEndPoint</b></a>
<dd>  Set the end point of the route graphic.
 <dt>
    <a href="#SetPath"><b>SetPath</b></a>
<dd>  Set the defining points of a route graphic.
 <dt>
    <a href="#SetPath2"><b>SetPath2</b></a>
<dd>  Set the defining points of a route graphic.
 <dt>
    <a href="#SetPath3"><b>SetPath3</b></a>
<dd>  Set the defining points of a route graphic.
 <dt>
    <a href="#SetStartPoint"><b>SetStartPoint</b></a>
<dd>  Set the start point of the route graphic.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddPoints"><dt>

<table><tr><td>o Sub <b>AddPoints</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iLDb2PtPathToAdd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iAfterWhichPtNum</tt>)</table></dt>
<dl>
  <dd>
 Add a list of point to a route. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLDbPtPathToAdd</tt>
   <dd>   A list of X-Y coordinates of the points to be added. 
   2 doubles per point.
 </dd>
    <dt><tt> iAfterWhichPtNum</tt>
   <dd>   The point number to add the points after. Use 0 to indicate adding
   before the first point.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim dbVar1(x) As CATSafeArrayVariant
 Dim intVar3 As Integer
  ...
 objThisIntf.<font color="red">AddPoints</font>dbVar1,intVar3
 </pre>
</pre></dd>
</dl>
</dl>
<a name="Break"><dt>

<table><tr><td>o Sub <b>Break</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDb2Pt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDb2Pt2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>oNewGRRRoute</tt>)</table></dt>
<dl>
  <dd>
 Break a route graphic into 2 pieces. The old graphic is shortened and a new
 graphic is created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDb2Pt1</tt>
   <dd>   X-Y coordinates of point 1 to break the route at (this point is
   <b>mandatory</b>).
 </dd>
    <dt><tt> iDb2Pt2</tt>
   <dd>   X-Y coordinates of point 2 to break the route at (this point is
   <b>optional</b>). If provided the points in between point 1 and this
   point will be eliminated. Point 1 is the last point of the shortened
   old route and point 2 is the first point of the new route. If this point
   is not provided (i.e. sends in a NULL). point 1 and point 2 are the same.
 </dd>
    <dt><tt> oNewGRRRoute</tt>
   <dd>   The new line string graphic created (CATISchGRRRoute interface pointer)
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim dbVar1(2) As CATSafeArrayVariant
 Dim dbVar2(2) As CATSafeArrayVariant
 Dim objArg3 As SchGRRRoute
  ...
 objThisIntf.<font color="red">Break</font>dbVar1,dbVar2,objArg3
 </pre>
</pre></dd>
</dl>
</dl>
<a name="Compress"><dt>

<table><tr><td>o Sub <b>Compress</b>(<td>)</table></dt>
<dl>
  <dd>
 Compress a the defining points of a route graphic, removing coincident points.
    
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
  ...
 objThisIntf.<font color="red">Compress</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="Compress2"><dt>

<table><tr><td>o Sub <b>Compress2</b>(<td><script type="text/javascript"> activateLink('CatSchIDLRouteUnsetGapsMode','CatSchIDLRouteUnsetGapsMode')</script> <td><tt>iUnsetGaps</tt>)</table></dt>
<dl>
  <dd>
 Compress the defining points of a route graphic, removing coincident points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUnsetGaps</tt>
   <dd>   Whether to unset gaps (in all the effected routes: this route and
   other routes intersecting it) or not
        = SchUnsetGapsOn   : unset gaps
        = SchUnsetGapsOff  : don't unset gaps
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute

  ...
 objThisIntf.<font color="red">Compress2</font>CatSchIDLRouteUnsetGapsMode_Enum
 </pre>
</pre></dd>
</dl>
</dl>
<a name="Concatenate"><dt>

<table><tr><td>o Sub <b>Concatenate</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iWhichEnd1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRRRoute2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iWhichEnd2</tt>)</table></dt>
<dl>
  <dd>
 Concatenate 2 route graphic objects into one. 
 The first route graphic is elongated and the second object is deleted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWhichEnd1</tt>
   <dd>   =1 at start point; =2 at end point
 </dd>
    <dt><tt> iGRRRoute2</tt>
   <dd>   Second route graphic object (CATISchGRRRoute interface pointer)
   to be concatenated to the first. This route graphic will be deleted.
 </dd>
    <dt><tt> iWhichEnd2</tt>
   <dd>   =1 at start point; =2 at end point
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim intVar1 As Integer
 Dim objArg2 As SchGRRRoute
 Dim intVar3 As Integer
  ...
 objThisIntf.<font color="red">Concatenate</font>intVar1,objArg2,intVar3
 </pre>
</pre></dd>
</dl>
</dl>
<a name="ConcatenateKeepGRR2"><dt>

<table><tr><td>o Sub <b>ConcatenateKeepGRR2</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iWhichEnd1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRRRoute2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iWhichEnd2</tt>)</table></dt>
<dl>
  <dd>
 Concatenate 2 route graphic objects into one. 
 The first route graphic is elongated and the second object is unchanged.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWhichEnd1</tt>
   <dd>   =1 at start point; =2 at end point
 </dd>
    <dt><tt> iGRRRoute2</tt>
   <dd>   Second route graphic object (CATISchGRRRoute interface pointer)
   to be concatenated to the first. This route graphic will be unchanged.
 </dd>
    <dt><tt> iWhichEnd2</tt>
   <dd>   =1 at start point; =2 at end point
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim intVar1 As Integer
 Dim objArg2 As SchGRRRoute
 Dim intVar3 As Integer
  ...
 objThisIntf.<font color="red">ConcatenateKeepGRR2</font>intVar1,objArg2,intVar3
 </pre>
</pre></dd>
</dl>
</dl>
<a name="CreateRouteSymbol"><dt>

<table><tr><td>o Sub <b>CreateRouteSymbol</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iSegNum</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSegParm</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchGRR','SchGRR')</script> <td><tt>iGRRSymbol</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchRouteSymbol','SchRouteSymbol')</script> <td><tt>oRouteSymbol</tt>)</table></dt>
<dl>
  <dd>
 Place a symbol on the route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSegNum</tt>
   <dd>   The route segment number to place the symbol on.
 </dd>
    <dt><tt> iSegParm</tt>
   <dd>   The parameter along the segment used to place the symbol on (0.<=iSegParm<=1.).
 </dd>
    <dt><tt> iGRRSymbol</tt>
   <dd>   The graphical primitive (detail) to be used for the symbol.
 </dd>
    <dt><tt> oRouteSymbol</tt>
   <dd>   The created route symbol (ditto).

 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim intVar1 As Integer
 Dim dbVar2 As Double;
 Dim objArg3 As SchGRR
 Dim objArg4 As SchRouteSymbol
  ...
 objThisIntf.<font color="red">CreateRouteSymbol</font>intVar1,dbVar2,objArg3,objArg4
 </pre>
</pre></dd>
</dl>
</dl>
<a name="GetEndPoint"><dt>

<table><tr><td>o Sub <b>GetEndPoint</b>(<td><script type="text/javascript"> activateLink('SchListOfDoubles','SchListOfDoubles')</script> <td><tt>oDb2EndPt</tt>)</table></dt>
<dl>
  <dd>
 Get the end point of the route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDb2EndPt</tt>
   <dd>   X-Y coordinates of the end point of the route graphic object.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim objArg1 As SchListOfDoubles
  ...
 objThisIntf.<font color="red">GetEndPoint</font>objArg1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="GetPath"><dt>

<table><tr><td>o Sub <b>GetPath</b>(<td><script type="text/javascript"> activateLink('SchListOfDoubles','SchListOfDoubles')</script> <td><tt>oLDb2PtPath</tt>)</table></dt>
<dl>
  <dd>
 Get the defining points of a route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of the points. 2 doubles per point.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim objArg1 As SchListOfDoubles
 Dim intVar2 As Integer
  ...
 objThisIntf.<font color="red">GetPath</font>objArg1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="GetStartPoint"><dt>

<table><tr><td>o Sub <b>GetStartPoint</b>(<td><script type="text/javascript"> activateLink('SchListOfDoubles','SchListOfDoubles')</script> <td><tt>oDb2StartPt</tt>)</table></dt>
<dl>
  <dd>
 Get the start point of the route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDb2StartPt</tt>
   <dd>   X-Y coordinates of the start point of the route graphic object.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim objArg1 As SchListOfDoubles
  ...
 objThisIntf.<font color="red">GetStartPoint</font>objArg1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="ListRouteSymbols"><dt>

<table><tr><td>o Func <b>ListRouteSymbols</b>(<td>) As <script type="text/javascript"> activateLink('SchListOfObjects','SchListOfObjects')</script> </table></dt>
<dl>
  <dd>
 List route symbols on the route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLRouteSymbol</tt>
   <dd>   A list of route symbols.
   (members are CATIASchRouteSymbol objects).

 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim objArg1 As SchListOfObjects
  ...
 Set objArg1 = objThisIntf.<font color="red">ListRouteSymbols</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="RemovePoints"><dt>

<table><tr><td>o Sub <b>RemovePoints</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iNumOfPtsToRemove</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iAfterWhichPtNum</tt>)</table></dt>
<dl>
  <dd>
 Remove points from route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumOfPtsToRemove</tt>
   <dd>   The number of points to be removed
 </dd>
    <dt><tt> iAfterWhichPtNum</tt>
   <dd>   The point number at which to start removing the point.  
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim intVar1 As Integer
 Dim intVar2 As Integer
  ...
 objThisIntf.<font color="red">RemovePoints</font>intVar1,intVar2
 </pre>
</pre></dd>
</dl>
</dl>
<a name="SetEndPoint"><dt>

<table><tr><td>o Sub <b>SetEndPoint</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDb2EndPt</tt>)</table></dt>
<dl>
  <dd>
 Set the end point of the route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDb2EndPt</tt>
   <dd>   X-Y coordinates of the end point of the route graphic object to be set.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim dbVar1(2) As CATSafeArrayVariant
  ...
 objThisIntf.<font color="red">SetEndPoint</font>dbVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="SetPath"><dt>

<table><tr><td>o Sub <b>SetPath</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iLDb2PtPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatSchIDLRouteCompressMode','CatSchIDLRouteCompressMode')</script> <td><tt>iCompress</tt>)</table></dt>
<dl>
  <dd>
 Set the defining points of a route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of the points to be set. 2 doubles per point.
 </dd>
    <dt><tt> iCompress</tt>
   <dd>    Whether to compress the route (i.e., remove duplicate pts, colinear
   segments, etc.) or not
        = SchCompressOn   : compress
        = SchCompressOff  : don't compress
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim dbVar1(x) As CATSafeArrayVariant

  ...
 objThisIntf.<font color="red">SetPath</font>dbVar1,CatSchIDLRouteCompressMode_Enum
 </pre>
</pre></dd>
</dl>
</dl>
<a name="SetPath2"><dt>

<table><tr><td>o Sub <b>SetPath2</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iLDb2PtPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatSchIDLRouteCompressMode','CatSchIDLRouteCompressMode')</script> <td><tt>iCompress</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatSchIDLRouteUnsetGapsMode','CatSchIDLRouteUnsetGapsMode')</script> <td><tt>iUnsetGaps</tt>)</table></dt>
<dl>
  <dd>
 Set the defining points of a route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of the points to be set. 2 doubles per point.
 </dd>
    <dt><tt> iCompress</tt>
   <dd>    Whether to compress the route (i.e., remove duplicate pts, colinear
   segments, etc.) or not
        = SchCompressOn   : compress
        = SchCompressOff  : don't compress
 </dd>
    <dt><tt> iUnsetGaps</tt>
   <dd>   Whether to unset gaps (in all the effected routes: this route and
   other routes intersecting it) or not
        = SchUnsetGapsOn   : unset gaps
        = SchUnsetGapsOff  : don't unset gaps
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim dbVar1(x) As CATSafeArrayVariant

  ...
 objThisIntf.<font color="red">SetPath2</font>dbVar1,CatSchIDLRouteCompressMode_Enum,CatSchIDLRouteUnsetGapsMode_Enum
 </pre>
</pre></dd>
</dl>
</dl>
<a name="SetPath3"><dt>

<table><tr><td>o Sub <b>SetPath3</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iLDb2PtPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatSchIDLRouteCompressMode','CatSchIDLRouteCompressMode')</script> <td><tt>iCompress</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatSchIDLRouteUnsetGapsMode','CatSchIDLRouteUnsetGapsMode')</script> <td><tt>iUnsetGaps</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatSchIDLRouteSymbolUpdateMode','CatSchIDLRouteSymbolUpdateMode')</script> <td><tt>iRouteUpdateSymbols</tt>)</table></dt>
<dl>
  <dd>
 Set the defining points of a route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLDb2PtPath</tt>
   <dd>   A list of X-Y coordinates of the points to be set. 2 doubles per point.
 </dd>
    <dt><tt> iCompress</tt>
   <dd>    Whether to compress the route (i.e., remove duplicate pts, colinear
   segments, etc.) or not
        = catSchIDLCompressOn   : compress
        = catSchIDLCompressOff  : don't compress
 </dd>
    <dt><tt> iUnsetGaps</tt>
   <dd>   Whether to unset gaps (in all the effected routes: this route and
   other routes intersecting it) or not
        = catSchIDLUnsetGapsOn   : unset gaps
        = catSchIDLUnsetGapsOff  : don't unset gaps
 </dd>
    <dt><tt> iRouteSymbolUpdate</tt>
   <dd>   Whether to update route symbols' positions
        = catSchIDLSymbolUpdateOff  : don't update route symbols
        = catSchIDLSymbolUpdateOn   : update route symbols

 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim dbVar1(x) As CATSafeArrayVariant

  ...
 objThisIntf.<font color="red">SetPath3</font>dbVar1,CatSchIDLRouteCompressMode_Enum,CatSchIDLRouteUnsetGapsMode_Enum,CatSchIDLRouteSymbolUpdateMode_Enum
 </pre>
</pre></dd>
</dl>
</dl>
<a name="SetStartPoint"><dt>

<table><tr><td>o Sub <b>SetStartPoint</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDb2StartPt</tt>)</table></dt>
<dl>
  <dd>
 Set the start point of the route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDb2StartPt</tt>
   <dd>   X-Y coordinates of the start point of the route graphic object to be set.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchGRRRoute
 Dim dbVar1(2) As CATSafeArrayVariant
  ...
 objThisIntf.<font color="red">SetStartPoint</font>dbVar1
 </pre>
</pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

