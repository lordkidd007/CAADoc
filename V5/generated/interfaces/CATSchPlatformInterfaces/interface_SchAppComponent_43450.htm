<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSchPlatformInterfaces SchAppComponent (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSchPlatformInterfaces.htm" href="../CATSchPlatformInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSchPlatformInterfaces";	}
		function getCurrentObjectName() { 
 	return "SchAppComponent"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SchAppComponent<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SchAppComponent_43450','SchAppComponent','0');</script>
<b><i>  Represents an application component object.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AppCreateComponentInst"><b>AppCreateComponentInst</b></a>
<dd>  Create a component instance.
 <dt>
    <a href="#AppCreateLocalReference"><b>AppCreateLocalReference</b></a>
<dd>  Create Local Reference object.
 <dt>
    <a href="#AppGetDefaultGRRName"><b>AppGetDefaultGRRName</b></a>
<dd>  Get the default graphical representation names
 of an application component.
 <dt>
    <a href="#AppListGRRNames"><b>AppListGRRNames</b></a>
<dd>  Find all the valid graphical representation names
 of an application component.
 <dt>
    <a href="#AppOKToFlipConnected"><b>AppOKToFlipConnected</b></a>
<dd>  Query whether it is OK to reconnect a component to
 a different compatible configuration.
 <dt>
    <a href="#AppOKToFlipHorizontal"><b>AppOKToFlipHorizontal</b></a>
<dd>  Query whether it is OK to flip the application component about Y.
 <dt>
    <a href="#AppOKToFlipOnLine"><b>AppOKToFlipOnLine</b></a>
<dd>  Query whether it is OK to flip a component about
 its inserted line.
 <dt>
    <a href="#AppOKToFlipVertical"><b>AppOKToFlipVertical</b></a>
<dd>  Query whether it is OK to flip the application component about X.
 <dt>
    <a href="#AppOKToPlaceInSpace"><b>AppOKToPlaceInSpace</b></a>
<dd>  Query whether the application component can be placed in free space.
 <dt>
    <a href="#AppOKToScale"><b>AppOKToScale</b></a>
<dd>  Query whether it is OK to scale the application component.
 <dt>
    <a href="#AppOKToSlide"><b>AppOKToSlide</b></a>
<dd>  Query whether the application component can be slided.
 <dt>
    <a href="#AppOKToUninsert"><b>AppOKToUninsert</b></a>
<dd>  Query whether it is OK to uninsert the application component.
 <dt>
    <a href="#AppPostFlipConnectedProcess"><b>AppPostFlipConnectedProcess</b></a>
<dd>  Post process after reconnecting a component to
 a different compatible configuration.
 <dt>
    <a href="#AppPostFlipHorizontalProcess"><b>AppPostFlipHorizontalProcess</b></a>
<dd>  Post process after flipping a component in "x".
 <dt>
    <a href="#AppPostFlipOnLineProcess"><b>AppPostFlipOnLineProcess</b></a>
<dd>  Post process after flipping an inserted component
 about the inserted line segment of the route.
 <dt>
    <a href="#AppPostFlipVerticalProcess"><b>AppPostFlipVerticalProcess</b></a>
<dd>  Post process after flipping a component in "y".
 <dt>
    <a href="#AppPostPlaceProcess"><b>AppPostPlaceProcess</b></a>
<dd>  Post process after placing an application component instance.
 <dt>
    <a href="#AppPostSlideProcess"><b>AppPostSlideProcess</b></a>
<dd>  Post process after sliding a component.
 <dt>
    <a href="#AppPostSwitchGraphicProcess"><b>AppPostSwitchGraphicProcess</b></a>
<dd>  Post process after switching a component's graphic representation.
 <dt>
    <a href="#AppPostUninsertProcess"><b>AppPostUninsertProcess</b></a>
<dd>  Post process after uninserting a component, disconnecting
 it from a route.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AppCreateComponentInst"><dt>

<table><tr><td>o Func <b>AppCreateComponentInst</b>(<td>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> </table></dt>
<dl>
  <dd>
 Create a component instance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNewAppCompInst</tt>
   <dd>   Interface pointer (CATISchAppComponent) to the new <b>application</b>
   component instance placed.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim objArg1 As AnyObject
  ...
 Set objArg1 = objThisIntf.<font color="red">AppCreateComponentInst</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppCreateLocalReference"><dt>

<table><tr><td>o Func <b>AppCreateLocalReference</b>(<td><script type="text/javascript"> activateLink('Document','Document')</script> <td><tt>iDocToCopyTo</tt>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> </table></dt>
<dl>
  <dd>
 Create Local Reference object. Given a reference object (the "this"),
 This method make a copy of the reference into another document.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDocToCopyTo</tt>
   <dd>   Pointer to a document to copy the reference to,
 </dd>
    <dt><tt> oNewAppCompRef</tt>
   <dd>   Interface pointer (CATISchAppComponent) to the new <b>application</b>
   component Reference copied.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim objArg1 As Document
 Dim objArg2 As AnyObject
  ...
 Set objArg2 = objThisIntf.<font color="red">AppCreateLocalReference</font>(objArg1)
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppGetDefaultGRRName"><dt>

<table><tr><td>o Sub <b>AppGetDefaultGRRName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>oGRRDefaultName</tt>)</table></dt>
<dl>
  <dd>
 Get the default graphical representation names
 of an application component.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGRRDefaultName</tt>
   <dd>   The default name to be used for the graphical representation
   of a component
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim strVar1 As String
  ...
 objThisIntf.<font color="red">AppGetDefaultGRRName</font>strVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppListGRRNames"><dt>

<table><tr><td>o Func <b>AppListGRRNames</b>(<td>) As <script type="text/javascript"> activateLink('SchListOfBSTRs','SchListOfBSTRs')</script> </table></dt>
<dl>
  <dd>
 Find all the valid graphical representation names
 of an application component.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLGRRNames</tt>
   <dd>   A list of all the valid graphical representation names
   with this connector for connections.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim objArg1 As SchListOfBSTRs
  ...
 Set objArg1 = objThisIntf.<font color="red">AppListGRRNames</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppOKToFlipConnected"><dt>

<table><tr><td>o Sub <b>AppOKToFlipConnected</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to reconnect a component to
 a different compatible configuration.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to flip the component.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim bVar1 As boolean
  ...
 objThisIntf.<font color="red">AppOKToFlipConnected</font>bVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppOKToFlipHorizontal"><dt>

<table><tr><td>o Sub <b>AppOKToFlipHorizontal</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to flip the application component about Y.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to flip the component.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim bVar1 As boolean
  ...
 objThisIntf.<font color="red">AppOKToFlipHorizontal</font>bVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppOKToFlipOnLine"><dt>

<table><tr><td>o Sub <b>AppOKToFlipOnLine</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to flip a component about
 its inserted line.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to flip the component.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim bVar1 As boolean
  ...
 objThisIntf.<font color="red">AppOKToFlipOnLine</font>bVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppOKToFlipVertical"><dt>

<table><tr><td>o Sub <b>AppOKToFlipVertical</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to flip the application component about X.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to flip the component.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim bVar1 As boolean
  ...
 objThisIntf.<font color="red">AppOKToFlipVertical</font>bVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppOKToPlaceInSpace"><dt>

<table><tr><td>o Sub <b>AppOKToPlaceInSpace</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether the application component can be placed in free space.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, the component can be slided.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim bVar1 As boolean
  ...
 objThisIntf.<font color="red">AppOKToPlaceInSpace</font>bVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppOKToScale"><dt>

<table><tr><td>o Sub <b>AppOKToScale</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to scale the application component.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to scale the component.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim bVar1 As boolean
  ...
 objThisIntf.<font color="red">AppOKToScale</font>bVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppOKToSlide"><dt>

<table><tr><td>o Sub <b>AppOKToSlide</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether the application component can be slided.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, the component can be slided.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim bVar1 As boolean
  ...
 objThisIntf.<font color="red">AppOKToSlide</font>bVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppOKToUninsert"><dt>

<table><tr><td>o Sub <b>AppOKToUninsert</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to uninsert the application component.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to uninsert the component.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim bVar1 As boolean
  ...
 objThisIntf.<font color="red">AppOKToUninsert</font>bVar1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppPostFlipConnectedProcess"><dt>

<table><tr><td>o Sub <b>AppPostFlipConnectedProcess</b>(<td>)</table></dt>
<dl>
  <dd>
 Post process after reconnecting a component to
 a different compatible configuration.
    
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
  ...
 objThisIntf.<font color="red">AppPostFlipConnectedProcess</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppPostFlipHorizontalProcess"><dt>

<table><tr><td>o Sub <b>AppPostFlipHorizontalProcess</b>(<td>)</table></dt>
<dl>
  <dd>
 Post process after flipping a component in "x".
    
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
  ...
 objThisIntf.<font color="red">AppPostFlipHorizontalProcess</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppPostFlipOnLineProcess"><dt>

<table><tr><td>o Sub <b>AppPostFlipOnLineProcess</b>(<td>)</table></dt>
<dl>
  <dd>
 Post process after flipping an inserted component
 about the inserted line segment of the route.
    
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
  ...
 objThisIntf.<font color="red">AppPostFlipOnLineProcess</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppPostFlipVerticalProcess"><dt>

<table><tr><td>o Sub <b>AppPostFlipVerticalProcess</b>(<td>)</table></dt>
<dl>
  <dd>
 Post process after flipping a component in "y".
    
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
  ...
 objThisIntf.<font color="red">AppPostFlipVerticalProcess</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppPostPlaceProcess"><dt>

<table><tr><td>o Sub <b>AppPostPlaceProcess</b>(<td><script type="text/javascript"> activateLink('SchComponent','SchComponent')</script> <td><tt>iNewCompInst</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnectable','SchAppConnectable')</script> <td><tt>iCntblConnectedTo</tt>)</table></dt>
<dl>
  <dd>
 Post process after placing an application component instance. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewCompInst</tt>
   <dd>   The newly placed component instance
   (CATISchComponent interface pointer).
 </dd>
    <dt><tt> iCntbleConnectedTo</tt>
   <dd>   The connectable that the placed component is connected to or 
   placed onto
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim objArg1 As SchComponent
 Dim objArg2 As SchAppConnectable
  ...
 objThisIntf.<font color="red">AppPostPlaceProcess</font>objArg1,objArg2
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppPostSlideProcess"><dt>

<table><tr><td>o Sub <b>AppPostSlideProcess</b>(<td>)</table></dt>
<dl>
  <dd>
 Post process after sliding a component.
    
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
  ...
 objThisIntf.<font color="red">AppPostSlideProcess</font>
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppPostSwitchGraphicProcess"><dt>

<table><tr><td>o Sub <b>AppPostSwitchGraphicProcess</b>(<td><script type="text/javascript"> activateLink('SchGRR','SchGRR')</script> <td><tt>iGRR</tt>)</table></dt>
<dl>
  <dd>
 Post process after switching a component's graphic representation.
    
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim objArg1 As SchGRR
  ...
 objThisIntf.<font color="red">AppPostSwitchGraphicProcess</font>objArg1
 </pre>
</pre></dd>
</dl>
</dl>
<a name="AppPostUninsertProcess"><dt>

<table><tr><td>o Sub <b>AppPostUninsertProcess</b>(<td><script type="text/javascript"> activateLink('SchRoute','SchRoute')</script> <td><tt>iOldAppRoute1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchRoute','SchRoute')</script> <td><tt>iOldAppRoute2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchRoute','SchRoute')</script> <td><tt>iNewAppRoute</tt>)</table></dt>
<dl>
  <dd>
 Post process after uninserting a component, disconnecting
 it from a route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOldAppRoute1</tt>
   <dd>   One of the route that was connected 
   to one connector of the inserted
   component before the operation.
 </dd>
    <dt><tt> iOldAppRoute2</tt>
   <dd>   The other route 
   that was connected to the other connector 
   of the inserted component before the operation.
   This would be NULL if the component was connected at extremity.
 </dd>
    <dt><tt> iNewAppRoute</tt>
   <dd>   The new route 
   created after the operation. 
   This would be NULL if the component was connected at extremity.
    
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  <pre>
 Dim objThisIntf As SchAppComponent
 Dim objArg1 As SchRoute
 Dim objArg2 As SchRoute
 Dim objArg3 As SchRoute
  ...
 objThisIntf.<font color="red">AppPostUninsertProcess</font>objArg1,objArg2,objArg3
 </pre>
</pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

