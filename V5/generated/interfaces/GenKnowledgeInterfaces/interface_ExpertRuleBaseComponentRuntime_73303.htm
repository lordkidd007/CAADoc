<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GenKnowledgeInterfaces ExpertRuleBaseComponentRuntime (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GenKnowledgeInterfaces.htm" href="../GenKnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GenKnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "ExpertRuleBaseComponentRuntime"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ExpertRuleBaseComponentRuntime<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ExpertRuleBaseComponentRuntime_73303','ExpertRuleBaseComponentRuntime','0');</script>
<b><i> Represents a rule base component in a ruleset.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Comment"><b>Comment</b></a>
<dd>  Returns or sets the comment of a rulebase component.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AccurateType"><b>AccurateType</b></a>
<dd>  Returns as a string the type of component.
 <dt>
    <a href="#Activate"><b>Activate</b></a>
<dd>  Activates the RuleBaseComponent.
 <dt>
    <a href="#Deactivate"><b>Deactivate</b></a>
<dd>  Desactivates the RuleBaseComponent.
 <dt>
    <a href="#IsUseOnly"><b>IsUseOnly</b></a>
<dd>  Retrieves the use-only status of the component.
 <dt>
    <a href="#Isactivate"><b>Isactivate</b></a>
<dd>  Tells if the RuleBaseComponent is active.
 <dt>
    <a href="#Parse"><b>Parse</b></a>
<dd>  Syntactically analyses (ie parses) the component.
 <dt>
    <a href="#SetUseOnly"><b>SetUseOnly</b></a>
<dd>  Prevents any access to the component for reading or deleting.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Comment"><dt>

<table><tr><td>o Property <b>Comment</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the comment of a rulebase component.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AccurateType"><dt>

<table><tr><td>o Func <b>AccurateType</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns as a string the type of component.

 Returns a string among ("ExpertCheck", "ExpertCheckRuntime", "ExpertRule",
 "ExpertRuleRuntime", "ExpertRuleSet", "ExpertRuleSetRuntime").

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Type name of the rule base component
</dl>
</dl>
<a name="Activate"><dt>

<table><tr><td>o Sub <b>Activate</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the RuleBaseComponent.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the <tt>SolidActivity</tt> ExpertCheck:
 <pre>
 Dim CATDocs As Document
 Set CATDocs   = CATIA.Documents
 Dim partdoc As PartDocument
 Set partdoc   = CATDocs.Add("CATPart")
 Dim part As Part
 Set part      = partdoc.Part
  part.Relations.Item("RuleBase").RuleSet.ExpertRuleBaseComponentRuntimes.Item("SolidActivity").<font color="red">Activate</font>()
 </pre>
 </dl>
</dl>
<a name="Deactivate"><dt>

<table><tr><td>o Sub <b>Deactivate</b>(<td>)</table></dt>
<dl>
  <dd>
 Desactivates the RuleBaseComponent.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example Desactivates the <tt>SolidActivity</tt> ExpertCheck:
 <pre>
 Dim CATDocs As Document
 Set CATDocs   = CATIA.Documents
 Dim partdoc As PartDocument
 Set partdoc   = CATDocs.Add("CATPart")
 Dim part As Part
 Set part      = partdoc.Part
  part.Relations.Item("RuleBase").RuleSet.ExpertRuleBaseComponentRuntimes.Item("SolidActivity").<font color="red">Deactivate</font>()
 </pre>
 </dl>
</dl>
<a name="IsUseOnly"><dt>

<table><tr><td>o Func <b>IsUseOnly</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Retrieves the use-only status of the component.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Use only status of the component
</dl>
</dl>
<a name="Isactivate"><dt>

<table><tr><td>o Func <b>Isactivate</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Tells if the RuleBaseComponent is active.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example tells if the <tt>SolidActivity</tt> ExpertCheck is active :
 <pre>
 Dim CATDocs As Document
 Set CATDocs   = CATIA.Documents
 Dim partdoc As PartDocument
 Set partdoc   = CATDocs.Add("CATPart")
 Dim part As Part
 Set part      = partdoc.Part
 status = part.Relations.Item("RuleBase").RuleSet.ExpertRuleBaseComponentRuntimes.Item("SolidActivity").<font color="red">Isactivate</font>()
 </pre>
 </dl>

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Activity of the rule base component
</dl>
</dl>
<a name="Parse"><dt>

<table><tr><td>o Func <b>Parse</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Syntactically analyses (ie parses) the component.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Empty string if the parse is correct, otherwise comments on the errors
</dl>
</dl>
<a name="SetUseOnly"><dt>

<table><tr><td>o Sub <b>SetUseOnly</b>(<td>)</table></dt>
<dl>
  <dd>
 Prevents any access to the component for reading or deleting.

 Be careful : this operation is not reversible.
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

