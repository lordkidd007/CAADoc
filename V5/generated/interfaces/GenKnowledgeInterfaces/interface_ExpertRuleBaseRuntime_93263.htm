<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GenKnowledgeInterfaces ExpertRuleBaseRuntime (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Object Hierarchy</a>  <a href="../GenKnowledgeInterfaces.htm">This Framework</a>  <a href=".htm">Previous</a>  <a href="interface_ExpertRuleRuntime_62666.htm">Next</a>  <a href="../CAAHomeIdx.htm">Indexes</a>  </pre>
<hr>
<h1>ExpertRuleBaseRuntime<font size=-1> (Object)</font></h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">IDispatch</a>
    |
    +---<a href="../System/interface_CATBaseUnknown_40786.htm">CATBaseUnknown</a>
      |
      +---<a href="../System/interface_CATBaseDispatch_45333.htm">CATBaseDispatch</a>
        |
        +---<a href="../System/interface_AnyObject_17321.htm">AnyObject</a>
          |
          +---<a href="../KnowledgeInterfaces/interface_KnowledgeObject_47429.htm">KnowledgeObject</a>
            |
            +---<a href="../KnowledgeInterfaces/interface_KnowledgeActivateObject_110372.htm">KnowledgeActivateObject</a>
              |
              +---<a href="../KnowledgeInterfaces/interface_Relation_14366.htm">Relation</a>
                |
                +---ExpertRuleBaseRuntime
 </pre>
<hr><br>
<b><i> Represents the Runtime part of the RuleBase.</i></b><br>


 The following example shows how to create the Rule Base RB1
 from a newly created part document: 
 <pre>
 Dim CATDocs As Document
 Set CATDocs   = CATIA.Documents
 Dim partdoc As PartDocument
 Set partdoc   = CATDocs.Add("CATPart")
 Dim part As Part
 Set part      = partdoc.Part
 Dim relations As Relations
 Set relations = part.Relations
 Dim Rulebase As ExpertRuleBaseRuntime
 Set RuleBase  = relations.CreateRuleBase("RB1")
 </pre>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="../KnowledgeInterfaces/interface_Relations_18301.htm">Relations</a>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#ReportDescriptionLength"><b>ReportDescriptionLength</b></a>
<dd>  Returns or sets the Report Description Length (For Text option only).
 <dt>
    <a href="#ReportOutPutFormat"><b>ReportOutPutFormat</b></a>
<dd>  Returns or sets the Report OutPut Format.
 <dt>
    <a href="#ReportPath"><b>ReportPath</b></a>
<dd>  Returns or sets the Report output path.
 <dt>
    <a href="#ReportShowResult"><b>ReportShowResult</b></a>
<dd>  Returns or sets the option for sorting the report.
 <dt>
    <a href="#RuleBaseEdition"><b>RuleBaseEdition</b></a>
<dd>  Returns the editable object corresponding to this rulebase.
 <dt>
    <a href="#RuleSet"><b>RuleSet</b></a>
<dd>  Returns the Set linked to the RuleBase.
 <dt>
    <a href="#SolveType"><b>SolveType</b></a>
<dd>  Returns or sets the solve option.
 <dt>
    <a href="#TextVisualization"><b>TextVisualization</b></a>
<dd>  Returns or sets the Report option for visualization.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AccurateType"><b>AccurateType</b></a>
<dd>  Returns as a string the type of component.
 <dt>
    <a href="#AddFact"><b>AddFact</b></a>
<dd>  Adds new fact to the rule base resolution.
 <dt>
    <a href="#AddRootOfFacts"><b>AddRootOfFacts</b></a>
<dd>  Adds a new root of facts to the rule base.
 <dt>
    <a href="#Deduce"><b>Deduce</b></a>
<dd>  Launch a Forward chaining Solve on the current RuleBase.
 <dt>
    <a href="#Fingerprint"><b>Fingerprint</b></a>
<dd>  Returns the Fingerprint information.
 <dt>
    <a href="#GetNumberOfRootsOfFacts"><b>GetNumberOfRootsOfFacts</b></a>
<dd>  Retrieves the number of roots of facts of the rule base.
 <dt>
    <a href="#GetRootsOfFacts"><b>GetRootsOfFacts</b></a>
<dd>  Retrieves all the roots of facts from the rule base.
 <dt>
    <a href="#Import"><b>Import</b></a>
<dd>  Import from RuleSet.
 <dt>
    <a href="#ImportFromFile"><b>ImportFromFile</b></a>
<dd>  Import from file.
 <dt>
    <a href="#ImportWithLink"><b>ImportWithLink</b></a>
<dd>  Import with link to a document.
 <dt>
    <a href="#RemoveRootOfFacts"><b>RemoveRootOfFacts</b></a>
<dd>  Removes a root of facts from the rule base.
 <dt>
    <a href="#Report"><b>Report</b></a>
<dd>  Launch a Report.
 <dt>
    <a href="#SynchronizeStatus"><b>SynchronizeStatus</b></a>
<dd>  Returns the Synchronize information.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="ReportDescriptionLength"><dt>

<table><tr><td>o Property <b>ReportDescriptionLength</b>(<td>) As <a href="../GenKnowledgeInterfaces/enum_CatDescriptionLengthType_122046.htm">CatDescriptionLengthType</a> </table></dt>
<dl>
  <dd>
 Returns or sets the Report Description Length (For Text option only).

 <dl>
 <dt>0<dd>ShortText
 <dt>1<dd>LongText
 </dl>

</dl>
<a name="ReportOutPutFormat"><dt>

<table><tr><td>o Property <b>ReportOutPutFormat</b>(<td>) As <a href="../GenKnowledgeInterfaces/enum_CatOutPutFormatType_76632.htm">CatOutPutFormatType</a> </table></dt>
<dl>
  <dd>
 Returns or sets the Report OutPut Format.
 <dl>
 <dt>0<dd>Html
 <dt>1<dd>Text
 <dt>2<dd>Print
 <dt>3<dd>Email
 </dl>
</dl>
<a name="ReportPath"><dt>

<table><tr><td>o Property <b>ReportPath</b>(<td>) As <a href="../System/typedef_CATBSTR_8129.htm">CATBSTR</a> </table></dt>
<dl>
  <dd>
 Returns or sets the Report output path.
</dl>
<a name="ReportShowResult"><dt>

<table><tr><td>o Property <b>ReportShowResult</b>(<td>) As <a href="../GenKnowledgeInterfaces/enum_CatShowResultType_62350.htm">CatShowResultType</a> </table></dt>
<dl>
  <dd>
 Returns or sets the option for sorting the report.
 <dl>
 <dt>0<dd>ByRule
 <dt>1<dd>ByObject
 <dt>2<dd>ByState
 </dl>
</dl>
<a name="RuleBaseEdition"><dt>

<table><tr><td>o Property <b>RuleBaseEdition</b>(<td>) As <a href="../GenKnowledgeInterfaces/interface_ExpertRuleBase_41078.htm">CATIAExpertRuleBase</a>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the editable object corresponding to this rulebase.
 Be careful that, according to your licence, or the type of rulebase
 you're handling, you may not have the right to edit the rulebase.

 <! @sample >
 <dt><b>Example:</b>
 <dd>
 <pre>
 Dim aRBEdition As CATIAExpertRuleBase
 Set aRBEdition = aRBRuntime.RuleBaseEdition

 If not(aRBEdition is Nothing) Then
   ' .. action on the editable rulebase
 End if
 </pre>
 </dl>
</dl>
<a name="RuleSet"><dt>

<table><tr><td>o Property <b>RuleSet</b>(<td>) As <a href="../GenKnowledgeInterfaces/interface_ExpertRuleSet_36300.htm">CATIAExpertRuleSet</a>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the Set linked to the RuleBase.
 This is the main RuleSet that contains all the RuleBase components.
</dl>
<a name="SolveType"><dt>

<table><tr><td>o Property <b>SolveType</b>(<td>) As <a href="../GenKnowledgeInterfaces/enum_CatSolveType_31004.htm">CatSolveType</a> </table></dt>
<dl>
  <dd>
 Returns or sets the solve option.
</dl>
<a name="TextVisualization"><dt>

<table><tr><td>o Property <b>TextVisualization</b>(<td>) As <a href="../GenKnowledgeInterfaces/enum_CatVisualizationType_86736.htm">CatVisualizationType</a> </table></dt>
<dl>
  <dd>
 Returns or sets the Report option for visualization.
 <dl>
 <dt>0<dd>Passed
 <dt>1<dd>Failed
 <dt>2<dd>Both
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AccurateType"><dt>

<table><tr><td>o Func <b>AccurateType</b>(<td>) As <a href="../System/typedef_CATBSTR_8129.htm">CATBSTR</a> </table></dt>
<dl>
  <dd>
 Returns as a string the type of component.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A string among ("ExpertRuleBase", "ExpertRuleBaseRuntime")
</dl>
</dl>
<a name="AddFact"><dt>

<table><tr><td>o Sub <b>AddFact</b>(<td><a href="../System/interface_AnyObject_17321.htm">CATIABase</a> <td><tt>iFact</tt>)</table></dt>
<dl>
  <dd>
 Adds new fact to the rule base resolution.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFact</tt>
   <dd> Fact to be added
 </dl>
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 <pre>
  Dim pad3 as Shape
  Dim rulebase as ExpertRuleBase

  Set pad3 = part.MainBody.Shapes.Item("Pad3")
  Set rulebase = part.Relations.Item("RuleBase")
  rulebase.<font color="red">AddFact</font> (pad3)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="AddRootOfFacts"><dt>

<table><tr><td>o Sub <b>AddRootOfFacts</b>(<td><a href="../System/interface_AnyObject_17321.htm">CATIABase</a> <td><tt>iRootFacts</tt>)</table></dt>
<dl>
  <dd>
 Adds a new root of facts to the rule base.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootFacts</tt>
   <dd> root of facts to be added.</dd>
</dl>
</dl>
</dl>
<a name="Deduce"><dt>

<table><tr><td>o Sub <b>Deduce</b>(<td>)</table></dt>
<dl>
  <dd>
 Launch a Forward chaining Solve on the current RuleBase.

 <! @sample >
 <dt><b>Example:</b>
 <dd>
 <pre>
  Dim rulebase as ExpertRuleBase

  Set rulebase = part.Relations.Item("RuleBase")
  rulebase.<font color="red">Deduce</font> ()
 </pre>
 </dl>
</dl>
<a name="Fingerprint"><dt>

<table><tr><td>o Func <b>Fingerprint</b>(<td>) As boolean </table></dt>
<dl>
  <dd>
 Returns the Fingerprint information.
 The fingerprint indicates if the last result of the rulebase is relevant 
 regarding to the objects the rule base has checked. In other words, if the part has evolved
 since last <tt>Deduce</tt>, the fingerprint is false.
 Be careful : on volatile rulebases (
<a href="../GenKnowledgeInterfaces/interface_ExpertRuleBase_41078.htm#VolatileCopy">ExpertRuleBase.VolatileCopy</a> ), it raises an error.

 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 <pre>
  on error resume next
  part.Relations.Item("RuleBase").<font color="red">Fingerprint</font> ()
  on error goto 0
 </pre>
 </dl>

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Fingerprint information
</dl>
</dl>
<a name="GetNumberOfRootsOfFacts"><dt>

<table><tr><td>o Func <b>GetNumberOfRootsOfFacts</b>(<td>) As long </table></dt>
<dl>
  <dd>
 Retrieves the number of roots of facts of the rule base.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Number of roots of facts.
</dl>
</dl>
<a name="GetRootsOfFacts"><dt>

<table><tr><td>o Sub <b>GetRootsOfFacts</b>(<td><a href="../System/typedef_CATSafeArrayVariant_73843.htm">CATSafeArrayVariant</a> <td><tt>oRootsOfFacts</tt>)</table></dt>
<dl>
  <dd>
 Retrieves all the roots of facts from the rule base.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRootsOfFacts</tt>
   <dd> array of roots of facts.</dd>
</dl>
</dl>
</dl>
<a name="Import"><dt>

<table><tr><td>o Sub <b>Import</b>(<td><a href="../GenKnowledgeInterfaces/interface_ExpertRuleSet_36300.htm">CATIAExpertRuleSet</a> <td><tt>iRuleSet</tt>,<tr><td></td><td>boolean <td><tt>iForce</tt>)</table></dt>
<dl>
  <dd>
 Import from RuleSet.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRuleSet</tt>
   <dd> CATIAExpertRuleSet : the RuleSet user want to import. 
 </dd>
    <dt><tt> iForce</tt>
   <dd> Boolean : if True (= 1), then if imported rules allready exist in target document, rules of target document are replaced.
 </dl>
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 <pre>
 Dim CATDocs As Documents
 Set CATDocs   = CATIA.Documents
 Dim partdoc As Document
 Set partdoc = CATDocs.Open("e:\TargetDocument.CATPart")
 Dim part As Part
 Set part      = partdoc.Part
 Dim productdoc As Document
 Set productdoc = CATDocs.Open("e:\ImportedDocument.CATProduct")
 Dim product As Product
 Set product      = productdoc.Product
 Dim ruleset As ExpertRuleSet
 Set ruleset    = product.Relations.Item("RuleBase").RuleSet.ExpertRuleBaseComponentRuntimes.ShallowItem(1)
 part.Relations.Item("RuleBase").<font color="red">Import</font> (ruleset,0)
 
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="ImportFromFile"><dt>

<table><tr><td>o Sub <b>ImportFromFile</b>(<td><a href="../System/typedef_CATBSTR_8129.htm">CATBSTR</a> <td><tt>iPath</tt>,<tr><td></td><td>boolean <td><tt>iForce</tt>)</table></dt>
<dl>
  <dd>
 Import from file.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd> CATBSTR : the path of the document user want to import. 
 </dd>
    <dt><tt> iForce</tt>
   <dd> Boolean : if True (= 1), then if imported rules allready exist in target document, rules of target document are replaced.
 if False (= 0), then if imported rules allready exist in target document,
 rules of imported document are ignored.* </dl>
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 <pre>
  part.Relations.Item("RuleBase").<font color="red">ImportFromFile</font> ("e:\importeddocument.CATProduct",0)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="ImportWithLink"><dt>

<table><tr><td>o Sub <b>ImportWithLink</b>(<td><a href="../System/interface_AnyObject_17321.htm">CATIABase</a> <td><tt>iRoot</tt>,<tr><td></td><td>boolean <td><tt>iForce</tt>)</table></dt>
<dl>
  <dd>
 Import with link to a document.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRoot</tt>
   <dd> CATIABase : the root user want to import into. 
 </dd>
    <dt><tt> iForce</tt>
   <dd> Boolean : if True (= 1), then if imported rules allready exist in target document, rules of target document are replaced.
 if False (= 0), then if imported rules allready exist in target document,
 rules of imported document are ignored.* </dl>
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 <pre>
  part.Relations.Item("RuleBase").<font color="red">ImportWithLink</font> (root,0)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="RemoveRootOfFacts"><dt>

<table><tr><td>o Sub <b>RemoveRootOfFacts</b>(<td><a href="../System/interface_AnyObject_17321.htm">CATIABase</a> <td><tt>iRootFacts</tt>)</table></dt>
<dl>
  <dd>
 Removes a root of facts from the rule base.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootFacts</tt>
   <dd> root of facts to be removed.</dd>
</dl>
</dl>
</dl>
<a name="Report"><dt>

<table><tr><td>o Sub <b>Report</b>(<td>boolean <td><tt>reallyStartBrowser</tt>)</table></dt>
<dl>
  <dd>
 Launch a Report. The default output format is HTML

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> reallyStartBrowser</tt>
   <dd> Boolean : if True (= 1), then the browser is started on the report
 </dl>
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 <pre>
  part.Relations.Item("RuleBase").<font color="red">Report</font> (0)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SynchronizeStatus"><dt>

<table><tr><td>o Func <b>SynchronizeStatus</b>(<td>) As boolean </table></dt>
<dl>
  <dd>
 Returns the Synchronize information.

 The synchronize status indicates for a linked rule base if the rulebase is  synchronized.
 Be careful : on volatile rulebases (
<a href="../GenKnowledgeInterfaces/interface_ExpertRuleBase_41078.htm#VolatileCopy">ExpertRuleBase.VolatileCopy</a> ), it raises an error.

 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 <pre>
  on error resume next
  part.Relations.Item("RuleBase").<font color="red">SynchronizeStatus</font> ()
  on error goto 0
 </pre>
 </dl>

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Synchronize status
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
