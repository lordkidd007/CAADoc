<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GenKnowledgeInterfaces ExpertRuleBaseComponentRuntimes (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GenKnowledgeInterfaces.htm" href="../GenKnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GenKnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "ExpertRuleBaseComponentRuntimes"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ExpertRuleBaseComponentRuntimes<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ExpertRuleBaseComponentRuntimes_76753','ExpertRuleBaseComponentRuntimes','0');</script>
<b><i> Represents the collection of ExpertRuleBase (ExpertChecks, ExpertRules, and ExpertRuleSets) components.</i></b><br>


 This collection
 can be seen flattened (with Item/Count) or hierarchised (with
 ShallowItem/ShallowCount).
 <p>
 Be careful : the flattened view can be misleading. For instance,
 if there are two ExpertChecks with the same name, you will be
 able to access only <b>one</b> of them (with the methods
 <script type="text/javascript"> activateLinkAnchor('ExpertRuleBaseComponentRuntimes','Item','ExpertRuleBaseComponentRuntimes.Item') </script> and 
<script type="text/javascript"> activateLinkAnchor('ExpertRuleBaseComponentRuntimes','Remove','ExpertRuleBaseComponentRuntimes.Remove') </script> )
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a RuleBase component using its index or its name from the entire RuleBase collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes an Expert component from the  Rule Base collection.
 <dt>
    <a href="#ShallowCount"><b>ShallowCount</b></a>
<dd>  Returns the number of <b>first-level-depth</b> objects in the collection.
 <dt>
    <a href="#ShallowItem"><b>ShallowItem</b></a>
<dd>  Returns a <b>first-level-depth</b> RuleBase component using its index or its name from the RuleBase collection.
 <dt>
    <a href="#ShallowRemove"><b>ShallowRemove</b></a>
<dd>  Removes an <b>first-level-depth</b> Expert component from the  Rule Base collection.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('ExpertRuleBaseComponentRuntime','ExpertRuleBaseComponentRuntime')</script> </table></dt>
<dl>
  <dd>
 Returns a RuleBase component using its index or its name from the entire RuleBase collection.

 <p>
 If several Expert components have the same name, the use of
 name is <b>unpredicted</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the Rule Base component to retrieve from
   the collection of Rule Base Components.
   As a numerics, this index is the rank of the Rule Base Component
   in the collection.
   The index of the first component in the collection is 1, and
   the index of the last component is <tt>Count</tt>.
   As a string, it is the name you assigned to the component using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('AnyObject','Name','AnyObject.Name') </script> property or when creating the component. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved Rule base component. </dl>
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example retrieves the last component in a <tt>RuleSet</tt>
 collection. 
 <pre>
  Dim lastRuleBaseComponent as ExpertRuleBaseComponentRuntime
  Set lastRuleBaseComponent = RuleSet.<font color="red">Item</font>(RuleCollection.Count)
 </pre>
 </dl>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes an Expert component from the  Rule Base collection.
 If the expert component is a RuleSet all the rules, checks and rulesets embedded in the
 Ruleset will be also removed.
 <p>
 If several Expert components have the same name, the use of
 name is <b>unpredicted</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The index or the name of the component to retrieve from
 the collection.
 As a numerics, this index is the rank of the expert component
 in the collection.
 The index of the first component in the collection is 1, and
 the index of the last component is <tt>Count</tt>.
 As a string, it is the name you assigned to the component using
 the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('AnyObject','Name','AnyObject.Name') </script> property or when creating the Expert component. </dl>
 <dt><b>Example:</b>
 <dd>
 This example removes the Expert component named <tt>density</tt> from
 the <tt>relations</tt> collection.
 <pre>
 Dim CATDocs As Document
 Set CATDocs   = CATIA.Documents
 Dim partdoc As PartDocument
 Set partdoc   = CATDocs.Add("CATPart")
 Dim part As Part
 Set part      = partdoc.Part
 Set massCheck    = part.Relations.Item("RuleBase").RuleSet.ExpertRuleBaseComponentRuntimes.<font color="red">Remove</font>("density")
 </pre>
 </dl>
</dl>
</dl>
<a name="ShallowCount"><dt>

<table><tr><td>o Func <b>ShallowCount</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the number of <b>first-level-depth</b> objects in the collection.
 This is handy to scan the objects in a collection.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in  <tt>ObjectNumber</tt> the number of objects
 currently gathered in <tt>MyCollection</tt>.
 <pre>
 ObjectNumber = MyCollection.<font color="red">ShallowCount</font>
 </pre>
 </dl>
</dl>
<a name="ShallowItem"><dt>

<table><tr><td>o Func <b>ShallowItem</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('ExpertRuleBaseComponentRuntime','ExpertRuleBaseComponentRuntime')</script> </table></dt>
<dl>
  <dd>
 Returns a <b>first-level-depth</b> RuleBase component using its index or its name from the RuleBase collection.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the Rule Base component to retrieve from
   the collection of Rule Base Components.
   As a numerics, this index is the rank of the Rule Base Component
   in the collection.
   The index of the first component in the collection is 1, and
   the index of the last component is ShallowCount.
   As a string, it is the name you assigned to the component using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('AnyObject','Name','AnyObject.Name') </script> property or when creating the component. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved Rule base component. </dl>
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example retrieves the last component in a <tt>RuleSet</tt>
 collection. 
 <pre>
  Dim lastRuleBaseComponent as ExpertRuleBaseComponentRuntime
  Set lastRuleBaseComponent = RuleSet.<font color="red">ShallowItem</font>(RuleCollection.ShallowCount)
 </pre>
 </dl>
</dl>
</dl>
<a name="ShallowRemove"><dt>

<table><tr><td>o Sub <b>ShallowRemove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes an <b>first-level-depth</b> Expert component from the  Rule Base collection.
 If the expert component is a RuleSet all the rules, checks and rulesets embedded in the
 Ruleset will be also removed.
 <p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The index or the name of the component to retrieve from
 the collection.
 As a numerics, this index is the rank of the expert component
 in the collection.
 The index of the first component in the collection is 1, and
 the index of the last component is <tt>ShallowCount</tt>.
 As a string, it is the name you assigned to the component using
 the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('AnyObject','Name','AnyObject.Name') </script> property or when creating the Expert component. </dl>
 <dt><b>Example:</b>
 <dd>
 This example removes the Expert component named <tt>density</tt> from
 the <tt>relations</tt> collection.
 <pre>
 Dim CATDocs As Document
 Set CATDocs   = CATIA.Documents
 Dim partdoc As PartDocument
 Set partdoc   = CATDocs.Add("CATPart")
 Dim part As Part
 Set part      = partdoc.Part
 Set massCheck    = part.Relations.Item("RuleBase").RuleSet.ExpertRuleBaseComponentRuntimes.<font color="red">ShallowRemove</font>("density")
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

