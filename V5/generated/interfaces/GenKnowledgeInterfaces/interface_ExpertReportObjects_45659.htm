<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GenKnowledgeInterfaces ExpertReportObjects (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GenKnowledgeInterfaces.htm" href="../GenKnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GenKnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "ExpertReportObjects"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ExpertReportObjects<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ExpertReportObjects_45659','ExpertReportObjects','0');</script>
<b><i> Represents the collection of (succeeded or failed) report objects.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#CountFail"><b>CountFail</b></a>
<dd>  Returns the number of failed tuples in the failed tuples collection.
 <dt>
    <a href="#CountSucceed"><b>CountSucceed</b></a>
<dd>  Returns the number of succeeded tuples in the succeeded tuples collection.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#FailItem"><b>FailItem</b></a>
<dd>  Retrieves a report failed component from a failed tuples collection, using its index or its name from the Check collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Retrieves a Report component using its index or its name from the Check collection.
 <dt>
    <a href="#SucceedItem"><b>SucceedItem</b></a>
<dd>  Retrieves a report component from a succeeded tuples collection, using its index or its name from the Check collection.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="CountFail"><dt>

<table><tr><td>o Property <b>CountFail</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the number of failed tuples in the failed tuples collection.

 It is redundant with 
<script type="text/javascript"> activateLinkAnchor('Collection','Count','Collection.Count') </script> for 
<script type="text/javascript"> activateLinkAnchor('ExpertCheckRuntime','Failures','ExpertCheckRuntime.Failures') </script> collection. For 
<script type="text/javascript"> activateLinkAnchor('ExpertCheckRuntime','Succeeds','ExpertCheckRuntime.Succeeds') </script> collection, it will fail. <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in  <tt>ObjectNumber</tt> the number of tuples
 currently gathered in <tt>MyCollection</tt>.
 <pre>
 ObjectNumber = MyCollection.<font color="red">CountFail</font>
 </pre>
 </dl>
</dl>
<a name="CountSucceed"><dt>

<table><tr><td>o Property <b>CountSucceed</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the number of succeeded tuples in the succeeded tuples collection.

 It is redundant with 
<script type="text/javascript"> activateLinkAnchor('Collection','Count','Collection.Count') </script> for 
<script type="text/javascript"> activateLinkAnchor('ExpertCheckRuntime','Succeeds','ExpertCheckRuntime.Succeeds') </script> collection. For 
<script type="text/javascript"> activateLinkAnchor('ExpertCheckRuntime','Failures','ExpertCheckRuntime.Failures') </script> collection, it will fail. <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in  <tt>ObjectNumber</tt> the number of tuples
 currently gathered in <tt>MyCollection</tt>.
 <pre>
 ObjectNumber = MyCollection.<font color="red">CountSucceed</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="FailItem"><dt>

<table><tr><td>o Func <b>FailItem</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('ExpertReportObject','ExpertReportObject')</script> </table></dt>
<dl>
  <dd>
 Retrieves a report failed component from a failed tuples collection, using its index or its name from the Check collection.

 It is redundant with 
<script type="text/javascript"> activateLinkAnchor('ExpertReportObjects','Item','ExpertReportObjects.Item') </script> for 
<script type="text/javascript"> activateLinkAnchor('ExpertCheckRuntime','Failures','ExpertCheckRuntime.Failures') </script> collections. For 
<script type="text/javascript"> activateLinkAnchor('ExpertCheckRuntime','Succeeds','ExpertCheckRuntime.Succeeds') </script> collections, it will fail. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the Report component to retrieve from
   the collection of Report Components.
   As a numerics, this index is the rank of the Report component
   in the collection.
   The index of the first component in the collection is 1, and
   the index of the last component is <tt>Count</tt>.
   As a string, it is the name you assigned to the component using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('AnyObject','Name','AnyObject.Name') </script> property or when creating the component. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved Report component
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('ExpertReportObject','ExpertReportObject')</script> </table></dt>
<dl>
  <dd>
 Retrieves a Report component using its index or its name from the Check collection.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   <p>
   The index or the name of the Report component to retrieve from
   the collection of Report Components.
   As a numerics, this index is the rank of the Report component
   in the collection.
   The index of the first component in the collection is 1, and
   the index of the last component is <tt>Count</tt>.
   As a string, it is the name you assigned to the component using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('AnyObject','Name','AnyObject.Name') </script> property or when creating the component.   </p>

 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved Report component
</dl>
</dl>
<a name="SucceedItem"><dt>

<table><tr><td>o Func <b>SucceedItem</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('ExpertReportObject','ExpertReportObject')</script> </table></dt>
<dl>
  <dd>
 Retrieves a report component from a succeeded tuples collection, using its index or its name from the Check collection.

 It is redundant with 
<script type="text/javascript"> activateLinkAnchor('ExpertReportObjects','Item','ExpertReportObjects.Item') </script> for 
<script type="text/javascript"> activateLinkAnchor('ExpertCheckRuntime','Succeeds','ExpertCheckRuntime.Succeeds') </script> collections. For 
<script type="text/javascript"> activateLinkAnchor('ExpertCheckRuntime','Failures','ExpertCheckRuntime.Failures') </script> collections, it will fail. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the Report component to retrieve from
   the collection of Report Components.
   As a numerics, this index is the rank of the Report component
   in the collection.
   The index of the first component in the collection is 1, and
   the index of the last component is <tt>Count</tt>.
   As a string, it is the name you assigned to the component using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('AnyObject','Name','AnyObject.Name') </script> property or when creating the component. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved Report component
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

