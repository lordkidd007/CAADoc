<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>OSMInterfaces ProductScene (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../OSMInterfaces.htm" href="../OSMInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "OSMInterfaces";	}
		function getCurrentObjectName() { 
 	return "ProductScene"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ProductScene<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ProductScene_18532','ProductScene','0');</script>
<b><i> Represent the Product-Scene.</i></b><br>

 A Product-Scene stores a state of a product in a given ProductDocument.
 <p>This state is composed of product properties, graphical attibutes, activation status
 and position for each component of the product.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Type"><b>Type</b></a>
<dd>  Returns the type of the Product-Scene.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Copy"><b>Copy</b></a>
<dd>  Creates another Product-Scene from the current one with the possibility to have a different mode.
 <dt>
    <a href="#ExistsInScene"><b>ExistsInScene</b></a>
<dd>  Returns whether the product has overloaded attributes in the Product-Scene.
 <dt>
    <a href="#GetSceneProductData"><b>GetSceneProductData</b></a>
<dd>  Returns the SceneProductData associated to the given product in the Product-Scene.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Type"><dt>

<table><tr><td>o Property <b>Type</b>(<td>) As <script type="text/javascript"> activateLink('CatSceneType','CatSceneType')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the type of the Product-Scene.
 
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example reads the type of <tt>NewSceneDelta</tt> Product-Scene.
    <pre>
    Dim type As CatSceneType
    type = NewSceneDelta.<font color="red">Type</font>
    </pre></pre></dd>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Copy"><dt>

<table><tr><td>o Func <b>Copy</b>(<td><script type="text/javascript"> activateLink('CatSceneType','CatSceneType')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('ProductScene','ProductScene')</script> </table></dt>
<dl>
  <dd>
 Creates another Product-Scene from the current one with the possibility to have a different mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    The Product-Scene type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The Product-Scene created from the current one.
 
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example returns whether the <tt>CopyScene</tt> Product-Scene created from 
    the <tt>Configuration1</tt> Product-Scene, with the DELTA mode.
    <pre>
    Dim type As CatSceneType
    type = CatSceneTypeDelta
    Dim CopyScene As ProductScene
    CopyScene = Configuration1.<font color="red">Copy</font>(type)
    </pre></pre></dd>
</dl>
</dl>
<a name="ExistsInScene"><dt>

<table><tr><td>o Func <b>ExistsInScene</b>(<td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns whether the product has overloaded attributes in the Product-Scene.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd>    The product
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     True if the Product-Scene overloads some of the product attributes.
 
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example returns whether the <tt>Engine</tt> product exists in
    the <tt>Configuration1</tt> Product-Scene.
    <pre>
    ExistsInSc = Configuration1.<font color="red">ExistsInScene</font>(Engine)
    </pre></pre></dd>
</dl>
</dl>
<a name="GetSceneProductData"><dt>

<table><tr><td>o Func <b>GetSceneProductData</b>(<td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>) As <script type="text/javascript"> activateLink('SceneProductData','SceneProductData')</script> </table></dt>
<dl>
  <dd>
 Returns the SceneProductData associated to the given product in the Product-Scene.
 If it does not exist yet, it is created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd>    The product
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The SceneProductData associated to the given product.
 
  <dt> Example: </dt> 
  <dd> <pre class="code">     This example returns SceneProductData associated to <tt>Engine</tt> in
    the <tt>NewSceneDelta</tt> Product-Scene.
    <pre>
    Dim scenePrd As SceneProductData
    type = NewSceneDelta.<font color="red">GetSceneProductData</font>(Engine)
    </pre></pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

