<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>OSMInterfaces ProductScene (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
</head>
<body>
<pre><a href="../main.htm">All Frameworks</a>  <a href="../tree.htm">Object Hierarchy</a>  <a href="../OSMInterfaces.htm">This Framework</a>  <a href="interface_ProductScenes_36526.htm">Next</a>  <a href="../CAAHomeIdx.htm">Indexes</a>  </pre>
<hr>
<h1>ProductScene<font size=-1> (Object)</font></h1>
<pre>
<a href="../System/interface_IUnknown_14460.htm">IUnknown</a>
  |
  +---<a href="../System/interface_IDispatch_17333.htm">IDispatch</a>
    |
    +---<a href="../System/interface_CATBaseUnknown_40786.htm">CATBaseUnknown</a>
      |
      +---<a href="../System/interface_CATBaseDispatch_45333.htm">CATBaseDispatch</a>
        |
        +---<a href="../System/interface_AnyObject_17321.htm">AnyObject</a>
          |
          +---ProductScene
 </pre>
<hr><br>
<b><i> Represent the Product-Scene.</i></b><br>

 A Product-Scene stores a state of a product in a given ProductDocument.
 <p>This state is composed of product properties, graphical attibutes, activation status
 and position for each component of the product.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Type"><b>Type</b></a>
<dd>  Returns the type of the Product-Scene.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Copy"><b>Copy</b></a>
<dd>  Creates another Product-Scene from the current one with the possibility to have a different mode.
 <dt>
    <a href="#ExistsInScene"><b>ExistsInScene</b></a>
<dd>  Returns whether the product has overloaded attributes in the Product-Scene.
 <dt>
    <a href="#GetSceneProductData"><b>GetSceneProductData</b></a>
<dd>  Returns the SceneProductData associated to the given product in the Product-Scene.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Type"><dt>

<table><tr><td>o Property <b>Type</b>(<td>) As <a href="../OSMInterfaces/enum_CatSceneType_30364.htm">CatSceneType</a>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the type of the Product-Scene.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>     This example reads the type of <tt>NewSceneDelta</tt> Product-Scene.
    <pre>
    Dim type As CatSceneType
    type = NewSceneDelta.<font color="red">Type</font>
    </pre>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Copy"><dt>

<table><tr><td>o Func <b>Copy</b>(<td><a href="../OSMInterfaces/enum_CatSceneType_30364.htm">CatSceneType</a> <td><tt>iType</tt>) As <a href="../OSMInterfaces/interface_ProductScene_30810.htm">CATIAScene</a> </table></dt>
<dl>
  <dd>
 Creates another Product-Scene from the current one with the possibility to have a different mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    The Product-Scene type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The Product-Scene created from the current one.
 
  <dt> <b>Example:</b> 
  <dd>     This example returns whether the <tt>CopyScene</tt> Product-Scene created from 
    the <tt>Configuration1</tt> Product-Scene, with the DELTA mode.
    <pre>
    Dim type As CatSceneType
    type = CatSceneTypeDelta
    Dim CopyScene As ProductScene
    CopyScene = Configuration1.<font color="red">Copy</font>(type)
    </pre>
</dl>
</dl>
<a name="ExistsInScene"><dt>

<table><tr><td>o Func <b>ExistsInScene</b>(<td><a href="../ProductStructureInterfaces/interface_Product_11223.htm">CATIAProduct</a> <td><tt>iProduct</tt>) As boolean </table></dt>
<dl>
  <dd>
 Returns whether the product has overloaded attributes in the Product-Scene.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd>    The product
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     True if the Product-Scene overloads some of the product attributes.
 
  <dt> <b>Example:</b> 
  <dd>     This example returns whether the <tt>Engine</tt> product exists in
    the <tt>Configuration1</tt> Product-Scene.
    <pre>
    ExistsInSc = Configuration1.<font color="red">ExistsInScene</font>(Engine)
    </pre>
</dl>
</dl>
<a name="GetSceneProductData"><dt>

<table><tr><td>o Func <b>GetSceneProductData</b>(<td><a href="../ProductStructureInterfaces/interface_Product_11223.htm">CATIAProduct</a> <td><tt>iProduct</tt>) As <a href="../OSMInterfaces/interface_SceneProductData_53304.htm">CATIASceneProduct</a> </table></dt>
<dl>
  <dd>
 Returns the SceneProductData associated to the given product in the Product-Scene.
 If it does not exist yet, it is created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd>    The product
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The SceneProductData associated to the given product.
 
  <dt> <b>Example:</b> 
  <dd>     This example returns SceneProductData associated to <tt>Engine</tt> in
    the <tt>NewSceneDelta</tt> Product-Scene.
    <pre>
    Dim scenePrd As SceneProductData
    type = NewSceneDelta.<font color="red">GetSceneProductData</font>(Engine)
    </pre>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 2003, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
