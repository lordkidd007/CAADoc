<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Chamfer (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PartInterfaces.htm" href="../PartInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PartInterfaces";	}
		function getCurrentObjectName() { 
 	return "Chamfer"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Chamfer<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Chamfer_15430','Chamfer','0');</script>
<b><i> Represents the chamfer shape.</i></b><br>

 A chamfer is made up of a list of geometrical elements
 to process, such as faces, and is defined using a couple of parameters,
 such as two lengthes, or a length and an angle.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Angle"><b>Angle</b></a>
<dd>  Returns the chamfer angle.
 <dt>
    <a href="#ElementsToChamfer"><b>ElementsToChamfer</b></a>
<dd>  Returns the collection of geometrical elements to be chamfered.
 <dt>
    <a href="#Length1"><b>Length1</b></a>
<dd>  Returns the chamfer first length.
 <dt>
    <a href="#Length2"><b>Length2</b></a>
<dd>  Returns the chamfer second length.
 <dt>
    <a href="#Mode"><b>Mode</b></a>
<dd>  Returns or sets the chamfer definition mode.
 <dt>
    <a href="#Orientation"><b>Orientation</b></a>
<dd>  Returns or sets the chamfer orientation.
 <dt>
    <a href="#Propagation"><b>Propagation</b></a>
<dd>  Returns or sets the propagation mode of the geometrical elements
 to be chamfered.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddElementToChamfer"><b>AddElementToChamfer</b></a>
<dd>  Adds a new geometrical element to be chamfered.
 <dt>
    <a href="#WithdrawElementToChamfer"><b>WithdrawElementToChamfer</b></a>
<dd>  Withdraws a geometrical element from those to be chamfered.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Angle"><dt>

<table><tr><td>o Property <b>Angle</b>(<td>) As <script type="text/javascript"> activateLink('Angle','Angle')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the chamfer angle.
 This is valid only if the chamfer is defined using a length and an angle,
 that is if the chamfer definition mode 
<script type="text/javascript"> activateLinkAnchor('CatChamferMode','','CatChamferMode') </script> is set to <tt>catLengthAngleChamfer</tt>.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>angle</tt> the angle of
 the <tt>firstChamfer</tt> chamfer:
 <pre>
 Set angle = firstChamfer.<font color="red">Angle</font>
</pre>
 </dl>
</dl>
<a name="ElementsToChamfer"><dt>

<table><tr><td>o Property <b>ElementsToChamfer</b>(<td>) As <script type="text/javascript"> activateLink('References','References')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection of geometrical elements to be chamfered.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>list</tt> the list of elements
 of the <tt>firstChamfer</tt> chamfer:
 <pre>
 Set list = firstChamfer.<font color="red">ElementsToChamfer</font>
 </pre>
 </dl>
</dl>
<a name="Length1"><dt>

<table><tr><td>o Property <b>Length1</b>(<td>) As <script type="text/javascript"> activateLink('Length','Length')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the chamfer first length.
 This is the first length if the chamfer is defined by two lengthes,
 or the chamfer if the chamfer is defined by a length and an angle.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>length1</tt> the first length of
 the <tt>firstChamfer</tt> chamfer:
 <pre>
 Set length1 = firstChamfer.<font color="red">Length1</font>
 </pre>
 </dl>
</dl>
<a name="Length2"><dt>

<table><tr><td>o Property <b>Length2</b>(<td>) As <script type="text/javascript"> activateLink('Length','Length')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the chamfer second length.
 This is valid only if the chamfer is defined using two lengthes,
 that is if the chamfer definition mode 
<script type="text/javascript"> activateLinkAnchor('CatChamferMode','','CatChamferMode') </script> is set to <tt>catTwoLengthChamfer</tt>.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>length2</tt> the second length
 of the <tt>firstChamfer</tt> chamfer:
 <pre>
 Set length2 = firstChamfer.<font color="red">Length2</font>
</pre>
 </dl>
</dl>
<a name="Mode"><dt>

<table><tr><td>o Property <b>Mode</b>(<td>) As <script type="text/javascript"> activateLink('CatChamferMode','CatChamferMode')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the chamfer definition mode.
 The chamfer definition mode enables the chamfer to be defined
 using either two lengthes or a length and an angle.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>mode</tt> how the parameters
 of the <tt>firstChamfer</tt> chamfer are defined, and then sets it
 to <tt>catTwoLengthChamfer</tt>:
 <pre>
 Set mode = firstChamfer.<font color="red">Mode</font>
 firstChamfer.<font color="red">Mode</font> = catTwoLengthChamfer
 </pre>
 </dl>
</dl>
<a name="Orientation"><dt>

<table><tr><td>o Property <b>Orientation</b>(<td>) As <script type="text/javascript"> activateLink('CatChamferOrientation','CatChamferOrientation')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the chamfer orientation.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>orient</tt> the orientation mode
 of the <tt>firstChamfer</tt> chamfer, and then sets it to
 <tt>catReverseChamfer</tt>:
 <pre>
 Set orient = firstChamfer.<font color="red">Orientation</font>
 firstChamfer.<font color="red">Orientation</font> = catReverseChamfer
 </pre>
 </dl>
</dl>
<a name="Propagation"><dt>

<table><tr><td>o Property <b>Propagation</b>(<td>) As <script type="text/javascript"> activateLink('CatChamferPropagation','CatChamferPropagation')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the propagation mode of the geometrical elements
 to be chamfered.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>prop</tt> the propagation mode
 of the <tt>firstChamfer</tt> chamfer, and then sets it to
 <tt>catMinimalChamfer</tt>:
 <pre>
 Set prop = firstChamfer.<font color="red">Propagation</font>
 firstChamfer.<font color="red">Propagation</font> = catMinimalChamfer
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddElementToChamfer"><dt>

<table><tr><td>o Sub <b>AddElementToChamfer</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iElementToChamfer</tt>)</table></dt>
<dl>
  <dd>
 Adds a new geometrical element to be chamfered.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElementToChamfer</tt>
   <dd>   The new element to be chamfered<br>
 The following </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object is supported:  
<script type="text/javascript"> activateLinkAnchor('TriDimFeatEdge','','TriDimFeatEdge') </script>. <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>The following example adds the new element <tt>element</tt>
 to be chamfered for the <tt>firstChamfer</tt> chamfer:
 <pre>
 firstChamfer.<font color="red">AddElementToChamfer</font>(element)
 </pre>
 </dl>
</dl>
</dl>
<a name="WithdrawElementToChamfer"><dt>

<table><tr><td>o Sub <b>WithdrawElementToChamfer</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iElementToWithdraw</tt>)</table></dt>
<dl>
  <dd>
 Withdraws a geometrical element from those to be chamfered.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElementToWithdraw</tt>
   <dd>   The existing element to withdraw<br>
 The following </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object is supported:  
<script type="text/javascript"> activateLinkAnchor('TriDimFeatEdge','','TriDimFeatEdge') </script>. <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>The following example withdraws an existing element <tt>element</tt>
 to be chamfered from the <tt>firstChamfer</tt> chamfer:
 <pre>
 firstChamfer.<font color="red">WithdrawElementToChamfer</font>(element)
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

