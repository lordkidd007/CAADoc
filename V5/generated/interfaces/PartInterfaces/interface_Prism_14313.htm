<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Prism (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PartInterfaces.htm" href="../PartInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PartInterfaces";	}
		function getCurrentObjectName() { 
 	return "Prism"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Prism<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Prism_14313','Prism','0');</script>
<b><i> Prism-based features in Part Design : base for pad or pocket.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#DirectionOrientation"><b>DirectionOrientation</b></a>
<dd>  Returns the prism direction orientation.
 <dt>
    <a href="#DirectionType"><b>DirectionType</b></a>
<dd>  Returns the prism direction type.
 <dt>
    <a href="#FirstLimit"><b>FirstLimit</b></a>
<dd>  Returns the first prism limit (one of the two).
 <dt>
    <a href="#IsSymmetric"><b>IsSymmetric</b></a>
<dd>  Returns the prism symmetry flag.
 <dt>
    <a href="#IsThin"><b>IsThin</b></a>
<dd>  Returns the prism thin flag.
 <dt>
    <a href="#MergeEnd"><b>MergeEnd</b></a>
<dd>  Returns the prism merge end flag (for thin prism only).
 <dt>
    <a href="#NeutralFiber"><b>NeutralFiber</b></a>
<dd>  Returns the prism neutral fiber flag (for thin prism only).
 <dt>
    <a href="#SecondLimit"><b>SecondLimit</b></a>
<dd>  Returns the second prism limit (one of the two).
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetDirection"><b>GetDirection</b></a>
<dd>  Returns the prism direction with absolute coordinates.
 <dt>
    <a href="#ReverseInnerSide"><b>ReverseInnerSide</b></a>
<dd>  Reverses the prism inner side when the profile is open.
 <dt>
    <a href="#SetDirection"><b>SetDirection</b></a>
<dd>  Sets the prism associative direction.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="DirectionOrientation"><dt>

<table><tr><td>o Property <b>DirectionOrientation</b>(<td>) As <script type="text/javascript"> activateLink('CatPrismOrientation','CatPrismOrientation')</script> </table></dt>
<dl>
  <dd>
 Returns the prism direction orientation.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oOrientation   The direction orientation (see 
<script type="text/javascript"> activateLinkAnchor('CatPrismOrientation','','CatPrismOrientation') </script> for list of possible types) <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>dirOrientation</tt> the direction orientation of
 prism <tt>firstPrism</tt>, and then sets it so that the direction will be now inversed :
 <pre>
 Set dirOrientation = firstPrism.<font color="red">DirectionOrientation</font>
 firstPrism.<font color="red">DirectionOrientation</font> = catInverseOrientation
</pre>
 </dl>
</dl>
</dl>
<a name="DirectionType"><dt>

<table><tr><td>o Property <b>DirectionType</b>(<td>) As <script type="text/javascript"> activateLink('CatPrismExtrusionDirection','CatPrismExtrusionDirection')</script> </table></dt>
<dl>
  <dd>
 Returns the prism direction type.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oDirType   The direction type (see 
<script type="text/javascript"> activateLinkAnchor('CatPrismExtrusionDirection','','CatPrismExtrusionDirection') </script> for list of possible types) <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>dirType</tt> the direction type of
 prism <tt>firstPrism</tt>, and then sets it so that the direction
 will be now normal to the sketch :
 <pre>
 Set dirType = firstPrism.<font color="red">DirectionType</font>
 firstPrism.<font color="red">DirectionType</font> = catNormalToSketchDirection
</pre>
 </dl>
</dl>
</dl>
<a name="FirstLimit"><dt>

<table><tr><td>o Property <b>FirstLimit</b>(<td>) As <script type="text/javascript"> activateLink('Limit','Limit')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the first prism limit (one of the two).<br>
 This limit manages the way the prism is ended.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oFirstLimit   The first limit (see 
<script type="text/javascript"> activateLinkAnchor('Limit','','Limit') </script> for more information) <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>firstLimit</tt> the first limit of
 prism <tt>firstPrism</tt>:
 <pre>
 Set firstLimit = firstPrism.<font color="red">FirstLimit</font>
</pre>
 </dl>
</dl>
</dl>
<a name="IsSymmetric"><dt>

<table><tr><td>o Property <b>IsSymmetric</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the prism symmetry flag.<br>
 It returns TRUE if the prism is symmetric (from the base sketch), FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsSymmetric   The symmetry flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>symFlag</tt> the symmetry flag of
 prism <tt>firstPrism</tt>, and then sets it so that it will be now symmetric (from the base sketch) :
 <pre>
 Set symFlag = firstPrism.<font color="red">IsSymmetric</font>
 firstPrism.<font color="red">IsSymmetric</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="IsThin"><dt>

<table><tr><td>o Property <b>IsThin</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the prism thin flag.<br>
 It returns TRUE if the prism is a thin prism , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsThin   The thin flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>thinFlag</tt> the thin flag of
 prism <tt>firstPrism</tt>, and then sets it so that it will be now thin :
 <pre>
 Set thinFlag = firstPrism.<font color="red">IsThin</font>
 firstPrism.<font color="red">IsThin</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="MergeEnd"><dt>

<table><tr><td>o Property <b>MergeEnd</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the prism merge end flag (for thin prism only).<br>
 It returns TRUE if merge ends is required , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsMergeEnd   The merge end flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>MergeEndFlag</tt> the merge end flag of
 prism <tt>firstPrism</tt>, and then sets it so that merge end will be required :
 <pre>
 Set MergeEndFlag = firstPrism.<font color="red">IsMergeEnd</font>
 firstPrism.<font color="red">IsMergeEnd</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="NeutralFiber"><dt>

<table><tr><td>o Property <b>NeutralFiber</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the prism neutral fiber flag (for thin prism only).<br>
 It returns TRUE if the prism is a neutral fiber prism , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsNeutralFiber   The neutral fiber flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>NeutralFiberFlag</tt> the neutral fiber flag of
 prism <tt>firstPrism</tt>, and then sets it so that it will be now neutral fiber :
 <pre>
 Set NeutralFiberFlag = firstPrism.<font color="red">IsNeutralFiber</font>
 firstPrism.<font color="red">IsNeutralFiber</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="SecondLimit"><dt>

<table><tr><td>o Property <b>SecondLimit</b>(<td>) As <script type="text/javascript"> activateLink('Limit','Limit')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the second prism limit (one of the two).<br>
 This limit manages the way the prism is ended.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oSecondLimit   The second limit (see 
<script type="text/javascript"> activateLinkAnchor('Limit','','Limit') </script> for more information) <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>secondLimit</tt> the second limit of
 prism <tt>firstPrism</tt>:
 <pre>
 Set secondLimit = firstPrism.<font color="red">SecondLimit</font>
</pre>
 </dl>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetDirection"><dt>

<table><tr><td>o Sub <b>GetDirection</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>ioDirection</tt>)</table></dt>
<dl>
  <dd>
 Returns the prism direction with absolute coordinates.<br>
 It needs a safe array with 3 elements : X, Y, Z direction coordinates
 The array must be previously initialized
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  ioDirection   The direction coordinates
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>dirArray</tt> the direction coordinates of
 prism <tt>firstPrism</tt>:
 <pre>
 Dim dirArray(2)
 Call firstPrism.<font color="red">GetDirection</font>(dirArray)
 Set x = dirArray[1]
 Set y = dirArray[2]
 Set z = dirArray[3]
</pre>
 </dl>
</dl>
</dl>
<a name="ReverseInnerSide"><dt>

<table><tr><td>o Sub <b>ReverseInnerSide</b>(<td>)</table></dt>
<dl>
  <dd>
 Reverses the prism inner side when the profile is open.
 This is useful for finding the shape to reach.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example reverses the current inner side of
 prism <tt>firstPrism</tt> :
 <pre>
 firstPrism.<font color="red">ReverseInnerSide</font>
 </pre>
 </dl>
</dl>
<a name="SetDirection"><dt>

<table><tr><td>o Sub <b>SetDirection</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iLine</tt>)</table></dt>
<dl>
  <dd>
 Sets the prism associative direction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd>  The support direction reference (see </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('Reference','','Reference') </script> for more information) <br> This reference can be valuated with a reference to a line or an edge.<br>
 The following 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> objects are supported:  
<script type="text/javascript"> activateLinkAnchor('PlanarFace','','PlanarFace') </script>, 
<script type="text/javascript"> activateLinkAnchor('RectilinearTriDimFeatEdge','','RectilinearTriDimFeatEdge') </script> and 
<script type="text/javascript"> activateLinkAnchor('RectilinearBiDimFeatEdge','','RectilinearBiDimFeatEdge') </script>. <dl>
 <dt><b>Example:</b>
 <dd>The following example sets the prism direction reference of
 prism <tt>firstPrism</tt> with <tt>prismDirRef</tt> line :
 <pre>
 firstPrism.<font color="red">SetDirection</font> prismDirRef
</pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

