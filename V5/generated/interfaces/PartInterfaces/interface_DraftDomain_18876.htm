<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces DraftDomain (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PartInterfaces.htm" href="../PartInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PartInterfaces";	}
		function getCurrentObjectName() { 
 	return "DraftDomain"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DraftDomain<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DraftDomain_18876','DraftDomain','0');</script>
<b><i> Represents the draft domain.</i></b><br>

 A draft domain is a basic object used by a draft shape.
 It contains objects such as an angle, a pulling direction,
 and a collection of faces to be drafted.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#DraftAngle"><b>DraftAngle</b></a>
<dd>  Returns the draft angle.
 <dt>
    <a href="#FacesToDraft"><b>FacesToDraft</b></a>
<dd>  Returns the faces to be drafted.
 <dt>
    <a href="#MultiselectionMode"><b>MultiselectionMode</b></a>
<dd>   Changes the multiselection mode.
 <dt>
    <a href="#NeutralElement"><b>NeutralElement</b></a>
<dd>  Returns or sets the draft neutral element.
 <dt>
    <a href="#NeutralPropagationMode"><b>NeutralPropagationMode</b></a>
<dd>  Returns or sets the neutral element propagation mode.
 <dt>
    <a href="#PullingDirectionElement"><b>PullingDirectionElement</b></a>
<dd>  Returns or sets the draft pulling direction element.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddFaceToDraft"><b>AddFaceToDraft</b></a>
<dd>  Adds a face to those to be drafted.
 <dt>
    <a href="#GetPullingDirection"><b>GetPullingDirection</b></a>
<dd>  Returns the draft pulling direction.
 <dt>
    <a href="#RemoveFaceToDraft"><b>RemoveFaceToDraft</b></a>
<dd>   Removes a face from those to be drafted.
 <dt>
    <a href="#SetPullingDirection"><b>SetPullingDirection</b></a>
<dd>  Sets the draft pulling direction.
 <dt>
    <a href="#SetVolumeSupport"><b>SetVolumeSupport</b></a>
<dd>   Value the support of draft.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="DraftAngle"><dt>

<table><tr><td>o Property <b>DraftAngle</b>(<td>) As <script type="text/javascript"> activateLink('Angle','Angle')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the draft angle.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>angle</tt>
 the draft angle of the draft domain <tt>firstDraftDomain</tt>:
 <pre>
 Set angle = firstDraftDomain.<font color="red">DraftAngle</font>
 </pre>
 </dl>
</dl>
<a name="FacesToDraft"><dt>

<table><tr><td>o Property <b>FacesToDraft</b>(<td>) As <script type="text/javascript"> activateLink('References','References')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the faces to be drafted.
 They are returned as a collection of reference geometric elements.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns the collection of faces to be drafted
 of the draft domain <tt>firstDraftDomain</tt> in <tt>list</tt>:
 <pre>
 Set list = firstDraftDomain.<font color="red">FacesToDraft</font>
 </pre>
 </dl>
</dl>
<a name="MultiselectionMode"><dt>

<table><tr><td>o Property <b>MultiselectionMode</b>(<td>) As <script type="text/javascript"> activateLink('CatDraftMultiselectionMode','CatDraftMultiselectionMode')</script> </table></dt>
<dl>
  <dd>
  Changes the multiselection mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMultiselectionMode.</tt>
   <dd> The elements to be drafted can be selected explicitly (CATNoneDraftMultiselectionMode)
 or can implicitly selected as neighbors of the neutral face (CATMultiselectionByNeutralMode)
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>MultiselMode</tt>
 the multiselection mode of the
 draft domain <tt>firstDraftDomain</tt>, and then sets it to
 <tt>CATMultiselectionByNeutralMode</tt> 
 <pre>
 Set MultiselMode = firstDraftDomain.<font color="red">MultiselectionMode</font>
 firstDraftDomain.<font color="red">MultiselectionMode</font> = CATMultiselectionByNeutralMode
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="NeutralElement"><dt>

<table><tr><td>o Property <b>NeutralElement</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the draft neutral element.<br>
 To set the property, you can use the following 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object:  
<script type="text/javascript"> activateLinkAnchor('PlanarFace','','PlanarFace') </script>. <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>neutral</tt>
 the neutral element of the draft domain <tt>firstDraftDomain</tt>,
 and then sets it to <tt>newNeutral</tt>:
 <pre>
 Set neutral = firstDraftDomain.<font color="red">NeutralElement</font>
 firstDraftDomain.<font color="red">NeutralElement</font> = newNeutral
 </pre>
 </dl>
</dl>
<a name="NeutralPropagationMode"><dt>

<table><tr><td>o Property <b>NeutralPropagationMode</b>(<td>) As <script type="text/javascript"> activateLink('CatDraftNeutralPropagationMode','CatDraftNeutralPropagationMode')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the neutral element propagation mode.
 This mode is used when computing the needed neutral elements.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>propMode</tt>
 the neutral propagation mode of the
 draft domain <tt>firstDraftDomain</tt>, and then sets it to
 <tt>CATSmoothDraftNeutralPropagationMode</tt> so that
 the neutral propagation will now be smooth:
 <pre>
 Set propMode = firstDraftDomain.<font color="red">NeutralPropagationMode</font>
 firstDraftDomain.<font color="red">NeutralPropagationMode</font> = CATSmoothDraftNeutralPropagationMode
 </pre>
 </dl>
</dl>
<a name="PullingDirectionElement"><dt>

<table><tr><td>o Property <b>PullingDirectionElement</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the draft pulling direction element.<br>
 To set the property, you can use one of the following 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> objects:  
<script type="text/javascript"> activateLinkAnchor('PlanarFace','','PlanarFace') </script> or 
<script type="text/javascript"> activateLinkAnchor('RectilinearTriDimFeatEdge','','RectilinearTriDimFeatEdge') </script>. <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>pullingdirection</tt>
 the pulling direction element of the draft domain <tt>firstDraftDomain</tt>,
 and then sets it to <tt>newPullingDirection</tt>:
 <pre>
 Set pullingdirection = firstDraftDomain.<font color="red">NeutralElement</font>
 firstDraftDomain.<font color="red">PullingDirectionElement</font> = newPullingDirection
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddFaceToDraft"><dt>

<table><tr><td>o Sub <b>AddFaceToDraft</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iFace</tt>)</table></dt>
<dl>
  <dd>
 Adds a face to those to be drafted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFace</tt>
   <dd>   The face to add to those to be drafted<br>
 The following </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object is supported:  ScFace.
 <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>The following example adds the face <tt>NewFaceToDraft</tt>
 to the draft domain <tt>CurrentDraftDomain</tt>:
 <pre>
 CurrentDraftDomain.<font color="red">AddFaceToDraft</font>(NewFaceToDraft)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetPullingDirection"><dt>

<table><tr><td>o Sub <b>GetPullingDirection</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>ioPullingDirection</tt>)</table></dt>
<dl>
  <dd>
 Returns the draft pulling direction.
 The pulling direction is returned as an array containing
 the pulling direction vector components.
 Assume this array is <tt>PullDir</tt>. It contains:
 <dl>
 <dt><tt>PullDir[0],PullDir[1],PullDir[2]</tt>
 <dd>The X, Y, and Z pulling direction vector components
 </dl>
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>PullDir</tt>
 the pulling direction vector components of the
 draft domain <tt>firstDraftDomain</tt>:
 <pre>
 Set PullDir = firstDraftDomain.<font color="red">PullingDirection</font>
 Set x = PullDir[0]
 Set y = PullDir[1]
 Set z = PullDir[2]
 </pre>
 </dl>
</dl>
<a name="RemoveFaceToDraft"><dt>

<table><tr><td>o Sub <b>RemoveFaceToDraft</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iFace</tt>)</table></dt>
<dl>
  <dd>
  Removes a face from those to be drafted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFace</tt>
   <dd>   The face to be removed from those to be drafted<br>
 The following </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object is supported:  
<script type="text/javascript"> activateLinkAnchor('Face','','Face') </script>. <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>The following example removes the face <tt>FaceToRemove</tt>
 from the draft domain <tt>CurrentDraftDomain</tt>:
 <pre>
 CurrentDraftDomain.<font color="red">RemoveFaceToDraft</font>(FaceToRemove)
 </pre>
 </dl>
</dl>
</dl>
<a name="SetPullingDirection"><dt>

<table><tr><td>o Sub <b>SetPullingDirection</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ</tt>)</table></dt>
<dl>
  <dd>
 Sets the draft pulling direction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX,iY,iZ</tt>
   <dd>   The X, Y, and Z pulling direction vector components
 <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>The following example sets the draft pulling direction of
 the draft domain <tt>firstDraftDomain</tt> to the direction
 with the vector components 10, -5, 10:
 <pre>
 firstDraftDomain.<font color="red">PullingDirection</font> 10, -5, 10
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetVolumeSupport"><dt>

<table><tr><td>o Sub <b>SetVolumeSupport</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iVolumeSupport</tt>)</table></dt>
<dl>
  <dd>
  Value the support of draft.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVolumeSupport</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

