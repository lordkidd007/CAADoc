<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Sweep (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PartInterfaces.htm" href="../PartInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PartInterfaces";	}
		function getCurrentObjectName() { 
 	return "Sweep"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Sweep<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Sweep_14280','Sweep','0');</script>
<b><i> Represents the sweep shape.</i></b><br>

 It is the base object for ribs and slots.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#AnchorDirReverse"><b>AnchorDirReverse</b></a>
<dd>  Returns the Sweep AnchorDirReverse flag (for Sweep Move Profile only).
 <dt>
    <a href="#CenterCurve"><b>CenterCurve</b></a>
<dd>  Returns the sketch used as the sweep center curve.
 <dt>
    <a href="#CenterCurveElement"><b>CenterCurveElement</b></a>
<dd>  Returns or sets the center curve .
 <dt>
    <a href="#IsThin"><b>IsThin</b></a>
<dd>  Returns the Sweep thin flag.
 <dt>
    <a href="#MergeEnd"><b>MergeEnd</b></a>
<dd>  Returns the Sweep merge end flag (for thin Sweep only).
 <dt>
    <a href="#MergeMode"><b>MergeMode</b></a>
<dd>  Returns or sets the end mode .
 <dt>
    <a href="#MoveProfileToPath"><b>MoveProfileToPath</b></a>
<dd>  Returns the Sweep MoveProfileToPath flag (for Sweep Move Profile only).
 <dt>
    <a href="#NeutralFiber"><b>NeutralFiber</b></a>
<dd>  Returns the Sweep neutral fiber flag (for thin Sweep only).
 <dt>
    <a href="#NormalAxisDirReverse"><b>NormalAxisDirReverse</b></a>
<dd>  Returns the Sweep NormalAxisDirReverse flag (for Sweep Move Profile only).
 <dt>
    <a href="#PullingDirElement"><b>PullingDirElement</b></a>
<dd>  Returns or sets the pulling direction .
 <dt>
    <a href="#ReferenceSurfaceElement"><b>ReferenceSurfaceElement</b></a>
<dd>  Returns or sets the reference surface .
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#SetKeepAngleOption"><b>SetKeepAngleOption</b></a>
<dd>   Actives KeepAngleOption.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="AnchorDirReverse"><dt>

<table><tr><td>o Property <b>AnchorDirReverse</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Sweep AnchorDirReverse flag (for Sweep Move Profile only).<br>
 It returns TRUE if Anchor direction is reversed , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oAnchorDirReverse   The oAnchorDirReverse flag as a boolean 
 <dl>
 <dt><b>Example:</b>
</pre>
 </dl>
</dl>
</dl>
<a name="CenterCurve"><dt>

<table><tr><td>o Property <b>CenterCurve</b>(<td>) As <script type="text/javascript"> activateLink('Sketch','Sketch')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the sketch used as the sweep center curve.
 The sweep is built along this sketch.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>centerCurve</tt> 
 the sketch used as center curve by the
 <tt>firstSweep</tt> sweep object:
 <pre>
 Set centerCurve = firstSweep.<font color="red">CenterCurve</font>
 </pre>
 </dl>
</dl>
<a name="CenterCurveElement"><dt>

<table><tr><td>o Property <b>CenterCurveElement</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the center curve .<br>
 To set the property, you can use the following 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object:  
<script type="text/javascript"> activateLinkAnchor('TriDimFeatEdge','','TriDimFeatEdge') </script>.
</dl>
<a name="IsThin"><dt>

<table><tr><td>o Property <b>IsThin</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Sweep thin flag.<br>
 It returns TRUE if the Sweep is a thin Sweep , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsThin   The thin flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>thinFlag</tt> the thin flag of
 Sweep <tt>firstSweep</tt>, and then sets it so that it will be now thin :
 <pre>
 Set thinFlag = firstSweep.<font color="red">IsThin</font>
 firstSweep.<font color="red">IsThin</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="MergeEnd"><dt>

<table><tr><td>o Property <b>MergeEnd</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Sweep merge end flag (for thin Sweep only).<br>
 It returns TRUE if merge ends is required , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsMergeEnd   The merge end flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>MergeEndFlag</tt> the merge end flag of
 Sweep <tt>firstSweep</tt>, and then sets it so that merge end will be required :
 <pre>
 Set MergeEndFlag = firstSweep.<font color="red">IsMergeEnd</font>
 firstSweep.<font color="red">IsMergeEnd</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="MergeMode"><dt>

<table><tr><td>o Property <b>MergeMode</b>(<td>) As <script type="text/javascript"> activateLink('CatMergeMode','CatMergeMode')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the end mode .
</dl>
<a name="MoveProfileToPath"><dt>

<table><tr><td>o Property <b>MoveProfileToPath</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Sweep MoveProfileToPath flag (for Sweep Move Profile only).<br>
 It returns TRUE if move profile is required , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsMoveProfileToPath   The MoveProfileToPath flag as a boolean 
 <dl>
 <dt><b>Example:</b>
</pre>
 </dl>
</dl>
</dl>
<a name="NeutralFiber"><dt>

<table><tr><td>o Property <b>NeutralFiber</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Sweep neutral fiber flag (for thin Sweep only).<br>
 It returns TRUE if the Sweep is a neutral fiber Sweep , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsNeutralFiber   The neutral fiber flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>NeutralFiberFlag</tt> the neutral fiber flag of
 Sweep <tt>firstSweep</tt>, and then sets it so that it will be now neutral fiber :
 <pre>
 Set NeutralFiberFlag = firstSweep.<font color="red">IsNeutralFiber</font>
 firstSweep.<font color="red">IsNeutralFiber</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="NormalAxisDirReverse"><dt>

<table><tr><td>o Property <b>NormalAxisDirReverse</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Sweep NormalAxisDirReverse flag (for Sweep Move Profile only).<br>
 It returns TRUE if Normal Axis direction is reversed , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oNormalAxisDirReverse   The oNormalAxisDirReverse flag as a boolean 
 <dl>
 <dt><b>Example:</b>
</pre>
 </dl>
</dl>
</dl>
<a name="PullingDirElement"><dt>

<table><tr><td>o Property <b>PullingDirElement</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the pulling direction .<br>
 To set the property, you can use one of the following 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> objects:  
<script type="text/javascript"> activateLinkAnchor('PlanarFace','','PlanarFace') </script>, 
<script type="text/javascript"> activateLinkAnchor('RectilinearTriDimFeatEdge','','RectilinearTriDimFeatEdge') </script>, 
<script type="text/javascript"> activateLinkAnchor('RectilinearBiDimFeatEdge','','RectilinearBiDimFeatEdge') </script>, 
<script type="text/javascript"> activateLinkAnchor('RectilinearMonoDimFeatEdge','','RectilinearMonoDimFeatEdge') </script>.
</dl>
<a name="ReferenceSurfaceElement"><dt>

<table><tr><td>o Property <b>ReferenceSurfaceElement</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the reference surface .<br>
 To set the property, you can use the following 
<script type="text/javascript"> activateLinkAnchor('Boundary','','Boundary') </script> object:  
<script type="text/javascript"> activateLinkAnchor('Face','','Face') </script>.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="SetKeepAngleOption"><dt>

<table><tr><td>o Sub <b>SetKeepAngleOption</b>(<td>)</table></dt>
<dl>
  <dd>
  Actives KeepAngleOption.
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

