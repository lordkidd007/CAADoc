<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FittingInterfaces Shots (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../FittingInterfaces.htm" href="../FittingInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "FittingInterfaces";	}
		function getCurrentObjectName() { 
 	return "Shots"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Shots<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Shots_19026','Shots','0');</script>
<b><i>   The collection of all shot objects contained in the current 
 sampled.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Append"><b>Append</b></a>
<dd>  Adds a shot to the end of the shots collection.
 <dt>
    <a href="#CreateShot"><b>CreateShot</b></a>
<dd>  Creates a new shot and adds it to the Shots collection.
 <dt>
    <a href="#CreateSpecificShot"><b>CreateSpecificShot</b></a>
<dd>  Creates a new shot of a specific type and adds it to the Shots 
 collection.
 <dt>
    <a href="#InsertAfter"><b>InsertAfter</b></a>
<dd>  Adds a shot to a specific location to the shots collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a shot using its index from the colection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a shot from the collection.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Append"><dt>

<table><tr><td>o Sub <b>Append</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>iShot</tt>)</table></dt>
<dl>
  <dd>
 Adds a shot to the end of the shots collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShot</tt>
   <dd>    The shot to be added
 
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 The following example adds a shot (called <tt>myShot</tt> to the 
 shots collection.
 <pre>
 Shots.<font color="red">Append (myShot)</font>
 </pre></dd>
</dl>
</dl>
</dl>
<a name="CreateShot"><dt>

<table><tr><td>o Func <b>CreateShot</b>(<td>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Creates a new shot and adds it to the Shots collection.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The created shot
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 The following example creates a shot <tt>newShot</tt>
 in the Shots collection.
 <pre>
 Dim newShot
 Set newShot = Shots.<font color="red">CreateShot</font>
 </pre>
</dl>
</dl>
<a name="CreateSpecificShot"><dt>

<table><tr><td>o Func <b>CreateSpecificShot</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Creates a new shot of a specific type and adds it to the Shots 
 collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    Specifies the type of the shot to be created.  The legal values
    are FITShotPoints, FITShotDouble, FITShotSimple and FITShotGeneric.
    These different types correspond to the need of creating different
    shots for different types of objects.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Shot
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 The following example creates a shot <tt>shot</tt>
 in the Shots collection.
 <pre>
 Set newShots = Shots.<font color="red">CreateShot (FITSHOTDouble)</font>
 </pre>
</dl>
</dl>
<a name="InsertAfter"><dt>

<table><tr><td>o Sub <b>InsertAfter</b>(<td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>iShot</tt>)</table></dt>
<dl>
  <dd>
 Adds a shot to a specific location to the shots collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>    The value of the location of an already existing shot.  Then when
    inserting a new shot, it will be placed after it.  It is a positive
    integer, with the range of 1 to the value of the last shot.
 </dd>
    <dt><tt> iShot</tt>
   <dd>    The shot to be added
 
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 The following example inserts a shot after the second shot.
 <pre>
 Shots.<font color="red">InsertAfter (2, myShot)</font>
 </pre></dd>
</dl>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Returns a shot using its index from the colection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>      The index of the item to retrieve from the collection of shots.
      Numerically, the index value corresponds to the rank of the shot in
      the collection (ie. the first is 1, second is 2, ...).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The retrieved Shot
 <! @sample>
 <dt><b>Example:</b>
 <dd>
 The following example retrieves the second shot from the Shots collection.

 <pre>
 Dim myShot
 Set myShot = myShots.<font color="red">Item</font> (2)
 </pre>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a shot from the collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>      The index of the shot to remove from the collection of the shots.
      Numerically, the index value corresponds to the rank of the shot in
      the collection (ie. the first is 1, second is 2, ...).

 <! @sample>
 <dt><b>Example:</b>
 <dd>
 The following example removes the third shot from the Shots collection 
 of the active document.

 <pre>
 Shots.<font color="red">Remove</font> (3)
 </pre></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</body>

</html>

