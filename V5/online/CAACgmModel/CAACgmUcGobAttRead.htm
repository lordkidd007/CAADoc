<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Reading an Attribute</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Reading an Attribute</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This use case explains how to read a CATCGMStreamAttribute. It is associated 
		with the <cite>Creating an Attribute</cite> article [<a href="#References">1</a>]. 
		Run this use case after you have run the CAAGMModelAttributeCreation use 
		case. The file generated by the CAAGMModelAttributeCreation use case is 
		to be used as input file for the CAAGMModelAttributeRead use case.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAGMModelAttributeRead Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAGMModelAttributeRead Do</a></li>
				<li><a href="#How">How to Launch CAAGMModelAttributeRead</a></li>
				<li><a href="#Where">Where to Find the CAAGMModelAttributeRead Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The use case explains how to read a CATCGMStreamAttribute. The attribute implementation 
is defined in the CAAGMModelAttribute.m module. The way it has to be created is 
explained in <cite>Creating an Attribute</cite> [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAGMModelAttributeRead Use Case</h2>
<p>CAAGMModelAttributeRead is a use case of the CAAGMModelInterfaces.edu framework 
that illustrates GMModelInterfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAGMModelAttributeRead Do</h3>
<p>This use case loads a file and scans the geometry to search for the attributes 
of a given type (CAAGMModelAttributeManagement) on a geometry of a given type (PLineType).
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAGMModelAttributeRead</h3>
<p>To launch CAAGMModelAttributeRead, you will need to set up the build time environment, 
then compile CAAGMModelAttributeRead.m and CAAGMModelAttribute.m along with their 
prerequisites, set up the run time environment, and then execute the use case [<a href="#References">2</a>].</p>
<p>You must type CAAGMModelAttributeRead with an argument to execute the use case.</p>
<p><code>CAAGMModelAttributeRead e:\AttToBeRead.NCGM</code></p>
<p>AttToBeRead.NCGM is the file generated by CAAGMModelAttributeCreation.m</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAGMModelAttributeRead Code</h3>
<p>The CAAGMModelAttributeRead use case is made of a main named CAAGMModelAttributeRead.cpp 
located in the CAAGMModelAttributeRead.m module of the CAAGMModelInterfaces.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAGMModelInterfaces.edu\CAAGMModelAttributeRead.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>The use case uses a class defined in the CAAGMModelAttribute.m module.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The main program peforms the following steps:</p>
<ul>
	<li><a href="#Creates the Geometry Factory">Loading the File to Be Read</a></li>
	<li><a href="#Creates a CATPLine">Looping though the Geometry</a></li>
	<li><a href="#Writes the Model and Closes the Factory">Closing the Input File 
	and the CGM Container</a></li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Creates the Geometry Factory"></a>Loading the File to Be Read</h3>
<p>The geometry factory (CATGeoFactory) creates and manages all the CATICGMObject 
(and the curves and surfaces in particular). In this use case, the factory is defined 
by reading a NCGM file that was previously stored,&nbsp; the global function
<code>::CATLoadCGMContainer</code> must be used to retrieve the factory.</p>
<pre class="code">CATGeoFactory* piGeomFactory = ::CATLoadCGMContainer(filetoread);</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Creates a CATPLine"></a>Looping through the Geometry</h3>
<p>Here are the step to follow in order to read specific attributes in a geometry.</p>
<ol>
	<li>Scan the geometry by using the CATICGMContainer::Next method.</li>
	<li>For each objects sanned by the loop, retrieve the persistent tag by using 
	the CATGeometry::GetPersistentTag method.</li>
	<li>For each geometry, retrieve the CATICGMObject by using the CATGeometry::FindObjectFromTag 
	method.</li>
	<li>For each CATICGMObject, retrieve the appropriate attribute by using the 
	CATICGMObject ::GetAttribute method.</li>
	<li>Use the GetValue method applied to the retrieved attribute to read the attribute 
	value.</li>
</ol>
<pre class="code">// (b) --- Loop through the geometry
//
...
for (piCurG = piGeomFactory-&gt;Next(NULL,CATPLineType);
piCurG != NULL;
piCurG = piGeomFactory-&gt;Next(piCurG)) 
  {
    // Find the PLine from its persistent tag
    //
    curtag = piCurG-&gt;GetPersistentTag();
    CATICGMObject * piCGMObj = piGeomFactory-&gt;FindObjectFromTag(curtag);
    if (piCGMObj == NULL)
	{
	  cout &lt;&lt; &quot;No object with the specified tag&quot; &lt;&lt;endl;
			return 1;
	}

    // Retrieve the CATCGMAttribute from its identifier
    //
    CATCGMAttribute * piActAttr = piCGMObj-&gt;
    GetAttribute(UAIDPtr(CAAGMModelAttributeManagement));

    // No searched attribute found on the PLine 
    //
   if (NULL == piActAttr)
	{
            cout &lt;&lt; &quot;------------------------------------------------- &quot; &lt;&lt; endl;
	   cout &lt;&lt; &quot;PLine with no CAAGMModelAttributeManagement attribute &quot; &lt;&lt; endl;
	}

    // The searched attribute found on the Pline
    //
    else
	{
	   cout &lt;&lt; &quot;------------------------------------------------- &quot; &lt;&lt; endl;
	   cout &lt;&lt; &quot;PLine with CAAGMModelAttributeManagement attribute    &quot; &lt;&lt; endl; 
		
            CAAGMModelAttributeManagement * iPersAttr = NULL;
	   iPersAttr = (CAAGMModelAttributeManagement *) piActAttr;

            // Retrieve the attribute value 
            // See the CAAAttributeManagement module
	   //
		if (iPersAttr)
		{
			long oPersval;
	          	iPersAttr-&gt;GetValue(oPersval);
		}
			else return 1;
           		cout &lt;&lt; &quot;----------------------------------- &quot; &lt;&lt; endl;		
		}
	}
  }</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Writes the Model and Closes the Factory"></a>Closing the Input File 
and the CGM Container</h3>
<p>The use case ends with the closure of the file and the CGM container (done by 
the <code>::CATCloseCGMContainer</code> global function).</p>
<pre class="code">filetoread.close();
CATCloseCGMContainer(piGeomFactory);</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The use case illustrates how to read attributes.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAACgmUcGobAttCreation.htm">Creating an Attribute</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Apr 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
