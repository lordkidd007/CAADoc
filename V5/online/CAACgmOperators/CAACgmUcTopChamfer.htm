<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Chamfer</title>
<style type="text/css">
.style2 {
				border-width: 0;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Chamfer</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>Chamfering consists in removing or adding a flat section from a 
		selected edge to create a beveled surface between the two original faces 
		common to that edge. A chamfer can be propagated along one or several 
		edges.</p>
		<ul>
			<li><a href="#OpeToBeUsed">Operator to be Used</a></li>
			<li><a href="#UseCaseDescription">Use Case Description</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="OpeToBeUsed">Operator to be Used</a></h2>
<p>To create a chamfer, use the CATICGMDynAdvancedChamfer operator in GMOperatorsInterfaces. 
This operator has to be created by the CATCGMCreateDynAdvancedChamfer global function.</p>
<h2><a name="UseCaseDescription">Use Case Description</a></h2>
<p>The CAAGMOperatorsChamfer.m module in CAAGMOperatorsInterfaces.edu 
illustrates how to create chamfers. This use case is to be run with 
the ChamferInputs.NCGM input file which is delivered in 
CAAGMOperatorsInterfaces.edu/FunctionTests/InputData. If you are not already 
familiar with geometric modeler use cases, go to
<a href="../CAACgmModel/CAACgmUcGMUseCases.htm">About Geometric Modeler Uses Cases</a>. </p>
<p>With the input data below in which there are six edges to be chamfered (five 
top edges, plus one lateral edge in pink on figures):</p>
<table  cellspacing="6" border="0">
  <caption><a name="Fig.1">Fig.1</a> Chamfer Operation: Input Data</caption>
  <tr>
    <td><img alt="Chamfer0" src="images/CGM_chamfer_0.png"></td>
    <td><img alt="Chamfer1" src="images/CGM_chamfer_01.png"></td>
     </tr>
      <tr>
    <td>Front view</td>
    <td>Rear view</td>
  </tr> 

</table>
<p>and the code below:</p>
<TABLE class="code">
    <TR>
        <TD>
       <pre>
CATListPtrCATFace listFaces;
CATDynChamferRibbon* pRibbon =  new CATDynChamferRibbon(iEdges, 
                   listFaces,
                   CATDynd1a1,
                   50,  // distance from edge to be chamfered to face 
                   45); // angle 45 deg
...
CATICGMDynAdvancedChamfer *pChamferOp = CATCGMCreateDynAdvancedChamfer(iFactory, iTopData, iBody);
...
pChamferOp->Append(pRibbon);</pre>
		<pre>
pChamferOp-&gt;SetCornerCap();
pChamferOp->Run(); 
CATBody * pChamferBody = NULL;
pChamferBody = pChamferOp->GetResult();
...
pChamferOp->Release();
pChamferOp = NULL;
if (NULL != pRibbon) 
{
  delete pRibbon;
  pRibbon = NULL;
}
</pre>
        </TD>
    </TR>
</TABLE>
<p>you get this result:</p>
<table cellspacing="6" class="style2">
  <caption><a name="Fig.2">Fig.2</a> Result of Chamfer Operation </caption>
  <tr>
    <td><img alt="Chamfer Result Cap Corner Front View " src="images/CGM_chamfer_1.png"></td>
    <td><img alt="Chamfer Result No Cap Corner Front view " src="images/CGM_chamfer_2.png"></td>
    <td><img alt="Chamfer Result Cap Corner Rear View " src="images/CGM_chamfer_3.png"></td>
  </tr>
  <tr>
    <td>Front view: Chamfer result</td>
    <td>Rear view: No corner cap setting</td>
    <td>Rear view: SetCornerCap</td>
  </tr> 
</table>
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAACgmModel/CAACgmUcGMUseCases.htm">About Geometric Modeler Use Cases</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAACgmModel/CAACgmTaUseTopoOperators.htm">How to Use Topological Operators</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="CAACgmTaTopBoolean.htm">Understanding Boolean Operators</a></td>
	</tr>

<tr>
		<td>[5]</td>
		<td>
		<a href="CAACgmUcTopOverview.htm">Overview of Topological Operators</a></td>
	</tr>
	</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Sept 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
