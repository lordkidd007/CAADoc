<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Understanding the Versioning of the Topological Operators</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Understanding the Versioning of the Topological Operators</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The topological operators create new bodies from input bodies, depending 
		on an internal algorithm. For maintenance or enhancement reasons, this internal 
		algorithm may change, so that the results could not be exactly the same 
		after the code modification. The operator versioning is a way to always 
		replay an operator with the same level of software. This can be needed by 
		applications that store the specifications of their operations, such as 
		the feature applications. To put this mechanism in place, existing interfaces 
		are modified, and the migration process is explained.</p>
		<ul>
			<li><a href="#Principles">Principle</a>
			<ul>
				<li><a href="#The CATSoftwareConfiguration class">The CATSoftwareConfiguration 
				Class</a></li>
				<li><a href="#The CATTopData class">The CATTopData Class</a></li>
			</ul>
			</li>
			<li><a href="#Migration">Migration</a>
			<ul>
				<li><a href="#Topological Operators">TopologicalOperators</a></li>
				<li><a href="#BasicTopologicalOpe">BasicTopologicalOpe</a></li>
				<li><a href="#AdvancedTopologicalOpe">AdvancedTopologicalOpe</a></li>
				<li><a href="#Case of the Journal">Case of the Journal</a></li>
			</ul>
			</li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Principles"></a>Principle</h2>
<p>If an application stores the way to build an object, and gives the mean to replay 
this definition, it expects that the replay always gives the same result. Up to 
now, for maintenance or enhancement reasons, the software modifications could lead 
to slightly different results. To avoid this situation, the current software configuration 
of an operator is accessible, and an operator can be replayed with a given software 
configuration: we call that the operator versioning.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="The CATSoftwareConfiguration class"></a>The CATSoftwareConfiguration 
Class</h3>
<p>The class that manages the operator versioning is the <i>CATSoftwareConfiguration</i> 
class of the Mathematics framework. This class:</p>
<ul>
	<li>Creates an open configuration for the current software level.</li>
	<li>Creates a closed configuration. (That can be read from a previously streamed 
	configuration with a specific method. See also the Part documentation.)</li>
	<li>Streams an existing configuration.</li>
	<li>Tests whether a configuration is supported by the current software.</li>
</ul>
<p>To create an open configuration (a configuration for the current software level), 
use the default constructor. Notice that you must use the <code>new</code> operator.</p>
<pre class="code">// Defines an open configuration for the operator
CATSoftwareConfiguration * pConfig = new CATSoftwareConfiguration();</pre>
<p>If you use feature applications, please refer to their documentation to see how 
to retrieve the configuration associated with a given feature.</p>
<p>The configuration must be released after use in the following way:</p>
<pre class="code">// Releases the configuration after the deletion of the operators
pConfig-&gt;<strong>Release</strong>();</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="The CATTopData class"></a>The CATTopData Class</h3>
<p>Once created, the configuration instance is given to the topological operator 
to inform it of the level of software it must use during its run. The software configuration 
is not given directly to the operator, but by the mean of the class <i>CATTopData</i> 
that contains:</p>
<ul>
	<li>A pointer to the configuration, that must be not <code>NULL</code>.</li>
	<li>A pointer to the journal [<a href="#References">1</a>] of the operator. 
	This pointer can be <code>NULL</code> : in this case, the journal is not filled.</li>
</ul>
<p>We give here an example for creating a <code>CATTopSkin</code> operator, that 
is fully commented in <i>Overview of the topological operators</i> [<a href="#References">2</a>].
</p>
<pre class="code">// defines the data of the operator: configuration + journal
CATTopData topdata(pConfig,NULL);
// now creates the operator
CATTopSkin * pSkinOp = <strong>::CATCreateTopSkin</strong> (piGeomFactory,// the pointer to the factory for the creation of the result
                                           <strong>&amp;topdata</strong>,     // the topological data
                                           piPlane,
                                           nbPCurves, 
                                           aPCurves,
                                           aLimits,
                                           aOrientations);</pre>
<p>All the operators are based on the same frame: the pointer to the factory for 
the creation of the resulting body is the first argument, the not <code>NULL</code> 
pointer to the topological data containing the configuration and the journal is 
the second argument.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Migration"></a>Migration</h2>
<p>As now an operator must know the configuration software on which it must run, 
this argument becomes mandatory. The following table indicates the correspondence 
between the old signature and the new signature for the operators of the
<a href="#Topological Operators">TopologicalOperators</a>,
<a href="#AdvancedTopologicalOpe">AdvancedTopologicalOpe</a>,
<a href="#BasicTopologicalOpe">BasicTopologicalOpe</a> frameworks. Be careful that 
migration can also affect the class of the operator.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Topological Operators"></a>Topological Operators</h3>
<table class="fill">
	<tr>
		<th>Deprecated Signature</th>
		<th>New Signature</th>
	</tr>
	<tr>
		<td>
		<pre><strong>CATHybOperator*
CreateHybSkinAssembly</strong>(CATGeoFactory* iFactory,
                      ListPOfCATBody* iBodiesToAssemble,
                      CATCGMJournalList* iJournal)

<strong>CATHybOperator*
CreateHybWireAssembly</strong>(CATGeoFactory* iFactory,
                      ListPOfCATBody* iBodiesToAssemble,
                      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATHybAssemble*
CATCreateTopAssemble</strong>(CATGeoFactory* iFactory,
                     CATTopData* iData,
                     ListPOfCATBody* iBodiesToAssemble)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATHybOperator*
CreateHybIntersect</strong>(CATGeoFactory* iFactory,
                   CATBody* iBody1ToIntersect,
                   CATBody* iBody2ToIntersect,
                   CATCGMJournalList* iReport)</pre>
		</td>
		<td>
		<pre><strong>CATHybIntersect*
CATCreateTopIntersect</strong>(CATGeoFactory* iFactory,
                      CATTopData* iData,
                      CATBody* iBody1ToIntersect,
                      CATBody* iBody2ToIntersect)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATHybOperator*
CreateHybProject</strong>(CATGeoFactory* iFactory,
                 CATBody* iBodyToProject,
                 CATBody* iBodySupport,
                 const CATMathDirection* iDirection,
                 CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATHybProject*
CATCreateTopProject</strong>(CATGeoFactory* iFactory,
                    CATTopData* iData,
                    CATBody* iBodyToProject,
                    CATBody* iBodySupport,
                    CATMathDirection* iDirection)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATHybOperator*
CreateHybSplit</strong>(CATGeoFactory* iFactory,
               CATBody* iBodyToSplit,
               short iSideToKeep,
               CATBody* iSplittingBody,
               CATBody* iCuttingBody,
               CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATHybSplit*
CATCreateTopSplit</strong>(CATGeoFactory* iFactory,
                  CATTopData* iData,
                  CATBody* iBodyToSplit,
                  short iSideToKeep,
                  CATBody* iSplittingBody,
                  CATBody* iCuttingBody)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATHybOperator*
CreateHybTrim</strong>(CATGeoFactory* iFactory,
              CATBody* iFirstBodyToCut,
              short iFirstSideToKeep,
              CATBody* iSecondBodyToCut,
              short iSecondSideToKeep,
              CATBody* iCuttingBody,
              CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATHybTrim*
CATCreateTopTrim</strong>(CATGeoFactory* iFactory,
                 CATTopData* iData,
                 CATBody* iFirstBodyToCut,
                 short iFirstSideToKeep,
                 CATBody* iSecondBodyToCut,
                 short iSecondSideToKeep,
                 CATBody* iCuttingBody)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATDistanceMinBodyBody * <strong>
CreateDistanceMinTopo</strong>(CATGeoFactory *iFactory,
                      CATBody *iBody1,
                      CATBody *iBody2,
                      CATSkillValue iMode=BASIC)</pre>
		</td>
		<td>
		<pre>CATDistanceMinBodyBody * <strong>
CATCreateDistanceMinTopo</strong>(CATGeoFactory *iFactory,
                 CATTopData *iData,
                 CATBody *iBody1,
                 CATBody *iBody2,
                 CATSkillValue iMode=BASIC)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATDynBoolean*
<strong>CATDynCreateBoolean</strong>(CATGeoFactory* iFactory,
                    CATDynBooleanType iOperation,
                    CATBody* iPart,
                    CATBody* iTool,
                    CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATDynBoolean*
<strong>CATCreateDynBoolean</strong>(CATGeoFactory* iFactory,
                    CATTopData* iData,
                    CATDynBooleanType iOperation,
                    CATBody* iPart,
                    CATBody* iTool)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATDynChamfer*
<strong>CATDynCreateChamfer</strong>(CATGeoFactory* Container,
                    CATBody* iPart,
                    CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATDynChamfer*
<strong>CATCreateDynChamfer</strong>(CATGeoFactory* Container,
                    CATTopData* iData,
                    CATBody* iPart)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATDynDraft*
<strong>CATDynCreateDraft</strong>(CATGeoFactory* iContainer,
                  CATBody* iPart,
                  const CATDynDraftType iType,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATDynDraft*
<strong>CATCreateDynDraft</strong>(CATGeoFactory* iContainer,
                  CATTopData* iData,
                  CATBody* iPart,
                  const CATDynDraftType iType)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATDynFillet*
<strong>CATDynCreateFillet</strong>(CATGeoFactory* iContainer,
                  CATBody* iPart,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATDynFillet*
<strong>CATCreateDynFillet</strong>(CATGeoFactory* iContainer,
                   CATTopData* iData,
                   CATBody* iPart)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATDynShell*
<strong>CATDynCreateShell</strong>(CATGeoFactory* iForResultingBody,
                  CATBody* iBody,
                  CATLength iInternal,
                  CATLength iExternal,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATDynShell*<strong>
CATCreateDynShell</strong>(CATGeoFactory * iFactory,
                  CATTopData * iTopData,
                  CATBody * iBody,
                  CATLength iInternal,
                  CATLength iExternal)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATDynSplit*<strong>
CATDynCreateSplit</strong>(CATGeoFactory* iFactory,
                  CATBody* iBody,
                  CATDynSplitType iSplitType,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATDynSplit*
<strong>CATCreateDynSplit</strong>(CATGeoFactory* iFactory,
                  CATTopData* iData,
                  CATBody* iBody,
                  CATDynSplitType iSplitType)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATThick::CATThick
          </strong>(CATBody* iBody,
           CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATDynThickness*
CATCreateDynThickness</strong>(CATGeoFactory* iContainer,
                      CATTopData* iTopData,
                      CATBody* iPart)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATDynTransformation*
<strong>CATDynCreateTransformation</strong>(CATGeoFactory* iFactory,
                           CATBody* iBodytoTransform,
                           CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATDynTransformation*
<strong>CATCreateDynTransformation</strong>(CATGeoFactory* iFactory,
                           CATTopData* iData,
                           CATBody* iBodytoTransform)</pre>
		</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>
		<pre>CATSkinExtrapol*
<strong>CATCreateSkinExtrapol</strong>(CATGeoFactory* iFactory,
                      CATTopData* iTopData,
                      CATBody * iSkin)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSkinOperator::CATSkinOperator</strong>(
      CATGeoFactory* iFactory,
      CATTopData* iData,
      CATSurface* iSurface)</pre>
		</td>
		<td>
		<pre>CATTopSkin*<strong>
CATCreateTopSkin</strong>(CATGeoFactory* iFactory,
                 CATTopData* iData,
                 CATSurface* iSurface,
                 const CATSurLimits* iLims)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSkinOperator::CATSkinOperator</strong>(
      CATGeoFactory* iFactory,
      int iNbPcurves,
      CATPCurve** iPcurves,
      CATCrvLimits* iLimits,
      short* iOrientations,
      CATBody* iTargetBody=NULL,
      CATBodyFreezeMode iBodyfreezemode,
      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopSkin*
<strong>CATCreateTopSkin</strong>(CATGeoFactory* iFactory,
                 CATTopData* iData,
                 CATSurface* iSurface,
                 int iNbPcurves,
                 CATPCurve** iPcurves,
                 CATCrvLimits* iLimits,
                 short* iOrientations)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSolidCuboid::CATSolidCuboid</strong>(
      CATGeoFactory* iFactory,
      const CATMathPoint&amp; iPt1,
      const CATMathPoint&amp; iPt2,
      const CATMathPoint&amp; iPt3,
      const CATMathPoint&amp; iPt4,
      CATCGMJournalList *iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATSolidCuboid*
CATCreateSolidCuboid</strong>(CATGeoFactory* iFactory,
                     CATTopData* iData,
                     const CATMathPoint&amp; iPt1,
                     const CATMathPoint&amp; iPt2,
                     const CATMathPoint&amp; iPt3,
                     const CATMathPoint&amp; iPt4)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSolidCylinder::CATSolidCylinder</strong>(
      CATGeoFactory* iFactory,
      const CATMathPoint&amp; iFirstPointOnAxis,
      const CATMathPoint&amp; iSecondPointOnAxis,
      const CATMathPoint&amp; iPointOnSurface,
      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATSolidCylinder*
CATCreateSolidCylinder</strong>(CATGeoFactory* iFactory,
                       CATTopData* iData,
                       const CATMathPoint&amp; iFirstPointOnAxis,
                       const CATMathPoint&amp; iSecondPointOnAxis,
                       const CATMathPoint&amp; iPointOnSurface)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSolidCylinder::CATSolidCylinder</strong>(
      CATGeoFactory* iFactory,
      const CATMathPoint&amp; iFirstPointOnAxis,
      const CATMathPoint&amp; iSecondPointOnAxis,
      double iRadius,
      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATSolidCylinder*
CATCreateSolidCylinder</strong>(CATGeoFactory* iFactory,
                       CATTopData* iData,
                       const CATMathPoint&amp; iFirstPointOnAxis,
                       const CATMathPoint&amp; iSecondPointOnAxis,
                       double iRadius)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSolidPyramid::
      CATSolidPyramid</strong>(CATGeoFactory* iFactory,
      const CATMathPoint&amp; iPt1,
      const CATMathPoint&amp; iPt2,
      const CATMathPoint&amp; iPt3,
      const CATMathPoint&amp; iTop,
      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATSolidPyramid*
CATCreateSolidPyramid</strong>(CATGeoFactory* iFactory,
                      CATTopData* iData,
                      const CATMathPoint&amp; iPt1,
                      const CATMathPoint&amp; iPt2,
                      const CATMathPoint&amp; iPt3,
                      const CATMathPoint&amp; iTop)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSolidPyramid::CATSolidPyramid</strong>(
      CATGeoFactory* iFactory,
      CATFace* iBase,
      const CATMathPoint&amp; iTop,
      CATCGMJournalList *iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATSolidPyramid*
CATCreateSolidPyramid</strong>(CATGeoFactory* iFactory,
                      CATTopData* iData,
                      CATFace* iBase,
                      const CATMathPoint&amp; iTop)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSolidSphere::CATSolidSphere</strong>(
      CATGeoFactory* iFactory,
      const CATMathPoint&amp; iCenter,
      double iRadius,
      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATSolidSphere*
CATCreateSolidSphere</strong>(CATGeoFactory* iFactory,
                     CATTopData* iData,
                     const CATMathPoint&amp; iCenter,
                     double iRadius)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATSolidTorus::CATSolidTorus</strong>(
      CATGeoFactory* iFactory,
      const CATMathAxis&amp; iAxis,
      const CATMathPoint&amp; iMajor,
      const CATMathPoint&amp; iMinor,
      CATCGMJournalList *iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATSolidTorus*
CATCreateSolidTorus</strong>(CATGeoFactory* iFactory,
                    CATTopData* iData,
                    const CATMathAxis&amp; iAxis,
                    const CATMathPoint&amp; iMajor,
                    const CATMathPoint&amp; iMinor)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATThick::CATThick</strong>(
      CATBody* iBody,
      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATDynThickness*
CATCreateDynThickness</strong>(CATGeoFactory* iFactory,
                      CATTopData* iTopData,
                      CATBody* iPart)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopCorner*
<strong>CreateTopOpCorner</strong>(CATGeoFactory* iFactory,
                  CATBody * iCurve1,
                  CATBody * iCurve2,
                  CATBody * iSupport,
                  double iRadius,
                  CATCGMJournalList* iJournalList)</pre>
		</td>
		<td>
		<pre>CATTopCorner*
<strong>CATCreateTopCorner</strong>(CATGeoFactory* iFactory,
                   CATTopData* iTopData,
                   CATBody* iCurve1,
                   CATBody* iCurve2,
                   CATBody* iSupport,
                   double iRadius)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopDevelop*
<strong>CreateTopOpDevelop</strong>(CATGeoFactory* iFactory,
                   CATBody* iWire,
                   CATBody* iWireSupport,
                   CATBody* iTargetSupport,
                   CATSurTo2DGlobalMapping* iMappingIn,
                   CATSurTo2DGlobalMapping* iMappingOut,
                   CATCGMJournalList *iReport)</pre>
		</td>
		<td>
		<pre>CATTopDevelop*
<strong>CATCreateTopDevelop</strong>(CATGeoFactory* iFactory,
                    CATTopData* iData,
                    CATBody* iWire,
                    CATBody* iWireSupport,
                    CATBody* iTargetSupport,
                    CATSurTo2DGlobalMapping* iMappingIn,
                    CATSurTo2DGlobalMapping* iMappingOut)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopParallel*
<strong>CreateTopOpAllParallel</strong>(CATGeoFactory* iFactory,
                       CATBody* iCurve,
                       CATBody* iSupport,
                       CATDistanceTool* iDistance,
                       CATCGMJournalList* iJournal,
                       CATLaw** iMappingLaws)</pre>
		</td>
		<td>
		<pre>CATTopParallel*
<strong>CATCreateTopParallel</strong>(CATGeoFactory* iFactory,
                     CATTopData* iData,
                     CATBody* iCurve,
                     CATBody* iSupport,
                     CATDistanceTool* iDistance)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopPrism*
<strong>CATTopCreatePrism</strong>(CATGeoFactory* iFactory,
                  CATBody* iProfileBody,
                  CATMathDirection* iDirection,
                  CATLength iStartOffset,
                  CATLength iEndOffset,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopPrism*
<strong>CATCreateTopPrism</strong>(CATGeoFactory* iFactory,
                  CATTopData* iData,
                  CATBody* iProfileBody,
                  CATMathDirection* iDirection,
                  CATLength iStartOffset,
                  CATLength iEndOffset)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopRevol*<strong>
CATTopCreateRevol</strong>(CATGeoFactory* iFactory,
                  CATBody* iProfile,
                  CATMathAxis* iAxis,
                  CATAngle iStartAngle,
                  CATAngle iEndAngle,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopRevol*<strong>
CATCreateTopRevol</strong>(CATGeoFactory* iFactory,
                  CATTopData* iData,
                  CATBody* iProfile,
                  CATMathAxis* iAxis,
                  CATAngle iStartAngle,
                  CATAngle iEndAngle)</pre>
		</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>
		<pre>CATTopSimplify*<strong>
CATCreateTopSimplify</strong>(CATGeoFactory* iFactory,
                     CATTopData* iData,
                    CATBody* iBodyToSimplify)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATVertexOperator::CATVertexOperator</strong>(
      CATGeoFactory* iFactory,
      CATPoint* iPoint,
      CATBody* iTargetBody=NULL,
      CATBodyFreezeMode iBodyfreezemode,
      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATTopVertex*
CATCreateTopVertex</strong>(CATGeoFactory* iFactory,
                   CATTopData* iData,
                   CATPoint* iPoint)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre><strong>CATWireOperator::CATWireOperator</strong>(
      CATGeoFactory* iFactory,
      int iNbCurves,
      CATCurve** iCurves,
      CATCrvLimits* iLimits,
      short* iOrientations,
      CATBody* iTargetBody=NULL,
      CATBodyFreezeMode iBodyfreezemode,
      CATCGMJournalList *iJournal)</pre>
		</td>
		<td>
		<pre><strong>CATTopWire*
CATCreateTopWire</strong>(CATGeoFactory* iFactory,
                 CATTopData* iData,
                 int iNbCurves,
                 CATCurve** iCurves,
                 CATCrvLimits* iLimits,
                 short* iOrientations)</pre>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="AdvancedTopologicalOpe"></a>AdvancedTopologicalOpe</h3>
<table class="fill">
	<tr>
		<th>Deprecated Signature</th>
		<th>New Signature</th>
	</tr>
	<tr>
		<td>
		<pre>CATThickenOp*
<strong>CATCreateThickenOp</strong>(CATGeoFactory* iFactory,
                   CATBody* iBody,
                   double iOffset1,
                   double iOffset2,
                   CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATThickenOp*
CATCreateThickenOp(CATGeoFactory* iFactory,
                   CATTopData* iTopData,
                   CATBody* iBody,
                   double iOffset1,
                   double iOffset2)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopologicalBlend*<strong>
CreateTopologicalBlend</strong>(CATGeoFactory* iFactory,
                       const CATBody* iWire1,
                       const CATBody* iWire2,
                       const CATBody* iSupport1,
                       const CATBody* iSupport2,
                       CATSkillValue iMode,
                       CATCGMJournalList* iJournal);</pre>
		</td>
		<td>
		<pre>CATTopologicalBlend*
<strong>CATCreateTopologicalBlend</strong>(CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          const CATBody* iWire1,
                          const CATBody* iWire2,
                          const CATBody* iSupport1,
                          const CATBody* iSupport2)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopologicalBlend*
<strong>CreateTopologicalBlend</strong>(CATGeoFactory* iFactory,
                       const CATBody* iWire1,
                       const CATBody* iWire2,
                       CATSkillValue iMode,
                       CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopologicalBlend*
<strong>CATCreateTopologicalBlend</strong>(CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          const CATBody* iWire,
                          const CATBody* iSupport )</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopologicalBlendCurve*<strong>
CreateTopologicalBlendCurve</strong>(CATGeoFactory* iFactory,
                            CATBody* iWire1,
                            CATBody* iWireParam1,
                            CATBody* iWire2,
                            CATBody* iWireParam2,
                            CATBody* iTargetBody,
                            CATBodyFreezeMode iMode,
                            CATCGMJournalList* iJournal,
                            CATSkillValue iMode)</pre>
		</td>
		<td>
		<pre>CATTopologicalBlendCurve*
<strong>CATCreateTopologicalBlendCurve</strong>(CATGeoFactory* iFactory,
                               CATTopData* iData,
                               CATBody* iWire1,
                               CATBody* iWireParam1,
                               CATBody* iWire2,
                               CATBody* iWireParam2)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopologicalFill*<strong>
CreateTopologicalFill</strong>(CATGeoFactory* iFactory,
                      const long iNumberOfWires,
                      const CATBody** iArrayOfWires,
                      CATSkillValue iMode,
                      CATCGMJournalList *iJournal)</pre>
		</td>
		<td>
		<pre>CATTopologicalFill*<strong>
CATCreateTopologicalFill</strong>(CATGeoFactory* iFactory,
                         CATTopData* iTopData,
                         const long iNumberOfWires,
                         const CATBody** iArrayOfWires,
                         CATSkillValue iMode)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopologicalFill*<strong>
CreateTopologicalFill</strong>(CATGeoFactory* iFactory,
                      const long iNumberOfWires,
                      const CATBody** iBodyWires,
                      const CATBody** iBodySupports,
                      CATSkillValue iMode,
                      CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopologicalFill*<strong>
CATCreateTopologicalFill</strong>(CATGeoFactory* iFactory,
                         CATTopData* iTopData,
                         const long iNumberOfWires,
                         const CATBody** iBodyWires,
                         const CATBody** iBodySupports,
                         CATSkillValue iMode)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopologicalFilletBlend*<strong>
CreateTopologicalFilletBlend</strong>(CATGeoFactory* iFactory,
                             const CATBody* iBodySupport1,
                             const CATBody* iBodySupport2,
                             long iOrientation1,
                             long iOrientation2,
                             double iRadius,
                             const CATDomain* iDomainSupport1,
                             const CATDomain* iDomainSupport2,
                             CATSkillValue iMode,
                             CATCGMJournalList* iReport)</pre>
		</td>
		<td>
		<pre>CATTopologicalFilletBlend*<strong>
CATCreateTopologicalFilletBlend</strong>(CATGeoFactory* iFactory,
                                CATTopData* iTopData,
                                const CATBody* iBodySupport1,
                                const CATBody* iBodySupport2,
                                long iOrientation1,
                                long iOrientation2,
                                double iRadius,
                                const CATDomain* iDomainSupport1,
                                const CATDomain* iDomainSupport2)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopologicalMatch*<strong>
CreateTopologicalMatch</strong>(CATGeoFactory* iFactory,
                       CATBody** iWire1,
                       CATBody** iWire2,
                       long iNbWires,
                       CATBody* iSupport1,
                       CATBody** iSupport2,
                       CATSkillValue iMode,
                       CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopologicalMatch*<strong>
CATCreateTopologicalMatch</strong>(CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          CATBody** iWire1,
                          CATBody** iWire2,
                          long iNbWires,
                          CATBody* iSupport1,
                          CATBody** iSupport2,
                          CATSkillValue iMode)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopologicalMatch*<strong>
CreateTopologicalMatchBoth</strong>(CATGeoFactory* iFactory,
                           CATBody* iWire1,
                           CATBody* iWire2,
                           CATBody* iSupport1,
                           CATBody* iSupport2,
                           CATSkillValue iMode,
                           CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopologicalMatch*<strong>
CATCreateTopologicalMatchBoth</strong>(CATGeoFactory* iFactory,
                              CATTopData* iTopData,
                              CATBody* iWire1,
                              CATBody* iWire2,
                              CATBody* iSupport1,
                              CATBody* iSupport2,
                              CATSkillValue iMode)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopSweep*<strong>
CATTopCreateSweep</strong>(CATGeoFactory* iGeoFactory,
                  CATBody* iCenterBody,
                  CATGeometry* iCenterSupport,
                  CATBody* iSpineBody,
                  CATBody* iProfile,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopSweep*
<strong>CATCreateTopSweep</strong>(CATGeoFactory* iGeoFactory,
                  CATTopData* iData,
                  CATBody* iCenterBody,
                  CATGeometry* iCenterSupport,
                  CATBody* iSpineBody,
                  CATBody* iProfile)</pre>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="BasicTopologicalOpe"></a>BasicTopologicalOpe</h3>
<table class="fill">
	<tr>
		<th>Deprecated Signature</th>
		<th>New Signature</th>
	</tr>
	<tr>
		<td>
		<pre>CATTopHelixOperator*<strong>
CATCreateTopHelixOperator</strong>(CATGeoFactory* iFactory,
                          CATBody* iHelixAxis,
                          long iHelixAxisOrientation,
                          CATBody* iHelixOrigin,
                          CATAngle iStartAngle,
                          CATAngle iEndAngle,
                          CATLength iPitch,
                          long iTrigoOrientation,
                          CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopHelixOperator*
CATCreateTopHelixOperator(CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          CATBody* iHelixAxis,
                          long iHelixAxisOrientation,
                          CATBody* iHelixOrigin,
                          CATAngle iStartAngle,
                          CATAngle iEndAngle,
                          CATLength iPitch,
                          long iTrigoOrientation)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopSweep*<strong>
CATTopCreateSweep</strong>(CATGeoFactory* iFactory,
                  CATBody* iCenterBody,
                  CATGeometry* iCenterSupport,
                  CATBody* iSpineBody,
                  CATBody* iProfile,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopLineOperator*
CATCreateTopLineOperatorNormalToShell(
                          CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          CATBody* iOriginPoint,
                          CATBody* iShellOfPoint,
                          double iLength)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopLineOperator*
<strong>CATCreateTopLineOperatorAngledTangentToWire</strong>(
                  CATGeoFactory* iFactory,
                  CATBody* iOriginPoint,
                  CATBody* iCurve,
                  CATBody* iShellOfCurve,
                  double iLength,
                  CATAngle iAngle,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopLineOperator*
CATCreateTopLineOperatorAngledTangentToWire(
                          CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          CATBody* iOriginPoint,
                          CATBody* iCurve,
                          CATBody* iShellOfCurve,
                          double iLength,
                          CATAngle iAngle)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopLineOperator*
<strong>CATCreateTopLineOperatorTangentToWire</strong>(
                  CATGeoFactory* iFactory,
                  CATBody* iOriginPoint,
                  CATBody* iCurve,
                  double iLength,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopLineOperator*
CATCreateTopLineOperatorTangentToWire(
                          CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          CATBody* iOriginPoint,
                          CATBody* iCurve,
                          double iLength)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopLineOperator*
<strong>CATCreateTopLineOperatorFromDirection</strong>(
                  CATGeoFactory* iFactory,
                  CATBody* iOriginPoint,
                  const CATMathVector&amp; iDirection,
                  double iLength,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopLineOperator*
CATCreateTopLineOperatorFromDirection(
                          CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          CATBody* iOriginPoint,
                          const CATMathVector&amp; iDirection,
                          double iLength)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopLineOperator*
<strong>CATCreateTopLineOperatorFromPoints</strong>(
                  CATGeoFactory* iFactory,
                  CATBody* iOriginPoint,
                  CATBody* iSecondPoint,
                  CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopLineOperator*
CATCreateTopLineOperatorFromPoints(
                          CATGeoFactory* iFactory,
                          CATTopData* iTopData,
                          CATBody* iOriginPoint,
                          CATBody* iSecondPoint)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopPointOperator*
<strong>CATCreateTopPointOperator</strong>(CATGeoFactory * iFactory,
                          CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopPointOperator*
CATCreateTopPointOperator(CATGeoFactory* iFactory,
                          CATTopData* iTopData)</pre>
		</td>
	</tr>
	<tr>
		<td>
		<pre>CATTopSplineOperator*<strong>
CATCreateTopSplineOperator</strong>(CATGeoFactory* iFactory,
                           long iNbpts,
                           CATBody** iListOfPoints,
                           const CATMathVector* iTangents,
                           const CATMathVector* iCurvatures,
                           const long* iImposition,
                           CATCGMJournalList* iJournal)</pre>
		</td>
		<td>
		<pre>CATTopSplineOperator*
CATCreateTopSplineOperator(CATGeoFactory* iFactory,
                           CATTopData* iTopData,
                           long iNbpts,
                           CATBody** iListOfPoints,
                           const CATMathVector* iTangents,
                           const CATMathVector* iCurvatures,
                           const long* iImposition)</pre>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Case of the Journal"></a>Case of the Journal</h3>
<p>If you directly create a CATCGMJournalList, you must now give the software configuration 
that must be use.</p>
<table class="fill">
	<tr>
		<th>Deprecated Signature</th>
		<th>New Signature</th>
	</tr>
	<tr>
		<td>
		<pre>CATCGMJournalList::CATCGMJournalList
       (CATCGMJournalList* ioList)</pre>
		</td>
		<td>
		<pre>CATCGMJournalList::CATCGMJournalList
      (CATSoftwareConfiguration* iConfig,
       CATCGMJournalList* ioList)</pre>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<ul>
	<li>The versioning allows an operator to be replayed with a special software 
	configuration. The software configuration is given to the operator by the mean 
	of a CATTopData instance.</li>
	<li>This enhancement leads to interface modifications, and the correspondence 
	of the deprecated and new methods is given.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAACgmTaTopJournal.htm">Understanding the CGM Journal</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAACgmUcTopOverview.htm">Overview of 
		the Topological Operators</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Oct 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
