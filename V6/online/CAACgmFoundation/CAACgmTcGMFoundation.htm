<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocCommon.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocTree.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocDynLinks.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>GM Foundation</title>
</head>

<body onload="createToc2();highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1 id="title"><a name="hj-top"></a>GM Foundation</h1>
		</td>
	</tr>
</table>
<table class="DocThemeIntro" id="DocThemeIntro">
	<tr>
		<td id="intro" class="Intro1">
		<p class="header">The Geometric Modeler Foundation provides the basic mathematical 
		classes (such as planes, 2D/3D vectors, 2D/3D points, 2D/3D matrices) and 
		their associated usual behavior: for example, the norm of a vector, the 
		determinant, the trace or the inverse of a matrix.</p>
		<p class="header">These mathematical classes are concrete (as opposed to 
		the interfaces), and are optimized to give the best performance. Their instances 
		cannot be streamed. In fact, they are not dedicated to be stored but only 
		to be used in a transient way.</p>
		<p class="header">The mathematical classes use the operators (+, *, ^), 
		when this makes sense: hence, you can add two vectors with the <em>+</em> 
		operator, or define a vector by subtracting a point to another one.</p>
		<p class="header">The methods of the mathematical classes always consider 
		that their outputs are allocated by the caller: in that way, the caller 
		completely manages the memory, and can optimize its use. Now, following 
		the CAA naming conventions of the arguments, all their arguments must be 
		named with the <em>i</em> prefix, even the outputs (resource allocated and 
		de-allocated by the caller). This is not very significant for distinguishing 
		which is really modified. Hence, the &quot;output&quot; arguments are denoted with 
		an <em>io</em> prefix.</p>
		<hr class="header" /></td>
	</tr>
	<tr>
		<td class="Intro2"><span class="run-in">In this section:</span>
		<div id="toc">
		</div>
<!--
		<ul class="toc">
			<li><a href="CAACgmUcMthBase.htm">Using the Mathematical Classes</a> is an 
			example that manipulates basic classes representing points, vectors, 
			lines, axes, and transformations.</li>
			<li><a href="CAACgmQrMthConstant.htm">The Mathematical Constants</a> describes 
			the constants you can use and their associated values.</li>
		</ul>
-->
		</td>
	</tr>
<!--
	<tr>
		<td class="Intro2"><span class="run-in">Also in this section, the framework 
		API reference:</span>
		<ul class="toc">
			<li>
			<a href="#" onclick="javascript:CAAlink('CPP', 'Mathematics');return false;">
			Mathematics</a> is the framework that contains the mathematical classes.</li>
		</ul>
		</td>
	</tr>
-->
</table>

</body>

</html>
