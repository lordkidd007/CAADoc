<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Geometric Modeler Overview</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Geometric Modeler Overview</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article presents the main features of the Geometric Modeler, in 
		term of objectives, architecture, functionality and openness.</p>
		<ul>
			<li><a href="#CGM Objectives">GM Objectives</a></li>
			<li><a href="#Architecture">GM Architecture</a>
			<ul>
				<li><a href="#Components">GM Frameworks</a></li>
				<li><a href="#Scalability">Scalability</a></li>
				<li><a href="#Opening">Openness</a></li>
				<li><a href="#Integration">Integration in the General V6 Offering</a></li>
			</ul>
			</li>
			<li><a href="#Functionalities">GM Functionality</a>
			<ul>
				<li><a href="#Modeler">The Geometric and Topological Modeler</a></li>
				<li><a href="#Application">Building an Application</a></li>
			</ul>
			</li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="CGM Objectives"></a>GM Objectives</h2>
<p>The Geometric Modeler (GM) is a complete software package for the development 
of applications with a need for 3D geometric modeling capabilities, and which want 
to take advantage of the power of this modeler and its solid, surfacing and wireframe 
capabilities.</p>
<p>Provided as a set of object oriented programming resources, it is composed of 
a full set of high level geometric primitives, operations and queries, as well as 
interfaces dedicated to the integration with other parts of an application such 
as viewers, dialog monitors and data managers.</p>
<p>Designed in accordance to the major standards and the most recent design patterns, 
it allows the best interoperability with other software components, a great potential 
of growth and a possible customization.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Architecture"></a>GM Architecture</h2>
<p>The GM modeler is delivered as a set of specialized components made up of frameworks 
that are built on top of each other. They can be used integrated with other V6 applications.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Components"></a>GM Frameworks</h3>
<p>The GM frameworks are gathered into four CAA components. Each framework provides 
either the application, or other frameworks with a set of consistent services. The 
different frameworks cooperate to provide the application with high level services. 
The hierarchy between the frameworks allows an application which would like to only 
use a subset of the GM to minimize the size of its prerequisites.</p>
<table>
	<caption>Fig. 1: The CGM Architecture</caption>
	<tr>
		<td>
		<img alt="CGM Architecture" src="images/CAACgmMthOverviewP2.gif" width="369" height="460"></td>
		<td>This figure represents the tree of prerequisites and exposed services 
		of the frameworks. For example, GeometricObjects uses as prerequisites some 
		AdvancedMathematics exposed services.<br>
		Only direct arrows are drawn to simplify the figure. Hence, GeometricObjects 
		also uses Mathematics exposed services.
		<p>Presented as a complete geometric and topological package, the GM modeler 
		can be used to develop powerful applications for building and operating 
		complex geometry.</p>
		</td>
	</tr>
</table>
<dl>
	<dt>Mathematics</dt>
	<dd>Defines <strong>basic mathematical objects</strong>: points, vectors, lines, 
	planes, axis, matrices and transformations. It is used by the frameworks of 
	the GM offering, and provide basic mathematical services to many other applications.</dd>
	<dt>CATMathStream</dt>
	<dd>Defines services to read and stream GM objects. It is used by the frameworks 
	of the GM offering, and provide basic mathematical services to many other applications.</dd>
	<dt>AdvancedMathematics</dt>
	<dd>Offers a set of specific mathematical objects, such as N-dimensional intervals, NxM matrices, mathematical functions and systems of 1 or 2 variables, implicit 
	systems, and associated operations, dedicated to applications which need to 
	perform<strong> intensive mathematical computations</strong>. The Mathematics 
	and AdvancedMathematics objects are not persistent; they are used as intermediates 
	by the other GM frameworks.</dd>
	<dt>GeometricObjects</dt>
	<dd>Provides the application with:<ul>
		<li>An extensive set of <strong>basic geometric primitives</strong>, such 
		as lines, conics, NURBS curves and surfaces, fillet surfaces.</li>
		<li>General mechanisms of <strong>the object management</strong>: creation 
		and delete of a set containing the GM objects, object creation and removal, 
		object checking, stream (conversion of the objects in memory into a sequence 
		of bytes to be later stored on a given media) and unstream, read and write 
		on disk, persistent references.</li>
	</ul>
	<p>The geometric objects are used to define the supporting geometry for higher 
	level objects, such as topological objects for instance. The C2 continuity is 
	assumed for all geometric object.</p>
	</dd>
	<dt>GMModelInterfaces</dt>
	<dd>
	<ul>
		<li>Defines the geometric modeler kernel.</li>
		<li>Provides tools to extract representations of the geometry and topology 
		modeled with the GM frameworks:
		<ul>
			<li>Polylines.</li>
			<li>Triangular mesh.</li>
			<li>Outlines.</li>
		</ul>
		<p>These tools are dedicated to display applications (such as wireframe, 
		shaded or hidden line removal visualizations).</p>
		</li>
		<li>Defines all manifold and non-manifold <strong>topological objects</strong>. 
		A topological object provides a full boundary representation by explicit 
		definition of its boundaries.</li>
		<li>Provides services to perform measures and different kinds of analysis 
		on GM objects.</li>
	</ul>
	</dd>
	<dt>GMOperatorsInterfaces</dt>
	<dd>
	<ul>
		<li>Provides the <strong>operators acting on topological objects</strong>: 
		Boolean, sweep, fillet, draft, thickness operations. </li>
	</ul>
	</dd>
</dl>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Scalability"></a>Scalability</h3>
<p>GM offers a large scale of use:</p>
<ul>
	<li>The first level allows<strong> </strong>you<strong> to consult the geometric 
	and topological objects</strong> that are already built. This level corresponds 
	to the need of applications such as numerical control, finite element analysis, 
	or data transfer to STEP or IGES format.</li>
	<li>At a second level, GM provides resources <strong>to create geometric and 
	topological objects</strong> for applications such as mechanical part design.</li>
	<li>At the most specialized level, the GM core is enhanced by <strong>applications</strong> 
	(such as free form or geodesic applications) <strong>providing powerful tools 
	for building and operating complex surfaces</strong>.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Opening"></a>Openness</h3>
<p>The architecture of the GM modeler is designed to be open. Hence, if an application 
programmer wants to put additional information on existing objects, attributes are 
provided. Moreover, a mechanism is provided to define foreign surfaces or curves 
and use them as any GM surface or curve.</p>
<dl>
	<dt>Attributes</dt>
	<dd>The GM allows an application developer to associate typed data with geometric 
	or topological objects, without creating a new class. This additional data is 
	called a GM attribute. The attributes can be streamed. They are very useful 
	to store temporary data produced by an algorithm, such as, for example:
	<ul>
		<li>Stamps on objects during model scans.</li>
		<li>Processed data relative to an object: extraction of the meshing.</li>
	</ul>
	</dd>
	<dt>Defining a foreign geometry</dt>
	<dd>The GM allows an application programmer to introduce his own class of curve 
	or surface A generic development frame is provided, to fully integrate the foreign 
	class in the general GM architecture, and uses the foreign class instances as 
	any GM curve or surface instances.</dd>
	<dt>Defining a new operator</dt>
	<dd>In matter of operators, the application programmer can define a new operator 
	by creating a new class.</dd>
</dl>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Integration"></a>Integration in the General V6 Offering</h3>
<p>The GM modeler can be used stand-alone or as a component of the general V6 
offering.</p>
<p>The GM objects are created inside a GM container, which is a set of GM objects. 
This container must be complete: when a GM object is inside the container, all the 
GM objects that are referred by it must also be inside the same container.</p>
<p>In particular, topological and geometric operators work on objects of a same 
container: the input and output objects must belong to the same container.</p>
<p>To store the GM container, the application puts it in its own document.</p>
<p>Applications which are not owner of any document, but want to store their data, 
can use a .NCGM document, delivered by the V6 offering.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Functionalities"></a>GM Functionality</h2>
<p>The GM provides a geometric and topological modeler and general mechanisms to 
interact with this modeler.</p>
<h3><a name="Modeler"></a>A Geometric and Topological Modeler</h3>
<p>The <strong>geometric part of the modeler</strong> allows the user to create 
and use <strong>an extensive set of geometric primitives</strong>:</p>
<ul>
	<li>Point, point on curve, point on surface.</li>
	<li>Curves: line, circle, conic, spline curve, NURBS curve.</li>
	<li>Curves on surface: line, circle, conic, spline curve, NURBS curve lying 
	on a surface.</li>
	<li>Surfaces: plane, cone, sphere, torus, cylinder, NURBS surface, revolution 
	surface, ruled surface, offset surface, fillet surface, draft surface, chamfer 
	surface.</li>
</ul>
<p>These geometric objects must be C2 continuous.</p>
<p>The provided <strong>geometric operations</strong> are:</p>
<ul>
	<li>Intersection of two curves, a curve and a surface, two surfaces.</li>
	<li>Projection of a point on a curve or a surface, of a curve on a surface.</li>
	<li>Reflect lines.</li>
	<li>Connection between two surfaces.</li>
	<li>Determination of the minimum distance between two curves, a curve and a 
	surface, a point and a curve, a point and a surface, two surfaces.</li>
	<li>Search of the confusion between 2 curves, two points on curve, two points 
	on surface.</li>
	<li>Search of the inclusion of a point in a curve or a surface, a curve in another 
	curve or a surface.</li>
	<li>Local analysis at a point of a curve or a surface.</li>
</ul>
<p>The <strong>topological part of the modeler</strong> defines an object from its
<strong>boundary representation</strong>: <em>vertice</em>s bound <em>edges</em>, 
that bound <em>faces</em>, that bound <em>volumes</em>. The highest level of topological 
objects is called a<em> body</em>.</p>
<ul>
	<li>1D-bodies represent wire objects.</li>
	<li>2D-bodies represent shell objects.</li>
	<li>3D-bodies represent solid objects.</li>
	<li>Bodies of mixed dimensions, leading to a case of <em>non-manifold</em> bodies, 
	can also be represented, as well as any kind of manifold and non-manifold configurations.</li>
</ul>
<p>The topological modeler is based on the <strong>cell complexes theory</strong> 
(see Rossignac and O&#39;Connor [<a href="#References">1</a>]). This approach presents 
a lot of advantages such as:</p>
<ul>
	<li>To manage all the dimensions in a unified way.</li>
	<li>To handle all cases of manifold and non-manifold bodies.</li>
</ul>
<p>The topological operations build new bodies. The following operators are provided:</p>
<ul>
	<li>Boolean operations: union, intersection, subtract.</li>
	<li>Transformation.</li>
	<li>Draft operation.</li>
	<li>Fillet operation.</li>
	<li>Chamfer operation.</li>
	<li>Shell operation.</li>
	<li>Sweep operation.</li>
	<li>Thickness operation.</li>
	<li>Split operation.</li>
	<li>Reflect operation.</li>
	<li>Creation of prism.</li>
	<li>Creation of revolute.</li>
	<li>Intersection with a curve or a surface.</li>
</ul>
<p>Moreover, GM contains advanced topological operators for surface modeling, especially 
powerful for body in white or surface styling applications:</p>
<ul>
	<li>Sweep with one or more profiles, along a spine or between two rails, with 
	various laws of angle or radius definition.</li>
	<li>Blend with a G1 or G2 joining, fillet blend.</li>
	<li>Topological extrapolation.</li>
	<li>Loft with various mixing laws.</li>
	<li>Match of a face to be in G0, G1 or G2 continuity with another one.</li>
	<li>Fitting of a face on a set of geometries.</li>
</ul>
<p>The topological modeler implements the <strong>smart concept</strong>:</p>
<ul>
	<li>Once accepted, a body is never modified: the body is called <em>frozen</em>.</li>
	<li>Bodies are allowed to share geometry and topology.<br>
	Hence, a topological operation does not modify a body; it creates a new resulting 
	body, that potentially shares geometry or topology with the initial one.</li>
</ul>
<p>The steps leading to a new topological body can be written in a <strong>topological 
journal</strong>. This information, depending on each operator, is temporary and 
helps the GM programmer to follow the objects modifications. This capability provides 
the key mechanisms that are used by applications (such as the mechanical modeler) 
to implement a full feature modeling approach.</p>
<p><strong>What About Units?</strong><br>
The unit of the container is the millimeter. Moreover, the maximum size of an object, 
called <em>model size</em>, is given by the container. Its value is fixed to 1km 
(10^5mm=100m before R14). This determines the <em>resolution</em> of the model or 
minimum size of valid objects. This size is 10^-3mm. The angle unit is the radian.</p>
<p><strong>...and Tolerant Modeling?:</strong><br>
The objects are built as hermetic as possible, that is to say, with the as small 
as possible gap.<br>
The resolution (0.001mm) defines the minimum size of the valid objects. In particular, this 
defines the criterion of geometric coincidence. But the mathematical computations 
(such as intersection, projection) work at a numerical tolerance, which is much 
more precise.</p>
<p>Gaps in imported data can affect the behavior of operators:</p>
<ol>
				<li>Operators should mandatorily complete on models with gaps &lt; 
				0.001mm. Incidents, if any, should be reported. This gap value 
				must be considered as a validity criterion.</li>
				<li>Beyond this <em>valid gap</em> and up to 0.1 mm, the 
				robustness and performance of operators can be impeded. However, 
				developments can possibly be carried out in order to suit the 
				requirements of a tolerant modeler and widen the scope of data 
				the geometric modeler can import.</li>
				<li>The successful completion of operators is not mandatory for 
				gaps &gt; 0.1 mm, but some operators handle properly models with 
				such gaps.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Application"></a>Building an Application</h3>
<p>The GM provides as a separate software component a set of classes and methods 
for the creation and use of geometric and topological objects such as to operate 
them, analyze their geometric properties, modify their definition or update them.</p>
<p>All the GM objects can be used by viewers or dialog monitors, defining a wide 
range of applications. We describe now some general mechanisms for interacting with 
the GM modeler.</p>
<dl>
	<dt>Subscript/Subscribe</dt>
	<dd>This mechanism allows an application to subscribe to a modification of the 
	GM objects. The application is then informed as soon as a modification occurs, 
	and can launch specific treatments. The refresh of the visualization after the 
	modification of an object is an example of use of such functionality.</dd>
	<dt>Undo/Redo</dt>
	<dd>Using the smart mechanism, <em>undo</em> actions can be put in place on 
	the topological objects. An <em>undo</em> action restore the model in the state 
	it was at the last stamp. A <em>redo</em> action cancel the previous <em>undo</em> 
	action.</dd>
	<dt>Streaming and unstreaming</dt>
	<dd>In order to be saved on disk or to be included inside another file, the 
	GM objects are able to be converted in a sequence of bytes (this operation is 
	called <em>streaming</em>); conversely, such sequence of bytes can be transformed 
	into a GM model (<em>unstreaming</em>).</dd>
</dl>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<ul>
	<li>GM addresses the geometric and topological modeling with a large scale of 
	use.</li>
	<li>GM provides a set of unified interfaces for the use of geometric and topological 
	objects and operations.</li>
	<li>GM offers the capability to define own object and operator classes.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>Rossignac J. , O&#39;Connor M.:<br>
		SGC: A dimension independent model for point sets with internal structures 
		and incomplete boundaries.<br>
		Geometric modeling for product engineering. Eds M. Wosny, J. Turner, K. 
		Preiss,<br>
		North Holland pp. 145--180 (1989).</td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAACgmModel/CAACgmTaGobGeoObjects.htm'); return false;">
		The Objects of CATIA Geometric Modeler</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAACgmModel/CAACgmTaGobCurves.htm'); return false;">
		The Curves of CATIA Geometric Modeler</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAACgmModel/CAACgmTaGobSurfaces.htm'); return false;">
		The Surfaces of CATIA Geometric Modeler</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAACgmModel/CAACgmTaGobAttribute.htm'); return false;">
		The Management of Foreign Data</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAACgmModel/CAACgmTaTobTopoConcepts.htm'); return false;">
		Topology Concepts</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAACgmModel/CAACgmTaTobTopoModel.htm'); return false;">
		The CGM Topological Model</a></td>
	</tr>
</table>
<!-- ------------------------------comment---------------------------------- -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Feb 2007]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
