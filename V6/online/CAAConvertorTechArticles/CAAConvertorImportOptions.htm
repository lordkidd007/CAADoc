<html xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>IMPORT Options</title>
 <script language="JavaScript" src="../CAADocJavaScript/submit.js"></script>

</head>

<body>
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1>MultiCAD Convertors: IMPORT Options</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Technical Article&nbsp;</td>
	</tr>
</table>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td >
      <h2><a name="Top"></a>Abstract</h2>
		<p>This article describes how to manage the conversion options using the Format Conversion Services APIs</p>
	</td>
  </tr>
  
  </table>

<!---------------------------------comment------------------------------------->

<script type="text/javascript">insertLinkToTop();</script>

<p>The applicative options are dedicated to tune the input document(s) and output document(s), and potentially all sub-classes instantiated below.
Options are defined as couple of strings, for name and value.
This is to keep a simple mechanism and allow an easy dynamic extensibility of the options support in the platform:  there is no build impact in adding a new notion to support thru options.</p>

<script type="text/javascript">insertLinkToTop();</script>

<p>&nbsp;</p>
<p><strong>Rule</strong>: Every time an option is added in the specification, the current behavior of all connectors at the time the option was not defined must be preserved.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This behavior is chosen as the default.
Most of the options are documented in the header XCADOptions in the CAA framework DataExchangeKernelItf.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; See this file for options details and default values.</p>


<p>&nbsp;</p>
<p><strong>Warning:</strong> Don&#8217;t do anything &#8220;options dependent&#8221; in the input or output documents&#8217; Initialize(&#8230;) methods, as options are not already set at this step.<br>
The application must collect the different options and call SetConversionOptions(&#8230;) on the output document before calling the Import(&#8230;) method.<br>
The output document interprets the options : some of them are processed directly by the output document, the others are given individually to the input document thanks to the SetOption() method at the beginning of the Import(&#8230;).<br>
The output document stores the return values indicating if the input document supports the option or not. (the output document may then adapt its behavior to fulfill the application requirements anyway, depending on its capabilities).<br>
The application shall not call directly to CATIExchangeInputDocument::SetOption(&#8230;) method. This is the job of the output document to propagate the options</p>
<p>&nbsp;</p>
<table>
	<caption>Fig.1: This diagram shows how options are implemented through 
	interface methods.</caption>
	<tr>
		<td>
		<img alt="" src="images/CAAImportOptions.jpg" width="861" height="440"></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>

<!---------------------------------comment------------------------------------->
<p>&nbsp;</p>
<h2><a name="History"></a>History </h2> <table><tr>
    <td valign="top"><strong>Version</strong>: [Jan 2014]</td>
    <td valign="top">Document created</tr>
  <tr>
<script type="text/javascript">insertLinkToTop();</script>
  </tr>
</table>

<!---------------------------------comment------------------------------------->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>


