<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Web Services and WSDL Definitions</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Web Services and WSDL Definitions</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>WSDL documents are used to describe Web services. This
		article introduces the WSDL 1.1 specification, and explains how its
		related concepts are used in the context of Web services.</p>
		<ul>
			<li><a href="#1">Web Services and WSDL Definitions</a>
			<ul>
				<li><a href="#11">WSDL 1.1 Specification</a></li>
				<li><a href="#12">WSDL 1.1 SOAP Binding Extension</a></li>
				<li><a href="#13">WS-I Compliance</a></li>
			</ul>
			</li>
			<li><a href="#2">WSDL Interface Documents</a></li>
			<li><a href="#3">WSDL Implementation Documents</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="1"></a>Web Services and WSDL Definitions</h2>
<p>Web services are software systems, which can be accessed through
messages conveyed by standard Internet protocols. The functionalities
that these systems deliver are described in a platform and language
neutral-way using an XML language called <strong> WSDL (Web Services
Description Language)</strong>. Using this abstract WSDL definition, developers
can use off-the-shelf tools to generate a client proxy for their
platform and programming language. This client proxy will know how to
craft the correct messages and send them to the target software system.
This mechanism enables the integration of heterogeneous systems.</p>
<p>V6 Web services respect this standard and provide their
descriptions in WSDL form. This section gives an overview of the <strong>WSDL
1.1 specification</strong>, and then provides more information on the format of
the exchanged messages through the description of the <strong>WSDL 1.1
SOAP (Simple Object Access Protocol) binding extension</strong>. Finally, it
describes the <strong>WS-I (Web Services Interoperability) Basic Profile
1.0</strong>, a set of additional rules to improve the interoperability provided
by WSDL and SOAP.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="11"></a>WSDL 1.1 Specification</h3>
<p>A WSDL document defines the contract between a Web service
provider and a Web service consumer. The XML language defined in the
WSDL 1.1 specification [<a href="#References">1</a>] uses the following
elements to describe a Web service:</p>
<ul>
	<li><code><strong>&lt;wsdl:type&gt;</strong></code>: description of the data
	types exposed, most of the time using <strong>XSD (XML Schema
	Definition)</strong>.</li>
	<li><code><strong>&lt;wsdl:message&gt;</strong></code> and <code><strong>&lt;wsdl:part&gt;</strong></code>:
	description of the messages that can be exchanged, including references
	to the types defined in the above section.</li>
	<li><code><strong>&lt;wsdl:portType&gt;</strong></code> and <code><strong>&lt;wsdl:operation&gt;</strong></code>:
	a portType contains an abstract set of supported operations, along with
	references to the messages involved within each operation.</li>
	<li><code><strong>&lt;wsdl:binding&gt;</strong></code>: message format and
	protocol specific information for the operations defined in a portType.</li>
	<li><code><strong>&lt;wsdl:service&gt;</strong></code> and <code><strong>&lt;wsdl:port&gt;</strong></code>:
	a service is defined by a set of ports. Each port provides a single
	endpoint for a given binding.</li>
</ul>
<p>Even if all of these elements may be found in a single WSDL
document, it is common to have them separated in two different
locations:</p>
<ul>
	<li>A <strong>WSDL interface document</strong>: describes an
	&quot;abstract&quot; interface of a Web service.</li>
	<li>A <strong>WSDL implementation document</strong>: describes a
	&quot;concrete&quot; (i.e. deployed) implementation of a Web service.
	It contains a reference to the WSDL interface document describing the
	implemented interface.</li>
</ul>
<table>
	<caption><a name="Fig1"></a>Fig.1: Relationship Between WSDL
	Interface and Implementation Documents</caption>
	<tr>
		<td><img src="images/CAAWSWSDLDefinitions_Fig1.png" alt="Relationship Between WSDL Interface and Implementation Documents"/></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="12"></a>WSDL 1.1 SOAP Binding Extension</h3>
<p>The WSDL 1.1 specification includes an extension to describe Web
services that can be consumed using the <strong>SOAP 1.1</strong> protocol [<a
href="#References">1</a>]. Such Web services can be remotely invoked by
sending SOAP messages (XML content) embedded inside HTTP POST requests.
In a WSDL document, the SOAP protocol specific information are based on
the following elements:</p>
<ul>
	<li><code><strong>&lt;soap:binding&gt;</strong></code>: specifies that a
	given binding is bound to the SOAP 1.1 protocol.</li>
	<li><code><strong>&lt;soap:operation&gt;</strong></code>, <code><strong>&lt;soap:body&gt;</strong></code>
	and <code><strong>&lt;soap:fault&gt;</strong></code>: describe the format of the
	SOAP messages.</li>
	<li><code><strong>&lt;soap:address&gt;</strong></code>: provides the value
	of the SOAP endpoint URI, where HTTP POST SOAP requests must be sent in
	order to consume the given Web service.</li>
</ul>
<p>The <code>&lt;soap:binding&gt;</code> and <code>&lt;soap:operation&gt;</code>
elements include a <code><strong>style</strong></code> attribute which is used to
differentiate two styles of SOAP messages that can be exchanged on the
wire:</p>
<ul>
	<li><strong>RPC</strong>: the message format must conform to some specific
	rules outside of the WSDL definition alone (see section &quot;<em>3.5
	soap:body</em>&quot; of the WSDL 1.1 specification for a precise description
	of these rules).</li>
	<li><strong>Document</strong>: there is no underlying specific formatting
	rule, the message format must simply conform to the schemas described
	in the WSDL definition (most of the time it uses XML schema
	definitions).</li>
</ul>
<p>The <code>&lt;soap:body&gt;</code> element includes a <code><strong>use</strong></code>
attribute which is used to specify the type of SOAP serialization:</p>
<ul>
	<li><strong>Encoded</strong>: data types (such as objects, structures or
	arrays) must be encoded within the SOAP messages according to the rules
	defined in section &quot;<em>5. SOAP Encoding</em>&quot; of the SOAP
	1.1 specification.</li>
	<li><strong>Literal</strong>: messages (including data types) are serialized
	according to the schema definitions available in the WSDL document.</li>
</ul>
<p>In the end, there are four combinations available: <code>rpc/encoded</code>,
<code>rpc/literal</code>, <code>document/encoded</code>, <code>document/literal</code>.
The following describes where these elements are defined inside WSDL
documents:</p>
<pre class="code">&lt;wsdl:definitions .... &gt;
 &lt;wsdl:binding .... &gt;
  &lt;<strong>soap:binding style=&quot;rpc|document&quot; ... /</strong>&gt;
  &lt;wsdl:operation .... &gt;
   &lt;<strong>soap:operation style=&quot;rpc|document&quot; ... </strong>/&gt;
   &lt;wsdl:input&gt;
    &lt;<strong>soap:body use=&quot;literal|encoded&quot; ... </strong>/&gt;
   &lt;/wsdl:input&gt;
   &lt;wsdl:output&gt;
    &lt;<strong>soap:body use=&quot;literal|encoded&quot; ... </strong>/&gt;
   &lt;/wsdl:output&gt;
   &lt;wsdl:fault&gt;
    &lt;<strong>soap:fault use=&quot;literal|encoded&quot; ... </strong>/&gt;
   &lt;/wsdl:fault&gt;
  &lt;/wsdl:operation&gt;
 &lt;/wsdl:binding&gt;
&lt;/wsdl:definitions&gt;</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="13"></a>WS-I Compliance</h3>
<p>V6 Web services are WS-I compliant and conform to the WS-I Basic
Profile 1.0 [<a href="#References">1</a>]. A Basic Profile consists of a
set of Web services related specifications grouped together, such as the
ones published by the <strong>W3C</strong> (World Wide Web Consortium) and the <strong>UDDI.org</strong>
(Universal Description, Discovery and Integration) organizations. The
Basic Profile 1.0 refers to the following specification levels: SOAP
1.1, XML 1.0, HTTP/1.1, WSDL 1.1, XML Schema 1.0 and UDDI v2.0. It also
contains clarifications and specific requirements that are intended to
enhance these specifications. The aim is to maximize interoperability
between implementers of the Basic Profile requirements. As the Basic
Profile 1.0 states itself, there can be no 100% guarantee of
interoperability. Despite this consideration, the WS-I compliance claim
is still considered by the industry as a major step forward in order to
ease the integration of Web services on heterogeneous systems.</p>
<p>Following the Basic Profile 1.0 recommendation, WSDL documents
for V6 Web services conform to the WSDL 1.1 specification. They use the
<code><strong>document</strong></code>/<code><strong>literal</strong></code> approach
described above. As explained in the Basic Profile 1.0 (section &quot;<em>4.1.7
SOAP encodingStyle Attribute</em>&quot;), the <code>literal</code> use is
preferred to the <code>encoded</code> one, because the latter introduces
unnecessary complexity. The <code>document</code> style is on the other
hand the most widespread approach.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="2"></a>WSDL Interface Documents</h2>
<p>WSDL interface documents contain abstract descriptions of Web
service interfaces. They are available from the product installation and
can be found at the following location:</p>
<pre class="code"><em>&lt;Product-install&gt;</em>\<em>&lt;Operating-system&gt;</em>\resources\wsdl\<em>&lt;Interface&gt;</em>.wsdl</pre>
<ul>
	<li><code><em>&lt;Product-install&gt;</em></code>: product
	installation root folder.</li>
	<li><code><em>&lt;Operating-system&gt;</em></code>: identifier of
	the operating system chosen for the product installation. The following
	list is not exhaustive:
	<ul>
		<li><strong>Windows</strong>: <code>intel_a</code></li>
		<li><strong>64-bit Windows</strong>: <code>win_b64</code></li>
		<li><strong>64-bit AIX</strong>: <code>aix_a64</code></li>
	</ul>
	</li>
	<li><code>\resources\wsdl\<em>&lt;Interface&gt;</em>.wsdl</code>:
	relative path to the WSDL interface document:
	<ul>
		<li><strong>Example</strong>: <code>\resources\wsdl\IPingService.wsdl</code>.</li>
	</ul>
	</li>
</ul>
<p>WSDL documents describing Web services rely on external XSDs
in order to describe the data types that are relevant for the exchanged
SOAP messages. WSDL documents import these XSDs, which can be found at
the following location:</p>
<pre class="code"><em>&lt;Product-install&gt;</em>\<em>&lt;Operating-system&gt;</em>\resources\xsd\*.xsd</pre>
<p>See [<a href="#References">2</a>] for the complete list of Web service interfaces available. This document also provides the list
of relative path values required to access each WSDL interface document.</p>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="3"></a>WSDL Implementation Documents</h2>
<p>WSDL implementation documents contain concrete descriptions of
deployed Web service implementations. The main information available
is the <strong>SOAP endpoint URI</strong>. It specifies the target location for
the HTTP POST SOAP requests that must be sent in order to consume a
given Web service. Its value is contained in the <code>location</code>
attribute of the <code>&lt;soap:address&gt;</code> element, as detailed
below:</p>
<pre class="code">&lt;definitions.... &gt;
 &lt;port.... &gt;
  &lt;binding.... &gt;
   &lt;<strong>soap:address location=&quot;URI&quot;</strong> /&gt;
  &lt;/binding&gt;
 &lt;/port&gt;
&lt;/definitions&gt;</pre>
<p><strong>Note:</strong> The SOAP endpoint URI is bound to a specific
application server. As a result, the complete content of a WSDL
implementation document can only be resolved once the related Web
service has been deployed on a target application server. Therefore,
unlike WSDL interface documents, WSDL implementation documents cannot be
delivered in the file system. But you can have the complete list of
available Web service implementations (See [<a href="#References">2</a>]).
This document also provides the list of identifier values required to
access each WSDL implementation document.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>V6 Web services are WS-I compliant. In such context, they are
described using WSDL definitions that conform to the WSDL 1.1
specification. There are two types of WSDL documents available to
describe a Web service, a WSDL interface document and a WSDL
implementation document:</p>
<ul>
	<li>The former describes the &quot;abstract&quot; interface of the
	Web service. It can be accessed from the file system (within the
	product installation) or from a remote location (using a dedicated URI
	scheme).</li>
	<li>The latter describes a &quot;concrete&quot; implementation of
	a Web service that has been deployed on a target application
	server. This implementation can be consumed by sending HTTP POST SOAP
	requests to a specific SOAP endpoint URI. WSDL implementation documents
	are dynamically generated using a servlet hosted on the same server
	than the requested Web service implementation.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAWSLinks.htm">Web Services Links and Resources</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a
	href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAWSQuickRefs/index.html');return false;">
	Web Services Reference</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Apr 2005]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
