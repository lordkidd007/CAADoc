<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Web Services Overview</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Web Services Overview</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article describes what Web Services are and what are the
		general principles of their exposure.</p>
		<ul>
			<li><a href="#1">Web Services Overview</a>
			<ul>
				<li><a href="#11">WSDL</a></li>
				<li><a href="#12">Proxies</a></li>
				<li><a href="#13">UDDI</a></li>
			</ul>
			</li>
			<li><a href="#2">General Principles of Web Services
			Exposition</a>
			<ul>
				<li><a href="#21">Supported Clients</a></li>
				<li><a href="#DocPrinciple">Documentation</a></li>
				<li><a href="#23">Code Samples</a></li>
				<li><a href="#ErrorMgt">Error Management</a></li>
			</ul>
			</li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="1"></a>Web Services Overview</h2>
<p>Web services are language neutral API which can be remotely
accessed over a network through messages. Most of the time, these
messages are formatted according to the <strong>SOAP</strong> specification [<a
href="#References">1</a>] and are conveyed by the standard <strong>HTTP</strong>
protocol. The functionalities these systems deliver are described in a
platform and language neutral-way using an XML based language called <strong>WSDL</strong>
(Web Services Description Language). This mechanism enables loose
integration of heterogeneous systems.</p>
<p>Setting up a Web Service architecture usually involves the
following fundamental operations:</p>
<ul>
	<li><strong>Service Providers</strong> create Web Services. V6 doesn&#39;t
	offer specific tools for developing new Web Services but provides a set
	of Web Services.</li>
	<li>Service Providers then publish the services to a <strong>Service
	Broker</strong>.</li>
	<li><strong>Service Consumers</strong> find services using the Service
	broker facilities and then bind to the provider code. Binding and
	consumption are greatly eased by the use of generated,
	language-specific objects called <strong>proxies</strong>.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="11"></a>WSDL</h3>
<p>WSDL describes, among others information:</p>
<ul>
	<li>The <strong>service endpoint URI</strong> (Uniform Resource Identifier)
	where requests to the service are to be addressed.</li>
	<li>The list of requests (also called methods or operations) than
	can be handled by the service and the description of their arguments.</li>
</ul>
<p>Argument types are described in <strong>XSD</strong> (XML Schema
Definition) format.</p>
<p>For more information on WSDL, see [<a href="#References">1</a>]
and [<a href="#References">2</a>]</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="12"></a>UDDI</h3>
<p>Web Services are located through a service endpoint URI. Knowing
this URI is mandatory to be able to use the service. The URI of a Web
Service can for example be documented, and it can also be retrieved from
a directory. The service endpoint URI scheme for Web services is
documented in [<a href="#References">2</a>].</p>
<p>UDDI (Universal Description Discovery and Integration) is a
standard for a directory technology that describes how Web Services can
be published and how they can be retrieved using queries.
Publish/retrieval are often performed through web based user interfaces
or using APIs. For retrieval, the use of an API allows an application to
dynamically retrieve the locations of the services to consume by
querying the UDDI registry where they have been previously registered.</p>
<p>For more information on UDDI, see [<a href="#References">1</a>].</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="13"></a>Proxies</h3>
<p>From the WSDL/XSD description of a service, developers can use
off-the-shelf tools to generate a client proxy for their platform and
programming language.</p>
<p>This client proxy provides a language friendly way to invoke
service methods. It knows how to craft the correct messages and send
them to the target software system. For example proxies generated for
the Java language will be Java interfaces and classes. Invoking a method
of the Java interface will transparently invoke the corresponding method
of the Web Service by marshalling/demarshalling SOAP messages.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="2"></a>General Principles of Exposition of Web Services</h2>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="21"></a>Supported Clients</h3>
<p>Only clients using the Microsoft .NET 3.0 technology are
officially supported for consuming Web services. See [<a
href="#References">3</a>] for the precise list of supported levels.</p>
<p>In future releases, Java clients based on JAX-WS2.0 compatible
toolkits MAY be supported too.</p>
<p><strong>Note</strong>: the use of other off-the-self wsdl compilers is not
prohibited, but is not guaranteed by the Web Services
infrastructure:</p>
<p>So, any problem that may occur:</p>
<ul>
	<li>In the client proxies and artifacts generation.</li>
	<li>in the compilation steps.</li>
	<li>At client application runtime.</li>
</ul>
<p>MUST be reproduced with the Microsoft .NET 3.0 technology, for
support to be provided.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="DocPrinciple"></a>Documentation</h3>
<p>API documentation is presented in the familiar javadoc format for
simplicity [<a href="#References">4</a>]. It details the available
services and input/output data types involved. The data types belong to
the exposed 3DXML schema files.</p>
<p>Beware however, proxies generation may vary from a client
technology to the other. An out parameter is for example described as a
classic Java holder on the type of the parameter, while it could for
example be a reference on the parameter type in C++ proxies. Even for
proxies targeting the same language, generation may slightly vary from a
client toolkit to another.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="23"></a>Code Samples</h3>
<p>Code samples are generally provided as C# code in a
framework/module structure. They rely on proxies generated by .NET tools
which are delivered with the samples. Note that the .NET 3.0
framework must be installed on the computer used for tests.</p>
<p>It is strongly recommended to re-generate the proxies with your
own installed tool instead of relying on the delivered version. How to
generate proxies using .NET 3.0 is described in details [<a
href="#References">3</a>].</p>
<p>The samples can be built and executed using Visual Studio 2005
tool.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="ErrorMgt"></a>Error Management</h3>
<p>V6 Web Services use SOAP faults for error management.
Application-level errors inherit a base error type which contains an
error id and an status string. The status string contains a collection
of all messages and warnings for the operation.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAWSLinks.htm">Web Services Links and Resources</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAWSWSDLDefinitions.htm">Web Services and WSDL Definitions</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAWSGenerateClientBinding.htm">Generating a C# Client Binding</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAWSQuickRefs/index.html');return false;">
		Web Services API Reference</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAAWSBuildingLaunching.htm">Building and Launching a Web Service Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Nov 2006]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
