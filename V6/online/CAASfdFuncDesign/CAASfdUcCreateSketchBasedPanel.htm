<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating SFD Parametric Panel</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating SFD Parametric Panel</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to create parametric panel.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASfdCreateSketchBasedPanel Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASfdCreateSketchBasedPanel Do</a></li>
				<li><a href="#How">How to Launch CAASfdCreateSketchBasedPanel</a></li>
				<li><a href="#Where">Where to Find the 
				CAASfdCreateSketchBasedPanel 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA SFD(Structure Functional Design) Interfaces. Its main intent is to allow you to create 
parametric panel.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASfdCreateSketchBasedPanel Use Case</h2>
<p>CAASfdCreateSketchBasedPanel.m is a use case of the CAAStructureFuncDesignDoc.edu framework 
that illustrates the CATIA SFD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASfdCreateSketchBasedPanel Do</h3>
<p>The goal of CAASfdCreateSketchBasedPanel use case is to show how to create  
a sketch based plate.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASfdCreateSketchBasedPanel</h3>
<p>To launch CAASfdCreateSketchBasedPanel, you will need to set up the build time 
environment, then compile CAASfdCreateSketchBasedPanel along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mktun -c &quot;</em>CAASfdCreateSketchBasedPanel<em> Repository Server User Password SecutityCtx Environment PLM_ExternalID&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The value of the <code>PLM_ExternalID</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>
CAASfdCreateSketchBasedPanel.3dxml</strong>
    file from the  <strong>CAAStructureFuncDesign.edu</strong> framework.
</p>
<p>
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdCreateSketchBasedPanel.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\SAMPLE_RCO_2LIMITS_KB.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdCGR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdSR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdSteel_A42.3dxml</code>
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>PLM_ExternalID</strong></code></a>:
    <code>SFD_Product</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASfdCreateSketchBasedPanel Code</h3>
<p>The CAASfdCreateSketchBasedPanel sample is made of a single class named 
CAASfdCreateSketchBasedPanel 
located in the CAASfdCreateSketchBasedPanel.m module of the CAAStructureFuncDesign.edu 
framework: <code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\CAASfdCreateSketchBasedPanel.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATCkePLMNavPublicServices</em></td>
		<td>Class used to retrieve customized reference of the product.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATIPsiRepresentationLoadMode</em></td>
		<td>Class to manage Opening of the product and switching to edit mode.</td>
	</tr>
	<tr>
		<td><em>CATISfdUseFunctionFactory</em></td>
		<td>Interface to create SFD Panel/Member.</td>
	</tr>
	<tr>
		<td><em>CATISfdUseSketchBasedPanel</em></td>
		<td>Interface dedicated to SFD Sketch Based Panel.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseSketchBasedDMSMngt</em></td>
		<td>Interface to manage the DMS and the reference sketch.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCategoryMngt</em></td>
		<td>Interface to set/get category.</td>
	</tr>
	<tr>
		<td><em>CATIStrUsePanelSurf</em></td>
		<td>Interface for set/get panel support.</td>
	</tr>
	<tr>
		<td><em>CATIStrUsePanelLimitMngt</em></td>
		<td>Interface dedicated to set/get limits for panel.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseMaterialMngt</em></td>
		<td>Interface to set/get material.</td>
	</tr>
	<tr>
		<td><em>CATIStrUsePlateExtrusionMngt</em></td>
		<td>Interface to set/get plate geometry attributes.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseStiffenerMngt</em></td>
		<td>Interface used to retrieve stiffener on existing plates. These 
		stiffeners will be used as limits.</td>
	</tr>
	</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main . There are 19 logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Setting the Connection Parameters</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Setting the Current Environment to &quot;envToUse&quot; 
		from Input</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Retrieving the Environment</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Retrieving the Customized Reference of the Product 
		Modeler</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Opening the &quot;SFD_Product&quot; Model (arg[7])</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Opening the Product</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Getting the CATIMmiPrtContainer and Part from It</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Retrieving CATISfdUseFunctionFactory</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step11">Creating Sketch Based Panel</a></td>
	</tr>
	<tr>
		<td>12</td>
		<td><a href="#Step12">Setting Category of the Panel</a></td>
	</tr>
	<tr>
		<td>13</td>
		<td><a href="#Step13">Setting Support of the Panel</a></td>
	</tr>
	<tr>
		<td>14</td>
		<td><a href="#Step14">Setting Material for Panel</a></td>
	</tr>
	<tr>
		<td>15</td>
		<td><a href="#Step15">Setting Panel Reference Sketch</a></td>
	</tr>
	<tr>
		<td>16</td>
		<td><a href="#Step16">Setting Panel Limits</a></td>
	</tr>
	<tr>
		<td>19</td>
		<td><a href="#Step17">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (8 != argc)
{
  cout &lt;&lt; endl;
  cout &lt;&lt;&quot;CAASfdCreateSketchBasedPanel &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Environment&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
  cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
  cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Environment: A PLM environment containing PLMProductDS (a PRODUCT's custo).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
  cout &lt;&lt; endl;
  retCode = 1;
  goto EscapeWay;
}

//------------------------------------------------------------------
// - For Setting Environment
//------------------------------------------------------------------ 
envToUse = argv[6];

//------------------------------------------------------------------
// - For Setting Repository
//------------------------------------------------------------------ 
repository = argv[1];
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>Connection Parameters initialization.</p>
<pre class="code">...
cout &lt;&lt;&quot; Connection Parameters init: begin&quot; &lt;&lt; endl;
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Repository&quot;, argv[1]);
if (FAILED(hr))
{
  retCode = 2;
  goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Server&quot;, argv[2]);
if (FAILED(hr))
{ 
  retCode = 3;
  goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserID&quot;, argv[3]);
if (FAILED(hr))
{ 
  retCode = 4;
  goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserPasswd&quot;, argv[4]);
if (FAILED(hr))
{
  retCode = 5;
  goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;SecurityCtx&quot;, argv[5]);
if (FAILED(hr))
{
  retCode = 6;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
hr = CATPLMSessionServices::InitPLMSession();
if (FAILED(hr))
{
  retCode = 7;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Current Environment to &quot;envToUse&quot; from 
Input</h3>
<pre class="code">...
hr = PLMPSISessionHelpers::GetSessionHelpers(pSessionHelpers);
if (SUCCEEDED(hr) &amp;&amp; (NULL != pSessionHelpers))
{
  hr = pSessionHelpers-&gt; SetCurrentEnvironment(envToUse);
  if ( FAILED(hr) )
  {
    retCode = 8;
    goto EscapeWay;
  }
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving the Environment</h3>
<pre class="code">...
hr = CATAdpDictionaryServices::GetEnvironment(repository, envToUse, &amp;pIAdpEnvironment);
if ( FAILED(hr) || ( NULL == pIAdpEnvironment) )
{
  retCode = 9;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving the Customized Reference of the Product Modeler</h3>
<pre class="code">...
hr = CATCkePLMNavPublicServices::RetrieveKnowledgeType(&quot;VPMReference&quot;, hTypeModeler);
if( ( FAILED(hr) || (NULL_var == hTypeModeler) ) )
{
  retCode = 10;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the &quot;SFD_Product&quot; Model (arg[7])</h3>
<pre class="code">...
attributeSet.AddAttribute(&quot;PLM_ExternalID&quot;,argv[7]) ;
hr = CATAdpPLMQueryServices::GetElementsFromAttributes(hTypeModeler,
attributeSet,
ListP_QueryResults) ;

if(1 &lt;= ListP_QueryResults.Size())
{
  pQueryResult = ListP_QueryResults[1] ;
  if(NULL != pQueryResult)
  {
    hr = pQueryResult-&gt;GetIdentifier(pIPLMIdent) ;
  }
}

if ( (FAILED(hr)) || (NULL == pIPLMIdent) )
{
  retCode = 11;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Opening the Product</h3>
<pre class="code">...
hr = adpOpener.CompleteAndOpen(pIPLMIdent,IID_CATIPLMProducts, (void**) &amp;pIPLMProduct);
if ( (FAILED(hr)) || (NULL == pIPLMProduct) )
{
  retCode = 12;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the CATIMmiPrtContainer and Part from It</h3>
<pre class="code">...
hr = SwitchToDesignModeAndReturnPartContainer(pIPLMProduct,pIPrtCont,pPlatePart);
if((NULL == pIPrtCont) || (NULL == pPlatePart))
{
  retCode = 13;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Retrieving CATISfdUseFunctionFactory</h3>
<pre class="code">...
spSfdFunctionFactory = pIPrtCont;
if(NULL_var == spSfdFunctionFactory)
{
  retCode = 14;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Creating Sketch Based Panel</h3>
<pre class="code">...
hr = spSfdFunctionFactory-&gt;CreateSketchBasedPanel(pPlatePart, spSfdSketchBasedPanel, 5); // Mode 5 = Stiffener-Stiffener
if(NULL_var == spSfdSketchBasedPanel)
{
  retCode = 15;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Setting Category of the Panel</h3>
<pre class="code">...
spStrCategoryMngt = spSfdSketchBasedPanel;
if(NULL_var == spStrCategoryMngt)
{
  retCode = 16;
  goto EscapeWay;
}

hr = spStrCategoryMngt-&gt;SetCategory(&quot;ParametricPanel&quot;); 
if(FAILED(hr))
{
  retCode = 17;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Setting Support of the Panel</h3>
<pre class="code">...
spStrPanelSurf = spSfdSketchBasedPanel;
if(NULL_var == spStrPanelSurf)
{
  retCode = 18;
  goto EscapeWay;
}

hr = GetReferencePlane(pPlatePart, &quot;LONG.9&quot;, spPlane);
if(FAILED(hr))
{
  retCode = 19;
  goto EscapeWay;
}

hr = spStrPanelSurf-&gt;SetSupport(spPlane);
if(FAILED(hr))
{
  retCode = 20;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Setting Material for Panel</h3>
<pre class="code">...
spStrMaterialMngt = spSfdSketchBasedPanel;
if(NULL_var == spStrMaterialMngt)
{
  retCode = 21;
  goto EscapeWay;
}

hr = spStrMaterialMngt-&gt;SetMaterial(&quot;Steel A42&quot;);
if(FAILED(hr))
{
  retCode = 22;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Setting Plate Reference Sketch</h3>
<pre class="code">...
spPanel = spSfdSketchBasedPanel;
hr = spPanel-&gt;GetDelimitedSupport( spDMS );
if( FAILED(hr) || NULL_var == spDMS )
{
  retCode = 25;
  goto EscapeWay;
}
spStrSketchBasedDMSMngt = spDMS;
if(NULL_var == spStrSketchBasedDMSMngt)
{
  retCode = 26;
  goto EscapeWay;
}

hr = spStrSketchBasedDMSMngt-&gt;SetSketch( &quot;SAMPLE_RCO_2LIMITS_KB&quot; );
if( FAILED(hr))
{
  retCode = 27;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Setting Panel Limits</h3>
<pre class="code">HRESULT SetSketchBasedPanelLimits( const CATISfdUseSketchBasedPanel_var &amp;ispSketchBasedPanel, const CATISfdUsePart_var &amp;ispSfdUsePart )
{
  if( NULL_var == ispSketchBasedPanel || NULL_var == ispSfdUsePart )
    return E_INVALIDARG;

  HRESULT hr = E_FAIL;

  CATIStrUsePanelLimitMngt_var spPanelLimitMngt = ispSketchBasedPanel;
  if( !!spPanelLimitMngt )
  {
    CATLISTV(CATIMmiMechanicalFeature_var) ListOfPanels;

    hr = ispSfdUsePart-&gt;GetPanels( ListOfPanels );
    if( SUCCEEDED(hr) &amp;&amp; ListOfPanels.Size() &gt; 0 )
    {
      // First panel
      CATISfdUsePanel_var spPanel( ListOfPanels[1] );
      CATIStrUseStiffenerMngt_var spStiffenerMngt = spPanel;
      CATLISTV(CATBaseUnknown_var) ListOfStiffeners;

      hr = spStiffenerMngt-&gt;GetStiffeners( ListOfStiffeners );
      if( SUCCEEDED(hr) &amp;&amp; ListOfStiffeners.Size() &gt; 0 )
      {
        // First stiffener
        CATIMmiMechanicalFeature_var spStiffener( ListOfStiffeners[1] );
        // Second limit
        hr = spPanelLimitMngt-&gt;SetLimitingObject( spStiffener, 2 );
      }

      // Second panel
      spPanel = ListOfPanels[2];
      spStiffenerMngt = spPanel;
      hr = spStiffenerMngt-&gt;GetStiffeners( ListOfStiffeners );
      if( SUCCEEDED(hr) &amp;&amp; ListOfStiffeners.Size() &gt; 0 )
      {
        // Second stiffener
        CATIMmiMechanicalFeature_var spStiffener( ListOfStiffeners[1] );
        // Third limit
        hr = spPanelLimitMngt-&gt;SetLimitingObject( spStiffener, 3 );
      }
    }
  }

return hr;
}</pre>
<p>Here <strong>SetSketchBasedPanelLimits()</strong> is called from the main 
method with parameters Sketch Based Panel &amp; the Part of the SFD System under 
whcih we are creating the Sketch Based Panel.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step17"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
  hr = CATPLMSessionServices::ClosePLMSession();
  if (FAILED(hr)) 
  {
    cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
    retCode = 35;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create sfd sketch based panel.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
