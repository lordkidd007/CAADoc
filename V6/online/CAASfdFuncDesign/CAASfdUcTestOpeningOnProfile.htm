<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Testing SFD Opening On Profile</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Testing SFD Opening On Profile</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to retrieve and set opening on profile information.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASfdTestOpeningOnProfile Use Case</a>
			<ul>
				<li><a href="#What">What does CAASfdTestOpeningOnProfile do</a></li>
				<li><a href="#How">How to Launch CAASfdTestOpeningOnProfile</a></li>
				<li><a href="#Where">Where to Find the CAASfdTestOpeningOnProfile 
				code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
	
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA SFD(Structure Functional Design) Interfaces. Its main intent is to allow you to retrieve and set opening on profile information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASfdTestOpeningOnProfile Use Case</h2>
<p>CAASfdTestOpeningOnProfile.m is a use case of the CAAStructureFuncDesignDoc.edu framework 
that illustrates the CATIA SFD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASfdTestOpeningOnProfile Do?</h3>
<p>The goal of CAASfdTestOpeningOnProfile use case is to show how to retrieve and set opening on profile information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASfdTestOpeningOnProfile?</h3>
<p>To launch CAASfdTestOpeningOnProfile, you will need to set up the build time 
environment, then compile CAASfdTestOpeningOnProfile along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASfdTestOpeningOnProfile Repository Server User Password SecutityCtx Environment PLM_ExternalID&quot;</em></pre>
<p>where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The value of the <code>PLM_ExternalID</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
</table>
<p>* The input model is retrieved by importing the <strong>CAASfdTestOpeningOnProfile.3dxml</strong>
    file from the  <strong>CAAStructureFuncDesign.edu</strong> framework.
</p>
<pre class="code">
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASfdCGR.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASfdSR.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASfdSteel_A90.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASfdWT18x179_5.3dxml
InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdTestOpeningOnProfile.3dxml</pre>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>PLM_ExternalID</strong></code></a>:
    <code>SFD_TestOpeningOnProfile</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASfdTestOpeningOnProfile Code</h3>
<p>The CAASfdTestOpeningOnProfile sample is made of a single class named CAASfdTestOpeningOnProfile 
located in the CAASfdTestOpeningOnProfile.m module of the CAAStructureFuncDesign.edu 
framework: <code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\CAASfdTestOpeningOnProfile.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table>
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningOnProfileMngt</em></td>
		<td>Interface to manage opening on profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningOnProfile</em></td>
		<td>Interface to create opening on profile.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are 20 logical steps in Main:</p>
<table>
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Setting the Connection Parameters</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Setting the Current Environment to &quot;envToUse&quot; 
		from Input</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Retrieving the Environment</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Retrieving the Customized Reference of the Product 
		Modeler</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Opening the &quot;SFD_TestOpeningOnProfile&quot; Model (arg[7])</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Opening the Product</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Getting the CATIMmiPrtContainer and Part from It</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Retrieving &quot;Panel.1&quot;</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step11">Retrieving CATIStrUseStiffenerMngt Interface and Stiffener from it</a></td>
	</tr>
	<tr>
		<td>12</td>
		<td><a href="#Step12">Retrieving CATIStrUseOpeningOnProfileMngt Interface and Opening on Profile from it</a></td>
	</tr>
	<tr>
		<td>13</td>
		<td><a href="#Step13">Testing TestCATIStrUseOpeningOnProfileStandardOffsetOffset Methods</a></td>
	</tr>
	<tr>
		<td>14</td>
		<td><a href="#Step14">Testing TestCATIStrUseOpeningOnProfileStandardMidDistOffset Methods</a></td>
	</tr>
    <tr>
	    <td>15</td>
		<td><a href="#Step15">Testing TestCATIStrUseOpeningOnProfileStandardSpacingOffset Methods</a></td>
	</tr>
	<tr>
	    <td>16</td>
		<td><a href="#Step16">Testing TestCATIStrUseOpeningOnProfileOutputProfile Methods</a></td>
	</tr>
	<tr>
	    <td>17</td>
		<td><a href="#Step17">Testing TestCATIStrUseOpeningOnProfile3DObject Methods</a></td>
	</tr>
	<tr>
		<td>18</td>
		<td><a href="#Step18">Testing TestCATIStrUseOpeningOnProfileMngt Methods</a></td>
	</tr>

	
	<tr>
	<td>19</td>
		<td><a href="#Step19">Save tested Opening on Profiles</a></td>
	</tr>

	<tr>
		<td>20</td>
		<td><a href="#Step20">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
 if (8 != argc)
 {
  cout &lt;&lt; endl;
  cout &lt;&lt;&quot;CAASfdTestOpeningOnProfile &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Environment&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
  cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
  cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Environment: A PLM environment containing PLMProductDS (a PRODUCT's custo).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
  cout &lt;&lt; endl;
  retCode = 1;
  goto EscapeWay;
 }

 //------------------------------------------------------------------
 // - For Setting Environment
 //------------------------------------------------------------------ 
  envToUse = argv[6];

 //------------------------------------------------------------------
 // - For Setting Repository
 //------------------------------------------------------------------ 
  repository = argv[1];
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>Connection Parameters initialization.</p>
<pre class="code">...
  hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Repository&quot;, argv[1]);
  if (FAILED(hr))
   {
    retCode = 2;
    goto EscapeWay;
   }

 hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Server&quot;, argv[2]);
 if (FAILED(hr))
  { 
   retCode = 3;
   goto EscapeWay;
  }

 hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserID&quot;, argv[3]);
 if (FAILED(hr))
 { 
  retCode = 4;
  goto EscapeWay;
 }

 hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserPasswd&quot;, argv[4]);
 if (FAILED(hr))
 {
  retCode = 5;
  goto EscapeWay;
 }

 hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;SecurityCtx&quot;, argv[5]);
 if (FAILED(hr))
 {
  retCode = 6;
  goto EscapeWay;
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
 hr = CATPLMSessionServices::InitPLMSession();
 if (FAILED(hr))
 {
  retCode = 7;
  goto EscapeWay;
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Current Environment to &quot;envToUse&quot; from 
Input</h3>
<pre class="code">...
 hr = PLMPSISessionHelpers::GetSessionHelpers(pSessionHelpers);
 if (SUCCEEDED(hr) &amp;&amp; (NULL != pSessionHelpers))
 {
  hr = pSessionHelpers-&gt; SetCurrentEnvironment(envToUse);
  if ( FAILED(hr) )
  {
   retCode = 8;
   goto EscapeWay;
  }
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving the Environment</h3>
<pre class="code">...
 hr = CATAdpDictionaryServices::GetEnvironment(repository, envToUse, &amp;pIAdpEnvironment);
 if ( FAILED(hr) || ( NULL == pIAdpEnvironment) )
 {
  retCode = 9;
  goto EscapeWay;
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving the Customized Reference of the Product Modeler</h3>
<pre class="code">...
 hr = CATCkePLMNavPublicServices::RetrieveKnowledgeType("VPMReference", hTypeModeler);
 if( ( FAILED(hr) || (NULL_var == hTypeModeler) ) )
 {
  retCode = 10;
  goto EscapeWay;
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the &quot;SFD_TestOpeningOnProfile&quot; Model (arg[7])</h3>
<pre class="code">...
 attributeSet.AddAttribute(&quot;PLM_ExternalID&quot;,argv[7]);
 hr = CATAdpPLMQueryServices::GetElementsFromAttributes(hTypeModeler,
                                                       attributeSet,
                                                       ListP_QueryResults) ;

 if(1 &lt;= ListP_QueryResults.Size())
 {
   pQueryResult = ListP_QueryResults[1] ;
   if(NULL != pQueryResult)
   {
    hr = pQueryResult-&gt;GetIdentifier(pIPLMIdent) ;
   }
 }
 if ( (FAILED(hr)) || (NULL == pIPLMIdent) )
 {
  retCode = 11;
  goto EscapeWay;
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Opening the Product</h3>
<pre class="code">...
 hr = adpOpener.CompleteAndOpen(pIPLMIdent,IID_CATIPLMProducts, (void**)&amp;pIPLMProduct);
 if ( (FAILED(hr)) || (NULL == pIPLMProduct) )
 {
  retCode = 12;
  goto EscapeWay;
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the CATIMmiPrtContainer and Part from It</h3>
<pre class="code">...
  hr  =  SwitchToDesignModeAndReturnPartContainer(pIPLMProduct,pIPrtCont,pPlatePart);  
  if((NULL == pIPrtCont) || (NULL == pPlatePart)) 
  {  
    retCode  =  13;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Retrieving "Panel.1"</h3>
<pre class="code">...
  hr = GetPartObj(pPlatePart,"Panel.1", spSfdPanel);
  if(NULL_var == spSfdPanel)  
  {  
    retCode = 14;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Retrieving CATIStrUseStiffenerMngt Interface and Stiffener from it</h3>
<pre class="code">...
  spStrStiffenerMngt = spSfdPanel;
  if(NULL_var == spStrStiffenerMngt)  
  {  
    retCode = 15;  
    goto EscapeWay;  
  }  
  hr = spStrStiffenerMngt-&gt;GetSlots(spListOfStiffeners);
  if(!SUCCEEDED(hr))
  {
    retCode = 16;
    goto EscapeWay;
  }
  spStiffener = spListOfStiffeners[1];
  if(NULL_var == spStiffener)  
  {  
    retCode = 17;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Retrieving CATIStrUseOpeningOnProfileMngt Interface and Opening on Profile from it</h3>
<pre class="code">...
  spStrOpeningOnProfileMngt = spStiffener;
  if(NULL_var == spStrOpeningOnProfileMngt)  
  {  
    retCode = 18;  
    goto EscapeWay;  
  }  
  hr = spStrOpeningOnProfileMngt-&gt;GetOpeningOnProfiles(spListOfOpeningOnProfiles);
  if(!SUCCEEDED(hr))
  {
    retCode = 19;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Testing TestCATIStrUseOpeningOnProfileStandardOffsetOffset Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[3];
  if(NULL_var == spStrOpeningOnProfile)  
  {  
    retCode = 20;  
    goto EscapeWay;  
  }
  hr = TestCATIStrUseOpeningOnProfileStandardOffsetOffset(spStrOpeningOnProfile, spStiffener, pPlatePart);
  if(!SUCCEEDED(hr))
  {
    retCode = 21;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfileStandardOffsetOffset(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile, CATIStrUseProfile_var &amp;ispSfdStiffener, CATIMmiUsePrtPart *ipPlatePart)
 {
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;

  CATIStrUseOpeningStandard_var  spStrOpeningStandard;
  spStrOpeningStandard = spStrOpening;
  if(NULL_var == spStrOpeningStandard)  return hr;

  CATUnicodeString ContourName;
  CATListValCATBaseUnknown_var ListContourParams;
  hr = spStrOpeningStandard-&gt;<strong>GetContour</strong>(ContourName,ListContourParams);
  if(!SUCCEEDED(hr))  return hr;
  CATUnicodeString PosStrategyName;
  CATListValCATBaseUnknown_var ListPosParams;
  hr = spStrOpeningStandard-&gt;<strong>GetPositioningStrategy</strong>(PosStrategyName,ListPosParams);
  if(!SUCCEEDED(hr))  return hr;
  hr = spStrOpeningStandard-&gt;<strong>SetContourAndPosStrategyForProfile</strong>(ContourName,ListContourParams,PosStrategyName,ListPosParams);
  if(!SUCCEEDED(hr))  return hr;

  CATBoolean Direction = CATFalse;
  hr = spStrOpeningStandard-&gt;<strong>GetDirectionForOpeningOnProfile</strong>(Direction);
  if(!SUCCEEDED(hr))  return hr;
  hr = spStrOpeningStandard-&gt;<strong>SetDirectionForOpeningOnProfile</strong>(Direction);
  if(!SUCCEEDED(hr))  return hr;
  
  CATStrOpeningSTDMode CreationMode = catStrOpeningSTDUndefinedMode;
  hr = spStrOpeningStandard-&gt;<strong>GetStandardModeType</strong>(CreationMode);
  if(!SUCCEEDED(hr))  return hr;
  hr = spStrOpeningStandard-&gt;<strong>SetStandardModeType</strong>(CreationMode);
  if(!SUCCEEDED(hr))  return hr;

  CATIMmiMechanicalFeature_var spPlane, spProfileRef;
  spProfileRef = ispSfdStiffener;
  hr = GetPartObj(ipPlatePart, "LONG.15", spPlane);
  hr = spStrOpeningStandard-&gt;<strong>SetOffsetOffsetPosStratParms</strong>(spProfileRef, spPlane, "100mm", "0mm", "Gravity", "0deg");
  if(!SUCCEEDED(hr))  return hr;
  
  return hr;
 }
...</pre>
<p>
SetDirectionForOpeningOnProfile/GetDirectionForOpeningOnProfile: 
Sets and gets the direction for opening on profile resp.</p>
<p>
SetStandardModeType/GetStandardModeType:
Sets and gets the mode for standard opening on profile resp. 0 -&gt; catStrOpeningSTDUndefinedMode, 1 -&gt; catStrOpeningSTDRoundMode, 2 -&gt; catStrOpeningSTDRectMode, 3 -&gt; catStrOpeningSTDOblongMode, 4 -&gt; catStrOpeningSTDCatalogMode</p>
<p>
SetContourAndPosStrategyForProfile: 
Sets the contour and position strategy for opening on profile.</p>
<p>
SetOffsetOffsetPosStratParms: 
There are in all 6 parameters for this method. 1. The reference of the profile, 2.The reference element used, 3. The horizontal offset distance from reference element, 4. The vertical offset distance from anchor point, 5. The anchor point type, 6. The axis angle.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Testing TestCATIStrUseOpeningOnProfileStandardMidDistOffset Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[4];
  if(NULL_var == spStrOpeningOnProfile)  
  {  
    retCode = 22;  
    goto EscapeWay;  
  }
  hr = TestCATIStrUseOpeningOnProfileStandardMidDistOffset(spStrOpeningOnProfile, spStiffener, pPlatePart);
  if(!SUCCEEDED(hr))
  {
    retCode = 23;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfileStandardMidDistOffset(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile, CATIStrUseProfile_var &amp;ispSfdStiffener, CATIMmiUsePrtPart *ipPlatePart)
 {
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;

  CATIStrUseOpeningStandard_var  spStrOpeningStandard;
  spStrOpeningStandard = spStrOpening;
  if(NULL_var == spStrOpeningStandard)  return hr;

  CATIMmiMechanicalFeature_var spProfileRef;
  spProfileRef = ispSfdStiffener;

  CATIMmiMechanicalFeature_var spPlane_1, spPlane_2;
  hr = GetPartObj(ipPlatePart, "LONG.11", spPlane_1);
  hr = GetPartObj(ipPlatePart, "LONG.10", spPlane_2);
  hr = spStrOpeningStandard-&gt;<strong>SetMidDistOffsetPosStratParms</strong>(spProfileRef, spPlane_1, spPlane_2, "0mm", "Gravity", "0deg");
  if(!SUCCEEDED(hr))  return hr;
  
  return hr;
 }
...</pre>
<p>
SetMidDistOffsetPosStratParms: 
There are in all 6 parameters for this method. 1. The reference of the profile, 2.The first reference element used, 3. The second reference element used, 4. The vertical offset distance from anchor point, 5. The anchor point type, 6. The axis angle.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Testing TestCATIStrUseOpeningOnProfileStandardSpacingOffset Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[5];
  if(NULL_var == spStrOpeningOnProfile)  
  {  
    retCode = 24;  
    goto EscapeWay;  
  }
  hr = TestCATIStrUseOpeningOnProfileStandardSpacingOffset(spStrOpeningOnProfile, spStiffener);
  if(!SUCCEEDED(hr))
  {
    retCode = 25;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfileStandardSpacingOffset(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile, CATIStrUseProfile_var &amp;ispSfdStiffener)
 {
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;

  CATIStrUseOpeningStandard_var  spStrOpeningStandard;
  spStrOpeningStandard = spStrOpening;
  if(NULL_var == spStrOpeningStandard)  return hr;

   CATIMmiMechanicalFeature_var spProfileRef;
   spProfileRef = ispSfdStiffener;
  
  if(!SUCCEEDED(hr))  return hr;
  CATBoolean Orientation = CATTrue;
  CATBoolean RepetitionMode = CATTrue;
  hr = spStrOpeningStandard-&gt;<strong>SetSpacingOffsetPosStratParms</strong>(spProfileRef, Orientation, "1000mm", RepetitionMode, "0mm", "Gravity", "0deg");
  if(!SUCCEEDED(hr))  return hr;
  
  return hr;
 }
...</pre>
<p>
SetSpacingOffsetPosStratParms: 
There are in all 7 parameters for this method. 1. The reference of the profile, 2. Whether reference point is from start or end, 3. The horizontal offset distance, 4. Whether mode is absolute or relative, 5. The vertical offset distance from anchor point, 6. The anchor point type, 7. The axis angle.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Testing TestCATIStrUseOpeningOnProfileOutputProfile Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[1];
  if(NULL_var == spStrOpeningOnProfile)  
  {  
    retCode = 26;  
    goto EscapeWay;  
  }
  hr = TestCATIStrUseOpeningOnProfileOutputProfile(spStrOpeningOnProfile);
  if(!SUCCEEDED(hr))
  {
    retCode = 27;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfileOutputProfile(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile)
 {
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;

  // - Get CATIStrUseOpeningOutputProfile interface
  CATIStrUseOpeningOutputProfile_var   spStrOpeningoutputProfile;
  spStrOpeningoutputProfile = spStrOpening;
  if(NULL_var == spStrOpeningoutputProfile)  return hr;

  CATIMmiMechanicalFeature_var spOutputProfile;
  hr = spStrOpeningoutputProfile-&gt;<strong>GetOutputProfile</strong>(spOutputProfile);
  if(!SUCCEEDED(hr))  return hr;

  hr = spStrOpeningoutputProfile-&gt;<strong>SetOutputProfile</strong>(spOutputProfile);
  if(!SUCCEEDED(hr))  return hr;

  CATIMmiMechanicalFeature_var spDirection;
  hr = spStrOpeningoutputProfile-&gt;<strong>GetDirection</strong>(spDirection);
  if(!SUCCEEDED(hr))  return hr;

  hr = spStrOpeningoutputProfile-&gt;<strong>SetDirection</strong>(spDirection);
  if(!SUCCEEDED(hr))  return hr;

  CATStrOpeningLimitsMode eType;
  hr = spStrOpeningoutputProfile-&gt;<strong>GetLimitMode</strong>(eType);
  if(!SUCCEEDED(hr))  return hr;

  hr = spStrOpeningoutputProfile-&gt;<strong>SetLimitMode</strong>(eType);
  if(!SUCCEEDED(hr))  return hr;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step17"></a>Testing TestCATIStrUseOpeningOnProfile3DObject Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[2];
  if(NULL_var == spStrOpeningOnProfile)  
  {  
    retCode = 28;  
    goto EscapeWay;  
  }
  hr = TestCATIStrUseOpeningOnProfile3DObject(spStrOpeningOnProfile);
  if(!SUCCEEDED(hr))
  {
    retCode = 29;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfile3DObject(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile)
 {
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;
  
  // - Get CATIStrUseOpening3DObject interface
  CATIStrUseOpening3DObject_var   spStrOpening3DObj;
  spStrOpening3DObj = spStrOpening;
  if(NULL_var == spStrOpening3DObj)  return hr;
 
  // - Get 3D Object
  CATIMmiMechanicalFeature_var spIntersectingElement;
  hr = spStrOpening3DObj-&gt;<strong>GetIntersectingElement</strong>(spIntersectingElement);
  if(!SUCCEEDED(hr))  return hr;
  
  hr = spStrOpening3DObj-&gt;<strong>SetIntersectingElement</strong>(spIntersectingElement);
  if(!SUCCEEDED(hr))  return hr;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step18"></a>Testing TestCATIStrUseOpeningOnProfileMngt Methods</h3>
<pre class="code">...
  hr = TestCATIStrUseOpeningOnProfileMngt(spStiffener); 
  if(!SUCCEEDED(hr))
  {
    retCode = 30;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfileMngt(CATIStrUseProfile_var &amp;ispSfdStiffener)
 {
  HRESULT hr = E_FAIL;

  if(!ispSfdStiffener)  return hr;

  CATIStrUseOpeningOnProfileMngt_var   spStrOpeningOnProfileMngt;
  spStrOpeningOnProfileMngt = ispSfdStiffener;
  if(NULL_var == spStrOpeningOnProfileMngt)  return hr;

  CATIMmiMechanicalFeature_var spOpeningOnProfile;
  hr = spStrOpeningOnProfileMngt-&gt;<strong>AddOpeningOnProfile</strong>(spOpeningOnProfile);
  if(!SUCCEEDED(hr))  return hr;

  hr = spStrOpeningOnProfileMngt-&gt;<strong>RemoveOpeningOnProfile</strong>(spOpeningOnProfile);
  if(!SUCCEEDED(hr))  return hr;

  return hr;
}
...</pre>
<p>
In the same way CATIStrUseOpeningOutputProfile, CATIStrUseOpening3DObject and CATIStrUseOpeningOnProfileMngt interfaces can be accessed as shown above. 
The interfaces CATIStrUseOpeningOutputProfile and CATIStrUseOpening3DObject are the same used exposed for opening. These same interfaces are used in opening on profile context.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step19"></a>Save tested Opening on Profiles</h3>
<pre class="code">...
  hr = adpSaver.Save();
  if(FAILED(hr))  
  {  
   retCode = 31;  
   goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step20"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
 hr = CATPLMSessionServices::ClosePLMSession();
 if (FAILED(hr)) 
 {
  cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
  retCode = 32;
 }
...</pre>

<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to test sfd opening on profile.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Dec 2012]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>



