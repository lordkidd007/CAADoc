<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Finalizing a PLM Channel</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Finalizing a PLM Channel</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This use case illustrates how to finalize the PLM Channel creation.
		</p>
		<p>A PLM Channel is an exchange context created between two specific repositories 
		in order to allow data exchange and ownership transfers. Refer the Technical 
		article [<a href="#References">1</a>] for the details of PLM Channel creation.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a> </li>
			<li><a href="#UseCase">The CAASrmFinalizeChannelCreation Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASrmFinalizeChannelCreation Do</a></li>
				<li><a href="#How">How to Launch CAASrmFinalizeChannelCreation</a></li>
				<li><a href="#Where">Where to Find the CAASrmFinalizeChannelCreation 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a> </li>
			<li><a href="#InShort">In Short</a> </li>
			<li><a href="#References">References</a> </li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how to finalize the PLM Channel creation 
using an exchange request file.</p>
<p>When a site receives the exchange request file , it can choose to accept and 
confirm the PLM Channel creation or refuse it. Site generates a creation confirmation 
file that will be sent to other site , to inform the acceptance or refusal information.</p>
<p>Note: The files can be sent through any medium like email, file transfer etc. 
The files generated during Channel formation cannot be interchangeably used for 
channel creation with other sites. Only the business card can be used to initialize 
channel creation with any other site.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASrmFinalizeChannelCreation Use Case</h2>
<p><code><strong>CAASrmFinalizeChannelCreation</strong></code> is a use case of 
the <code><strong>CAASRMExposedServices.edu</strong></code> framework that illustrates
<code><strong>PLMSRMExposedServices</strong></code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASrmFinalizeChannelCreation Do</h3>
<p>Initializing PLM Channel [<a href="#References">3</a>] use case has generated 
an Exchange Request file stored into a PLM Briefcase file . This file has been sent 
(through email, file transfer etc) to the current site . Using this Exchange request 
file , the current site generates a confirmation file accepting or refusing the 
PLM Channel connection.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASrmFinalizeChannelCreation</h3>
<p>To launch <code><strong>CAASrmFinalizeChannelCreation</strong></code>, you will 
need to set up the build time environment, then compile <code><strong>CAASrmFinalizeChannelCreation
</strong></code>along with its prerequisites, set up the run time environment, and 
then execute the use case [<a href="#References">6</a>].</p>
<p>To launch the use case execute the command:</p>
<p><code><strong>mkrun -c &quot;CAASrmFinalizeChannelCreation</strong></code><code><strong><em> 
Repository Server User Password SecurityCtx ExchangeRequestPath ConfirmationPath 
ChannelIDTextFilePath</em>&quot;</strong></code></p>
<p>where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer</td>
	</tr>
	<tr>
		<th>ExchangeRequestPath</th>
		<td>The complete file path of the exchange request file generated at remote 
		site.</td>
	</tr>
	<tr>
		<th>ConfirmationPath</th>
		<td>The complete path of the creation confirmation file, including the file 
		name, to be generated by the use case. The file extension must be &quot;.PLMBriefcase&quot;<br>
		Example: &quot;C:\Temp\CreationConfirmationFile.PLMBriefcase&quot;. This use case 
		fails if the file already exists</td>
	</tr>
	<tr>
		<th>ChannelIDTextFilePath</th>
		<td>The path of the text file in which the PLM Channel Identificator will 
		be stored. This Channel Identificator is returned as an output information 
		while finalizing the PLM Channel</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASrmFinalizeChannelCreation Code</h3>
<p>The <code><strong>CAASrmFinalizeChannelCreation</strong></code> use case is made 
of a single file located in the <code><strong>CAASrmFinalizeChannelCreation</strong></code> 
module of the <code><strong>CAASRMExposedServices.edu</strong></code> framework:</p>
<p><code>InstallRootFolder\CAADoc\CAASRMExposedServices.edu\CAASrmFinalizeChannelCreation.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">7</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<ul>
	<li><a href="#Prolog">Prolog</a> </li>
	<li><a href="#Finalize the PLM Channel creation">Finalize the PLM Channel creation</a>
	</li>
	<li><a href="#Epilog">Epilog</a> </li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog </h3>
<p>The <code><strong>CAASrmFinalizeChannelCreation</strong></code> use case begins 
by creating a session and connecting to the Input Repository with an appropriate 
role. The use case &quot;Creating a Basic PLM Batch&quot; [<a href="#References">7</a>] deals 
with Opening and Closing a PLM Session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Finalize the PLM Channel creation"></a>Finalize the PLM Channel creation</h3>
<p>When the Exchange Request file ( generated during initializing the PLM channel 
at the other site [<a href="#References">3</a>] is received at a site, it will then 
finalize the PLM Channel . The site can choose to accept and confirm the PLM Channel 
creation or refuse it . </p>
<pre class="code">...
   CATPLMExchangeChannelServices* pExchangeChannelServices =
   				 new <strong>CATPLMExchangeChannelServices</strong>();
   if (NULL!=pExchangeChannelServices)
   {
      ...
      HRESULT Rc = pExchangeChannelServices-&gt;<strong>FinalizeChannelCreation</strong>
      	   (iexchangeRequestFile, iforceRefuse, icreationConfirmationFile, ochannelId);
      ...
   }
...
</pre>
<p><code><strong>FinalizeChannelCreation</strong></code> takes four arguments
</p>
<ul>
	<li><code>iexchangeRequestFile</code>, CATUnicodeString type, the path exchange 
	request file</li>
	<li><code>iforceRefuse</code> , CATBoolean type, parameter to refuse the creation 
	of the PLM Channel if its value is set TRUE</li>
	<li><code>icreationConfirmationFile</code>, CATUnicodeString type, path of the 
	file where to generate the confirmation of the PLM Channel creation</li>
	<li><code>ochannelId</code>, CATString type, the Channel identification.</li>
</ul>
<p>The <code><strong>CATPLMExchangeChannelServices::FinalizeChannelCreation</strong></code> 
call generates a creation confirmation file . This Confirmation file is sent to 
the other site to inform that the PLM channel is accepted . The other site will 
then acknowledge the PLM Channel creation using confirmation file as the input.</p>
<p>Please note that the PLM Channel identificator <code>ochannelId</code> ( see 
the code above ) is not computed during finalizing PLM Channel. It is only getting 
retrieved here from the Exchange request file and returned as an output information 
in the call to <code>FinalizeChannelCreation</code> API. This <strong>oChannelID</strong> 
is kept by the current site , to be used for publishing the data.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Store the ChannelId"></a>Store the channel identificator in Text file</h3>
<p>While finalizing the PLM Channel at a site (<a href="#Finalize the PLM Channel creation">Finalize</a>), 
the Channel identificator is retreived. This Channel identificator is stored in 
the Text file to be used for publishing the data.</p>
<pre class="code">...
     CATUnicodeString ChannelIDTextFilePath = ChannelIDTextFile; 
     unsigned int oFileDescriptor = 0;
     HRESULT rc = <strong>CATFOpen</strong>(&amp;ChannelIDTextFilePath, &quot;w&quot;, &amp;oFileDescriptor);  
     {
     ...
     CATUnicodeString oResult= ochannelId.getUnicodeString();
     unsigned int oWritten = 0;
     rc = <strong>CATFWrite</strong>
        (oFileDescriptor,oResult.ConvertToChar(),oResult.GetLengthInChar(),&amp;oWritten);    
     ...
     rc = <strong>CATFClose</strong>(oFileDescriptor);
     }
...
</pre>
<p>The <code><strong>CATFOpen</strong></code> method takes as input the path of 
the text file to be opened and the opening mode of the file. It returns a file descriptor 
that will be used in the other functions for manipulating the opened file.</p>
<p>The <code><strong>CATFWrite</strong></code> method writes into a file previously 
opened with CATFOpen. It takes as input the file descriptor of the file , the buffer 
of data to be write and the size of the buffer. It returns the length of the data 
actually written.</p>
<p>The <code><strong>CATFClose</strong></code> method closes the file . It takes 
as input the file descriptor. Once the Channel identificator is stored in the text 
file , the site will use it for publishing the data [<a href="#References">5</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>The <code><strong>CAASrmFinalizeChannelCreation</strong></code> use case ends 
by simply closing the PLM session. Since all use cases necessarily conclude by closing 
the PLM session, we have a dedicated article on this topic namely &quot;Creating a Basic 
PLM Batch&quot; [<a href="#References">7</a>]. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The use case illustrates how to finalize the PLM Channel . Confirmation file 
generated here is sent ( through email , file transfer etc )to the other repository 
site . The other repository site will then processes the confirmation file and further 
process the PLM Channel creation by Acknowledging the PLM Channel [<a href="#References">3</a>] 
at its side.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAASrmTaSupplyChain.htm">Exchanging Data Using PLM Channel</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAASrmUcGenerateBusinessCardForChannel.htm">Generating a Business 
		Card</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAASrmUcInitializeChannelCreation.htm">Initializing a PLM Channel</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAASrmUcAcknowledgeChannelCreation.htm">Acknowledging the PLM 
		Channel Creation</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAASrmUcPublishExchangeThroughChannel.htm">Publishing a PLM 
		Entity through a PLM Channel</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Creating a Basic PLM Batch</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [July 2008]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
