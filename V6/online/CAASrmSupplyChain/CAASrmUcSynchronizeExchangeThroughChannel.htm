<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Synchronizing a PLM Channel</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Synchronizing a PLM Channel</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The Use Case shows how to synchronize a PLM Entity from
		a PLMBriefcase through a PLM Channel.</p>
		<p>A PLM Channel is an exchange context created between two specific repositories 
		in order to allow optimized data exchange and ownership transfers. Refer 
		the Technical article [<a href="#References">1</a>] for the details of PLM 
		Channel creation and Data Exchange.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASrmSynchronizeExchangeThroughChannel Use 
			Case</a>
			<ul>
				<li><a href="#What">What Does CAASrmSynchronizeExchangeThroughChannel 
				Do</a></li>
				<li><a href="#How">How to Launch CAASrmSynchronizeExchangeThroughChannel</a></li>
				<li><a href="#Where">Where to Find the CAASrmSynchronizeExchangeThroughChannel 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how to synchronize a PLM Entity using the 
PLMBriefcase file (containing the exchange data) through the PLM Channel. It generates 
a Confirmation file containing operations done during the synchronization.</p>
<p>Synchronize updates PLM data at Receiver site with the content of the PLMBriefcase 
file received from Sender. A Confirmation file is generated during the synchronization 
process. This file captures the operations done during synchronization of the PLM 
Channel.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASrmSynchronizeExchangeThroughChannel Use Case</h2>
<p><code><strong>CAASrmSynchronizeExchangeThroughChannel</strong></code> is a use 
case of the <code><strong>CAASRMExposedServices.edu</strong></code> framework that 
illustrates <code><strong>PLMSRMExposedServices</strong></code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASrmSynchronizeExchangeThroughChannel Do</h3>
<p>Publishing Data Exchange through PLM Channel[<a href="#References">5</a>] use 
case publishes PLM Entities and stored into a PLMBriefcase file. This file has been 
sent (through email, file transfer etc) to the current site. Using this briefcase 
file, the current site synchronizes the data and generates a confirmation file (containing 
the operations done during synchronization).</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASrmSynchronizeExchangeThroughChannel</h3>
<p>To launch <code><strong>CAASrmSynchronizeExchangeThroughChannel</strong></code>, 
you will need to set up the build time environment, then compile <code><strong>CAASrmSynchronizeExchangeThroughChannel
</strong></code>along with its prerequisites, set up the run time environment, and 
then execute the use case [<a href="#References">7</a>].</p>
<p>To launch the use case execute the command:</p>
<p><code><strong>mkrun -c &quot;CAASrmSynchronizeExchangeThroughChannel <em>Repository 
Server User Password SecurityCtx Environment PLMType BriefcaseFilePath AcknowledgementFilePath 
&lt;AttributeName1&gt; &lt;value1&gt; [&lt;AttributeName2&gt; &lt;value2&gt;]</em>&quot;</strong></code></p>
<p>where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>An environment containing an authoring customization to define the type 
		of PLM data to be published</td>
	</tr>
	<tr>
		<th>PLMType</th>
		<td> A PLMType </td>
	</tr>

	
	<tr>
		<th>BriefcaseFilePath</th>
		<td>Path of the PLMBriefcase file (containing published PLM data) generated 
		at remote site. The file must exist and its extension must be &quot;.PLMBriefcase&quot;. 
		Example: &quot;C:\Temp\BriefcaseFilePath.PLMBriefcase&quot;.</td>
	</tr>
	<tr>
		<th>AcknowledgementFilePath</th>
		<td>The path of the file where to write the confirmation file (contain synchronization 
		status) generated by this use case. The file must not exist and its extension 
		must be &quot;.PLMBriefcase&quot;. Example: &quot;C:\Temp\AcknowledgeFilePath.PLMBriefcase&quot;.</td>
	</tr>
	<tr>
		<th>AttributeName1</th>
		<td>Attribute Name of PLM Component synchronized</td>
	</tr>
	<tr>
		<th>Value1</th>
		<td>Attribue Value of the PLM Component synchronized</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASrmPublishExchangeThroughChannel Code</h3>
<p>The <code><strong>CAASrmPublishExchangeThroughChannel</strong></code> use case 
is made of a single file located in the <code><strong>CAASrmPublishExchangeThroughChannel</strong></code> 
module of the <code><strong>CAASRMExposedServices.edu</strong></code> framework:</p>
<p><code>InstallRootFolder\CAADoc\CAASRMExposedServices.edu\CAASrmSynchronizeExchangeThroughChannel.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">8</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<ul>
	<li><a href="#Prolog">Prolog</a> </li>
	<li><a href="#Synchronize">Synchronize the PLM Entity</a> </li>
	<li><a href="#Epilog">Epilog</a> </li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The <code><strong>CAASrmSynchronizeExchangeThroughChannel</strong></code> use 
case begins by creating a session and connecting to the Input Repository with an 
appropriate role. The use case &quot;Creating a Basic PLM Batch&quot; [<a href="#References">8</a>] 
deals with Opening and Closing a PLM Session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Synchronize"></a>Synchronize the PLM Entity</h3>
<p>When the receiver site receives a PLMBriefcase file (generated during Publishing 
the data exchange [<a href="#References">5</a>] at Sender site) , it will then synchronizes 
the data.</p>
<p>The Receiver site begins with setting the options of synchronization and then 
synchronize the PLM data at its side.</p>
<pre class="code">...
   CATPLMExchangeChannelServices* pExchangeChannelServices = 
   				new <strong>CATPLMExchangeChannelServices</strong>();
   if (NULL!=pExchangeChannelServices)
   {
      ...
      CATBoolean <strong>allowWeakenedEntities </strong>= TRUE;
      CATPLMExchangeChannelServices::CATPLMChannelOption optionOnConflict =
      				   <strong>CATPLMExchangeChannelServices::TakeIncoming</strong>;
      HRESULT Rc = pExchangeChannelServices-&gt;<strong>SetOptionsForSynchronizeExchange</strong>
      				      (allowWeakenedEntities,optionOnConflict);
      ...
      CATString isynchroEnv = environment;
      HRESULT Rc = pExchangeChannelServices-&gt;<strong>SynchronizeExchange</strong>
      	     (ibriefcaseFilePath, iacknowledgementFilePath, isynchroEnv, ochannelId);
      ...
   }
...</pre>
<p>A call to <code><strong>CATPLMExchangeChannelServices::SetOptionsForSynchronizeExchange</strong></code> 
API allows to create weakened PLM entities and in case of a conflict, the new version 
overwrites the existing one without causing any conflicting error. Refer the Technical 
article [<a href="#References">1</a>] for the details of Synchronization options.</p>
<p><code><strong>SynchronizeExchange</strong></code> takes four arguments:</p>
<ul>
	<li><code>ibriefcaseFilePath</code>, CATUnicodeString type, path of the PLMBriefcase 
	file (containing published PLM data) generated at sender site. The file must 
	exist and its extension must be &quot;.PLMBriefcase&quot;.</li>
	<li><code>iacknowledgementFilePath</code>, CATUnicodeString type, path of the 
	file where to write the confirmation file (containing synchronization status 
	at receiver) generated by this use case. The file must not exist and its extension 
	must be &quot;.PLMBriefcase&quot;.</li>
	<li><code>isynchroEnv</code>, CATString type, an environment containing an authoring 
	customization of the chosen Modeler.</li>
	<li><code>ochannelId</code>, CATString type, the unique Channel Identification 
	between Sender and Receiver site. The same <strong>ochannelId</strong> was used 
	by the sender while publishing the PLM Data [<a href="#References">5</a>].</li>
</ul>
<p>A call to <code><strong>CATPLMExchangeChannelServices::SynchronizeExchange</strong></code> 
API generates a confirmation file (containing the operations done during synchronization). 
Receiver sends this confirmation file to the Sender who will then acknowledge the 
Data Exchange and completes the process of data exchange.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>The <code><strong>CAASrmSynchronizeExchangeThroughChannel</strong></code> use 
case ends by simply closing the PLM session. Since all use cases necessarily conclude 
by closing the PLM session, we have a dedicated article on this topic namely &quot;Creating 
a Basic PLM Batch&quot; [<a href="#References">8</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The use case illustrates how to synchronize a PLM Channel with a PLMBriefcase 
file( received from Sender site) and generates a confirmation file. The confirmation 
file is sent to the Sender who will acknowledge the Data Exchange and completes 
the process of data exchange [<a href="#References">6</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
	</tr>
	<tr>
		<td>[1]</td>
		<td><a href="CAASrmTaSupplyChain.htm">Exchanging Data Using PLM Channel</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAASrmUcInitializeChannelCreation.htm">Initializing a PLM Channel</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAASrmUcFinalizeChannelCreation.htm">Finalizing a PLM Channel</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAASrmUcAcknowledgeChannelCreation.htm">Acknowledging the PLM 
		Channel Creation</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAASrmUcPublishExchangeThroughChannel.htm">Publishing a PLM 
		Entity through a PLM Channel</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td><a href="CAASrmUcAcknowledgeExchangeThroughChannel.htm">Acknowledging 
		Data Exchange through a PLM Channel</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[8]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Creating a Basic PLM Batch</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [July 2008]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
