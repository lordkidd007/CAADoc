<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Retrieving Site Ownership Information of PLM Entity(s)</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving Site Ownership Information of PLM Entity(s)</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2><a name="Top"></a>Abstract</h2>
		<p>This article discusses the <code>CAASrmRetrieveSiteOwnershipInfo</code> 
		use case. This use case is meant for retrieving the site ownership information 
		of PLM Entities. It basically retrieves the site ownership information for 
		the input PLM Entities and then displays its site information status for 
		the current site (i.e. whether the PLM Entity belongs to the local repository 
		or to a distant one).</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASrmRetrieveSiteOwnershipInfo Use Case</a>
			<ul>
				<li><a href="#What">What Does the CAASrmRetrieveSiteOwnershipInfo 
				Do</a></li>
				<li><a href="#How">How to Launch CAASrmRetrieveSiteOwnershipInfo</a></li>
				<li><a href="#Where">Where to Find the CAASrmRetrieveSiteOwnershipInfo 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#History">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The primary objective of this use case is to familiarize the user with the API&#39;s 
meant for retrieving the site ownership information of PLM Entities.</p>
<p>The learning from the use case are: the <code>PLMSRMExposedServices</code> framework 
CAA Exposition to retrieve the site ownership information:</p>
<ul>
	<li><code>CATPLMExchangeChannelServices::GetSiteInformation</code> to retrieve 
	the site ownership information of the PLM Entities .</li>
	<li><code>CATPLMSiteStatus::GetCoreDataSitePrivilege</code> to retrieve the 
	Core Data Site Ownership information (i.e. whether the PLM Entity belongs to 
	the local repository or to a distant one).</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASrmRetrieveSiteOwnershipInfo Use Case</h2>
<p><code>CAASrmRetrieveSiteOwnershipInfo</code> is a use case of the <code>CAASRMExposedServices.edu</code> 
framework that illustrates the <code>PLMSRMExposedServices</code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASrmRetrieveSiteOwnershipInfo Do</h3>
<p>The use case begins with retrieving the identificators of the input PLM Entities. 
It then retrieves the site ownership information of all those PLM Entities , whose 
identificators are just retrieved. Further the use case retrieves whether the PLM 
Entity belongs to the local repository or to a distant one. The use case then validates 
whether the retrieved site ownership information is correct.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASrmRetrieveSiteOwnershipInfo</h3>
<p>To launch <code>CAASrmRetrieveSiteOwnershipInfo</code>, you will need to set 
up the build time environment, then compile <code>CAASrmRetrieveSiteOwnershipInfo</code>
along with its prerequisites, set up the run time environment, and then 
execute the use case [<a href="#References">1</a>].</p>
<p>To launch the use case execute the command:</p>
<p><code>mkrun -c &quot; CAASrmRetrieveSiteOwnershipInfo Repository Server User Password 
SecurityCtx PLMType PLM_ExternalID_LocalEntity majorrevision_LocalEntity PLM_ExternalID_DistantEntity 
majorrevision_DistantEntity &quot;</code></p>
<p>where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as as Host:Port_number/RootURI</td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>a string representing the security context (Role. Organization. Project). 
		Choose Role as Reviewer ( as the use case does not modify the PLM Data)</td>
	</tr>
	
	<tr>
		<th>PLMType</th>
		<td>The name of the PLMType </td>
	</tr>
	<tr>
		<th>PLM_ExternalID_LocalEntity</th>
		<td>The <code>PLM_ExternalID</code> of PLM Entity which is local to the 
		site</td>
	</tr>
	<tr>
		<th>majorrevision_LocalEntity</th>
		<td>The <code>majorrevision</code> of PLM Entity which is local to the site</td>
	</tr>
	<tr>
		<th>PLM_ExternalID_DistantEntity</th>
		<td>The <code>PLM_ExternalID</code> of PLM Entity which is distant to the 
		site</td>
	</tr>
	<tr>
		<th>majorrevision_DistantEntity</th>
		<td>The <code>majorrevision</code> of PLM Entity which is distant to the site</td>
	</tr>
</table>
<p><a name="*"></a>* The input model is retrieved by importing the <code>CAASrmRetrieveSiteOwnershipInfo_Ref.3dxml</code> 
file from the <code>CAASRMExposedServices.edu</code> framework.</p>
<p><code>InstallRootFolder\CAADoc\CAASRMExposedServices.edu\InputData\CAASrmRetrieveSiteOwnershipInfo_Ref.3dxml</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the 
folder where the API CD-ROM is installed.</p>
<p>This 3D XML file contains the PLM Product Reference with the following attributes:</p>
<ul>
	<li><code>PLM_ExternalID</code>: <code>CAASrmRetrieveSiteOwnershipInfo_Ref</code></li>
	<li><code>majorrevision</code>: A</li>
</ul>
<p><strong>Attention</strong>: Please refer to the document [<a href="#References">1</a>] 
for how to import and reimport such a 3D XML file in your PLM repository.</p>
<p><strong>NOTE</strong> : For a single execution of UC , the user have to import 
the 3D XML file twice in the following manner:</p>
<ul>
	<li>Import the 3dxml file "<strong>As New</strong>": 
	The PLMExternalID of this reference is then provided as the user case input 
	(for the Entity belonging to local site)</li>
	<li>Import the 3dxml file "<strong>As Reference</strong>":
	The PLMExternalID of this reference is then provided as the user case input 
	(for the Entity belonging to distant site)</li>
</ul>
<p>The <code>PLM_ExternalID</code> attribute value of the imported model
is typically of the format &quot;<code>YourPrefix<strong> + </strong></code><code>CAASrmRetrieveSiteOwnershipInfo_Ref</code>&quot;, 
where <code>YourPrefix</code> is the string provided as prefix, while importing 
the 3D XML file to CATIA. The prefix is of course optional &amp; the user has 
the liberty to import the model even without a prefix.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASrmRetrieveSiteOwnershipInfo
Code</h3>
<p>The <code>CAASrmRetrieveSiteOwnershipInfo</code> use case is located in the
<code>CAASrmRetrieveSiteOwnershipInfo.m</code> module of the <code>CAASRMExposedServices.edu</code> 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAASRMExposedServices.edu\CAASrmRetrieveSiteOwnershipInfo.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the 
folder where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>Following are the main steps in <code>CAASrmRetrieveSiteOwnershipInfo</code>:</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Retrieve the identificator">Retrieve the identificators of input 
	PLM Entity from underlying database</a></li>
	<li>
	<a href="#Retrieves the site ownership information for the input PLM Entities">
	Retrieves the site ownership information for the input PLM Entities</a></li>
	<li>
	<a href="#Displays the site information status for the PLM Entities site information">
	Displays the site information status for the PLM Entities site information</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The <code><strong>CAASrmRetrieveSiteOwnershipInfo</strong></code> use case begins by creating 
a session and connecting to the Input Repository. This, being the most fundamental 
prerequisite for all batch use cases, it is the first step in their execution.</p>
<p>In this case, we create a session &amp; connect to Repository with the Reviewer Role 
(since we ain&#39;t modifying PLM data). There are other parameters as well, details 
of which can be found in the &quot;<strong>Creating a Basic PLM Batch</strong>&quot; use case 
article [<a href="#References">2</a>]. This article primarily deals with Opening 
and Closing a PLM session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Retrieve the identificator"></a>Retrieve the identificators of input 
PLM Entity from underlying database</h3>
<pre class="code">
...
    <strong>CATLISTP(CATIAdpPLMIdentificator) AdpIdentificatorListofPLMRef;</strong>
    
    CATIAdpPLMIdentificator* opiIDComp = NULL;
	 
    hr = ::CAARetrieveIDofUniquePLMObject(iListAttributeName,iListAttributeValue,														
                                          iStrPLMType,opiIDComp);
    ...
    AdpIdentificatorListofPLMRef.<strong>Append</strong>(oAdpIdentifierOnInputPLMRef);
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3>
<a name="Retrieves the site ownership information for the input PLM Entities">
</a>Retrieves the site ownership information for the input PLM Entities</h3>
<p>This step is the crux of the UC. For all the input PLM Entities (whose identificators 
retrieved in [<a href="#Retrieve the identificator">#</a>]), we retrieve its 
site ownership information.</p>
<pre class="code">
...
   CATLISTP(CATPLMSiteStatus)  ListofPLMSiteStatus;
   CATPLMExchangeChannelServices* exchangeChannelServices = new CATPLMExchangeChannelServices();
   if(NULL!=exchangeChannelServices)
   {
	hr= exchangeChannelServices-&gt;<strong>GetSiteInformation</strong>(AdpIdentificatorListofPLMRef,ListofPLMSiteStatus);
	
	if(FAILED(hr) || (2!=ListofPLMSiteStatus.Size())) return 1; 	
	...
   }
...</pre>
<p>The <code>CATPLMExchangeChannelServices::GetSiteInformation</code> enables us 
to retrieves the site ownership information for a given list of PLM Entities.. This 
method takes two arguments:</p>
<ul>
	<li>AdpIdentificatorListofPLMRef, a CATLISTP(CATIAdpPLMIdentificator) type, 
	an input parameter which will contain the list of identificators of the PLM 
	Entities for which the site ownership information status is to be retrieved.</li>
	<li>ListofPLMSiteStatus, CATLISTP(CATPLMSiteStatus) type. It is an output parameter 
	which contains the list of site ownership information status corresponding to 
	the input list of PLM Entity.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3>
<a name="Displays the site information status for the PLM Entities site information">
</a></h3>
<h3>Displays the site information status for the PLM Entities site information</h3>
<p>In this step , we displays the site information status of the PLM Entities (whose 
site ownership information is retrieved in [<a href="#Retrieves the site ownership information for the input PLM Entities">#</a>]).</p>
<pre class="code">
...
   CATPLMSiteStatus* siteStatusForLocalEnt = ListofPLMSiteStatus[1];
   CATPLMSiteStatus::CATPLMSiteOwnershipInformation siteInfo = <strong>CATPLMSiteStatus::Unknown</strong>;
   if(NULL!=siteStatusForLocalEnt)
   {
	hr = siteStatusForLocalEnt-&gt;<strong>GetCoreDataSitePrivilege</strong>(siteInfo);
	if(FAILED(hr) || (<strong>CATPLMSiteStatus::Local</strong>!=siteInfo)) return 1;
   }
	
   CATPLMSiteStatus* siteStatusForDistantEnt = ListofPLMSiteStatus[2];
   if(NULL!=siteStatusForDistantEnt)
   {
	hr = siteStatusForDistantEnt-&gt;<strong>GetCoreDataSitePrivilege</strong>(siteInfo);
	if(FAILED(hr) || (<strong>CATPLMSiteStatus::Distant</strong>!=siteInfo)) return 1;
   }
...</pre>
<p>As depicted in the code abstract above, we retrieve each PLM Entity site ownership 
information(in form of <strong>CATPLMSiteStatus</strong>) and then making a call 
to <strong>GetCoreDataSitePrivilege </strong>API on it will then retrieve the information 
whether the PLM Entity belongs to local repository or to a distant one.</p>
<p>The <code>CATPLMSiteStatus::GetCoreDataSitePrivilege</code> is meant to 
retrieve the Core Data Site Ownership information (i.e. whether the PLM Entity belongs 
to the local repository or to a distant one). This method takes one argument:</p>
<ul>
	<li>siteInfo, a CATPLMSiteOwnershipInformation type, an output parameter which 
	will contain the status (local or distant) for the Site Ownership of the PLM 
	Entity.<br>
	In the current UC , we validate the retrieved site ownership information is 
	correct by checking the output value of this argument.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog </h3>
<p>The <code><strong>CAASrmRetrieveSiteOwnershipInfo</strong></code> use case ends by simply 
closing the PLM session. Since all PS use cases&nbsp; necessarily conclude by closing 
the PLM session, we have a dedicated article on this topic viz. &quot;<strong>Creating 
a Basic PLM Batch</strong>&quot; [<a href="#References">2</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The use case basically illustrates to the user the API&#39;s meant for retrieving 
the site ownership information of PLM Entities.</p>
<p>The use case first retrieves the site ownership information of all input PLM 
Entities. Further the use case retrieves whether the PLM Entity belongs to the 
local repository or to a distant one. The use case then validates whether the retrieved 
site ownership information is correct.</p>
<p>The <code>PLMSRMExposedServices</code> framework CAA Exposition to retrieve the 
site ownership information:</p>
<ul>
	<li><code>CATPLMExchangeChannelServices::GetSiteInformation</code> to retrieve 
	the site ownership information of the PLM Entities.</li>
	<li><code>CATPLMSiteStatus::GetCoreDataSitePrivilege</code> to retrieve the 
	Core Data Site Ownership information (i.e. whether the PLM Entity belongs to 
	the local repository or to a distant one).</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Creating a Basic PLM Batch</a></td>
	</tr>
	</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Aug 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>
</html>
