<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Adding a Toolbar to all Product Apps</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Adding a Toolbar to all Product Apps</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article presents the CAAPuiPRDWorkshopAddin use case which illustrates 
		how to create a toolbar that is active in all Product apps including 
		Product Structure Design.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPuiPRDWorkshopAddin Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPuiPRDWorkshopAddin Do</a></li>
					<li><a href="#How">How to Launch CAAPuiPRDWorkshopAddin</a></li>
					<li><a href="#Where">Where to Find the CAAPuiPRDWorkshopAddin 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>By implementing the <em>CATIPRDWorkshopAddin</em> interface, a toolbar with its 
commands can be made active in any Product Structure Apps. Please see article
<a href="#References">[1]</a> if the toolbar should only be made active in the Product 
Structure Design App.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPuiPRDWorkshopAddin Use Case</h2>
<p>CAAPuiPRDWorkshopAddin is a use case of the CAAProductStructureUI.edu framework 
that illustrates the ProductStructureUI framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPuiPRDWorkshopAddin Do</h3>
<p>The goal of CAAPuiPRDWorkshopAddin is to demonstrate how to implement the
<em>CATIPRDWorkshopAddin</em> interface. It consists of the following parts:</p>
<ul>
	<li>Code to create the toolbar and the layout of the commands.</li>
	<li>Code to be executed when the command is selected.</li>
	<li>Resource definition for the visual aspects of the interface.</li>
</ul>
<p>
<img alt="Product Structure Toolbar" src="images/CAAPuiPRDWorkshopAddin00.jpg"/></p>
<p>Our toolbar appears on top of the CATIA frame and contains a single command represented 
by the
<img alt="Command Icon" height="24" src="images/CAAPuiPRDWorkshopAddin_I.gif" width="24"/> 
icon.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>To Launch CAAPuiPRDWorkshopAddin</h3>
<p>To launch CAAPuiPRDWorkshopAddin:</p>
<ol>
	<li>Set the current folder to <code>InstallRootFolder\CAADoc\CAAProductStructureUI.edu</code>.</li>
	<li>Set up the build time environment and build the CAAPuiPRDWorkshopAddin.m 
		module (see reference <a href="#References">[2]</a>)</li>
	<li>Edit the <code>CNext\code\dictionary\CAAProductStructureUI.edu.dico</code> 
		dictionary by uncommenting the #CAA# from the following lines:
		<pre class="code">#CAAPuiPRDWorkshopAddin use case
#CAA# CAAPuiPRDWorkshopAddinLT CATIPRDWorkshopAddin libCAAPuiPRDWorkshopAddin
#CAA# CAAPuiPRDWorkshopAddinLT CATIWorkbenchAddin   libCAAPuiPRDWorkshopAddin</pre>
	</li>
	<li>Install the dictionary and other resource files by executing <code>mkCreateRuntimeView</code>.</li>
	<li>Start CATIA by executing <code>mkrun</code>.</li>
	<li>Start the Product Structure Design App</li>
	<li>Click on the command and a dialog box will appear:
		<p><img alt="Command" src="images/CAAPuiPRDWorkshopAddin05.jpg"/></p>
	</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPuiPRDWorkshopAddin Code</h3>
<p>CAAPuiPRDWorkshopAddin code is located in <code>InstallRootFolder\CAADoc\CAAProductStructureUI.edu\CAAPuiPRDWorkshopAddin.m\src</code>.</p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are three parts in CAAPuiPRDWorkshopAddin:</p>
<ol>
	<li><a href="#Step1">Toolbar Creation and Layout</a></li>
	<li><a href="#Step2">Command Implementation</a></li>
	<li><a href="#Step3">User Interface</a></li>
</ol>
<p>We will now detail each of those sections.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1">Toolbar Creation and Layout</a></h3>
<p>The implementation of <em>CATIPrdWorkshopAddin</em> is provided by our <em>CAAPuiPRDWorkshopAddin</em> 
class. Its purpose is to create the toolbar and to do the layout the commands on 
it. Only two methods need be defined: <a href="#CreateToolbars"><code>CreateToolbars</code></a> 
and <a href="#CreateCommands"><code>CreateCommands</code></a>.</p>
<pre class="code">...
class CAAPuiPRDWorkshopAddin: public CATBaseUnknown {

CATDeclareClass;

public:

        // Standard constructors and destructors for an implementation class
        // -----------------------------------------------------------------
        CAAPuiPRDWorkshopAddin();
        virtual ~CAAPuiPRDWorkshopAddin();

        /**
         * @see ApplicationFrame.CATIWorkbenchAddin#CreateToolbars
         */
        CATCmdContainer * CreateToolbars();

        /**
         * @see ApplicationFrame.CATIWorkbenchAddin#CreateCommands
         */
        void CreateCommands();

private:
        // The copy constructor and the equal operator must not be implemented
        // -------------------------------------------------------------------
        CAAPuiPRDWorkshopAddin(CAAPuiPRDWorkshopAddin &amp;);
        CAAPuiPRDWorkshopAddin&amp; operator=(CAAPuiPRDWorkshopAddin&amp;);

};
...</pre>
<p>The purpose of the <code>CreateToolbars</code> method is to create all the command 
headers of our toolbar. In this case a toolbar named <code>CAAToolbar</code> with 
a command named <code>CAAPuiPRDWorkshopAddinCmd1</code> is created.</p>
<pre class="code">...
CATCmdContainer * CAAPuiPRDWorkshopAddin::CreateToolbars ()<a name="CreateToolbars"></a>
{
        CAAPuiPRDWorkshopAddinTRACE(&quot;&gt;&gt; CAAPuiPRDWorkshopAddin::CreateToolbars()&quot;);

        //Section creation
        NewAccess(CATCmdContainer,pCAASection,CAAPuiPRDWorkshopConfigSection);

        // Toolbar declaration for Addin
        NewAccess(CATCmdContainer, pToolbarContainer, 
                  CAAPuiPRDWorkshopAddinToolbar);
        NewAccess(CATCmdStarter, pCommandStarter, 
                  CAAPuiPRDWorkshopAddinStarter);

        SetAccessChild((CATCmdContainer*)pCAASection, pToolbarContainer);

        // Arranging the command within the toolbar
        SetAccessCommand(pCommandStarter, &quot;CAAPuiPRDWorkshopAddinCmd1&quot;);
        SetAccessChild(pToolbarContainer, pCommandStarter);

        int visibleFlag = 1;
        AddToolbarView (pToolbarContainer, visibleFlag, Top);

        CAAPuiPRDWorkshopAddinTRACE(&quot;&lt;&lt; CAAPuiPRDWorkshopAddin::CreateToolbars()&quot;);
        return pToolbarContainer;
}
...</pre>
<p>The purpose of the <code>CreateCommands</code> method is to create all the command 
headers of our toolbar. Our command header class <code>CAAPuiPRDWorkshopAddinHeader</code>, 
is defined by way of the <code>CATCreateCommandHeader</code> method of the <code>
CATAfrCommandHeader</code> class.</p>
<p>Here a command named <code>CAAPuiPRDWorkshopAddinCmd1</code> is created. It is 
located in the <code>CAAPuiPRDWorkshopAddin</code> shared library and its class 
is <code>CAAPuiPRDWorkshopAddinCmd</code>. The ShowProduct identifier will be used 
to locate resources related to this command.</p>
<pre class="code">...
#include &quot;CATAfrCommandHeader.h&quot;
CATAfrCommandHeader::CATCreateCommandHeader(...)

...

void CAAPuiPRDWorkshopAddin::CreateCommands ()<a name="CreateCommands"></a>
{
        CAAPuiPRDWorkshopAddinTRACE(&quot;&gt;&gt; CAAPuiPRDWorkshopAddin::CreateCommands()&quot;);

	    // Instantiates the command header for the command
        CATAfrCommandHeader::CATCreateCommandHeader(&quot;CAAPuiPRDWorkshopAddinCmd1&quot;,  // command name
                                 &quot;CAAPuiPRDWorkshopAddin&quot;,                         // lib name
                                 &quot;CAAPuiPRDWorkshopAddinCmd&quot;,                      // class name
							     (void *)NULL,                                     // Arguments
							     &quot;CAAPuiPRDWorkshopAddinHeader&quot;,		           // Ressource file name
							     CATFrmAvailable);

        CAAPuiPRDWorkshopAddinTRACE(&quot;&lt;&lt; CAAPuiPRDWorkshopAddin::CreateCommands()&quot;);
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2">Command Implementation</a></h3>
<p>The command that gets executed must be of a class named <code>CAAPuiPRDWorkshopAddinCmd</code> 
as specified by <a href="#CreateCommands"><code>CAAPuiPRDWorkshopAddin::CreateCommands</code></a>. 
This class must also derives from the <code>CATCommand</code> class. The only method 
we need to override is the <code>Activate</code> method.</p>
<pre class="code">...
class CAAPuiPRDWorkshopAddinCmd: public CATCommand {

public:

        CAAPuiPRDWorkshopAddinCmd();
        virtual ~CAAPuiPRDWorkshopAddinCmd();

        /**
         * Activates our command.
         * @param iFromClient 
         * The command that requests to activate the current one.
         * @param iEvtDat
         * The notification sent.
         */
        virtual CATStatusChangeRC Activate(CATCommand * iFromClient,
                                           CATNotification * iEvtDat);
};
...</pre>
<p>In the <code>Activate</code> method, we just get the current window and display 
its title in a dialog box.</p>
<pre class="code">...
CATStatusChangeRC CAAPuiPRDWorkshopAddinCmd::Activate(CATCommand *iFromClient, 
                                                      CATNotification *iEvtDat)
{
        CAAPuiPRDWorkshopAddinTRACE (&quot;&gt;&gt; CAAPuiPRDWorkshopAddinCmd::Activate&quot;);

        CATApplicationFrame *pApplication = CATApplicationFrame::GetFrame(); 
        if (NULL != pApplication) { 
                CATDlgWindow * pMainWindow = pApplication-&gt;GetMainWindow();
                CATDlgNotify *pNotifyDlg = new CATDlgNotify
                        (pMainWindow, &quot;CAAPuiPRDWorkshopAddin&quot;, CATDlgNfyOK);
                if (NULL != pNotifyDlg) {
                        pNotifyDlg-&gt;DisplayBlocked
                                (&quot;Hello World!&quot;,
                                 &quot;CAAPuiPRDWorkshopAddin UseCase&quot;);
                        pNotifyDlg-&gt;RequestDelayedDestruction(); 
                }
        }
        RequestDelayedDestruction();

        CAAPuiPRDWorkshopAddinTRACE (&quot;&lt;&lt; CAAPuiPRDWorkshopAddinCmd::Activate&quot;);
        return CATStatusChangeRCCompleted;
}
...</pre>
<p>Now that we have completed the code implementation, we need to take care of the 
user interface with the help of resource files.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3">User Interface</a></h3>
<p>There are two visible objects: the toolbar and its command.</p>
<p>The title of the toolbar named <code>CAAPuiPRDWorkshopAddinToolbar</code> is 
defined by the <code>CAAPuiPRDWorkshopAddin.CATNls</code> which can be found in
<code>InstallRootFolder\CAADoc\CAAProductStructureUI.edu\CNext\resources\msgcatalog</code>.</p>
<pre class="code">CAAPuiPRDWorkshopAddinToolbarLT.Title = &quot;Toolbar 1&quot;;</pre>
<p>The resources of the <code>CAAPuiPRDWorkshopAddinCmd1</code> are defined by three 
files:</p>
<ol>
	<li>
		<p><code>CAAPuiPRDWorkshopAddinHeader.CATNls</code> (located in <code>InstallRootFolder\CAADoc\CAAProductStructureUI.edu\CNext\resources\msgcatalog</code>):</p>
		<pre class="code">CAAPuiPRDWorkshopAddinHeader.CAAPuiPRDWorkshopAddinCmd1.Title = &quot;cmd1&quot;;
CAAPuiPRDWorkshopAddinHeader.CAAPuiPRDWorkshopAddinCmd1.Help = &quot;cmd1 long help text&quot;;
CAAPuiPRDWorkshopAddinHeader.CAAPuiPRDWorkshopAddinCmd1.ShortHelp = &quot;cmd1 info&quot;;</pre>
		<p>These texts correspond to the screen tip, the documentation line and 
		the command prompt input</p>
	</li>
	<li>
		<p><code>CAAPuiPRDWorkshopAddinHeader.CATRsc</code> (located in <code>InstallRootFolder\CAADoc\CAAProductStructureUI.edu\CNext\resources\msgcatalog</code>) 
		defines the bitmap name for the command icon:</p>
		<pre class="code">CAAPuiPRDWorkshopAddinHeader.CAAPuiPRDWorkshopAddinCmd1.Icon.Normal=&quot;CAAPuiPRDWorkshopAddin_I&quot;;</pre>
	</li>
	<li>
		<p><code>CAAPuiPRDWorkshopAddin_I.gif</code> (located in <code>InstallRootFolder\CAADoc\CAAProductStructureUI.edu\CNext\resources\graphic\icons\normal</code>) 
		contains the bitmap the command icon:
		<img alt="Command Icon" height="24" src="images/CAAPuiPRDWorkshopAddin_I.gif" width="24"/></p>
	</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort">In Short</a></h2>
<p>This use case has demonstrated how to create a toolbar with a command:</p>
<ul>
	<li>Implement the <em>CATIPRDWorkshopAddin</em> interface to create a toolbar 
		and layout the commands.</li>
	<li>Derive from CATCommand to implement the command action.</li>
	<li>Define resource files for the user interface.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References">References</a></h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAPuiUcPrsConfigAddin.htm">Adding a Toolbar to the Product 
		Structure Workshop</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History">History</a></h2>
<table class="history">
	<tr>
		<td>Version: 1.2 [Jan 2007]</td>
		<td>Document revised</td>
	</tr>
	<tr>
		<td>Version: 1.1 [Aug 2004]</td>
		<td>Document revised</td>
	</tr>
	<tr>
		<td>Version: 1 [Oct 2003]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
