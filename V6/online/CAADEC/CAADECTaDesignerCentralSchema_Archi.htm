<html xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>CAA Schema (CSE) Architecture</title>
 <script language="JavaScript" src="../CAADocJavaScript/submit.js"></script>

<style type="text/css">
.style3 {
	margin-left: 80px;
}
</style>

</head>

<body>
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1>CAA Schema (CSE) Architecture</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Technical Article&nbsp;</td>
	</tr>
</table>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td style="height: 86px" >
      <h2><a name="Top"></a>Abstract</h2>
      <p>This article describes about the CAA Specific schema for X-CAD Integration. This schema is added by ENOVIA 
		X-CAD for 
		basic scenario, or more specifically the Integration Exchange 
		Framework (IEF) which is installed with ENOVIA products.&nbsp; 
		<p>This Types are specific for CAA to run CAA Usecases.</td>
  </tr>
  
  </table>



<!---------------------------------comment------------------------------------->

<h3> X-CAD Data Model For CAA</h3>
<p> This section describes the Data model which  is used For CAA Application for 
basic scenario.</p>
	<table style="width: 100%">
		
		<caption><a name="Fig.1"></a>Fig.1 Hierarchy of Objects in X-CAD Specific to CAA 
		(Basic scenario)</caption>
	    <tr>
			<td>
			<img alt="" src="images/CAADECTaDEC_CAASchema_image01.jpg" width="728" height="564"></td>
		</tr>
		<tr>
			<td>
			<img alt="" src="images/CAADECTaDEC_Schema_image00.jpg" width="497" height="257"></td>
		</tr>
	</table>

<p> This data is created by executing "tcl" Program . A CAA Specific Sample Tcl 
Program " InstallCAASchemaObjects.tcl"  is provided with installation. 
Installation details described in article [<a href="#References">2</a>].</p>
<p> Data model of CAA will form following structure in the Enovia and CAD tool.</p>
<table>
	<caption>CAD Structure As seen in CAD Tool. (e.g. MyX-CAD)
</caption>
	<tr>
		<td>
		<img src="images/CAADECTaDesignerCentralSchema_Archi_image1.jpg" width="490" height="247"></td>
	</tr>
</table>
<table>
	<caption>  CAD Structure as seen in ENOVIA after first Save
</caption>
	<tr>
		<td>
		<img src="images/CAADECTaDesignerCentralSchema_Archi_image1_1.jpg" width="573" height="307"></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>

<h3>CAA X-CAD Integration Schema Installer structure </h3>
<p>Here we illustrating CAA schema Installer in detail. Basically we could 
consider this as sample schema based on this user could create its own schema 
and use for own application. This Schema creation we divided into two parts. 
These two steps triggered from one single TCL file (<code>installCAASchemaInstallerV6R2014x.tcl</code>). 
Before running schema modify paths inside if required. </p>
<ul>
	<li>Type/Format creation </li>
	<li>Adding configuration objects and configuring it</li>
</ul>
<p>Below sections shows that Type and formats to be created and configuration 
objects how sequentially managed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<h3>CAA Type and Format creation</h3>
<p>In CAA Type creation we are creating 4 types and 2 formats for each 
type/format we have created one XML . User could create its own type 
instead of CAA also.&nbsp; Please note that only bold marked types and formats 
required for basic scenario we will discuss rest in assembly scenario. </p>


<table>
	<caption>File mapping for Types/formats</caption>
	<tr>
		<td>
		<img src="images/CAADECTaDEC_Schema_image7.jpg" width="581" height="360"></td>
	</tr>
</table>

<p>All these types/formats listed inside the 
<strong>SchemaManifest_CAADesignerCentralIntegration.xml.</strong> XML format of these files 
detailed below</p>

<ul>
	<li>
	<h4>LListing all types and formats in - SchemaManifest_CAADesignerCentralIntegration.xml</h4>
	</li>
</ul>
<pre>&lt;SchemaManifest&gt; 
	&lt;ApplicationName&gt;CAA Designer Central Integration&lt;/ApplicationName&gt; 
	&lt;SchemaList&gt; 
		&#8230;
		&lt;type&gt; 
			type_CAAComponent
			type_CAAVersionedComponent 
			type_CAAAssembly 
			type_CAAVersionedAssembly 
		&lt;/type&gt;
		&lt;format&gt; 
			format_CAAcmp
			format_CAAasm 
		&lt;/format&gt; 
		&#8230;
	&lt;/SchemaList&gt;
&lt;/SchemaManifest&gt;</pre>
<p>&nbsp;</p>
<ul>
	<li>
	<h4>Type XML </h4>
	</li>
</ul>
<pre>&lt;SchemaDefinition&gt; 
	&lt;AdminType&gt; type &lt;/AdminType&gt; 
	&lt;OriginalName&gt; CAA Assembly &lt;/OriginalName&gt; 
	&lt;SymbolicName&gt; type_CAAAssembly &lt;/SymbolicName&gt; 
	&lt;VersionHistory Version=&quot;V6R2014x&quot;&gt; 
		&lt;CommandInfo&gt; &lt;Application Version=&quot;V6R2014x&quot;&gt; Framework &lt;/Application&gt; 
			&lt;Description&gt; &lt;![CDATA[ Pre 11 Schema Changes ]]&gt; &lt;/Description&gt; 
			&lt;Command Type=&quot;MQL&quot;&gt; 
			&lt;![CDATA [
			add Type &quot;&lt;SYM&gt;type_CAAAssembly&lt;/SYM&gt;&quot; 
			description &quot;CAA Assembly&quot; 
			derived &quot;&lt;SYM&gt;type_MCADAssembly&lt;/SYM&gt;&quot;
			]]&gt; 
			&#8230;
			&lt;/Command&gt; 
		&lt;/CommandInfo&gt; 
	&lt;/VersionHistory&gt; 
&lt;/SchemaDefinition&gt;</pre>
<ul>
	<li>
	<h4>Format XML </h4>
	</li>
</ul>
<pre>&lt;SchemaDefinition&gt; 
	&lt;AdminType&gt; format &lt;/AdminType&gt; 
	&lt;OrignalName&gt; CAAasm &lt;/OrignalName&gt; 
	&lt;SymbolicName&gt; format_CAAasm &lt;/SymbolicName&gt; 
	&lt;VersionHistory Version=&quot;V6R2014x&quot;&gt; 
		&lt;CommandInfo&gt; &lt;Application Version=&quot;V6R2014x&quot;&gt; Framework &lt;/Application&gt; 
			&lt;Description&gt; &lt;![CDATA[ Pre 11 Schema Changes ]]&gt; &lt;/Description&gt; 
			&lt;Command Type=&quot;MQL&quot;&gt; 
			&lt;![CDATA[ add format &quot;&lt;SYM&gt;format_CAAasm&lt;/SYM&gt;&quot;
			description &quot;CAA Assembly file format&quot; 
			suffix &quot;.CAAasm&quot; 
			nothidden 
			]]&gt; 
			&lt;/Command&gt; 
		&lt;/CommandInfo&gt; 
	&lt;/VersionHistory&gt; 
&lt;/SchemaDefinition&gt;</pre>
<script type="text/javascript">insertLinkToTop();</script>
<h3>Admin/config Object creation and configuration</h3>
<p>After creation of type create Admin type and configure them. Here mainly we 
are Creating GCO for CAA . the we are defining Policies , Roles, relationships, 
formats, types and mapping between them. </p>
<p>For better understanding of this we could refer InstallCAASchemaObjects.tcl. 
Please note that if user creating its own types user have to change 
InstallCAASchemaObjects.tcl this file and make appropriate changes for its own 
type. (Refer all CAA keywords and make changes accordingly)</p>
<p>After creation of <code>CAANewArchi </code>GCO user could check inside matrix.</p>
<p>Following few code snippets/methods describes important steps for installing schema. 
&nbsp;</p>
<ul class="style3">
	<li><strong>InstallCAASchemaObjectsMain.tcl</strong><ul>
		<li><strong>Register CAA integration to IEF </strong>
		<ul>
			<li><pre>mql execute program $sIEFRegisterIntegration -method registerIntegrationToIEF "CAA" $sIntegration_Version $sInstalled_Date "CAANewArch"]</pre></li>
		</ul>
		</li>
		<li>Call <strong>to MCADInteg-InstallCAAAdminObjects</strong> method 
		(This method explained below)&nbsp;</li>
		<li><strong>Register role for schema </strong>
		<ul>
			<li><pre>mql execute program $sIEFRegisterIntegration -method registerRoleWithIntegration "<strong>CAA</strong>" "<strong>CAA User</strong>" "<strong>CAANewArch</strong>"]</pre></li>
		</ul>
		</li>
	</ul>
	</li>
	<li><strong>InstallCAASchemaObjects.tcl&nbsp;</strong><ul>
		<li> <strong>MCADInteg-InstallCAAAdminObjects<span lang="en-us"> -
		</span></strong><span lang="en-us">This method calls below methods in 
		sequence </span>
		<ul>
			<li>add types
 	<strong>CAAInteg-InstallGlobalConfig</strong></li>
			<li>add formats <strong>MCADInteg-InstallCAAFormats </strong></li>
			<li>modify basic types
	<strong>MCADInteg-ModifyCADToolBasicTypes </strong></li>
			<li>add relationships
	<strong>MCADInteg-InstallCAARelationships </strong></li>
			<li>add roles
	<strong>MCADInteg-InstallRoles</strong> </li>
			<li>add/modify CAA Policies
	<strong>MCADInteg-InstallCAAPolicies </strong></li>
			<li>add bus objects
	<strong>MCADInteg-InstallCADToolBusObjects </strong></li>
		</ul>
</li>
	</ul>
	</li>
</ul>

<p>Below we are explaining methods in brief</p>
<ul>
	<li><h4>add types
 	<strong>CAAInteg-InstallGlobalConfig</strong></h4></li>
</ul>
<table>
	<tr>
		<td>
		<img src="images/CAADECTaDesignerCentralSchema_Archi_image2.jpg" width="677" height="338"></td>
	</tr>
</table>
<ul>
	<li><h4>add formats <strong>MCADInteg-InstallCAAFormats </strong></h4></li>
</ul>
<p>Install Formats   .CAAasm and .CAAcmp
</p>
<pre>MCADInteg-InstallFormat $install_dir $sCAAasm 
MCADInteg-InstallFormat $install_dir $sCAAcmp
</pre>
<ul>
	<li><h4>modify basic types
	<strong>MCADInteg-ModifyCADToolBasicTypes </strong></h4></li>
</ul>
<p>This function is a hook for modifying any basic types installed by  the schema so far. These could be AEF types like CAD Model also     e.g - This is the place to add 
properly like related type

</p>
<p>Making CAAAssembly related type with CAAVersionedAssembly and vice versa
</p>
<p>Making CAAComponent related type with  CAAVersionedComponentand vice versa
</p>
<ul>
	<li><h4>add relationships
	<strong>MCADInteg-InstallCAARelationships </strong></h4></li>
</ul>
<p>Here we set same relationships that MCAD have  and it will automatically inherited in CAA objects as CAA types derived from MCAD types
</p>
<table>
	<caption>CAD SubComponent Realtionship</caption>
	<tr>
		<td>
		<img src="images/CAADECTaDesignerCentralSchema_Archi_image4.jpg" width="686" height="212"></td>
	</tr>
</table>
<table>
	<caption>VersionOf  Relationships</caption>
	<tr>
		<td>
		<img src="images/CAADECTaDesignerCentralSchema_Archi_image5.jpg" width="673" height="194"></td>
	</tr>
</table>
<pre>set sAdminType "relationship"
set sAbrevation "rel"
set sComponent [MCADInteg-GetAdminTypeActualName "type_MCADComponent"]} 
set sVersionedComponent [MCADInteg-GetAdminTypeActualName "type_MCADVersionedComponent"]} 
set sAssembly [MCADInteg-GetAdminTypeActualName "type_MCADAssembly"]} 
set sVersionedAssembly [MCADInteg-GetAdminTypeActualName "type_MCADVersionedAssembly"]} 
set sRenamedFrom [MCADInteg-GetAdminTypeActualName "attribute_RenamedFrom"]} 
set sMCADIntegRevReplacedFrom [MCADInteg-GetAdminTypeActualName "attribute_MCADInteg-RevReplacedFrom"]} 
</pre>
<ul>
	<li><h4>add roles
	<strong>MCADInteg-InstallRoles</strong></h4> </li>
</ul>
<table>
	<tr>
		<td>
		<img src="images/CAADECTaDesignerCentralSchema_Archi_image3.jpg" width="164" height="453"></td>
	</tr>
</table>
<pre>set sCAAUser  "CAA User"
set name  $sCAAUser
mql $sAddOrModify role $name \		
               nothidden \	
               description "Has access to use CAA integration" \
               parent $sIEFIntegrationsUser \
               property IEF-IntegrationAssignments value "CAA~CAANewArch;";
</pre>
<ul>
	<li><h4>add/modify CAA Policies
	<strong>MCADInteg-InstallCAAPolicies </strong></h4>
	<ul>
		<li>CAADesignPolicy </li>
		<li>CAAVersionedDesignPolicy</li>
	</ul>
	</li>
</ul>
<p>&nbsp;Both policy made according to - CAA types, formats, user, policy, templete

CAAAssembly
CAAComponent
CAAVersionedAssembly
CAAVersionedComponent
CAAVersionedDesignPolicy
CAADesignPolicy
CAAComponentTemplate
CAAAssemblyTemplate
CAAVersionediAssembly
CAAcmp
CAAasm
CAAUser

</p>
<ul>
	<li><h4>add bus objects
	<strong>MCADInteg-InstallCADToolBusObjects </strong></h4></li>
</ul>
<p>Modify CAA GCO setting as per CAA types, formats , policies, roles
</p>
<pre>$sMCADIntegBusTypeMapping "assembly|$sCAAAssembly 
         	component|$sCAAComponent
$sIEFReleasedState "$sCAADesignPolicy|$sRelease
$sIEFFinalizationState "$sCAADesignPolicy|$sApproved
$sMCADIntegTypePolicyMapping "$sCAAComponent|$sCAADesignPolicy,$sDesignPolicy
	$sCAAAssembly|$sCAADesignPolicy,$sDesignPolicy 
	$sCAAVersionedComponent|$sCAAVersionedDesignPolicy,$sVersionedDesignPolicy
	$sCAAVersionedAssembly|$sCAAVersionedDesignPolicy,$sVersionedDesignPolicy" \
$sMCADIntegTypeFormatMapping "component|$sCAAComponent,$sCAAcmp
	assembly|$sCAAAssembly,$sCAAasm" \
$sIEFTypeTemplateMapping "component|$sCAAComponentTemplate
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="GCO Settings"></a>GCO Settings h3>
<p>The GCO object for an integration contains the values required for a CAA 
Sample 
business process. With installation as per above description followings settings 
will be done in GCO. </p>
<p>The key attributes defined in a GCO object are detailed below: Please note 
that for Positioning matrix you can refer settings mentioned in [<a href="#References">1</a>] ] 
article.</p>
<p><span class="cmdname">MCADInteg-TypeFormatMapping</span> </p>
<pre class="codeblock">component|CAAComponent,CAAcmp
</pre><pre class="codeblock">assembly|CAAAssembly,CAAasm</pre>
<p><span class="cmdname">MCADInteg-BusTypeMapping</span> </p>
<pre class="codeblock">assembly|$sCAAAssembly
</pre><pre class="codeblock">component|$sCAAComponent
</pre>
<p><span class="cmdname">MCADInteg-RelMapping</span> </p>
<pre class="codeblock">CADSubcomponent|to,$sCADSubComponent 
</pre><p> <span class="cmdname">MCADInteg-TypePolicyMapping</span> </p>
<pre class="codeblock">$sCAAComponent|$sCAADesignPolicy,$sDesignPolicy
</pre><pre class="codeblock">$sCAAAssembly|$sCAADesignPolicy,$sDesignPolicy</pre><pre class="codeblock">$CAAVersionedComponent|$sCAAVersionedComponent,$sVersionedDesignPolicy
</pre><pre class="codeblock">$CAAVersionedAssembly|$sCAAVersionedAssembly,$VersionedDesignPolicy
</pre>
<p><span class="cmdname">MCADInteg-DisableConfigurations</span> </p>
<pre class="codeblock">TRUE
</pre><p><span class="cmdname">MCADInteg-CreateDerivedOutputObj</span> </p>
<pre class="codeblock">FALSE
</pre>
<p><span class="cmdname">MCADInteg-RenameFilesInServer</span> </p>
<pre class="codeblock">TRUE
</pre><p><span class="cmdname">MCADInteg-EnableHashcodeComputation</span> </p>
<pre class="codeblock">FALSE
</pre><p><span class="cmdname">MCADInteg-NonSupportedCharacters</span> </p>
<pre class="codeblock">/\\|&lt;&gt;*$?;:@
</pre><p><span class="cmdname">MCADInteg-TypeChangeMapping</span> </p>
<pre class="codeblock">
</pre><p><span class="cmdname">IEF-TypeTemplateMapping</span> </p>
<pre class="codeblock">component|$sCAAComponentTemplate
</pre><pre class="codeblock">assembly|$sCAAAssemblyTemplate
</pre><p><span class="cmdname">IEF-Pref-MCADInteg-DefaultTypePolicySettings</span> </p>
<pre class="codeblock">(DEFAULTVALUE)$sCAAComponent|$sCAADesignPolicy,$sCAAVersionedDesignPolicy
</pre><pre class="codeblock">(DEFAULTVALUE)$sCAAAssembly|$sCAADesignPolicy,$sCAAVersionedDesignPolicy</pre>
<p> &nbsp;</p>
<script type="text/javascript">insertLinkToTop();</script>

<h2><a name="In short"></a>In Short</h2><p>This article has detailed the schema 
installed by IEF in an ENOVIA stack which is CAA Specific . Integrations inherit 
from this schema to run CAA Usecases to define their own integration specific 
schema created.</p>
<script type="text/javascript">insertLinkToTop();</script>

<h2><a name="References"></a>References    h2>
 <table>
     <tr>
      <td >[1]</td>
      <td style="width: 341px" ><a href="CAADECTaDEC_Schema.htm"> X-CAD Schema For client Integrations </a></td>
     </tr> 
     <tr>
      <td >[2]</td>
      <td style="width: 341px" >
		<a href="CAADECTaDesignerCentralSchema_InstallGuide.htm">CAA Schema (CSE) Installation Guide</a></td>
     </tr>   
           
   </table>
   
<!---------------------------------comment------------------------------------->
<h2><a name="History"></a>History </h2> <table><tr>
    <td valign="top"><strong>Version</strong>: [Mar 2012]</td>
    <td valign="top">Document created</tr>
  <tr>
<script type="text/javascript">insertLinkToTop();</script>
  </tr>
</table>

<!---------------------------------comment------------------------------------->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
