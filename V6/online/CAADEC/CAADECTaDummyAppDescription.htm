<html xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>How to Launch a DEC Use Case</title>
 <script language="JavaScript" src="../CAADocJavaScript/submit.js">
		</script>

</head>

<body>
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Basic Scenario Description</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td >
      <h2><a name="Top"></a>Abstract</h2>
      <p>The article describes the flow and basic steps of the Dummy 
		Application. An overview of the integrations 
		of client applications with ENOVIA using the X-CAD is 
		detailed in the technical article [<a href="#References">1</a>]. It is 
		important to understand this is only sample application, user could 
		create its own application and replace this.&nbsp; <ul>
		<li><a href="#Before connection">Before connection</a></li>
		<li>
		<a href="#Propagate Files on local  from user application (CAD/Non CAD)">Propagate Files on local&nbsp; from user application (CAD/Non CAD)</a></li>
		<li><a href="#Connecting User application to DEC">Connecting User 
		application to X-CAD 
		</a></li>
		<li>
		<a name="The Java Dummy client0" href="#The JAVA xApp Sample Client">The JAVA xApp Sample Client</a></li>
		<li>
		<a name="Launching0" href="#Flow of the xApp Sample client Application">Flow of the xApp Sample client Application</a></li>
		<li><a href="#Checkin">Checkin to manage file on server </a></li>
		<li><a href="#Checkout_">Checkout to retrieve file from server </a></li>
		<li><a href="#Logout_">Logout as last Steps </a></li>
		<li><a href="#LogicalSteps0">Summary of Logical Steps to Run the application</a></li>
		<li><a href="#Output">Output of the X-CAD Use Case</a></li>
		<li><a href="#References">References</a></li>
		</ul>
	</td>
  </tr>
  
  </table>

<!---------------------------------comment------------------------------------->

<h3><a name="Before connection"></a>Before connection</h3>
<p>Here we are describing steps in addition to how flow should be to interact 
with Enovia through X-CAD.</p>
<p>As begin with user need to install Enovia server and IEF client. Make sure that all basic setups 
done as mentioned in detail in the [<a href="#References">2</a>] article. </p>
<ul>
	<li>Start Enovia server .&nbsp; </li>
	<li>launch IEF client on client machine. </li>
</ul>
<h3><a name="Propagate Files on local  from user application (CAD/Non CAD)"></a>Propagate Files on local&nbsp; from user application (CAD/Non CAD)</h3>
<p>Mostly here we are dealing with client application (CAD /Non CAD ) those 
saves their files locally on disk. considering this we save user application 
data (files) locally first, It may be temporary folder for user convenience, 
since in further steps we managing this data on servers.&nbsp; Please note that 
though here we are saving data locally but final aim is to manage all data on 
Enovia server seamlessly. </p>
<p>Here it is very important to know flow to develop integration application 
(Pluginns/parsers) for user application.</p>
<h3><a name="Connecting User application to DEC"></a>Connecting User application 
to X-CAD </h3>
<p>LoginIn this will give access to communication with Enovia server through 
X-CAD. For login we have to provide credentials mentioned as in login article [3]. For this user need one xml file that is respecting LoginEx command protocol 
[3].</p>
<p>To write this xml file, application could have its own parser and create xml on the 
run as per input/reqired parameters.&nbsp; As we know how to launch use case article[] we 
have mentioned process for launching use case in addition to that&nbsp; we have provided one&nbsp; 
sample login xml file and xApp Sample client.</p>
<p>This use case using xAppSampleClient&nbsp;to send and receive xml file to IEF 
client which is running on user local machine.&nbsp; More info about this xApp 
sample mentioned in next two sections. </p>
<p>Please note that this x app client is illustration for connection to server, 
user could develop its own application for xml send receive to X-CAD.</p>
<h3><a name="The Java Dummy client"></a><a name="The JAVA xApp Sample Client">The JAVA xApp Sample Client</a></h3>
<p>The technical article [<a href="#References">1</a>] gives an overview of the 
client integrations with ENOVIA using X-CAD. In the context of the 
Use Cases which illustrate the X-CAD Openness, the client application involved in an integration with ENOVIA 
X-CAD, is simulated 
using a Java xApp sample client. This client can send all the silent commands 
which are sent by a client integration to the IEF Client. The response XML 
received from the IEF Client is then saved on the client machine. Please note 
that this is a sample Dummy program user could create its own integration and 
use in similar way to communicate with IEF Client. </p>
<script type="text/javascript">insertLinkToTop();</script>

<h3><a name="Launching"></a>
<a name="Flow of the xApp Sample client Application">Flow of the xApp Sample client Application</a></h3>
<p>xAppSample client Application basically communicate with the IEF Client. The pseudo code 
of this application as mentioned below.</p>
<ul>
	<li>Invoke the Port<ul>
		<li>Identify the Operating System (OS)</li>
		<li>Retrieve the Port </li>
	</ul>
	</li>
	<li>Create Socket </li>
	<li>Write the content of Request xml file to socket&nbsp; (Sending request 
	xml to socket)</li>
	<li>read the content from socket (Retrieve response from socket)</li>
	<li>Close Socket</li>
</ul>
<table>
	<caption>FIg.1 Dummy Application </caption>
	<tr>
		<td>
		<img alt="" src="images/CAADECTaDummyApplication_image1.jpg" width="340" height="258"></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="Checkin"></a>CheckIn to manage file on server </h3>
<p>This will be the&nbsp; step for propagating local file on X-CAD Enovia server 
from application. we refer to article [<a href="#References">5</a>] for info in 
detail. </p>
<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="Checkout_">Checkout</a> to retrieve file from server </h3>
<p>This will be the last step where we could retrieve files from from X-CAD Enovia 
server to the user application. we refer to article [6] for further reference.</p>
<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="Logout_">Logout</a> as last Steps </h3>
<p>This will be the last step for the disconnection of application from X-CAD Enovia server. we refer to article [6] for further reference</p>
<p>&nbsp;</p>
<script type="text/javascript">insertLinkToTop();</script>
<h3>Summary of <a name="LogicalSteps0"></a>Logical Steps to Run the application</h3>
<ul>
	<li>As we could see in the architecture of the X-CAD integration overview [<a href="#References">1</a>], 
	before running dummy application IEF client should be running. </li>
	<li>Next thing is before sending any other command first logical step is to 	<strong>Login</strong> to Enovia (X-CAD server), means very first command 
	should be Login [<a href="#References">3</a>]. This will create login session.</li>
	<li>Then we could send any desire commands. it means all command should 
	running within login session. like Checkin, Chekout.</li>
	<li>Final step before closing integration is to <strong>Logout</strong> from 
	Enovia (X-CAD server), so last command will be Logout [<a href="#References">4</a>] . This will end login 
	session. </li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>

<h3><a name="Output"></a>Output of the X-CAD Use Case</h3>
<p>In the previous section we detailed the steps involved to launch a X-CAD Use 
Case. Primarily, it simply involves sending a request XML to the IEF Client. On 
command execution, the IEF Client sends a response XML back to the CSE. This 
response XML is retrieved and subsequently stored at the same location from 
where our command was launched. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->


<h2><a name="References"></a>References   </h2> <table>
     <tr>
    
       
       <td >[1]</td>
       <td>
       <a href="CAADECTaDesignerCentralIntegrationOverview.htm">Integrating Client Applications with 
		X-CAD - An Overview</a></td>
     </tr>
<tr>
       <td >[2]</td>
       <td>
       <a href="CAADECTaLaunchingDECUseCases.htm">How to Launch a X-CAD Use Case</a></td>
     </tr>
    <tr>
       <td >[3]</td>
       <td>
       <a href="CAADECUcLogIn.htm">Login to Enovia</a></td>
     </tr>

        <tr>
       <td >[4]</td>
       <td>
       <a href="CAADECUcLogOut.htm">Logout from Enovia</a></td>
     </tr>



        <tr>
       <td >[5]</td>
       <td>
       <a href="CAADECUcCheckIn.htm">CheckIn to ENOVIA</a></td>
     </tr>



        <tr>
       <td >[6]</td>
       <td>
       <a name="Top0"></a><a href="CAADECUcCheckOut.htm">CheckOut Document from ENOVIA</a></td>
     </tr>



        



   </table>
   
<!---------------------------------comment------------------------------------->
<h2><a name="History"></a>History <table>
  <tr>
    <td valign="top"><strong>Version</strong>: [March 2011]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
<script type="text/javascript">insertLinkToTop();</script>
  </tr>
</table>

<!---------------------------------comment------------------------------------->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>


