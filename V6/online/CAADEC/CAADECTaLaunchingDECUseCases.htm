<html xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>How to Launch a DEC Use Case</title>
 <script language="JavaScript" src="../CAADocJavaScript/submit.js">
		</script>

<style type="text/css">
.style1 {
	color: #FF7900;
	text-decoration: underline;
}
</style>

</head>

<body>
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>How to Launch a X-CAD Use Case</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td >
      <h2><a name="Top"></a>Abstract</h2>
      <p>The article illustrates the steps involved to launch a X-CAD Use Case. A 
		X-CAD Use Case primarily simulates different commands which exist in the 
		scope of a client integration with X-CAD. An overview of the integrations 
		of client applications with ENOVIA using the X-CAD is 
		detailed in the technical article [<a href="#References">1</a>].<ul>
		<li><a href="#The Java Dummy client"><span class="style1">The</span> JAVA xApp Sample Client</a></li>
		<li><a href="#Launching">Launching the X-CAD Use Case</a></li>
		<li><a href="#Output">Output of the X-CAD Use Case</a></li>
		<li><a href="#Flow">Flow</a></li>
		<li><a name="LogicalSteps1" href="#LogicalSteps0">Summary of Logical Steps to Run the application</a></li>
		<li><a href="#References">References</a></li>
		</ul>
	</td>
  </tr>
  
  </table>

<!---------------------------------comment------------------------------------->

<h3><a name="The Java Dummy client"></a>The JAVA xApp Sample&nbsp; Client</h3>
<p>The technical article [<a href="#References">1</a>] gives an overview of the 
client integrations with ENOVIA using X-CAD. In the context of the 
Use Cases which illustrate the X-CAD Openness, the client application involved in an integration with ENOVIA 
X-CAD, is simulated 
using a Java xApp Sample client. The xApp Sample client can send all the silent commands 
which are sent by a client integration to the IEF Client. The response XML 
received from the IEF Client is then saved on the client machine. <strong><em>Please note 
that this is a sample xApp program user could create its own integration and 
use in similar way to communicate with X-CAD. </em></strong> </p>
<script type="text/javascript">insertLinkToTop();</script>

<h3><a name="Launching"></a>Launching the X-CAD Use Case</h3>
<p>The steps involved to launch a X-CAD Use Case are listed below:</p>
<ul>
	<li>Start ENOVIA Server. It simply involves launching the ENOVIA Live 
	Collaboration Server (in non-RIP mode) and subsequently the application 
	server (Tomcat for eg.) which hosts ENOVIA </li>
	<li>Start X-CAD Engine (IEF Client Service). This simply involves launching 
	the StartService.bat which exists in the IEF Client installation directory. 
	This will launch the IEF Client connected to the ENOVIA server specified 
	during the IEF Client installation</li>
	<li>Open command prompt</li>
	<li>Go to the directory CAADECxAppSample where the IEFCommandsClient.java exists. 
	This directory comes with the X-CAD Use Cases installation or copy this java 
	file to desire folder and compile to create .jar file </li>
	<li>Create a class file of this java file by running the command <strong>
	javac IEFCommandsClient.java</strong><br>
		<pre class="code">CAADECIntegration.edu\CAADECxAppSample.mj\src\com\dassault_systemes&gt;<strong>javac IEFCommandsClient.java</strong></pre></li>
	
	<li>Next we launch our xApp Sample client by running the command java <strong>
	IEFCommandsClient Request.xml. </strong>Here Request.xml represents any XML 
	that corresponds to our silent command and assumes that it exists in the 
	same folder as our (Sample XML files are provided in InputData Folder).class file. A significant point to note is that to run 
	any silent command, a prerequisite is logging into ENOVIA. This is realized 
	with the LoginRequest.xml provided, which realizes logging into ENOVIA from 
	a CAD Integration. A sample launch is illustrated below: (Please note that 
	you need to find <strong>IEFCommandsClient .</strong>jar file and run 
	program accordingly)<pre class="code"><strong>java IEFCommandsClient LoginRequest.xml</strong></pre></li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="Output"></a>Output of the X-CAD Use Case</h3>
<p>In the previous section we detailed the steps involved to launch a X-CAD Use 
Case. Primarily, it simply involves sending a request XML to the IEF Client. On 
command execution, the IEF Client sends a response XML back to the CSE. This 
response XML is retrieved and subsequently stored at the same location from 
where our command was launched. </p>
<script type="text/javascript">insertLinkToTop();</script>

<h3><a name="Flow"></a>Flow</h3>
<p>Here we are describing flow require to interact 
with Enovia through X-CAD.</p>
<p>As begin with user need to install Enovia server and IEF client. Make sure 
that all basic setups done as mentioned in detail above section. </p>
<ul>
	<li>Create schema for types (use tcl )<ul>
		<li>For CSE server side schema installation we have to write TCL file, 
		sample file for CAA specific data we have provided in <code>CAADECIntegration.edu\InputData\CAAUcDECAppData\InstallCAASchemaObjects.tcl</code></li>
		<li>Please note that this is just a sample user have to create 
		same for its own data types. </li>
	</ul>
	</li>
	<li>Start Enovia server .&nbsp; </li>
	<li>launch IEF client on client machine. </li>
</ul>
<h4><a name="Propagate Files on local  from user application (CAD/Non CAD)"></a>Propagate Files on local&nbsp; from user application (CAD/Non CAD)</h4>
<p>Mostly here we are dealing with client application (CAD /Non CAD ) those 
saves their files locally on disk. considering this we save user application 
data (files) locally first, It may be temporary folder for user convenience, 
since in further steps we managing this data on servers.&nbsp; Please note that 
though here we are saving data locally but final aim is to manage all data on 
Enovia server seamlessly. </p>
<p>Here it is very important to know flow to develop integration application 
(Plug inns/parsers) for user application.</p>
<h4><a name="Connecting User application to DEC"></a>Connecting User application 
to X-CAD </h4>
<p>LoginIn this will give access to communication with Enovia server through 
X-CAD. For login we have to provide credentials mentioned as in login article [<a href="#References">2</a>]. For this user need one xml file that is respecting LoginEx 
command protocol. To write this xml file, application could have its own parser and create xml on the 
run as per input/reqired parameters.&nbsp; </p>
<p>This use case using xAppSampleClient&nbsp;to send and receive xml file to IEF 
client which is running on user local machine.&nbsp; More info about this xApp 
sample mentioned in next sections. Please note that this xApp client is illustration for connection to server, 
user could develop its own application for xml send receive to X-CAD.</p>
<script type="text/javascript">insertLinkToTop();</script>

<h4><a name="Launching0"></a>
<a name="Flow of the xApp Sample client Application">Flow of the xApp Sample client Application</a></h4>
<p>xAppSample client Application basically communicate with the IEF Client. The pseudo code 
of this application as mentioned below.</p>
<ul>
	<li>Invoke the Port<ul>
		<li>Identify the Operating System (OS)</li>
		<li>Retrieve the Port </li>
	</ul>
	</li>
	<li>Create Socket </li>
	<li>Write the content of Request xml file to socket&nbsp; (Sending request 
	xml to socket)</li>
	<li>read the content from socket (Retrieve response from socket)</li>
	<li>Close Socket</li>
</ul>
<table>
	<caption>FIg.1 xApp Sample Application </caption>
	<tr>
		<td>
		<img alt="" src="images/CAADECTaDummyApplication_image1.jpg" width="340" height="258"></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<h4><a name="Checkin"></a>CheckIn to manage file on server </h4>
<p>This will be the&nbsp; step for propagating local file on X-CAD Enovia server 
from application. we refer to article [<a href="#References">4</a>] for info in 
detail. </p>
<script type="text/javascript">insertLinkToTop();</script>
<h4><a name="Checkout_">Checkout</a> to retrieve file from server </h4>
<p>This will be the last step where we could retrieve files from from X-CAD Enovia 
server to the user application. we refer to article [<a href="#References">5</a>] for further reference.</p>
<script type="text/javascript">insertLinkToTop();</script>
<h4><a name="Logout_">Logout</a> as last Steps </h4>
<p>This will be the last step for the disconnection of application from X-CAD Enovia server. we refer to article [<a href="#References">3</a>] for further reference</p>
<script type="text/javascript">insertLinkToTop();</script>
<h3>Summary of <a name="LogicalSteps0"></a>Logical Steps to Run the application</h3>
<ul>
	<li>As we could see in the architecture of the X-CAD integration overview [<a href="#References">1</a>], 
	before running xApp Sample application IEF client should be running. </li>
	<li>Next thing is before sending any other command first logical step is to 	<strong>Login</strong> to Enovia (X-CAD server), means very first command 
	should be Login [<a href="#References">2</a>]. This will create login session.</li>
	<li>Then we could send any desire commands. it means all command should 
	running within login session. like Checkin, Chekout.</li>
	<li>Final step before closing integration is to <strong>Logout</strong> from 
	Enovia (X-CAD server), so last command will be Logout [<a href="#References">3</a>] . This will end login 
	session. </li>
</ul>
<!---------------------------------comment------------------------------------->


<h2><a name="References"></a>References    <table>
     <tr>
    
       <td >[1]</td>



       <td ><a href="CAADECTaDesignerCentralIntegrationOverview.htm">Integrating Client Applications with 
		X-CAD - An Overview</a></td>



     </tr>
      <tr>
       <td >[2]</td>
       <td>
       <a href="CAADECUcLogIn.htm">Login to Enovia</a></td>
     </tr>

        <tr>
       <td >[3]</td>
       <td>
       <a href="CAADECUcLogOut.htm">Logout from Enovia</a></td>
     </tr>



        <tr>
       <td >[4]</td>
       <td>
       <a href="CAADECUcCheckIn.htm">CheckIn to ENOVIA</a></td>
     </tr>



        <tr>
       <td >[5]</td>
       <td>
       <a name="Top0"></a><a href="CAADECUcCheckOut.htm">CheckOut Document from ENOVIA</a></td>
     </tr>


     
   </table>
   
<!---------------------------------comment------------------------------------->
<h2><a name="History"></a>History <table>
  <tr>
    <td valign="top"><strong>Version</strong>: [Feb 2012]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
<script type="text/javascript">insertLinkToTop();</script>
  </tr>
</table>

<!---------------------------------comment------------------------------------->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>


