<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating a Material with a Domain</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating a Material with a Domain</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h3>Abstract</h3>
		<p>This article explains which paradigms CAA uses to show objects and let 
		end users play with them.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMatCreateMaterial Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAMatCreateMaterial Do</a></li>
				<li><a href="#How">How to Launch CAAMatCreateMaterial</a></li>
				<li><a href="#Where">Where to Find the CAAMatCreateMaterial Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how to create a new Material Reference. 
You will learn:</p>
<ul>
	<li>How to define the mandatory PLM attributes.</li>
	<li>How to create a new Material Reference with the right attributes.</li>
	<li>How to add applicative domains to the Material Reference.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMatCreateMaterial Use Case</h2>
<p>CAAMatCreateMaterial is a use case of the CAAMaterialModeler.edu framework that 
illustrates CATMatInterfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMatCreateMaterial Do</h3>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAMatCreateMaterial</h3>
<p>To launch CAAMatCreateMaterial, there are two steps you will need to set up the 
build time environment, then compile CAAMatCreateMaterial along with its prerequisites, 
set up the run time environment, and then execute the use case [<a href="#References">1</a>].</p>
<pre class="code">mkrun -c &quot;CAAMatCreateMaterial <em>repository server user password securityContext 
                                    environment CAAMaterialReference</em>&quot;</pre>
<p>where the description of the arguments is the following:</p>
<table class="fill">
	<colgroup>
		<col align="center" span="1" />
	</colgroup>
	<tr>
		<th>Position</th>
		<th>Description</th>
		<th>Example</th>
		<th>Category</th>
	</tr>
	<tr>
		<td>1</td>
		<td>PLM repository</td>
		<td>PLM1</td>
		<td rowspan="5">Connection</td>
	</tr>
	<tr>
		<td>2</td>
		<td>PLM server</td>
		<td>The name and port of the server as name:port_number</td>
	</tr>
	<tr>
		<td>3</td>
		<td>Username</td>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<td>4</td>
		<td>Password</td>
		<td><em>password</em></td>
	</tr>
	<tr>
		<td>5</td>
		<td>Security context</td>
		<td>A string representing the security context ( Role. Organization. Project 
		) . Choose Role as Reviewer ( as the use case does not modify the PLM Data)</td>
	</tr>
	<tr>
		<td>6</td>
		<td>PLM environment</td>
		<td>A PLM environment containing PLMProductDS (a MATERIAL&#39;s customization)</td>
		<td>Environment</td>
	</tr>
	<tr>
		<td>7</td>
		<td>External Id of the Material to create</td>
		<td>CAAMaterialReference</td>
		<td>Components To Open</td>
	</tr>
</table>
<ul>
	<li>The <strong>first five</strong> are related to the connection and described in the 
	Basic Batch use case [<a href="#References">2</a>].</li>
	<li>The <strong>environment</strong> is necessary to locate the customized Modeler.</li>
	<li>The value of the external ID of the material.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMatCreateMaterial Code</h3>
<p>The CAAMatCreateMaterial use case is made of a single file located in the CAAMatCreateMaterial.m 
module of the <code>CAACATMatInterfaces</code>.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAACATMatInterfaces.edu\</code>CAAMatCreateMaterial<code>.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are eleven logical steps in CAAMatCreateMaterial use case. The prolog and 
epilog parts, which correspond to Creating/Closing a PLM session are already described 
in another document [<a href="#References">2</a>]. We will only focus on the three 
steps:</p>
<ol>
	<li><a href="#PLMAttributes">Defining the PLM Attributes</a>.</li>
	<li><a href="#MaterialRef">Creating a New Material Reference</a>.</li>
	<li><a href="#Domain">Adding Applicative Domains to the Material Reference</a>.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="PLMAttributes"></a>Defining the PLM Attributes</h3>
<p>Define the name of the Material Reference. Define the external ID value.</p>
<pre class="code">CATListOfCATUnicodeString listName ;
CATListOfCATUnicodeString listValue ;
listName.Append( &quot;PLM_ExternalID&quot; ) ;
listName.Append( &quot;V_discipline&quot; ) ;
CATUnicodeString buffer( iArgv[7] ) ;
listValue.Append( buffer ) ;
listValue.Append( &quot;dsc_matref_ref_Core&quot; ) ;</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="MaterialRef"></a>Creating a New Material Reference</h3>
<p>First step is to create the factory of Material.</p>
<pre class="code">CATObject * pObject = new CATObject( &quot;CATMRCFactory&quot; ) ;
...
CATIMaterialReferenceFactory * piMatFact = NULL;
pObject -&gt; QueryInterface( IID_CATIMaterialReferenceFactory, (void**)&amp; piMatFact ) ;
...</pre>
<p>Call for the Material Creation method on the factory with as input the wished 
Environment.</p>
<pre class="code">...
CATIMaterialReference * piRef = NULL ;
piMatFact -&gt; CreateMaterialReference( listName, listValue, piRef, piAdpEnvironment ) ;
piMatFact -&gt; Release() ; piMatFact = NULL ;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Domain"></a>Adding Applicative Domains to the Material Reference</h3>
<p>Define the name of the domain and the name of the application.</p>
<pre class="code">CATListValCATUnicodeString domainList, ownerList;
domainList.Append(&quot;Rendering&quot; ); ownerList.Append(&quot;RND&quot;);
...</pre>
<p>Link this defined applicative domain to the Material Reference.</p>
<pre class="code">CATIMaterialDomain * piDom = NULL ;
rc = piRef -&gt; AddMaterialDomain( domainList[iter], ownerList[iter], piDom, piAdpEnvironment ) ;</pre>
<p>Add the applicative specification into this created domain.</p>
<pre class="code">...
rc = piDom -&gt; AddApplicativeSpec( &quot;RenderingFeature&quot;);...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAACreateApplicativMaterial.htm">Applying a Core/Covering Material</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Feb 2007]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Mar 2007]</td>
		<td>Document modified</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
