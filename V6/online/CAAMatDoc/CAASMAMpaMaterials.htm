<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml">
 
<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating and managing material simulation domain</title>
</head>
 
<body onload="highlightSearchTerms();">
 
<table class="DocHeader">
    <tr>
        <td class="DocHeader1">
        <h1><a name="Top"></a>Creating, modifying Simulation Material Domain</h1>
        </td>
    </tr>
    <tr>
        <td class="use">Use Case</td>
    </tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
    <tr>
        <td>
        <h2>Abstract</h2>
        <p>This article explains how to create, modify a simulation material domain  and applying it to a model.</p>
        <ul>
            <li><a href="#Learn">What You Will Learn With This Use Case</a></li>
            <li><a href="#UseCase">The CAASMAMpaMaterials Use Case</a>
            <ul>
                <li><a href="#What">What Does CAASMAMpaMaterials Do</a></li>
                <li><a href="#How">How to Launch CAASMAMpaMaterials</a></li>
                <li><a href="#Where">Where to Find the CAASMAMpaMaterials Code</a></li>
            </ul>
            </li>
            <li><a href="#Step">Step-by-Step</a></li>
            <li><a href="#InShort">In Short</a></li>
            <li><a href="#References">References</a></li>
        </ul>
        </td>
    </tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show how to create and modify a simulation material domain  using the Generic CAA APIs.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASMAMpaMaterials Use Case</h2>
<p>CAASMAMpaMaterials is a use case of the CAASMAMpaInterfaces.edu framework that illustrates 
SMAMaterialItf framework 
capabilities regarding material properties.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASMAMpaMaterials Do?</h3>
<p>CAASMAMpaMaterials creates Simulation Domain in a Material, Creates Behaviors, Material options in the Domain and applies it to a model.</p>
<p>The input product model for this Use Case is shown in [<a href="#Fig1">Fig.1</a>]. The product has a 3DShape representation as its direct child and it can therefore be used for assigning a material.</p>
<table>
<caption align="center"><a name="Fig1"></a>Fig1: The CAASMAMpaMaterials 
Part Model</caption>
<tr>
<td><img src="images/CAASMAMpaMaterials001.jpg"/></td>
</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASMAMpaMaterials</h3>
<p>To launch CAASMAMpaMaterials, you will need to set up the build time 
environment, then compile CAASMAMpaMaterials.m along with its prerequisites, set 
up the run time environment, and then execute the use case [<a href="#References">1</a>].</p>
<p>To launch the use case, execute the following command:</p>
<p><code>mkrun -c &quot;<i>CAASMAMpaMaterials Repository Server User Password SecurityCtx 
PLM_Type PLM_External_Root V_version_Root</i>&quot;</code></p>
<p>where :</p>
<code>
<table  id="table1" >
<tr>	
<th><b><i>Repository</i></b></th>
<td>PLM1</td>
</tr>
<tr>
<th ><b><i>Server</i></b></th>
<td >The server as host::<i> name</i>:<i>port_number/RootURI</i></td>
</tr>
<tr>
<th><b><i>User</i></b></th>
<td>The user name</td>
</tr>
<tr>
<th><b><i>Password</i></b></th>
<td>The user password to authenticate the user</td>
</tr>
<tr>
<th><b><i>SecurityCtx</i></b></th>
<td>a string representing the security context ( Role. Organization. Project&nbsp;);<o:p>
            Choose Role as Designer ( as the use case create the PLM Data)</o:p></td>
</tr>
<tr>
<th><b>PLM_Type</b></th>
<td>the PLM type of the Product to open</td>
</tr>
<tr>
<th><b>PLM_External_Root</b></th>
<td>the PLM Id of the Product to open</td>
</tr>
<tr>
<th><b>V_version_Root</b></th>
<td>the PLM version of the Product</td>
</tr>
</table>
</code>
<p><b>Import PLM Data:</b><br/>
The use case requires input PLM Data: PLM reference and PLM Representation Reference. This data is stored in 3D XML Files, whose extension is &quot;3dxml&quot;. 
You must import these PLM data files into the database by clicking on [+] tab in the upper right corner -&gt;Import -&gt;3D XML prior to launching the use case.<br/>The &quot;3dxml&quot; file is supplied in the <code>CAASMAMpaInterfaces.edu\CNext\resources\CAASMAFeaInterfaces.3dxml</code>
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASMAMpaMaterials Code</h3>
<p>The CAASMAMpaMaterials use case is made of a single source file named CAASMAMpaMaterials.cpp 
located in the CAASMAMpaMaterials.m module of the CAASMAMpaInterfaces.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAASMAMpaInterfaces.edu\CAASMAMpaMaterials.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are seven logical steps in CAASMAMpaMaterials:</p>
<ol>
<li><a href="#Step1">Opening the input product</a></li>
<li><a href="#Step2">Creating Material</a></li>
<li><a href="#Step3">Creating Simulation domain</a></li>
<li><a href="#Step4">Creating material options and assign data.</a></li>
<li><a href="#Step5">Creating  and modifying Behavior.</a></li>
<li><a href="#Step6">Assign material to the product</a></li>	
<li><a href="#Step7">Closing the PLM session</a></li>
</ol>
<p>We will now discuss each of those sections in detail.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the input product</h3>
<p>To open the product test model, you should use services from the <code>
CAAPLMClientAdapter.edu</code> framework.<br />
With the help of the <code>CATIPLMNavReference</code> interface you can navigate through the product structure.</p>
<pre class="code">...
hr = ::CAAAdpCreateSession(repository_n,server_n,user_n,password_n,security_n);
 
CATBoolean authoringMode = TRUE;
CATIPLMNavReference * piNavRefOnRoot = NULL;
CATOmbLifeCycleRootsBag Bag;
hr = ::CAAOpenPLMComponent(plmtype_n, plmid_n, version_n, IID_CATIPLMNavReference, (void **) &amp;piNavRefOnRoot , Bag, authoringMode);
                     
...</pre>
<p>For further information about setting up a PLM session refer to the article "Connecting to V6 Server"</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating Material</h3>
<p>Next step of this use case involves creation of a material reference.</p>
<pre class="code">...
<span class="comment">// Create the material reference</span>
CATIMaterialReferenceFactory * pMatFact  =  NULL;
CATMaterialTools::GetMaterialFactory( pMatFact );
CATIMaterialReferenceFactory_var spMatFact = pMatFact;
...
CATIType_var spType = NULL_var;
hr = CATMaterialTools::GetMaterialCoreType( spType );
CATIMaterialReference* pMaterialReference = NULL;
hr = spMatFact -&gt; CreateMaterialReference( spType, pMaterialReference);
CATIMaterialReference_var spMaterialReference =  pMaterialReference;
...</pre> 
<p>For further information about creating a material  "Creating a Material with a Domain"</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating Simulation domain</h3>
<p>After creating a material,  create a simulation domain in the material. </p>
<pre class="code">...
CATIType_var spType = NULL_var;
hr = CATMaterialTools::GetDomainSimulationType( spType );
CATIMaterialDomain* pSimulationDomainRep = NULL;
hr = spMaterialReference-&gt;AddMaterialDomain(spType, pSimulationDomainRep);
CATUnicodeString iType("SMAMaterialDomain");
hr = pSimulationDomainRep-&gt;AddApplicativeSpec( iType );
...
CATIMaterialDomainContent* piDomainContent = NULL;
hr = pSimulationDomainRep-&gt;GetApplicativeSpec( iType, piDomainContent );
CATBaseUnknown_var spDomainUnk = piDomainContent;
SMAIMatMaterialDomain_var spSimulationDomain = spDomainUnk;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Creating material options and assign data</h3>
<p>You can create or remove individual material options within a simulation domain with the 
help of <code>SMAIMatMaterialDomain </code> interface.</p>
<p>To create an option feature, you should choose the type of option by passing in a string 
as the first argument of the method <code>CreateMaterialOption</code>.
The second argument returns the generated feature.
List of allowable strings for this method are documented within the <code>SMAIMatMaterialDomain </code>
interface header.</p>
<pre class="code">...

<span class="comment">//create a Density material option</span>
CATString  matType("SMAMatDensity") ;
CATBaseUnknown_var spDensityOptionUnk;
hr = spSimulationDomain-&gt;CreateMaterialOption(matType, spDensityOptionUnk);
SMAIMatDensity_var spDensity1 = spDensityOptionUnk;
...
<span class="comment">//create a Elasticity material option</span>
CATBaseUnknown_var spElasticityOptionUnk=NULL_var;
hr = spSimulationDomain-&gt;CreateMaterialOption(matElastictype, spElasticityOptionUnk);
SMAIMatElastic_var spElastic = spElasticityOptionUnk;
...
</pre>
<p>To delete an existing material option you can use the <code>RemoveMaterialOption</code> method 
of this interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Creating  and modifying Behavior</h3>
<p>You can use the <code>SMAIMatMaterialBehavior</code> 
interface to add, remove options in a behavior:</p>
<pre class="code">...
<span class="comment">// Create Behavior</span>
SMAIMatMaterialBehavior_var spMatBehavior1;
hr = spSimulationDomain-&gt;CreateBehavior(spMatBehavior1);
...
</pre>
<p>You can use the <code>AddMaterialOption</code> method to add options in a Behavior.</p>
<pre class="code">...
<span class="comment">// Add Material option in Behavior</span>
hr = spMatBehavior1-&gt;AddMaterialOption(spDensity1);
if (FAILED(hr))
return E_FAIL;
...
</pre>
<p>You can remove material option using <code>RemoveMaterialOption</code>. 
This interface has methods to retrieve all the  
material options <code>GetAllMaterialOptions</code>. You can also retrieve material reference
 <code>GetMaterial</code> method.</p>
<pre class="code">...
<span class="comment">// Retrieve the material reference</span>
CATIMaterialReference* pMaterialReference = NULL;
hr = spMatBehavior-&gt;GetMaterial(MaterialReference );
...
<span class="comment">// Retrive all the material options in behavior</span>
CATListValCATBaseUnknown_var lspMaterialOptions;
hr = spMatBehavior-&gt;GetAllMaterialOptions(lspMaterialOptions);
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Assign material to product</h3>
<p>In this step, you can use the <code>SetMaterialCore</code> method 
of <code>CATMatAppliedAccess</code> to apply material.</p>
<pre class="code">...
CATLISTP(CATIPLMComponent) pathOfInstances;
CATIPLMComponent * piRepInstance = NULL; 
CATBaseUnknown* pTarget = piNavRefOnRoot; 
CATOmbObjectInContext* pObjectInContext = NULL;
hr = CATOmbObjectInContext::CreateObjectInContext( pathOfInstances, piRepInstance, pTarget, pObjectInContext );
...
CATIMatNewMaterialInstance* piAppliedMaterial = NULL; 
hr = CATMatAppliedAccess::SetMaterialCore( pObjectInContext, spMaterialReference, errorCode, noReplace, &amp;piAppliedMaterial );
...
</pre>
<p>For further information about applying to a model  "Applying a Core/Covering Material"</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Closing the PLM session</h3>
<p>To close the test model, you should use services from the <code>CAAPLMClientAdapter.edu</code> 
framework.</p>
<pre class="code">...
if(NULL!=piNavRefOnRoot) { piNavRefOnRoot-&gt;Release(); piNavRefOnRoot=NULL; }
<span class="comment">// Empties the bag</span>
Bag.RemoveAll();
hr = ::CAAAdpCloseSession();
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The <code>CAASMAMpaMaterials</code> use case demonstrates the use of various 
CAA APIs in <code>SMAMaterialItf</code> framework to create and manage simulation material.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
<tr>
<td>[1]</td>
<td>
<a href="../CAADocUseCases/CAADocRunSample.htm">
Building and Launching a Use Case</a></td>
</tr> 
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
<tr>
<td>Version: <strong>1</strong> [Nov 2013]</td>
<td>Document created</td>
</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>
 
</body>
 
</html>
