<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>What Is HRESULT?</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>What Is HRESULT?</h1>
		</td>
	</tr>
	<tr>
		<td class="quick">Quick Reference</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article explains the HRESULT return value and shows how to test 
		it using macros to take appropriate actions. It includes the following sections:</p>
		<ul>
			<li><a href="#100000">About HRESULT</a></li>
			<li><a href="#200000">How to Test a Returned HRESULT?</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="100000"></a>About HRESULT</h2>
<p><code>HRESULT</code> is a Microsoft specific return value to report execution 
conditions to calling functions. <code>QueryInterface</code> in both COM and CNext 
returns an <code>HRESULT</code>. The methods you expose in your interfaces should 
also return an <code>HRESULT</code>. They so become OLE compliant.</p>
<p><code>HRESULT</code> is encoded on 32 bits and is divided into three areas. The 
first bit is the severity and reports whether the method called succeeds or fails. 
The following 15 bits contain the facility code which gives information about the 
type and the origin of the return code, and the last 16 bits contain the actual 
return code the method is returning. Here is a map of the HRESULT's structure.</p>
<p>
<img alt="HRESULT" height="153" src="images/CAASysOMHRESULT.gif" width="470"/></p>
<p>Common <code>HRESULT</code> codes fall in the following categories. A successful 
return code contains S_ in its name, while a failure code contains E_ in its name.</p>
<ul>
	<li><code>S_OK</code> to report that the function succeeds</li>
	<li><code>S_FALSE</code> to report that the function succeeds, but returns the 
		boolean value False </li>
	<li><code>E_NOINTERFACE</code> returned by <code>QueryInterface</code> to report 
		that the queried object doesn't support the requested interface</li>
	<li><code>E_UNEXPECTED</code> to report an unexpected failure</li>
	<li><code>E_OUTOFMEMORY</code> to report that the function called cannot allocate 
		the required memory</li>
	<li><code>E_FAIL</code> to report an unspecified failure.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="200000"></a>How to Test a Returned HRESULT?</h2>
<p>You should never test the <code>HRESULT</code> value, but use the <code>SUCCEEDED</code> 
or <code>FAILED</code> macros as follows:</p>
<pre class="code">HRESULT rc = pCATBaseUnKnownOnComp-&gt;QueryInterface(IID_CATIXX,
                                                   (void**) &amp;pIXXOnComp);
if (FAILED(rc))
{
  ... // Process the error
}
else if (SUCCEEDED(rc))
{
  pIXXOnComp-&gt;MXX1();
  ...</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
