<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Implementing an Interface Using the BOA</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Implementing an Interface Using the BOA</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article shows how to create a CAA data extension class that implements 
		an interface using the BOA (Basic Object Adapter).</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASysComponentBOA Use Case</a>
				<ul>
					<li><a href="#What">What Does CAASysComponentBOA Do</a></li>
					<li><a href="#How">How to Launch CAASysComponentBOA</a></li>
					<li><a href="#Where">Where to Find the CAASysComponentBOA Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how to create a CAA component [<a href="#References">1</a>] 
with an extension class that implements an interface using the BOA [<a href="#References">2</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASysComponentBOA Use Case</h2>
<p>CAASysComponentBOA is a use case of the CAASystem.edu framework that illustrates 
the System framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASysComponentBOA Do</h3>
<p>This use case includes the code for a CAA component made of a main implementation 
class, a data extension class that implements the sample <em>CAAISysInterface</em>, 
and a code extension class that implement the <em>CATICreateInstance</em> interface 
to enable the component to be instantiated thanks to the <code>CATInstantiateComponent</code> 
global function.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASysComponentBOA</h3>
<p>You first need to build CAASysComponentBOA, CAASysInterface, and CAASysUseBOA. 
To do this, you will need to set up the build time environment, then compile CAASysComponentBOA, 
CAASysInterface, and CAASysUseBOA along with their prerequisites as described in 
[<a href="#References">5</a>]. Launch CAASysUseBOA that instantiate the component, 
calls <code>QueryInterface</code> to retrieve a <em>CAAISysInterface</em> pointer, 
calls its methods, deallocates, and returns.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASysComponentBOA Code</h3>
<p>The CAASysComponentBOA use case is made of several classes located in the CAASysComponentBOA.m 
for the component main classes and extension classes that implement <em>CATICreateInstance</em>, 
PublicInterfaces and CAASysInterface.m for the <em>CAAISysInterface</em> interface, 
and and CAASysUseBOA.m module for the main program. These modules belong to the 
CAASystem.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAASystem.edu\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">5</a>] is the 
folder where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>Only the BOA implementation is described. Creating an interface, and implementation 
class, and a code extension to implement <em>CATICreateInstance</em> can be found 
in [<a href="#References">2</a>], [<a href="#References">3</a>], and [<a href="#References">4</a>] 
respectively. To implement an interface using the BOA, there are three steps:</p>
<ol>
	<li><a href="#Step1">Creating the Extension Class Header File</a></li>
	<li><a href="#Step2">Creating the Extension Class Source File</a></li>
	<li><a href="#Step3">Updating the Interface Dictionary</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Creating the Extension Class Header File</h3>
<pre class="code">#include &quot;<strong>CAAISysInterface.h</strong>&quot;   //Needed to derive from CAAISysInterface

class CAAESysComponentBOA : public <strong>CAAISysInterface</strong>
{
  // Used in conjunction with CATImplementClass in the .cpp file
  <strong>CATDeclareClass</strong>;

  public:

    CAAESysComponentBOA();
    virtual ~CAAESysComponentBOA();

    // CAAISysInterface 
    // -------------------

    virtual HRESULT ToString();

  private:

    // Copy constructor, not implemented
    // Set as private to prevent from compiler automatic creation as public.
    CAAESysComponentBOA(const CAAESysComponentBOA &amp;iObjectToCopy);

    // Assignment operator, not implemented
    // Set as private to prevent from compiler automatic creation as public.
    CAAESysComponentBOA &amp; operator = (const CAAESysComponentBOA &amp;iObjectToCopy);

};</pre>
<p>The <em>CAAESysComponentBOA</em> class C++-derives from the interface it BOA-implement
<em>CATISysInterface</em>. The <code>CATDeclareClass</code> macro declares that 
the class <em>CAAESysComponentBOA</em> belongs to a component. Note that the copy 
constructor and the assignment operator are set as private. This is very important 
for extensions. Since extensions must never be directly instantiated by client applications, 
this prevents the compiler from creating the copy constructor and the assignment 
operator as public without you know. These copy constructor andassignment operator 
are not implemented in the source file. The class has a constructor and a destructor, 
and the only method of <em>CATISysInterface</em>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating the Extension Class Source File</h3>
<pre class="code">...
<strong>CATImplementClass</strong>(CAAESysComponentBOA, DataExtension, <strong>CAAISysInterface</strong>, CAASysComponentBOA);


//------------------------------------------------------------------------------------
// To declare that the class is a BOA
//
<strong>CATImplementBOA(CAAISysInterface,CAAESysComponentBOA);</strong>

CAAESysComponentBOA::CAAESysComponentBOA() 
{
  cout &lt;&lt; &quot;CAAESysComponentBOA::CAAESysComponentBOA&quot; &lt;&lt; endl;
}

//------------------------------------------------------------------------------------

CAAESysComponentBOA::~CAAESysComponentBOA()
{
  cout &lt;&lt; &quot;CAAESysComponentBOA::~CAAESysComponentBOA&quot; &lt;&lt; endl;
}

//------------------------------------------------------------------------------------

HRESULT CAAESysComponentBOA::ToString()
{
   cout &lt;&lt; &quot;CAAESysComponentBOA::ToString&quot;&lt;&lt; endl; 
   return(S_OK);
}</pre>
<p>The <code>CATImplementClass</code> macro declares that the <em>CAAESysComponentBOA</em> 
class is a component data extension class thanks the <code>DataExtension</code> 
keyword, OM-derives [<a href="#References">6</a>] from <em>CAAISysInterface</em>, 
and extends <em>CAASysComponentBOA</em>. Any data extension class that implements 
an interface using the BOA must OM-derive from the interface.</p>
<p>The <code>CATImplementBOA</code> macro declares that the <em>CAAESysComponentBOA</em> 
class implements the <em>CAAISysInterface</em> interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Updating the Interface Dictionary</h3>
<pre class="code">...
CAASysComponentBOA   CAAISysInterface  libCAASysComponentBOA
...</pre>
<p>The interface dictionary declares that the <em>CAASysComponentBOA</em> component 
implements the <em>CAAISysInterface</em> interface and that the code to load into 
memory to use these interfaces is located in the libCAASysComponentBOA shared library 
or DLL. Note that the component main class name is used to refer to the component 
in the interface dictionary, and never the extension class name.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case shows how to create a data extension class that implements an interface 
using the BOA. The data extension class must C++-derive and OM-derive from the interface. 
This implies that a given data extension class can implement only one interface 
using the BOA to avoid multi inheritance. It may of course implement additional 
interfaces using TIEs.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAASysTaOMCreatingComponent.htm">Creating Components</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAASysTaOMCreatingInterfaces.htm">Creating Interfaces</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAASysUcOMCreatingCmpFact.htm">Creating a Component Factory</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAASysUcOMCreatingCmp.htm">Creating Components</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Nov 2003]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
