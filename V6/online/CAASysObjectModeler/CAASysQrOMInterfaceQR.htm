<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Interface Quick Reference</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Interface Quick Reference</h1>
		</td>
	</tr>
	<tr>
		<td class="quick">Quick Reference</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article gives you a step-by-step to create an interface. It includes 
		the following sections:</p>
		<ul>
			<li><a href="#IntName">Choosing the Interface Name</a></li>
			<li><a href="#HeaderFile">Creating the Interface Header File</a></li>
			<li><a href="#SourceFile">Creating the Interface Source File</a></li>
			<li><a href="#TIEFile">Creating the Interface TIE File</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="IntName"></a>Choosing the Interface Name</h2>
<p>Choose a significant name beginning with the trigram of your company, followed 
by I for Interface. For example, CATIA interface names begin with CATI, and sample 
interfaces for education frameworks begin with CAAI. This ensures unique interface 
names to enable coexistence for interfaces coming from different providers on your 
site, or on you customers' sites [<a href="#References">1</a>].</p>
<p>You can add to this four-character prefix the trigram of the framework into which 
you intend to put the interface, providing you manage a list of unique trigrams 
for your frameworks [<a href="#References">2</a>]. This lets you manage unique interface 
names at the framework level. For example, sample interfaces of the CAASystem.edu 
framework, that illustrates the System framework capabilities, begin with CAAISys, 
where Sys is the trigram for the System framework.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="HeaderFile"></a>Creating the Interface Header File</h2>
<p>Create the interface header file, such as CAAISysPoint.h. Since an interface 
is usually intended for clients, this header file should be placed in the PublicInterfaces 
folder of your framework. Insert in this file:</p>
<ul>
	<li>The preprocessor directives that enclose the header file contents
		<pre class="code">#ifndef CAAISysCollection_h
#define CAAISysCollection_h
...
#endif</pre>
		<p>These directives protect from file multiple inclusion</p>
	</li>
	<li>The include statement to the base interface header file, and to header files 
		of interfaces used as parameter types for the interface methods. There are 
		none in this example.
		<pre class="code">...
#include &quot;CATBaseUnknown.h&quot;
...</pre>
	</li>
	<li>The framework header file that contains the framework export information
		<pre class="code">...
#include &quot;CAASysGeoModelInf.h&quot;
...</pre>
	</li>
	<li>The IID declaration
		<pre class="code">...
extern ExportedByCAASysGeoModelInf IID IID_CAAISysCollection;
...</pre>
	</li>
	<li>The class declaration and the inherited class
		<pre class="code">...
class ExportedByCAASysGeoModelInf CAAISysCollection : public CATBaseUnknown
{
...</pre>
	</li>
	<li>The <code>CATDeclareClass</code> macro, always located before the <code>
		public</code> keyword
		<pre class="code">...
CATDeclareClass;
...</pre>
	</li>
	<li>The methods, always declared as public and pure virtual, and returning a
		<code>HRESULT</code> [<a href="#References">3</a>]
		<pre class="code">...
public :
  virtual HRESULT GetNumberOfObjects(int * oCount) = 0;
  virtual HRESULT GetObject    (int iRank,
                                CATBaseUnknown ** oObject) = 0;
  virtual HRESULT AddObject    (CATBaseUnknown *  iObject) = 0;
  virtual HRESULT RemoveObject (CATBaseUnknown *  iObject) = 0;
  virtual HRESULT Empty() = 0;
};
...</pre>
	</li>
</ul>
<p>The header file is:</p>
<pre class="code">#ifndef CAAISysCollection_h
#define CAAISysCollection_h

#include &quot;CATBaseUnknown.h&quot;

#include &quot;CAASysGeoModelInf.h&quot;

extern ExportedByCAASysGeoModelInf IID IID_CAAISysCollection;

class ExportedByCAASysGeoModelInf CAAISysCollection : public CATBaseUnknown
{
  CATDeclareInterface;
  public:
    virtual HRESULT GetNumberOfObjects(int * oCount) = 0;
    virtual HRESULT GetObject    (int iRank,
                                  CATBaseUnknown ** oObject) = 0;
    virtual HRESULT AddObject    (CATBaseUnknown * iObject) = 0;
    virtual HRESULT RemoveObject (CATBaseUnknown * iObject) = 0;
    virtual HRESULT Empty  () =0 ;
};
#endif</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="SourceFile"></a>Creating the Interface Source File</h2>
<p>Create the interface source file in the src folder of the module dedicated 
to interfaces of your framework, such as CAAISysCircle.cpp file, and insert in it:</p>
<ul>
	<li>The include statement to the class header file
		<pre class="code">#include &quot;CAAISysCollection.h&quot;
...</pre>
	</li>
	<li>The IID [<a href="#References">4</a>] initialization
		<pre class="code">...
IID IID_CAAISysCollection = { /* 8d143952-d4bf-11d3-b7f5-0008c74fe8dd */
    0x8d143952,
    0xd4bf,
    0x11d3,
    {0xb7, 0xf5, 0x00, 0x08, 0xc7, 0x4f, 0xe8, 0xdd}
  };
...</pre>
	</li>
	<li>The <code>CATImplementInterface</code> macro to make an object modeler interface 
		from this abstract class. The parameters of <code>CATImplementInterface</code> 
		are the interface name and the base interface name respectively
		<pre class="code">...
CATImplementInterface(CAAISysCollection, CATBaseUnknown);</pre>
	</li>
</ul>
<p>The source file is:</p>
<pre class="code">#include &quot;CAAISysCollection.h&quot;

IID IID_CAAISysCollection = { /* 8d143952-d4bf-11d3-b7f5-0008c74fe8dd */
    0x8d143952,
    0xd4bf,
    0x11d3,
    {0xb7, 0xf5, 0x00, 0x08, 0xc7, 0x4f, 0xe8, 0xdd}
  };

CATImplementInterface(CAAISysCollection, CATBaseUnknown);</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="TIEFile"></a>Creating the TIE File</h2>
<p>Create the TIE file in the src folder of the module dedicated to interfaces 
of your framework, such as TIE_CAAISysCollection.tsrc, to request the code builder 
mkmk to generate the TIE associated with the interface. Because your clients do 
not need the TIE to retrieve a pointer to your interface thanks to <code>QueryInterface</code> 
and to call its methods, the TIE is created in the ProtectedGenerated folder 
by default.</p>
<pre class="code">#include &quot;CAAISysCollection.h&quot;</pre>
<p>If the client must implement the interface, create the TIE in the PublicGenerated 
folder. The TIE file should then also include the <code>//public</code> keyword.</p>
<pre class="code">#include &quot;CAAISysCollection.h&quot;
//public</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>Creating interfaces implies choosing a name appropriate for both interface easy 
identification and interface name uniqueness. Then you can create the interface 
header and source files. Last, the interface TIE file lets mkmk automatically create 
the interface TIE.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAACppTechArticles/CAADocNamingRules.htm">
		Naming Rules</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAASysQrOMHRESULT.htm">What Is HRESULT?</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAASysQrOMGUID.htm">About Globally Unique IDentifiers</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jul 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
