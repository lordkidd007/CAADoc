<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>CAAScdSddUcCreateOpeningSketch.CATScript</title>
</head>

<body onload="highlightSearchTerms();">
<script type="text/javascript">insertCopyright();</script>

<pre>
<span class="comment">'-------------- Sample MACRO written in Basic Script ------------------------------------------</span>
<span class="comment">'This sample creates a XRep and manages data inside it.</span>

<span class="comment">'Steps:</span>
<span class="comment">'    1- Searches and opens model which is named as &quot;CAAScdFeaProductWithoutFEM&quot;</span>
<span class="comment">'    2- Retrieves the root product</span>
<span class="comment">'    3- Retrieves the PartBody</span>
<span class="comment">'    4- Creates a new XRep</span>
<span class="comment">'    5- Sets the data file name associated to the XRep</span>
<span class="comment">'    6- Imports the data file in the XRep</span>
<span class="comment">'    7- Adds a relation in the XRep</span>
<span class="comment">'    8- Exports the data of the XRep</span>

<span class="keyword">Sub</span> CATMain()

<span class="comment">'--------------------------------------------------------------------------</span>
<span class="comment">' 1- Searches and opens model which is named as "CAAScdFeaProductWithoutFEM"</span>
<span class="comment">'--------------------------------------------------------------------------</span>
<span class="keyword">Dim</span> MyEditor <span class="keyword">As</span> Editor
OpenProduct MyEditor

<span class="comment">'--------------------------------------------------------------------------</span>
<span class="comment">' 2- Retrieves the root product</span>
<span class="comment">'--------------------------------------------------------------------------</span>
<span class="keyword">Dim</span> MyRootOcc <span class="keyword">As</span> VPMRootOccurrence
<span class="keyword">Set</span> MyRootOcc = MyEditor.ActiveObject

<span class="keyword">Dim</span> MyRootProduct <span class="keyword">As</span> VPMReference
<span class="keyword">Set</span> MyRootProduct = MyRootOcc.PLMEntity

<span class="comment">'--------------------------------------------------------------------------</span>
<span class="comment">' 3- Retrieves the PartBody</span>
<span class="comment">'--------------------------------------------------------------------------</span>
<span class="keyword">Dim</span> MyContext <span class="keyword">As</span> PLMAppContext
<span class="keyword">Set</span> MyContext = MyEditor.GetService(&quot;PLMProductContext&quot;)

<span class="keyword">Dim</span> MyPart <span class="keyword">As</span> Part
<span class="keyword">Dim</span> MyPartInstance <span class="keyword">As</span> VPMRepInstance
<span class="keyword">Dim</span> MyBody <span class="keyword">As</span> Body
<span class="keyword">For Each</span> MyEntity <span class="keyword">In</span> MyContext.EditedContent
    <span class="keyword">Dim</span> MyRef <span class="keyword">As</span> VPMReference
    <span class="keyword">Set</span> MyRef = MyEntity

    <span class="keyword">Dim</span> MyReps <span class="keyword">As</span> VPMRepInstances
    <span class="keyword">Set</span> MyReps = MyRef.RepInstances

    <span class="keyword">For Each</span> MyRep <span class="keyword">In</span> MyReps
        <span class="keyword">Dim</span> MyRepRef <span class="keyword">As</span> VPMRepReference
        <span class="keyword">Set</span> MyRepRef = MyRep.ReferenceInstanceOf
        <span class="keyword">Dim</span> attr <span class="keyword">As String</span>
        attr = MyRepRef.GetAttributeValue(&quot;V_discipline&quot;)

        <span class="keyword">If</span> (attr = &quot;Design&quot;) <span class="keyword">Then</span>
            <span class="keyword">Set</span> MyPart = MyRepRef.GetItem(&quot;Part&quot;)
            <span class="keyword">Set</span> MyPartInstance = MyRep
            <span class="keyword">Set</span> MyBody = MyPart.MainBody
        <span class="keyword">End If</span>
    <span class="keyword">Next</span>
<span class="keyword">Next</span>

<span class="comment">'--------------------------------------------------------------------------</span>
<span class="comment">' 4- Creates a new XRep</span>
<span class="comment">'--------------------------------------------------------------------------</span>
<span class="keyword">Dim</span> MyPrdRepFactory <span class="keyword">As</span> SimPrdRepFactory
<span class="keyword">Set</span> MyPrdRepFactory = MyRootProduct.GetItem(&quot;SimPrdRepFactory&quot;)

<span class="keyword">Dim</span> MyXRepRef <span class="keyword">As</span> VPMRepReference
<span class="keyword">Set</span> MyXRepRef = MyPrdRepFactory.CreatePrdRep(&quot;XRep&quot;)

<span class="keyword">Dim</span> MyXRep <span class="keyword">As</span> SimXRep
<span class="keyword">Set</span> MyXRep = MyXRepRef.GetItem(&quot;SimXRep&quot;)

<span class="comment">'--------------------------------------------------------------------------</span>
<span class="comment">' 5- Sets the data file name associated to the XRep</span>
<span class="comment">'--------------------------------------------------------------------------</span>
MyXRep.FileName = &quot;RootProduct.inp&quot;

<span class="comment">'--------------------------------------------------------------------------</span>
<span class="comment">' 6- Imports the data file in the XRep</span>
<span class="comment">'--------------------------------------------------------------------------</span>
<span class="keyword">Dim</span> sFolderPath <span class="keyword">As String</span>
sFolderPath = CATIA.SystemService.Environ(&quot;TEMP&quot;)
MyXRep.ImportFile sFolderPath, True

<span class="comment">'--------------------------------------------------------------------------</span>
<span class="comment">' 7- Adds a relation in the XRep</span>
<span class="comment">'--------------------------------------------------------------------------</span>
<span class="keyword">Dim</span> MyProductService  <span class="keyword">As</span> PLMProductService
<span class="keyword">Set</span> MyProductService = MyEditor.GetService(&quot;PLMProductService&quot;)
<span class="keyword">Set</span> MyLink = MyProductService.ComposeLink(MyRootOcc, MyPartInstance, Nothing)
MyXRep.AddRelation MyLink, SimXRepTo3DShapeRelation

<span class="comment">'--------------------------------------------------------------------------</span>
<span class="comment">' 8- Exports the data of the XRep</span>
<span class="comment">'--------------------------------------------------------------------------</span>
MyXRep.FileName = &quot;RootProductOut.inp&quot;
MyXRep.ExportFile sFolderPath

<span class="keyword">End Sub</span>

<span class="comment">''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</span>
<span class="comment">'Searches a product and open it.</span>
<span class="comment">''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</span>
Sub OpenProduct(oEditor As Editor)
	<span class="comment">'Search product and open it:</span>
    <span class="comment">'Get the Search Service</span>
    Dim oSearchService As SearchService
    Set oSearchService = CATIA.GetSessionService(&quot;Search&quot;)
    Dim oDBSearch As DatabaseSearch
    Set oDBSearch = oSearchService.DatabaseSearch
    oDBSearch.BaseType = "VPMReference"
    <span class="comment">' To retrieve the Product by its Title, use V_Name attribute</span>
    oDBSearch.AddEasyCriteria &quot;V_Name&quot;, &quot;CAAScdFeaProductWithoutFEM&quot;
    oSearchService.Search

    <span class="comment">'Retrieve the listed entities</span>
    Dim cPLMEntities As PLMEntities
    Set cPLMEntities = oDBSearch.Results
    If cPLMEntities.Count &lt;&gt; 0 Then
       Set oPLMEntity = cPLMEntities.Item(1)
       <span class="comment">'Get the PLMOpen service &amp; Open the first retrieved entity</span>
       Set oPLMOpenService = CATIA.GetSessionService(&quot;PLMOpenService&quot;)
       <span class="comment">'Get the editor</span>
       oPLMOpenService.PLMOpen oPLMEntity, oEditor
    End If
End Sub
</pre>
<script type="text/javascript">insertCopyright();</script>
  </body>
</html>

