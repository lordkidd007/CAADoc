<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Rigid Duct Object Access and Navigation</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving Information of Hvac Spool, its Access 
    and Navigation</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article describes the CAAHvaSpoolDesignImpl use case. This use
    case explains how to use, access and navigate Hvac Spool object and their parameters.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAHvaSpoolDesignImpl Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAHvaSpoolDesignImpl Do</a></li>
				<li><a href="#How">How to Launch CAAHvaSpoolDesignImpl</a></li>
				<li><a href="#Where">Where to Find the CAAHvaSpoolDesignImpl Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you first steps in programming with
CATIA &quot;Heating Ventilation & Air Conditioning&quot;(HVAC) Interfaces.
		<br/>
				Its main intent is to provide you information about it&#8217;s use, access and navigate hvac spool and their parameters.
 </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAHvaSpoolDesignImpl Use Case</h2>
<p>CAAHvaSpoolDesignImpl is a use case of the CAAHvacDesign.edu framework that illustrates CATIA &quot;Heating Ventilation & Air Conditioning&quot;(HVAC) framework
capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAHvaSpoolDesignImpl Do</h3>
<p>The goal of CAAHvaSpoolDesignImpl use case is to show how to use and navigate 
  hvac spool and how to access its parameters.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAHvaSpoolDesignImpl</h3>
<p>To launch CAAHvaSpoolDesignImpl, you will need to set up the build time environment, then 
compile CAAHvaSpoolDesignImpl along with it&#8217;s prerequisites, set up the run time environment, 
and then execute the use case [<a href="#References">1</a>].</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot;CAAHvaSpoolDesignImpl Repository Server User Password SecurityCtx Version PLMType PLM_ExternalID&quot;</em></pre>
<p>where:</p>
<table class="border1">
  <tr>
    <th>Repository</th>
    <td>
    <script type="text/javascript">insertRepository();</script>
    </td>
  </tr>
  <tr>
    <th>Server</th>
    <td>The server as <em>protocol://Host:port_number/RootURI</em></td>
  </tr>
  <tr>
    <th>User</th>
    <td>The user name.</td>
  </tr>
  <tr>
    <th>Password</th>
    <td>The user password to authenticate the user.</td>
  </tr>
  <tr>
    <th>SecurityCtx</th>
    <td>A string representing the security context (Role.Organization.Project). 
    Choose Role as Designer.</td>
  </tr>
  <tr>
    <th>Version</th>
    <td>The V_Version attribute value of the reference to be opened</td>
  </tr>
  <tr>
    <th>PLMType </th>
    <td>A PLMType for a PLM Reference or PLM Representation Reference.</td>
  </tr>
  <tr>
    <th>PLM_ExternalID</th>
    <td>The value of the <code>PLM_ExternalID</code> of a PLM Reference or PLM Representation Reference be browsed for Physical Structure.</td>
  </tr>
</table>

<p>* The input model is retrieved by importing 3dxml file from the 
   <strong>CAAHvacDesign.edu</strong> framework as below :<br/>&nbsp;&nbsp;
   <strong>HvacDesignSampleData.3dxml</strong> for HVAC product Data<br/>&nbsp;&nbsp;
   <strong>HvacDesignSampleResourceSet.3dxml</strong> for PRM Data Resource set<br/>&nbsp;&nbsp;
   <br/>&nbsp;
   <code>InstallRootDirectory\CAAHvacDesign.edu\InputData\HvacDesignSampleData.3dxml
   <br/>&nbsp;InstallRootDirectory\CAAHvacDesign.edu\InputData\HvacDesignSampleResourceSet.3dxml
   </code>
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the Root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>PLM_ExternalID</strong></code></a> :
    <code>HVAC_Physical_Root</code></li>
  <li><a><code><strong>PLMType</strong></code></a> :
    <code>VPMReference</code></li>
  <li><a><code><strong>Version</strong></code></a> :
    <code>A</code></li>
</ul>
<p>
  <img width="100%" alt="Sample Product" src="images/CAAHvacDesignSampleData.jpg"/>
</p>
<p>
   &nbsp;The image above shows the product structure used for this use-case.
</p>
<p>
  <strong>Attention</strong>: The <em>Name</em> field in <em>Properties</em> dialog for the product is now refered as attribute <em>PLM_ExternalID</em>.
                       <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                            Whenever user imports the <em>HvacDesignSampleData.3dxml</em> the <em>PLM_ExternalID</em> value for PLM_ExternalID1 and PLM_ExternalID2 will be different 
                            as per user CATIA session 
                       <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; as it is genearted by system automatically.
                       <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                            Please verify the <em>PLM_ExtrenalID</em> value carefully with <em>Name</em> field before executing the use case.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAHvaSpoolDesignImpl Code</h3>
<p>The CAAHvaSpoolDesignImpl use case is made of a single file located in the 
CAAHvaSpoolDesignImpl.m module of the CAAHvacDesign.edu framework: <code>InstallRootFolder\CAADoc\CAAHvacDesign.edu\CAAHvaSpoolDesignImpl.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table>
  <tr>
    <td><em>CAAAdpCreateSession</em></td>
    <td>Class to create a batch session and connects to a repository.</td>
  </tr>
  <tr>
    <td><em>CAAOpenPLMComponent</em></td>
    <td>Class to retrieve the Product Reference or Representation Reference.</td>
  </tr>
  <tr>
    <td><em>CATIPrdOccurrenceMngt</em></td>
    <td>Class to create the root occurrence for the Root Product factory.</td>
  </tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the &quot;Heating Ventilation & Air Conditioning&quot;(HVAC) environment and it&#8217;s components 
creation by looking at the code <br/> of the CAAHvaSpoolDesignImpl. There are 8 logical steps in CAAHvaSpoolDesignImpl :
</p>
<ol>
	<li><a href="#Step1">Checking the Input Data</a></li>
	<li><a href="#Step2">Creating a Session</a></li>
	<li><a href="#Step3">Querying/Opening/Expanding the Physical Reference Product with it&#8217;s Associated Representation</a></li>
	<li><a href="#Step4">Creating the root occurrence for the opened reference product</a></li>
	<li><a href="#Step5">Navigate the list of occurrences to get the instance and reference of Hvac Spool</a></li>
	<li><a href="#Step6">Checking the current occurrence is Hvac Spool instance object and get its reference object</a></li>
	<li><a href="#Step7">Get the Spool Mode of selected Spool Instance</a></li>
    <li><a href="#Step8">Get the members of the Spool</a></li>
	<li><a href="#Step9">Disconnecting and Deleting the Session</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
  //------------------------------------------------------------------
  // - The necessary input arguments to start CATIA session
  //------------------------------------------------------------------  
  if (9 != argc)
  {
    cout &lt;&lt; endl;
    cout &lt;&lt;&quot;CAAHvaSpoolDesignImpl &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Version&gt; &lt;PLMType&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
    cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
    cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project  ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Version: The V_Version attribute value of the reference to be opened&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;PLMType: A PLM Type for PLM Reference or PLM Representation Reference &quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed for Physical Structure.&quot; &lt;&lt;endl;
    cout &lt;&lt; endl;
    retCode = 1;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating a Session</h3>
<p>We create the session.</p>
<pre class="code">...
  //------------------------------------------------------------------
  // - For Setting Repository
  //------------------------------------------------------------------  
  repository = argv[1];

  // -----------------------------------------------------------------
  // Create Session
  // -----------------------------------------------------------------
  hr = ::CAAAdpCreateSession(repository, argv[2], argv[3], argv[4], argv[5]);
  if (FAILED(hr)) { retCode = 2; goto EscapeWay; }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Querying/Opening/Expanding the Physical Reference Product with it&#8217;s Associated Representation</h3>
<p>Retrieve the customized reference of the product modeler</p>
<pre class="code">...
  // Open a Product inside a Bag for complete control of its lifecycle
  CATOmbLifeCycleRootsBag myBag; /* To handle PLM entity life-cycle */

    //------------------------------------------------------------------
  // - For Setting Environment
  //------------------------------------------------------------------
  uVersion = argv[6];
  cout &lt;&lt; &quot;V_Version : &quot; &lt;&lt; uVersion.ConvertToChar() &lt;&lt; endl ;

  StrPLMType = argv[7];
  cout &lt;&lt; &quot;PLMType : &quot; &lt;&lt; StrPLMType &lt;&lt; endl ;

  //-----------------------------------------------------------------------
  // Open and Expand of the product
  //-----------------------------------------------------------------------
  // - Opens the &quot;HVAC (Heating Ventilation & Air Conditioning)&quot; model(arg[8]) in New Unified Typing Mode
  // The input model is retrieved by importing the file from the CAAHvacDesign.edu fw are
  // HvacDesignSampleData.3dxml for HVAC product and HvacDesignSampleResourceSet.3dxml for PRM Data Resource set
  // This 3D XML file contains the Root Product Reference with the following attributes:
  //     * PLM_ExternalID [uPLMID]: HVAC_Physical_Root
  //---------------------------------------------------
  uPLMID = argv[8] ;

  hr = ::CAAOpenPLMComponent(StrPLMType, uPLMID, uVersion, IID_CATIPLMProducts, (void**) & pIPLMProduct, myBag,TRUE);
  if ((FAILED(hr)) || (NULL == pIPLMProduct)) { retCode = 3; goto EscapeWay; }
...</pre>
<script type="text/javascript">  insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Creating the root occurrence for the opened reference product</h3>
<p>We create the root occurrence</p>
<pre class="code">...
  hRootNavOccurrence = pIPLMProduct;
  //RootOcc changes Start
  if( NULL_var == hRootNavOccurrence )
  {
    hr = pIPLMProduct-&gt;QueryInterface(IID_CATIPLMNavReference, (void**)&pIPLMNavRefOnRoot);
    if(SUCCEEDED(hr))
    {
      hr = CATPrdGetOccurrenceMngt(pIPrdOccurrenceMngt);
      if( SUCCEEDED(hr) && ( NULL != pIPrdOccurrenceMngt ) )
      {
        hr = pIPrdOccurrenceMngt-&gt;GetOrCreateRootOccurrence(pIPLMNavRefOnRoot, hRootNavOccurrence);
      }
    }
  }
  //RootOcc changes End
  if( NULL_var == hRootNavOccurrence ) { retCode = 4; goto EscapeWay; }
...</pre>
<script type="text/javascript">  insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Navigate the list of occurrences to get the instance and reference of Hvac Spool</h3>
<pre class="code">...
  hr = hRootNavOccurrence-&gt; ListChildren(ListofPtrNavOccurrence);
  if( FAILED(hr) ) { retCode = 5; goto EscapeWay; }

  //-----------------------------------------------------------------------
  // - To get the instance and reference of spool
  //-----------------------------------------------------------------------
  SizeRootList = ListofPtrNavOccurrence.Size();
  for( index =1; index &lt;= SizeRootList; index++ )
  {
    //Clean-Up
    pIElemNavOccurrence = NULL ;
    if( NULL != pIHvaSpoolRef ){ pIHvaSpoolRef-&gt;Release() ; pIHvaSpoolRef = NULL ; }
    //End of Clean-Up

    // Refer database HvacDesignSampleData.3dxml
    pIElemNavOccurrence = ListofPtrNavOccurrence[index];
    if( NULL == pIElemNavOccurrence ) { retCode = 6; goto EscapeWay ; }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Checking the current occurrence is Hvac Spool instance object and get its reference object</h3>
<p>We assign CATIPLMNavOccurrence pointer to Hvac Spool instance smart pointer.</p>
<pre class="code">...
  hHvaSpoolInstance = pIElemNavOccurrence ;
  // Checking the selected object is spool instance
  if (NULL_var != hHvaSpoolInstance)
  {
    // Get the  reference object of spool occurence
    hr = hHvaSpoolInstance-&gt;GetReference(pIHvaSpoolRef);  
    if( ( FAILED(hr) ) || ( NULL == pIHvaSpoolRef ) ) { retCode = 7; goto EscapeWay; }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Get the Spool Mode of selected Spool Instance</h3>
<pre class="code">...
      hr = hHvaSpoolInstance-&gt;GetMode(eHvaSpoolMode);
      if( ( FAILED(hr) )) { retCode = 8; goto EscapeWay; }

      cout &lt;&lt; endl &lt;&lt; &quot;Spool Mode &quot;&lt;&lt;index&lt;&lt;&quot;\t| &quot;;
      switch(eHvaSpoolMode)
      {
        case CATIHvaSpoolInstance::CatHvaEmptySpool :
             cout &lt;&lt; &quot;CatHvaEmptySpool (Spool is currently empty, hence has no mode)&quot;;
             break;
        case CATIHvaSpoolInstance::CatHvaPreliminaryDesign :
             cout &lt;&lt; &quot;CatHvaPreliminaryDesign (Spool is in preliminary design mode with links from Spool to each element.)&quot;;
             break;
        case CATIHvaSpoolInstance::CatHvaManufacturing :
             cout &lt;&lt; &quot;CatHvaManufacturing (Spool is in manufacturing mode with all elements under Spool product.)&quot;;
             break;
        case CATIHvaSpoolInstance::CatHvaMixOfPreliminaryAndManufacturing :
             cout &lt;&lt; &quot;CatHvaMixOfPreliminaryAndManufacturing (Spool is in mixed mode with links from Spool to one or more elements and other one or more elements are under Spool product.)&quot;;
             break;
        case CATIHvaSpoolInstance::CatHvaErrorWrongTypeOfElemInSpool :
             cout &lt;&lt; &quot;CatHvaErrorWrongTypeOfElemInSpool (Spool has error - wrong type of elements (equipments, supports, HVAC, Raceway) are inside Hvac spool.)&quot;;
             break;
        default :
             retCode = 9; 
             goto EscapeWay;
      }
      cout &lt;&lt; endl &lt;&lt; &quot;========================================================================&quot;&lt;&lt; endl;
      // end of the  List of Attributes and it's values of part reference
    }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Get the members of the Spool</h3>
<p>We check that the Spool must be manufacturing or preliminary design mode Spool</p>
<pre class="code">...
  if (( eHvaSpoolMode == CATIHvaSpoolInstance::CatHvaPreliminaryDesign ) || ( eHvaSpoolMode == CATIHvaSpoolInstance::CatHvaManufacturing))
   {
    hr = hHvaSpoolInstance->GetMembers( pMembersOfSpool );
    if (FAILED(hr)){ retCode = 10 ; goto EscapeWay;}
   }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Disconnecting and Deleting the Session</h3>
<p>We delete the session and disconnect from the database</p>
<pre class="code">...
  myBag.RemoveAll(); /* PLM entities life-cycle */

  hr = ::CAAAdpCloseSession();
  if (FAILED(hr)) 
  {
    cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
    retCode = 10;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>
  This use case has demonstrated the way to access, use and navigate the hvac spool.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Apr 2014]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
