<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating and Using Settings</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating and Using Settings</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article shows how to create settings file and use generic methods 
		to manage the setting attributes in the settings file .</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASysLineSetting Use Case</a>
				<ul>
					<li><a href="#What">What Does CAASysLineSetting Do</a></li>
					<li><a href="#How">How to Launch CAASysLineSetting</a></li>
					<li><a href="#Where">Where to Find the CAASysLineSetting Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This Use case is intended to show you how to create settings to store persistent 
object properties, and how to use generic setting controller object for the actual 
setting repository management using the XML file. The details of setting repository 
is included under the article [<a href="#References">1</a>] </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASysLineSetting Case</h2>
<p><code>CAASysLineSetting </code>is a set of use cases of the <code>CAASystem.edu</code> 
framework that illustrates System framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASysLineSetting Do</h3>
<p>This Use case creates a setting class named <code>CAASysLineSetting </code>to 
manage line object properties: thickness, color, and linestyle. It also shows how 
a client can access default settings from the xml file and then manage these settings 
in its settings file.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASysLineSetting</h3>
<p>To launch <code>CAASysLineSetting</code>, you will need to set up the build time 
environment, then compile <code>CAASysLineSetting</code> along with its prerequisites, 
set up the run time environment, and then execute the use case [<a href="#References">3</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASysLineSetting Code</h3>
<p>The <code>CAASysLineSetting</code> use case is made of a class located in the
<code>CAASysLineSetting.m</code> module of the <code>CAASystem.edu</code> framework:</p>
<p><code>InstallRootFolder\CAADoc\CAASystem.edu\CAASysLineSetting.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the 
folder where the API CD-ROM is installed.</p>
<p>An Xml file is also provided in the SettingsMetadata folder of CAASystem.edu 
framework.</p>
<p><code>CNext\resources\SettingsMetadata\</code></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>To create and use settings, there are five main steps:</p>
<table>
	<colgroup span="3" valign="top">
	</colgroup>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Create the XML setting file</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Create the setting repository instance</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Read the setting attribute values</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Write the setting attribute values</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Setting repository management</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Create the XML Setting file</h3>
<p>Create the XML <code>CAASysLineSetting.xml</code> setting file in the CNext\resources\SettingsMetadata 
folder. This file represents the setting repository and describes each setting attribute. 
For more information on Xml file refer the article [<a href="#References">4 </a>
]</p>
<pre class="code">&lt;st:repository xsi:schemaLocation=&quot;urn:com:dassault_systemes:settings settings.xsd&quot;
               xmlns:st=&quot;urn:com:dassault_systemes:settings&quot; 
               xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
...
&lt;/st:repository&gt;

&lt;st:Description name=&quot;CAASysLineSetting&quot; PrimaryTabpage=&quot;/Infrastructure/ProductStructure/Cache Management&quot;&gt;
  &lt;st:role&gt;Setting to handle the Line Attributes&lt;/st:role&gt;
  &lt;st:detailedRole&gt;Setting to handle the Line Attributes&lt;/st:detailedRole&gt;
  &lt;st:RepositoryFile&gt;CAASysLineSetting&lt;/st:RepositoryFile&gt;
  &lt;st:version&gt;1&lt;/st:version&gt;
  &lt;st:compatibility&gt;
    &lt;st:FullCompatibilityfromLevel&gt;1&lt;/st:FullCompatibilityfromLevel&gt;
    &lt;st:UpwardCompatibilityfromLevel&gt;1&lt;/st:UpwardCompatibilityfromLevel&gt;
  &lt;/st:compatibility&gt;
&lt;/st:Description&gt; 
...

&lt;/st:attributes&gt;

&lt;/st:repository&gt;

</pre>
<p>The whole Xml file content is enclosed within the <code>&lt;st:repository&gt;</code> 
tag. The next section deals with data about the setting repository itself.</p>
<ul>
	<li><code><strong>name</strong></code> is the setting repository name</li>
	<li><code><strong>PrimaryTabpage</strong></code> is the path of the tab page 
		in which the setting attributes can be seen and managed. </li>
</ul>
<p>Two following tags enable you to describe the setting repository</p>
<ul>
	<li><code><strong>st:roletag</strong></code> is intended to give a short desription 
		of the setting repository</li>
	<li><code><strong>st:detailedRoletag</strong></code> is for a comprehensive 
		description of the setting repository</li>
</ul>
<p>The description of other tags includes:</p>
<ul>
	<li><strong><code>st:RepositoryFile</code> </strong>enclose the setting repository 
		file name, without suffix.</li>
	<li><strong><code>st:version</code> </strong>encloses the Setting Repository 
		Version.</li>
	<li><strong><code>st:compatibility</code> </strong>expresses the version of 
		the setting repository from which the current version setting repository 
		is fully or upward compatible.</li>
</ul>
<pre class="code">
&lt;st:attributes&gt;
  &lt;st:attribute Name=&quot;Thickness&quot;&gt;
    &lt;st:role&gt;Thickness of Line&lt;/st:role&gt;
    &lt;st:int&gt;
      &lt;st:default&gt;
        &lt;st:value&gt;1&lt;/st:value&gt;
      &lt;/st:default&gt;
    &lt;/st:int&gt;
  &lt;/st:attribute&gt;
  ...

</pre>
<p>The setting attribute descriptions are enclosed using the <strong><code>st:attributes</code>
</strong>tag. Each setting attribute is described using the <strong><code>st:attribute</code></strong> 
tag. In this section , <code><strong>Name</strong></code> is the setting attribute 
name intended to be used to handle the setting attribute in the client code. This 
section also includes the Setting Attribute Type, Default Value, and Possible Values.</p>
<pre class="code">
&lt;st:attribute Name=&quot;Name&quot;&gt;
  ...
   &lt;st:URN&gt;
    &lt;st:defaultWindows&gt;
      &lt;st:value&gt;Solid&lt;/st:value&gt;
    &lt;/st:defaultWindows&gt;
    &lt;st:defaultUnix&gt;
      &lt;st:value&gt;Solid&lt;/st:value&gt;
    &lt;/st:defaultUnix&gt;
  &lt;/st:URN&gt;
  &lt;/st:attribute&gt;
  ...
 </pre>
<p>The tag <strong><code>st:URN</code></strong> is for Unicode Character string 
.Depending on the setting attribute, the default value can be unique, or two default 
values can be provided, one for UNIX, and the other one for Windows.</p>
<pre class="code">
&lt;st:attribute Name=&quot;Color&quot;&gt;
  ...
  &lt;st:int size=&quot;3&quot;&gt;
    &lt;st:default size=&quot;3&quot;&gt;
      &lt;st:value&gt;255&lt;/st:value&gt;
      &lt;st:value&gt;0&lt;/st:value&gt;
      &lt;st:value&gt;0&lt;/st:value&gt;
    &lt;/st:default&gt;
  &lt;/st:int &gt;
&lt;/st:attribute&gt;
</pre>
<p>To declare an array, use the size XML attribute of the tag used to describe the 
type . Here <code>Color</code> contains an array of three integers that default 
value of 255 , 0, 0 .</p>
<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="Step2"></a>Create the setting repository instance</h3>
<p>The <em>CAASysLineSettingMain</em> class manages the three setting attributes 
and the access to the setting repository. The details of setting controller object
<code>CATSysSettingRepository</code> is included in the article [<a href="#References">2</a>]
</p>
<pre class="code">...
CATSysSettingRepository *pSetting = NULL;
...
int main()
{...
 pSetting= CATSysSettingRepository::GetRepository("CAASysLineSetting");
 ....
</pre>
<p>Unique instance of the class <code>CATSysSettingRepository </code>named "CAASysLineSetting" 
is constructed from the file <code>CAASysLineSetting.CATSettings</code> if exists 
,else constructed from the <code>CAASysLineSetting.xml</code> file located in the 
run time view</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Read the setting attribute values</h3>
<p>The setting attribute values are read from the settings file if exists , else 
the default values defined by the XML file are read .</p>
<pre class="code">HRESULT GetThickness (int *oThickness )
{ ...
CATLONG32 status = pSetting -&gt;ReadAttr ("Thickness",oThickness);
...
}

HRESULT GetColor (int *oRed, int *oGreen, int *oBlue)
{ ...
CATLONG32 ReadCount = pSetting -&gt;ReadAttr ("Color", Color, 3);
...
}

HRESULT GetName(CATUnicodeString *oName)
{ ...
CATLONG32 status = pSetting -&gt;ReadAttr("Name",oName);
...
}</pre>
<p>Here <code>GetThickness ,GetColor ,GetName </code>are the global methods for 
managing the setting attribute. If the settings file exists, the current values 
of the setting attribute are read using <code>ReadAttr </code>method and otherwise 
the default values defined by the XML file are read .</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Write the setting attribute values</h3>
<pre class="code">HRESULT SetThickness (int iThickness )
{ ...
CATLONG32 status= pSetting-&gt;WriteAttr ( "Thickness", &amp;iThickness);...
}

HRESULT SetColor (int iRed, int iGreen, int iBlue)
{ ...
CATLONG32 status= pSetting-&gt;WriteAttr ( "Color", tab, 3);
...
}

HRESULT SetName (CATUnicodeString* iName)
{ ...
CATLONG32 status= pSetting-&gt;WriteAttr ( "Name", iName);
...
}</pre>
<p>Like <code>GetColor,SetColor</code> is the global method for managing the setting 
attribute. The values are written to the setting repository instance using the
<code>WriteAttr</code> method.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Setting repository management</h3>
<p>For the setting repository management, the three methods <code>Save</code>,
<code>Commit</code> , and <code>Rollback</code> of <em>CAASysLinesSettingMain</em> 
call the <code>SaveRepository</code>, <code>Commit</code>, and <code>Rollback</code> 
method of the <code>CATSysSettingRepository</code> class. </p>
<pre class="code">HRESULT Save()
{
  ...
  rc = pSetting-&gt;SaveRepository();
  ...
}</pre>
<p><code>SaveRepository</code> method makes a persistent copy of the setting attribute 
values as CATSettings file on disk i.e. saves the current values of the setting 
attributes managed by the setting controller in a setting repository file.</p>
<pre class="code">HRESULT Commit()
{
  ...
  rc = pSetting-&gt;Commit();
  ...
}</pre>
<p><code>Commit</code> method saves the current values of the setting attributes 
managed by the setting controller in a specific memory area for temporary runtime 
storage. The values saved by the last call to <code>Commit</code> can be restored 
from that memory area using the <code>Rollback </code>method.</p>
<pre class="code">HRESULT Rollback()
{
  ...
  rc = pSetting-&gt;Rollback();
  ...
}</pre>
<p><code>Rollback</code> method restores the last memory copy of the setting attribute 
values i.e. all values of the setting attributes managed by the setting controller 
modified since the last call to <code>Commit </code>are restored to the values they 
had when this last <code>Commit </code>was called.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case shows how to create settings to store persistent object properties, 
and using generic setting controller object for the setting repository management 
using the XML file. It also shows how to use repository instance to set and get 
the setting attribute values.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAASysTaMidSettingUnderstanding.htm">Understanding Setting 
		Repositories and Attributes</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAASysTaMidSettingHowTo.htm">How to Use Settings</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAACppTechArticles/CAADocSettingXML.htm">
		Settings Creation Guidelines</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Mar 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
