<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Retrieving 3D Annotations Applied on Geometry</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving 3D Annotations Applied on Geometry</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAATpiRetrieveAnnotation use case. This use 
		case explains how to retrieve all 3D annotations applied to a selected geometry 
		and how to highlight them.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAATpiRetrieveAnnotation Use Case</a>
				<ul>
					<li><a href="#What">What Does CAATpiRetrieveAnnotation Do</a>
					</li>
					<li><a href="#How">How to Launch CAATpiRetrieveAnnotation</a></li>
					<li><a href="#Where">Where to Find the CAATpiRetrieveAnnotation 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you to use Technological Product Specifications 
(TPS) interfaces [<a href="#References">1</a>]. The use case demonstrates <em>CATITPSRetrieveServices</em> 
interface usage to retrieve the 3D annotations linked on a selected geometry. It 
also illustrates how to highlight the retrieved annotations by using <em>CATIBuildPath</em> 
interface.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAATpiRetrieveAnnotation Use Case</h2>
<p>CAATpiRetrieveAnnotation is a use case of the CAATPSInterfaces.edu framework 
that illustrates CATTPSUseItf framework capabilities.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAATpiRetrieveAnnotation Do</h3>
<p>The use case is an interactive command that prompt the user to select a geometrical 
element and then retrieve annotations which are applied to the selection. The retrieved 
3D annotations are highlighted and their names are displayed in a panel.</p>
<p>
<img alt="Annotated Geometry" height="612" src="images/CAATpiRetrieveAnnotationResult.gif" width="734"/></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAATpiRetrieveAnnotation</h3>
<p>The use case command is available in the toolbar &quot;CAA Sample&quot; of the 
workbench Functionnal &amp; Tolerancing &amp; Annotation.</p>
<p>To launch CAATpiRetrieveAnnotation, you will need to set up the build time environment, 
then compile CAATPSInterfaces.edu framework along with its prerequisites, set up 
the run time environment, and then execute the use case [<a href="#References">2</a>].</p>
<p>Do not type the module name on the command line, but type 3DEXPERIENCE instead. When 
the application is ready, do the following:</p>
<ul>
	<li>Create a 3D shape Representation, create a pad, add annotations by using 
		Functionnal Tolerancing &amp; Annotation workbench.</li>
	<li>By default the CAA Sample toolbar is not displayed, right click on a toolbar 
		and select it in the contextual menu to make it appear.</li>
	<li>Press the Retrieve Annotation icon to start the command.</li>
</ul>
<p>
<img alt="Sample Toolbar" height="58" src="images/CAATpiToolbar.gif" width="107"/></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAATpiRetrieveAnnotation Code</h3>
<p>The CAATpiRetrieveAnnotation use case is located in the CAATpiRetrieveAnnotation.m 
module of the CAATPSInterfaces.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAATPSInterfaces.edu\CAATpiRetrieveAnnotation.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are seven logical steps in CAATpiRetrieveAnnotation:</p>
<ol>
	<li><a href="#Step1">Prolog</a></li>
	<li><a href="#Step2">Retrieving Annotations from Selection</a></li>
	<li><a href="#Step3">Iterating on the Annotations List to Retrieve their Names</a></li>
	<li><a href="#Step4">Retrieving and Initializing Highlight Set of Object (HSO)</a></li>
	<li><a href="#Step5">Building CATPathElement for Each Annotation and Place it in HSO</a></li>
	<li><a href="#Step6">Highlighting HSO</a></li>
	<li><a href="#Step7">Epilog</a></li>
</ol>
<p>We will now comment each of these sections by looking at the code.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Prolog</h3>
<p>The use case is the class CAATpiRetrieveAnnotationCmd which is a CATStateCommand 
that implement the following statechart diagram.</p>
<p>
<img alt="CAATpiRetrieveAnnotationCmd Command State Chart Diagram" height="181" src="images/CAATpiRetrieveAnnotationStatechartDiagram.gif" width="615"/></p>
<p>The Buildgraph method of the command implements this statechart diagram. There 
are 2 agents associated to the state <code>SelectState</code>. <code>SelectionAgent</code> 
is a <em>CATPathElementAgent</em> that accept all kinds of objects, when valuated 
the transition method <code>SomethingSelected</code> is called. <code>ClosePanelAgent</code> 
is a <em>CATDialogAgent</em> that listen the Close button of the panel to terminate 
the command.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving Annotations from Selection</h3>
<pre class="code">boolean CAATpiRetrieveAnnotationCmd::<strong>SomethingSelected</strong> (void * ipData)
{
...
  // Retrieve the selection
  CATPathElement * <strong>pPathSelected</strong> = _pSelectionAgent -&gt; <strong>GetValue</strong> ();
  if ( pPathSelected )
  {
    // Retrieve CATITPSRetrieveServices interfaces
    <strong>CATITPSRetrieveServices</strong> * piRetServ = NULL;
    rc = <strong>CATTPSInstantiateUseComponent</strong>(DfTPS_ItfRetrieveServices,
                                     (void**) &amp; piRetServ);
    if ( SUCCEEDED(rc) )
    {
      // Retrieve the list of TPS (3D Annotations) linked on selected Path
      <strong>CATITPSList</strong> * piTPSList = NULL;
      rc = piRetServ -&gt; <strong>RetrieveTPSsFromPath</strong> (<strong>pPathSelected</strong>, NULL, &amp;<strong>piTPSList</strong>);
      if ( SUCCEEDED(rc) )
      {
      	...
        piTPSList -&gt; Release();
        piTPSList = NULL;
      }
      piRetServ -&gt; Release();
      piRetServ = NULL;
    }
    pPathSelected = NULL;
  }
...</pre>
<p>When selection agent is valuated the transition method <code>SomethingSelected</code> 
is called. The <em>CATPathElement</em> selected <code>pPathSelected</code> is retrieved 
by calling <code>GetValue</code> on the selection agent. <em>CATITPSRetrieveServices</em> 
interface is obtained from the global service <code>CATTPSInstantiateUseComponent</code>. 
The method <code>RetrieveTPSsFromPath</code> is called with <code>pPathSelected</code> 
as input argument. The retrieved 3D annotations are returned as a <em>CATITPSList</em> 
pointer <code>piTPSList</code> .</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Iterating on The Annotations List to Retrieve their Names</h3>
<pre class="code">  CATListValCATUnicodeString AliasList;
...
        unsigned int Count = 0;
        <strong>piTPSList</strong> -&gt; <strong>Count</strong>(&amp;Count);
        if ( Count )
        {
...
              CATITPSComponent * piItem = NULL;

              <strong>CATIAlias</strong> * piAlias = NULL;
              CATUnicodeString Alias;
...
              // Iterate on the list of 3D annotations 
              for ( unsigned int Idx = 0 ; Idx &lt; Count ; Idx ++)
              {
                rc = piTPSList -&gt; <strong>Item</strong> (Idx, &amp;piItem);
                if ( SUCCEEDED(rc) )
                {
                  // Append it's alias to the list of Alias
                  rc = piItem -&gt; QueryInterface (IID_CATIAlias, 
                                                 (void**)&amp;piAlias); 
                  if ( SUCCEEDED(rc) )
                  {
                    Alias = piAlias -&gt; <strong>GetAlias</strong>();
                    AliasList.Append(Alias);

                    piAlias -&gt; Release();
                    piAlias = NULL;
                  }
                  piItem -&gt; Release();
                  piItem = NULL;
                }
              }
...
        }
...
  // Send AliasList to the panel for Display
  _pPanel -&gt; <strong>SetAliasList</strong> (AliasList);
...</pre>
<p>The <code>AliasList</code> that contains the names of retrieved 3D Annotations 
is constructed by iterating on <code>piTPSList</code> with <code>Count</code> and
<code>Item</code> methods. The name of each 3D Annotations is obtained by <em>CATIAlias</em>::<code>GetAlias</code> 
method. And last, the <code>SetAliasList</code> method is used to inform the panel 
of the new <code>AliasList</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Retrieving and Initializing Highlight Set of Object (HSO)</h3>
<pre class="code">          // Retrieve HSO from editor and Empty it
          CATFrmEditor * pEdt = <strong>GetEditor</strong>();
          if ( pEdt ) 
          {
            CATHSO * <strong>pHSO</strong> = pEdt -&gt; <strong>GetHSO</strong>();
            if ( pHSO ) 
            {
              pHSO -&gt; <strong>Empty</strong>();
              // Add selected PathElement in the HSO, it will be highlighted
              pHSO -&gt; <strong>AddElements</strong> (<strong>pPathSelected</strong>);</pre>
<p>In a <em>CATStateCommand</em>, the editor can be retrieved thanks to <code>GetEditor</code> 
method. That allows to retrieved the HSO which manage highlight. HSO is reseted 
by <code>Empty</code> method. The selected path <code>pPathSelected</code> is placed 
in HSO with <code>AddElements</code> method.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Building CATPathElement for Each Annotation 
and Place it in HSO</h3>
<pre class="code">              <strong>CATIBuildPath</strong> * piBuildPath = NULL;
              CATPathElement * pPath = NULL;
...
                  // Highlight the retrieved TPS by placing its PathElement
                  // in the HSO.
                  rc = <strong>piItem</strong> -&gt; QueryInterface (IID_CATIBuildPath, 
                                                 (void**)&amp;piBuildPath);  
                  if ( SUCCEEDED(rc) )
                  {
                    rc = piBuildPath -&gt; <strong>ExtractPathElement</strong>(<strong>pPathSelected</strong>, &amp;<strong>pPath</strong>);
                    if ( SUCCEEDED(rc) )
                    {
                      <strong>pHSO</strong> -&gt; <strong>AddElements</strong> (<strong>pPath</strong>);

                      pPath -&gt; Release();
                      pPath = NULL;
                    }
                    piBuildPath -&gt; Release();
                    piBuildPath = NULL;
...</pre>
<p>For each 3D annotation (<code>piItem</code>) <em>CATIBuildPath</em> interface 
is used to generated the <em>CATPathElement</em> <code>pPath</code>. <code>ExtractPathElement</code> 
method must be called with a context path which is used in product environment to 
known which instance of the product containing the Annotation must be highlighted. 
Here the selected path <code>pPathSelected</code> is used as context.</p>
<p>The HSO is filled with the generated path by calling <code>AddElements</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Highlighting HSO</h3>
<pre class="code">              // No more elements to Add in the HSO, notification is send
              // and HSO content can be highlighted.
              pHSO -&gt; <strong>EndAddElements</strong> ();
...</pre>
<p>The <code>EndAddElements</code> method is used to inform the HSO that it can 
display and highlight it's content.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Epilog</h3>
<p>The use case finishes when the command ended by pressing the close button in 
the panel.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated how to retrieve 3D Annotations linked to a geometry 
and how to highlight them.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAATpiTaTPSOverview.htm">Technological Product Specification 
		Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Feb 2002]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
