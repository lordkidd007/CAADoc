<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating a 3D Text Annotation</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating a 3D Text Annotation</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAATpiCreateText use case. This use case explains 
		how to create a 3D text annotation associated to a selected geometry and 
		how to modify some properties such as position, text size, font and leader 
		extremity symbol.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAATpiCreateText Use Case</a>
				<ul>
					<li><a href="#What">What Does CAATpiCreateText Do</a> </li>
					<li><a href="#How">How to Launch CAATpiCreateText</a></li>
					<li><a href="#Where">Where to Find the CAATpiCreateText Code</a>
					</li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you to use Technological Product Specifications 
(TPS) interfaces [<a href="#References">1</a>]. The use case demonstrates <em>CATITPSFactoryAdvanced</em> 
interface usage to create a 3D text annotation. It also illustrates how to modify 
3D annotation properties by using interfaces from DraftingUseItf framework.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAATpiCreateText Use Case</h2>
<p>CAATpiCreateText is a use case of the CAATPSInterfaces.edu framework that illustrates 
CATTPSUseItf framework capabilities.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAATpiCreateText Do</h3>
<p>The use case is an interactive command that prompt the user to select a geometrical 
element and then create a 3D text annotation associated to that geometry.</p>
<p>
<img alt="Annotated Geometry" height="530" src="images/CAATpiCreateTextResult.gif" width="623"/></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAATpiCreateText</h3>
<p>The use case command is available in the toolbar &quot;CAA Sample&quot; of the 
workbench Functionnal &amp; Tolerancing &amp; Annotation.</p>
<p>To launch CAATpiCreateText, you will need to set up the build time environment, 
then compile CAATPSInterfaces.edu framework along with its prerequisites, set up 
the run time environment, and then execute the use case [<a href="#References">2</a>].</p>
<p>Do not type the module name on the command line, but type 3DEXPERIENCE instead. When 
the application is ready, do the following:</p>
<ul>
	<li>Create a 3D shape Representation, create a pad.</li>
	<li>By default the CAA Sample toolbar is not displayed, right click on a toolbar 
		and select it in the contextual menu to make it appear.</li>
	<li>Press the Create Text icon to start the command.</li>
</ul>
<p>
<img alt="Sample Toolbar" height="58" src="images/CAATpiToolbar.gif" width="107"/></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAATpiCreateText Code</h3>
<p>The CAATpiCreateText use case is located in the CAATpiCreateText.m module of 
the CAATPSInterfaces.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAATPSInterfaces.edu\CAATpiCreateText.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are eight logical steps in CAATpiCreateText:</p>
<ol>
	<li><a href="#Step1">Prolog</a></li>
	<li><a href="#Step2">Providing Appropriate Filter to the Geometric Selection Agent</a></li>
	<li><a href="#Step3">Creating Text</a></li>
	<li><a href="#Step4">Modifying Text Position</a></li>
	<li><a href="#Step5">Modifying Leader Extremity Symbol</a></li>
	<li><a href="#Step6">Modifying Text Size and Font</a></li>
	<li><a href="#Step7">Creating a Text on a Text</a></li>
	<li><a href="#Step8">Epilog</a></li>
</ol>
<p>We will now comment each of these sections by looking at the code.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Prolog</h3>
<p>The use case is the class CAATpiCreateTextCmd which is a CATStateCommand that 
implement the following statechart diagram.</p>
<p>
<img alt="CAATpiCreateTextCmd Command State Chart Diagram" height="159" src="images/CAATpiCreateTextStatechartDiagram.gif" width="538"/></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Providing Appropriate Filter to the Geometric Selection Agent</h3>
<pre class="code">void CAATpiCreateTextCmd::<strong>BuildGraph</strong> ()
{
  // Create selection agent
  _pAgentGeometry = new <strong>CATPathElementAgent</strong> (&quot;AgentGeometry&quot;,
                                             NULL,
                                             CATDlgEngWithPrevaluation|
                                             CATDlgEngMultiAcquisition|
                                             CATDlgEngWithPSOHSO);
  CATListOfCATString TypeList(15);

  // Retrieve CATITPSFactoryTTRS interfaces
  <strong>CATITPSFactoryTTRS</strong> * piFactTTRS = NULL;
  rc = <strong>CATTPSInstantiateComponent</strong> (DfTPS_ItfTPSFactoryTTRS,
                                   (void**) &amp; piFactTTRS);
  if ( SUCCEEDED(rc) )
  {
    // Obtain Filter that must be used for selecting geometry
    // to create 3D annotation.
    piFactTTRS -&gt; <strong>GetOrderedTypeList</strong> (&amp;TypeList);

    piFactTTRS -&gt; Release();
    piFactTTRS = NULL;
  }

  _pAgentGeometry -&gt; <strong>SetOrderedTypeList</strong>(TypeList);

  <strong>AddCSOClient</strong> (_pAgentGeometry);
...</pre>
<p>The selection agent is created in the <code>Buildgraph</code> method of the command. 
It's a standard <em>CATPathElementAgent</em>. It's behavior <code>CATDlgEngMultiAcquisition</code> 
allows him to accept several selection. It's behavior <code>CATDlgEngWithPSOHSO</code> 
and the call to the <code>AddCSOClient</code> method allow the command to work in 
the object-action mode. That means that the user can select one or several geometrical 
elements then launch the command to create a text that will be associated to the 
whole selection.</p>
<p>On which kind of geometrical element is it possible to create a 3D Text ? The 
answer to this question is given by the <em>CATITPSFactoryTTRS</em>::<code>GetOrderedTypeList</code> 
method. It returns a list of interface name (<code>TypeList</code><em>)</em> that 
is provided to the selection agent by <code>SetOrderedTypeList</code><em> </em>method. 
The selection agent use that list of interfaces to filter selection and keep only 
the geometrical elements on which it is possible to create a 3D annotation.</p>
<p><em>CATITPSFactoryTTRS</em> interface is obtained from the global service
<code>CATTPSInstantiateComponent</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating Text</h3>
<pre class="code">boolean CAATpiCreateTextCmd::<strong>CreateTextOnSelection</strong> (void * ipData)
{
  if ( !_pAgentGeometry ) return (TRUE);

  HRESULT rc = E_FAIL;

  // Retrieve the selected geometry
  CATSO * pSelection = _pAgentGeometry -&gt; <strong>GetListOfValues</strong>();
  if ( pSelection )
  {
    // Retrieve CATITPSFactoryAdvanced interfaces
    <strong>CATITPSFactoryAdvanced</strong> * piFactAdv = NULL;
    rc = <strong>CATTPSInstantiateComponent</strong> (DfTPS_ItfTPSFactoryAdvanced,
                                     (void**) &amp; piFactAdv);
    if ( SUCCEEDED(rc) )
    {
      <strong>CATITPSText</strong> * piText = NULL;
      CATUnicodeString TextString(&quot;Sample 3D Text&quot;);
      CATMathPlane Plane = CATMathOIJ;
      rc = piFactAdv -&gt; <strong>CreateTextOnGeometry</strong> (pSelection, &amp;Plane,
                                              &amp;TextString , &amp;piText);
      if ( SUCCEEDED(rc) )
      {
        ...
        piText -&gt; Release();
        piText = NULL;
      }
      piFactAdv -&gt; Release();
      piFactAdv = NULL;
    }
  }
  return (TRUE);
}</pre>
<p>When selection agent is valuated the transition method <code>CreateTextOnSelection</code> 
is called. The selected geometry is retrieved by calling <code>GetListOfValues</code> 
on the selection agent. Selection is returned as a <em>CATSO</em> which contains 
one or more <em>CATPathElement</em>. <em>CATITPSFactoryAdvanced</em> interface is 
obtained from the global service <code>CATTPSInstantiateComponent</code>. The method
<code>CreateTextOnGeometry</code> is called with the following input arguments:</p>
<ul>
	<li>A <em>CATSO</em> which contains <em>CATPathElement</em> referencing geometry.</li>
	<li>The annotation Text as a <em>CATUnicodeString</em>.</li>
	<li>An optionnal plane to specify a favorite annotation plane for 3D visualization.</li>
</ul>
<p>It's output is a <em>CATITPSText</em> pointer on the created text.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Modifying Text Position</h3>
<pre class="code">        <strong>CATIDrwAnnotation</strong> * piAnnot = NULL;
        rc = piText -&gt; QueryInterface (IID_CATIDrwAnnotation, 
                                       (void**) &amp; piAnnot);
        if ( SUCCEEDED(rc) )
        {
          double DeltaX = -20.0;
          double DeltaY = +20;

          piAnnot -&gt; <strong>Move</strong> (DeltaX, DeltaY);

          piAnnot -&gt; Release();
          piAnnot = NULL;
        }
...</pre>
<p>The interface <em>CATIDrwAnnotation</em> from the DraftingInterface framework [<a href="#References">3</a>] 
is available on 3D Text Annotation. It can be used to retrieve and manipulate annotation's 
position in annotation plane.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Modifying Leader Extremity Symbol</h3>
<pre class="code">        <strong>CATIDrwEltWithLeader</strong> * piEltWithLeader = NULL;
        rc = piText -&gt; QueryInterface(IID_CATIDrwEltWithLeader,
                                      (void **) &amp;piEltWithLeader);
        if ( SUCCEEDED(rc) )
        {
          int LeaderCount = piEltWithLeader -&gt; <strong>GetNbLeader</strong> ();
          if ( LeaderCount &gt;= 1 )
          {
            <strong>CATIDrwLeader</strong>_var spDrwLeader = piEltWithLeader -&gt; <strong>GetLeader</strong> (1);
            if ( NULL_var !=spDrwLeader )
            {
            }
          }
          piEltWithLeader -&gt; Release();
          piEltWithLeader = NULL;
        }
...</pre>
<p>The interface <em>CATIDrwEltWithLeader</em> from DraftingInterface framework 
[<a href="#References">3</a>] is available on 3D Text Annotation. It can be used 
to retrieve annotation's leaders and to modify them.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Modifying Text Size and Font</h3>
<pre class="code">        <strong>CATIDrwTextProperties</strong> * piTxtProp = NULL;
        rc = piText -&gt; QueryInterface (IID_CATIDrwTextProperties, 
                                          (void**) &amp; piTxtProp);
        if ( SUCCEEDED(rc) )
        {
          // Change Font Size to 7.0 millimeters
          piTxtProp -&gt; <strong>SetFontSize</strong> (7.0);

          // Use Gothic Font
          CATUnicodeString FontName(&quot;GOTH&quot;);
          piTxtProp -&gt; <strong>SetFontName</strong>(FontName);

          piTxtProp -&gt; <strong>Refresh</strong>();

          piTxtProp -&gt; Release();
          piTxtProp = NULL;
        }
...</pre>
<p>The interface <em>CATIDrwTextProperties</em> from the DraftingInterface framework 
[<a href="#References">3</a>] is available on 3D Text Annotation. It can be used 
to retrieve and modify annotation's properties like Size and Font.</p>
<p>The <code>Refresh</code> method must be called to update 3D Text visualization.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Creating a Text on a Text</h3>
<pre class="code">         CATITPS * piTPS = NULL;
         rc = piText -&gt; QueryInterface (IID_CATITPS, (void**)&amp;piTPS);
         if ( SUCCEEDED(rc) )
         {
            CATITPSText * piTxt = NULL;
            CATUnicodeString Txt(&quot;Text on a Text&quot;);
            rc = piFactAdv -&gt; CreateTextOnAnnotation (piTPS, &amp;Txt, &amp;piTxt);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Epilog</h3>
<p>The use case finishes when the command ended. A new 3D text is created. It appears 
in the graph and in the 3D view. It's leader is pointing on the selected geometry.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the integration of 3D Text creation and modifications 
APIs in an interactive command.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAATpiTaTPSOverview.htm">Technological Product Specification 
		Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td><a name="RefProlog"></a>[3]</td>
		<td>
		<a href="../CAADriDrafting/CAADriTcDraftingToc.htm">
		Drafting</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Feb 2002]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
