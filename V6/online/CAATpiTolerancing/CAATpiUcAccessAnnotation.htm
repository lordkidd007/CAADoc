<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Retrieving 3D Annotations from 3D Shape Representation Reference</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving 3D Annotations from 3D Shape Representation 
		Reference</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAATpiAccessAnnotation use case. This use 
		case explains how to access to the 3D Annotations from the 3D Shape Representation 
		Reference.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAATpiAccessAnnotation Use Case</a>
			<ul>
				<li><a href="#What">What Does CAATpiAccessAnnotation Do</a></li>
				<li><a href="#How">How to Launch CAATpiAccessAnnotation</a></li>
				<li><a href="#Where">Where to Find the CAATpiAccessAnnotation Code</a>
				</li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you to use Technological Product Specifications 
(TPS) interfaces [<a href="#References">1</a>]. The use case demonstrates <em>CATITPSServicesContainers::GetSet 
method</em> usage to retrieve the Annotation Set from the 3D Shape Representation 
Reference. This interface contains a method to retrieve the tolerancing container 
from the 3D Shape Representation Reference.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAATpiAccessAnnotation Use Case</h2>
<p>CAATpiAccessAnnotation is a use case of the CAATPSInterfaces.edu framework that 
illustrates CATTPSUseItf framework capabilities.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAATpiAccessAnnotation Do</h3>
<p>The use case is a batch program, to retrieve in the database a 3D Shape Representation 
Reference from the PLM External ID value. When the 3D Shape Representation Reference 
is loaded, the batch shows you how to retrieve the FTA Annotation from the 3D Shape 
Representation Reference, then the Annotations from the Annotation Set.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAATpiAccessAnnotation</h3>
<p>To launch CAATpiAccessAnnotation, you will need to set up the build time environment, 
then compile CAADrwCallout along with its prerequisites, set up the run time environment, 
and then execute the use case [<a href="#References">1</a>].</p>
<pre>mkrun -c &quot;CAATpiAccessAnnotation Repository Server Username Password SecurityCtx PLMType PLMExternalIDValue Version&quot;</pre>
<p>where the description of the arguments is the following:</p>
<table class="fill">
	<colgroup align="center" span="1">
	</colgroup>
	<tr>
		<th>Position</th>
		<th>Description</th>
		<th>Example</th>
		<th>Category</th>
	</tr>
	<tr>
		<td>1</td>
		<td>PLM repository</td>
		<td>PLM1</td>
		<td rowspan="5">Connection</td>
	</tr>
	<tr>
		<td>2</td>
		<td>PLM server</td>
		<td>The name and port of the server as <em>name</em>:<em>port_number</em></td>
	</tr>
	<tr>
		<td>3</td>
		<td>Username</td>
		<td>The user name</td>
	</tr>
	<tr>
		<td>4</td>
		<td>Password</td>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<td>5</td>
		<td>SecurityCtx</td>
		<td>A string representing the security context (SecurityCtx.Organization.Project). 
		Choose SecurityCtx as Designer(as the use case modifies the PLM data)</td>
	</tr>
	<tr>
	    <td> 6</td>
		<td>PLMType</td>
		<td>A PLMType for a PLM Reference or PLM Representation Reference.</td>
		<td> Component Type</td>
	</tr>
	<tr>
		<td>7</td>
		<td>PLMExternalIDValue</td>
		<td>CAATpiAccessAnnotation</td>
		<td rowspan="2">Component Attribute</td>
	</tr>
	<tr>
		<td>8</td>
		<td>Version</td>
		<td>---</td>
	</tr>
</table>
<p><strong>Import PLM Data:</strong> The use case may require input PLM Data: PLM 
Reference or PLM Representation Reference. This data is stored in 3D XML files, 
whose extension is &quot;3dxml&quot;. You must import these PLM Data in the database using 
the PLM Access / Import As 3D XML command prior to launching the use case.<br />
The &quot;3dxml&quot; file is supplied in the the CAATPSInterfaces.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAATPSInterfaces.edu\InputData\CAATpiAccessAnnotation.3dxml</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This &quot;3dxml&quot; file contains the representation reference with the following attributes:</p>
<ul>
	<li><strong>PLMExternalIDValue</strong>: CAATpiAccessAnnotation</li>
	<li><strong>Version</strong>: ---</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAATpiAccessAnnotation Code</h3>
<p>The CAATpiAccessAnnotation use case is located in the CAATpiAccessAnnotation.m 
module of the CAATPSInterfaces.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAATPSInterfaces.edu\CAATpiAccessAnnotation.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are four logical steps in CAATpiAccessAnnotation:</p>
<ol>
	<li><a href="#Step1">Creating and Initializing the PLM Environment</a></li>
	<li><a href="#Step2">Querying the 3D Shape Representation Reference in Database 
	and Loading It</a></li>
	<li><a href="#Step3">Retrieving the Annotation Set 
	from the 3D Shape Representation Reference</a></li>
	<li><a href="#Step4">Retrieving the 3D Annotations from the Annotation 
	Set</a></li>
	<li><a href="#Step5">Closing Session</a></li>
</ol>
<p>We will now comment each of these sections by looking at the code.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Creating and Initializing the PLM Environment</h3>
<pre class="code">int main(int iargc, char *iargv[])
{
  HRESULT hr;
  int rc = 1;

  // 1. Checks the input arguments
  // =============================
     if (9 != iargc) {
      cout &lt;&lt; &quot;Usage: &quot; &lt;&lt; iargv[0] &lt;&lt; &quot; &lt;repository&gt; &lt;server&gt; &lt;user&gt; &lt;password&gt; &lt;SecurityCtx&gt; &lt;PLMType&gt; &lt;PLM External Id&gt; &lt;version&gt;&quot;&lt;&lt; endl;

      return rc;
   }
   const char* repository = iargv[1];
   const char* server     = iargv[2];
   const char* user       = iargv[3];
   const char* password   = iargv[4];
   const char* SecurityCtx      = iargv[5];
   const char* comp_PLMType     = iargv[6];
   const char* comp_externalId  = iargv[7];
   const char* comp_version     = iargv[8];

   // 2. Creates a PLM session and connect to the input repository
   // ============================================================
   CATBoolean traceok = TRUE;
   hr = ::CAAAdpCreateSession(repository,server,user,password,SecurityCtx,traceok);
    
...</pre>
<p>This section represents the usual sequence for initializing a PLM environment.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Querying the 3D Shape Representation Reference in Database 
and Loading It</h3>
<pre class="code">...
  
   // 3. Opens the 3D Part representation reference 
   // =============================================
   CATIPsiRepresentationReference *pi3DShapeRepRef = NULL;
   CATOmbLifeCycleRootsBag Bag;
 
   hr = ::CAAOpenPLMComponent(comp_PLMType, comp_externalId, comp_version, IID_CATIPsiRepresentationReference, (void **)&amp;pi3DShapeRepRef, Bag);
  
  if(FAILED(hr) || (NULL==pi3DShapeRepRef))
   {
     cout &lt;&lt; "Failure to open the 3D Representation Reference " &gt;&gt; endl;
     return rc;
   
  // 4 Loads the representation in "Edit Mode"
  // =========================================
  CATIPsiRepresentationLoadMode *piRepLoadMode = NULL;
  if (pi3DShapeRepRef &amp;&amp;  SUCCEEDED( pi3DShapeRepRef-&gt;QueryInterface( IID_CATIPsiRepresentationLoadMode, (void **) &amp; piRepLoadMode ) ) )
  {
     hr = piRepLoadMode-&gt;ChangeLoadingMode( CATIPsiRepresentationLoadMode::EditMode );
     piRepLoadMode-&gt;Release();piRepLoadMode=NULL;
  }</pre>
<p>This section represents the usual sequence to query a representation reference 
in the database and open it. To retrieve 3D annotation Set, the Representation must be loaded in Edit mode.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Retrieving the Annotation Set 
from the 3D Shape Representation Reference</h3>
<pre class="code">...
  // 5. Retrieves the Annotation Set from the 3D Shape Representation Reference
  // ==========================================================================
  CATITPSServicesContainers *piTPSServ = NULL;
  if (SUCCEEDED(CATTPSInstantiateUseComponent(DfTPS_ItfTPSServicesContainer, (void**)&amp;piTPSServ)))
  {
    CATITPSSet *piTPSSet = NULL;
    hr = piTPSServ-&gt;GetSet(pi3DShapeRepRef,&amp;piTPSSet);
    if (SUCCEEDED(hr) &amp;&amp; piTPSSet)
    {
      cout &lt;&lt; &quot;the 3D Annotation Set is retrieved &quot; &lt;&lt; endl;
  ...</pre>
<p>The Annotation Set is retrieved by using GetSet method defined in CATITPSServicesContainers. 
The CATTPSInstantiateUseComponent&nbsp;class allows retrieving a pointer on this interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Retrieving the 3D Annotations from the Annotation 
Set</h3>
<pre class="code"> 
  // 6. Retrieves the TPS elements from the Annotation Set 
  // =====================================================
  CATITPSList *piTPSList = NULL;
  if (SUCCEEDED(piTPSSet-&gt;GetTPSs (&amp;piTPSList)))
  {
    unsigned int SetCount = 0;
    piTPSList -&gt; Count(&amp;SetCount);
    // Retrieve All Annotations in the list. 
    // (There is only one annotation created with 3D Shape Representation Reference delivered).
    CATITPSComponent* piTPSCompOnSet = NULL;
    for (int indexlist = 1; indexlist &lt;= SetCount ; indexlist++)
    {
      if (SUCCEEDED(piTPSList-&gt;Item (indexlist, &amp;piTPSCompOnSet)))
      {
        CATITPSText *piTPSText = NULL;
        if (piTPSCompOnSet &amp;&amp; SUCCEEDED(piTPSCompOnSet-&gt;QueryInterface(IID_CATITPSText,(void **)&amp;piTPSText)))
        {
          cout &lt;&lt; &quot;there is a text &quot;&lt;&lt; endl;
          rc = 0 ;
          piTPSText-&gt;Release();piTPSText=NULL;
        }
        if (piTPSCompOnSet) piTPSCompOnSet-&gt;Release(),piTPSCompOnSet=NULL;
      }
    }
    piTPSList-&gt;Release();piTPSList=NULL;
   }
  
...</pre>
<p>The 3D Annotations are aggregated by the Annotation Set. GetTPSs method retrieves 
all the Annotations from the Annotation Set.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Closing Session</h3>
<pre class="code">  
   // 7. Empty the Bag
   //=================
   Bag.RemoveAll();

   // 8. Close the PLM session
   //=========================
   hr = ::CAAAdpCloseSession();

...</pre>
<p>Before closing the CATIA Session, the bag must be emptied.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated how to access Annotation Set ans 3D Annotations 
from 3D Shape Representation Reference.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAATpiTaTPSOverview.htm">Technological Product Specification 
		Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Nov 2006]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
