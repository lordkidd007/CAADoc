<html>
	<head>
		<title>Creating annotations using an interactive command</title>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<meta content="MSHTML 6.00.2900.3314" name="GENERATOR">
		<meta content="FrontPage.Editor.Document" name="ProgId">
		<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
		<script language="JavaScript" src="../CAADocJavaScript/submit.js"></script>
	</head>
	<body>
		<table class="DocHeader">
			<tr>
				<td class="DocHeader1">
					<h1><a name="Top"></a>Creating annotations using an interactive command</h1>
				</td>
			</tr>
			<tr>
				<td class="use">Use Case</td>
			</tr>
		</table>
		<!---------------------------------comment------------------------------------->
		<table class="abstract">
			<tr>
				<td>
					<h2><a name="Top"></a>Abstract</h2>
					<p>
						This article discusses the <code><b>CAAMarker</b></code> use case. This use 
						case explains how to create 2D and 3D annotations with an interactive command 
						using APIs of the <code><b>PLMValidationInterfaces</b></code> framework.
					</p>
					<p>
						<a href="#Learn">What You Will Learn With This Use Case</a>
					</p>
					<ul>
						<li>
							<a href="#UseCase">The CAAMarker Use Case</a></li>
						<ul>
							<li>
								<a href="#What">What does the CAAMarker do</a></li>
							<li>
								<a href="#How">How to use the command described in this use case</a></li>
							<li>
								<a href="#Where">Where to find the CAAMarker</a></li>
						</ul>
						<li>
							<a href="#Step">Step-by-Step</a></li>
						<li>
							<a href="#InShort">In Short</a></li>
						<li>
							<a href="#References">References</a></li>
						<li>
							<a href="#History">History</a></li>
					</ul>
				</td>
			</tr>
		</table>
		<!---------------------------------comment------------------------------------->
		<h3><a name="Learn"></a>What You Will Learn With This Use Case</h3>
		<p>
			The objective of this use case is to familiarize the user with the APIs meant 
			for customizing 2D and 3D annotations.
		</p>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h3><a name="UseCase"></a>The CAAMarker Use Case</h3>
		<p>
			<code><b>CAAMarker</b></code> is a use case of the <code><b>CAAValidationInterfaces.edu</b></code>
			framework that illustrates the capabilities of 2D and 3D annotations APIs.
		</p>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="What"></a>What Does CAAMarker Do</h4>
		<p>
			The required environment for the use case is a product on a Digital Review.
		</p>
		<p>
			The customized command created on this use case permits to mark parts of a 
			product by a 3D text containing the word &quot;VERIFIED&quot;.
		</p>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="How"></a>How to use the command described in this use case
		</h4>
		<p>
			1. The user select a part.
		</p>
		<p>
			2. The user click on the customized icon.
		</p>
		<p>
			3. A Marker 3D Text is created :
		</p>
		<ul>
			<li>
				The pointing point of the leader is the center of the bounding sphere of the 
				selected part.</li>
			<li>
				The length of the leader is equal to the radius of the bounding sphere of the 
				selected part.</li>
			<li>
				The content of the text is &quot;VERIFIED&quot;.</li>
		</ul>
		<p>
			<img src="CAAMar1.jpg">
		</p>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Where"></a>Where to Find the CAAMarkerCode</h4>
		<p>
			The <a><code><b>CAAMarker </b></code></a>use case is located in the <a><code><b>CAAMarkerSample.m</b></code></a>
			module of the <a><code><b>CAAValidationInterfaces.edu</b></code></a> framework:
		</p>
		<table>
			<tr>
				<td>
					<code>InstallRootDirectory\</code>CAAValidationInterfaces.edu<code>\</code>CAAMarkerSample.m<code>\</code>
				</td>
			</tr>
		</table>
		<p>
			where <code><a><b>InstallRootDirectory</b></a></code> [<a href="#References">1</a>] 
			is the directory where the CAA CD-ROM is installed.
		</p>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h3><a name="Step"></a>Step-by-Step</h3>
		<p>
			Following are the four class in <code><a><b>CAAMarkerSample.m</b></a></code>:
			<ol>
				<li>
					<a><b>CAAMarkerCustoCombo_Addin</b> : containing the implementation of addins for 
						the wanted workbench</a></li>
				<li>
					<a><b>CAAMarkerCustoCombo_HeaderRepImpl</b> : customization of a command header</a></li>
				<li>
					<a><b>CAAMarkerCustoCombo_Header</b> : definition of a command header</a></li>
				<li>
					<a><b>CAAMarkerCustoCombo_Rep</b> : Customized representation and behavior of the 
						command</a></li>
			</ol>
		</p>
		<p>
			Following are the main steps in <code><a><b>CAAMarkerCustoCombo_Rep::ExecuteCommand : </b>
				</a></code>
			<ul>
				<li>
					<b><a href="#Retrieves the current editor">Retrieves the current editor</a></b>
				<li>
					<b><a href="#Retrieves the representation of the highlighted object">Retrieves the 
							representation of the the highlighted object</a></b>
				<li>
					<b><a href="#Retrieves the root of the current editor">Retrieves the root of the 
							current editor</a></b>
				<li>
					<b><a href="#Creates the review under the root">Creates the review under the root</a></b>
				<li>
					<b><a href="#Creates the marker">Creates the marker</a></b>
				<li>
					<b><a href="#Set the attributes of the marker">Set the attributes of the marker</a></b>
				<li>
					<b><a href="#Updates the visualisation">Updates the visualization</a></b>
			</ul>
		</p>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Retrieves the current editor"></a>Retrieves the current editor</h4>
		<p>
			The execution of the command customized in <code><b>CAAMarker</b></code> use 
			case begins by retrieving the current editor.
		</p>
		<table class="code" width="912">
			<tr>
				<td width="904">
					<pre>
...
	// ---------------------------------------
	// STEP 1 - Retrieves  the  current editor
	// ---------------------------------------
	CATFrmEditor  *  pEditor  =  CATFrmEditor::GetCurrentEditor();
...
					</pre>
				</td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Retrieves the representation of the highlighted object"></a>Retrieves 
			the representation of the the highlighted object</h4>
		<p>
			Then, the <code><b>CAAMarker</b></code> customized command retrieves the 
			representation of the highlighted object.
		</p>
		<table class="code" width="912" ID="Table1">
			<tr>
				<td width="904">
					<pre>
...
	// -------------------------------------------------------------------
	// STEP 2 - Retrieves the representation of the the highlighted object
	// -------------------------------------------------------------------
	if(pEditor)
	{
		CATHSO * pHSO = pEditor->GetHSO();
		if(pHSO)  
		{  
			pHSO  ->  InitElementList();  
			CATPathElement *  pElement = NULL;  
			while(pElement = (CATPathElement *)pHSO->NextElement())
			{
				if(pElement) 
				{
					CATIPLMNavOccurrence * pNavOccurence = NULL;
					if(SUCCEEDED(pElement->Search(IID_CATIPLMNavOccurrence, (void **)&pNavOccurence)))
					{
						CATI3DGeoVisu * p3DGeoVisu = NULL;
						if(SUCCEEDED(pNavOccurence->QueryInterface(IID_CATI3DGeoVisu,(void**)&p3DGeoVisu)))
						{
							CATRep * pRep = p3DGeoVisu->GiveRep();

...
					</pre>
				</td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Retrieves the bounding sphere of the highlighted object"></a>Retrieves 
			the bounding sphere of the highlighted object</h4>
		<p>
			The <code><b>CAAMarker</b></code> customized command retrieves the bounding 
			sphere of the representation of the highlighted object. The value of the radius 
			and the coordinates of the center will be useful to set the attributes of the 
			3D text annotation.
		</p>
		<table class="code" width="912">
			<tr>
				<td width="904">
					<pre>
...
								// ----------------------------------------------------------------
								// STEP 3 - Retrieves the bounding sphere of the highlighted object
								// ----------------------------------------------------------------
								CAT3DBoundingSphere bs = ((CAT3DRep*)pRep)->GetBoundingElement();
								radius = bs.GetRadius();
								center = bs.GetCenter();
...
					</pre>
				</td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Retrieves the root of the current editor"></a>Retrieves the root of 
			the current editor</h4>
		<p>
			The <code><b>CAAMarker</b></code> customized command retrieves the root element 
			of the current editor.
		</p>
		<table class="code" width="912">
			<tr>
				<td width="904">
					<pre>
...			
	// -------------------------------------------------
	// STEP 4 - Retrieves the root of the current editor
	// -------------------------------------------------
	if(NULL == _pReview)
	{
		CATBaseUnknown  *  pRoot  =  NULL;
		CATListPtrCATIPLMComponent ListEditedRoot;
		if(SUCCEEDED(CATPLMComponentInterfacesServices::GetEditedRootPLMComponents(pEditor, ListEditedRoot)))
		{
			for  (int i=1 ; i&lt;=ListEditedRoot.Size() ; i++ )
			{
				CATIPLMComponent * pPLMCompOnRoot = ListEditedRoot[i];
				if  (NULL  !=  pPLMCompOnRoot)
				{
					pRoot = pPLMCompOnRoot;
...
					</pre>
				</td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Creates the review under the root"></a>Creates the review under the 
			root</h4>
		<p>
			<code><b>CreateReview</b></code> is the routine which creates a Review under 
			the root element.
		</p>
		<table class="code" width="912">
			<tr>
				<td width="904">
					<pre>
...
					// -----------------------------------------
					// STEP 5 - Creates the review under the root
					// -----------------------------------------
					CATIREVReviewFactory * pReviewFactory = NULL;
					CATIVALValidation * pValidation = NULL;
					if(SUCCEEDED(pRoot->QueryInterface(IID_CATIREVReviewFactory, (void  **) &pReviewFactory))) // DMR Context
					{
						pReviewFactory->CreateReview(_pReview);
						pReviewFactory->Release();
						pReviewFactory = NULL;
						break;
					}
					else if(SUCCEEDED(pRoot->QueryInterface(IID_CATIVALValidation, (void  **) &pValidation))) // VDV Context
					{
						CATIVALReview * pValidationReview = NULL;
						if(SUCCEEDED(pValidation->CreateReview(pValidationReview)))
						{
							pValidationReview->GetManagementFactory(IID_CATIREVReview,(void **)&_pReview);
							pValidationReview->Release();
							pValidationReview = NULL;	
						}
						pValidation->Release();
						pValidation = NULL;
						break;
					}
...
					</pre>
				</td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Creates the marker"></a>Creates the marker</h4>
		<p>
			The <code><b>CAAMArker</b></code> customized command creates a 3D Text 
			Annotation.
		</p>
		<table class="code" width="912">
			<tr>
				<td width="904">
					<pre>
...
	// ---------------------------
	// STEP 6 - Creates the marker
	// ---------------------------
	if(NULL != _pReview)
	{
		CATIMarker3DFactory * pMarker3DFactory = NULL;
		if(SUCCEEDED(_pReview->QueryInterface(IID_CATIMarker3DFactory,(void**)&pMarker3DFactory)))
		{
			CATBaseUnknown * p3DMarker = NULL;
			if(SUCCEEDED(pMarker3DFactory->CreateMarker3D("3DMarkerText", p3DMarker)))
			{
				CATIMarker3DText* p3DMarkerText = NULL;
				if(SUCCEEDED(p3DMarker->QueryInterface(IID_CATIMarker3DText,(void **)& p3DMarkerText)))
				{
...
					</pre>
				</td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Set the attributes of the marker"></a>Set the attributes of the marker</h4>
		<p>
			Then, the <code><b>CAAMarker</b></code> customized command set the attributes 
			of the 3D Text Marker as the user wants.
		</p>
		<table class="code" width="912">
			<tr>
				<td width="904">
					<pre>
...
					// -----------------------------------------
					// STEP 7 - Set the attributes of the marker
					// -----------------------------------------
					CATMathPoint centerBoundingSphere (center.x, center.y, center.z);
					p3DMarkerText->SetLeaderPointingPoint(centerBoundingSphere);

					CATMathPoint breakingPoint (centerBoundingSphere.GetX() + radius, centerBoundingSphere.GetY(), centerBoundingSphere.GetZ()+ radius);
					p3DMarkerText->SetPosition(breakingPoint);

					CATBoolean bLeader = TRUE;
					p3DMarkerText->SetLeader(bLeader);
					int typeLeader = 0;
					p3DMarkerText->SetLeaderEndType(typeLeader);
					CATBoolean bBorder = TRUE;
					p3DMarkerText->SetBorder(bBorder);

					CATListOfCATUnicodeString textList;
					CATUnicodeString textLine1 = "VERIFIED";
					textList.Append(textLine1);
					p3DMarkerText->SetTextContent(textList);

					CATUnicodeString fontName = "Swiss.pfb";
					p3DMarkerText->SetTextFontName(fontName);

					double fontSize = 4;
					p3DMarkerText->SetTextFontSize(fontSize);
...
					</pre>
				</td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h4><a name="Updates the visualisation"></a>Updates the visualization</h4>
		<p>
			To have the display of the annotation, the <code><b>CAAMarker</b></code> command 
			dispatch an event of visualization.
		</p>
		<table class="code" width="912">
			<tr>
				<td width="904">
					<pre>
...
					// ----------------------------------
					// STEP 8 - Updates the visualisation
					// ----------------------------------
					CATIModelEvents * pEvent = NULL;
					if(SUCCEEDED(p3DMarkerText->QueryInterface(IID_CATIModelEvents,(void**)&pEvent)))
					{
						CATModify info(p3DMarkerText->GetImpl());
						pEvent->Dispatch (info);
						pEvent ->Release();
						pEvent = NULL;
					}
					p3DMarkerText->Release();
					p3DMarkerText = NULL;
...
					</pre>
				</td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h3><a name="InShort"></a>In Short</h3>
		<p>
		The Use Case creates a 3D text annotation on the selected object.
		<p>
			The customized command of the use case is done with the <code><b>PLMValidation 
					Interfaces</b></code> APIs.
		</p>
		<script type="text/javascript">insertLinkToTop();</script>
		<!---------------------------------comment------------------------------------->
		<h3><a name="References"></a>References</h3>
		<table>
		</table>
		<!---------------------------------comment------------------------------------->
		<h3><a name="History"></a>History</h3>
		<table>
			<tr>
				<td valign="top">
					Version: <strong>1</strong> [June 2008]
				</td>
				<td valign="top">
					Document created
				</td>
			</tr>
			<tr>
				<script type="text/javascript">insertLinkToTop();</script>
			</tr>
		</table>
		<!---------------------------------comment------------------------------------->
		<script type="text/javascript">insertCopyright();</script>
	</body>
</html>
