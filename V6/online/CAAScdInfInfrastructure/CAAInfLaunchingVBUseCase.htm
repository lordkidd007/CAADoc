<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Launching an Automation Use Case</title>
</head>

<body onload="highlightSearchTerms();">

<table class="table1">
	<tr>
		<td class="DocHeader3">
		<table class="DocHeader">
			<tr>
				<td class="DocHeader1" colspan="2">
				<h1><a name="Top"></a>Launching an Automation Use Case</h1>
				</td>
			</tr>
			<tr>
				<td class="DocHeader4" colspan="2">&nbsp;</td>
			</tr>
			<tr>
				<td class="DocHeader3">
				<table class="DocHeaderIntro">
					<tr>
						<td class="Intro1">This article gives you the hints to execute 
						an Automation use case.</td>
					</tr>
				</table>
				</td>
			</tr>
		</table>
		</td>
	</tr>
</table>
		<p>This article is divided in three steps:</p>
		<ol>
			<li><a href="#Library">Create the Macro Library</a></li>
			<li><a href="#Source">Insert or Create the 
			Macro Source</a></li>
			<li><a href="#Specificity">Search Type Specificity</a>
			</li>
		</ol>
		<ol class="task">
			<li>
			<p><strong><a name="Library"></a>Create the Macro Library</strong></p>
			<ol class="task1">
				<li>
				<p>In the <kbd>Tools</kbd> menu, point to <kbd>Macro</kbd>, and click
				<kbd>Macros</kbd>.</p>
				<p>The <kbd>Macros</kbd> dialog opens.</p>
				</li>
				<li>
				<p>Click <kbd>Macro libraries</kbd>.</p>
				<p>The <kbd>Macro libraries</kbd> dialog opens.</p>
				</li>
				<li>
				<p>In the <kbd>Library type</kbd> list, select
				<img alt="PLM VBA Projects Icon" src="I_VBAProject.png" width="17" height="17"/> <kbd>PLM 
				VBA projects</kbd>.</p>
				</li>
				<li>
				<p>Click <kbd>Create new library</kbd>.</p>
				<p>The <kbd>Knowledge applicative data zip / Knowledge Applicative 
				Data Zip (DS Custo)</kbd> dialog opens.</p>
				</li>
				<li>
				<p>In the <kbd>Name</kbd> field, enter the name you want to assign 
				to the macro library, or keep the default name.</p>
				</li>
				<li>
				<p>Click <kbd>Finish</kbd>.</p>
				</li>
				<li>
				<p>Click <kbd>Close</kbd> in the <kbd>Macro libraries</kbd> dialog.</p>
				</li>
				<li>
				<p>Click <kbd>Close</kbd> in the <kbd>Macros</kbd> dialog.</p>
				</li>
				<li>
				<p>In the <kbd>Tools</kbd> menu, point to <kbd>Macro</kbd>, and 
				click
				<img alt="VB Language" src="../CAAScdImages/I_VBLanguage.gif" width="16" height="16"/>
				<kbd>Visual Basic Editor</kbd>.</p>
				<p>The <kbd>Microsoft Visual Basic</kbd> window opens.</p>
				</li>
				<li>
				<p>In the <kbd>Project</kbd> pane, right click your just created 
				macro library, point to <kbd>Insert</kbd>, and click <kbd>
				<img alt="VB Module" src="../CAAScdImages/I_VBModule.gif" width="20" height="20"/>Module</kbd>.</p>
				</li>
				<li>
				<p>Right click the created module, and click
				<img alt="VB View" src="../CAAScdImages/I_VBView.gif" width="17" height="17"/>
				<kbd>View Code</kbd>.</p>
				</li>
			</ol>
			</li>
			<li>
			<p><strong><a name="Source"></a>Insert or 
			Create the Macro Source</strong></p>
			<p>Usually every article describing a use case points to an html file 
			containing the whole source code of its macro. You only have to copy/paste 
			the source&#39;s lines in your editor, and to execute it.</p>
			</li>
			<li>
			<p><strong><a name="Specificity"></a>Search Type Specificity</strong></p>
			<p>When the use case contains a database search, i.e. uses the 
			<strong>SearchService</strong> 
			service object, it requires a PLM type as input. It can be given by the end 
			user through a dialog box, or it can be hard coded in the macro. In 
			this latter case, you may have to adapt the source code to 
			your own PLM types. The use cases requiring a possible change are identified, 
			and they explain how to do the change.</p>
			</li>
		</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
