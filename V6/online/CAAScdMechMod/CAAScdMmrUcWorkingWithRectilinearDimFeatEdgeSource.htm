<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Working With RectilinearTriDimFeatEdge, RectilinearBiDimFeatEdge and RectilinearMonoDimFeatEdge Source
</title>
</head>

<body onload="highlightSearchTerms();">

<pre>'---------------------------------------------------------------------------------------------------------------------------
'COPYRIGHT DASSAULT SYSTEMES 2009
'---------------------------------------------------------------------------------------------------------------------------
'Working with Rectilinear Edge
'
'Mission: This use case fundamentally illustrates about working with Rectilinear Edge. 
'         In this use case we learn how retrieve and use the RectilinearTriDimFeatEdge, RectilinearBiDimFeatEdge and RectilinearMonoDimFeatEdge.
'
'Steps:  1- Retrieve Part Object from Selection
'        2- Create Hole on selected face
'           2.1- Select and retrieve face
'           2.2- Select Rectilinear Edge for hole direction
'           2.3- Create hole
'           2.4- Set hole direction


Sub WorkingWithRectilinearDimFeatEdge()

'Error Handling
On Error GoTo ErrorSub

        'Retrieve active editor
        Dim oCurrentActiveEditor As Editor
        Set oCurrentActiveEditor = CATIA.ActiveEditor
    
        'Retrieve Selection object from active editor
        Dim oObjSelection
        Set oObjSelection = CATIA.ActiveEditor.Selection
    
        'Selection Object updated with selection criteria (Part type)
        Dim strStatus As String
        Dim oInputObjectType(0)
    
        oInputObjectType(0) = &quot;Part&quot;
        strStatus = oObjSelection.SelectElement(oInputObjectType, &quot;Select a Part Element from spec tree or the 3D Viewer&quot;, False)
    
        'Retrieve Selected Element
        Dim oSelectedElement As SelectedElement
        Set oSelectedElement = oObjSelection.Item(1)
        
        'Retrieve Part object from Selected Element
        Dim oPart As Part
        Set oPart = oSelectedElement.Value
              
        MsgBox (&quot;Selected Part Name :&quot;) + oPart.Name
        
        'Clear the selection object
        oObjSelection.Clear
        
        'Select the face
        oInputObjectType(0) = &quot;Face&quot;
        strStatus = oObjSelection.SelectElement(oInputObjectType, &quot;Select the face &quot;, False)
    
        'Retrieve Selected Element
        Dim oFace As Face
        Set oFace = oObjSelection.Item(1).Value
              
        MsgBox (&quot;Selected Face Name :&quot;) + oFace.Name
        
        'Clear the selection object
        oObjSelection.Clear
        
        'Select the Rectilinear Edge for hole direction
        Dim oEnabledObjectSelection(2)
        oEnabledObjectSelection(0) = &quot;RectilinearTriDimFeatEdge&quot;
        oEnabledObjectSelection(1) = &quot;RectilinearBiDimFeatEdge&quot;
        oEnabledObjectSelection(2) = &quot;RectilinearMonoDimFeatEdge&quot;
        Status = oObjSelection.SelectElement(oEnabledObjectSelection, &quot;Select the hole direction&quot;, False)
        
        'Create hole
        Dim oHole As Hole
        Set oHole = oPart.ShapeFactory.AddNewHoleFromPoint(20#, -5.5, 1.07, oFace, 10#)
        
        'Set Threading Mode
        oHole.ThreadingMode = 1
        
        'Set Thread Side
        oHole.ThreadSide = 0
        
        'Set the hole direction
        oHole.SetDirection oObjSelection.Item(1).Value
               
        'Update Part
        oPart.Update
        
        'Saving All data in Session
        CATIA.GetSessionService(&quot;PLMPropagateService&quot;).Save

        MsgBox &quot;All data in CATIA Session are saved&quot;

'Error Handling
   GoTo EndSub

ErrorSub:
          MsgBox Str(Err.Number) + &quot;:&quot; + Err.Description
          GoTo EndSub
EndSub:
End Sub
</pre>

<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
