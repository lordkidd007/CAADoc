<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating a Pad based on a Sketch Source</title>
</head>

<body onload="highlightSearchTerms();">

<pre>'---------------------------------------------------------------------------------------------------------------------------
'COPYRIGHT DASSAULT SYSTEMES 2009
'---------------------------------------------------------------------------------------------------------------------------
' Creating a Pad Based On a Sketch

'Mission: This use case creates a Pad based on the Sketch. In the process we learn to retrieve Part object from Body and retrieve Sketch aggregated beneath body by giving sketch name as an input. 

'steps:  1- Retrieve active editor
'        2- Retrieve Selection object from active editor
'        3- Selection Object updated with selection criteria (Body type)
'        4- Application prompts for user selection from CATIA spec tree
'        5- Retrieve Body Object from Selected Element
'        6- Retrieve Part Object Aggregating Selected Body
'        7- Retrieve the Sketch From the Selected Body
'        8- Create the pad with a user input limit

Sub CreatePadBasedOnSketch()

'Error Handling
On Error GoTo ErrorSub

    'Retrieve active editor
    Dim oCurrentActiveEditor As Editor
    Set oCurrentActiveEditor = CATIA.ActiveEditor

    'Retrieve Selection object from active editor
    Dim oObjSelection
    Set oObjSelection = CATIA.ActiveEditor.Selection

    'Selection Object updated with selection criteria (Body type)
    Dim strStatus As String
    Dim oInputObjectType(0)

    oInputObjectType(0) = &quot;Body&quot;
    strStatus = oObjSelection.SelectElement(oInputObjectType, &quot;Select a Body Element from spec tree or the 3D Viewer&quot;, False)

    'Retrieve Selected Element
    Dim oSelectedElement As SelectedElement
    Set oSelectedElement = oObjSelection.Item(1)
 
    'Retrieve Body object from Selected Element
    Dim oBody As Body
    Set oBody = oSelectedElement.Value
    MsgBox (&quot;Selected Body Name :&quot;) + oBody.Name
    
    'Retrieve the Bodies
    Dim oBodies As Bodies
    Set oBodies = oBody.Parent
    
    'Retrieve Part Object Aggregating Selected Body
    Dim oPart As Part
    Set oPart = oBodies.Parent
    MsgBox (&quot;The Part name aggregating selected Body: &quot;) + oPart.Name
    
    'Retrieve the Sketch From the Selected Body
        'Prompt the user to input the Sketch name
     Dim strInputSketchName As String
     strInputSketchName = InputBox(&quot;Please enter the Sketch (name) for the creation of PAD&quot;, &quot;Enter Sketch Name&quot;)
    
        'Retrieve the Sketch
     Dim oSketch As Sketch
     Set oSketch = oBody.Sketches.Item(strInputSketchName)
    
     'Prompt the user to input the Pad limit
     Dim iPadLimit As Integer
     iPadLimit = InputBox(&quot;Please enter the Limit Value for the creation of PAD&quot;, &quot;Enter Limit Value&quot;)
    
    'Create the pad with a user input limit
     Dim oPad As Pad
     Set oPad = oPart.ShapeFactory.AddNewPad(oSketch, iPadLimit)
    
    'Update the part
     oPart.Update
    
    ' Saving All data in Session
     CATIA.GetSessionService(&quot;PLMPropagateService&quot;).Save

     MsgBox &quot;All data in CATIA Session are saved&quot;

'Error Handling
   GoTo EndSub

ErrorSub:
          MsgBox Str(Err.Number) + &quot;:&quot; + Err.Description
          GoTo EndSub
EndSub:
End Sub
</pre>

</body>

</html>
