<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Browsing Publications</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Browsing Publications</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2><a name="Top"></a>Abstract</h2>
		<p>This article discusses the CAAPstBrowsingProductMode_BrowsePublications 
		use case. This use case explains how to navigate an existing Product Model 
		for <strong>Publications</strong> using the <strong>Product Modeler</strong> API's.</p>
		<p>An important point to note is that in a previous use case &quot;Browsing 
		a Product Model&quot; [<a href="#References">4</a>] we browsed the entire 
		Product Model except the Publications using the API's of the <strong>PLM Core 
		Modeler</strong>.</p>
		<p>Though a <strong>Publication</strong> is a <strong>PLMCore</strong> object, the generic API's 
		of the PLM Core Modeler cannot be used for browsing Publications within 
		a Product Structure. In this use case we have the calls to the API's specific 
		to the <strong>Product Modeler</strong> which enable us browse a Product Model for 
		Publications.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPstBrowsingProductModel_BrowsePublications 
				Use Case</a>
				<ul>
					<li><a href="#What">What Does the CAAPstBrowsingProductModel_BrowsePublications 
						Do</a></li>
					<li><a href="#How">How to Launch CAAPstBrowsingProductModel_BrowsePublications</a></li>
					<li><a href="#Where">Where to Find the CAAPstBrowsingProductModel_BrowsePublications Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#History">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The primary objective of this use case is to familiarize the user with the Product 
Modeler API's meant for browsing a Product Model for Publications.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPstBrowsingProductModel_BrowsePublications Use 
Case</h2>
<p>CAAPstBrowsingProductModel_BrowsePublications is a use case 
of the CAAProductStructure.edu framework that illustrates the
ProductStructureInterfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPstBrowsingProductModel_BrowsePublications Do</h3>
<p>The use case, loads the Product Model, as the one shown in the fig below [<a href="#Fig1">Fig. 
1</a>] in an &quot;<strong>Authoring</strong>&quot; mode. In this mode, the base Product Model 
(which comprises only of the Root Reference &amp; the Product Instances aggregated 
under it) is loaded with the associated Rep Instances &amp; Publications. Since 
the objective of this use case is to browse the Product Model for the Publications, 
we would have to obviously load the model in the &quot;<strong>Authoring</strong>&quot; mode, 
in the present context.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1 Input Product Model</caption>
	<tr>
		<td><img alt="Input Product Model" src="images/CAAPst4.jpg"/></td>
	</tr>
</table>
<p>As an example, for the input model in [<a href="#Fig1">Fig. 1</a>] the Root 
Reference viz. CAAPstBrowsingProductModel_Root, has the following 
entities aggregated under it.</p>
<ul>
	<li>a Rep Inst viz. CAAPstBrowsingProductModel_Represenation</li>
	<li>a Part Instance viz. CAAPstBrowsingProductModel_Child.1. 
		This is an instance of Ref viz. CAAPstBrowsingProductModel_Child.</li>
	<li>a Publication</li>
</ul>
<p>The Reference CAAPstBrowsingProductModel_Child is associated 
with:</p>
<ul>
	<li>a Rep Inst viz. ChildRepresentation</li>
	<li>a Publication</li>
</ul>
<p>The use case displays the structure of the input Product as seen below. The
<strong>Publications</strong> seen in the output model is that portion of the output relevant 
to the current use case. There are 2 Publications here viz. <strong>Publication_00</strong> &amp;
<strong>Publication_00</strong>.</p>
<pre>Opened CAAPstBrowsingProductModel_Root---
&lt;PLM_ExternalID=CAAPstBrowsingProductModel_Root&gt;
the size of the instances aggregated under Ref is 1
        &lt;PLM_ExternalID=CAAPstBrowsingProductModel_Child.1&gt;
                &lt;PLM_ExternalID=CAAPstBrowsingProductModel_Child&gt;
                the size of the instances aggregated under Ref is 0
                the size of the representation instances aggregated under Ref is 1
                        &lt;PLM_ExternalID=ChildRepresentation.1&gt;
                                &lt;PLM_ExternalID=ChildRepresentation&gt;
    The Representation Reference is of CATPart type
                        &lt;Publication Name=<strong>Publication_00</strong>&gt;
the size of the representation instances aggregated under Ref is 1
        &lt;PLM_ExternalID=CAAPstBrowsingProductModel_Represenation.1&gt;
                &lt;PLM_ExternalID=CAAPstBrowsingProductModel_Represenation&gt;
    The Representation Reference is of CATPart type
        &lt;Publication Name=<strong>Publication_00</strong>&gt;</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPstBrowsingProductModel_BrowsePublications</h3>
<p>To launch CAAPstBrowsingProductModel_BrowsePublications, 
you will need to set up the build time environment, then compile CAAPstBrowsingProductModel 
along with its prerequisites, set up the run time environment, and then execute 
the use case [<a href="#References">1</a>].</p>
<p>To launch the use case execute the command:</p>
<p><code>mkrun -c &quot; CAAPstBrowsingProductModel Repository Server User 
Password SecurityCtx PLM_ExternalID V_version TypeOfBrowsing AllAttributes PLMType&quot;</code></p>
<p>where:</p>
<table>
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as ServerName:ServerPort/rootURI</td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>a string representing the security context (Role.Organization.Project). 
		Choose Role as Reviewer (since we only browse the PLM Data, no modifications)</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The PLM_ExternalID of a PLM Reference or PLM Representation 
		Reference be browsed</td>
	</tr>
	<tr>
		<th>V_version</th>
		<td>The V_version of a PLM Reference or PLM Representation 
		Reference</td>
	</tr>
	<tr>
		<th>Type of Browsing</th>
		<td>1 = Part Instances only (Base Structure) loaded, 2 = Base Structure 
		+ Rep loaded,
		<p><strong>3** = Base Structure + Rep + Publication loaded</strong></p>
		</td>
	</tr>
	<tr>
		<th>AllAttributes</th>
		<td>1 =Yes -All Public Attributes, 0=No -only PLM_ExternalID</td>
	</tr>
	<tr>
		<th>PLMType</th>
		<td>A String Representing PLM Type</td>
	</tr>
</table>
<p>* The input model is retrieved by importing the 
CAAPstBrowsingProductModel_BrowsePublications.3dxml 
file from the CAAProductStructure.edu fwk.</p>
<p><code>InstallRootFolder\CAADoc\CAAProductStructure.edu\InputData\CAAPstBrowsingProductModel_BrowsePublications.3dxml</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contains the root Product Reference with the following attributes:</p>
<ul>
	<li><code><strong>PLM_ExternalID</strong></code>: <code><strong>CAAPstBrowsingProductModel_Root</strong></code></li>
	<li><code><strong>Version</strong></code>: ---</li>
</ul>
<p><strong>Attention</strong>: Please refer to the document [<a href="#References">1</a>] 
for how to import and reimport such a 3D XML file in your PLM repository.</p>
<p>The PLM_ExternalID attribute value of the imported 
model is typically of the format &quot;YourPrefix + CAAPstWithPubSkate&quot;, 
where YourPrefix is the string provided as prefix, while 
importing the 3D XML file to CATIA. Thus the Product Model after an import is seen 
as in the [<a href="#Fig1">Fig. 1</a>] above, except that each of those elements 
which includes the Root Reference, the Product Instances under it &amp; the associated 
Rep Instances and Publications, have a prefix associated with them.</p>
<p><strong>ATTENTION</strong>: The Product Model provided in a 3D XML file is a Skate Assembly, 
which has more levels in its hierarchy, than the one depicted in the example [<a href="#Fig1">Fig. 
1</a>] above. We have a simpler model depicted in this documentation [<a href="#Fig1">Fig. 
1</a>] for ease of understanding.</p>
<p>While for actually running the use case, we have provided the Skate Assembly 
in a 3D XML file which resembles very closely to a real-life model and thus serves 
as an ideal input for running the browsing api's.</p>
<p><strong>**</strong> &quot;<strong>TypeOfBrowsing</strong>&quot; set to 3, is the value relevant for 
this use case. It corresponds to a case where the user opts to browse the Product 
Model for the Publications too.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPstBrowsingProductModel_BrowsePublications 
Code</h3>
<p>The CAAPstBrowsingProductModel_BrowsePublications 
use case is located in the CAAPstBrowsingProductModel.m 
module of the CAAProductStructure.edu framework:</p>
<table>
	<tr>
		<td><code>InstallRootFolder\CAADoc\CAAProductStructure.edu<code>\</code>CAAPstBrowsingProductModel.m\</code></td>
	</tr>
</table>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<h2><a name="Step"></a>Step-by-Step</h2>
<p>Following are the main steps in <code><strong>CAAPstBrowsingProductModel_BrowsePublications</strong></code>:</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Step1">Opening the Root Product</a></li>
	<li><a href="#Step2">The BrowseReference Global Routine</a></li>
	<li><a href="#Step3">Browsing PLM Publications</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The CAAPstBrowsingProductModel_BrowsePublications use case 
begins by creating a session and connecting to the Input Repository. This, being 
the most fundamental prerequisite for all batch use cases, it is the first step 
in their execution.</p>
<p>In this case, we create a session &amp; connect to Repository with the Reviewer 
Role (since we aren't modifying PLM data). There are other parameters as well, details 
of which can be found in the &quot;Connecting to V6 Server&quot; use case 
article [<a href="#References">2</a>]. This article primarily deals with Opening 
and Closing a PLM session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the Root Product</h3>
<p>Here we open the Root Product &amp; seek the <em>CATIPLMNavReference</em> 
Interface pointer on it. We have an option here to either load the entire Product 
Model or only the Base model.</p>
<pre class="code">  ...
  <strong>CATIPLMNavReference</strong>* piNavRefOnRoot = NULL;
  <strong>CATOmbLifeCycleRootsBag</strong> Bag;
  <strong>CATAdpOpener</strong> opener(Bag);
  hr= opener.<strong>CompleteAndOpen</strong>(opiIDComp,IID_CATIPLMNavReference, (void**) &amp;piNavRefOnRoot);<strong></strong> 
...</pre>
<p>The use case calls to <code>CompleteAndOpen()</code> method of the <em>CATAdpOpener</em> 
class Opens the Product Reference. The article &quot;Querying, Expanding &amp; 
Opening PLM Object&quot; [<a href="#References">3</a>] has a section which 
provides an explanation on the <code>CompleteAndOpen()</code> method of the
<em>CATAdpOpener</em> class.</p>
<p>These api's opens the Product Reference given its identifying attributes (<strong>PLM_ExternalID, 
V_version</strong>) and return the requested Interface, a <em>CATIPLMNavReference</em>* 
on the Reference.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>The BrowseReference Global Routine</h3>
<p><code>BrowseReference</code> is in fact the most crucial routine 
which has calls to various CATPLMComponentInterfaces &amp; ProductStructureInterfaces 
APIs for browsing the Product Model.</p>
<pre class="code"><strong>int main(int iArgc, char *iArgv[])</strong>
{
     <strong>CATBoolean iAllAtributes = FALSE;
     if (atoi(iArgv[9])==1)
	iAllAtributes = TRUE;</strong>
     ... 
     const char* LoadingMode = iArgv[8];
     <strong>hr = BrowseReference(piNavRefOnRoot,atoi(LoadingMode),iAllAtributes,0);</strong>		
}</pre>
<p>The most important call in the use case main, in the context of this use case, 
is that to <code>BrowseReference</code>. It takes primarily 
4 arguments:</p>
<ul>
	<li><em>CATIPLMNavReference</em> type, the Product Reference 
		from where the navigation begins</li>
	<li>int TypeOfBrowsing. ( 1 = Only Product Instances, 2 
		= Base Model + Rep Inst, 3 = Base Model + Rep Inst + Publications)</li>
	<li>CATBoolean iAllAttributes, ( FALSE = Only PLM_ExternalID 
		, TRUE = All Public Attributes) are displayed</li>
	<li>int iDepth, signifies the output w.r.t. Root at which 
		the input element is printed for output to resemble a Product Model</li>
</ul>
<p>In the main, we have already sought the <em>CATIPLMNavReference</em>* 
on Root when <a href="#Step1">Opening the Root Product</a>. The <code>BrowseReference</code> 
routine is invoked with this Root pointer, as its 1st argument.</p>
<p>The int <strong>TypeOfBrowsing</strong> argument is set as 3 through 
the command line arguments, since for this use case we browse the Product Model 
for Publications in it, that being the primary objective of this use case.</p>
<p>The <strong>iDepth</strong> argument is set to 0, since the Root Reference is printed at 
the extreme left (<strong>indent = 0</strong>) in a Product Model representation.</p>
<p>The BrowseReference global routine has fundamentally 3 steps:</p>
<ul>
	<li><strong>Seek the First-Level instances under the current Reference</strong>
		<ul>
			<li>Seek the Reference of each of those First Level Instances</li>
			<li>Make a recursive call to <strong>BrowseReference</strong></li>
		</ul>
	</li>
	<li><strong>Seek the Rep Instances &amp; Rep Refs under the current Reference</strong></li>
	<li><strong>Seek the Publications under the current Reference</strong></li>
</ul>
<p>The first 2 steps have been detailed in an earlier use case viz. &quot;Browsing 
a Product Model&quot; [<a href="#References">4</a>].</p>
<p>We continue below, with the last step which involves seeking the Publications 
aggregated under the Root Reference.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Browsing PLM Publications</h3>
<p>The Publications aggregated under a Product Reference can be easily sought thanks 
to the <em>CATIPrdPublications</em>* implemented on all Product 
References.</p>
<pre class="code">HRESULT BrowsePublications(CATIPLMNavReference* ipNavRef, int iOffset)
{
  HRESULT hr = E_FAIL;
  CATIPrdPublications* ipPublicationsOnReference = NULL;
  hr = ipNavRef-&gt;QueryInterface(IID_CATIPrdPublications,
                                (void **) &amp;ipPublicationsOnReference);

  CATIPrdIterator *piIterator = NULL;
  hr = ipPublicationsOnReference-&gt;Iterator(piIterator);

  CATBaseUnknown* pCBU = NULL;
  while (SUCCEEDED(piIterator-&gt;Next(pCBU)))
  {
    CATIPrdPublication* piPrdPublication = NULL;
    hr = pCBU-&gt;QueryInterface(IID_CATIPrdPublication,
                              (void**)&amp;piPrdPublication);
    ...
  }
  return hr;
}</pre>
<p>We begin by seeking a <em>CATIPrdPublications</em>* on input 
Reference.</p>
<p>Thus the input <em>CATIPLMNavReference</em>* call to <code>QueryInterface</code> 
returns a <em>CATIPrdPublications</em>* <code>ipPublicationsOnReference</code>.</p>
<p>The <code>CATIPrdPublications::Iterator</code> 
call returns a <em>CATIPrdIterator</em>* type, which helps us 
loop through all the aggregated Publications, thanks to the call to
<code>CATIPrdIterator::Next</code>. The elements of that list 
are actually retrieved as CATBaseUnknown* types, viz. <code>pCBU</code>.</p>
<p>A call to <code>QueryInterface</code> by <code>pCBU</code> returns a
<em>CATIPrdPublication</em> type.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>The CAAPstBrowsingProductModel_BrowsePublicationss use case 
ends by simply closing the PLM session. Since all PS use cases necessarily conclude 
by closing the PLM session, we have a dedicated article on this topic viz. &quot;<strong>Connecting 
to V6 Server</strong>&quot; [<a href="#References">2</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to browse a Product Model for Publications 
using the <strong>Product Modeler API's</strong>.</p>
<p>The Root Reference is queried by its Identifier set of attributes (<strong>PLM_ExternalID</strong>) &amp; 
loaded in session with the call to <code>CompleteAndOpen</code>of the <code>CATAdpOpener</code> 
class. The open mode is the <strong>authoring mode</strong> in order to load the Base Model 
with the accompanying Rep Insts &amp; Publications. The article [<a href="#References">3</a>] 
on &quot;Querying, Expanding &amp; Opening PLM Object&quot; dedicated 
exclusively on this subject.</p>
<p>Further, this Product Model is browsed for the <strong>Product References, Instances</strong>,
<strong>Rep References, Rep Instances</strong> and <strong>Publications</strong> and these elements 
are displayed in the console, suitably indented, thus exactly resembling a real 
Product Model. Publications associated with a PLM Product Reference are retrieved 
thanks to the <em>CATIPrdPublications</em> Interface, and information 
on each Publication can be sought, thanks to the <em>CATIPrdPublication</em> 
Interface.</p>
<p>A previous use case viz. &quot;Browsing a Product Model&quot; [<a href="#References">4</a>] 
deals with browsing Product Models for Product References, Instances, Rep References &amp; 
Rep Instances. This use case deals exclusively on navigating Product Models for 
Publications.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpen.htm">
		Querying, Expanding &amp; Opening PLM Object</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAPstUcBrowsingProductModel.htm">Browsing a Product Model</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [July 2006]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
