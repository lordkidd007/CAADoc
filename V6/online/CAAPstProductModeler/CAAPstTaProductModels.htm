<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Product Modeler Presentation</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Product Modeler Presentation</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article presents two models: the instance/reference model and the 
		occurrences model in the Product context.</p>
		<ul>
			<li><a href="#InstanceReference">Instance/Reference Model</a><ul>
				<li><a href="#Core">The PLM Core Model Structure</a></li>
				<li><a href="#Example">A Concrete Example</a></li>
				<li><a href="#Persistent">The Persistent Database 
					Model</a></li>
				<li><a href="#Authoring">The Authoring Model</a></li>
				<li><a href="#Path">Path of (First) 
					Instance</a></li>
				</ul>
			</li>
			<li><a href="#Occurrence">Occurrence Model</a><ul>
				<li><a href="#Distinct">A Distinct Model</a></li>
				<li><a href="#Session">A Model Created In Session</a></li>
				<li><a href="#UnfoldedView">
					An Unfolded View of the Instance/Reference Model</a></li>
				<li><a href="#Example2">A Concrete Example</a></li>
				<li><a href="#Contextual">A Contextual Result</a></li>
				<li><a href="#Why">Why an Occurence Model?</a></li>
				<li><a href="#Attributes">PLM Attribute Access</a></li>
				</ul>
			</li>
			<li><a href="#MVC">MVC Modelization</a></li>
			<li><a href="#Interfaces">Implemented Interfaces</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InstanceReference"></a>Instance/Reference Model</h2>
<p>The instance/reference model is the persistent database model.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Core"></a>The PLM Core Model Structure</h3>
<p>The instance/reference model is based on the PLM Core model [<a href="#References">1</a>] including 
the six PLM Core objects: PLM Reference, PLM Instance, PLM Instance Representation, 
PLM Representation Reference, PLM Port and PLM Connection. The relationship between 
them can be describe like that:</p>
<table>
	<caption><a name="Fig1">Fig.1</a> UML Instance/Reference PRODUCT modeler</caption>
	<tr>
		<td>
		<img alt="UML Instance/Reference PRODUCT modeler" height="306" src="images/ProductStructureUML.jpg" width="495"/></td>
	</tr>
</table>
<ul class="wide">
	<li>The <strong>Product Reference</strong> is the only component that 
		can aggregate other components. A Product Reference or a <strong>Product 
		Representation Reference</strong> can be instantiated. These resulting components 
		are <strong>Product instances</strong> and <strong>Product Representation
		Instances</strong> respectively.</li>
	<li><strong>Product Ports</strong> are components that are used to 
		publish parts of a Product Model object that are otherwise inaccessible.</li>
	<li><strong>Connections</strong> are components that establish semantic 
		relationships between Product Model components. Examples of Connections 
		as seen by the user include CATIA contextual links and assembly constraints. 
		The Product reference can aggregate Product Connections (coming from the 
		PRODUCT modeler) as from other Modelers.</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Example"></a>A Concrete Example</h3>
<p>Here the example of the skateboard (basic case):</p>
<ul>
	<li>1 skate containing 1 top (purple) + 2 axles (gray).</li>
	<li>1 axle containing 2 wheels (green).</li>
	<li>1 wheel containing 3 screws (blue).</li>
</ul>
<table>
	<caption><a name="Fig2">Fig.2</a> Instance/Referece Model Example</caption>
	<tr>
		<td>
		<img alt="Instance/Referece Model Example" height="458" src="images/CAAPstNavigate_Model.gif" width="622"/></td>
	</tr>
</table>
<p>This structure is an example of the UML diagram [<a href="#Fig1">Fig.1</a>]. 
You retrieve instances of the four PLM Core object ( PLM Port and PLM connections 
are not represented on this picture.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Persistent"></a>The Persistent Database Model</h3>
<p>In authoring session, the instance/reference model consists in Object Modeler 
Objects [<a href="#References">2</a>] representing each one an object in database. 
The <em>CATIPLMComponent</em> interface implemented by these OM objects can return 
for each one their database identifier (a CATIAdpPLMIdentificator interface pointer) 
[<a href="#References">3</a>].</p>
<p>When you save a session, there are the instance/reference model objects which 
are saved.</p>
<p>When you load in session a root product, the instance/reference model objects 
are automatically created in session. The load can be partial [<a href="#References">4</a>], 
but what is loaded represents something in database.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Authoring"></a>The Authoring Model</h3>
<p>The instance/reference model is the one that you modify to change the structure 
of the assembly: you delete an instance, you add a PLM Representation Instance, 
you will always work on the instance/reference model . All the interfaces to modify 
the structure are implemented on the instance/reference model object. Refer to the 
last chapter <a href="#Interfaces">Implemented Interfaces</a> for an 
overview of these interfaces.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Path"></a>Path of Instances</h3>
<p>The path of instances, or sometimes named the path of first instances, is a list 
of instance from the top of the assembly ( reference not included), to the instance 
to reach.</p>
<p>Valid paths from [<a href="#Fig2">Fig.2</a>]:</p>
<ul>
	<li>[CAAPstAxleAss.1,CAAPstWheel.1,CAAPstScrew.1] is a path to reach CAAPstScrew.1 
		from the Root product.</li>
	<li>[CAAPstWheel.2,CAAPstScrew.1] is a path to reach CAAPstScrew.1 from 
		the CAAPstAxleAss product.</li>
</ul>
<p>Invalid path from [<a href="#Fig2">Fig.2</a>]:</p>
<ul>
	<li>[CAAPstAxleAss.1,CAAPstScrew.1] , an instance of CAAPstWheel is missing.</li>
</ul>
<p>The path of instances is a fundamental concept. It enables you to reach, in a 
Product context, a precise instance: the screw A, in the right wheel, in the front 
axle of the skateboard.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Occurrence"></a>Occurrence Model</h2>
<p>The occurrence model is the unfolded view of the instance/reference model.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Distinct"></a>A Distinct Model</h3>
<p>The Object Modeler Objects [<a href="#References">2</a>] representing in session 
the occurrence model are distinct objects of the instance/reference model. They 
can implement the same interfaces, but they implement their own interfaces too.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Session"></a>A Model Created In Session</h3>
<p>Conversely to the instance/reference model, the occurrence model creation is 
not automatic. When you load in batch session a root product by CAA API [<a href="#References">4</a>], 
you should yourself invoke the occurrence model generation. Use the <code>GetOrCreateRootOccurrence</code> 
method of the <em>CATIPrdOccurrenceMngt</em> interface to do it.</p>
<p>Interactively the occurrence model is automatically created when the root product 
is edited. The frame editor invokes itself the occurrence model generation.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="UnfoldedView"></a>An Unfolded View 
of the Instance/Reference Model</h3>
<p>The occurrence model represents the unfolded view of the instance/reference model. 
The UML Schema of the occurrence model is as follows:</p>
<table>
	<caption><a name="Fig3">Fig.3</a> UML Occurrence Model</caption>
	<tr>
		<td><img alt="UML Occurrence Model" src="images/CAAPstNavigate_ModelOccNav.gif"/></td>
	</tr>
</table>
<p>An occurrence can aggregate zero to N occurrences.</p>
<p>An occurrence represents either a reference (in the instance/reference model), 
when it is the root occurrence, or represents an instance (in the instance/reference 
model).</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Example2"></a>A concrete Example</h3>
<p>Just bellow you have the unfolded view of the skateboard [<a href="#Fig2">Fig.2</a>].</p>
<table>
	<caption><a name="Fig4">Fig.4</a> Occurrence Model Example</caption>
	<tr>
		<td><img alt="Occurrence Model Example" src="images/CAAPstNavigate_BOM.gif"/></td>
	</tr>
</table>
<p>You can observe that this structure does not contain representation. The occurrence 
model only represents the PLM Product Instance/ Product Reference.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Contextual"></a>A Contextual Result</h3>
<p>An occurrence model is contextual for two reasons:</p>
<ul>
	<li>Its root reference.

	<p>If you create the occurrence model of CAAPstSkateBoard, you have the structure 
	[<a href="#Fig4">Fig.4</a>]. Then if you request the occurrence model of CAAPstAxle, 
	you will have another occurrence model structure. In session there are two distinct 
	occurrence model structures.</p>
</li>
	<li>Filter applied on the unfolded view.
	<p>Two configurations of the same instance/reference model implies two occurrences 
	models. (not yet implemented)</p>
</li>
</ul>
<p>When an occurrence model is created , the two contexts must be specified.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Why"></a>Why an Occurrence Model?</h3>
<p>The occurrence model has been created to simplify the management of the operations 
available on occurrence:</p>
<ul>
	<li>Change the graphic properties.
	<p>In the skateboard, you can imagine that the rear - left wheel is red and 
	the rear - right is green . As of today, the change is possible but not 
	persistent.</p>
</li>
	<li>Change the Matrix Position [<a href="#References">6</a>].

	<p>You can locate a wheel's instance at a specific location. As of today, the 
	change is possible but modify the matrix of the instance in the instance/reference 
	model. Imagine, you move &quot;rear - left wheel&quot; occurrence [<a href="#Fig4">Fig.4</a>],
	&quot;CAAPstWheel.2&quot; instance [<a href="#Fig2">Fig.2</a>] will be modified. 
	It implies that the left wheel of the rear and front axle will be moved.</p>
</li>
</ul>
<p>When these two operations will be effective, change the occurrence model will 
change the instance/reference model. The instance/reference model is always up to 
date, and represents the &quot;reference&quot; the model to save. The occurrence 
is never saved in database.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Attributes"></a>PLM Attributes Access</h3>
<p>PLM attributes are only associated with the instance/reference model. You cannot 
give specific PLM attributes to an occurrence. Nevertheless the <em>CATICkeObject</em> 
interface is implemented on occurrence objects. But when you use this interface 
with the <em>CATCkeObjectAttrReadServices</em> or <em>CATCkeObjectAttrWriteServices</em> 
global function, you get or set PLM attributes on the instance/reference model. 
To be clearest:</p>
<ul>
	<li>When the current occurrence is not the root, <em>CATCkeObjectAttrReadServices/CATCkeObjectAttrWriteServices</em> 
		handle the PLM attributes associated with the PLM product instance related 
		to the occurrence.</li>
	<li>When the current occurrence is the root, <em>CATCkeObjectAttrReadServices/CATCkeObjectAttrWriteServices</em> 
		handle the PLM attributes associated with the PLM product reference related 
		to the occurrence.</li>
</ul>
<p>On example - That you select the 'Rear Axle - Right Wheel - Screw 2' or Rear 
Axle - Right Wheel - Screw 2&quot; or 'Front Axle - Right Wheel - Screw 2' or Rear 
Axle - Right Wheel - Screw 3' -[<a href="#Fig4">Fig.4</a>]- you will modify the 
instance 'Right wheel' of the instance/reference model [<a href="#Fig2">Fig.2</a>].</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="MVC"></a>MVC Modelization</h2>
<p>Product implements the MVC protocol (M: model, V Visualization, C controller) 
[<a href="#References">7</a>]. It implies that a modification of the model ( the 
instance/reference model) will automatically refresh the Visualization ( occurrence 
model, Visualization , spec tree) thanks to a controller.</p>
<p>Nevertheless we should add that this protocol, in Product context, is an asynchronous 
mechanism. It means that the model modifications are logged by the controller, and 
the refresh is launched after a delay. This delay represents the end of a transaction 
[<a href="#References">8</a>]. Interactively when a command is finished, a transaction 
is closed, and the visualization is automatically updated. It means that if during 
a command you modify the instance/reference structure, during the command the occurrence 
model is not up to date. But when the command is over, the occurrence model is updated.</p>
<p>In a batch, the occurrence model must be manually updated using the <code>Synchronize</code> 
method of the <em>CATIPrdOccurrenceMngt</em> interface.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Interfaces"></a>Implemented Interfaces</h2>
<p>The first table references all the interfaces, and their meaning, for the <strong>instance/reference</strong> model objects. Above the line the main implemented interfaces, 
and below the main ones which are not implemented.</p>
<table class="fill">
	<tr>
		<th>Interfaces</th>
		<th>Product's Type Class</th>
		<th>Meaning</th>
	</tr>
	<tr>
		<td>CATIPLMComponent</td>
		<td>all</td>
		<td>To retrieve general information about the PLM Object (identifier, PLM 
		class type)</td>
	</tr>
	<tr>
		<td>CATICkeObject</td>
		<td>all</td>
		<td>Handling PLM Attributes (Get/Set)</td>
	</tr>
	<tr>
		<td>CATIAlias</td>
		<td>all</td>
		<td>NLS name of the PLM object [<a href="#References">9</a>]</td>
	</tr>
	<tr>
		<td>CATIPLMNavReference</td>
		<td>Product reference</td>
		<td>Navigation purpose [<a href="#References">10</a>]</td>
	</tr>
	<tr>
		<td>CATIPLMNavInstance</td>
		<td>Product instance</td>
		<td>Navigation purpose [<a href="#References">10</a>]</td>
	</tr>
	<tr>
		<td>CATIPLMNavRepReference</td>
		<td>Product rep reference</td>
		<td>Navigation purpose [<a href="#References">10</a>] + applicative 
		container management [<a href="#References">11</a>]</td>
	</tr>
	<tr>
		<td>CATIPLMNavRepInstance</td>
		<td>Product rep instance</td>
		<td>Navigation purpose [<a href="#References">10</a>]</td>
	</tr>
	<tr>
		<td>CATIPLMProducts</td>
		<td>Product reference (*)</td>
		<td>Authoring apis</td>
	</tr>
	<tr>
		<td>CATIPrdAggregatedRepresentations</td>
		<td>Product reference</td>
		<td>Authoring apis</td>
	</tr>
	<tr>
		<td>CATIPLMRepInstances</td>
		<td>Product reference</td>
		<td>Authoring apis</td>
	</tr>
	<tr>
		<td>CATIPrdObject</td>
		<td>all except connection</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>CATIMovable</td>
		<td>Product instance (*)</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>CATIVisProperties</td>
		<td>all</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td colspan="3"><hr /></td>
	</tr>
	<tr>
		<td>CATIPLMNavOccurrence</td>
		<td>nothing</td>
		<td>(except temporary the product references)</td>
	</tr>
</table>
<p>(*) means that some other product objects implement the interface, but you must 
not taken into account other implementation. One example: <em>CATIPLMProducts</em>
is implemented by Product instances and Product references, but the implementation 
on product instances is without guarantee in the time.</p>
<p>The second table references all the interfaces, and their meaning for the <strong>occurrence</strong> model object. Above the first line the main valid implemented interfaces, 
then those implemented but that you should not use, and finally the main ones which 
are not implemented.</p>
<table class="fill">
	<tr>
		<th>Interfaces</th>
		<th>Meaning</th>
	</tr>
	<tr>
		<td>CATIPLMNavOccurrence</td>
		<td>Navigation purpose [<a href="#References">10</a>]</td>
	</tr>
	<tr>
		<td>CATIMovable</td>
		<td>Change the occurrence position</td>
	</tr>
	<tr>
		<td>CATIVisProperties</td>
		<td>Change the occurrence graphical properties</td>
	</tr>
	<tr>
		<td>CATICkeObject</td>
		<td>Yes, using <em>CATCkeObjectAttrReadServices</em> or <em>CATCkeObjectAttrWriteServices</em> 
		you can get or modify PLM attributes associated with the instance/reference 
		model</td>
	</tr>
	<tr>
		<td>CATIAlias</td>
		<td>NLS name of the occurrence</td>
	</tr>
	<tr>
		<td colspan="2"><hr /></td>
	</tr>
	<tr>
		<td>CATIPLMProducts</td>
		<td>Do not use it</td>
	</tr>
	<tr>
		<td>CATIPLMRepInstances</td>
		<td>Do not use it</td>
	</tr>
	<tr>
		<td>CATIPrdObject</td>
		<td>Do not use it</td>
	</tr>
	<tr>
		<td colspan="2"><hr /></td>
	</tr>
	<tr>
		<td>CATIPLMComponent</td>
		<td>Not Implemented</td>
	</tr>
	<tr>
		<td>CATIPLMNavReference</td>
		<td>Not Implemented</td>
	</tr>
	<tr>
		<td>CATIPLMNavInstance</td>
		<td>Not Implemented</td>
	</tr>
	<tr>
		<td>CATIPLMNavRepReference</td>
		<td>Not Implemented</td>
	</tr>
	<tr>
		<td>CATIPLMNavRepInstance</td>
		<td>Not Implemented</td>
	</tr>
	<tr>
		<td>CATIPrdAggregatedRepresentations</td>
		<td>Not Implemented</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The article has described the instance/reference model as the persistent structure, 
and the occurrence model as a volatile one;</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAAPLMAllConcepts/CAAPLMTaAllCoreModelerReference.htm">
		PLM Core Modeler Reference</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAASysObjectModeler/CAASysTaOMCreatingComponent.htm">
		Creating Components</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAPlmTaCATIAdpPLMIdentificator.htm">
		Understanding PLM Component Identifier</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpenPLMRefWithDiffExpandMode.htm">
		Query, Expand and Open a PLM Reference with various Expand Modes</a></td>
	</tr>
	<tr>
		<td>|6]</td>
		<td><a href="CAAPstTaPositioningProdInst.htm">Positioning Product Instances</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="../CAAAfrApplicationFrame/CAAAfrTaOverview.htm">
		Application Frame Overview</a></td>
	</tr>
	<tr>
		<td>[9]</td>
		<td><a href="CAAPstTaProductInternalNaming.htm">Product Component Internal 
		Naming</a></td>
	</tr>
	<tr>
		<td>[10]</td>
		<td><a href="CAAPstTaProductNavigate.htm">Product Navigation</a></td>
	</tr>
	<tr>
		<td>[11]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAFmFeatMod/CAAFmTaOverview.htm')">
		Feature Modeler Overview</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [July 2008]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Nov 2010]</td>
		<td>Document updated due to new APIs of creation</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
