<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Changing Publication's Target</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Changing Publication's Target</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This use case illustrates how to modifythe target of a Publication [<a href="#References">1</a>]. 
		A Publication is a PLM entity which publishes object . The use case deals 
		in publishing another object through an existing Publication. In this particular 
		case, targets are feature within Rep Ref.</p>
		<p>We recommend that you understand the fundamentals of <strong>Publication's 
		Target</strong> prior to studying this use case. A dedicated article on this 
		topic exists with the title &quot;<strong>Creating Publication's Target</strong>&quot; 
		[<a href="#References">2</a>].</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMmrChangePubTarget Use Case</a>
				<ul>
					<li><a href="#What">What Does the CAAMmrChangePubTarget Do</a></li>
					<li><a href="#How">How to Launch CAAMmrChangePubTarget</a></li>
					<li><a href="#Where">Where to Find the CAAMmrChangePubTarget 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#History">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case educates the user with the steps involved in publishing another 
object through an existing Publication.</p>
<p>Thus, in our scenario since the Publication has to publish another geometrical 
feature, we create a target ( in form of <code>CATOmbObjectInContext</code> object) 
to point to the new feature, then we reset the Publication to point to this newly 
created Target.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMmrChangePubTarget Use Case</h2>
<p>CAAMmrChangePubTarget is a use case of the <code>CAAMechanicalModeler.edu</code> 
framework that illustrates the ProductStructureInterfaces and
ObjectModelerBase framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMmrChangePubTarget Do</h3>
<p>The use case, loads the Product Model, as the one shown in the fig below [<a href="#Fig1">Fig. 
1</a>]. User can load any input model of his choice and hence the one depicted 
below, only serves as an example, to help user understand the scenario representing 
this Use case.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1 Input Product Model</caption>
	<tr>
		<td>
		<img alt="Input Product Model" src="images/CAAPstChangePLOTarget_InputModelInCatia.jpg"/>
		</td>
	</tr>
</table>
<p>The input model[<a href="#Fig1">Fig. 1</a>] has the Root Reference namely
<code>CAAMmrChangeTargetRoot</code>, with the following entities aggregated under 
it.</p>
<ul>
	<li>A Rep Instance namely <code>CAAMmrChangeTargetRep.1</code>. This is an instance 
		of the Rep Ref <code>CAAMmrChangeTargetRep</code>.</li>
	<li>A Publication namely <code>CAAMmrChangeTargetPort</code>. This Publication 
		publishes the geometrical feature <strong>Point.1</strong> within the Rep Ref.</li>
</ul>
<p>This use case primarily revaluates the Publication to replace the geometrical 
feature <strong>Point.1</strong> that it publishes with <strong>Point.2</strong>.</p>
<p>At the end of the use case execution, the output model as shown in [<a href="#Fig2">Fig.2</a>] 
depicts the Publication publishing the geometrical feature <strong>Point.2</strong>.</p>
<table>
	<caption><a name="Fig2"></a>Fig. 2 Output Model as Seen in CATIA</caption>
	<tr>
		<td>
		<img alt="Output Model" src="images/CAAPstChangePLOTarget_OutputModelInCatia.jpg"/></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAMmrChangePubTarget</h3>
<p>To launch CAAMmrChangePubTarget, you will need to set up the build time environment, 
then compile CAAMmrChangePubTarget along with its prerequisites, set up the run 
time environment, and then execute the use case [<a href="#References">3</a>].</p>
<p>To launch the use case execute the command:</p>
<p><code>mkrun -c &quot;CAAMmrChangePubTarget Repository Server User Password SecurityCtx 
PLMType PLM_ExternalID Version NewFeatureName&quot;</code></p>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as ServerName:ServerPort/rootURI</td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer(as the use case modifies the PLM data)</td>
	</tr>
	<tr>
		<th>PLMType</th>
		<td>A PLM Type</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The <code>PLM_ExternalID</code> of a PLM Reference or PLM Representation 
		Reference to be opened (*)</td>
	</tr>
	<tr>
		<th>V_version</th>
		<td>The <code>V_version</code> of a PLM Reference or PLM Representation 
		Reference to be opened (*)</td>
	</tr>
	<tr>
		<th>NewFeatureName</th>
		<td>Name of the feature to which the Publication is finally pointed</td>
	</tr>
</table>
<p>* The input model is retrieved by importing the 
CAAMmrChangeTarget.3dxml file from the CAAMechanicalModeler.edu framework.</p>
<p><code>InstallRootFolder\CAAMechanicalModeler.edu\InputData\CAAMmrChangeTarget.3dxml</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contains a Product Reference with the following attributes:</p>
<ul>
	<li><code>PLM_ExternalID</code>: <code>CAAMmrChangeTargetRoot</code>
	</li>
	<li><code>Version</code>: ---</li>
</ul>
<p>Here we have provided a 3D XML file only for the convenience of the user so that 
one doesn't have to recreate the input model. It can simply be imported from this 
file, and used for the execution further. But the user does have the liberty to 
use any input model of his choice, based on his discretion.Please refer to document 
[<a href="#References">3</a>] for how to import and reimport such a 3D XML file 
in your PLM repository.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMmrChangePubTarget Code</h3>
<p>The CAAMmrChangePubTarget use case is located in the CAAMmrChangePubTarget.m 
module of the CAAMechanicalModeler.edu framework:</p>
<p><code>InstallRootFolder\CAAMechanicalModeler</code>.<code>edu\CAAMmrChangePubTarget.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the 
directory where the CAA CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>Following are the main steps in CAAMmrChangePubTarget:</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Step1">Opening the Root Product in Authoring Mode</a></li>
	<li><a href="#Step2">Retrieving the Publication Aggregated under Root</a></li>
	<li><a href="#Step3">Seeking the First Rep Instance Aggregated by the Root</a></li>
	<li><a href="#Step4">Retrieving its PLM Rep Ref and Switching it to Edit Mode</a></li>
	<li><a href="#Step5">Retrieving the New Feature by its Name in the Editable 
		PLM Rep Ref</a></li>
	<li><a href="#Step6">Creating a Target to Point the Retrieved Feature (in Form 
		of CATOmbObjectInContext Object)</a></li>
	<li><a href="#Step7">Resetting the Publication to Point to the Newly Created 
		Target</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The CAAMmrChangePubTarget use case begins by creating a session 
and connecting to the Input Repository. This, being the most fundamental prerequisite 
for all batch use cases, it is the first step in their execution.</p>
<p>In this case, we create a session and connect to Repository with the Designer 
Role. There are other parameters as well, details of which can be found in the &quot;Connecting 
to V6 Server&quot; use case article [<a href="#References">4</a>]. This 
article primarily deals with Opening and Closing a PLM session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the Root Product in Authoring Mode</h3>
<p>This step involves opening a <strong>PLM Product Ref</strong>, which aggregates the Publication 
which has to publish a new feature.</p>
<pre class="code">  ...
  CATUnicodeString PLM_ExternalIDValue = iArgv[7];
  CATUnicodeString V_versionValue = iArgv[8];
  CATString PLM_Type = iArgv[6];	

  CATBoolean ibExpandAll = TRUE;    
  <strong>CATIPrdPublications* pPrdPubsOnRoot = NULL;</strong>
  hr = ::CAAOpenPLMComponent(PLM_Type,PLM_ExternalIDValue,V_versionValue,
                             <strong>IID_CATIPrdPublications,(void **)&amp;pPrdPubsOnRoot,Bag</strong>
                             ibExpandAll);	
  ...</pre>
<p>The use case calls <code>CAAOpenPLMComponent</code> API for opening a PLM Product 
Ref, though the API recommended for use by the CAA customer is <code>CompleteAndOpen()</code> 
method of the <em>CATAdpOpener</em> class.</p>
<p>The PLM Product Ref is retrieved as <em>CATIPrdPublications</em>* 
type.</p>
<p>The article &quot;Querying, Expanding &amp; Opening PLM Object&quot; 
[<a href="#References">5</a>]provides the details of the CAA recommended routine 
for PLM Product Ref retrieval.</p>
<p>The <code>CATBoolean ibExpandAll</code> argument when is set to
<strong>TRUE</strong> to load the entire Product Model in <strong>Authoring Mode</strong>, which 
includes the Base model with the accompanying Rep Instances and Publications. If 
set to <strong>FALSE</strong> it loads only the base Product Model.</p>
<p>The Base Product Model is restricted to the Root Reference and the Product Reference 
+ Instances beneath it.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving the Publication Aggregated under Root</h3>
<p>We retrieve the first Publication aggregated under Root.</p>
<pre class="code">  ...
  CATIPrdIterator* pIteratorForPub = NULL;
  hr = pPrdPubsOnRoot-&gt;Iterator(pIteratorForPub);
  ...
  CATBaseUnknown* pBUnkwnPublication = NULL;
  hr = pIteratorForPub-&gt;Next(pBUnkwnPublication);  
  ...   	
  CATIPrdPublication* piPublication = NULL;
  hr = pBUnkwnPublication-&gt;QueryInterface(IID_CATIPrdPublication,
                                          (void**)&amp;piPublication);
  ...</pre>
<p>Please note that <code>pPrdPubsOnRoot</code> is a <em>CATIPrdPublications</em>* 
type, retrieved the previous step, when we opened the Root product. <code>piPublication</code> 
is the first Publication of the opened Root Product.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Seeking the First Rep Instance Aggregated by the Root</h3>
<p>Here we retrieve the first Rep Instance associated with the Root Product.</p>
<pre class="code">...
  <strong>CATIPLMRepInstances_var spRepInstOnRoot = pPrdPubsOnRoot</strong>;
  ...
  CATIPrdIterator* pIterator = NULL;
  hr = spRepInstOnRootIterator(pIterator);
  ...
  CATBaseUnknown *pRepInstAsCBU = NULL ;
  hr = pIterator-&gt;Next(pRepInstAsCBU);
  ...
  CATIPrdObject *pRepInstanceAsIPrdObj = NULL ;
  hr = pRepInstAsCBU-&gt;QueryInterface(IID_CATIPrdObject,
        		                   (void**)&amp;pRepInstanceAsIPrdObj);
...</pre>
<p>In our scenario, the target is a feature object. Hence we retrieve the first 
Rep Instance under the Root Product which will contain the feature , to be published 
by the Publication. Next , we will retrieve the Rep Ref associated with the retrieved 
Rep instance.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Retrieving its PLM Rep Ref and Switching it to Edit Mode</h3>
<pre class="code">
...
  CATBaseUnknown* opUnkwnRepRef = NULL;
  hr = pRepInstanceAsIPrdObj-&gt;GetReferenceObject(opUnkwnRepRef,
                                                 IID_CATIPsiRepresentationLoadMode);
  ...
  CATIPsiRepresentationLoadMode_var spRepLoadModeOnRepRef = opUnkwnRepRef;
  ...
  CATIPsiRepresentationLoadMode::LoadingMode loadMode = CATIPsiRepresentationLoadMode::EditMode;
  hr = spRepLoadModeOnRepRef-&gt;ChangeLoadingMode(loadMode);     
...</pre>
<p>Please note that <code>pRepInstanceAsIPrdObj</code> is a <em>CATIPrdObject</em>*, 
retrieved the previous step. For this Rep Instance, we retrieve the associated PLM 
Rep Ref and switch it in Edit Mode.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving the New Feature by its Name in the Editable PLM 
Rep Ref</h3>
<p>Here we retrieve the new geometrical feature for the Publication to publish.</p>
<pre class="code">...
  CATIPLMNavRepReference * piNavRepRefOnCreatedRepRef  = NULL ; 
  hr = spRepLoadModeOnRepRef-&gt;QueryInterface(IID_CATIPLMNavRepReference,
                                             (void **)&amp;piNavRepRefOnCreatedRepRef );
  ...
  CATIMmiPrtContainer * piContainer = NULL ;
  hr = piNavRepRefOnCreatedRepRef -&gt;RetrieveApplicativeContainer("CATPrtCont",
                                                                 IID_CATIMmiPrtContainer,(void **)&amp;piContainer);
  ...
  CATIMmiMechanicalFeature_var spMechFeatOnPart;  
  hr = piContainer-&gt;GetMechanicalPart(spMechFeatOnPart);
  ...
  CATIPartRequest_var spPartRequestOnMechPart = spMechFeatOnPart;
  ...
  CATBaseUnknown * pInputFeature = NULL ;
  CATUnicodeString iFeatureName = iArgv[9];
  hr = ::CAAMmrGetGeometry(spPartRequestOnMechPart,iFeatureName,&amp;pInputFeature);
...</pre>
<p>This part consists in to retrieve the container of the 3DShape containing the 
Mechanical features [<a href="#References">7</a>]. Then we use a service of the 
CAAMechanicalModeler.edu framework, <em>CAAMmrGetGeometry</em>, to retrieve a feature 
by its name within this Mechanical container. Next, we create a Target to point 
to this retrieved feature.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Creating a Target to Point the Retrieved Feature (in Form 
of CATOmbObjectInContext Object)</h3>
<pre class="code">...
  <strong>CATOmbObjectInContext *oObjectInContext_OnInputFeature= NULL;</strong>

  CATLISTP(CATIPLMComponent) PathOfFirstIntance_EmptyList;
  CATIPLMComponent * pRepInstAsPLMComp = NULL ;
  hr = pRepInstanceAsIPrdObj-&gt;QueryInterface(IID_CATIPLMComponent,
                                             (void**)&amp;pRepInstAsPLMComp);
  ...
  <strong>hr= CATOmbObjectInContext::CreateObjectInContext(PathOfFirstIntance_EmptyList,
                                                   pRepInstAsPLMComp,
                                                   pInputFeature,
                                                   oObjectInContext_OnInputFeature);</strong>      
...</pre>
<p>We now create a target to point to the feature retrieved in the previous step. 
A Target is created in form of <code>CATOmbObjectInContext</code> class. Next, we 
will reset the Publication to point to this newly created Target. It details are 
mentioned in the next section.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Resetting the Publication to Point to the Newly Created 
Target</h3>
<p>The Publication is finally reset to point to the new target (retrieved in the 
previous step.</p>
<pre class="code">...
  <strong>hr= piPublication-&gt;SetPointed(oObjectInContext_OnInputFeature);</strong>     
...</pre>
<p>This step effectively results in the Publication publishing the new geometrical 
feature.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>The CAAMmrChangePubTarget use case ends by simply saving and closing the PLM 
session. Since all use cases necessarily conclude by closing the PLM session, we 
have a dedicated article on this topic namely &quot;Connecting to V6 Server&quot; 
[<a href="#References">4</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The objective of this use case is to replace a geometrical feature published 
by a Publication in a product model with another one of user choice.</p>
<p>This use case educates the user with the steps involved in publishing another 
object through an existing Publication.</p>
<p>Thus, in our scenario since the Publication has to publish another geometrical 
feature, we create a target (in form of <em>CATOmbObjectInContext</em> object) 
to point to the new feature, then we reset the Publication to point to this newly 
created Target.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAPstTaPublication.htm">Understanding Publication</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAPstUcCreatePublication_CreateTarget.htm">Creating Publication's 
		Target</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpen.htm">
		Querying, Expanding &amp; Opening PLM Object</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td>
		<a href="../CAAPLMAllConcepts/CAAPLMTaAllRepresentation.htm">
		PLM Representation Reference</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAMmrMecMod/CAAMmrTa3DShape.htm')">
		Representation to the 3DShape</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Aug 2006]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
