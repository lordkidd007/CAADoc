<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Product Multi Representation</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Product Multi Representation</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article deals with the representations associated with Product References.
		</p>
		<ul>
			<li><a href="#What">What Is the Multi Representation Concept?</a><ul>
				<li><a href="#Concept">Representation Concept</a></li>
				<li><a href="#Multi">Multi-Representation Concept</a></li>
				</ul>
			</li>
			<li><a href="#Managing">Managing PLM Representation Instances</a><ul>
				<li><a href="#Creating">Creating</a></li>
				<li><a href="#Removing">Removing</a></li>
				<li><a href="#Listing">Listing</a></li>
				</ul>
			</li>
			<li><a href="#Switching">Loading and Switching Representations</a>
				<ul>
					<li><a href="#RefLoading">Product Reference Loading Mode</a></li>
					<li><a href="#RepRefLoading">Representation Reference Loading 
						Mode</a></li>
					<li><a href="#RepRefSwitch">Switching Representations</a></li>
				</ul>
			</li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="What"></a>What Is the Multi Representation Concept?</h2>
<h3><a name="Concept"></a>Representation Concept</h3>
<p>A PLM Product model is a structure containing PLM Product References and PLM 
Product Instances. This basic diagram illustrates that:</p>
<table>
	<caption><a name="Fig1">Fig.1</a> Basic Product Structure</caption>
	<tr>
		<td>
		<img alt="Basic Product Structure" height="427" src="images/CAAPstMultiRep_ProductStruct.gif" width="591"/></td>
	</tr>
</table>
<p>Here you have the model description of a skateboard with two axles, each axle 
having two wheels. But this is the &quot;formal&quot; description of the model, 
you do not have any geometry with this structure. The geometry is integrated in 
the Product Structure through PLM Representation References (Rep Ref), and PLM Representation 
Instances (Rep Inst).</p>
<table>
	<caption><a name="Fig2">Fig.2</a> Product Structure with Representations</caption>
	<tr>
		<td>
		<img alt="Product Structure with Representations" height="517" src="images/CAAPstMovable_ProductModelStructRep.gif" width="622"/></td>
	</tr>
</table>
<p>Each PLM Representation Reference contains the 3D geometry, in other words the 
mechanical features that you can see in a 3D Viewer.</p>
<table>
	<caption><a name="Fig.3">Fig.3</a> Representation References with Geometry</caption>
	<tr>
		<td>
		<img alt="Representation References with Geometry" height="167" src="images/CAAPstMultiRep_Board.png" width="452"/></td>
		<td>
		<img alt="Representation References with Geometry" height="167" src="images/CAAPstMultiRep_Wheel.png" width="292"/></td>
	</tr>
</table>
<ul>
	<li>On the left: The purple board is defined by features inside the Rep Ref
		<code>CAAPstShortBoard</code>.</li>
	<li>On the right: The green wheel is defined by features inside the Rep Ref
		<code>CAAPstBigWheel</code>.</li>
</ul>
<p>So, on the [<a href="#Fig2">Fig.2</a>], you can see that each PLM Product Reference 
aggregates an instance of a PLM Representation Reference: the &quot;<code>CAAPstShateBoard&quot;</code> 
product is represented by an instance of the <code>CAAPstShortBoard</code> Representation 
Reference, and the &quot;<code>CAAPstWheel&quot;</code> product is represented by 
an instance of the <code>CAAPstBigWheel</code> Representation Reference.</p>
<p><strong>Attention</strong>: A PLM Representation Reference does not only contain 3D Geometry, 
it can of course contain 2D geometry, but it can also contain other thing that are 
not geometry: analysis result, annotation elements and so on. You can refer to the 
dedicated article about Representation Reference for more detail about their contents 
[<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Multi"></a>Multi-Representation Concept</h3>
<p>It can be useful to represent the same Product with different representations 
depending on each application. A simple example is the following:</p>
<table>
	<caption><a name="Fig4">Fig.4</a> Multi-Representation Examples</caption>
	<tr>
		<td>
		<img alt="Multi-Representation Examples" height="217" src="images/CAAPstMultiRep_Vanne.png" width="236"/></td>
		<td>
		<img alt="Multi-Representation Examples" height="218" src="images/CAAPstMultiRep_VanneSimple.png" width="196"/></td>
	</tr>
</table>
<ul>
	<li>On the left: the exact view of a tubing.</li>
	<li>On the right: a simplified view of the same tubing (for clash detection 
		for example).</li>
</ul>
<p>In this case the Product structure will be the following:</p>
<table>
	<caption><a name="Fig5">Fig.5</a> Multi-Representation UML Diagram</caption>
	<tr>
		<td>
		<img alt="Multi-Representation UML Diagram" height="217" src="images/CAAPstMultiRep_MultiTubing.gif" width="425"/></td>
	</tr>
</table>
<p>The same Product aggregates two Representation instances: one of each PLM Representation 
Reference type.</p>
<p>The last section, <a href="#Switching">Switching Representations</a>, 
describes how to select the visualized one, but previously we have integrated a 
section describing the management of the PLM Representation Instances.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Managing"></a>Managing PLM Representation Instances</h2>
<p>This section presents the main methods to create, list or remove the PLM Representation 
Instances associated with a PLM Product Reference. These method are on the <em>CATIPLMRepInstances</em> 
interface implemented on the PLM Product Reference.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Creating"></a>Creating</h3>
<p>A PLM Representation Instance is a PLM Core Type [<a href="#References">2</a>] 
component without mandatory attributes [<a href="#References">3</a>], this means 
that their creation only requires a name for the instance. This name must be unique 
among the ones aggregated by a given PLM Product Reference. This name is the PLM_ExternalID 
attribute value.</p>
<p>The API is the <code>AddRepInstance</code> of the <em>CATIPLMRepInstances</em> 
interface:</p>
<pre class="code">...
<strong>AddRepInstance</strong>( const CATUnicodeString&amp;  iRepInstName, 
                CATIPsiRepresentationReference*  iRef, 
                CATBaseUnknown*&amp;  oRepInstance, 
                const IID&amp;  iIID = IID_CATIPrdObject )= 0  
...</pre>
<p>This method creates an instance (instantiates) of the input PLM Representation 
Reference, <code>iRef</code>, and aggregates the new instance under the current 
PLM Product Reference. <code>iRepInstName</code> is the 
name of the newly created Representation Instance. This name is used to valuate 
the PLM_ExternalID attribute.</p>
<p>This method checks whether <code>iRepInstName</code> already exists for the current 
PLM Product Reference before creating the instance.</p>
<p>You can also create PLM Representation Instance when you use the Addxxx methods 
of the <em>CATIPrdAggregatedRepresentations</em> interface. This method creates 
one shot the PLM Representation Reference and its unique instance.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Removing"></a>Removing</h3>
<p>The API to remove an instance is RemoveRepInstance of the <em>CATIPLMRepInstances</em> 
interface:</p>
<pre class="code">...
HRESULT <strong>RemoveRepInstance</strong>( CATIPrdRepInstance*  iRepInst)= 0  
...</pre>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Listing"></a>Listing</h3>
<p>To list the PLM Product Representation instances associated with a PLM Product 
Reference, you have the choice between two kind of APIs:</p>
<ul>
	<li>Generic APIs (available for some Modelers): CATIPLMNavReference::ListChildren
		(you have a filter to select only the representation instances).</li>
	<li>Product APIs: CATIPLMRepInstances::Iterator.</li>
</ul>
<p>The technical article &quot;Product Structure Navigation&quot; [<a href="#References">4</a>] 
details these two methodologies.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Switching"></a>Loading and Switching Representations</h2>
<p>We have seen that a PLM Product Reference can aggregate none or several PLM Representation 
instances. This section explains how you can switch between representations. But 
previously, some important concepts about the loading in memory of the representation 
must be detailed.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="RefLoading"></a>Product Reference Opening Mode</h3>
<p>The first issue is to understand what is loaded in memory when a Product Model 
is opened, and how it is opened.</p>
<p>In C++, you have one API, the <code>CompleteAndOpen</code> method of the <em>CATAdpOpener</em> 
class (CATPLMIntegrationUse fw).</p>
<pre class="code">...
HRESULT <strong>CompleteAndOpen</strong>( CATIAdpPLMIdentificator*  iRefIdentifier, 
 const IID&amp;  iIID, 
 void**  oReference,  
 CATIAdpPLMErrorReviewer*  iopErrorReviewer = NULL 
)  
...</pre>
<p>This method loads in memory a PLM Reference that you have previously queried 
in the database using its identifier attribute set. <code>iRefIdentifier</code> 
is the result of a query using a method of the <em>CATAdpQueryServices</em> class.
<code>oReference</code> is the opened PLM Reference. The use case &quot;Querying, 
Expanding and Opening a PLM Component&quot; [<a href="#References">5</a>] details 
these APIs.</p>
<p>The most important here is to the input argument when you create the <em>CATAdpOpener</em> 
class instance. The parameter to express the expansion mode can be:</p>
<ul>
	<li><strong>OneLevelNavigation</strong>: The root PLM Reference is opened with the components 
		defining the structure on the first level, i.e. PLM instances (aka. PLMCoreInstance) 
		of the first level with their references (aka. PLMCoreReference).</li>
	<li><strong>Navigation</strong>: The root PLM Reference is opened, all its instances, 
		and recursively all PLM Instances and PLM References. [<a href="#Fig1">Fig.1</a>]</li>
	<li><strong>Authoring</strong> : The complete structure from the root PLM Reference is 
		opened: all PLM references, PLM instances, PLM Representation References, 
		PLM Representation Instances, Ports and Connections. [<a href="#Fig1">Fig.2</a>]</li>
</ul>
<p>So, if you use the <code>Navigation</code> mode to open the Piping structure 
represented on [<a href="#Fig5">Fig.5</a>] the display will be without geometry 
since neither the PLM Representation instances, nor their PLM Representation Reference 
will be loaded in memory. But if you use the <code>Authoring</code> mode, the visualization 
will be the following:</p>
<table>
	<caption>Fig.6 Merged Visualization</caption>
	<tr>
		<td>
		<img alt="Merged Visualization" height="314" src="images/CAAPstMultiRep_MultiTubingVisu.png" width="309"/></td>
	</tr>
</table>
<p>You can note that the two visualizations are merged. It is due to the loading 
mode of the PLM Representation Reference. In <code>Authoring</code> mode, each PLM 
Representation Reference in loading in &quot;<strong>Visu Mode</strong>&quot; (at least 3DShape).
This means that the Rep ref is loaded with its 3D geometry. Consequently, if your 
Product has several Representations, their geometries will be visually merged.</p>
<p>Now, it is interesting to see how to hide representations, and to let's one selected. 
But first, a little section to review the loading mode concept about PLM Representation 
Reference.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="RepRefLoading"></a>Representation Reference Loading Mode</h3>
<p>A PLM Representation Reference is a PLM Core Component [<a href="#References">2</a>], 
and like all other PLM Core Components it is saved in a database (vault). A PLM Representation 
Reference points streams (1..N), which are saved in the file store.</p>
<p><img alt="Database Vault and File Store" height="290" src="images/repref01.jpg" width="525"/></p>
<p>For example, the main stream associated with a Part Rep Ref, is a 3D Shape. This 
3D Shape contains mechanical features.</p>
<p>The loading mode of a PLM Representation Reference enable us to control the loaded 
Stream. For the purpose of this article, there are two cases to consider:</p>
<ul>
	<li><strong>PLM Mode</strong>:No Stream are loaded -</li>
	<li><strong>other cases</strong>: one or several streams are loaded.</li>
</ul>
<p>The interface enabling you to switch between loading modes is the <em>CATIPsiRepresentationLoadMode</em> interface.</p>
<pre class="code">...
HRESULT <strong>ChangeLoadingMode</strong>( LoadingMode  iNewMode) = 0  
...</pre>
<p>You can read the referenced technical article &quot;Understanding Product Representation 
Reference Loading Mode" [<a href="#References">7</a>] for complete details about 
the selective loading.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="RepRefSwitch"></a>Switching Representations</h3>
<p>If your product has several representations, you must load in:</p>
<ul>
	<li><strong>PLM Mode</strong> all the representations to hide</li>
	<li><strong>Other modes</strong> (Visu or Design mode): the representation to display.
	</li>
</ul>
<p>To illustrate the switch, we have used the Ref Ref Loading Mode Selection command, 
a CAA command explained in the referenced article [<a href="#References">6</a>]:</p>
<table>
	<tr>
		<td>
		<img alt="PLM and Visu Modes" height="376" src="images/CAAPstMultiRep_SwitchMode.png" width="392"/></td>
		<td>
		<img alt="PLM and Visu Modes" height="376" src="images/CAAPstMultiRep_SwitchMode2.png" width="386"/></td>
	</tr>
</table>
<ul>
	<li>On the left: EXACT_TUBING is in PLM Mode and SIMPLIFIED_TUBING is Visu mode.</li>
	<li>On the right: EXACT_TUBING is in Visu Mode and SIMPLIFIED representation 
		in PLM Mode.</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>A Product Reference can be represented of several ways. For each way, you have 
a PLM Representation Instance aggregated by the reference. To switch from a given 
representation, this one must be loaded in Edit or Visu Mode, and the others in 
PLM mode.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAPstTaProductRepRef.htm">PLM Product Representation Reference</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPLMAllConcepts/CAAPLMTaAllCorePrinciples.htm">
		PLM Core Model Overview</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPLMAllConcepts/CAAPLMTaAllAttributes.htm">
		Understanding PLM Attributes</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAPstTaProductNavigate.htm">Product Structure Navigation</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpen.htm">
		Querying, Expanding and Opening a PLM Object</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td><a href="CAAPstTaSelectiveLoading.htm">Selective Loading</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td><a href="CAAPstTaSelectiveLoading.htm">Understanding Product Representation 
		Reference Loading Mode</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table>
	<tr>
		<td>Version: <strong>1</strong> [Aug 2006]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
