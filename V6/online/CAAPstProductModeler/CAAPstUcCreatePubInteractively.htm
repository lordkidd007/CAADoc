<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating Publications Interactively</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Publications Interactively</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article demonstrates the Creation of a Publication interactively 
		in CATIA. The end user defines the target of each new publication by a selection 
		in the VPM Editor.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPstCreatePublicationInteractively Use 
				Case</a>
				<ul>
					<li><a href="#What">What Does CAAPstCreatePublicationInteractively 
						Do</a></li>
					<li><a href="#How">How to Launch CAAPstCreatePublicationInteractively</a></li>
					<li><a href="#Where">Where to Find the CAAPstCreatePublicationInteractivelyCode</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The use case educates an end-user with the steps involved in creating a Publication 
interactively. &quot;Interactively&quot; implies that a user selects the target 
from the spec tree of an input model within a 3D viewer.</p>
<p>You will learn how to use the result of a selection to create a target, and to 
associate it to a newly created publication.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPstCreatePublicationInteractively Use Case</h2>
<p>CAAPstCreatePublicationInteractively is a use case of the CAAProductStructure.edu 
framework that mainly illustrates ProductStructureInterfaces frameworks capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPstCreatePublicationInteractively Do</h3>
<p>The CAAPstCreatePublicationInteractively use case is a command in CATIA for creating 
a Publication interactively. It prompts an end user to select a PLM entity from 
the spec tree of a product model in CATIA, which acts as an input for Publication 
creation. The choice of the Product reference to attach the publication is described 
just hereafter.</p>
<p>This command is added to the &quot;<strong>CAA Product Modeler Create</strong>&quot; toolbar 
which is an add-in to the Product Workshop in CATIA. The <strong>Tools --&gt; Customize 
--&gt; Toolbar</strong> tab lists this toolbar, as seen in <a href="#Fig1">Fig.1</a> 
below.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1 &quot;CAA Product Modeler Create&quot; Toolbar</caption>
	<tr>
		<td>
		<img alt="CAA Product Modeler Create Toolbar" src="images/CAAPstCreatePort_Toolbar.jpg"/></td>
	</tr>
</table>
<p>The &quot;<strong>CAA Product Modeler Create</strong>&quot; toolbar is as seen in the [<a href="#Fig2">Fig.2]
</a>below and the icon
<img alt="Icon" height="20" src="images/CAAPstCreatePort_Icon.jpg" width="21"/> 
represents the newly added &quot;<strong>Create Publication</strong>&quot; command.</p>
<table>
	<caption><a name="Fig2"></a>Fig. 2 Toolbar with the New Command</caption>
	<tr>
		<td>
		<img alt="Toolbar with the New Command" src="images/CAAPstCreatePort_Cmd.jpg"/></td>
	</tr>
</table>
<p>When launching the command, the following dialog box appears:</p>
<table>
	<caption><a name="Fig3"></a>Fig.3 Creating Publication Dialog Box</caption>
	<tr>
		<td>
		<img alt="Creating Publication Dialog Box" src="images/CAAPstCreatePublication_CreatePubDlg.jpg"/></td>
	</tr>
</table>
<p>As depicted in the &quot;<strong>Creating Publication</strong>&quot; Dialog Box above , 
the various fields of this Dialog Box are from top down:</p>
<ul>
	<li><strong>Publication Name</strong>: editor to enter the name of the Publication to 
		create.</li>
	<li><strong>PathElement Objects</strong>: editor containing the alias name of each object 
		in the path of selection: object from the selected target to the root product</li>
	<li>Two radio buttons to define the product reference aggregating each new publication
	<ul>
		<li><strong>"Without Root"</strong>: If the user selects this button the new publication 
			is created under the root of the selected target, i.e. the root product 
			reference.</li>
		<li><strong>"With Root"</strong>: This option is only possible if the end user has 
			made a pre-selection (before launching the command). In this case the 
			product reference is the reference of its initial pre-selection (root 
			itself if the initial selection is the root, or the product reference 
			of the selected product instance otherwise).</li>
		</ul>
	</li>
	<li><strong>Publication's Root Name</strong> : when the &quot;With Root&quot; option is 
		checked, the editor contains the alias name of the pre-selected product 
		instance (its Product reference will aggregate publication), otherwise the 
		string is &quot;default&quot;.</li>
	<li><strong>Create Publication</strong> : this button is accessible soon a target has 
		been chosen.</li>
</ul>
<p>Now, lets us illustrate the publication creation according to the different configurations.</p>
<ul>
	<li><a href="#Conf1">The user has made a pre-selection to specify the Product 
		Reference aggregating the publications to create</a></li>
	<li><a href="#Conf2">The user has not made a pre-selection to specify the Product 
		Reference aggregating the publications to create</a></li>
</ul>
<p>The scenario is illustrated on the following Root product:</p>
<table>
	<caption><a name="Fig4"></a>Fig.4 Root Product Model</caption>
	<tr>
		<td>
		<img alt="Root Product Model" src="images/CAAPstCreatePublication_RootModel.jpg"/></td>
	</tr>
</table>
<ol>
	<li><strong><a name="Conf1"></a>The user has made a pre-selection to specify the 
		Product Reference aggregating the publications to create</strong>
		<p>The user has pre-selected the instance &quot;<code><strong>CAAPstCreatePublication_Child1.2.1</strong></code>&quot;, 
		see [<a href="#Fig5">Fig.5</a>]</p>
		<ul>
			<li>If the user selects the <strong>"With Root"</strong> option
				<p>The end user has selected the product instance &quot;<code><strong>CAAPstCreatePublication_Child1.3---IN_WORK</strong></code>&quot; 
				as target. [<a href="#Fig5">Fig.5</a>] shows you the contents of 
				the publication dialog box.</p>
				<table>
					<caption><a name="Fig5"></a>Fig.5 Publication for the Non Root 
					Product</caption>
					<tr>
						<td>
						<img alt="Publication for the Non Root Product" src="images/CAAPstCreatePublication_WithRoot.jpg"/></td>
					</tr>
				</table>
				<ul>
					<li>The &quot;<strong>PathElement Objects</strong>&quot; field is updated 
						with this selected PLM entity and all the other entities 
						in the product model, up the hierarchy until and including 
						the Root Reference.</li>
					<li>The &quot;<strong>Publication's Root Name</strong>&quot; is the name 
						of the selected instance (<code><strong>CAAPstCreatePublication_Child1.2.1</strong></code>)</li>
					<li>The &quot;<strong>Publication Name</strong>&quot; is the input.</li>
				</ul>
				<p>&quot;<strong>Create Publication</strong>&quot; button is activated, subsequent 
				to the validation of the three inputs above. An event associated 
				with this button click, invokes the target creation API. Subsequently 
				a Publication is created pointing to this target. You can see &quot;MyPublication&quot; 
				below the product Reference <code><strong>CAAPstCreatePublication_Child1.2---INWORK</strong></code></p>
			</li>
			<li>If the user selects the <strong>"Without Root"</strong> button :
				<p>The end user has selected the product instance &quot;<code><strong>CAAPstCreatePublication_Child1.3---IN_WORK</strong></code>&quot; 
				as target. [<a href="#Fig6">Fig.6</a>] shows you the contents of 
				the publication dialog box.</p>
				<table>
					<caption><a name="Fig6"></a>Fig. 6 Publication for the Root 
					Product</caption>
					<tr>
						<td>
						<img alt="Publication for the Root Product" src="images/CAAPstCreatePublication_WithoutRoot.jpg"/></td>
					</tr>
				</table>
				<ul>
					<li>The &quot;<strong>PathElement Objects</strong>&quot; field is updated 
						with this selected PLM entity and all the other entities 
						in the product model, up the hierarchy until and including 
						the Root Reference.</li>
					<li>The &quot;<strong>Publication's Root Name</strong>&quot; is default 
						since the &quot;without Root&quot; is checked.</li>
					<li>The &quot;<strong>Publication Name</strong>&quot; is the name of the 
						publication to create.</li>
				</ul>
				<p>&quot;<strong>Create Publication</strong>&quot; button is activated, now 
				you can see &quot;MyPublication&quot; below the Root product Reference.</p>
			</li>
		</ul>
	</li>
	<li><strong><a name="Conf2"></a>The user has not made a pre-selection to specify 
		the Product Reference aggregating the publications to create.</strong>
		<table>
			<caption><a name="Fig7"></a>Fig.7 Publication Created under the Root, 
			without Preselection</caption>
			<tr>
				<td>
				<img alt="Publication Created under the Root, without Preselection" src="images/CAAPstCreatePublication_WithoutPreSelection.jpg"/></td>
			</tr>
		</table>
		<p>You can see that it is like the case of the pre-selection when the &quot;Without 
		Root&quot; radio button is selected, the publication is created below the 
		root product model.</p>
	</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPstCreatePublicationInteractively</h3>
<p>To launch CAAPstCreatePublicationInteractively, you will need to set up the build 
time environment, then compile CAAPstCreatePublicationInteractively along with its 
prerequisites, set up the run time environment, and then execute the use case [<a href="#References">4</a>].</p>
<p>Launch CATIA, when the application is ready:</p>
<ul>
	<li><strong>Connect</strong> to the database.</li>
	<li>Select your <strong>environment</strong>.</li>
	<li><strong>Open</strong> a Product Model.</li>
	<li>On the <strong>Tools</strong> menu click <strong>Customize</strong> and check that the <strong>CAA 
		Product Modeler Create</strong> (<a href="#Addin">See Addin section</a>) is existing, 
		as shown in <a href="#Fig1">Fig.1</a> above. User can set the visibility 
		of the created toolbar with the <strong>View</strong>-&gt;<strong>Toolbars</strong> option.</li>
	<li>It is important to note that prior to launching the &quot;<strong>Create Publication</strong>&quot; 
		command, the user can preselect the Publication's Root in the spec tree. 
		Next, as soon as the &quot;<strong>Create Publication</strong>&quot; command is launched, 
		this preselected PLM entity name is updated in the &quot;<strong>Publication's 
		Root Name</strong>&quot; field within the dialog box, if the user has clicked 
		the option (radio button) of &quot;<strong>With Root</strong>&quot; (clickable). Otherwise, 
		by default, the &quot;<strong>Without Root</strong>&quot; option (radio button) is 
		always active by default.</li>
</ul>
<p>The <a href="#What">What Does CAAPstCreatePublicationInteractively Do</a> section 
provides further details on the steps ahead.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Addin"></a>Add-in Access</h3>
<p>The Product Structure add-in to the Product workshop within CATIA, is available 
thanks to a data extension of the CAAPstProductWksAddin component. This necessitates 
the following entries in the .dico file.</p>
<pre class="code">...
#CAA# CAAPstProductWksAddin CATIWorkbenchAddin libCAAPstProductWksAddin
#CAA# CAAPstProductWksAddin CATIPRDWorkshopAddin libCAAPstProductWksAddin
...</pre>
<p>Before launching CATIA, remove #CAA# characters in the CAAProductStructure.edu.dico 
in front of the above lines. These primarily indicate that the add-in is fundamentally 
a <em>CATIWorkbenchAddin</em> and a <em>CATIPrdWorkshopAddin</em> implementation residing 
in the CAAPstProductWksAddin shared lib.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPstCreatePublicationInteractively Code</h3>
<p>The CAAPstCreatePublicationInteractively use case is made of several classes/files 
located in the CAAPstCommands.m module of the CAAProductStructure.edu framework:</p>
<p><code>InstallRootFolder\CAAProductStructure.edu\CAAPstCommands.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is the folder 
where the API CD-ROM is installed.</p>
<ul>
	<li>CAAPstCreatePortDlg.cpp is the dialog class implementation to display the 
		data input by user necessary for target creation.</li>
	<li>CAAPstCreatePortCmd.cpp is the state command implementation. Its responsible 
		for launching the dialog box for Publication creation and also prompts an 
		end-user to select a PLM entity from the product model, the most basic input 
		for interactively creating target.</li>
</ul>
<p>The use case pre-reqs an addin module too:</p>
<p><code>InstallRootFolder\CAAProductStructure.edu\CAAPstProductWksAddin.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are four logical steps in CAAPstCreatePublicationInteractively use case:</p>
<ol>
	<li><a href="#Step1">Retrieving the Preselected Object to Be Used as Root of 
		the Publication</a></li>
	<li><a href="#Step2">Retrieving the Selection to Be Used as Target as a CATPathElement 
		Object</a></li>
	<li><a href="#Step3">Creating the Target</a></li>
	<li><a href="#Step4">Creating a Publication Pointing the Target</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Retrieving the Preselected Object to Be Used as Root of 
the Publication</h3>
<p>The StateChart command begins with retrieving the pre-selected object from the 
Editor. This pre-selected object will be used as the Product reference aggregating 
the publications to create.</p>
<pre class="code">...
  CATFrmEditor * pEditor = GetEditor();
  <strong>CATCSO *pCSO = pEditor-&gt;GetCSO();</strong>
  pCSO-&gt;InitElementList(); 
  CATBaseUnknown * pFirstElt = pCSO-&gt;NextElement();
  CATPathElement * pPathElement = (CATPathElement *) pFirstElt ;
  ...
  CATBaseUnknown * pRoot = (*pPathElement)[pPathElement-&gt;GetSize()-1];
  ...
  CATIPLMNavOccurrence *pNavOccOnSelObj=NULL;
  <strong>HRESULT hr= pRoot-&gt;QueryInterface(IID_CATIPLMNavOccurrence,(void**)&amp;pNavOccOnSelObj);</strong>
  ...
  CATIPLMNavReference * pRef = NULL ;
  pNavOccOnSelObj-&gt;GetRelatedReference(pRef) ;
  ...
  pRef -&gt;QueryInterface(IID_CATIPLMComponent,(void**)&amp;_pPlmCompOnRoot);
...</pre>
<p>The extract above is a part of the <strong>StateChart</strong> command constructor. We 
retrieve the object pre-selected by the user from the Editor. This selection will 
act as the Product Reference aggregating the Publications to be created .</p>
<p>Please note that , in the code above , we have used the interface <em>CATIPLMNavOccurrence</em> 
for retrieving the pre-selected object , Because Publication can only be aggregated 
by Product Reference and <em>CATIPLMNavOccurrence</em> is an interface 
only implemented on instance and reference ( not on rep ref and rep instance) .</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving the Selection to Be Used as Target as a CATPathElement 
Object</h3>
<p>A PLM component selected by an end-user from the product model in the CATIA UI, 
is transformed to a CATPathElement object. This is an input for the target creation 
API .</p>
<pre class="code">void CAAPstCreatePortCmd::BuildGraph()
{
   _daSelPathElementObject = new CATPathElementAgent(&quot;SelPathofFI&quot;);
...
}</pre>
<p>The extract above is a part of an implementation of the <strong>Statechart</strong> command. 
The command will prompt an end-user to select a PLM component from the spec tree 
in 3D Viewer. This selection is a target which is published by the Publication created 
as a final output.</p>
<p>We have a dialog agent (_daSelPathElementObject ) associated which returns the 
selected entity, as seen in the extract below.</p>
<pre class="code"><strong>
...
  CATPathElement* pathmodel = _daSelPathElementObject-&gt;GetValue();</strong>
  ...
  _pCAAPstCreatePubDlg-&gt;<strong>SetParameters</strong>(pathmodel,_pPlmCompOnRoot);
...</pre>
<p>The dialog agent associated with the initial selection state returns a <em>CATPathElement</em> 
object. This object is a collection of the selected entity and all the other PLM 
components in the product model, up the hierarchy, until and including the Root 
Ref. This <em>CATPathElement</em> object is passed to the method <code>SetParameters</code> 
of the dialog class for valuation of its data members.</p>
<p>We valuate the data members of the dialog class with the <em>CATPathElement</em> 
object and the <strong>Root Ref</strong>, so that this information is accessed and displayed 
by the &quot;<strong>Create Publication</strong>&quot; dialog.</p>
<pre class="code">HRESULT CAAPstCreatePortDlg::SetParameters( CATPathElement* pathmodel,
      					     CATIPLMComponent* ipCompOnRoot)
{
  ...
  _pPathElement = pathmodel;
  _pCompOnRoot = ipCompOnRoot;
  ...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating the Target</h3>
<p>We just initialized the members of the dialog class, with data essential for 
target creation. We create a target expressed as a CATOmbObjectInContext object 
from a selection.</p>
<pre class="code">...
  <strong>CATIPrdObjectInContextUI</strong> * piPrdObjInContextUI = NULL;
  rc = ::<strong>CATInstantiateComponent("CATPrdUIFactory",IID_CATIPrdObjectInContextUI,
                                (void**)&amp;piPrdObjInContextUI);</strong>
  ...
  CATOmbObjectInContext *opObjInCxt_SelectedObj=NULL;
  CATIPLMComponent *pCompOnRootObj=NULL;
  <strong>CATULong RootState = _pWithRoot-&gt;GetState();</strong>
  <strong>if (CATDlgCheck == RootState)</strong>
  {
    <strong>rc = _pObjRoot-&gt;QueryInterface(IID_CATIPLMComponent, (void**)&amp;pCompOnRootObj);</strong>
    <strong>rc=  piPrdObjInContextUI-&gt;ComputeObjectInContextFromPathElement(*_pPathElement,
                                                                   TRUE,
                                                                   pCompOnRootObj,
                                                                   opObjInCxt_SelectedObj);</strong>
 } else
 {
    <strong>rc = piPrdObjInContextUI-&gt;ComputeObjectInContextFromPathElement(*_pPathElement,
                                                                             TRUE,
                                                                             NULL,
                                                                   opObjInCxt_SelectedObj);</strong>
 }
 ...
 rc = <strong>CreatePublication</strong>(opObjInCxt_SelectedObj);
  ...</pre>
<p>The target creation API <code>CATIPrdObjectInContextUI ::ComputeObjectInContextFromPathElement</code> 
takes four arguments:</p>
<ol>
	<li><code>*_pPathElement</code>, a CATPathElement type, the user selected PathElement 
		for the Targe.t</li>
	<li><code>TRUE</code>, a CATBoolean type, if the value is TRUE, the method 
		looksup for all the Publications pointing the target object and returns 
		the topmost publication, else if the value is FALSE, the object identifying 
		the target object is returned.</li>
	<li><code>pCompOnRootObj</code>, a <em>CATIPLMComponent *</em> type, this is the 
		required Publication's Root.
		<ul>
			<li>If the user has preselected the Publication's Root: Then if the 
				user has clicked the "With Root" radio button in the &quot;<strong>Create 
				Publication</strong>&quot; dialog box, then this preselected root is 
				passed explicitly as third(pCompOnRootObj) argument to the target 
				creation API, else <strong>NULL</strong> is passed. If NULL is passed, an 
				implicit value( Root Ref of the target) is assumed by the API.</li>
			<li>If the user has not preselected the Publication's Root : Then NULL 
				is passed as the third(pCompOnRootObj) argument to the target creation 
				API.</li>
		</ul>
	</li>
	<li><code>opObjInCxt_SelectedObj</code>, a CATOmbObjectInContext * type, the 
		built target(in form of CATOmbObjectInContext) representing the selected 
		CATPathElement.</li>
</ol>
<p>The target is then passed for Publication creation.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Creating a Publication Pointing the Target</h3>
<p>A Publication is then created pointing to this newly created target.</p>
<pre class="code"><strong>HRESULT CAAPstCreatePortDlg::CreatePublication
      			              (CATOmbObjectInContext* &amp;ipObjInCxt_SelectedObj)</strong>   
{
      
  CATIPLMComponent *oPlmCompOnCtxtRootRef=NULL;
  <strong>rc = ipObjInCxt_SelectedObj-&gt;GetContextRootReference(oPlmCompOnCtxtRootRef);</strong>
  ...
  <strong>if ( SUCCEEDED(rc) &amp;&amp; ( NULL!= oPlmCompOnCtxtRootRef) )</strong>
  {
    <strong>CATIPrdPublications</strong>* pPublicationsOnRoot = NULL;
    rc = <strong>oPlmCompOnCtxtRootRef</strong>-&gt;QueryInterface(IID_CATIPrdPublications,
   			                   (void**)&amp;<strong>pPublicationsOnRoot</strong>); 
  ...</pre>
<p>Its important to retrieve the Root from the newly created target . The <code>
GetContextRootReference</code> API of a <code>CATOmbObjectInContext</code> enables 
us retrieve this Root.</p>
<pre class="code">...
  CATIPrdPublication_var oIPublication;
  CATICkeParmFactory_var spCkeParmFactory  =  <strong>CATCkeGlobalFunctions::GetVolatileFactory</strong>(); 
  if ( NULL_var != spCkeParmFactory )
  {
    CATListValCATICkeParm_var ListAttr;
    CATICkeParm_var spParm;    
    spParm = spCkeParmFactory-&gt;CreateString("<strong>V_FunctionalName</strong>", _pEditPubName-&gt;GetText());  
    ListAttr.Append(spParm);
...</pre>
<p>Then we create an attribute (volatile) to handle the name of the new Publication. 
It is retrieved from the &quot;<strong>Publication Name</strong>&quot; field in the &quot;<strong>Creating 
Publication</strong>&quot; dialog box, <code>_pEditPubName</code> holds the value of 
the editor.</p>
<pre class="code">...
    rc = pPublicationsOnRoot-&gt;<strong>AddPrdPublication</strong>(NULL,ListAttr,ipObjInCxt_SelectedObj,oIPublication);
...</pre>
<p>Finally, we can easily create and aggregate a new Publication under this Root 
Ref, thanks to its <em>CATIPrdPublications</em> implementation, and the <code>AddPrdPublication</code> 
method. The arguments of this method are:</p>
<ul>
	<li>The first argument is the environment. The <code>NULL</code> value means 
		that the API will use the current one.</li>
	<li>The second argument<code> ListAttr</code> only contains the functional attribute 
		(here the publication name).</li>
	<li>The third argument represents the target, <code>ipObjInCxt_SelectedObj</code>.</li>
	<li>The last argument is the newly created publication.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This Use case demonstrates the creation of a Publication in CATIA, interactively.The 
use case also enables the end user to preselect the Publication's Root for the new 
Publication to be created .</p>
<p>In this use case, we have mainly used the following interfaces:</p>
<ul>
	<li><code>CATIPrdObjectInContextUI::ComputeObjectInContextFromPathElement</code> to 
		create a target expressed as a CATOmbObjectInContext object from a selection.</li>
	<li><em>CATIPrdPublications</em> to associate the target (CATOmbObjectInContext) 
		with the new publication.</li>
	<li><em>CATIPrdPublication</em> represents the new publication.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADlgDialog/CAADlgTaOverview.htm">
		Dialog Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADegDialogEngine/CAADegTaGettingStarted.htm">
		Getting Started with State Dialog Commands</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAAfrApplicationFrame/CAAAfrUcSampleAddin.htm">
		Creating an Add-in</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Oct 2006]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: 2 [Oct 2010]</td>
		<td>New method to create a Publication</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
