<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating Publications</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Publications</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article shows how to create <strong>Publications</strong> exposing various 
		objects within a Product Model (Geometry/Literals, Visualized Occurrences, 
		another Publication etc). Since Publications are associated with Target's, 
		its recommended that user clarifies the concepts of a Target having read 
		the article &quot;Creating Publication's Target&quot; [<a href="#References">2</a>]. 
		Moreover this use case assumes the creation of the Target's to be published 
		by the Publications. Hence &quot;Creating Publication's Target&quot; 
		[<a href="#References">3</a>] use case is to be read before you proceed 
		with this one.</p>
		<p>The fundamentals of Publications are best explained in the technical 
		article &quot;Publications&quot; [<a href="#References">3</a>] .</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPstCreatePublication_CreatePublication 
				Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPstCreatePublication_CreatePublication</a></li>
					<li><a href="#How">How to Launch CAAPstCreatePublication_CreatePublication</a></li>
					<li><a href="#Where">Where to Find the CAAPstCreatePublication_CreatePublication 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is primarily intended to explain you the usage API's of ProductStructureInterface 
framework for creation of <strong>Publication</strong>.</p>
<p>The <em>CATIPrdPublications</em> Interface sought from the <strong>Product Reference</strong> 
provides a method viz. <code>AddPublication</code> for creating a Publication.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPstCreatePublication_CreatePublication Use Case</h2>
<p>CAAPstCreatePublication_CreatePublication is a use case of the CAAMechanicalModeler.edu 
framework that illustrates fundamentally the ProductStructureInterfaces framework 
capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPstCreatePublication_CreatePublication Do</h3>
<p>The use case begins with opening the Root Product in &quot;<strong>Authoring mode</strong>&quot;. 
This mode ensures that all PLM components of the Product Model are loaded in session 
, as seen in the snapshot [<a href="#Fig1">Fig. 1</a>] below.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1 The Opened Reference Product</caption>
	<tr>
		<td>
		<img alt="The Opened Reference Product" src="images/CAAPstCreatePublication_InputModelWithPrefix.jpg"/></td>
	</tr>
</table>
<p>We have Root viz. CAAPstPLORoot which has the CAAPstPLOSub1.1 instance under 
it. CAAPstPLOSub1.1 is an instance of the CAAPstPLOSub1 reference</p>
<p>The Product Reference CAAPstPLOSub1 aggregates in turn</p>
<blockquote>
	<p>one instance CAAPstPLOSub2.1 ( instance of CAAPstPLOSub2 ).</p>
	<p>a Rep Instance CAAPstPLORepSub1</p>
</blockquote>
<p>The Product Reference CAAPstPLOSub2 has a Publication viz. CAAPstPLOPubSub2, 
associated with it.</p>
<p>The Rep Ref CAAPstPLORepSub1 has a Knowledge Parameter viz. CAAPstPLOMyParameter 
of the type &quot;string&quot; associated with it.The [<a href="#Fig2">Fig. 2</a>] 
depicts this association.</p>
<table>
	<caption><a name="Fig2"></a>Fig. 2 The CAAPstPLOMyParameter Parameter</caption>
	<tr>
		<td>
		<img alt="The CAAPstPLOMyParameter Parameter" src="images/CAAPstCreatePublication_KnowParam.jpg"/></td>
	</tr>
</table>
<p>The &quot;<strong>Formulas</strong>&quot; dialog box appears through the command <strong>Fx</strong>
in the <strong>CATIA 3D Shape</strong> workbench.</p>
<p>The use case then does the following:</p>
<ol>
	<li>A Publication exposing a Visualized Occurrence viz. CAAPstPLOSub2.1 in the 
		context of CAAPstPLORoot.</li>
	<li>A Publication exposing Publication CAAPstPLOPubSub2 (PLM Component) in the 
		context of CAAPstPLORoot</li>
	<li>A Publication exposing Knowledge Parameter (literal) viz. CAAPstPLOMyParameter 
		in the context of CAAPstPLOSub1.</li>
</ol>
<p>Each of those Publication's Target, are available, thanks to the execution of 
the previous use case &quot;Creating Publication's Target>&quot; [<a href="#References">2</a>]</p>
<p>The Product Model at the end of this use case execution is seen below [<a href="#Fig3">Fig.3</a>]. 
You'll find 1 Publication pointing to a Knowledge Parameter under CAAPstPLOSub1, 
while there are 4 aggregated under CAAPstPLORoot. Of these one is an empty Publication, 
while 2 point to a Visualized Occurrence &amp; one to a Publication.</p>
<table>
	<caption><a name="Fig3"></a>Fig.3 Product Model after Use Case Execution</caption>
	<tr>
		<td>
		<img alt="Product Model after Use Case Execution" src="images/CAAPstCreatePublication_OutputModel.jpg"/></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPstCreatePublication_CreatePublication</h3>
<p>To launch CAAPstCreatePublication_CreatePublication , you will need to set up 
the build time environment, then compile CAAPstCreatePublication along with its 
prerequisites, set up the run time environment, and then execute the use case [<a href="#References">1</a>]. 
To launch the use case execute the command:</p>
<p><code>mkrun -c &quot; CAAPstCreatePublication Repository Server User Password 
SecurityCtx Environment PLM_ExternalID V_version&quot;</code></p>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as ServerName:ServerPort/rootURI</td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>a string representing the security context (Role.Organization.Project). 
		Choose Role as Designer ( as the use case modifies the PLM Data)</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment containing PLMProductDS (a PRODUCT's custo)</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The PLM_ExternalID of a PLM Reference or PLM Representation Reference 
		be browsed</td>
	</tr>
	<tr>
		<th>V_version</th>
		<td>The V_version of a PLM Reference or PLM Representation Reference</td>
	</tr>
</table>
<p>* The input model is retrieved by importing the CAAPstCreatePublication.3dxml 
file from the CAAMechanicalModeler.edu fwk.</p>
<p><code>InstallRootFolder\CAAMechanicalModeler.edu\InputData\CAAPstCreatePublication.3dxml\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contains the Product Reference with the following 
attributes:</p>
<ul>
	<li><code><strong>PLM_ExternalID</strong></code>: <code>CAAPstPLORoot</code></li>
	<li><code><strong>Version</strong></code>: ---</li>
</ul>
<p><strong>Attention</strong>: This use case saves the input model. So you must reimport the 
original component with another prefix, to re-execute and see the modifications. 
Please refer to the document [<a href="#References">1</a>] for how to import and 
reimport such a 3D XML file in your PLM repository.</p>
<p>The PLM_ExternalID attribute value of the imported model is typically of the 
format &quot;YourPrefix + CAAPstPLORoot&quot;, where YourPrefix is the string provided 
as prefix, while importing a 3D XML file to CATIA.</p>
<p>For eg, the screenshot above [<a href="#Fig1">Fig. 1</a>] depicts our input model 
in CATIA, available thanks to a 3D XML file import with &quot;<strong>gro</strong>&quot; as 
prefix.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPstCreatePublication_CreatePublication 
Code</h3>
<p>The CAAPstCreatePublication_CreatePublication use case is made of a single file 
located in the CAAPstCreatePublication.m module of the CAAMechanicalModeler.edu 
framework:</p>
<p><code>InstallRootFolder\CAAMechanicalModeler.edu\CAAPstCreatePublication.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>A prerequisite framework viz. CAAPLMClientAdapter.edu, which comes with the CAA 
Install, requires a special mention here, since it provides us with a method
<code>CAAOpenPLMComponent</code>. This CAA API is dedicated for opening the Root 
Reference. Refer to [<a href="#References">5</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are the following logical steps in CAAPstCreatePublication_CreatePublication:</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Step1">Addding an Empty Publication under Root</a></li>
	<li><a href="#Step2">Setting the Publication Pointed Object to an Existing Target</a></li>
	<li><a href="#Step3">Adding a Publication under Root Exposing a Visualized Occurrence</a></li>
	<li><a href="#Step4">Adding a Publication under Root Exposing a Publication</a></li>
	<li><a href="#Step5">Adding a Publication Exposing a Knowledge Parameter</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The execution of this use case follows the execution of another use 
case viz. &quot;Creating Publication's Target&quot; [<a href="#References">2</a>]. 
The steps pertaining to creating a session, connecting to an Repository, opening 
the Root in Authoring Mode &amp; finally creating the 3 Target's mentioned above 
are already covered in the &quot;Creating Publication's Target&quot; [<a href="#References">2</a>] 
use case.</p>
<p>Thus, our execution at this juncture is at the stage where we have 3 Target's 
available for Publication creation. We now proceed to create Publications corresponding 
to each of these 3 Target's.</p>
<p>We also create empty Publication which later expose Object's with the calls to
<code>CATIPrdPublication::SetPointed</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Addding an Empty Publication under Root</h3>
<p>We begin by creating an empty Publication. An empty Publication does not point 
to any specific target.</p>
<pre class="code">...
      CATUnicodeString PublicationName_PointedWithSet = "Publication_PointedWithSet";
      CATIPrdPublication_var Pub_PointedWithSet;
      <strong>hr = piPublications_Root-&gt;AddPublication(PublicationName_PointedWithSet,
      					 NULL,
      					 Pub_PointedWithSet);</strong>
...</pre>
<p>An important point to be noted here is that Publications never exist independently. 
These are always aggregated under Product References. Hence the first step in creation 
of Publications is to seek the <em>CATIPrdPublications</em> Interface Pointer from 
the Product Reference (in this case <code>CAAPstPLORoot</code>), which was done 
in a step of an earlier use case &quot;Creating Publication's Target&quot; 
[<a href="#References">2</a>].</p>
<p>The code snippet above uses the <code>CATIPrdPublications::AddPublication</code> 
method for creating a Publication. This method takes three arguments :</p>
<ul>
	<li><strong>PublicationName_PointedWithSet</strong>, A const <em>CATUnicodeString</em> &amp; 
		type, which takes the Publication Name. It is unique in the scope of the 
		aggregating Product Reference.</li>
	<li><strong>NULL</strong>, const CATOmbObjectInContext* type, which defines the Publication's 
		Target. In the code above, as we have created an empty publication which 
		does not have any target, we pass this argument as NULL.</li>
	<li><strong>Pub_PointedWithSet</strong>, a <em>CATIPrdPublication_var</em> &amp; type, 
		an out argument for the Publication created.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Publication Pointed Object to an Existing Target</h3>
<p>In the previous step, we created an empty Publication. But a Publication is primarily 
meant to expose a object within a Product Model. Users thus have the liberty to 
point the Publication, to any target of their choice using the <code>CATIPrdPublication::SetPointed</code> 
method.</p>
<pre class="code">...
  <strong>hr = Pub_PointedWithSet-&gt;SetPointed(oObjectInContext_OnInstance);</strong>
...</pre>
<p>The <code>CATIPrdPublication::SetPointed</code> takes the following argument:</p>
<ul>
	<li><code>const CATOmbObjectInContext*</code>, which is a pointer to the target 
		object. In this case, it is <code>oObjectInContext_OnInstance</code>, a 
		Target pointing to a Visualized occurrence of CAAPstPLOSub2.1 in the context 
		of CAAPstPLORoot. This was retrieved in an
		<a href="CAAPstUcCreatePublication_CreateTarget.htm#Step7">
		earlier step</a> detailed in the &quot;Creating Publication's Target&quot; 
		[<a href="#References">2</a>]</li>
</ul>
<p>The Publication that results is depicted schematically in the screenshot [<a href="#Fig3">Fig. 
3</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Adding a Publication under Root Exposing a Visualized Occurrence</h3>
<p>The previous steps dealt with creating an empty Publication and then pointing 
it to a Target. This step combines both these implying that the Publication created 
points to a target, at birth.</p>
<pre class="code">...
      CATUnicodeString PublicationName_PointedOnInst = "Publication_On_Instance";
      CATIPrdPublication_var Pub_PointedOnInst;
      <strong>hr = piPublications_Root-&gt;AddPublication(PublicationName_PointedOnInst,
			                    oObjectInContext_OnInstance,
			                    Pub_PointedOnInst);</strong>
...</pre>
<p>The code is logically similar to the one in <a href="#Step1">Addding an Empty 
Publication under Root</a>, except for the fact that <code>oObjectInContext_OnInstance</code> 
, a Target pointing to a Visualized occurrence of CAAPstPLOSub2.1 in the context 
of CAAPstPLORoot.&nbsp; This was retrieved in an
<a href="CAAPstUcCreatePublication_CreateTarget.htm#Step7">
earlier step</a> detailed in the &quot;Creating Publication's Target&quot; 
[<a href="#References">2</a>]</p>
<p>The <em>CATIPrdPublications</em> Interface Pointer viz <code>piPublications_Root</code> 
which invokes this method, is retrieved in an earlier step. [<a href="#Prolog">Prolog</a>]</p>
<p>The Publication that results is depicted schematically in the screenshot [<a href="#Fig3">Fig. 
3</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Adding a Publication under Root Exposing a Publication</h3>
<p>This step is primarily the same as the earlier one, except that the Publication 
created points to a Publication. Hence it is a Publication on Publication.</p>
<pre class="code">...
      CATUnicodeString PublicationName_PointedOnPub = "Publication_On_Publication";
      CATIPrdPublication_var Pub_PointedOnPub;
      <strong>hr = piPublications_Root-&gt;AddPublication(PublicationName_PointedOnPub,
      		                             oObjectInContext_OnPublication,
      		                             Pub_PointedOnPub);</strong>
...</pre>
<p>The code is logically similar to the one in the previous step, except for the 
fact that oObjectInContext_OnPublication argument is a Target pointing to a Publication 
CAAPstPLOPubSub2, in the context of CAAPstPLORoot. This was retrieved in an
<a href="CAAPstUcCreatePublication_CreateTarget.htm#Step8">
earlier step</a> detailed in the &quot;Creating Publication's Target&quot; 
[<a href="#References">2</a>].</p>
<p>The Publication that results is depicted schematically in the screenshot above 
[<a href="#Fig3">Fig.3</a>] .</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Adding a Publication under a SubProduct Exposing a Knowledge 
Parameter</h3>
<p>Here we intend to aggregate a Publication exposing a Knowledge Parameter.</p>
<pre class="code">
...
      CATBaseUnknown* poPublicationsSub1 = NULL; 
      hr = piPrdObj_Sub11-&gt;GetReferenceObject(poPublicationsSub1,IID_CATIPrdPublications);
      <strong>CATIPrdPublications_var spPublications_Sub1 = poPublicationsSub1;</strong>
      ...
      CATUnicodeString PublicationName_PointedOnKnowParam = "Port_On_KnowParameter";
      CATIPrdPublication_var Pub_PointedOnKnowParam;
      <strong>hr = spPublications_Sub1-&gt;AddPublication(PublicationName_PointedOnKnowParam,
      		                             oObjectInContext_ForKnowPara,
      		                             Pub_PointedOnKnowParam);</strong>
...</pre>
<p>Fundamentally, we have a call to <code>CATIPrdPublications::AddPublication</code> 
method here.</p>
<p>The Product Reference invoking the method is<code>spPublications_Sub1</code>, 
a <em>CATIPrdPublications</em> Interface Pointer on <code>CAAPstPLOSub1</code>.</p>
<p>In the &quot;Creating Publication's Target&quot; [<a href="#References">2</a>], 
there is a
<a href="CAAPstUcCreatePublication_CreateTarget.htm#Step2">
step</a> which helps us retrieve the <em>CATIPrdObject</em> Interface Pointer on
<code>CAAPstPLOSub1.1</code> viz. <code>piPrdObj_Sub11</code>. A call 
to <code>GetReferenceObject</code> with <code>piPrdObj_Sub11</code> 
returns us the <em>CATIPrdPublications</em> interface pointer 
on Product Reference <code>CAAPstPLOSub1</code> viz. <code>poPublicationsSub1</code>. 
Then we retrieve the handler <code>spPublications_Sub1</code> from <code>poPublicationsSub1</code>.</p>
<p>Here again, the code is similar to the previous step, except for the fact that
<code>oObjectInContext_ForKnowPara</code>, a Target pointing to the Knowledge Parameter 
viz. <code>CAAPstPLOMyParameter</code> in the context of <code>CAAPstPLOSub1</code>. 
This was retrieved in an
<a href="CAAPstUcCreatePublication_CreateTarget.htm#Step6">
earlier step</a> detailed in the &quot;Creating Publication's Target&quot; 
[<a href="#References">2</a>].</p>
<p>The Publication that results is depicted in the screenshot above [<a href="#Fig3">Fig.3</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>The CAAPstCreatePublication_CreatePublication use case ends by simply 
closing the PLM session. Since all PS use cases necessarily conclude by closing 
the PLM session, we have a dedicated article on this topic viz. &quot;Connecting 
to V6 Server&quot; [<a href="#References">4</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The article has dealt with various ProductStructureInterface 
api's for the creation of <strong>Publications</strong>.</p>
<p>There were primarily 2 kinds of Publications we dealt with, in this use case:</p>
<ul>
	<li>A Publication created empty at birth which then points to a target, thanks 
		to the <code>CATIPrdPublication::SetPointed</code> method.</li>
	<li>A Publication created points to a target, at birth, thanks to the <code>
		CATIPrdPublications::AddPublication</code> method.</li>
</ul>
<p>Its important to note that the name of a Publication is unique in the context 
of its aggregating Product Reference.</p>
<p>Also, the Target's here are assumed to already exist &amp; thus act as an input 
for this use case. Hence the &quot;Creating Publication's Target&quot; [<a href="#References">2</a>] 
is recommended to be studied prior to this use case.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAPstUcCreatePublication_CreateTarget.htm">Creating Publication's 
		Target</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAPstTaPublication.htm">Publications</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryPLMComponentWithUniqueKey.htm">
		Query PLM component with Unique Key</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2006]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
