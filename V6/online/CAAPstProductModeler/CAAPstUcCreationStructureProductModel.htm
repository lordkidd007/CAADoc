<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creation a Product Structure Model</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating a Product Structure Model</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAAPstCreationStructureProductModel use case. 
		It creates a PLM Reference and then instantiates it, aggregated under another 
		PLM Reference.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPstCreationStructureProductModel Use Case</a>
				<ul>
					<li><a href="#What">What Does the CAAPstCreationStructureProductModel 
						Do</a></li>
					<li><a href="#How">How to Launch CAAPstCreationStructureProductModel</a></li>
					<li><a href="#Where">Where to find the CAAPstCreationStructureProductModel 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#History">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The primary learning from this Use Case are to use the API to create a Product 
Reference, and the one to instantiate it.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPstCreationStructureProductModel Use Case</h2>
<p>CAAPstCreationStructureProductModel is a use case of the CAAProductStructure.edu 
framework that illustrates the ProductStructureInterfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPstCreationStructureProductModel Do</h3>
<p>The use case simply creates 2 References viz. <strong>Root</strong> and <strong>Wheel</strong>. It 
then instantiates the Wheel twice, below Root as seen in the [<a href="#Fig1">Fig. 
1</a>] below.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1 Product Model Created</caption>
	<tr>
		<td>
		<img alt="Product Model Created" height="274" src="images/CAAPstCreationStructureProductModel_OutputProductModel.jpg" width="386"/></td>
	</tr>
</table>
<p>The Use Case begins by valuating a set of attributes (Mandatory, Identifier, 
Optional) which is a pre-requisite for creating a PLM Reference.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPstCreationStructureProductModel</h3>
<p>To launch CAAPstCreationStructureProductModel, you will need to set up the build 
time environment, then compile CAAPstCreationStructureProductModel along with its 
prerequisites, set up the run time environment, and then execute the use case [<a href="#References">1</a>].</p>
<p>To launch the use case execute the command:</p>
<p><code>mkrun -c &quot;<em>CAAPstCreationStructureProductModel Repository Server 
User Password SecurityCtx</em>&quot;</code></p>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as ServerName:ServerPort/rootURI</td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>a string representing the security context (Role.Organization.Project). 
		Choose Role as Designer (as the use case modifies/creates the PLM Data).</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPstCreationStructureProductModel Code</h3>
<p>The CAAPstCreationStructureProductModel use case is located in the CAAPstCreationStructureProductModel.m 
module of the CAAProductStructure.edu framework:</p>
<p><code>InstallRootFolder\CAAProductStructure.edu\CAAPstCreationStructureProductModel.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>Following are the main steps in CAAPstCreationStructureProductModel:</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Step1">Creating a Product Reference</a></li>
	<li><a href="#Step2">Instantiating a Product Reference</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The CAAPstCreationStructureProductModel use case begins by creating a session 
and connecting to the Input Repository. This, being the most fundamental prerequisite 
for all batch use cases, it is the first step in their execution.</p>
<p>In this case, we create a session &amp; connect to Repository with the Designer 
Role (since we create new PLM data). There are other parameters as well, details 
of which can be found in the &quot;Connecting to V6 Server&quot; use case 
article [<a href="#References">2</a>]. This article primarily deals with Opening 
and Closing a PLM session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Creating a Product Reference</h3>
<p>Here a Product Reference is created and a set of attributes associated with it 
are valuated at the time of creation.</p>
<pre class="code">...
<strong>  CATIPrdReferenceFactory</strong>* pPrdFactory=NULL;
  hr = <strong>CATPrdFactory::CreatePrdFactory</strong>(<strong>IID_CATIPrdReferenceFactory</strong>, (void**)&amp;pPrdFactory);
				
  CATIType_var spRefType;
  CATCkePLMNavPublicServices::RetrieveKnowledgeType("VPMReference", spRefType);
<strong>  CATIPLMProducts*</strong> pAxisRef  = NULL;
<strong>  CATIPLMProducts*</strong> pWheelRef = NULL;
  CATLISTV(CATICkeParm_var) EmptyAttributeList;
		
  hr = <strong>pPrdFactory-&gt;CreatePrdReference</strong>(spRefType, EmptyAttributeList, pAxisRef, NULL);
      						 	
  hr = <strong>pPrdFactory-&gt;CreatePrdReference</strong>(spRefType, EmptyAttributeList, pWheelRef, NULL); 
...</pre>
<p>One the interface to create the Product Reference is retrieved (<code>pPrdFactory</code>, 
a <em>CATIPrdReferenceFactory</em> interface pointer), we can call the method of 
this interface to create the Product Reference. <code>CreatePrdReference</code>
needs an environment as input, it is the pointer of type CAIAdpEnvironment When 
it is passed as NULL it takes current environment . The method will call the init 
Business Logic to valuate the required attributes. Do not use the list to valuate 
yourself the attribute valuated by the init Business Logic.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Instantiating a Product Reference</h3>
<p>An instance of a Product Reference always occurs aggregated under another Product 
Reference.</p>
<pre class="code"> ...
CATBaseUnknown * pWheelInstance1 = NULL;
CATBaseUnknown * pWheelInstance2 = NULL;

hr = <strong>pAxisRef-&gt;AddProduct</strong> ( <strong>pWheelRef</strong> , pWheelInstance1 , IID_CATIPLMProducts );
hr = <strong>pAxisRef-&gt;AddProduct</strong> ( <strong>pWheelRef</strong> , pWheelInstance2 , IID_CATIPLMProducts );
...</pre>
<p>So the aggregating Reference instantiates a Child Reference, provided as an input, 
beneath it. We have a choice to seek the child Instance as a pointer to any of the 
Interfaces that a Product Instance implements. In this case, we have asked for a
<em>CATIPLMProducts</em> pointer type.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>The CAAPstCreationStructureProductModel use case ends by saving the newly created 
Product model and finally closing the PLM session.</p>
<p>Since most of the batch use cases save the PLM data the &quot;Saving PLM Components&quot;[<a href="#References">6</a>] 
use case exclusively deals on this subject.</p>
<p>Also all batch use cases conclude by closing the PLM session, we have a dedicated 
article on this topic namely. &quot;Connecting to V6 Server>&quot; [<a href="#References">3</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The Use Case illustrates creation of a basic Product model. This involves a Root 
Product Reference having two instances of a Child Reference beneath it.</p>
<p>It then instantiates this Product Reference, aggregating it under another Product 
Reference.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPLMAllConcepts/CAAPLMTaAllEnvironment.htm">
		Understanding PLM Environment</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAAPlmPLMCompAttribute/CAAPLMTaAllKnowPLMAttributes.htm">
		Accessing PLM Attributes</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAMmrMecMod/CAAMmrUcCreateExplicitPart.htm')">
		Creating a 3D Shape as New Representation</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcSave.htm">
		Saving PLM Components</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Apr 2006]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Dec 2010]</td>
		<td>Document upgraded to use the new API of creation</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
