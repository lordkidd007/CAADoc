<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Selecting Folders Using an Immersive Window Add-In</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1>Selecting Folders Using an Immersive Window Add-In</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article illustrates selection of a Root folder and its sub folders 
		using an Acquisition agent, a selection agent associated with immersive 
		windows (Folder editor, VPM Navigator, Search window).</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFldUIFolderWorkbenchAddin Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAFldUIFolderWorkbenchAddin Do</a></li>
				<li><a href="#How">How to Launch CAAFldUIFolderWorkbenchAddin</a></li>
				<li><a href="#Where">Where to Find the CAAFldUIFolderWorkbenchAddin 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case mainly teaches us the selection of the Root/Sub folder in addition 
to this we mainly we learn following things</p>
<ul>
	<li>This use case mainly demonstrates Use of acquisition agent and setting filter 
	to it.</li>
	<li>For Root-folder and sub-folder single acquisition agent is used with PLMCoreReference 
	as filter criteria.</li>
	<li>In Folder there is no concept of Folder instance.</li>
	<li>Finally we learn the retrieval of Folder object from acquisition agent through 
	identificator.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFldUIFolderWorkbenchAddin Use Case</h2>
<p><code>CAAFldUIFolderWorkbenchAddin</code> is a use case of the <code>CAAFolderInterfacesUI.edu</code> 
framework that illustrates <code>PLMFolderViewerInterfaces</code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFldUIFolderWorkbenchAddin Do</h3>
<p>The goal of <em>CAAFldUIFolderWorkbenchAddin</em> is to demonstrate how to select 
and retrieve Folders/Sub Folders. It consists of the following parts:</p>
<ul>
	<li>The use case mainly uses the acquisition agent which is used for retrieving 
	selected object from Immersive windows.</li>
	<li>The acquisition agent is updated with filter criteria, in this case
	<strong>PLMCoreReference</strong>.</li>
	<li>The filter criteria allows not only selecting a Root folder but also a sub 
	folder beneath it, since for an interactive user not only the root folder but 
	even the folders which exist under it, are folder references (Though note, from 
	the architecture point of view, the entities aggregated by a Root folder, are 
	folder instances). In other words, what this implies is that on selecting the 
	sub folder, the acquisition agent will actually contain the identificator of 
	the reference associated with the selected folder instance.</li>
</ul>
<p>
<img src="images/CAAFldUIFolderWorkbenchAddin_Global.png" alt="Folder Workshop Add-in"/></p>
<p>A new toolbar appears on top of the CATIA frame and contains a single command 
represented by the
<img src="images/CAAFldUIFolderWorkbenchAddin_I.png" alt="Folder Workshop Add-in Icon" height="24" width="24"/> 
icon.</p>
<p>Then launch the command &quot;Folder Selection&quot; and select the desired Root/Sub folder 
object.</p>
<p>Finally use case shows the selected object type RootFolder/SubFolder in message 
box.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFldUIFolderWorkbenchAddin</h3>
<p>To launch CAAFldUIFolderWorkbenchAddin:</p>
<ol>
	<li>Launch CATIA Application.</li>
	<li>Open or create Folder structure.</li>
	<li>Once launched, confirm the toolbar named &quot;CAA Folder Workshop Add-in Toolbar&quot; 
	is in &#8220;SHOW&#8221; mode. Else, switch it from HIDE mode to SHOW mode.
	<p>
	<img src="images/CAAFldUIFolderWorkbenchAddin_Toolbar.png" alt="Folder Workshop Add-in Toolbar"/></p>
	</li>
	<li>Click on the command
	<img src="images/CAAFldUIFolderWorkbenchAddin_I.png" alt="Folder Workshop Add-in Icon" height="24" width="24"/> 
	&quot;Folder Selection&quot;.</li>
	<li>Then Select the Root /Sub folder.</li>
	<li>The dialog Box will appear, that will shows selected Object type (Root /Sub 
	folder).</li>
</ol>
<p><strong><a name="Addin"></a>Addin Access</strong></p>
<p>Before launching CATIA, Remove the #CAA# characters in the <code>CAAFolderInterfacesUI.edu.dico</code> 
in front of the following line:</p>
<pre class="code">...
#CAA# CAAFldUIFolderWorkbenchAddinExt    PLMIFolderWorkbenchAddin      libCAAFldUIFolderWorkbenchAddin
#CAA# CAAFldUIFolderWorkbenchAddinExt    CATIWorkbenchAddin            libCAAFldUIFolderWorkbenchAddin
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the AAFldUIFolderWorkshopAddin Code</h3>
<p>The CAAFldUIFolderWorkbenchAddin use case is made of a single file located in 
the CAAFldUIFolderWorkbenchAddin.m module of the CAAFolderInterfacesUI.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAFolderInterfacesUI.edu\CAAFldUIFolderWorkbenchAddin.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are three steps in CAAFldUIFolderWorkbenchAddin:</p>
<ol>
	<li><a href="#Step1">Acquisition Agent Initialization</a></li>
	<li><a href="#Step2">Retrieving Identificator of Selected Element</a></li>
	<li><a href="#Step3">Retrieving Folder Object</a></li>
</ol>
<p>We will now detail each of those sections:
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
</p>
<h3><a name="Step1"></a>Acquisition Agent Initialization</h3>
<p>Here is an extract of the state command, the <em>CAAFldUIFolderWorkbenchAddinCmd</em> 
class. It is a description of the acquisition agent to manage selection of a PLM 
entity in Navigation window enabling to select a PLM Reference (In Folder Context).</p>
<pre class="code">...
  _pObjectAgentRootRef = new <strong>CATPLMNavPropertiesAcquisition</strong>(&quot;ObjectAgentRootRef&quot;);
  <strong>CATIType_var</strong> spCATITypeOnType ;
  CATString typeName = &quot;<strong>PLMCoreReference&quot;</strong>;
  CATCkePLMNavPublicServices::<strong>RetrieveKnowledgeType</strong>(typeName.CastToCharPtr(), spCATITypeOnType); 
  _pObjectAgentRootRef-&gt;<strong>SetPLMIdentificationFilterFromType</strong>(spCATITypeOnType);
  _pObjectAgentRootRef-&gt;<strong>SetBehavior</strong>(CATDlgEngWithPrevaluation|CATDlgEngWithCSO);
...</pre>
<p>Here the acquisition agent, <code>_pObjectAgentRootRef</code>, is a <em>CATPLMNavPropertiesAcquisition</em> 
class instance enabling to select object in the specification tree. The <code>CATPLMNavPropertiesAcquisition::SetPLMIdentificationFilterFromType</code> 
method enables you to define the type of object to select.</p>
<p>In this case, only the objects of the type specialized by the current Customization 
for a PLMCoreReference inside the Folder Modeler can be selected. Otherwise the 
mouse&#39;s cursor indicates that the selection is forbidden.</p>
<p>It is significant to note here that the filter for a PLMCoreReference type allows 
selecting a sub folder as well, with the root folder. This is owing to the fact 
that the concept of a folder instance is non-existent. Hence Sub folders are essentially 
Folder References.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving Identificator of Selected Element</h3>
<p>Once a Root /Sub Folder is selected, you must retrieve it, and retrieve its reference.</p>
<pre class="code">...
   CATPLMNavPropertiesAcquisition    *pAgentOfSelection = NULL ;
   if ( _pObjectAgentRootRef-&gt;GetValuationState( ) == CATAcquisitionAgent::Valuated ) 
   {
      pAgentOfSelection = _pObjectAgentRootRef;
   }
   ...
   int NbSelElem = pAgentOfSelection-&gt;GetSelectionCount();
   for ( int i=1 ; i&lt;=NbSelElem ; i++)
   {
      ...	  
      CATPathIdentificators PathIdent;
      HRESULT rc = pAgentOfSelection-&gt;<strong>GetPLMIdentification</strong>(i, PathIdent);
      ...	
      int SizePath = PathIdent.Size();
      ...
      CATIAdpPLMIdentificator * pAdpId = PathIdent[<strong>SizePath</strong>];
...</pre>
<p>Here it is an extract of the callback method when an object is selected. The 
acquisition agent, <code>_pObjectAgentRootRef</code>, the State Command class member, 
instantiated and initialized in the previous section. The <code>CATPLMNavPropertiesAcquisition::GetPLMIdentification</code> 
method retrieves the selected object, in fact the path from the root to the selected 
object.</p>
<p>We wish to reemphasize here , the point we put forth in the previous section. 
On selecting a sub folder, though purely from the underlying architecture point 
of view, the selection is that of a folder instance, what is actually retrieved 
from an acquisition agent is the Identificator of the folder reference associated 
with the selected instance.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Retrieving Folder Object</h3>
<p>Now, retrieving Folder reference object from Identificator.</p>
<pre class="code">...
     PLMIFolder * pFolder = NULL ;
     rc = <strong>PLMFolderServices</strong>::<strong>GetFolder</strong>(pAdpId,pFolder);
     ...
     CATBoolean isRoot = pFolder-&gt;<strong>IsRootFolder</strong>();
...</pre>
<p>You use the <code>PLMFolderServices::GetFolder</code> method to retrieve Folder 
Object (<code>pFolder</code>).</p>
<p>Further we check the Retrieved folder is Root folder using <code>PLMIFolder::IsRootFolder</code>, 
if returned CATBoolean Object is TRUE then the object is Root.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case mainly shows the selection of Folder:</p>
<ul>
	<li>This use case mainly demonstrates how to set filter to acquisition agent
	<em>CATPLMNavPropertiesAcquisition</em>.</li>
	<li>The filter criteria allows not only selecting a Root folder but also a sub 
	folder beneath it, since for an interactive user not only the root folder but 
	even the folders which exist under it, are folder references (Though note, from 
	the architecture point of view, the entities aggregated by a Root folder, are 
	folder instances). In other words, what this implies is that on selecting the 
	sub folder, the acquisition agent will actually contain the identificator of 
	the reference associated with the selected folder instance.</li>
	<li>Further use case demonstrates retrieval of Folder object and check its type 
	using <code>PLMFolderServices::GetFolder</code>.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAFldUcUIFolderWorkbenchAddin.htm">Creating an Add-in in the 
		Folder Workbench</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Feb 2009]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
