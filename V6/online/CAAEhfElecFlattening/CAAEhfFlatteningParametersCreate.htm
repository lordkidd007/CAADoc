<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating the Flattening Parameters</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating the Flattening Parameters</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the ElecFlatteningItf use case. This use case 
		explains how to create the flattening parameters</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAEhfFlatteningParametersCreate Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAEhfFlatteningParametersCreate 
				Do</a></li>
				<li><a href="#How">How to Launch CAAEhfFlatteningParametersCreate</a></li>
				<li><a href="#Where">Where to Find the CAAEhfFlatteningParametersCreate 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA EHF Interfaces. Its main intent is to allow you to create the flattening parameters.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAEhfFlatteningParametersCreate Use Case</h2>
<p>CAAEhfFlatteningParametersCreate.m is a use case of the CAAElecFlatteningItf.edu 
framework that illustrates the CATIA EHF Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAEhfFlatteningParametersCreate Do</h3>
<p>The goal of CAAEhfFlatteningParametersCreate use case is to show how to create 
the flattening parameters.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAEhfFlatteningParametersCreate</h3>
<p>To launch CAAEhfFlatteningParametersCreate, you will need to set up the build 
time environment, then compile CAAEhfFlatteningParametersCreate along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mktun -c &quot;CAAEhfFlatteningParametersCreate Repository Server User Password SecutityCtx Environment PLM_ExternalID&quot;</em></pre>
<p>where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <i>Host::port_number/RootURI</i></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The value of the <code>PLM_ExternalID</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
</table>

<p>* No input model is required since this use case itself creates refrence product</p>

<ul>
  <li><a><code><b>PLM_ExternalID</b></code></a>:
    <code>3DExtract (or Any User Defined)</code></li>
  <li><a><code><b>Version</b></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAEhfFlatteningParametersCreate Code</h3>
<p>The CAAEhfFlatteningParametersCreate sample is made of a single class named CAAEhfFlatteningParametersCreate 
located in the CAAEhfFlatteningParametersCreate.m module of the CAAElecFlatteningItf.edu 
framework: <code>InstallRootFolder\CAADoc\CAAElecFlatteningItf.edu\CAAEhfFlatteningParametersCreate.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create a batch session and connects to a repository.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATPsiPLMFactory</em></td>
		<td>Class to retrieve the Product Reference or Representation Reference 
		factory.</td>
	</tr>
	<tr>
		<td><em>CATIEhfEnvironment</em></td>
		<td>Interfaces dedicated to retrieve the flattening parameter</td>
	</tr>
	<tr>
		<td><em>CATIEhfFlatteningParameters</em></td>
		<td>Interfaces dedicated to read attribute on flattening parameter</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the Electrical environment and it&#8217;s components creation 
by looking at the code of the Main. There are 10 logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Setting the Connection Parameters</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Setting the Current Environment to &quot;envToUse&quot; 
		from Input</a> </td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Creating a Product Reference</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Creating the Flattening Parameters</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Setting Algorithm Mode</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Getting Algorithm Mode</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Testing for CreateFlatteningParameters Second Set</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (8 != argc)
{
  cout &lt;&lt; endl;
  cout &lt;&lt;&quot;CAAEhfFlattenManagerExtract &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Environment&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
  cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
  cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Environment: A PLM environment containing PLMProductDS (a PRODUCT's custo).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
  cout &lt;&lt; endl;
  retCode = 1;
  goto EscapeWay;
}
envToUse = argv[6];
repository = argv[1];
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>We need to set parameters for the connection to the database.</p>
<pre class="code">...
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Repository&quot;, argv[1]);
if (FAILED(hr)) 
{ 
  retCode = 2;
  goto EscapeWay;
}
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Server&quot;, argv[2]);
if (FAILED(hr)) 
{ 
  retCode = 3;
  goto EscapeWay;
}
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserID&quot;, argv[3]);
if (FAILED(hr))
{ 
  retCode = 4;
  goto EscapeWay;
}
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserPasswd&quot;, argv[4]);
if (FAILED(hr))
{
  retCode = 5;
  goto EscapeWay;
}
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;SecurityCtx&quot;, argv[5]);
if (FAILED(hr))
{
  retCode = 6;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>We create a session.</p>
<pre class="code">...
hr = CATPLMSessionServices::InitPLMSession();
if (FAILED(hr))
{
  retCode = 7;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Current Environment to &quot;envToUse&quot; from 
Input</h3>
<pre class="code">...
hr = PLMPSISessionHelpers::GetSessionHelpers(pSessionHelpers);
if (SUCCEEDED(hr) &amp;&amp; (NULL!= pSessionHelpers))
{
  hr = pSessionHelpers-&gt; SetCurrentEnvironment(envToUse);
  if(FAILED(hr))
  {
    retCode = 8;
    goto EscapeWay;
  }
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Creating a Product Reference</h3>
<p>We create a product reference by using CATPsiPLMFactory interface.</p>
<pre class="code">...
hr = CATPsiPLMFactory::CreateFactoryObject(IID_CATIPrdFactory,(void**) &amp;pIPrdFactory);
if (FAILED(hr) || ( NULL == pIPrdFactory) )
{
  retCode = 9;
  goto EscapeWay;
}

hr = pIPrdFactory -&gt; CreateProductReference (pIRootProduct);
if (FAILED(hr) || ( NULL == pIRootProduct) )
{
  retCode = 10;
  goto EscapeWay;
}

hr = pIRootProduct-&gt; QueryInterface(IID_CATIEhfEnvironment,(void**)&amp;pIEhfEnvironment);
if ( FAILED(hr) )
{
  retCode = 11;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Creating the Flattening Parameters</h3>
<p>We need a CATIEhfEnvironment pointer on root product to create the Flattening 
parameters</p>
<pre class="code">...
hr = pIEhfEnvironment-&gt; CreateFlatteningParameters(pIEhfCreateFlattenPara);
if( ( FAILED(hr) ) || ( NULL == pIEhfCreateFlattenPara ) )
{
  retCode = 12;
  goto EscapeWay;
}

hr = pIEhfEnvironment-&gt; GetFlatteningParameters(&amp;phListFlatteningPara);
if ( ( FAILED(hr) ) || ( NULL == phListFlatteningPara ) )
{
  retCode = 13;
  goto EscapeWay;
}

nbFlatteningPara = phListFlatteningPara-&gt;Size();
if (0 &gt;= nbFlatteningPara)
{
  retCode = 14;
  goto EscapeWay;
}

hUnkFlatteningPara = (*phListFlatteningPara)[1];
if (NULL_var == hUnkFlatteningPara)
{
  retCode = 15;
  goto EscapeWay;
}

hr = hUnkFlatteningPara-&gt;QueryInterface(IID_CATIEhfFlatteningParameters, (void **)&amp;pIFlatteningPara);
if ( FAILED(hr) )
{
  retCode = 16;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Setting Algorithm Mode</h3>
<pre class="code">...
setpAlgoMode = new CATString();
(*setpAlgoMode) = (&quot;Coarse&quot;);

hr = pIFlatteningPara-&gt;SetAlgorithmMode(setpAlgoMode);
if ( ( FAILED(hr) ) || ( NULL == setpAlgoMode ) )
{
  retCode = 17;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Getting Algorithm Mode</h3>
<pre class="code"> ...
hr = pIFlatteningPara-&gt;GetAlgorithmMode(getAlgoMode);
compareAlgo = getAlgoMode.Compare(&quot;Coarse&quot;); 
if ( ( FAILED(hr) ) || ( 0 != compareAlgo ) )
{
  retCode = 18;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Testing for CreateFlatteningParameters Second Set</h3>
<pre class="code">...
if (NULL != pIEhfCreateFlattenPara)
{
  pIEhfCreateFlattenPara-&gt; Release();
  pIEhfCreateFlattenPara = NULL;
}

hr = pIEhfEnvironment-&gt; CreateFlatteningParameters(pIEhfCreateFlattenPara);
if ( ( SUCCEEDED(hr) ) || ( NULL != pIEhfCreateFlattenPara ) )
{
  retCode = 19;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Disconnecting and Deleting the Session</h3>
<p>We delete the session and disconnect from the database</p>
<pre class="code">...
hr = CATPLMSessionServices::ClosePLMSession();
if (FAILED(hr)) 
{
  cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
  retCode = 20;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create the Flattening parameters.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Feb 2008]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
