<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Retrieving Network Nodes and Arcs</title>
</head>
 
<body onload="highlightSearchTerms();">
 
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving Network Nodes and Arcs</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the ElecFlatteningItf use case. This use case 
		explains how to retrieve Network Nodes and Arc.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAEhfNetworkNodeAndArc Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAEhfNetworkNodeAndArc Do</a></li>
				<li><a href="#How">How to Launch CAAEhfNetworkNodeAndArc</a></li>
				<li><a href="#Where">Where to find the CAAEhfNetworkNodeAndArc 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA EHF Interfaces. Its main intent is to allow you to retreive the network nodes from the arc as well as the arc from the nodes using 
&quot;CATIEhfNetworkNode&quot; and &quot;CATIEhfNetworkArc&quot; interfaces.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAEhfNetworkNodeAndArc Use Case</h2>
<p>CAAEhfNetworkNodeAndArc.m is a use case of the CAAElecFlatteningItf.edu framework 
that illustrates the CATIA EHF Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAEhfNetworkNodeAndArc Do</h3>
<p>The goal of CAAEhfNetworkNodeAndArc use case is to show how to retrieve 
the network nodes from the arc and the arc from the nodes.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAEhfNetworkNodeAndArc</h3>
<p>To launch CAAEhfNetworkNodeAndArc , you will need to set up the build time 
environment, then compile CAAEhfNetworkNodeAndArc along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAAEhfNetworkNodeAndArc Repository Server User Password SecutityCtx Environment PLM_ExternalID&quot;</em></pre>
<p>where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The value of the <code>PLM_ExternalID</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
</table>
 
<p>* The input model is retrieved by importing the <strong>CAAEhfNetworkNodeAndArc.3dxml</strong>
    file from the <strong>CAAElecFlatteningItf.edu</strong> fwk.</p>
<p><code>InstallRootFolder\CAADoc\CAAElecFlatteningItf.edu\InputData\CAAEhfNetworkNodeAndArc.3dxml</code></p>
 
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
 
<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>
<ul>
  <li><a><code><strong>PLM_ExternalID</strong></code></a>:
    <code>GeometricHarness</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>
<p><img alt="3dxml Product to Import" src="images/CAAEhfNetworkNodeAndArc.jpg"/></p>
<p><strong>Note</strong>: In this data we will retrieve the Arc from the segment and from that Arc we will retrieve the Network nodes </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAEhfNetworkNodeAndArc Code</h3>
<p>The CAAEhfNetworkNodeAndArc sample is made of a single class named CAAEhfNetworkNodeAndArc 
located in the CAAEhfNetworkNodeAndArc.m module of the CAAElecFlatteningItf.edu 
framework: <code>InstallRootFolder\CAADoc\CAAElecFlatteningItf.edu\CAAEhfNetworkNodeAndArc.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATIEhiHarnessBundle</em></td>
		<td>Interface to manage Harness Bundle.</td>
	</tr>
	<tr>
		<td><em>CATIEhiBranch</em></td>
		<td>Interface to manage Branch.</td>
	</tr>
	<tr>
		<td><em>CATIEhiSegment</em></td>
		<td>Interface to manage Segment.</td>
	</tr>
	<tr>
		<td><em>CATIEhfNetworkArc</em></td>
		<td>Interface to get nodes of an electrical arc.</td>
	</tr>
	<tr>
		<td><em>CATIEhfNetworkNode</em></td>
		<td>Interface to manage connector points of an electrical device</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the Electrical environment and it&#8217;s components creation 
by looking at the code of the Main. There are 19 logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Setting the Connection Parameters</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Setting the Current Environment to &quot;envToUse&quot; 
		from Input</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Retrieving the Environment</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Retrieving the Customized Reference of the Product 
		Modeler</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Opening the &quot;GeometricHarness&quot; Model (arg[7])</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Expanding the Product</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Retrieving, Opening and Expanding the &quot;HarnessBundle&quot; Model</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Switching the Data in Design Mode</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step11">Querying for CATIEhiHarnessBundle</a></td>
	</tr>
	<tr>
		<td>12</td>
		<td><a href="#Step12">Listing the Branches in Opened Harness Bundle</a></td>
	</tr>
	<tr>
		<td>13</td>
		<td><a href="#Step13">Querying for CATIEhiBranch and Retrieving List of Segments in the Branch</a></td>
	</tr>
	<tr>
		<td>14</td>
		<td><a href="#Step14">Querying for CATIEhiSegment and CATIEhfNetworkArc on the Retrieved Segment</a></td>
	</tr>
	<tr>
		<td>15</td>
		<td><a href="#Step15">Listing the Network Nodes on the Retrieved Arc</a></td>
	</tr>
	<tr>
		<td>16</td>
		<td><a href="#Step16">Querying for CATIEhfNetworkNode on the Retrieved Network Node</a></td>
	</tr>
	<tr>
		<td>17</td>
		<td><a href="#Step17">Listing the Connected Nodes for the Current Node</a></td>
	</tr>
	<tr>
		<td>18</td>
		<td><a href="#Step18">Getting the Arc for the Current Node</a></td>
	</tr>
	<tr>
		<td>19</td>
		<td><a href="#Step19">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (8 != argc)
{
  cout &lt;&lt; endl;
  cout &lt;&lt;&quot;CAAEhfNetworkNodeAndArc &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Environment&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
  cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
  cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Environment: A PLM environment containing PLMProductDS (a PRODUCT's custo).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
  cout &lt;&lt; endl;
  retCode = 1;
  goto EscapeWay;
}
 
//------------------------------------------------------------------
// - For Setting Environment
//------------------------------------------------------------------ 
envToUse = argv[6];
 
//------------------------------------------------------------------
// - For Setting Repository
//------------------------------------------------------------------ 
repository = argv[1];
 
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>Connection Parameters initialization.</p>
<pre class="code">...
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Repository&quot;, argv[1]);
if (FAILED(hr))
{
  retCode = 2;
  goto EscapeWay;
}
 
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Server&quot;, argv[2]);
if (FAILED(hr))
{ 
  retCode = 3;
  goto EscapeWay;
}
 
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserID&quot;, argv[3]);
if (FAILED(hr))
{ 
  retCode = 4;
  goto EscapeWay;
}
 
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserPasswd&quot;, argv[4]);
if (FAILED(hr))
{
  retCode = 5;
  goto EscapeWay;
}
 
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;SecurityCtx&quot;, argv[5]);
if (FAILED(hr))
{
  retCode = 6;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
hr = CATPLMSessionServices::InitPLMSession();
if (FAILED(hr))
{
  retCode = 7;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Current Environment to &quot;envToUse&quot; from 
Input</h3>
<pre class="code">...
hr = PLMPSISessionHelpers::GetSessionHelpers(pSessionHelpers);
if (SUCCEEDED(hr) &amp;&amp; (NULL != pSessionHelpers))
{
  hr = pSessionHelpers-&gt; SetCurrentEnvironment(envToUse);
  if ( FAILED(hr) )
  {
    retCode = 8;
    goto EscapeWay;
  }
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving the Environment</h3>
<pre class="code">...
hr = CATAdpDictionaryServices::GetEnvironment(repository, envToUse, &amp;pIAdpEnvironment);
if ( FAILED(hr) || ( NULL == pIAdpEnvironment) )
{
  retCode = 9;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving the Customized Reference of the Product Modeler</h3>
<pre class="code">...
hr = pIAdpEnvironment-&gt; GetAuthoringType(modeler, coreTypeRef, IID_CATIAdpType,(void**) &amp;pIAdpPLMCoreRef);
if (FAILED(hr) || ( NULL == pIAdpPLMCoreRef) )
{
  retCode = 10;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the &quot;GeometricHarness&quot; Model (arg[7])</h3>
<pre class="code">...
identificationSetRootPrd.AddAttribute("PLM_ExternalID", argv[7]);
hr = CATAdpQueryServices::GetElementsFromAttributes(pIAdpPLMCoreRef,identificationSetRootPrd,listP_QueryResults) ;
if(1 &lt;= listP_QueryResults.Size())
{
  pQueryResult = listP_QueryResults[1] ;
  if(NULL != pQueryResult)
  {
    hr = pQueryResult-&gt;GetIdentifier(pIPLMIdent) ;
  }
}
if ( (FAILED(hr)) || (NULL == pIPLMIdent) )
{
  retCode = 11;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Expanding the Product</h3>
<pre class="code">...
hr = CATAdpOpenSaveServices::ExpandAndOpen(pIPLMIdent, IID_CATIPLMProducts, (void**) &amp;pIPLMProduct3DH,CATAdpOpenSaveServices::Authoring);
if ( (FAILED(hr)) || (NULL == pIPLMProduct3DH) )
{
  retCode = 12;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Retrieving, Opening and Expanding the &quot;HarnessBundle&quot; Model </h3>
<pre class="code">...
hr = pIAdpEnvironment-&gt; GetAuthoringType(modeler, coreTypeRef, IID_CATIAdpType, (void**) &amp;pIAdpPLMCoreRep);
if (FAILED(hr) || ( NULL == pIAdpPLMCoreRep) )
{
  retCode = 13;
  goto EscapeWay;
}

strMBNSName = "HarnessBundle" ; // "HarnessBundle" is the name of the Harness bundle present in the data.
identificationSetMBNSRInstName.AddAttribute(attrId, strMBNSName);

hr = CATAdpQueryServices::GetElementsFromAttributes(pIAdpPLMCoreRep,identificationSetMBNSRInstName,listP_QueryResults) ;
if(1 &lt;= listP_QueryResults.Size())
{
  pQueryResult = listP_QueryResults[1] ;
  if(NULL != pQueryResult)
  {
    hr = pQueryResult-&gt;GetIdentifier(pIPLMIdentInst) ;
  }
}
if ( (FAILED(hr)) || (NULL == pIPLMIdentInst) )
{
  retCode = 14;
  goto EscapeWay;
}

hr = CATAdpOpenSaveServices::ExpandAndOpen(pIPLMIdentInst, IID_CATBaseUnknown, (void**) &amp;pIUnkProductInst,CATAdpOpenSaveServices::Authoring);
if ( (FAILED(hr)) || (NULL == pIUnkProductInst) )
{
  retCode = 15;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Switching the Data in Design Mode</h3>
<pre class="code">...
hr = SwitchToDesignMode(pIUnkProductInst);
if(FAILED(hr))
{
  retCode = 15;
  goto EscapeWay;
}
...</pre>
<p>The body for <strong>SwitchToDesignMode() </strong> is as follows:</p>
<pre class="code">
//-----------------------------------------------------------------------------------------
// - Here SwitchToDesignMode() is a local method written to switch the data in design mode.
// - The following code is the implementation of this method 
//------------------------------------------------------------------------------------------
HRESULT SwitchToDesignMode(CATBaseUnknown *&amp;ipIUnkPRDInst)
{
  if(NULL == ipIUnkPRDInst)
    return E_INVALIDARG;

  HRESULT HR = S_OK;
  CATIPrdObject_var                       hPRDInst;
  CATIPrdObject_var                       hPRDRef;
  CATIPLMRepInstances_var                 hPRDRefAsCollecOfRepInstances;
  CATIPrdObject_var                       hPrdREPInst;  
  CATIPrdIterator                         *pRepIterator                         = NULL; //To be Released

  hPRDInst = ipIUnkPRDInst;
  if(NULL_var != hPRDInst)
  {
    // Get the reference product from the input argument
    if(CATTrue == hPRDInst-&gt;IsReference())
    {
      hPRDRef = hPRDInst;
    }
    else
    {
      CATBaseUnknown *pUnkRefObj = NULL;
      if((SUCCEEDED(hPRDInst-&gt;GetReferenceObject(pUnkRefObj))) &amp;&amp; (NULL != pUnkRefObj))
      {
        hPRDRef = pUnkRefObj;
      }
      if(NULL != pUnkRefObj)
      {
        pUnkRefObj-&gt;Release();
        pUnkRefObj = NULL;
      }      
    }

    hPRDRefAsCollecOfRepInstances = hPRDRef; 
    if(NULL_var != hPRDRefAsCollecOfRepInstances)
    {
      int nb_rep = 0; 
      if((SUCCEEDED(hPRDRefAsCollecOfRepInstances-&gt;Count(nb_rep))) &amp;&amp; (1 == nb_rep))
      {
        if(SUCCEEDED(hPRDRefAsCollecOfRepInstances-&gt;Iterator(pRepIterator)) ) 
        {
          CATBaseUnknown * pRepElement = NULL; 
          HR = pRepIterator-&gt;Next(pRepElement);
          if ( SUCCEEDED(HR) &amp;&amp; pRepElement )
          {
            hPrdREPInst = pRepElement; 
            if(NULL_var != hPrdREPInst)
            {
              CATBaseUnknown * pRepReference = NULL;
              HR = hPrdREPInst-&gt;GetReferenceObject(pRepReference,IID_CATIPsiRepRefApplicativeDataAccess);
              if(NULL != pRepReference)
              {
                CATIPsiRepresentationLoadMode *piRepLoadMode = NULL;
                if(SUCCEEDED(pRepReference-&gt;QueryInterface( IID_CATIPsiRepresentationLoadMode, (void **) &amp; piRepLoadMode ) ) )
                { // Switch the data in Edit mode.
                  HR = piRepLoadMode-&gt;ChangeLoadingMode( CATIPsiRepresentationLoadMode::EditMode );
                }

                if(NULL != piRepLoadMode)
                {
                  piRepLoadMode-&gt;Release();
                  piRepLoadMode = NULL;
                }
              }
              if(NULL != pRepReference)
              {
                pRepReference-&gt;Release();
                pRepReference = NULL;
              }
            }
          }
        }
      }
    }
  }

  if(NULL != pRepIterator)
  {
    pRepIterator-&gt;Release();
    pRepIterator = NULL;
  }

  return HR;
}
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Querying for CATIEhiHarnessBundle</h3>
<pre class="code">...
hr = pIUnkProductInst-&gt;QueryInterface(IID_CATIEhiHarnessBundle,(void**)&amp;pIEhiHarnessBundle);
if ( FAILED(hr) )
{
  retCode = 16;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Listing the Branches in Opened Harness Bundle</h3>
<pre class="code">...
hr = pIEhiHarnessBundle-&gt;ListBranches(&amp;pListBranches);

int numberOfBranches = pListBranches-&gt;Size();
if (( FAILED(hr) ) || ( NULL == pListBranches ) || (0 &gt;= numberOfBranches))
{
  retCode = 17;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Querying for CATIEhiBranch and Retrieving List of Segments in the Branch</h3>
<pre class="code">...
//-----------------------------------------------------------------------
// - Get CATIEhiBranch Interface on the obtained list of Branches
//-----------------------------------------------------------------------
int indexBranch = 0;
for(indexBranch = 1 ; indexBranch  &lt;= numberOfBranches; indexBranch++)
{
  hUnkBranch = (*pListBranches)[indexBranch];
  if(NULL_var == hUnkBranch)
  {
    retCode = 18;
    goto EscapeWay;
  }
  hr = hUnkBranch-&gt;QueryInterface(IID_CATIEhiBranch,(void **)&amp;pEhiBranch1);
  if((FAILED(hr)) || (NULL == pEhiBranch1))
  {
    retCode = 19;
    goto EscapeWay;
  }

  //-----------------------------------------------------------------------
  // - Get all the Segments on the Branch
  //-----------------------------------------------------------------------
  hr = pEhiBranch1-&gt;ListSegments(&amp;pListSegmentsOnBranch);
  int numberOfSegments = pListSegmentsOnBranch-&gt;Size();

  if ( ( FAILED(hr) ) || ( NULL == pListSegmentsOnBranch ) || (0 &gt;= numberOfSegments))
  {
    retCode = 20;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Querying for CATIEhiSegment and CATIEhfNetworkArc on the 
Retrieved Segment</h3>
<pre class="code">...
for(indexSegment = 1 ; indexSegment &lt;= numberOfSegments; indexSegment++)
{
  hUnkSegmentTemp = (*pListSegmentsOnBranch)[indexSegment];

  CATIEhiSegment *piEhiSegment = NULL;
  hr = hUnkSegmentTemp-&gt;QueryInterface (IID_CATIEhiSegment, (void ** ) &amp;piEhiSegment);
  if((FAILED(hr)) || (NULL == piEhiSegment))
  {
    retCode = 21;
    goto EscapeWay;
  }

  //-----------------------------------------------------------------------
  // - Process the Segment
  //-----------------------------------------------------------------------
  if (SUCCEEDED (hr) &amp;&amp; NULL != piEhiSegment)
  {
    //-----------------------------------------------------------------------
    // - Get the CATIEhfNetworkArc from the Segment
    //-----------------------------------------------------------------------
    CATIEhfNetworkArc *pArc = NULL;
    hr = piEhiSegment-&gt;QueryInterface (IID_CATIEhfNetworkArc, (void ** ) &amp;pArc);
    if (SUCCEEDED (hr) &amp;&amp; NULL != pArc) 
    {
     ...
    }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Listing the Network Nodes on the Retrieved Arc</h3>
<pre class="code">...
hr = pArc-&gt;ListNetworkNodes (&amp;pListNetworkNodes);

if (SUCCEEDED (hr) &amp;&amp; NULL != pListNetworkNodes)
{
  ...
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Querying for CATIEhfNetworkNode on the Retrieved Network 
Node</h3>
<pre class="code">...
hr = spNode-&gt;QueryInterface (IID_CATIEhfNetworkNode, (void ** ) &amp;pNetworkNode);
if (SUCCEEDED (hr) &amp;&amp; NULL != pNetworkNode) 
{
  ...
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step17"></a>Listing the Connected Nodes for the Current Node</h3>
<pre class="code">...
hr = pNetworkNode-&gt;ListConnectedNodes (&amp;pListNodes);

if (NULL == pListNodes) 
{ 
  cout &lt;&lt; "  No ConnectedNodes for NetworkNode\n"; 
  ...
}
else
{
  cout &lt;&lt; "  ConnectedNodes are successful retrieved\n";
  ...
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step18"></a>Getting the Arc for the Current Node</h3>
<pre class="code">...
CATIEhfNetworkArc * pINetworkArc = NULL;
hr = pNetworkNode-&gt;GetNetworkArc( &amp;pINetworkArc);
if(SUCCEEDED (hr) &amp;&amp; NULL != pINetworkArc) 
{
  CATBaseUnknown_var hArc = pArc;
  CATBaseUnknown_var hNetworkArc = pINetworkArc;
  if( (NULL_var!=hArc) &amp;&amp; (NULL_var!=hNetworkArc) &amp;&amp; (hArc == hNetworkArc) )
  {
    cout &lt;&lt; "  Network Arc is verified corerctly by comparing Network Arc from Segment processed and Network Arc from GetNetworkArc \n";
  }
  ...
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step19"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
hr = CATPLMSessionServices::ClosePLMSession();
if (FAILED(hr)) 
{
  cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
  retCode = 22;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to retrieve the network Nodes and Arcs using 
&quot;CATIEhfNetworkNode&quot; and &quot;CATIEhfNetworkArc&quot; interfaces.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>
 
</body>
 
</html>

