<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating Customized Electrical Dimension</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Customized Electrical Dimension</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the ElecFlatteningItf use case. This use case 
		explains how to create customized electrical dimension by overall dimension command.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAEhfUIPElecDimension Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAEhfUIPElecDimension Do</a></li>
				<li><a href="#Where">Where to Find the CAAEhfUIPElecDimension Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA EHF Interfaces. Its main intent is to allow you to create customized electrical
    dimension by overall dimension command.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAEhfUIPElecDimension Use Case</h2>
<p>CAAEhfUIPElecDimension.m is a use case of the CAAElecFlatteningItf.edu framework 
that illustrates how to create customized electrical dimension.</p>
    <p>Note: Currently code is commented. Kindly uncomment all the commented code in the
        sample to make it work.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAEhfUIPElecDimension Do?</h3>
<p>The goal of CAAEhfUIPElecDimension use case is to show how to to create customized
    electrical dimension by using public interfaces of ElecFlatteningItf framework.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAEhfUIPElecDimension Code</h3>
<p>The CAAEhfUIPElecDimension sample is made of a single class named CAAEhfUIPElecDimension
located in the CAAEhfUIPElecDimension.m module of the CAAElecFlatteningItf.edu 
framework: <code>InstallRootFolder\CAADoc\CAAElecFlatteningItf.edu\CAAEhfUIPElecDimension.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
    <p>
        This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td>
            <em>CATIEhfUIPElectricalDimManager</em></td>
		<td>Interface to create dimension based on input Electrical Dimension feature</td>
	</tr>
	<tr>
		<td><em>CATIEhfElectricalDim</em></td>
		<td>Interface to manage the Electrical Dimension object.</td>
	</tr>
	<tr>
		<td><em>CATBaseUnknown</em></td>
		<td>Base class for creating interfaces and for implementing interfaces.</td>
	</tr>
	<tr>
		<td><em>CATPathElement</em></td>
		<td>Class representing a path of objects.</td>
	</tr>
	<tr>
		<td><em>CATSO</em></td>
		<td>A set of objects.</td>
	</tr>
	<tr>
		<td><em>CATTPSInstantiateUseComponent</em></td>
		<td>Creates a TPS component from its identificator defined as a value of enum CATTPSComponent.</td>
	</tr>
	<tr>
		<td><em>CATTPSComponent</em></td>
		<td>Enum that identify components that are provided for TPS manipulation.</td>
	</tr>
	<tr>
		<td><em>CATITPSFactoryAdvanced</em></td>
		<td>High level annotation factory interfaces.</td>
	</tr>
	<tr>
		<td><em>CATUnicodeString</em></td>
		<td>Class to use for NLS character strings.</td>
	</tr>
	<tr>
		<td><em>CATMathPlane</em></td>
		<td>Class representing a mathematical plane in 3D.</td>
	</tr>
	<tr>
		<td><em>CATITPSText</em></td>
		<td>Interface for the TPS Text object.</td>
	</tr>
	<tr>
		<td><em>CATITPSDrawable</em></td>
		<td>Interface designed to manage the representation of the TPS in the 3D.</td>
	</tr>
	<tr>
		<td><em>CATIDftAnnotation</em></td>
		<td>This interfaces handle position, orientation and associativity of Annotation object.</td>
	</tr>
	<tr>
		<td><em>CATIDrwSubString</em></td>
		<td>Interface to manage a text sub-string.</td>
	</tr>				
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the Electrical environment and it&#8217;s components creation 
by looking at the code. There are seven logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Implementing CATIEhfUIPElectricalDimManager</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Entering into Dictionary File</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Retrieving First or Second End of Electrical Path from CATIEhfElectricalDim</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Creating Text on End of Electrical Path</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Setting Text Parallel to Screen</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Retrieving Drafting Annotation</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Creating Associative Link with Elec_length Attribute of Electrical Path</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Implementing CATIEhfUIPElectricalDimManager</h3>
<p>CreateCustomizedDimension() gets the call from Overall command algo if CATIEhfUIPElectricalDimManager interface is implemented.
So all code from Step 3 goes into CreateCustomizedDimension().</p>
<pre class="code">/*
 * This Interface CATIEhfUIPElectricalDimManager allows to create dimension based on input Electrical Dimension feature. This creation is triggered interactively by Overall Dimension command. 
 * Interface must be implemented on component CAAEhfElecDimension. 
 */

TIE_CATIEhfUIPElectricalDimManager( CAAEhfUIPElecDimension ); 
CATImplementClass( CAAEhfUIPElecDimension,  // Implementation class name
                   CodeExtension,           // Implementation style
                   CATBaseUnknown,          // Useless on extensions
                   CAAEhfElecDimension );   // Component extended by this class
                   
// ---------------------------------------------------------------------------
// Constructor
// ---------------------------------------------------------------------------
CAAEhfUIPElecDimension::CAAEhfUIPElecDimension()
{
}

// ---------------------------------------------------------------------------
// Destructor
// ---------------------------------------------------------------------------
CAAEhfUIPElecDimension::~CAAEhfUIPElecDimension()
{
}

// ---------------------------------------------------------------------------
// CAAEhfUIPElecDimension::CreateCustomizedDimension
// ---------------------------------------------------------------------------
HRESULT CAAEhfUIPElecDimension::CreateCustomizedDimension( CATIEhfElectricalDim * ipIElectricalDim) 
{
}                   
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Entering into Dictionary fFile</h3>
<p>Add below line in dictionary file of Implementation framework</p>
<pre class="code">...
CAAEhfElecDimension 	CATIEhfUIPElectricalDimManager 	libCAAEhfUIPElecDimension
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Retrieving First or Second End of Electrical Path from CATIEhfElectricalDim</h3>
<p>CATIEhfElectricalDim is input in CreateCustomizedDimension().</p>
<pre class="code">...
  hr = ipIElectricalDim-&gt;GetFirstEnd(pIUnkFirstEnd);
  if( (FAILED(hr)) || ( NULL == pIUnkFirstEnd ) )
  {   
    retVal = E_FAIL; 
    goto EscapeWay;
  }

  hr = ipIElectricalDim-&gt;GetSecondEnd(pIUnkSecondEnd);
  if (FAILED(hr))
  {   
    retVal = E_FAIL; 
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Creating Text on End of Electrical Path</h3>
<p>
    CATPathElement has be build for end geometry of Electrical Path on which text has
    to be created.</p>
<pre class="code">...
  CATSO                  * pSelection            = new CATSO();
  CATITPSFactoryAdvanced * piFactAdv             = NULL;
  CATUnicodeString         TextString(" ");
  CATMathPlane             Plane = CATMathOIJ;  
...  
  pSelection-&gt;Empty();
  pSelection-&gt;AddElement((CATBaseUnknown *)pPathElementFirstEnd);

  hr = CATTPSInstantiateUseComponent (DfTPS_ItfTPSFactoryAdvanced,(void**) &amp; piFactAdv);
  if ( ( SUCCEEDED(hr) ) &amp;&amp; ( NULL != piFactAdv ) ) 
  {
    hr = piFactAdv -&gt; CreateTextOnGeometry (pSelection, &amp;Plane,
                                            &amp;TextString , &amp;piText);
    if( (FAILED(hr)) || ( NULL == piText ) )
    {   
      retVal = E_FAIL;
      goto EscapeWay;
    }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Setting Text Parallel to Screen</h3>
<pre class="code">...
  hr = piText-&gt;SetParallelOnScreen(CATTrue);
  if (FAILED(hr))
  {
    retVal = E_FAIL; 
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving Drafting Annotation</h3>
<p>The Drafting Annotation of the TPS.</p>
<pre class="code">...
  hr = piText-&gt;QueryInterface(IID_CATITPSDrawable,(void **) &amp;piTPSDrawable);
  if (FAILED(hr))
  {   
    retVal = E_FAIL; 
    goto EscapeWay;
  }
  hr = piTPSDrawable-&gt;GetAnnotation(&amp;piAnnotation);
  if( ( FAILED(hr) ) || ( NULL == piAnnotation ) )
  {   
    retVal = E_FAIL; 
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Creating Associative Link with Elec_length Attribute of Electrical Path</h3>
<pre class="code">...
  hr = piAnnotation-&gt;QueryInterface(IID_CATIDrwSubString,(void **)&amp;piDrwSubString);
  if (FAILED(hr))
  {   
    retVal = E_FAIL; 
    goto EscapeWay;
  }

  hr = ipIElectricalDim-&gt;SetAndLinkLengthToText(piDrwSubString);
  if (FAILED(hr))
  {   
    retVal = E_FAIL; 
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create customized electrical text dimension by overall dimension command.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Mar 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
