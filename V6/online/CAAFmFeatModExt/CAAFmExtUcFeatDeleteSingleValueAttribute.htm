<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Deleting a Single Value Feature Attribute</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Deleting a Single Value Feature Attribute</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <code>CAAFmExtFeatDeleteSingleValueAttribute</code>use 
		case (UC). It illustrates the impact of destroying a feature when it is 
		either referenced or aggregated by another feature. It further also illustrates 
		the impact of unsetting an attribute value of a feature which either references 
		or aggregates another feature.</p>
		<p>An understanding of feature attributes of type specobject and component 
		[<a href="#References">1</a>], to either reference or aggregate other features 
		is a prerequisite to fully understand the current UC. </p>
		<p></p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmExtFeatDeleteSingleValueAttribute Use 
			Case</a>
			<ul>
				<li><a href="#What">What Does CAAFmExtFeatDeleteSingleValueAttribute 
				Do</a></li>
				<li><a href="#How">How to Launch CAAFmExtFeatDeleteSingleValueAttribute</a></li>
				<li><a href="#Where">Where to Find the CAAFmExtFeatDeleteSingleValueAttribute 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The key learnings for an end user from this UC are</p>
<ul>
	<li>Destroying a feature results in unsetting the value of a feature attribute, 
	of type specobject and component which either reference or aggregate this feature</li>
	<li>Unsetting the value of a feature attribute, of type specobject and component, 
	has no impact on the referenced feature except that it is derefenced while the 
	aggregated feature is not only detached but destroyed too </li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmExtFeatDeleteSingleValueAttribute Use Case</h2>
<p>The <code>CAAFmExtFeatDeleteSingleValueAttribute </code>is a use case of the
<code>CAAFeatureModelerExt.edu</code> framework that illustrates <code>FeatureModelerExt</code> 
framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmExtFeatDeleteSingleValueAttribute Do</h3>
<p>The UC illustrates ossible methods to unset a single value attribute of type
<strong>specobject</strong> and <strong>component</strong>. The UC execution is 
based on an input model as depicted in [<a href="#Fig.1">Fig.1</a>] below.</p>
<table>
	<caption><a name="Fig.1"></a>Fig.1 Input Feature Model</caption>
	<tr>
		<td>
		<img alt="Input Feature Model" src="images/CAAFmExtFeatDeleteSingleValueAttribute_Fig1.jpg">
		</td>
	</tr>
</table>
<p>The model is built with features defined in the &quot;<strong>CAAOsmCatalogSU</strong>&quot; 
catalog. An extract of this <strong>CATFct</strong> file, with the feature definitions 
relevant to the current UC, is listed below:</p>
<pre class="code">feature <strong>CAAOsmBook</strong> #startup {
			 	specobject <strong>BookPublisher</strong>
			         component  <strong>CAAOsmBarCode</strong>
		          }
</pre>
<p>The &quot;<strong>CAAOsmBook</strong>&quot; feature is characterized with an attribute
<strong>BookPublisher</strong>, of type specobject, which refers to another feature. 
It is also characterized by another attribute &quot;CAAOsmBarCode&quot;, of type component.</p>
<p>The model consists of a PLM Technological Representation which has two Applicative 
Containers in it. We have two applicative containers since our UC illustration is 
applicable for features existing inside a single applicative container as well as 
those which exist across different containers.</p>
<p>Appli Cont1 consists of two <strong>CAAOsmBook</strong> features (<strong>CAAOsmBook1</strong>,
<strong>CAAOsmBook2</strong>), a <strong>CAAOsmPublisher</strong> feature (<strong>CAAOsmPublisher1</strong>) 
and a <strong>CAAOsmBarCode</strong> feature (<strong>CAAOsmBarCode1</strong>)</p>
<p>Appli Cont2 consists of a <strong>CAAOsmPublisher</strong> feature (<strong>CAAOsmPublisher2</strong>) 
and a <strong>CAAOsmBarCode</strong> feature (<strong>CAAOsmBarCode2</strong>)</p>
<p>The &quot;<strong>CAAOsmBook1</strong>&#39; feature refers to the &quot;<strong>CAAOsmPublisher1</strong>&quot; 
feature and aggregates the feature &quot;<strong>CAAOsmBarCode1</strong>&quot; under it, all 
features existing in Appli Cont1.</p>
<p>The &quot;<strong>CAAOsmBook2</strong>&quot; feature inside Appli Cont1 refers to the &quot;<strong>CAAOsmPublisher2</strong>&quot; 
feature which is inside Appli Cont1. It also aggregates the feature &quot;<strong>CAAOsmBarCode2</strong>&quot; 
under it, which is inside Appli Cont2.</p>
<p>The UC illustrates the two scenarios that follow</p>
<ul>
	<li><strong>Impact of destroying a feature when it is either Referenced or Aggregated 
	through a feature attribute (of type specobject or component)</strong><p>We 
	destroy the feature &quot;<strong>CAAOsmPublisher1</strong>&quot;. It is referenced by 
	the feature &quot;<strong>CAAOsmBook1</strong>&quot;, both features being in the same 
	Appli Cont1. This results in the unsetting of &quot;<strong>BookPublisher</strong>&quot;, 
	an attribute of type specobject of the feature &quot;<strong>CAAOsmBook1</strong>&quot;.
	</p>
	<p>On similar lines, the result is the same even when when we destroy the referenced 
	feature which exists in a different applicative container. We destroy
	<strong>CAAOsmPublisher2</strong>, which exists in Appli Cont2 referenced by 
	the feature <strong>CAAOsmBook2</strong>, a feature which exists in Appli Cont1. 
	This also results in unsetting &quot;<strong>BookPublisher</strong>&quot;, an attribute 
	of type specobject of the feature &quot;<strong>CAAOsmBook2</strong>&quot;</p>
	<p>The conclusion is that an attribute of type spec object is unset, when its 
	referenced feature is explicitly destroyed. This happens irrespective of the 
	referenced and the referring feature existing in the same or in different applicative 
	containers. The same holds true for an attribute of type component as well.</p>
	<p>We destroy the feature &quot;<strong>CAAOsmBarCode1</strong>&quot;. This results in 
	unsetting &quot;<strong>CAAOsmBarCode</strong>&quot;, an attribute of type component, 
	of the feature &quot;<strong>CAAOsmBook1</strong>&quot;. Both features exist in the Appli 
	Cont1.</p>
	<p>On the other hand, when we destroy the feature &quot;<strong>CAAOsmBarCode2</strong>&quot;. 
	It also results in unsetting &quot;<strong>CAAOsmBarCode</strong>&quot;, an attribute 
	of type component, of the feature &quot;<strong>CAAOsmBook2</strong>&quot;. In this case, 
	the two features exist in two different appicative containers.</p>
	</li>
	<li><strong>Unset an attribute value (of type specobject or component) and its 
	impact on the Referenced / Aggregated feature</strong><p>We recreate the model 
	depicted in [<a href="#References">Fig.1</a>] above. Next, we illustrate an 
	alternative way, to unset an attribute value is by an explicit call to set an 
	attribute value by its unset value. </p>
	<p>We set the attribute &quot;<strong>BookPublisher</strong>&quot;, of type specobject 
	of the feature &quot;<strong>CAAOsmBook1</strong>&quot; to a <strong>NULL</strong> feature. 
	The feature &quot;<strong>CAAOsmPublisher1</strong>&quot; is no longer referenced though 
	it still exists. This implies that a referenced feature remains alive, though 
	it may no longer be referenced.</p>
	<p>This is equally applicable for a case where the referenced feature exists 
	in a different applicative container. We unset the attribute &quot;<strong>BookPublisher</strong>&quot;, 
	of type specobject of the feature &quot;<strong>CAAOsmBook2</strong>&quot;. The feature 
	&quot;<strong>CAAOsmBook2</strong>&quot; no longer refers to &quot;<strong>CAAOsmPublisher2</strong>&quot; 
	which is in a different applicative container, though the referenced feature 
	is still alive, as confirmed by the UC.</p>
	<p>On the other hand, when an attribute of type component is unset, it results 
	in the destruction of the aggregated feature. </p>
	<p>We set the attribute &quot;<strong>CAAOsmBarCode</strong>&quot;, of type component 
	of the feature &quot;<strong>CAAOsmBook1</strong>&quot; to a <strong>NULL</strong> feature. 
	The feature &quot;<strong>CAAOsmBarCode1</strong>&quot; is not only detached but is also 
	destroyed, as a result. </p>
	<p>On similar lines, when the attribute &quot;<strong>CAAOsmBarCode</strong>&quot; of 
	the feature &quot;<strong>CAAOsmBook2</strong>&quot; is unset, it still results in the 
	aggregated feature being detached and destroyed, though the features involved 
	exist in different applicative containers.</p>
	</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="How"></a>How to Launch CAAFmExtFeatDeleteSingleValueAttribute<br>
</h3>
<p>To launch <code>CAAFmExtFeatDeleteSingleValueAttribute</code>, you will need 
to set up the build time environment, then compile <code>CAAFmExtDeleteSingleValueAttribute
</code>along with its prerequisites, set up the run time environment, and then execute 
the sample. This is fully described in the referenced article [<a href="#References">2</a>].
</p>
<p>mkrun -c &quot;<em><code>CAAFmExtFeatDeleteSingleValueAttribute</code> Repository Server 
UserId Password SecurityCtx Environment</em>&quot;</p>
<p>Where</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:Port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer(Since use case modifies PLM Data)</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment containing PLMProductDS (a PRODUCT&#39;s custo)</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmExtFeatDeletionFromList Code</h3>
<p><code>CAAFmExtDeleteSingleValueAttribute </code>code is located in the <code>
CAAFmExtDeleteSingleValueAttribute.m</code> use case module of the <code>CAAFeatureModelerExt.edu</code> 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAFeatureModelerExt.edu\CAAFmExtDeleteSingleValueAttribute.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the root 
folder of your API installation. It is made of a unique source file named <code>
CAAFmExtDeleteSingleValueAttribute.cpp</code></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The logical steps of <code>CAAFmExtFeatDeleteSingleValueAttribute </code>are:</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Impact of deleteself">Impact of a DeleteSelf() call on a feature 
	if it is either Referenced or Aggregated</a></li>
	<li><a href="#Impact of attr value unset">Unset an Attribute Value with an explicit 
	call to SetValue()</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The fundamental steps to create a batch session with a connection to an input 
repository, is detailed in the article &quot;<strong>Connecting to V6 Server</strong>&quot; 
[<a href="#References">3</a>].</p>
<p>The Use Case creates a new PLM Technological Representation a subject discussed 
in the UC [<a href="#References">4</a>] with an applicative container. </p>
<p>It further creates the <strong>Credentials</strong> [<a href="#References">5</a>] 
to authorize access to the features defined in the <strong>CAAOsmCatalogSU</strong> 
catalog. </p>
<p>It next builds the data model as the one depicted in [<a href="#Fig.1">Fig.1</a>] 
above. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Impact of deleteself"></a>Impact of a DeleteSelf() call on a feature 
when it is either Referenced or Aggregated</h3>
<p>A call to <code>DeleteSelf()</code> on a feature not only destroys the feature 
but also effectively unsets an attribute valuated with this feature, thus either 
referencing or aggregating this feature.</p>
<pre class="code">rc = <strong>FeatFacadeOnBarCode1.DeleteSelf</strong>();</pre>
<p>The feature <strong>CAAOsmBarCode1</strong> is destroyed with a call to <code>
DeleteSelf()</code> on <code>FeatFacadeOnBarCode1</code>, a <em>CATFmFeatureFacade</em> 
type on the <strong>CAAOsmBarCode1</strong> feature.</p>
<p>We proceed to study the impact of destroying a feature on another feature either 
referencing or aggregating it. In this case, the feature <strong>CAAOsmBook1</strong>, 
refers to the feature <strong>CAAOsmBarCode1</strong>.</p>
<pre class="code">CATFmAttributeName AttrNameBarCode(&quot;CAAOsmBarCode&quot;);
CATFmAttributeValue AttrValue;
    
rc = <strong>FeatFacadeOnBook1.GetValue(AttrNameBarCode,AttrValue)</strong>;
if (FAILED(rc)) return 1;

CATFmFeatureFacade FeatFacade(MyCredential);
rc = <strong>AttrValue.GetFeature(FeatFacade)</strong>;
<strong>if ((S_FALSE !=rc) || (TRUE == FeatFacade.IsValid())) return 1</strong>;  </pre>
<p>The call to <code>GetValue() </code>on <code>FeatFacadeOnBook1</code>, a <em>
CATFmFeatureFacade</em> type retrieves an attribute value. Its inputs are</p>
<ul>
	<li><code>AttrNameBarCode</code>, a <em>CATFmAttributeName</em> type representing 
	the attribute &quot;<strong>CAAOsmBarCode</strong>&quot;. This attribute is of type specobject</li>
	<li><code>AttrValue</code>, a <em>CATFmAttributeValue</em> type representing 
	the referenced feature, <strong>CAAOsmBarCode1</strong></li>
</ul>
<p>The call to <code>GetFeature()</code> on <code>AttrValue</code>, a <em>CATFmAttributeValue</em> 
type returns the feature associagted with this Attribute Value. It is retrieved 
as <code>FeatFacade</code>, a <em>CATFmFeatureFacade</em> type. In this case since 
the referenced feature, <strong>CAAOsmBarCode1</strong> is destroyed, this call 
returns <strong>S_FALSE</strong>. </p>
<p>It is also significant to note that the feature facade returned is invalid. The 
call to <code>IsValid()</code> of <code>FeatFacade</code>, a <em>CATFmFeatureFacade</em> 
type retrieved earlier thus returns <strong>FALSE</strong>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Impact of attr value unset"></a>Impact of an Attribute Value Unset 
on a Referenced/Aggregated Feature</h3>
<p>We study the impact of an attribute value unset on its referenced/aggregated 
feature. </p>
<pre class="code">CATFmFeatureFacade EmptyFeatFacade;
CATFmAttributeValue NULLAttrValue;
NULLAttrValue.SetFeature(EmptyFeatFacade);
rc = <strong>FeatFacadeOnBook1.SetValue(AttrNamePublisher,NULLAttrValue)</strong>;</pre>
<p>We unset the attribute &quot;<strong>BookPublisher</strong>&quot;, of type specobject for 
the feature &quot;<strong>CAAOsmBook1</strong>&#39;. The call to <code>SetValue()</code> 
of the <em>CATFmFeatureFacade</em> class, enables us to unset a feature attribute 
value. It is invoked on <code>FeatFacadeOnBook1</code>, a <em>CATFmFeatureFacade</em> 
type. Its inputs are</p>
<ul>
	<li><code>AttrNamePublisher</code>, a <em>CATFmAttributeName</em> type representing 
	the &quot;<strong>BookPublisher</strong>&quot;</li>
	<li><code>NullAttrValue</code>, a <em>CATFmAttributeValue</em> type, representing 
	an empty feature which effectively unsets the attribute</li>
</ul>
<p>Now unsetting an attribute of type specobject, results in the pointed feature 
no longer being referenced. But, the feature though dereferenced still continues 
to exist. The code that follows confirms this.</p>
<pre class="code">CATFmFeatureIterator oFeatIterator1;
    rc =  <strong>MyContainerFacade1.ScanFeatures(oFeatIterator1)</strong>;
    if (FAILED(rc)) return 1;
    ...
CATUnicodeString strPublisherType(&quot;CAAOsmPublisher&quot;);
CATUnicodeString strFeatType;
CATBoolean bRefFeatExists = FALSE;
<strong>while ((SUCCEEDED(oFeatIterator1.Next(FeatFacade))) &amp;&amp; (FALSE == bRefFeatExists))</strong>
{
	rc = <strong>FeatFacade.GetType(strFeatType)</strong>;
         if (SUCCEEDED(rc))
<strong>         		if (strFeatType == strPublisherType) bRefFeatExists = TRUE</strong>;    
}
<strong>if (FALSE == bRefFeatExists) return 1</strong>;</pre>
<p>The call to <code>ScanFeatures()</code> of the <em>CATFmContainerFacade</em> 
class, retrieves the features in the container in an iterator, as a <em>CATFmFeatureIterator</em> 
type (<code>oFeatIterator1</code>). </p>
<p>We parse through this feature iterator and retrieve each feature in it, as a
<em>CATFmFeatureFacade</em> type (<code>FeatFacade</code>). </p>
<p>The call to <code>GetType()</code> of the <em>CATFmFeatureFacade</em> class retreives 
the feature type, as a <em>CATUnicodeString</em> type (<code>strFeatType</code>). 
We confirm the feature type as &quot;<strong>CAAOsmPublisher</strong>&quot;.</p>
<p>On the other hand, when an attribute of type component (<strong>CAAOsmBarCode</strong>) 
is unset, it not only removes the aggregation but also results in the destruction 
of the aggregated feature. This is confirmed with the code similar to the one above.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>See the referenced article [<a href="#References">3</a>] for a detailed description 
of the steps involved to save the session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The UC illustrates the impact of destroying a feature which is either referenced 
or aggregated by another feature. The impact is studied in terms of the effects 
on a feature attribute value which results in this referencing or aggregation.
</p>
<p>The UC also further illustrates the impact of unsetting the value of an attribute, 
of type specobject and component on the referenced/aggregated features. The referenced 
feature still continue to exist even after this unsetting, while the aggregated 
features are not only detached but also destroed as a result of this unsetting.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAFmExtTaLinkingFeatures2.htm">Understanding Link Attributes 
		- 2 </a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAPstProductModelerExt/CAAPstUcCreateAndInstantiateTechnoRep.htm')">
		Creating PLM Technological Representation</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAAFmExtTaUnderstandingCredentials.htm">Understanding Credentials</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [July 2010]</td>
		<td>Creation</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
