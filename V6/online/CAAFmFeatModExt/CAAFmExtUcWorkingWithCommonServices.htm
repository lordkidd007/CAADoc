<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Working with the Common Services</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1>Working with the Common Services</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <code>CAAFmExtWorkingWithCommonServices
		</code>use case. A feature supports the common routines (<strong>Update</strong>,
		<strong>Delete</strong>, <strong>Copy-Paste</strong>), typically governed 
		by the common services protocol defined in its OSM [<a href="#References">1</a>].This 
		UC illustrates the steps involved, to work with the common services protocol.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmExtWorkingWithCommonServices Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAFmExtWorkingWithCommonServices 
				Do</a></li>
				<li><a href="#How">How to Launch CAAFmExtWorkingWithCommonServices</a></li>
				<li><a href="#Where">Where to Find the CAAFmExtWorkingWithCommonServices 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The user learns:</p>
<ul>
	<li>Working with the common protocol (<strong>Update</strong>, <strong>Delete</strong>,
	<strong>Copy-Paste</strong>).</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmExtWorkingWithCommonServices Use Case</h2>
<p><code>CAAFmExtWorkingWithCommonServices</code> is a use case of the <code>CAAFeatureModelerExt.edu</code> 
framework that illustrates <code>DataCommonProtocolUse</code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmExtWorkingWithCommonServices Do</h3>
<p>The Use Case creates features which support the generic routines <strong>Delete</strong>,
<strong>Update</strong> and <strong>Copy-Paste (CCP)</strong>, governed by the common 
services protocol. These features are instantiated from StartUps defined in the 
UC &quot;<strong>Declaring Common Services Protocol</strong>&quot; [<a href="#References">2</a>].
</p>
<p>The StartUp &quot;<strong>CAAFmExtUseEnt02</strong>&quot; supports the generic <strong>
Delete</strong> call, StartUp &quot;<strong>CAAFmExtUseEnt03</strong>&quot; supports the generic
<strong>Copy-Paste</strong> call, while the StartUp &quot;<strong>CAAFmExtUseEnt06</strong>&quot; 
supports the generic <strong>Update</strong> calls.</p>
<p>The UC does the following tasks</p>
<ul>
	<li>Creates the feature &quot;<strong>CAAFmExtUseEnt02</strong>&quot;</li>
	<li>Deletes it</li>
	<li>Creates the feature &quot;<strong>CAAFmExtUseEnt06</strong>&quot;</li>
	<li>Updates it</li>
	<li>Creates the feature &quot;<strong>CAAFmExtUseEnt03</strong>&quot;</li>
	<li>Copy-Paste it</li>
</ul>
<p>The article is an extract of the <code>&quot;CAAFmExtImplementingCATIUseEntity.cpp&quot;</code> 
code. While this code does a lot more, we have extracted only that of our interest 
for illustrating how to use the common protocol.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmExtWorkingWithCommonServices</h3>
<p>To launch <code>CAAFmExtWorkingWithCommonServices</code>, you will need to set 
up the build time environment, then compile <code>CAAFmExtWorkingWithCommonServices
</code>along with its prerequisites, set up the run time environment, and then execute 
the sample. This is fully described in the referenced article [<a href="#References">3</a>].</p>
<p>In addition, the UC also refers to the Catalogs <code>CAAFmExtCatalogForCATIUseEntityUC.CATfct</code>. 
The Catalogs are provided at the location</p>
<p><code>InstallRootFolder\CAADoc\CAAFeatureModelerExt.edu\CNext\resources\graphic</code></p>
<p>and by running the mkrtv tool, user copies it to the WS RTV.</p>
<p>In addition we have also provided the OSM files corresponding to these catalogs 
at the location below, just in case you would like to generate the <code>CATfct</code> 
with the <code>CATfctEditorAssistant</code> tool [<a href="#References">4</a>]</p>
<p><code>InstallRootFolder\CAADoc\CAAFeatureModelerExt.edu\InputData</code></p>
<p>mkrun -c &quot;<em>CAAFmExtImplementingCATIUseEntity Repository Server UserId Password 
SecurityCtx Environment</em>&quot;</p>
<p>Where</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:Port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer(Since use case modifies PLM Data)</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment containing PLMProductDS (a PRODUCT&#39;s custo)</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmExtWorkingWithCommonServices Code</h3>
<p><code>CAAFmExtWorkingWithCommonServices</code> code is located in the <code>CAAFmExtImplementingCATIUseEntity.m</code> 
use case module of the <code>CAAFeatureModelerExt.edu</code> framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAFeatureModelerExt.edu\CAAFmExtImplementingCATIUseEntity.m</code></p>
<p>where InstallRootFolder [<a href="#References">3</a>] is the root folder of your 
API installation. It is made of a unique source file named <code>CAAFmExtImplementingCATIUseEntity.cpp</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The steps of <code>CAAFmExtWorkingWithCommonServices</code> are listed below:</p>
<ul>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Delete">Delete</a></li>
	<li><a href="#Update">Update</a></li>
	<li><a href="#Copy Paste">Copy-Paste</a></li>
	<li><a href="#Prolog">Epilog</a></li>
</ul>
<p>We proceed to detail the steps involved.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The steps to create a batch session with a connection to an input repository 
are detailed in a dedicated UC [<a href="#References">5</a>].</p>
<p>Next we create the Credentials object which authorize working with the Catalog 
specified in the &quot;<strong>What does the UC do</strong>&quot; section above. We append 
this Credentials [<a href="#References">6</a>] object with a credential which authorizes 
us to work with Applicative Containers defined by the Feature Modeler.</p>
<p>Finally the use case creates a PLM Technological Representation [<a href="#References">7</a>] 
with an applicative container [<a href="#References">8</a>].</p>
<p>A target feature for the copy paste operation is instantiated from the StartUp 
&quot;<strong>CAAFmExtUseEnt02</strong>&quot;. This StartUp implements the Common Services 
Protocol and supports the <strong>CCP</strong> operations. This feature is retrieved 
as <code>piUseEntityOnTargetFeat2</code>, a <em>CATIUseEntity</em>* type on the 
feature.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Delete"></a>Delete</h3>
<p>Let us now discuss the case specific to accessing and working with the
<strong>Delete</strong> routines (<strong>Delete</strong>, <strong>CanDelete</strong>) 
in your client application. You may refer the StartUp &quot;<strong>CAAFmExtUseEnt02</strong>&quot;, 
whose feature definition declares that it supports the common services protocol. 
The protocol definition sets <strong>implementDeleteAspect = true</strong>,<strong>
</strong>implying<strong></strong> our feature supports the <strong>Delete</strong> 
routine.</p>
<p>In the application, we invoke the feature delete, using the code extract that 
follows.</p>
<pre class="code">CATIUseEntity* piUseEntityOnUseEnt02 = NULL;
rc = <strong>oFeatFacadeOnUseEnt02.QueryInterfaceOnFeature(IID_CATIUseEntity,(void**)&amp;piUseEntityOnUseEnt02)</strong>;
if (FAILED(rc)) return 1;    
</pre>
<p>The StartUp &quot;<strong>CAAFmExtUseEnt02</strong>&quot; is instantiated. It is retrieved 
as <code>oFeatFacadeOnUseEnt02</code>, a <em>CATFmFeatureFacade</em> type on the 
&quot;<strong>CAAFmExtUseEnt02</strong>&quot; feature.</p>
<p>We retreive the <em>CATIUseEntity</em> type on our feature, by a call to
<code>QueryInterfaceOnFeature()</code> on <code>oFeatFacadeOnUseEnt02</code>, a
<em>CATFmFeatureFacade</em> type on our feature. It returns, <code>piUseEntityOnUseEnt02</code>, 
a <em>CATIUseEntity</em>* type on our feature, a key input for the delete invocation 
that follows.</p>
<pre class="code">rc = <strong>DataCommonProtocolServices::Delete(piUseEntityOnUseEnt02)</strong>;
if (FAILED(rc)) return 1;</pre>
<p>The call to the static routine <code>Delete</code>() of the <em>DataCommonProtocolServices</em> 
class, deletes the feature input. The feature is input as a <em>CATIUseEntity</em>* 
type (<code>piUseEntityOnUseEnt02</code>).</p>
<p>On similar lines, the call to <code>CanDelete()</code> will also return success, 
as depicted by the representative code that follows.</p>
<pre class="code">CATBoolean oDeletable = FALSE;
rc = <strong>DataCommonProtocolServices::CanDelete(piUseEntityOnUseEnt02,oDeletable)</strong>;
if (FAILED(rc)) return 1;</pre>
<p>The call to the static routine <code>CanDelete()</code> of the <em>DataCommonProtocolServices</em> 
class, returns if an input feature can be deleted or not. The feature is input as 
a <em>CATIUseEntity</em>* type (<code>piUseEntityOnUseEnt02</code>) and its delete 
status is retrieved as <code>oDeletable</code>, a <code>CATBoolean</code> type.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Update"></a>Update</h3>
<p>Let us now discuss the case specific to accessing and working with the
<strong>Update</strong> routines (<strong>Update</strong>, <strong>IsUpToDate)</strong> 
in your client application. You may refer the StartUp &quot;<strong>CAAFmExtUseEnt06</strong>&quot;, 
whose feature definition declares that it supports the common services protocol. 
The protocol definition sets <strong>implementUpdateAspect = true</strong>,<strong>
</strong>implying<strong></strong> our feature supports the <strong>Update</strong> 
routine.</p>
<p>In the application, we invoke the feature update, using the code extract that 
follows.</p>
<pre class="code">CATIUseEntity* piUseEntityOnUseEnt06 = NULL;
rc = <strong>oFeatFacadeOnUseEnt06.QueryInterfaceOnFeature(IID_CATIUseEntity,(void**)&amp;piUseEntityOnUseEnt06)</strong>;
if (FAILED(rc)) return 1;    
</pre>
<p>The StartUp &quot;<strong>CAAFmExtUseEnt06</strong>&quot; is instantiated. It is retrieved 
as <code>oFeatFacadeOnUseEnt06</code>, a <em>CATFmFeatureFacade</em> type on the 
&quot;<strong>CAAFmExtUseEnt06</strong>&quot; feature.</p>
<p>We retreive the <em>CATIUseEntity</em> type on our feature, by a call to
<code>QueryInterfaceOnFeature()</code> on <code>oFeatFacadeOnUseEnt06</code>, a
<em>CATFmFeatureFacade</em> type on our feature. It returns, <code>piUseEntityOnUseEnt06</code>, 
a <em>CATIUseEntity</em>* type on our feature, a key input for the <code>IsUpToDate
</code>invocation that follows.</p>
<pre class="code">CATBoolean bUpToDate = false;
rc = <strong>DataCommonProtocolServices::IsUpToDate(piUseEntityOnUseEnt06,bUpToDate)</strong>;
if (FAILED(rc)) return 1;</pre>
<p>The call to the static routine <code>IsUpToDate()</code> of the <em>DataCommonProtocolServices</em> 
class, returns the feature update status. The feature is input as a <em>CATIUseEntity</em>* 
type (<code>piUseEntityOnUseEnt02</code>) with a <code>CATBoolen</code> type, which 
represents the update status. On similar lines, the call to <code>Update</code> 
also succeeds, as depicted by a representative code that follows.</p>
<pre class="code">CATBoolean bUpToDate = false;
rc = <strong>DataCommonProtocolServices::Update(piUseEntityOnUseEnt06)</strong>;
if (FAILED(rc)) return 1;</pre>
<p>The call to the static routine <code>Update()</code> of the <em>DataCommonProtocolServices</em> 
class, updates the feature. The feature for update is input as a <em>CATIUseEntity</em>* 
type (<code>piUseEntityOnUseEnt06</code>).</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Copy Paste"></a>Copy-Paste</h3>
<p>Let us now discuss the case specific to accessing and working with the
<strong>Copy-Paste</strong> routines in your client application. You may refer the 
StartUp &quot;<strong>CAAFmExtUseEnt03</strong>&quot;, whose feature definition declares that 
it supports the common services protocol. The protocol definition sets <strong>implementCopyPasteAspect 
= true</strong>,<strong></strong> implying our feature supports 
the <strong>Copy-Paste</strong> routine.</p>
<p>In the application, we invoke the feature copy paste, using the code extract 
that follows.</p>
<pre class="code">CATIUseEntity* piUseEntityOnUseEnt03 = NULL;
rc = <strong>oFeatFacadeOnUseEnt03.QueryInterfaceOnFeature(IID_CATIUseEntity,(void**)&amp;piUseEntityOnUseEnt03)</strong>;
if (FAILED(rc)) return 1;</pre>
<p>The StartUp &quot;<strong>CAAFmExtUseEnt03</strong>&quot; is instantiated. It is retrieved 
as <code>oFeatFacadeOnUseEnt03</code>, a <em>CATFmFeatureFacade</em> type on the 
&quot;<strong>CAAFmExtUseEnt03</strong>&quot; feature.</p>
<p>We retreive the <em>CATIUseEntity</em> type on our feature, by a call to
<code>QueryInterfaceOnFeature()</code> on <code>oFeatFacadeOnUseEnt03</code>, a
<em>CATFmFeatureFacade</em> type on our feature. It returns, <code>piUseEntityOnUseEnt03</code>, 
a <em>CATIUseEntity</em>* type on our feature.</p>
<pre class="code">CATListOfCATIUseEntity_var iEntitiesToCopy;
<strong>iEntitiesToCopy.Append(piUseEntityOnUseEnt03)</strong>;
<strong>CATPathElement PathElementOnTargetFeat02(piUseEntityOnTargetFeat02)</strong>;
...
CATListOfCATIUseEntity_var oNewEntities;
rc = <strong>DataCommonProtocolCCPServices::CopyAndPasteTo(iEntitiesToCopy,PathElementOnTargetFeat02,oNewEntities)</strong>;</pre>
<p>The call to the static routine <code>CopyAndPasteTo()</code> of the <em>DataCommonProtocolServices</em> 
class, copies and pastes the feature. The inputs to the API are</p>
<ul>
	<li><code>iEntitiesToCopy</code>, a <code>CATListOfCATIUseEntity_var</code> 
	type, representing a list of entities to copy (the list includes a single feature 
	namely. <strong>CAAFmExtUseEnt03</strong>)</li>
	<li><code>PathElementOnTargetFeat02</code>, a <code>CATPathElement</code> type, 
	representing the target feature on which the copied features are pasted (refer 
	the Prolog section). This is created with the <em>CATIUseEntity</em> type on 
	our feature, retrieved earlier.</li>
	<li><code>oNewEntities</code>, a <code>CATListOfCATIUseEntity_var</code> type, 
	representing the copied (pasted) features</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3>Epilog</h3>
<p>See the referenced article [<a href="#References">5</a>] for a detailed description 
of the steps involved to save the session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>A feature supports the common routines (<strong>Update</strong>, <strong>Delete</strong>,
<strong>CCP</strong> exposed by the <em>DataCommonProtocolUse</em> framework), typically 
governed by the common services protocol defined in its OSM [<a href="#References">1</a>].</p>
<p>The UC illustrates the steps involved to invoke the common services on a feature. 
It requires initially to declare in the OSM that your feature supports the protocol 
and next to explicitly declare the support for each of the three common routines. 
It is then followed by the actual invocation of these routines in the application.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAFmExtTaCommonProtocol.htm">Common Protocol Integration</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAFmExtUcCommonServicesUsageProtocol.htm">Declaring Common 
		Services Protocol</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAOsmTaModelingStartUps.htm">Creating StartUps in Catalogs</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td><a href="CAAFmExtUcWorkingWithCredentials.htm">Working with Credentials</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAPstProductModelerExt/CAAPstUcCreateAndInstantiateTechnoRep.htm')">
		Creating PLM Technological Representation</a></td>
	</tr>
	<tr>
		<td>[8]</td>
		<td><a href="CAAFmExtUcAppliCont.htm">Working with Applicative Containers</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [May 2010]</td>
		<td>Creation</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
