<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Working with a Feature Attribute of type List</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Working with a Feature Attribute of type List</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <code>CAAFmExtFeatDeletionFromList</code> 
		use case (UC). It illustrates working with a feature attribute of type List, 
		both array and non-array kinds. An understanding of the significance of 
		the array facet of a list attribute is essential to better understand this 
		UC. The technical article &quot;<strong>Understanding Feature Lifecycle</strong>&quot; 
		delves into the depths of this subject. [<a href="#References">1</a>].</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmExtFeatDeletionFromList Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAFmExtFeatDeletionFromList Do</a></li>
				<li><a href="#How">How to Launch CAAFmExtFeatDeletionFromList</a></li>
				<li><a href="#Where">Where to Find the CAAFmExtFeatDeletionFromList 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>An end user learns the salient features of a feature attribute of type list.</p>
<p>Users precisely understand the distinction between a list of type array and non-array, 
in terms of their behavior under various input conditions.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmExtFeatDeletionFromList Use Case</h2>
<p>The <code>CAAFmExtFeatDeletionFromList</code> is a use case of the <code>CAAFeatureModelerExt.edu</code> 
framework that illustrates <code>FeatureModelerExt</code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmExtFeatDeletionFromList Do</h3>
<p>The UC primarily illustrates working with an attribute of type List. The list 
could either be that of referenced features or aggregated features. The UC executes 
on an input feature model depicted below [<a href="#Fig.1">Fig.1</a>].</p>
<table>
	<caption><a name="Fig.1"></a>Fig.1 Input Feature Model</caption>
	<tr>
		<td>
		<img alt="Input Feature Model" src="images/CAAFmExtFeatDeletingFromAListAttr_Fig1.gif" width="269" height="226"></td>
	</tr>
</table>
<p>The model comprises of features defined in the &quot;<strong>CAAFmExtDeleteListSU</strong>&quot; 
catalog. The feature definitions are depicted below.</p>
<pre class="code">feature <strong>CAAFmExtDeleteList</strong> #startup {
			               specobject <strong>CAAFmExtListSpecNoArray</strong> #list
			               component  <strong>CAAFmExtListCompNoArray</strong> #list
			               specobject <strong>CAAFmExtListSpecArray</strong> #list #array
			               component  <strong>CAAFmExtListCompArray</strong> #list #array
		                  }
feature <strong>CAAFmExtDeleteBasic</strong> #startup {
			               string CAAFmExtName
			         }</pre>
<p>The model consists of a &quot;<strong>CAAFmExtDeleteList</strong>&quot; feature (referred 
to as <strong>DeleteList</strong> in the Fig.2). This feature is characterized by 
attributes listed below</p>
<ul>
	<li><strong>CAAFmExtListSpecNoArray</strong>, an attribute (<strong>attr1</strong> 
	in Fig.1) of type <strong>list</strong>, <strong>specobject</strong> and
	<strong>non-array</strong>. Implies it points to a list of referenced features. 
	This list cannot have an element referencing a NULL feature, since it is of 
	type non-array. It refers to the features <strong>B1</strong>*, <strong>B2</strong>,
	<strong>B3</strong> as depicted in the model.</li>
	<li><strong>CAAFmExtListCompNoArray</strong>, an attribute (<strong>attr2</strong> 
	in Fig.2) of type <strong>list</strong>, <strong>component</strong> and
	<strong>non-array</strong>. Implies it points to a list of aggregated features. 
	The list cannot have an element referencing a NULL features, since it is of 
	type non-array. It aggregates the features <strong>B4</strong>, <strong>B5, 
	B3.</strong> Please note B3 is referenced by the earlier list and aggregated 
	by the current list.</li>
	<li><strong>CAAFmExtListSpecArray</strong>, an attribute (<strong>attr3</strong> 
	in Fig.1) of type <strong>list</strong>, <strong>specobject</strong> and
	<strong>array</strong>. Implies it points to a list of referenced features. 
	This list can have an element referencing a NULL feature, since it is of type 
	array. It refers to the features <strong>B6</strong>, <strong>B7</strong>.</li>
	<li><strong>CAAFmExtListCompArray</strong>, an attribute (<strong>attr4</strong> 
	in Fig.1) of type <strong>list</strong>, <strong>component</strong> and
	<strong>array</strong>. Implies it points to a list of aggregated features. 
	The list can have an element referencing a NULL feature, since it is of type 
	array. It aggregates the features <strong>B8</strong>, <strong>B9</strong>,<strong> 
	B10</strong>.</li>
</ul>
<p>*The <strong>DeleteList</strong> feature refers to a list of features of type 
&quot;<strong>CAAFmExtDeleteBasic</strong>&quot; (referred to as <strong>B</strong> in the 
Fig.1). The <strong>DeleteList</strong> feature is set as an <strong>AutoNumber</strong>
<strong>Provider</strong> for the features it refers to and aggregates. As a result 
you&#39;ll find the index associated with the feature <strong>B</strong> ranges from
<strong>1</strong> to <strong>10</strong>.</p>
<p>The scenarios illustrated by this UC are listed below.</p>
<ul>
	<li><strong>Removing an Index of a List</strong>
	<p>It removes an index from each of the four lists. The impact is depicted in 
	red in the <a href="#Fig.2">Fig.2</a> that follows.</p>
	<table>
		<caption><a name="Fig.2"></a>Fig.2</caption>
		<tr>
			<td>
			<img alt="Fig.2" src="images/CAAFmExtFeatDeletingFromAListAttr_Fig2.jpg" width="295" height="221"></td>
		</tr>
	</table>
	<p>The index <strong>3</strong> of <strong>attr1</strong>, an attribute of type
	<strong>specobject</strong> <strong>list</strong>, <strong>non-array</strong> 
	attribute, is removed. The list size reduces to <strong>2</strong>, while the 
	feature <strong>B3</strong> is still alive but not as a part of the list. A 
	referenced feature is destroyed if only explicitly deleted. Any operation on 
	a list index will not impact the feature that it refers to.</p>
	<p>The index <strong>2</strong> of <strong>attr2</strong>, an attribute of type
	<strong>component</strong>, <strong>list</strong>, <strong>non-array</strong>, 
	is removed. The list size reduces to <strong>2</strong> and the feature
	<strong>B5</strong> is destroyed. If an index of a list of aggregating features 
	is removed, it results in the destruction of the aggregated feature.</p>
	<p>The index <strong>1</strong> of <strong>attr3</strong>, an attribute of type
	<strong>specobject</strong>, <strong>list</strong>,<strong> array</strong>, 
	is removed. The list size reduces to <strong>1</strong> and the feature
	<strong>B6</strong> being a referenced feature, remains alive. A significant 
	point to note here is that since the operation involves removing an element 
	from the list, the list size has to reduce, though it may be an array type.</p>
	<p>The index <strong>1</strong> of <strong>attr4</strong>, an attribute of type
	<strong>component</strong>, <strong>list</strong>, <strong>array</strong>, is 
	removed. The list size reduces to <strong>2</strong> and the feature <strong>
	B8</strong> is destroyed. If an index of a list of aggregating features is removed, 
	it results in the destruction of the aggregated feature.</p>
	<p>The count of the features in the Applicative Container is less by <strong>
	2</strong>, since two aggregated features, <strong>B5</strong> and <strong>B8</strong>, 
	no longer exist.</p>
	</li>
	<li><strong>Replacing an Element of a List with NULL</strong><p>We continue 
	with the model output by the previous scenario. In the current scenario we replace 
	an element in each list with NULL. The impact on the model is depicted in
	<a href="#Fig.3">Fig.3</a> that follows.</p>
	<table>
		<caption><a name="Fig.3"></a>Fig.3</caption>
		<tr>
			<td>
			<img alt="Fig.3" src="images/CAAFmExtFeatDeletingFromAListAttr_Fig3.jpg" width="377" height="221"></td>
		</tr>
	</table>
	<p>We replace value at index <strong>1</strong> of all lists by NULL. Since 
	a list of type non-array, cannot have a NULL feature valuated to its elements, 
	the operation fails for <strong>attr1</strong> and <strong>attr2</strong>, the 
	two lists of type non-array.</p>
	<p>It succeeds for the other two lists, <strong>attr3</strong> and <strong>attr4</strong>.</p>
	<p>For <strong>attr3</strong>, since it represents a list of type array,
	<strong>B7</strong> is replaced with <strong>NULL</strong>. <strong>B7</strong>, 
	being a referenced feature, remains alive.</p>
	<p><strong>attr4</strong>, a list of type array replaces <strong>B9</strong> 
	with <strong>NULL</strong>. <strong>B9</strong> is no longer aggregated and 
	is eventually destroyed.</p>
	<p>The count of the features in the Applicative Container further reduces by
	<strong>1</strong>, since aggregated feature, <strong>B9</strong> no longer 
	exists.</p>
	</li>
	<li><strong>Destroying a Feature from a List</strong><p>Continuing with the 
	model above, we proceed to explicitly destroy the features involved.</p>
	<table>
		<caption><a name="Fig4"></a>Fig.4</caption>
		<tr>
			<td>
			<img alt="Fig.4" src="images/CAAFmExtFeatDeletingFromAListAttr_Fig4.jpg" width="287" height="221"></td>
		</tr>
	</table>
	<p>We destroy <strong>B2</strong>, <strong>B4</strong> and <strong>B10</strong>.</p>
	<p>The list size of each of the two non-array type lists (<strong>attr1</strong>,
	<strong>attr2</strong>) is reduced by <strong>1</strong>.</p>
	<p>The list size of the array type (<strong>attr4</strong>) remains the same. 
	The feature <strong>B10</strong> destroyed, is replaced with <strong>NULL</strong>. 
	A significant point to note here is that when a feature referred to in a list 
	of array type (type <strong>component</strong>, <strong>specobject</strong> 
	both) is destroyed, it is replaced with <strong>NULL</strong> in the list. As 
	a result the list size remains constant.</p>
	</li>
	<li><strong>Valuating a List Attribute</strong><p>Here we begin with our initial 
	model the one depicted in [<a href="#Fig.1">Fig.1</a>] above. We now valuate 
	each of those four list attributes with a predefined array which has <strong>
	NULL</strong>, <strong>B11</strong>, <strong>B12</strong> as its elements.
	<strong>B11</strong> and <strong>B12</strong> are the new features instantiated 
	of type <strong>B</strong>. The impact on the model is depicted in [<a href="#Fig5">Fig.5</a>] 
	that follows.</p>
	<table>
		<caption><a name="Fig5"></a>Fig.5</caption>
		<tr>
			<td>
			<img alt="Fig.5" src="images/CAAFmExtFeatDeletingFromAListAttr_Fig5.jpg" width="375" height="226"></td>
		</tr>
	</table>
	<p>You&#39;ll find the assignment fails for the lists of type <strong>non-array</strong> 
	i.e. <strong>attr1</strong>, <strong>attr2</strong>. The reason being a list 
	of type non-array, cannot contain a NULL value in it. Since the array we are 
	assigning, has a NULL value in it, the assignment fails for a list of type non-array.</p>
	<p>The assignment however succeeds for the lists of type <strong>array</strong> 
	(<strong>attr3</strong>, <strong>attr4</strong>).</p>
	<p>For <strong>att3</strong>, you&#39;ll notice the list size is now 3. It has
	<strong>NULL</strong>, <strong>B11</strong> and <strong>B12</strong> as the 
	features referenced in it. The features replaced namely. <strong>B6</strong>,
	<strong>B7</strong> however continue to exist, since referenced features are 
	not impacted by operations on a list.</p>
	<p>For <strong>attr4</strong>, the list size is also 3. It too has <strong>NULL</strong>,
	<strong>B11</strong> and <strong>B12</strong> as the features referenced as 
	aggregated under the parent feature. However, the features replaced namely.
	<strong>B8</strong>, <strong>B9</strong>, <strong>B10</strong> are destroyed. 
	As we have said before, an aggregated feature when replaced with another feature 
	or when set to NULL, is no longer aggregated and is eventually destroyed.</p>
	<p>The count of the features in the Applicative Container further reduces by
	<strong>3</strong>, since aggregated feature, <strong>B8, B9, B10</strong> no 
	longer exist.</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmExtFeatDeletionFromList<br>
</h3>
<p>To launch <code>CAAFmExtFeatDeletionFromList</code>, you will need to set up 
the build time environment, then compile <code>CAAFmExtDeletingFromAListAttr</code> 
along with its prerequisites, set up the run time environment, and then execute 
the sample. This is fully described in the referenced article [<a href="#References">2</a>].</p>
<p>mkrun -c &quot;<em><code>CAAFmExtDeletingFromAListAttr</code> Repository Server UserId 
Password SecurityCtx Environment</em>&quot;</p>
<p>Where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:Port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer(Since use case modifies PLM Data)</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment containing PLMProductDS (a PRODUCT&#39;s custo)</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmExtFeatDeletionFromList Code</h3>
<p><code>CAAFmExtFeatDeletionFromList </code>code is located in the <code>CAAFmExtDeletingFromAListAttr.m</code> 
use case module of the <code>CAAFeatureModelerExt.edu</code> framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAFeatureModelerExt.edu\CAAFmExtDeletingFromAListAttr.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the 
root folder of your API installation. It is made of a unique source file named
<code>CAAFmExtFeatDeletingFromAListAttr.cpp</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The logical steps of <code>CAAFmExtFeatDeletionFromList </code>are:</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Removing an index from a list">Removing an index of a List</a></li>
	<li><a href="#Replacing a value in a list">Replacing Value at an Index in the 
	List with NULL</a></li>
	<li><a href="#Assign a value to a list">Assigning a value to a List Attribute</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The fundamental steps to create a batch session with a connection to an input 
repository, is detailed in the article &quot;<strong>Connecting to V6 Server</strong>&quot; 
[<a href="#References">3</a>].</p>
<p>The Use Case creates a new PLM Technological Representation a subject discussed 
in the UC [<a href="#References">4</a>] with an applicative container.</p>
<p>It further creates the <strong>Credentials</strong> [<a href="#References">5</a>] 
to authorize access to the features defined in the <strong>CAAFmExtDeleteListSU</strong> 
catalog. </p>
<p>It next builds the data model as the one depicted in [<a href="#Fig.1">Fig.1</a>] 
above. The <strong>DeleteList</strong> feature in that data model has several list 
attributes which are valuated so that it now refers to several other features, either 
simply referencing them or aggregating those. The steps detailed ahead explain valuating 
the list. The <strong>DeleteList</strong> feature is represented by <code>FeatFacadeOnDeleteList</code>, 
a <em>CATFmFeatureFacade</em> type in our code.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Removing an index from a list"></a>Removing an Index of a List</h3>
<p>This step removes an index specified of a list.</p>
<pre class="code">CATFmAttributeName AttrNameListSpecNoArray (&quot;CAAFmExtListSpecNoArray&quot;);
rc = <strong>FeatFacadeOnDeleteList.RemovePosition(AttrNameListSpecNoArray,3)</strong>;</pre>
<p>The call to <code>RemovePosition()</code> of the <em>CATFmFeatureFacade</em> 
class removes an index position from a list. We invoke it on <code>FeatFacadeOnDeleteList</code>, 
a <em>CATFmFeatureFacade</em> type. The input arguments are:</p>
<ul>
	<li><strong>AttrNameListSpecNoArray</strong>, a <em>CATFmAttributeName</em> 
	type representing the list attribute <strong>CAAFmExtListSpecNoArray</strong></li>
	<li><strong>3</strong>, represents the index of the list which will be removed</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Replacing a value in a list"></a>Replacing a Value at an Index in the 
List with NULL</h3>
<p>This step replaces a value at an index in the list with NULL.</p>
<pre class="code">CATFmFeatureFacade NullFeatFacade(MyCredential,NULL);
AttrValue.SetFeature(NullFeatFacade);
rc = <strong>FeatFacadeOnDeleteList.ReplaceValueAtIndex(AttrNameListSpecNoArray,1,AttrValue)</strong>;</pre>
<p>The call to <code>ReplaceValueAtIndex()</code> of the <em>CATFmFeatureFacade</em> 
class accomplishes this. We invoke it on <code>FeatFacadeOnDeleteList</code>, a
<em>CATFmFeatureFacade</em> type. The input arguments are:</p>
<ul>
	<li><strong>AttrNameListSpecNoArray</strong>, a <em>CATFmAttributeName</em> 
	type representing the list attribute <strong>CAAFmExtListSpecNoArray</strong></li>
	<li><strong>1</strong>, represents the index in the list whose value will be 
	replaced with NULL</li>
	<li><strong>AttrValue</strong>, a <em>CATFmAttributeValue</em> type, represents 
	an AttributeValue equivalent of a <strong>NULL</strong> feature. This is realized 
	with a call to <code>SetFeature()</code> of the <em>CATFmAttributeValue</em> 
	class. Its input is:<ul>
		<li><strong>NullFeatFacade</strong>, a <em>CATFmFeatureFacade</em> type, 
		linked to a NULL feature. This is created with a call to the <em>CATFmFeatureFacade</em> 
		parameterized constructor whose inputs include the Credential object and 
		NULL.</li>
	</ul>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Assign a value to a list"></a>Assigning a Value to List Attribute</h3>
<p>We may assign a value to a list attribute with a predefined array in one step. 
This is realized with a call to <code>SetValue()</code> of the <em>CATFmFeatureFacade</em> 
class.</p>
<pre class="code"><strong>AttrValue.SetFeature(NullFeatFacade)</strong>;

CATFmAttributeValue AttrValueForDeleteBasic11;
AttrValueForDeleteBasic11.SetFeature(FeatFacadeOnDeleteBasic11);
<strong>AttrValue.Append(AttrValueForDeleteBasic11)</strong>;

CATFmAttributeValue AttrValueForDeleteBasic12;
AttrValueForDeleteBasic12.SetFeature(FeatFacadeOnDeleteBasic12);
<strong>AttrValue.Append(AttrValueForDeleteBasic12)</strong>;</pre>
<p>We create an Attribute Value with three values, a NULL feature, and two valid 
features, in that order.</p>
<p>It is realized with three calls listed below, in that order, on <code>AttrValue</code>, 
a <em>CATFmAttributeValue</em> type.</p>
<ul>
	<li>The <code>SetFeature()</code> of the <em>CATFmAttributeValue</em> class 
	whose only input is <code>NullFeatFacade</code>, a <em>CATFmFeatureFacade</em> 
	type, representing a <strong>NULL</strong> feature. It was created in the earlier 
	step.</li>
	<li>The call to <code>Append()</code> of the <em>CATFmAttributeValue</em> class, 
	whose only input is <code>AttrValueForDeleteBasic11</code>, a <em>CATFmAttributeValue</em> 
	type, representing the first feature. This input is created with a call to SetFeature() 
	of the <em>CATFmAttributeValue</em> class.</li>
	<li>The call to <code>Append()</code> of the <em>CATFmAttributeValue</em> class, 
	whose only input is <code>AttrValueForDeleteBasic12</code>, a <em>CATFmAttributeValue</em> 
	type, representing the second feature. This input is created as specified in 
	the earlier step.</li>
</ul>
<p>We next proceed to assign this value to our feature attribute of type list.</p>
<pre class="code">rc = <strong>FeatFacadeOnDeleteList.SetValue(AttrNameListSpecNoArray,AttrValue)</strong>;</pre>
<p>The call to <code>SetValue()</code> of the <em>CATFmFeatureFacade</em> class 
realizes assigning a value to a list attribute. It is invoked on <code>FeatFacadeOnDeleteList</code>, 
a <em>CATFmFeatureFacade</em> type. The input arguments are</p>
<ul>
	<li><strong>AttrNameListSpecNoArray</strong>, a <em>CATFmAttributeName</em> 
	type representing the list attribute <strong>CAAFmExtListSpecNoArray</strong>.</li>
	<li><strong>AttrValue</strong>, a <em>CATFmAttributeValue</em> type, representing 
	our predefined list, created in the earlier step.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>See the referenced article [<a href="#References">3</a>] for a detailed description 
of the steps involved to save the session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The UC illustrates working with a feature attribute of type List. A list attribute 
could be further have an array facet associated with it, in the OSM file of its 
associated StartUp. The array facet allows a list to refer to a NULL feature in 
it. The UC illustrates the impact on the values contained in a list of type array 
and non-array and those on the referenced features inside the applicative container, 
for different assignments to the list.</p>
<p>The UC primarily removes an index of a list, replaces a value in the list with 
NULL and assigns a value to a list. This is realized respectively with calls to
<code>RemovePositon()</code>, <code>ReplaceValueAtIndex()</code> and the <code>SetValue()</code> 
call of the <em>CATFmFeatureFacade</em> class.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAFmExtTaFeatureLifeCycle.htm">Understanding Feature Lifecycle</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAPstProductModelerExt/CAAPstUcCreateAndInstantiateTechnoRep.htm')">
		Creating PLM Technological Representation</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [July 2010]</td>
		<td>Creation</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
