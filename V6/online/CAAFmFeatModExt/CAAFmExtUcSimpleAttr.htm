<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Accessing  Feature Attributes</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Accessing Feature Attributes</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <code>CAAFmExtSimpleAttr</code> use case. 
		This use case illustrates the elementary steps involved to valuate a feature 
		attribute and further retrieve the values of the attribute.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmExtSimpleAttr Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAFmExtSimpleAttr Do</a></li>
				<li><a href="#How">How to Launch CAAFmExtSimpleAttr</a></li>
				<li><a href="#Where">Where to Find the CAAFmExtSimpleAttr Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The most important learning from this Use Case for a user is to set and retrieve 
the feature attribute values. The IP protection aspects will be mentioned too [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmExtSimpleAttr Use Case</h2>
<p><code>CAAFmExtSimpleAttr</code> is a use case of the <code>CAAFeatureModelerExt.edu</code> 
framework that illustrates <code>FeatureModelerExt</code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="What"></a>What Does CAAFmExtSimpleAttr Do</h3>
<p>The main steps are:</p>
<ul>
	<li>Creating a Credential to handle the Feature to create.</li>
	<li>Instantiating the &quot;<code>CAAOsmNovel</code>&quot; StartUp, defined in the catalog 
	&quot;<strong>CAAOsmCatalogSU</strong>&quot;. The catalog generation is detailed in the 
	use case [<a href="#References">2</a>].</li>
</ul>
<table>
	<caption><a name="Fig.1">Fig.1</a> StartUp Definition</caption>
	<tr>
		<td>
		<img alt="StartUp Definition" src="images/CAAOsmBook.gif" width="718" height="382"></td>
	</tr>
</table>
<ul>
	<li>Valuating and Retrieving its Author Attribute (own attribute).</li>
	<li>Valuating and Retrieving its Title Attribute (inherited from the <code>CAAOsmBook</code>).</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmExtSimpleAttr</h3>
<p>To launch <code>CAAFmExtSimpleAttr</code>, you will need to set up the build 
time environment, then compile <code>CAAFmExtSimpleAttr</code> along with its prerequisites, 
set up the run time environment, and then execute the sample. This is fully described 
in the referenced article [<a href="#References">3</a>].</p>
<pre>mkrun -c &quot;<em>CAAFmExtSimpleAttr Repository Server UserId Password SecurityCtx Environment</em>&quot;</pre>
<p>Where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:Port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment containing PLMProductDS (a PRODUCT&#39;s custo)</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmExtSimpleAttr Code</h3>
<p><code>CAAFmExtSimpleAttr</code> code is located in the <code>CAAFmExtSimpleAttr.m</code> 
use case module of the <code>CAAFeatureModelerExt.edu</code> framework:</p>
<p>InstallRootFolder\CAADoc\CAAFeatureModelerExt.edu\CAAFmExtSimpleAttr.m</p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the root 
folder of your API installation. It is made of a unique source file named <code>
CAAFmExtSimpleAttr.cpp</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are eight logical steps in <code>CAAFmExtSimpleAttr</code>:</p>
<ol>
	<li><a href="#Create_Doc">Prolog</a></li>
	<li><a href="#Creating Credentials">Creating Credentials</a></li>
	<li><a href="#Creating Attribute Names">Creating Attribute Names</a></li>
	<li><a href="#Instantiating CAAOsmNovel StartUp">Instantiating &quot;CAAOsmNovel&quot; 
	StartUp</a></li>
	<li><a href="#Valuating the Author Attribute Own Attribute">Valuating the Author 
	Attribute (Own Attribute)</a></li>
	<li><a href="#Retrieving the Author Attribute">Retrieving the Author Attribute</a></li>
	<li><a href="#Valuating and Retrieving Title Attribute Inherited Attribute">
	Valuating and Retrieving the Title Attribute (Inherited Attribute)</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<p>We will now comment each of those sections by looking at the code.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Create_Doc"></a>Prolog</h3>
<p>The fundamental steps to create a batch session with a connection to an input 
repository, is detailed in the article &quot;<strong>Connecting to V6 Server</strong>&quot; 
[<a href="#References">4</a>]. Then, the Use Case creates a PLM Technological Representation 
[<a href="#References">5</a>] with an applicative container [<a href="#References">6</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Creating Credentials"></a>Creating Credentials</h3>
<p>This step is not the crux of the use case, nevertheless it is a fundamental step. 
If you don&#39;t have a credential with appropriate authentication you could not instantiate 
the &quot;CAAOsmNovel&quot; StartUp, like you couldn&#39;t fully handle the feature coming from 
this Startup.</p>
<pre class="code">
...
CATFmCredentials MyCredential;
rc = MyCredential.<strong>RegisterAsApplicationBasedOn</strong>(CATFmFeatureModelerID,&quot;CAAFmExtFeatureModeler&quot;);
rc = MyCredential.<strong>RegisterAsCatalogOwner</strong>(&quot;CAAOsmCatalogSU&quot;,&quot;CAAOsmClientId&quot;);
...
</pre>
<p><code>MyCredential</code>, a <em>CATFmCredentials</em> class object will be used 
through this use case. Being the owner of the catalog defining the &quot;CAAOsmNovel&quot; 
you will have full right to and Get &amp; Set its attributes. <code>RegisterAsApplicationBasedOn</code><strong>
</strong>call is mandatory for the instantiation [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Instantiating CAAOsmNovel StartUp"></a>Instantiating CAAOsmNovel StartUp</h3>
<p>This step is explained in the &quot;Creating Feature&quot; [<a href="#References">7</a>].</p>
<pre class="code">...
CATUnicodeString MyStartUpType("`CAAOsmNovel`@`CAAOsmCatalogSU.CATfct`");
CATFmStartUpFacade NovelStartUpFacade(MyCredential, MyStartUpType);
CATFmFeatureFacade <strong>oFeatFacadeOnNovel</strong>(<strong>MyCredential</strong>);
rc = NovelStartUpFacade.<strong>InstantiateIn</strong>(MyContainerFacade,oFeatFacadeOnNovel);
...</pre>
<p><code>oFeatFacadeOnNovel</code> is the feature facade on the new feature. This 
facade contains the right credentials to be further fully handled.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Creating Attribute Names"></a>Creating Attribute Names</h3>
<p>We start the first core step.</p>
<pre class="code">...
CATFmAttributeName AuthorAttrName(&quot;Author&quot;);
CATFmAttributeName TitleAttrName(&quot;Title&quot;);
...</pre>
<p>The attribute is identified by a <em>CATFmAttributeName</em> class object. Each 
instance is created with as input the attribute&#39;s name. Here you retrieve &quot;Title&quot; 
and &quot;Author&quot; as depicted by [<a href="#Fig.1">Fig.1</a>]. if we have a class instead 
a basic string in the API to access the attribute&#39;s value, its because the <em>CATFmAttributeName</em> 
class keeps in internal data the attribute name as a key.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Valuating the Author Attribute Own Attribute"></a>Valuating the Author 
Attribute (Own Attribute)</h3>
<p>First we set the value of the attribute in a <em>CATFmAttributeValue</em> class 
object.</p>
<pre class="code">...
CATUnicodeString AuthorOfBook = &quot;Dumas&quot;;
<strong>CATFmAttributeValue</strong> AuthorAsFmValue(AuthorOfBook);
...</pre>
<p>In few cases (string, int, double) there is a <em>CATFmAttributeValue</em> constructor 
with the respective type. Otherwise you use a method of the <em>CATFmAttributeValue</em> 
class to valuate the object. See below with the Title attribute.</p>
<pre class="code">...
rc =  oFeatFacadeOnNovel.<strong>SetValue</strong>(AuthorAttrName,AuthorAsFmValue);
...</pre>
<p>The <code>SetValue</code> call of the <em>CATFmFeatureFacade</em> class valuates 
a feature attribute. This method is successful because the facade over the Novel 
feature, <code>oFeatFacadeOnNovel</code>, owns the accreditations to handle this 
attribute.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Retrieving the Author Attribute"></a>Retrieving the Author Attribute</h3>
<p>The process is the opposite of the valuation. First we get the value as a <em>
CATFmAttributeValue</em> class object:</p>
<pre class="code">...
CATFmAttributeValue RetrievedValueAsFmValue;
rc = oFeatFacadeOnNovel.<strong>GetValue</strong>(AuthorAttrName,RetrievedValueAsFmValue);  
...</pre>
<p>and then you decode it:</p>
<pre class="code">...
if ( SUCCEEDED(rc) 
{			
    CATUnicodeString oStrAuthor ;
    AuthorAsFmValue.<strong>GetString</strong>(oStrAuthor);
      
    if ( RetrievedValueAsFmValue<strong>==</strong>AuthorAsFmValue) )
    {
...</pre>
<p>Several things must be specified here:</p>
<ul>
	<li>The return of the GetString is not tested, because we know that our attribute 
	is a string, so the method will be always successful.</li>
	<li>We have used the == operator to test the Get &amp; Set values.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Valuating and Retrieving Title Attribute Inherited Attribute"></a>Valuating 
and Retrieving &quot;Title&quot; Attribute (Inherited Attribute)</h3>
<p>if you compare this code and the one for valuating the Author, it is fundamentally 
the same one.</p>
<pre class="code">CATUnicodeString TheThreeMusketeers = &quot;The Three Musketeers&quot;;
CATFmAttributeValue TitleAsFmValue(TheThreeMusketeers);
rc =  oFeatFacadeOnNovel.<strong>SetValue</strong>(TitleAttrName,TitleAsFmValue);</pre>
<p>So why this piece of code ? in fact you must be aware when you handle inherited 
attributes. To be the owner of the catalog defining CAAOsmNovel is just enough to 
handle the own attributes of this StartUp. To handle the inherited attribute you 
must be granted to access them. In our use case, the method is successful because 
CAAOsmBook, the StartUp&#39;s parent of CAAOsmNovel is defined in the same catalog as 
CAAOsmNovel.</p>
<p>It is the same rule for the <code>GetValue</code> method.</p>
<pre class="code">...			
rc = oFeatFacadeOnNovel.<strong>GetValue</strong>(TitleAttrName,RetrievedValueAsFmValue);  
...
</pre>
<p>Note: we have re-used the same <em>CATFmAttributeValue</em> object to retrieve 
the Title value and the Author value, <code>RetrievedValueAsFmValue</code>. It seems 
logic because Title and Author are both string attributes, but it will be OK too 
if the Title attribute was an integer. A <em>CATFmAttributeValue</em> class object 
can be reused with different type of attribute.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>See the referenced article [<a href="#References">4</a>] for a detailed description 
of the steps involved to save the session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The Use Case fundamentally deals with setting an attribute value and subsequently 
retrieving it.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAFmExtTaUnderstandingCredentials.htm">Understanding Credentials</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAOsmUcCatalogSU.htm">Creating StartUps in Catalogs</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAPstProductModelerExt/CAAPstUcCreateAndInstantiateTechnoRep.htm')">
		Creating PLM Technological Representation</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td><a href="CAAFmExtUcAppliCont.htm">Working with Applicative Containers</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td><a href="CAAFmExtUcInstantiation.htm">Creating Features</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [Jan 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
