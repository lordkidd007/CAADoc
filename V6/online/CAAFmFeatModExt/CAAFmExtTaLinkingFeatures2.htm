<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Understanding Link Attribute -2</title>
<style type="text/css">
.style1 {
	color: #FF0000;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Understanding Link Attribute - 2</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The documentation about the attribute of type links has been split in two parts: the first 
		article is 
		a presentation of the different kind of links [<a href="#References">1</a>], 
		while the second one -the current one- is about the APIs.</p>
		<ul>
			<li><a href="#CommonBehavior">Getting And Setting Attribute Value</a></li>
			<li><a href="#ValuatingLinkAttribute">Valuating Link Attribute</a></li>
			<li><a href="#Retrieving SpecObject-Component Value">Retrieving 
			SpecObject/Component Value</a></li>
			<li><a href="#Retrieving External Value">Retrieving External Value</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="CommonBehavior"></a>Getting And Setting Attribute Value</h2>
<p>The API to handle a link attribute are for a main part the same as 
the ones to handle the other attribute types. From a feature facade, a <em>CATFmFeatureFacade</em> 
class, you have as usual these APIs:</p>
<ul>
	<li><strong>Retrieval</strong>: GetValue / GetValueAtIndex</li>
	<li><strong>Valuation</strong>: SetValue / InsertValue / AppendValue / ReplaceValueAtIndex 
	/ RemovePosition</li>
</ul>
<p>All these methods handle the attribute value as a <em>CATFmAttributeValue</em> 
class. Here the typical piece of code to retrieve the value of an attribute 
(link or not) when 
using the <code>GetValue </code>method of <em>CATFmFeatureFacade</em> 
</p>
<pre class="code">...
CATFmFeatureFacade MyFeaturePointing ... ;
...
CATFmAttributeName MyAttName (&quot;MyName&quot;);
<strong>CATFmAttributeValue</strong> <strong>MyValueToReturn</strong>  ;
MyFeaturePointing.<strong>GetValue</strong>(MyAttName ,<strong>MyValueToReturn</strong> );
...</pre>
<p>and here the code to set a new value to the attribute:</p>
<pre class="code">...
CATFmFeatureFacade MyFeaturePointing ...;
...
CATFmAttributeName MyAttName (&quot;MyName&quot;);
<strong>CATFmAttributeValue</strong> <strong>MyValuetoSet</strong> ...  ;
MyFeaturePointing.<strong>SetValue</strong>(MyAttName,<strong>MyValueToSet</strong>);
...</pre>
<p>Then the way to 
use the <em>CATFmAttributeValue</em> class to set or get the attribute value is 
different according to the attribute link type. </p>
<p>For a <strong>specobject</strong> or <strong>component</strong> attribute, the 
methods on the <em>CATFmAttributeValue</em> class are the same:</p>
<ul>
	<li>Retrieval: <code>GetFeature</code></li>
	<li>Valuation: <code>SetFeature</code></li>
</ul>
<p>For an <strong>external</strong> attribute, the methods on the <em>CATFmAttributeValue</em> 
class are:</p>
<ul>
	<li>Retrieval: <code>GetExternalObject</code></li>
	<li>Valuation: <code>SetExternalObject</code></li>
</ul>
<p>These two methods, <code>GetExternalObject</code> and <code>SetExternalObject</code>, 
handle the attribute value (a complex object) as a <em>CATOmbObjectInContext</em> 
[<a href="#References">2</a>] class 
object.</p>
<p>Yu can notice that, except the methods to handle the attribute value, 
the methodology to handle a link attribute is the same as the one for 
the primitive attributes. Nevertheless since attributes are features or complex objects, the valuation 
and the retrieval methods require additional information.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2>
<a name="ValuatingLinkAttribute"></a>Valuating Link Attribute</h2>
<p>
First, don't forget that like for any type of attributes,&nbsp; modifying the 
feature data model requires that ALL feature containers of the stream are 
loaded. In other words, all methods editing a feature fail with E_FMLOADINGMODE 
as HRESULT. Now lets us present the other aspect of the valuation in the 
specific case of&nbsp; a link attribute valuation. </p>
<h4>
Replacing Existing Value </h4>
<p>When you valuate a link attribute with a new value, what does the old value become 
(if exists):</p>
<ul>
	<li><strong>specobject</strong> <strong>/ e</strong><strong>xternal</strong>: 
		the previous value (a feature/complex object) is not deleted. <li><strong>component : </strong>
	the previous value (a feature) is deleted .</li>
	</ul>
	 
<h4><a name="Removing the attribute value"></a>Removing the attribute value</h4>
<p>Your objective is to &quot;reset&quot; the value of an attribute. &quot;Reset&quot; meaning 
removing the old value.</p>
<p>When the attribute is a single value, (not a list of), to remove the existing 
value, you can use the  <code>SetFeature </code>(component/specobject)<code> </code>/<code> SetExternalObject </code> 
(external) methods of the <em>CATFmAttributeValue</em> class 
with NULL as argument. Then you use the <code>SetValue</code> method of the <em>CATFmFeatureFacade</em> 
class.&nbsp; </p>
<p>For a list, it is a little bit more tricky. Indeed we must take into account 
another parameter for the lists: their <strong>array facet</strong>, the one defined at the 
feature StartUp level [<a href="#References">3</a>] - Just a reminder, when a 
list has the array facet, the list can contain NULL values, otherwise it can 
never contain NULL values. It implies that some methods are forbidden as 
presented by the next table: </p>
<p><strong>For the specobject/component</strong> : </p>
<table >
	<tr>
		<th >Facet</th>
		<th >RemovePosition</th>
		<th >SetValue with NULL</th>
	</tr>
	<tr>
		<td >array</td>
		<td >possible</td>
		<td >possible</td>
	</tr>
	<tr>
		<td >not array</td>
		<td >possible</td>
		<td ><strong>Impossible</strong></td>
	</tr>
</table>
<p><code>RemovePosition</code> of <em>CATFmFeatureFacade</em> 
shrinks the list, so this method can be used whatever the array facet since a 
NULL value will be not introduced in the list. But the usage of <code>SetValue</code> 
(*) of <em>CATFmFeatureFacade </em>
with a list containing at least one NULL value is impossible when the attribute 
is defined with no array facet.</p>
<p>(*) it is also valid for <code> ReplaceValueAtIndex.</code></p>
<p><code>RemovePosition</code> as<code> SetValue(NULL)</code> deletes the 
aggregated feature.</p>
<p>For an <strong>external</strong>, the array facet does not exist, hence all 
APIs are possible:</p>
<ul>
	<li><code>RemovePosition</code> :&nbsp; it shrinks the list - The size of the size decreases.</li>
	<li>SetValue (with a list of NULL elements): no issue. </li>
	<li><code>ReplaceValueAtIndex (NULL, i) </code>: it changes the i value by 
	NULL. </li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertLinkToTop()</script>

<h2><a name="Retrieving SpecObject-Component Value"></a>Retrieving SpecObject/Component Value</h2>
<p>The retrieval of a link attribute value must be studied in different 
contexts. To illustrate the possible scenarios we use this data model.</p>
<p>&nbsp;</p>
<table>
	<caption><a name="Fig.1">Fig.1</a> SpecObject/Component Data 
	Model</caption>
	<tr>
		<td>
		<img src="images/CAAFmExtLinkAttribute01.png" width="428" height="187"></td>
	</tr>
</table>
 <p>Feature A is a feature having three attributes:</p>
<ul>
	<li><code>Attr1</code> is a specobject /component pointing/aggregating a feature 
	within the same container as Feature A</li>
	<li><code>Attr2</code> is a specobject /component pointing/ aggregating a feature 
	outside the container of Feature A</li>
	<li><code>Attr3</code> is a list of specobject (/component) 
	pointing/aggregating features inside and outside the container A</li>
</ul>
<p>Feature A is the pointing (or aggregating) feature,&nbsp; while the feature 
of the attribute is the Pointed/Aggregated feature. Let us describe by picture 
what you get according to these scenarios:</p>
<ul>
	<li>
	<a href="#The container of the Pointing / Pointed features are in session">
	Pointing/Aggregating and Pointed/Aggregated Features both exist in Session</a></li>
	<li><a href="#The container of the Pointed feature is not in session">
	Pointed/Aggregated Feature does not exist in session</a></li>
	<li>
	
	<a href="#The pointed feature is deleted when the pointing feature is in session">
	After a Pointed/Aggregated Feature is deleted</a></li>
</ul>
<ol>
	<li>
	<a name="The container of the Pointing / Pointed features are in session">
	</a><strong>Pointing/Aggregating and Pointed/Aggregated Features both exist in Session</strong><p>In session you have all objects shown by [<a href="#Fig.1">Fig.1</a>]. The <code>GetValue</code> of <em>CATFmFeatureFacade </em>
	is always successful (except of course usual errors as bad credential, 
	bad input,...), and the <code>GetFeature </code> method  of the <em>CATFmAttributeValue </em>
	is successful too. We can afford to be more accurate, since if the pointed/aggregated 
	feature exists, the exact HRESULT value 
	of <code>GetFeature </code> is <code>S_OK</code> (the value is not null).</p>
	<p style="height: 15px">If the pointed/aggregated feature does not exist, <code>GetValue</code> of <em>CATFmFeatureFacade</em> 
	is successfull, but<em> </em> <code>GetFeature </code>on the returned value returns <code>S_FALSE </code>(null feature)</p>
  </li>
	<li><a name="The container of the Pointed feature is not in session"></a>
	<strong>The Pointed/Aggregated feature is not in session
	</strong>
	<p>In session you only have the container A, the container B is 
	not loaded.&nbsp; [<a href="#Fig.1">Fig.1</a>] In fact this behavior should 
	not appear since when the PLM Representation Reference is switched in Edit 
	mode, all its container are loaded. So if you have container A, you have 
	container B too.</p>
	<li>
	<a name="The pointed feature is deleted when the pointing feature is in session">
	</a><strong>After a Pointed/ Aggregating feature is deleted </strong><p>In session you have all objects shown by [<a href="#Fig.1">Fig.1</a>]], 
	then you delete some pointed/aggregated features as 
	illustrated by 
	the next picture:</p>
	<table>
		<caption>Fig.2 Deletion when Pointing Container is in 
		Session</caption>
		<tr>
			<td><img src="images/CAAFmExtLinkAttribute02.png"></td>
		</tr>
	</table>
	<p>After the deletion, the data model differs in one aspect, the contents of 
	its list attribute, <strong>Attr3</strong>. Its contents will be governed by 
	the array facet of the attribute of type list. To remind, if the list attribute 
	does not contain the array facet, the list cannot have NULL values. </p>
	<p><strong>Not array mode</strong></p>
	<table>
		<caption><a name="Fig.3">Fig.3 </a>not array mode</caption>
		<tr>
			<td><img src="images/CAAFmExtLinkAttribute03.png"></td>
			<td>&nbsp;</td>
		</tr>
	</table>
	<ul>
		<li><code>Attr1</code> / <code>Attr2</code> (unique element) point to a 
		<strong>NULL</strong> value - Retrieving the value is successful (<code>GetValue</code> of <em>CATFmFeatureFacade</em> 
		is successful)<em>,</em> but the returned value being 
		NULL, the HRESULT of the <code>GetFeature </code> 
		method of <em>CATFmAttributeValue</em> returns <code>S_FALSE</code>.</li>
		<li><code>Attr3</code>&nbsp; is automatically shrunk by the number of 
		deleted features</li>
		 
	</ul>
	<p><strong>Array mode </strong></p>
	<table>
		<caption>Fig.4 array mode</caption>
		<tr>
			<td><img src="images/CAAFmExtLinkAttribute06.png"></td>
			<td>&nbsp;</td>
		</tr>
	</table>
	<ul>
		<li><code>Attr1</code> / <code>Attr2</code>&nbsp; (unique element) point to a 
		NULL value </li>
		<li><code>Attr3</code>&nbsp; keeps the same size, but contains NULL values </li>
		</ul>
		<p>In both the cases above (array mode) , retrieving the value is successful 
		(<code>GetValue</code> of <em>CATFmFeatureFacade </em>&nbsp;is 
		successful<em>) ,</em> but the returned value being 
		NULL, the HRESULT of the <code>GetFeature </code> 
		method of <em>CATFmAttributeValue</em> returns <code> S_FALSE</code>.</p>
		 
	</ol>
		<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Retrieving External Value"></a>Retrieving External Value</h2>
<p>You have a <em>CATFmAttributeValue</em> class object<em> </em>
representing the value of an external attribute. An external attribute value is 
retrieved as a <em>CATOmbObjectInContext</em> class object with a call to 
<code>GetExternalObject()</code> of the <em>CATFmAttributeValue</em> class.</p>
	<pre class="code">...
<strong>CATFmAttributeValue</strong> MyValueForExternal ... ;
<strong>CATOmbObjectInContext</strong> * MyResultObject= NULL;
<strong>HRESULT rc</strong> = MyValueForExternal.<strong>Get</strong><strong>ExternalObject</strong>(MyResultObject);
...</pre>
	<p>Even prior to reading the contents of the <em>CATOmbObjectInContext</em> 
	class instance, it is of interest to analyze the <strong>HRESULT</strong> returned by the 
	<code>GetExternalObject()</code> call.</p>
<ul>
	<li>If HRESULT is successful, <code>MyResultObject</code> is valid, hence 
	you can retrieve the different element which combine to create an Object In 
	Context</li>
	<li>If HRESULT is a failure case, <code>MyResultObject</code> 
	is NULL</li>
</ul>
<p>In case of error, you can decode the reason of the failure 
using the&nbsp;<code>CATOmbLinkStatusServices::GetLinkStatusFromRc</code> service. </p>
	<pre class="code">...
<strong>HRESULT <span class="style1">rc</span></strong> = MyValueForExternal.<strong>Get</strong><strong>ExternalObject</strong>(MyResultObject);
<strong>CATOmbLinkStatusServices::LinkResolutionStatus</strong> linkStat;
<strong>CATOmbLinkStatusServices::GetLinkStatusFromRc</strong>(<span class="style1"><strong>rc</strong></span>,linkStat);
...</pre>
	<p>The <code>GetLinkStatusFromRc</code> method decoded 
	HRESULT returned by&nbsp; <code>GetExternalObject</code> 
	method.</p>
	<table class="border1">
	<tr>
		<th>Code returned by<br>
		GetLinkStatusFromRc</th>
		<th>Explanation</th>
	</tr>
	<tr>
		<td><code>Target_Found</code></td>
		<td>The link was resolved successfully</td>
	</tr>
	<tr>
		<td><code>Component_NotInSession</code></td>
		<td>The PLM Representation Reference holding the target is not loaded</td>
	</tr>
	<tr>
		<td><code>Target_NotInSession</code></td>
		<td>The PLM Representation Reference holding the target is loaded but 
		not its containers, hence the target</td>
	</tr>
	<tr>
		<td><code>Relation_Broken</code></td>
		<td>The link points to a none existing PLM Representation Reference </td>
	</tr>
	<tr>
		<td><code>Link_Broken</code></td>
		<td>The link points to a none existing target </td>
	</tr>
	<tr>
		<td><code>InvalidLink </code></td>
		<td>The link is corrupted - almost rare</td>
	</tr>
</table>

<p>The use case &quot;Working with External Feature&quot; illustrates the 
different HRESULT value. [<a href="#References">4</a>]</p>
<p>A last information, for list of external attribute, the 
notion of array mode does not exist. Whatever the context, the list always 
remains 
with the same size. </p>
<p><strong>How to do if the result is </strong> <code><strong>Component_NotInSession 
</strong> </code>? </p>
<p>As of today, there is no feature modeler API to load in session the PLM 
Component. If you know it, you can always use the CATPLMIntegrationUse framework APIs, but usually you don't know the PLM object at the end of the links. 
So, interactively there is a solution. You can use Edit / <strong>Links &amp; 
Relations </strong>command. For all relations where the PLM Component is not 
loaded, you can use the command to open it. Lets us illustrate with three 
pictures issued from a Product Structure use case [<a href="#References">10</a>].</p>
<table>
	<caption>Fig.5</caption>
	<tr>
		<td>
		<img alt="External Link " src="images/CAAFmExtExternalLink01.png" width="312" height="101"></td>
	</tr>
</table>
<p>Just above, you can see two features, <code>External Line.1 </code>and <code>
External Instance.1</code>, both having a tk_external attribute to point to a 
target outside the PLM Component owning them. </p>
<table>
	<caption>Fig.6 Links &amp; Relations Command</caption>
	<tr>
		<td>
		<img alt="External Link Open" src="images/CAAFmExtExternalLink02.png"></td>
	</tr>
</table>
<p>The Links &amp; Relations command shows the relation below the selected 
Representation. You can observe that there are two relations, and both have the 
status &quot;no loaded&quot; ( the Open icon). If you select the Open command ( on right), 
you trigger the PLM Component loading (CAAPstINFProductRef.1). </p>
<table>
	<tr>
		<td>
		<img alt="External Link Resolved" src="images/CAAFmExtExternalLink03.png"></td>
	</tr>
</table>
<p>Now all PLM Components are in session. <code>CAAPstINFProductRef.1</code> ( 
Product Instance), its Product Reference (<code>CAAPstINFProductRef-ImportedAsNew 
33909</code>), the instance of PLM technological Representation, and finally the 
PLM technological Representation (<code>Representation40239-ImportedAsNew 
65720).</code> If you call again GetExternalObject you will get the targets.</p>
<script type="text/javascript">insertLinkToTop()</script><h2><a name="InShort"></a>In Short</h2>
<p>This article has introduced you how to deal with methods to valuate / to 
retrieve a value for a link attribute. </p>
<p>The referenced use cases, [<a href="#References">5</a>] 
for a simple attribute, and [<a href="#References">6</a>] for a list, will give 
you a concrete approach.</p>
<p>We invite the reader to refer to the dedicated use cases as those about 
component 
[<a href="#References">7</a>],&nbsp; specobject&nbsp; [<a href="#References">8</a>] 
, external&nbsp; [<a href="#References">9</a>] for a fair idea about these APIs.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAFmExtTaLinkingFeatures.htm">Understanding Link Attribute -1</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAOmbModelingProtocol/CAAOmbTaVirtualObject.htm')">
Understanding Link Concepts</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAOsmTaModelingStartUps.htm">Modeling StartUps</a></td>
	</tr>

<tr>
		<td>[4]</td>
		<td><a href="CAAFmExtUcWorkingWithExternalLinks.htm">Working with External Link</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAAFmExtUcFeatDeleteSingleValueAttribute.htm">Deletion for a Single Value attribute</a></td>
	</tr>

<tr>
		<td>[6]</td>
		<td><a href="CAAFmExtUcFeatDeletionFromList.htm">Deletion for a Multiple Value attribute</a></td>
	</tr>

	<tr>
		<td>[7]</td>
		<td><a href="CAAFmExtUcAggregatedAttr.htm">Setting up Aggregating Links</a></td>
	</tr>

<tr>
		<td>[8]</td>
		<td><a href="CAAFmExtUcReferencedAttr.htm">Making Referencing Links</a></td>
	</tr>
<tr>
		<td>[9]</td>
		<td><a href="CAAFmExtUcCreatingExternalLinks.htm">Creating External Link</a></td>
	</tr>
<tr>
		<td>[10]</td>
		<td><a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAPstProductModelerExt/CAAPstUcINFExternalLinks.htm')">
Establishing External Links</a></td>
	</tr>



</table>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <b>1</b> [Apr 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
