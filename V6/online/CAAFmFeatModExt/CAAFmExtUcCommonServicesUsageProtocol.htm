<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Declaring Common Services Protocol</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1>Declaring Common Services Protocol</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <code>CAAFmExtCommonServicesUsageProtocol</code> 
		use case. A feature supports the common routines (<strong>Update</strong>,
		<strong>Delete</strong>, <strong>Copy-Paste</strong>), typically governed 
		by the common services protocol defined in its OSM [<a href="#References">1</a>]. 
		The UC details the steps involved to define this protocol by updating the 
		feature OSM. It further illustrates the impact of this protocol on the support 
		that the feature provides for the common services.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmExtCommonServicesUsageProtocol Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAFmExtCommonServicesUsageProtocol 
				Do</a></li>
				<li><a href="#How">How to Launch CAAFmExtCommonServicesUsageProtocol</a></li>
				<li><a href="#Where">Where to Find the CAAFmExtCommonServicesUsageProtocol 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The UC teaches an end-user to:</p>
<ul>
	<li>Define a common services protocol explicitly for a feature. This involves 
	updating the feature OSM and thus understanding the relevance of the entries 
	in the OSM, in the process of defining the protocol</li>
	<li>Understand the impact of feature derivation on the common services protocol. 
	The derived feature inherits the protocol from up the inheritance hierarchy 
	or may choose to override it with its own explicitly defined one</li>
	<li>Understanding the impact of the protocol on feature behaviour, particularly 
	the feature support for the common services</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmExtCommonServicesUsageProtocol Use Case</h2>
<p><code>CAAFmExtCommonServicesUsageProtocol</code> is a use case of the <code>CAAFeatureModelerExt.edu</code> 
framework that illustrates <code>DataCommonProtocolUse</code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmExtCommonServicesUsageProtocol Do</h3>
<p>The <code>CAAFmExtCommonServicesUsageProtocol</code> Use Case defines a common 
services protocol.</p>
<p>The UC refers to the features listed in the table below. It defines and sets 
the common services protocol for each StartUp inside the <strong>CAAFmExtCatalogForCATIUseEntityUC.osm</strong> 
file, provided at the location <code>CAAFeatureModelerExt.edu/CAADoc/InputData</code>.</p>
<table class="fill">
	<tr>
		<th>StartUp</th>
		<th>Origin</th>
		<th>Protocol definition</th>
		<th>CATIUseEntity</th>
		<th>Update</th>
		<th>Delete </th>
		<th>Copy-Paste</th>
	</tr>
	<tr>
		<td>CAAFmExtUseEnt01</td>
		<td>From scratch</td>
		<td>Not explicitly declared</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>CAAFmExtUseEnt02 </td>
		<td>From scratch</td>
		<td>Explicitly declared</td>
		<td>true</td>
		<td>false</td>
		<td>true</td>
		<td>true</td>
	</tr>
	<tr>
		<td>CAAFmExtUseEnt03</td>
		<td>From scratch</td>
		<td>Shares protocol with feature 02</td>
		<td>true</td>
		<td>false</td>
		<td>true</td>
		<td>true</td>
	</tr>
	<tr>
		<td>CAAFmExtUseEnt04</td>
		<td>Derived from feat 01</td>
		<td>Default inherited from feat 01 (Not explicitly declared)</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>CAAFmExtUseEnt05</td>
		<td>Derived from feat 03</td>
		<td>Default inherited from feat 03 (inhertied an explicit protocol definition)</td>
		<td>true</td>
		<td>false</td>
		<td>true</td>
		<td>true</td>
	</tr>
	<tr>
		<td>CAAFmExtUseEnt06 </td>
		<td>Derived from feat 03</td>
		<td>Overrid the support for common routines in the inherited protocol</td>
		<td>true</td>
		<td>true</td>
		<td>false</td>
		<td>false</td>
	</tr>
	<tr>
		<td>CAAFmExtUseEnt07</td>
		<td>Derived from feat 03</td>
		<td>Overrid the inherited protocol to withdraw support for common routines</td>
		<td>false</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<p>The table depicts </p>
<ul>
	<li>The StartUp &#8220;<strong>CAAFmExtUseEnt01</strong>&#8221; does not have an explicit 
	declaration in the OSM. It implies the feature is not governed by a common services 
	protocol, meaning it does not support the common services </li>
	<li>The StartUp &#8220;<strong>CAAFmExtUseEnt02</strong>&#8221; has an explicit declaration 
	for the protocol in its OSM. It implements the CATIUseEntity Interface. It does 
	not support the common Update routines while it does support the Delete() and 
	the Copy-Paste() calls </li>
	<li>The StartUp &#8220;<strong>CAAFmExtUseEnt03</strong>&#8221; refers to the same protocol 
	as defined for &#8220;CAAFmExtUseEnt02&#8221;. As a result its support for the common routines 
	is exactly the same as for the previous case </li>
	<li>The StartUp &#8220;<strong>CAAFmExtUseEnt04</strong>&#8221; is derived from &#8220;CAAFmExtUseEnt01&#8221;. 
	It thus inherits the protocol , as well. But since &#8220;CAAFmExtUseEnt01&#8221; is without 
	a protocol, the derived feature too does not support the common routines
	</li>
	<li>The StartUp &#8220;<strong>CAAFmExtUseEnt05</strong>&#8221; is derived from &#8220;CAAFmExtUseEnt03&#8221;, 
	which defines its own protocol. As a result the derived feature supports the 
	common routines in exactly the same manner as the feature that it derives from
	</li>
	<li>The StartUp &#8220;<strong>CAAFmExtUseEnt06</strong>&#8221; is also derived from &#8220;CAAFmExtUseEnt03&#8221;. 
	It thus by default inherits the protocol, but overrides it . As a result you&#8217;ll 
	notice the support that the derived feature provides for the common services 
	is complementary to the support provided by the feature it derives from </li>
	<li>The StartUp &#8220;<strong>CAAFmExtUseEnt07</strong>&#8221; yet again derives from &#8220;CAAFmExtUseEnt03&#8221;. 
	It, by default, inherits the protocol but overrides it, by choosing to completely 
	withdraw the support for the common routines </li>
</ul>
<p>The Use case then instantiates a feature of each Startup and checks it for expected 
behaviors. The Step by step, explains how the OSM is built for each StartUp and 
displays the output of the executable. The code itself is detailed, as a part of 
another Use Case &quot;<strong>Working With Common Services</strong>&quot; [<a href="#References">7</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmExtCommonServicesUsageProtocol</h3>
<p>To launch <code>CAAFmExtCommonServicesUsageProtocol</code>, you will need to 
set up the build time environment, then compile <code>CAAFmExtCommonServicesUsageProtocol
</code>along with its prerequisites, set up the run time environment, and then execute 
the sample. This is fully described in the referenced article [<a href="#References">2</a>].</p>
<p>In addition, the UC also refers to the Catalogs <code>CAAFmExtCatalogForCATIUseEntityUC.CATfct</code>. 
The Catalogs are provided at the location</p>
<p><code>InstallRootDirectory\CAADoc\CAAFeatureModelerExt.edu\CNext\resources\graphic</code></p>
<p>and by running the mkrtv tool, user copies it to the WS RTV.</p>
<p>In addition we have also provided the OSM files corresponding to these catalogs 
at the location below, just in case you would like to generate the <code>CATfct</code> 
with the <code>CATfctEditorAssistant</code> tool [<a href="#References">3</a>]</p>
<p><code>InstallRootDirectory\CAADoc\CAAFeatureModelerExt.edu\InputData</code></p>
<p>The sample is executed as follows</p>
<p>mkrun -c &quot;<em>CAAFmExtImplementingCATIUseEntity Repository Server UserId Password 
SecurityCtx Environment </em>&quot;</p>
<p>Where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:Port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer(Since use case modifies PLM Data)</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment containing PLMProductDS (a PRODUCT&#39;s custo)</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmExtCommonServicesUsageProtocol Code</h3>
<p><code>CAAFmExtCommonServicesUsageProtocol</code> code is located in the <code>
CAAFmExtImplementingCATIUseEntity.m</code> use case module of the <code>CAAFeatureModelerExt.edu</code> 
framework:</p>
<p><code>InstallRootDirectory\CAADoc\CAAFeatureModelerExt.edu\</code><code>CAAFmExtImplementingCATIUseEntity.m</code></p>
<p>where InstallRootDirectory [2] is the root directory of your CAA installation. 
It is made of a unique source file named <code>CACAAFmExtImplementingCATIUseEntity.cpp</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The steps of <code>CAAFmExtCommonServicesUsageProtocol</code> are listed below:</p>
<ul>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Impact of common services protocol">Impact of Common Services 
	Protocol on Feature Behavior</a><ul>
		<li><a href="#SU with no protocol declared">StartUp with No Protocol declaration 
		in the OSM</a></li>
		<li><a href="#SU with an explicit protocol declaration">StartUp with an 
		explicit Protocol declaration in the OSM</a></li>
		<li><a href="#SU sharing protocol">StartUps sharing Protocol</a></li>
		<li>
		<a href="#SU inherited from a SU having no explicit protocol declaration">
		StartUp derived from a StartUp having no explicit Protocol declaration</a></li>
		<li><a href="#SU with an inherited protocol">StartUp with an Inherited Protocol
		</a></li>
		<li><a href="#Derived SU which redefines the inherited protocol">Derived 
		StartUp which redefines the Inherited Protocol</a></li>
		<li>
		<a href="#Derived StartUp which overrides the protocol, by withdrawing support to the common routines">
		Derived StartUp which overrides Protocol by withdrawing support to common 
		routines</a><br>
		</li>
	</ul>
	</li>
	<li><a href="#Epilog">Epilog</a></li>
</ul>
<p>We proceed to detail the steps involved.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>The steps to create a batch session with a connection to an input repository 
are detailed in a dedicated UC [<a href="#References">4</a>].</p>
<p>Next we create the Credentials object which authorize working with the Catalog 
specified in the &quot;<strong>What does the UC do</strong>&quot; section above. We append 
this Credentials [<a href="#References">5</a>] object with a credential which authorizes 
us to work with Applicative Containers defined by the Feature Modeler. </p>
<p>Finally the Use Case creates a new PLM Technological Representation a subject 
discussed in the UC [<a href="#References">6</a>] with an applicative container 
[<a href="#References">7</a>]. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Impact of common services protocol"></a>Impact of Common Services Protocol 
on Feature Behavior</h3>
<p>In the section that follows, we&#8217;ll study the scenarios the Common Services Protocol 
on Feature behaviour.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="SU with no protocol declared"></a>StartUp with No Protocol declaration 
in the OSM</h3>
<p>The StartUp &#8220;<strong>CAAFmExtUseEnt01</strong>&#8221; definition (contents of its OSM 
file) is seen below. You&#8217;ll notice, the definition does not have an explicit declaration 
for the Common Services Protocol. In other words, it does not define a protocol 
for our feature.</p>
<pre class="code"><strong>feature CAAFmExtUseEnt01 #startup</strong> {
				string strEnt01
				strEnt01=&quot;String Ent 01&quot;
			       }</pre>
<p>As a result:</p>
<ul>
	<li>Feature does not implement <em>CATIUseEntity</em>. Our call to <code>QI</code> 
	on our feature for <em>CATIUseEtity</em> returns FAILURE. As a result, none 
	of the common routines are supported.</li>
	<li>Nevertheless, our call to <code>Update()</code> and <code>DeleteSelf()</code> 
	on <code>oFeatFacadeOnUseEnt01</code>, a <em>CATFmFeatureFacade</em> type on 
	our feature facade, will return success. This is because the invocations on 
	a feature facade are independent of the protocol.</li>
</ul>
<p>The UC confirms this by invoking the calls listed above, on the feature &quot;<strong>CAAFmExtUseEnt01</strong>&quot;. 
The traces of the UC execution follow:</p>
<pre class="code">Success in instantiating a <strong>CAAFmExtUseEnt01</strong> feature 
The Container has 1 feature, as expected
<strong>QI CAAFmExtUseEnt01 feature for a CATIUseEntity type Fails, as expected</strong> 
<strong>Call to CATFmFeatureFacade::Update() call returns SUCCESS
Call to CATFmFeatureFacade::DeleteSelf() call returns SUCCESS</strong>
The Container has 0 feature, as expected
</pre>
<p>It is significant to note that the container has 1 feature to begin with it. 
Since the call to <code>DeleteSelf()</code> succeeds, the final count of features 
is 0.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="SU with an explicit protocol declaration"></a>StartUp with an explicit 
Protocol declaration in the OSM</h3>
<p>The StartUp &#8220;<strong>CAAFmExtUseEnt02</strong>&#8221; definition is depicted below. 
You&#8217;ll notice it has an explicit declaration for the Common Services Protocol in 
it. </p>
<pre class="code"><strong>feature CAAFmExtUseEnt02 #startup</strong> {				
			<strong>	#interface::CATIUseEntity = MyImplementation1</strong>
				string strEnt02
				strEnt02=&quot;String Ent 02&quot;
		       	       }
<strong>metadata MyImplementation1</strong> {
				implementInterface       = <strong>true</strong>
				implementUpdateAspect    = <strong>false</strong>
				implementDeleteAspect    = <strong>true</strong>
				implementCopyPasteAspect = <strong>true</strong>
			}</pre>
<p>The statement <strong>#interface::CATIUseEntity = MyImplementation1</strong>, 
depicts that the protocol for this feature occurs is defined in the Metadata block, 
&#8220;<strong>MyImplementation1</strong>&#8221;.</p>
<p>Let us now understand the significance of the entries that exist in this metadata 
block</p>
<ul>
	<li><strong>implementInterface</strong> set to <strong>true</strong>, implies 
	our feature implements the <em>CATIUseEntity</em> Interface. Thus, the call 
	to <code>QI</code> on our feature for <em>CATIUseEntity</em> returns SUCCESS.</li>
	<li><strong>implementUpdateAspect</strong> set to <strong>false</strong>, implies 
	the call to the static routines <code>Update()</code> and <code>IsUpTodate()</code> 
	of the <em>DataCommonProtocolServices</em> class, returns FAILURE. We illustrate 
	the failure of the latter call in our code.</li>
	<li><strong>implementDeleteAspect</strong> set to <strong>true</strong>. Thus 
	our call to the static routine <code>Delete()</code> and <code>CanBeDeleted()</code> 
	of the <em>DataCommonProtocolServices</em> class, returns SUCCESS.</li>
	<li><strong>implementCopyPasteAspect</strong> set to <strong>true.</strong> 
	Our call to the static routine <code>CopyAndPasteTo()</code> of the <em>DataCommonProtocolCCPServices</em> 
	class, returns SUCCESS.</li>
</ul>
<p>The UC confirms this by invoking the calls listed above, on the feature &quot;<strong>CAAFmExtUseEnt02</strong>&quot;. 
The traces of the UC execution follow:</p>
<pre class="code">Success in instantiating a <strong>CAAFmExtUseEnt02</strong> feature 
The Container has 2 feature, as expected
<strong>QI CAAFmExtUseEnt02 feature for a CATIUseEntity type succeeds, as expected 
DataCommonProtocolServices::IsUpTodate() call returns Failure, as expected
DataCommonProtocolCCPServices::CopyAndPasteTo() call returns Success, as expected
DataCommonProtocolServices::Delete() call returns Success, as expected
</strong>The Container has 2 feature, as expected</pre>
<p>It is significant to note that the container has 2 features to begin with. The 
StartUp &quot;<strong>CAAFmExtUseEnt02</strong>&quot; is instantiated twice. The first instance 
is for illustrating its support for common routines, and the other feature serves 
as a target feature for the copy-paste operation. </p>
<p>At the end, the container still has two features in it, since one got appended 
to it, after the copy paste call, but the source feature was destroyed in the next 
call to <strong>Delete</strong>. So, at the end we have the target feature and the 
copied feature (copy of <strong>CAAFmExtUseEnt02</strong>)</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="SU sharing protocol"></a>StartUps sharing Protocol</h3>
<p>The StartUp &#8220;<strong>CAAFmExtUseEnt03</strong>&#8221; has the same protocol as &#8220;<strong>CAAFmExtUseEnt02</strong>&#8221;, 
we discussed in the previous section. You&#8217;ll notice in the definition, it refers 
to the same metadata block &#8220;<strong>MyImplementation1</strong>&#8221;for its protocol 
defintion. In other words, this implies that features having the same protocol, 
can share the metadata block, defining the protocol.</p>
<pre class="code">
<strong>feature CAAFmExtUseEnt03 #startup</strong> {				
			<strong>	#interface::CATIUseEntity = MyImplementation1</strong>
				string strEnt03
				strEnt03=&quot;String Ent 03&quot;
		       	       }</pre>
<p>The behavior of the &#8220;<strong>CAAFmExtUseEnt03</strong>&#8221; feature, as far as its 
support to the common services is concerned, is exactly the same as for &#8220;<strong>CAAFmExtUseEnt02</strong>&#8221;.
</p>
<p>The UC confirms this by invoking the calls listed above, on the feature &quot;<strong>CAAFmExtUseEnt03</strong>&quot;. 
The traces of the UC execution follow</p>
<pre class="code">Success in instantiating a <strong>CAAFmExtUseEnt03</strong> feature 
The Container has 3 feature, as expected
<strong>QI CAAFmExtUseEnt03 feature for a CATIUseEntity type succeeds, as expected 
DataCommonProtocolServices::IsUpTodate() call returns Failure, as expected
DataCommonProtocolServices::Delete() call returns Success, as expected
DataCommonProtocolCCPServices::CopyAndPasteTo() call returns Success, as expected
</strong>The Container has 3 feature, as expected</pre>
<p>Please note to begin with we have three features. The target feature, the feature 
copied in the previous step (<strong>CAAFmExtUseEnt02</strong>) and the new feature 
(<strong>CAAFmExtUseEnt03</strong>). </p>
<p>At the end, we are left with 3 features. These are target feature, the feature 
copied in the previous step (copy of <strong>CAAFmExtUseEnt02</strong>) and the 
feature copied in the current step (copy of <strong>CAAFmExtUseEnt03</strong>).</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="SU inherited from a SU having no explicit protocol declaration">
</a>StartUp Inherited from a StartUp having no explicit Protocol declaration</h3>
<p>Our StartUp here derives from a StartUp. The latter has no explicit protocol 
declaration in it. </p>
<p>The StartUp &#8220;<strong>CAAFmExtUseEnt04</strong>&#8221; , as its definition depicts below, 
is derived from &#8220;<strong>CAAFmExtUseEnt01</strong>&#8221;. The StartUp &#8220;<strong>CAAFmExtUseEnt01</strong>&#8221; 
does not explicitly declare the protocol in its OSM file, as depicted in an earlier 
section.</p>
<pre class="code">
<strong>feature CAAFmExtUseEnt04 CAAFmExtUseEnt01 #startup</strong> {				
					<strong>	</strong>string strEnt04
						strEnt04=&quot;String Ent 04&quot;
				       	     }</pre>
<p>The fundamental rules of inheritance apply here, as well. The behaviour of the 
feature &#8220;<strong>CAAFmExtUseEnt04</strong>&#8221;, as far as its support for the common 
services is concerned, is exactly as &#8220;<strong>CAAFmExtUseEnt01</strong>&#8221;, the feature 
that it derives from. So, the call to <code>QI</code> for <em>CATIUseEntity</em> 
on our feature fails.</p>
<p>None of the common routines can thus be invoked on our feature. Nevertheless, 
the calls to <code>Update()</code> and <code>DeleteSelf()</code> on <code>oFeatFacadeOnUseEnt04</code>, 
a <em>CATFmFeatureFacade</em> type on our feature facade, returns success. The UC 
confirms this by invoking the calls listed above, on the feature &quot;<strong>CAAFmExtUseEnt04</strong>&quot;. 
The traces of the UC execution follow:</p>
<pre class="code">Success in instantiating a <strong>CAAFmExtUseEnt04</strong> feature 
The Container has 4 feature, as expected
<strong>Fails in QI on CAAFmExtUseEnt04 feature for a CATIUseEntity type, as expected
Call to CATFmFeatureFacade::Update() call returns SUCCESS
Call to CATFmFeatureFacade::DeleteSelf() call returns SUCCESS</strong>
The Container has 3 feature, as expected
</pre>
<p>Please note to begin with we have four features. The target feature, the features 
copied in the previous steps (copy of <strong>CAAFmExtUseEnt02 </strong>and<strong> 
CAAFmExtUseEnt03</strong>) and the new feature (<strong>CAAFmExtUseEnt04</strong>).
</p>
<p>At the end, we are left with 3 features. The target feature and the features 
copied in the previous steps (copy of <strong>CAAFmExtUseEnt02 </strong>and<strong> 
CAAFmExtUseEnt03</strong>)</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="SU with an inherited protocol"></a>StartUp with an Inherited Protocol</h3>
<p>Our StartUp in this case inherits its protocol from another StartUp up the inheritance 
hierarchy. The StartUp &#8220;<strong>CAAFmExtUseEnt05</strong>&#8221; derives from &#8220;<strong>CAAFmExtUseEnt03</strong>&#8221;, 
as depicted in its definition below.</p>
<pre class="code">
<strong>feature CAAFmExtUseEnt05 CAAFmExtUseEnt03 #startup</strong> {				
					<strong>	</strong>string strEnt05
						strEnt05=&quot;String Ent 05&quot; 
				       	     }</pre>
<p>The StartUp &#8220;<strong>CAAFmExtUseEnt03</strong>&#8221;, as we have seen in an earlier 
section, has the protocol explicitly declared in its OSM, inside the metadata block 
&quot;<strong>MyImplementation1</strong>&quot; </p>
<p>The behaviour of the feature &#8220;<strong>CAAFmExtUseEnt05</strong>&#8221; is exactly the 
same as &#8220;<strong>CAAFmExtUseEnt03</strong>&#8221;, the feature that it derives from, as 
far as its support for the common routines is concerned. In other words, for our 
current feature, the protocol is as defined by the metadata block &#8220;<strong>MyImplementation1</strong>&#8221;.</p>
<p>Hence a call to <code>QI</code> for <em>CATIUseEntity</em> on our feature returns 
SUCCESS. The call to the static routine <code>IsUpToDate()</code> of the <em>DataCommonProtocolServices</em> 
class, however fails. The calls to <code>Delete()</code> and <code>CopyAndPasteTo()</code> 
routines of the same class, return success. </p>
<p>The UC confirms this by invoking the calls listed above, on the feature &quot;<strong>CAAFmExtUseEnt05</strong>&quot;. 
The traces of the UC execution follow</p>
<pre class="code">Success in instantiating a <strong>CAAFmExtUseEnt05</strong> feature 
The Container has 4 feature, as expected
<strong>QI CAAFmExtUseEnt05 feature for a CATIUseEntity type succeeds, as expected 
DataCommonProtocolServices::IsUpToDate() call returns Failure, as expected
DataCommonProtocolServices::Delete() call returns Success, as expected
DataCommonProtocolCCPServices::CopyAndPasteTo() call returns Success, as expected</strong>
The Container has 4 feature finally, as expected
</pre>
<p>Please note to begin with we have four features. The target feature, the features 
copied in the previous steps (copy of <strong>CAAFmExtUseEnt02 </strong>and<strong> 
CAAFmExtUseEnt03</strong>) and the new feature (<strong>CAAFmExtUseEnt05</strong>).
</p>
<p>At the end, we are left with 4 features. The target feature and the copied features 
(copy of <strong>CAAFmExtUseEnt02, CAAFmExtUseEnt03 </strong>and<strong> CAAFmExtUseEnt05</strong>)</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Derived SU which redefines the inherited protocol"></a>Derived StartUp 
which redefines the Inherited Protocol</h3>
<p>Our StartUp, this time is derived from another StartUp. Our feature thus inherits 
its attributes, but however chooses to redefine (override) its common services protocol.</p>
<pre class="code">
<strong>feature CAAFmExtUseEnt06 CAAFmExtUseEnt03 #startup</strong> {				
			<strong>	#interface::CATIUseEntity = MyImplementation2</strong>
				string strEnt06
				strEnt03=&quot;String Ent 06&quot; }
<strong>metadata MyImplementation2</strong> {
				implementInterface       = <strong>true</strong>
				implementUpdateAspect    = <strong>true</strong>
				implementDeleteAspect    = <strong>false</strong>
				implementCopyPasteAspect = <strong>false</strong>
			}
</pre>
<p>Our StartUp &#8220;<strong>CAAFmExtUseEnt06</strong>&#8221; is derived from &#8220;<strong>CAAFmExtUseEnt03</strong>&#8221;. 
The derived feature &#8220;<strong>CAAFmExtUseEnt06</strong>&#8221; refers to the metadata block 
&#8220;<strong>MyImplementation2</strong>&#8221;, which defines its common services protocol. 
This declaration, thus overrides the protocol defined by the metadata block &#8220;<strong>MyImplementation1</strong>&#8221;, 
the one inherited by default.</p>
<p>An important point to note here is that it continues to support the common services 
since <strong>implementInterface</strong> is set to <strong>true</strong>, in the 
derived version of the protocol, as well. It overrides the support for the common 
routines as listed below:</p>
<ul>
	<li><strong>implementUpdateAspect</strong> to <strong>true</strong>, implying 
	the call to <code>IsUpTodate()</code> and <code>IsUpToDate()</code> returns 
	success</li>
	<li><strong>implementDeletAspect</strong> to <strong>false</strong>, implying 
	the call to <code>Delete()</code> and <code>CanBeDeleted()</code> fails</li>
	<li>However, the call to <code>DeleteSelf(</code>) on <code>oFeatFacadeOnUseEnt06</code>, 
	a <em>CATFmFeatureFacade</em> type on our feature facade works fine</li>
	<li><strong>implementCopyPasteAspect</strong> to <strong>false</strong>, implying 
	the call to <code>CopyAndPasteTo()</code> also fails</li>
</ul>
<p>The UC confirms this by invoking the calls listed above, on the feature &quot;<strong>CAAFmExtUseEnt06</strong>&quot;. 
The traces of the UC execution follow</p>
<pre class="code">Success in instantiating a <strong>CAAFmExtUseEnt06</strong> feature 
The Container has 5 feature, as expected
<strong>QI CAAFmExtUseEnt06 feature for a CATIUseEntity type Succeeds, as expected 
DataCommonProtocolServices::IsUpToDate() call returns Success, as expected
DataCommonProtocolServices::Delete() call returns Failure, as expected
DataCommonProtocolCCPServices::CopyAndPasteTo() call returns Failure, as expected</strong>
The Container has still 5 feature, as expected
<strong>CATFmFeatureFacade::DeleteSelf() call returns Success</strong>
TThe Container has only 4 feature left in it, as expected
</pre>
<p>Please note to begin with we have four features. The target feature, the features 
copied (copy of <strong>CAAFmExtUseEnt02</strong>, <strong>CAAFmExtUseEnt03
</strong>and<strong> CAAFmExtUseEnt05</strong>) and the new feature (<strong>CAAFmExtUseEnt06</strong>). 
Since Copy Paste and Delete both fail, the count of features remains 5. </p>
<p>Finally after the call to <strong>DeleteSelf</strong> succeeds, the count reduces 
to 4. The features which finally remain are the target feature and the copied features 
(copy of <strong>CAAFmExtUseEnt02, CAAFmExtUseEnt03 </strong>and<strong> CAAFmExtUseEnt05</strong>)</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3>
<a name="Derived StartUp which overrides the protocol, by withdrawing support to the common routines">
</a>Derived StartUp which overrides the Protocol, by withdrawing support to the 
common routines</h3>
<p>This time, our StartUp is derived but withdraws support for the common services 
by overriding the derived protocol.</p>
<pre class="code">
<strong>	feature CAAFmExtUseEnt07 CAAFmExtUseEnt03 #startup</strong> {				
				<strong>	#interface::CATIUseEntity = MyImplementation3</strong>
					string strEnt06
					strEnt03=&quot;String Ent 06&quot;
			       	       }
<strong>metadata MyImplementation3</strong> {
				implementInterface       = <strong>false</strong>
			}
</pre>
<p>The StartUp &#8220;<strong>CAAFmExtUseEnt07</strong>&#8221; derives from &#8220;<strong>CAAFmExtUseEnt03</strong>&#8221;. 
The derived feature <strong>CAAFmExtUseEnt07</strong> refers to the metadata block 
&#8220;<strong>MyImplementation3</strong>&#8221; for its definition of the protocol, thus overriding 
the inherited protocol defined by the block &#8220;<strong>MyImplementation1</strong>&#8221;.</p>
<p>The new protocol sets <strong>implementInterface</strong> to <strong>false</strong>. 
The call to <code>QI</code> for <em>CATIUseEntity</em> on our feature, this time, 
returns failure. As a result, it no longer supports the common services. </p>
<p>The traces of the UC execution that follow confirm this</p>
<pre class="code">Success in instantiating a <strong>CAAFmExtUseEnt07</strong> feature 
<strong>QI CAAFmExtUseEnt07 feature for a CATIUseEntity type fails, as expected</strong> 
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>See the referenced article [<a href="#References">4</a>] for a detailed description 
of the steps involved to save the session.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>A feature supports the common routines (Update, Delete, CCP exposed by the DataCommonProtocol*Services 
framework), typically governed by the common services protocol defined in its OSM 
[<a href="#References">1</a>].</p>
<p>The UC illustrates the steps involved to define this protocol for a feature in 
its OSM file. It may either be explicitly defined in the OSM or a feature may inherit 
it, through the inheritance hierarchy. </p>
<p>It further illustrates the impact of this protocol on the support that a feature 
extends for the common services. Thus, a feature may either extend support to some 
or all the common routines or may choose to not support the common services altogether, 
entirely governed by the protocol defined for it.</p>
<p>The methodology to use the common services protocol is a subject of the next 
UC [<a href="#References">7</a>]</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAFmExtTaCommonProtocol.htm">Understanding the Common Services 
		Protocol</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAOsmTaModelingStartUps.htm">Creating StartUps in Catalogs</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAAFmExtUcWorkingWithCredentials.htm">Working with Credentials</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAPstProductModelerExt/CAAPstUcCreateAndInstantiateTechnoRep.htm')">
		Creating PLM Technological Representation</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td><a href="CAAFmExtUcAppliCont.htm">Working with Applicative Containers</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td><a href="CAAFmExtUcWorkingWithCommonServices.htm">Working with Common 
		Services</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [May 2010]</td>
		<td>Creation</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
