<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Browsing the Fastener Product</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Browsing the Fastener Product</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <code><strong>CAAFstFastenerBrowse</strong></code> 
		use case. It browses a fastener product which fastens two parts.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFstFastenerBrowseUse Case</a>
			<ul>
				<li><a href="#What">What Does CAAFstFastenerBrowseDo</a></li>
				<li><a href="#How">How to Launch CAAFstFastenerBrowse</a></li>
				<li><a href="#Where">Where to Find the CAAFstFastenerBrowse Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you fastener modeler capabilities. The primary 
learnings from the use case are:</p>
<ul>
	<li>Browsing the contents of fastener product which fastens the two parts.</li>
	<li>Browsing the necessary attributes on the fastener instance.</li>
	<li>Browsing of fastener components and getting its links to fastener instance.</li>
	<li>Browsing of engineering connection associated to fastener instance and getting 
	the fastener realization &amp; zone fasten links.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFstFastenerBrowseUse Case</h2>
<p>CAAFstFastenerBrowse is a use case of the CAAPLMFmaModelerItf.edu framework that 
illustrates CATPLMFmaModelerInterfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFstFastenerBrowseDo</h3>
<p>The use case is an interactive command that prompts the user to select a fastener 
product and then it browses the selected fastener product for fastener information. 
In the figure below, the fastener product is marked by red box. Successful browsing 
of fastener product message is displayed to the user on the top right side.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1 Browsing of Fastener Product</caption>
	<tr>
		<td>
		<img alt="Browsing of Fastener Product" src="images/CAAFstFastenerBrowse_Output.jpg"></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFstFastenerBrowse</h3>
<p>To launch CAAFstFastenerBrowse, you will need to set up the build time environment, 
then compile CAAPLMFmaModelerItf.edu FW along with its prerequisites, set up the 
run time environment, and then execute the use case [<a href="#References">2</a>].</p>
<p>Before launching the use case, import the product structure data in your database:
<strong>CAAPLMFmaModelerItf.edu\InputData\CAAFstFastenerModeler.3dxml</strong></p>
<p>The steps for launching the use case is as follows:</p>
<ul>
	<li>Launch the CATIA session.</li>
	<li>Load the Mechanical -&gt; Assembly Design workbench.</li>
	<li>Right click on the assembly workshop to locate the CAA Fastener Samples 
	toolbar(See <a href="#Fig2">Fig: 2</a>).</li>
	<li>Launch the &quot;Browse Fastener&quot; use case interactive command.</li>
	<li>Select &quot;CAAFstFastenerProduct1.1&#39; as the fastener product to browse. On 
	successful browsing of fastener product, a corresponding message is displayed 
	to the user (See <a href="#Fig3">Fig: 3</a>).</li>
</ul>
<table>
	<caption><a name="Fig2"></a>Fig 2: CAA Fastener Samples Toolbar</caption>
	<tr>
		<td>
		<img alt="CAA Fastener Samples Toolbar" src="images/CAAFstUseCaseCommands_Toolbar.jpg"></td>
	</tr>
</table>
<table>
	<caption><a name="Fig3"></a>Fig 3: Selection of CAAFstFastenerProduct1.1</caption>
	<tr>
		<td>
		<img alt="Selection of CAAFstFastenerProduct1.1" src="images/CAAFstFastenerProduct1_Selection_Browse.jpg"></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFstFastenerBrowse Code</h3>
<p>The CAAFstFastenerBrowse use case is made of:</p>
<ul>
	<li>A main program located in the CAAFstFastenerBrowse.m module of the CAAPLMFmaModelerItf.edu 
	framework:
	<p><code>InstallRootFolder\CAADoc\CAAPLMFmaModelerItf.edu\CAAFstFastenerBrowse.m\</code></p>
	</li>
	<li>A service class located in the CAAFstFastenerServices.m module of the CAAPLMFmaModelerItf.edu 
	framework:
	<p><code>InstallRootFolder\CAADoc\CAAPLMFmaModelerItf.edu\CAAFstFastenerServices.m\</code></p>
	</li>
	<li>An input 3D XML data file <strong>CAAFstFastenerModeler.3dxml</strong> located 
	in a subdirectory of the CAAPLMFmaModelerItf.edu framework:
	<p><code>InstallRootFolder\CAADoc\CAAPLMFmaModelerItf.edu\InputData\</code></p>
	</li>
</ul>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are twelve logical steps in CAAFstFastenerBrowse:</p>
<ol>
	<li><a href="#Step1">Building the State Chart Diagram</a></li>
	<li><a href="#Step2">Selecting the Fastener Product to Browse</a></li>
	<li><a href="#Step3">Getting the Fastener Type &amp; Reference Representation</a></li>
	<li><a href="#Step4">Getting the Fastener Diameter</a></li>
	<li><a href="#Step5">Getting the Fastener Classification Information</a></li>
	<li><a href="#Step6">Getting the Fastener Engineering Connection</a></li>
	<li><a href="#Step7">Getting the Fastener Connected Parts</a></li>
	<li><a href="#Step8">Getting the Fastener Component Parts</a></li>
	<li><a href="#Step9">Getting the Fastener Components Information</a></li>
	<li><a href="#Step10">Getting the Fastener Coupling &amp; Zones Information</a></li>
	<li><a href="#Step11">Getting the Fastener Location Information</a></li>
	<li><a href="#Step12">Displaying the Execution Status Message of the Command</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Building the State Chart Diagram</h3>
<table>
	<caption><a name="Fig4"></a>Fig 4: CAAFstFastenerBrowse: State Chart Diagram</caption>
	<tr>
		<td>
		<img alt="CAAFstFastenerBrowse: State Chart Diagram" src="images/CAAFstFastenerBrowse_StateChartDiagram.jpg"></td>
	</tr>
</table>
<pre class="code">...
void CAAFstFastenerBrowseCmd::BuildGraph ()
{
  // Create States
  CATDialogState * pInitialState = GetInitialState(&quot;InitialState&quot;);
  CATAssert(pInitialState != NULL);  

  // Create selection agents
  _pFastenerAgent = new CATPathElementAgent (&quot;FastenerAgent&quot;);
  _pFastenerAgent-&gt;AddElementType(CATIPrdObject::ClassName());
  _pFastenerAgent-&gt;SetBehavior(CATDlgEngWithPrevaluation | CATDlgEngWithPSOHSO);  

  //Add agents to states
  pInitialState-&gt;AddDialogAgent(_pFastenerAgent);  

  //Define transitions
  AddTransition (pInitialState,
                 NULL,
                 AndCondition(IsOutputSetCondition(_pFastenerAgent),
                              Condition((ConditionMethod)&amp;CAAFstFastenerBrowseCmd::IsFastenerProduct)),
                 Action((ActionMethod)&amp;CAAFstFastenerBrowseCmd::Act_FastenerSelection));    
}
...</pre>
<p>In this section:</p>
<ol>
	<li>A <code>CATPathElementAgent</code> is created to get the selected fastener 
	product and <em>CATIPrdObject</em> is the corresponding element type added.</li>
	<li>During each selection, the code checks whether the selected product is a 
	fastener product. In case of non-fastener product selection, an error is displayed 
	and the user has to re-select the fastener product.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Selecting the Fastener Product to Browse</h3>
<pre class="code">...
CATBoolean CAAFstFastenerBrowseCmd::IsFastenerProduct (void * ipData)
{
  CATBoolean bIsFastenerProduct = FALSE;
  CATAssert(NULL != _pFastenerAgent);
  
  _pFastener = _pFastenerAgent-&gt;GetElementValue();
  //Check if it is fastener product
  CAAFstFastenerServices::IsFastenerProduct(bIsFastenerProduct, _pFastener);   
  if((TRUE == bIsFastenerProduct) &amp;&amp; (NULL != _pFastener))
  {
    _pFastener-&gt;AddRef();
  }
  //Indicate incorrect selection to the user
  else
  { 
    CATUnicodeString strStatus = &quot;Selected product is not a fastener product! \nPlease select fastener product only&quot;;
    CAAFstFastenerServices::DisplayPopup(strStatus, &quot;Fastener Browse&quot;);
  }

  _pFastenerAgent-&gt;InitializeAcquisition();
  return bIsFastenerProduct;  
}
...</pre>
<p>If the selected product is a fastener product, then it is stored during the fastener 
condition check. Otherwise the user is informed of the incorrect selection of product.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Getting the Fastener Type &amp; Reference Representation</h3>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowsePLMFastener (CATBaseUnknown ** opFstRefRepFeature)
{
  HRESULT rc = E_INVALIDARG;  
  if((NULL == _pFastener) || (NULL == opFstRefRepFeature))  return rc;

  CATIFmaPLMFastenerBrowse * piFmaPLMFastenerBrowse = NULL;
  *opFstRefRepFeature = NULL;
  rc = _pFastener-&gt;QueryInterface(IID_CATIFmaPLMFastenerBrowse, (void**)&amp;piFmaPLMFastenerBrowse);
  if(SUCCEEDED(rc))
  {
    CATUnicodeString strFastenerType = &quot;&quot;;
    rc = piFmaPLMFastenerBrowse-&gt;GetPLMFastenerTypeID(strFastenerType);
    if(SUCCEEDED(rc))
    {
      ...
      rc = piFmaPLMFastenerBrowse-&gt;GetFastenerRefRepresentationFeature(opFstRefRepFeature, IID_CATBaseUnknown);
      ...
    }
    ...
  }
  return rc;
}
...</pre>
<p>The stored fastener product can be browsed with the <em>CATIFmaPLMFastenerBrowse</em> 
interface. It provides:</p>
<ol>
	<li>The fastener type through the <code>GetPLMFastenerTypeID</code> method.</li>
	<li>The Fastener Reference Representation Feature <em>Fst_Spot_Assy</em> through 
	the <code>GetFastenerRefRepresentationFeature</code> method.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Getting the Fastener Diameter</h3>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowseFastenerDiameter()
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == _pFastener)  return rc;

  CATIFmaPLMSpotFastenerBrowse * piFmaPLMSpotFastenerBrowse = NULL;
  rc = _pFastener-&gt;QueryInterface(IID_CATIFmaPLMSpotFastenerBrowse, (void**)&amp;piFmaPLMSpotFastenerBrowse);
  if(SUCCEEDED(rc))
  {
    double dDiameter = 0.0;
    rc = piFmaPLMSpotFastenerBrowse-&gt;GetDiameter(&amp;dDiameter);    
    ...
  }
  return rc;
}
...
</pre>
<p>The Fastener diameter information is stored on the fastener product since it 
is a PLM attribute. The <em>CATIFmaPLMSpotFastenerBrowse</em> interface, implemented 
on the fastener product, retrieves the fastener diameter value.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Getting the Fastener Classification Information</h3>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowseFastenerClassification(CATBaseUnknown * ipFstFeature)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFstFeature)  return rc;
  
  CATIFmaClassificationBrowse * piFmaClassificationBrowse = NULL;
  rc = ipFstFeature-&gt;QueryInterface(IID_CATIFmaClassificationBrowse, (void**)&amp;piFmaClassificationBrowse);
  if(SUCCEEDED(rc))
  {
    CATICkeParm * pParm = NULL;
    CATUnicodeString strParameterID = &quot;AssemblyType&quot;;
    rc = piFmaClassificationBrowse-&gt;GetClassParameterValue(&amp;pParm, strParameterID);
    if(SUCCEEDED(rc) &amp;&amp; (NULL != pParm))
    {
      CATUnicodeString strParameterValue = &quot;&quot;;
      CATICkeInst_var spCkeInst = pParm-&gt;Value();
      if(NULL_var != spCkeInst)
      {
        strParameterValue = spCkeInst-&gt;AsString();
        ...
      }
      ...
    }
    ...
  }
  return rc;
}
...</pre>
<p>Since the classification information is stored on the <em>Fst_Spot_Assy</em> 
feature, the fastener classification browse <em>CATIFmaClassificationBrowse</em>
interface is obtained from it. The <code>GetClassParameterValue</code> method then 
retrieves the value for any given classification parameter as applicable to the 
corresponding fastener type.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Getting the Fastener Engineering Connection</h3>
<pre class="code">...
CATIFmaPLMNavigationServices * piFmaPLMNavigationServices = NULL;        
rc = CATFmaServicesAccess::CreateFmaNavigationServices(&amp;piFmaPLMNavigationServices);
...</pre>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowseEngineeringConnection(CATBaseUnknown ** opEngineeringConnection, 
                                                             CATIFmaPLMNavigationServices * ipFmaPLMNavigationServices)
{
  HRESULT rc = E_INVALIDARG;
  if((NULL == opEngineeringConnection) || (NULL == ipFmaPLMNavigationServices))  return rc;

  *opEngineeringConnection = NULL;
  CATLISTP(CATBaseUnknown) * pListConnections = NULL;
  rc = ipFmaPLMNavigationServices-&gt;GetFastenConnectionsFromFastenerInstance(&amp;pListConnections, _pFastener);
  if(SUCCEEDED(rc) &amp;&amp; (NULL != pListConnections) &amp;&amp; (1 == pListConnections-&gt;Size()))
  {
    CATBaseUnknown * pEngineeringConnection = (*pListConnections)[1];
    if(NULL != pEngineeringConnection)
    {
      ...
      rc = pEngineeringConnection-&gt;QueryInterface(IID_CATBaseUnknown, (void**)opEngineeringConnection);      
      pEngineeringConnection-&gt;Release();
      pEngineeringConnection = NULL;      
    }
    ...
  }
  else
  {
    rc = E_FAIL;
  }
  return rc;
}...</pre>
<p>The engineering connection can be retrieved using the <code>CATIFmaPLMNavigationServices::GetFastenConnectionsFromFastenerInstance(...)</code> 
method. Note that the <code>CATIFmaPLMNavigationServices</code> interface is obtained 
using the <code>CATFmaServicesAccess</code> factory services.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Getting the Fastener Connected Parts</h3>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowseConnectedParts(CATBaseUnknown * ipEngineeringConnection, 
                                                      CATIFmaPLMNavigationServices * ipFmaPLMNavigationServices)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFmaPLMNavigationServices)  return rc;

  CATLISTP(CATBaseUnknown) * pListParts = NULL;
  rc = ipFmaPLMNavigationServices-&gt;GetPartsFromFastenConnection(&amp;pListParts, ipEngineeringConnection);
  if(SUCCEEDED(rc) &amp;&amp; (NULL != pListParts))
  {
	...
    for(int index=1; index&lt;=pListParts-&gt;Size(); index++)
    {    
      CATOmbObjectInContext * pPartOmbObject = (CATOmbObjectInContext*)((*pListParts)[index]);
      if(NULL != pPartOmbObject)
      {
        CATLISTP(CATIPLMComponent) lPathOfInstances;
        if(SUCCEEDED(pPartOmbObject-&gt;GetPathOfInstances(lPathOfInstances)))
        {
          int listSize = lPathOfInstances.Size();
          if(0 &lt; listSize)
          {
            CATIPLMComponent * piPLMComponent = lPathOfInstances[listSize];
            if(NULL != piPLMComponent)
            {
              CATIAlias_var spPartAlias(piPLMComponent);
              if(NULL_var != spPartAlias)
              {
                CATUnicodeString strPartAlias = spPartAlias-&gt;GetAlias();
                ...
              }
              ...
            }
          }
        }
        ...     
      }    
    }
    ...
  }
  else
  {
    rc = E_FAIL;
  }
  return rc;
}
...</pre>
<p>The fastener connected parts are retrieved using the <code>CATIFmaPLMNavigationServices::GetPartsFromFastenConnection(...)</code> 
method.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Getting the Fastener Component Parts</h3>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowseFastenerComponentParts(CATIFmaPLMNavigationServices * ipFmaPLMNavigationServices)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFmaPLMNavigationServices)  return rc;

  CATLISTP(CATBaseUnknown) * pListComponents = NULL;
  rc = ipFmaPLMNavigationServices-&gt;GetComponentsFromFastenerInstance(&amp;pListComponents, _pFastener);
  if(SUCCEEDED(rc) &amp;&amp; (NULL != pListComponents))
  {
    ...
    for(int index=1; index&lt;=pListComponents-&gt;Size(); index++)
    {      
      CATOmbObjectInContext * pComponentOmbObject = (CATOmbObjectInContext*)((*pListComponents)[index]);
      if(NULL != pComponentOmbObject)
      {
        CATLISTP(CATIPLMComponent) lPathOfInstances;
        if(SUCCEEDED(pComponentOmbObject-&gt;GetPathOfInstances(lPathOfInstances)))
        {
          int listSize = lPathOfInstances.Size();
          if(0 &lt; listSize)
          {
            CATIPLMComponent * piPLMComponent = lPathOfInstances[listSize];
            if(NULL != piPLMComponent)
            {
              CATIAlias_var spComponentAlias(piPLMComponent);
              if(NULL_var != spComponentAlias)
              {
                CATUnicodeString strComponentAlias = spComponentAlias-&gt;GetAlias();
                ...
              }
              ...
            }
          }
        }
        ...     
      }    
    }    
    ...
  }
  else
  {
    rc = E_FAIL;
  }
  return rc;
}
...</pre>
<p>The fastener component parts are retrieved using the <code>CATIFmaPLMNavigationServices::BrowseFastenerComponentParts(...)</code> 
method.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the Fastener Components Information</h3>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowseFastenerComponents (CATBaseUnknown * ipFstFeature)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFstFeature)  return rc;

  CATIFmaComponentsBrowse * piFmaComponentsBrowse = NULL;
  rc = ipFstFeature-&gt;QueryInterface(IID_CATIFmaComponentsBrowse, (void**)&amp;piFmaComponentsBrowse);
  if(SUCCEEDED(rc))
  {
    int nbFastenerComponents = 0;
    rc = piFmaComponentsBrowse-&gt;GetComponentAccessCount(&amp;nbFastenerComponents);
    if(SUCCEEDED(rc))
    {
      ...
      for(int index=1; index&lt;=nbFastenerComponents; index++)
      {
        CATIFmaComponentBrowse * piFmaComponentBrowse = NULL;
        rc = piFmaComponentsBrowse-&gt;GetComponentAccess((CATBaseUnknown**)&amp;piFmaComponentBrowse, index); 
        if(SUCCEEDED(rc) &amp;&amp; (NULL != piFmaComponentBrowse))
        {
          ...
          rc = BrowseFastenerComponent(piFmaComponentBrowse, index);
          piFmaComponentBrowse-&gt;Release();
          piFmaComponentBrowse = NULL;
        }
      }
    }
    piFmaComponentsBrowse-&gt;Release();
    piFmaComponentsBrowse = NULL;
  }

  return rc;
}
...
HRESULT CAAFstFastenerBrowseCmd::BrowseFastenerComponent (CATIFmaComponentBrowse * ipFmaComponentBrowse, int &amp; iCompIndex)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFmaComponentBrowse)  return rc;
      
  //1. Component ID
  CATUnicodeString strComponentID = &quot;&quot;;
  rc = ipFmaComponentBrowse-&gt;GetComponentID(strComponentID);
  if(SUCCEEDED(rc))
  {
    ...
    //2. Component Shape
    CATUnicodeString strShapeDefinition = &quot;&quot;;
    rc = ipFmaComponentBrowse-&gt;GetShapeDefinitionValue(strShapeDefinition);
    if(SUCCEEDED(rc))
    {
      ...
      //3. Component Link
      CATOmbObjectInContext * piComponentOmbObject = NULL;
      rc = ipFmaComponentBrowse-&gt;GetLinked3DComponentShape(&amp;piComponentOmbObject);      ...
    }
  }  
  return rc;
}
...</pre>
<p>The fastener components (<em>Fst_Component</em> features) are retrieved using 
the <em>CATIFmaComponentsBrowse</em> interface which is implemented on the Fastener 
Representation feature (<em>Fst_SpotAssy</em>). The <em>CATIFmaComponentsBrowse</em> 
interface provides:</p>
<ol>
	<li>The total number of fastener components using the <code>GetComponentAccessCount(...)</code> 
	method.</li>
	<li>The access to the fastener component feature <em>Fst_Component</em> using 
	the <code>GetComponentAccess(...)</code> method.</li>
</ol>
<p>The attributes of each fastener component feature <em>Fst_Component</em> can 
then be browsed using the <em>CATIFmaComponent</em> interface. This interface provides:</p>
<ol>
	<li>The component type using the <code>GetComponentID(...)</code> method.</li>
	<li>The component shape definition value using the <code>GetShapeDefinitionValue(...)</code> 
	method.</li>
	<li>The component link information using the <code>GetLinked3DComponentShape(...)</code> 
	method.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Getting the Fastener Coupling &amp; Zones Information</h3>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowseCouplingAndZones (CATBaseUnknown * ipEngineeringConnection)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipEngineeringConnection)  return rc;

  //1. Access Coupling
  CATIFmaCouplingBrowse* piFmaCouplingBrowse = NULL;  
  CATIFmaConnectionServices * piFmaConnectServices = NULL;
  rc = CATFmaServicesAccess::CreateFmaConnectionServices(&amp;piFmaConnectServices);
  if( SUCCEEDED(rc) &amp;&amp; (NULL != piFmaConnectServices))
  {
    rc = piFmaConnectServices-&gt;GetFstCoupling((CATBaseUnknown **) &amp;piFmaCouplingBrowse, ipEngineeringConnection, IID_CATIFmaCouplingBrowse);
    ...
  }

  //2. Zone Information
  if(SUCCEEDED(rc) &amp;&amp; (NULL != piFmaCouplingBrowse))
  {
    ...
    int zoneCount = 0;
    //2.a. Zone Count
    rc = piFmaCouplingBrowse-&gt;GetZoneAccessCount(&amp;zoneCount);
    if(SUCCEEDED(rc))
    {
      ...
      //2.b. Zone
      for(int index=1; index&lt;=zoneCount; index++)
      {
        CATIFmaJoinedZoneAccessBrowse * piFmaJoinedZoneAccessBrowse = NULL;
        //2.b.i. Zone access
        rc = piFmaCouplingBrowse-&gt;GetZoneAccess((CATBaseUnknown**)&amp;piFmaJoinedZoneAccessBrowse, index, IID_CATIFmaJoinedZoneAccessBrowse);
        if(SUCCEEDED(rc) &amp;&amp; (NULL != piFmaJoinedZoneAccessBrowse))
        {
          ...
          
          //2.b.ii Fasten Link
          CATOmbObjectInContext * piZoneOmbObject = NULL;
          rc = piFmaJoinedZoneAccessBrowse-&gt;GetJoinedZone(&amp;piZoneOmbObject);          ...

          //2.b.iii. Zone Numbering Attribute
          CATICkeParm * piNumParm = NULL;
          rc = piFmaJoinedZoneAccessBrowse-&gt;GetNumberingAttribute(&amp;piNumParm);
          if(SUCCEEDED(rc) &amp;&amp; (NULL != piNumParm))
          {
            CATUnicodeString strParameterValue = &quot;&quot;;
            CATICkeInst_var spCkeInst = piNumParm-&gt;Value();
            if(NULL_var != spCkeInst)
            {
              strParameterValue = spCkeInst-&gt;AsString();
              ...
            }
            ...
          }
          ...
        }
      }
    }

     //3. Fastener Realization
    CATOmbObjectInContext * piFstInstanceOmbObject = NULL;
    rc = piFmaCouplingBrowse-&gt;GetFastenerRealization(&amp;piFstInstanceOmbObject);    ...
  }

  return rc;
}
...</pre>
<p>The coupling and zones information stored on the engineering connection is retrieved 
in the following manner:</p>
<ol>
	<li>Getting the <em>Fst_Coupling</em> feature using the <code>CATIFmaConnectionServices::GetFstCoupling(...)</code>. 
	Note that the <code>CATIFmaConnectionServices</code> interface is obtained using 
	the <code>CATFmaServicesAccess</code> factory services.</li>
	<li>Getting the coupling browse <code>CATIFmaCouplingBrowse</code> interface 
	on the <em>Fst_Coupling</em> feature:
	<ol>
		<li>Accessing the zone count using the <code>CATIFmaCouplingBrowse::GetZoneAccessCount(...)</code> 
		method.</li>
		<li>Retrieving the zone information:
		<ol>
			<li>Accessing the zone feature <em>Fst_Zone</em> using the <code>CATIFmaCouplingBrowse::GetZoneAccess(...)</code> 
			method. This method returns the zone browse <em>CATIFmaJoinedZoneAccessBrowse</em> 
			interface directly by passing the interface IID.</li>
			<li>Getting the zone fasten link using the <code>CATIFmaJoinedZoneAccessBrowse::GetJoinedZone(...)</code> 
			method.</li>
			<li>Getting the zone numbering attribute information using the <code>
			CATIFmaJoinedZoneAccessBrowse::GetNumberingAttribute(...)</code> method.</li>
		</ol>
		</li>
	</ol>
	</li>
	<li>Getting the fastener realization link information using the <code>CATIFmaCouplingBrowse::GetFastenerRealization(...)</code>method.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Getting the Fastener Location Information</h3>
<pre class="code">...
HRESULT CAAFstFastenerBrowseCmd::BrowseFastenerLocation(CATBaseUnknown * ipFstFeature)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFstFeature)  return rc;

  CATIFmaSpotLocationBrowse * piFmaSpotLocationBrowse = NULL;
  rc = ipFstFeature-&gt;QueryInterface(IID_CATIFmaSpotLocationBrowse, (void**)&amp;piFmaSpotLocationBrowse); 
  if(SUCCEEDED(rc))
  {
    CATMathAxis * pFstAxis = NULL;
    rc = piFmaSpotLocationBrowse-&gt;GetIJKAxis(&amp;pFstAxis, NULL);
    if(SUCCEEDED(rc) &amp;&amp; (NULL != pFstAxis))
    {
      ...
      CATMathVector IVector, JVector, KVector;
      pFstAxis-&gt;GetFirstDirection(IVector);
      pFstAxis-&gt;GetSecondDirection(JVector);
      pFstAxis-&gt;GetThirdDirection(KVector);
      ...
    }
    piFmaSpotLocationBrowse-&gt;Release();
    piFmaSpotLocationBrowse = NULL;
  }
  return rc;
}
...</pre>
<p>Since the location information of the fastener is stored in the Fastener Representation
<em>Fst_SpotAssy</em> feature, the location browse <em>CATIFmaSpotLocationBrowse</em> 
interface is obtained from it. Using the <code>CATIFmaSpotLocationBrowse ::GetIJKAxis(...)</code> 
method, the fastener IJK Axis System can be retrieved.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Displaying the Execution Status Message of the Command</h3>
<pre class="code">...
HRESULT CAAFstFastenerServices::DisplayPopup(CATUnicodeString iStrMessage, 
                                             CATUnicodeString iStrTitle,
                                             CATDlgStyle iStyle)
{
  if( 0 &lt; iStrMessage.GetLengthInChar() )
  {    
    CATApplicationFrame* pAppFrame = CATApplicationFrame::GetFrame();
    if (NULL != pAppFrame)
    {
      CATDlgNotify* pDlgNotify = new CATDlgNotify(pAppFrame-&gt;GetApplicationDocument(), &quot;Notif&quot;, iStyle);
      if (NULL != pDlgNotify)
      {        
        pDlgNotify-&gt;DisplayBlocked(iStrMessage, iStrTitle);
        pDlgNotify-&gt;RequestDelayedDestruction();
      }
      ...
    }
  }
  return S_OK;
}
...</pre>
<p>When the command execution ends, the user is informed whether the fastener product 
browsing is a success or failure.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case demonstrates how the user can browse through the fastener product 
using the different fastener APIs and search for the required information on fasteners.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAFMATaMdlOverView.htm">Fastener Modeler Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2009]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
