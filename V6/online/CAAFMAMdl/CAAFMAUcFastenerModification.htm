<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Modifying the Fastener Product</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Modifying the Fastener Product</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <code><strong>CAAFstFastenerModification</strong></code> 
		use case. It modifies the fastener product which fastens two parts. </p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFstFastenerModificationUse Case</a>
			<ul>
				<li><a href="#What">What Does CAAFstFastenerModificationDo</a></li>
				<li><a href="#How">How to Launch CAAFstFastenerModification</a></li>
				<li><a href="#Where">Where to Find the CAAFstFastenerModification 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you fastener modeler capabilities. The primary 
learnings from the use case are:</p>
<ul>
	<li>Modifying the contents of fastener product which fastens the two parts.</li>
	<li>Modifying the necessary attributes on the fastener instance.</li>
	<li>Modifying of fastener components and its links to fastener instance.</li>
	<li>Modifying of engineering connection associated to fastener instance and 
	the fastener realization &amp; zone fasten links.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFstFastenerModificationUse Case</h2>
<p>CAAFstFastenerModification is a use case of the CAAPLMFmaModelerItf.edu framework 
that illustrates CATPLMFmaModelerInterfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFstFastenerModificationDo</h3>
<p>The use case is an interactive command that prompts the user to select a fastener 
product and then it modifies the fastener product information on the console. In 
the figure below, the fastener product is marked by red box. Successful modification 
of fastener product message is displayed to the user on the top right side.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1 Browsing of Fastener Product</caption>
	<tr>
		<td>
		<img alt="Browsing of Fastener Product" src="images/CAAFstFastenerModification_Output.jpg"></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFstFastenerModification</h3>
<p>To launch CAAFstFastenerModification, you will need to set up the build time 
environment, then compile CAAPLMFmaModelerItf.edu FW along with its prerequisites, 
set up the run time environment, and then execute the use case [<a href="#References">2</a>].</p>
<p>Before launching the use case, import the product structure data in your database:
<strong>CAAPLMFmaModelerItf.edu\InputData\CAAFstFastenerModeler.3dxml</strong></p>
<p>The steps for launching the use case is as follows:</p>
<ul>
	<li>Launch the CATIA session.</li>
	<li>Load the Mechanical -&gt; Assembly Design workbench.</li>
	<li>Right click on the assembly workshop to locate the CAA Fastener Samples 
	toolbar(See <a href="#Fig2">Fig: 2</a>).</li>
	<li>Launch the &quot;Modify Fastener&quot; use case interactive command.</li>
	<li>Select &quot;CAAFstFastenerProduct1.1&#39; as the fastener product to modify. On 
	successful modification of fastener product, a corresponding message is displayed 
	to the user (See <a href="#Fig3">Fig: 3</a>).</li>
</ul>
<table>
	<caption><a name="Fig2"></a>Fig 2: CAA Fastener Samples Toolbar</caption>
	<tr>
		<td>
		<img alt="CAA Fastener Samples Toolbar" src="images/CAAFstUseCaseCommands_Toolbar.jpg"></td>
	</tr>
</table>
<table>
	<caption><a name="Fig3"></a>Fig 3: Selection of CAAFstFastenerProduct1.1</caption>
	<tr>
		<td>
		<img alt="Selection of CAAFstFastenerProduct1.1" src="images/CAAFstFastenerProduct1_Selection_Modification.jpg"></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFstFastenerModification Code</h3>
<p>The CAAFstFastenerModification use case is made of:</p>
<ul>
	<li>A main program located in the CAAFstFastenerModification.m module of the 
	CAAPLMFmaModelerItf.edu framework:
	<p><code>InstallRootFolder\CAADoc\CAAPLMFmaModelerItf.edu\CAAFstFastenerModification.m\</code></p>
	</li>
	<li>A service class located in the CAAFstFastenerServices.m module of the CAAPLMFmaModelerItf.edu 
	framework:
	<p><code>InstallRootFolder\CAADoc\CAAPLMFmaModelerItf.edu\CAAFstFastenerServices.m\</code></p>
	</li>
	<li>An input 3D XML data file <strong>CAAFstFastenerModeler.3dxml</strong> located 
	in a subdirectory of the CAAPLMFmaModelerItf.edu framework:
	<p><code>InstallRootFolder\CAADoc\CAAPLMFmaModelerItf.edu\InputData\</code></p>
	</li>
</ul>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are eight logical steps in CAAFstFastenerModification:</p>
<ol>
	<li><a href="#Step1">Building the State Chart Diagram</a></li>
	<li><a href="#Step2">Selecting the Fastener Product to Modify</a></li>
	<li><a href="#Step3">Modifying the Fastener Type</a></li>
	<li><a href="#Step4">Modifying the Fastener Diameter</a></li>
	<li><a href="#Step5">Modifying the Fastener Classification Information</a></li>
	<li><a href="#Step6">Modifying the Fastener Coupling &amp; Zones Information</a></li>
	<li><a href="#Step7">Modifying the Fastener Location Information</a></li>
	<li><a href="#Step8">Displaying the Execution Status Message of the Command</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Building the State Chart Diagram</h3>
<table>
	<caption><a name="Fig4"></a>Fig 4: CAAFstFastenerModification: State Chart Diagram</caption>
	<tr>
		<td>
		<img alt="CAAFstFastenerModification: State Chart Diagram" src="images/CAAFstFastenerModification_StateChartDiagram.jpg"></td>
	</tr>
</table>
<pre class="code">...
void CAAFstFastenerModificationCmd::BuildGraph ()
{
  // Create States
  CATDialogState * pInitialState = GetInitialState(&quot;InitialState&quot;);
  CATAssert(pInitialState != NULL);  

  // Create selection agents
  _pFastenerAgent = new CATPathElementAgent (&quot;FastenerAgent&quot;);
  _pFastenerAgent-&gt;AddElementType(CATIPrdObject::ClassName());
  _pFastenerAgent-&gt;SetBehavior(CATDlgEngWithPrevaluation | CATDlgEngWithPSOHSO);  

  //Add agents to states
  pInitialState-&gt;AddDialogAgent(_pFastenerAgent);  

  //Define transitions
  AddTransition (pInitialState,
                 NULL,
                 AndCondition(IsOutputSetCondition(_pFastenerAgent),
                              Condition((ConditionMethod)&amp;CAAFstFastenerModificationCmd::IsFastenerProduct)),
                 Action((ActionMethod)&amp;CAAFstFastenerModificationCmd::Act_FastenerSelection));    
}
...</pre>
<p>In this section:</p>
<ol>
	<li>A <code>CATPathElementAgent</code> is created to get the selected fastener 
	product and <em>CATIPrdObject</em> is the corresponding element type added.</li>
	<li>During each selection, the code checks whether the selected product is a 
	fastener product. In case of non-fastener product selection, an error is displayed 
	and the user has to re-select the fastener product.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Selecting the Fastener Product to Modify</h3>
<pre class="code">...
CATBoolean CAAFstFastenerModificationCmd::IsFastenerProduct (void * ipData)
{
  CATBoolean bIsFastenerProduct = FALSE;
  CATAssert(NULL != _pFastenerAgent);
  
  _pFastener = _pFastenerAgent-&gt;GetElementValue();
  //Check if it is fastener product
  CAAFstFastenerServices::IsFastenerProduct(bIsFastenerProduct, _pFastener);   
  if((TRUE == bIsFastenerProduct) &amp;&amp; (NULL != _pFastener))
  {
    _pFastener-&gt;AddRef();
  }
  //Indicate incorrect selection to the user
  else
  { 
    CATUnicodeString strStatus = &quot;Selected product is not a fastener product! \nPlease select fastener product only&quot;;
    CAAFstFastenerServices::DisplayPopup(strStatus, &quot;Fastener Browse&quot;);
  }

  _pFastenerAgent-&gt;InitializeAcquisition();
  return bIsFastenerProduct;  
}
...</pre>
<p>If the selected product is a fastener product, then it is stored during the fastener 
condition check. Otherwise the user is informed of the incorrect selection of product.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Modifying the Fastener Type</h3>
<pre class="code">...
HRESULT CAAFstFastenerModificationCmd::ModifyFastenerType(CATIFmaPLMNavigationServices * ipFmaPLMNavigationServices)
{
  HRESULT rc = E_INVALIDARG; 
  if((NULL == _pFastener) || (NULL == ipFmaPLMNavigationServices))  return rc;
   
  //1. Get the old components from fastener instance
  CATLISTP(CATBaseUnknown) * pListComponents = NULL;
  rc = ipFmaPLMNavigationServices-&gt;GetComponentsFromFastenerInstance(&amp;pListComponents, _pFastener);       
    
  //2. Replace the fastener type
  if(SUCCEEDED(rc))
  {
    CATIFmaTypeReplace * piFmaTypeReplace = NULL;
    rc = _pFastener-&gt;QueryInterface(IID_CATIFmaTypeReplace, (void**)&amp;piFmaTypeReplace);
    if(SUCCEEDED(rc))
    {
      CATUnicodeString strFeatureType2 = &quot;CAAFst_SpotAssy&quot;;
      CATUnicodeString strProcessType1 = &quot;Rivet&quot;;
      CATUnicodeString strProcessType2 = &quot;CL0&quot;; 
      CATUnicodeString strCatalogName = &quot;CAAFstSpotAssyCatalog.CATfct&quot;;
      CATUnicodeString strClientID = &quot;FstCAAClientID&quot;;
      rc = piFmaTypeReplace-&gt;ReplaceReferenceFastenerType(strFeatureType2,
                                                          strProcessType1,
                                                          strProcessType2,
                                                          strCatalogName,
                                                          strClientID);
      ...
    }
  }
  
  //3. Delete old components
  if(SUCCEEDED(rc))
  {
    //3a. Get reference fastener product
    CATIPrdObject_var spFastenerInstance(_pFastener); 
    CATIPLMProducts_var spFastenerRefPLMProducts = NULL_var; 
    if(NULL_var != spFastenerInstance)
    {      
      CATBaseUnknown * pFastenerReference = NULL;
      rc = spFastenerInstance-&gt;GetReferenceObject(pFastenerReference);      
      if((SUCCEEDED(rc)) &amp;&amp; (NULL != pFastenerReference))
      {
        spFastenerRefPLMProducts = pFastenerReference;
        ...
      }
    }
    
    //3b. Remove components
    if((NULL != pListComponents) &amp;&amp; (NULL_var != spFastenerRefPLMProducts))
    {
      for(int index=1; index&lt;=pListComponents-&gt;Size(); index++)
      {       
        CATOmbObjectInContext * pComponentOmbObject = (CATOmbObjectInContext*)((*pListComponents)[index]);
        if(NULL != pComponentOmbObject)
        {
          CATLISTP(CATIPLMComponent) lPathOfInstances;
          if(SUCCEEDED(pComponentOmbObject-&gt;GetPathOfInstances(lPathOfInstances)))
          {
            int listSize = lPathOfInstances.Size();
            if(0 &lt; listSize)
            {
              CATIPLMComponent * pCurrentComponent = lPathOfInstances[listSize];
              if(NULL != pCurrentComponent)
              {
                CATIPLMProducts_var spCurrentComponent(pCurrentComponent);                
                rc = spFastenerRefPLMProducts-&gt;RemoveProduct(spCurrentComponent);
                ...
              }
            }
          }
          ...
        }       
      }
      ...
    }
  }

  //4. Create new components
  CATListValCATBaseUnknown_var lFastenerComponents;
  if(SUCCEEDED(rc))
  {
    rc = CAAFstFastenerServices::CreateComponents(lFastenerComponents, _pFastener);
  }

  //5. Set the component links
  if(SUCCEEDED(rc) &amp;&amp; (0 &lt; lFastenerComponents.Size()))
  {
    rc = CAAFstFastenerServices::SetComponentLinks(lFastenerComponents, _pFastener);
    ...
  }
  return rc;
}
...</pre>
<p>In this section, reference type of the PLM Fastener is modified. The navigation 
service <em>CATIFmaPLMNavigationServices</em> which is retrieved as shown in the 
user case(<a href="#3">Browsing the Fastener Product</a>), is a pre-requisite for 
this fastener type modification. The different steps are:</p>
<ol>
	<li>Getting the existing fastener component parts from the stored fastener product 
	(refer <a href="#3">Browsing the Fastener Product</a>).</li>
	<li>Modifying the fastener reference type using the <code>CATIFmaTypeReplace::ReplaceReferenceFastenerType(...)</code> 
	method. The <code>strFeatureType2, strProcessType1, strProcessType2, strCatalogName, 
	strClientID</code> parameters need to be passed to the method. Note that the
	<em>CATIFmaTypeReplace</em> interface is implemented on the fastener product.</li>
	<li>Removing the existing components from the fastener product using the product 
	structure API since the new fastener type may have different component information.</li>
	<li>Creating new components under the fastener product. Refer <a href="#3">Browsing 
	the Fastener Product</a> use case for instantiating the new components. Note 
	that in this use case, the new fastener feature type has the same components 
	as that of the old fastener feature type.</li>
	<li>Setting the component links to its fastener instance. Refer <a href="#3">
	Browsing the Fastener Product</a> use case on this point.</li>
</ol>
<p><strong>Note</strong></p>
<ul>
	<li>In this use case, the <em>Fst_SpotAssy</em> CAA Fastener feature start-up is 
	located in the <em>CAAFstSpotAssyCatalog.CATfct</em> catalog file which can be found 
	at <code>InstallRootFolder\intel_a\code\resources\graphic</code>.</li>
	<li>For the successful modification of fastener product, please make sure that the
	<code>Fastener Standard</code> directory is set to <code>InstallRootFolder\intel_a\reffiles\FstStandards\Custom</code>.
	It can be set in <code>Tools\Options\Infrastructure\Fastener Infrastructure\General</code> tab page.</li>
	<table>
	<tr>
		<td>
		<img alt="Fastener Product created" src="images/CAAFstToolsOptions.jpg"></td>
	</tr>
    </table>
	This directory contains customized Fastener standard file (<em>Fst_Standard.txt</em>)
	and the reference fastener type file (<em>Fst_SpotAssy!CAAFst_SpotAssy_Rivet!CL0.txt</em>)</li>
</ul>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Modifying the Fastener Diameter</h3>
<pre class="code">...
HRESULT CAAFstFastenerServices::SetFastenerDiameter (CATBaseUnknown *&amp; ipFastener, double &amp; iDiameter)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFastener) return rc;

  CATIFmaPLMSpotFastener * piFmaPLMSpotFastener = NULL;
  rc = ipFastener -&gt; QueryInterface(IID_CATIFmaPLMSpotFastener,(void**)&amp;piFmaPLMSpotFastener);  
  if(SUCCEEDED(rc) &amp;&amp; (NULL != piFmaPLMSpotFastener))
  {    
    rc = piFmaPLMSpotFastener -&gt; SetDiameter (iDiameter);
    ...
  }  

  return rc;
}
...</pre>
<p>The <em>CATIFmaPLMSpotFastener</em> interface, implemented on the fastener product, 
is used to set the PLM exposed Fastener attribute diameter.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Modifying the Fastener Classification Information</h3>
<pre class="code">...
HRESULT CAAFstFastenerModificationCmd::BrowseFastenerRepresentationReference (CATBaseUnknown ** opFstRefRepFeature)
{
  HRESULT rc = E_INVALIDARG;  
  if((NULL == _pFastener) || (NULL == opFstRefRepFeature))  return rc;

  CATIFmaPLMFastenerBrowse * piFmaPLMFastenerBrowse = NULL;
  *opFstRefRepFeature = NULL;
  rc = _pFastener-&gt;QueryInterface(IID_CATIFmaPLMFastenerBrowse, (void**)&amp;piFmaPLMFastenerBrowse);
  if(SUCCEEDED(rc))
  {
    rc = piFmaPLMFastenerBrowse-&gt;GetFastenerRefRepresentationFeature(opFstRefRepFeature, IID_CATBaseUnknown);
    ...
  }
  return rc;
}
...
HRESULT CAAFstFastenerModificationCmd::ModifyFastenerClassification(CATBaseUnknown * ipFstFeature)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFstFeature)  return rc;
  
  CATIFmaClassification * piFmaClassification = NULL;
  rc = ipFstFeature-&gt;QueryInterface(IID_CATIFmaClassification, (void**)&amp;piFmaClassification);
  if(SUCCEEDED(rc))
  { 
    CATUnicodeString strParameterID = &quot;AssemblyType&quot;;
    CATUnicodeString strParameterValue = &quot;Tournant&quot;;
    CATICkeParmFactory_var  spCkeFactory = CATCkeGlobalFunctions::GetVolatileFactory(); 
    if(NULL_var != spCkeFactory)
    {
      CATICkeParm_var spNewClassificationParm = spCkeFactory-&gt;CreateString(strParameterID, strParameterValue);
      if(NULL_var != spNewClassificationParm)
      {
        rc = piFmaClassification-&gt;SetClassParameterValue((CATICkeParm*)spNewClassificationParm, strParameterID);
      }
    }    
    ...
  }
  return rc;
}
...</pre>
<p>For modifying the classification information on the fastener product, the fastener 
representation feature <em>Fst_SpotAssy</em> is retrieved (refer <a href="#3">Browsing 
the Fastener Product</a> use case for more details). The fastener classification
<em>CATIFmaClassification </em>obtained from the fastener representation feature, 
is used to set the classification parameter value.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Modifying the Fastener Coupling &amp; Zones Information</h3>
<pre class="code">...
HRESULT CAAFstFastenerModificationCmd::ModifyCouplingAndZones (CATBaseUnknown * ipEngineeringConnection)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipEngineeringConnection)  return rc;

  //1. Access Coupling
  CATIFmaCoupling* piFmaCoupling = NULL;  
  CATIFmaConnectionServices * piFmaConnectServices = NULL;
  rc = CATFmaServicesAccess::CreateFmaConnectionServices(&amp;piFmaConnectServices);
  if( SUCCEEDED(rc) &amp;&amp; (NULL != piFmaConnectServices))
  {
    rc = piFmaConnectServices-&gt;GetFstCoupling((CATBaseUnknown **) &amp;piFmaCoupling, ipEngineeringConnection, IID_CATIFmaCoupling);
    ...;
  }
 
  if(SUCCEEDED(rc) &amp;&amp; (NULL != piFmaCoupling))
  {     
    rc = piFmaCoupling-&gt;RemoveZoneAccess(1);  // Remove 1 zone  
    ...
  }

  return rc;
}
...</pre>
<p>For getting the fastener coupling feature <em>Fst_Coupling</em>, refer
<a href="#3">Browsing the Fastener Product</a> use case. The feature is modified 
by removing one of the added zones which is possible by using the <code>CATIFmaCoupling::RemoveZoneAccess(...)</code> 
method.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Modifying the Fastener Location Information</h3>
<pre class="code">...
HRESULT CAAFstFastenerModificationCmd::ModifyFastenerLocation(CATBaseUnknown * ipFstFeature)
{
  HRESULT rc = E_INVALIDARG;
  if(NULL == ipFstFeature)  return rc;

  CATIFmaSpotLocation * piFmaSpotLocation = NULL;
  rc = ipFstFeature-&gt;QueryInterface(IID_CATIFmaSpotLocation, (void**)&amp;piFmaSpotLocation); 
  if(SUCCEEDED(rc))
  {
    CATMathVector IVector(1., 0., 1.), KVector(0.,0.,1.);
    CATMathVector JVector = KVector^IVector;
    const CATMathAxis IJKAxis(CATMathPoint(0,0,0), IVector, JVector, KVector);
    rc = piFmaSpotLocation-&gt;SetIJKAxis(&amp;IJKAxis, NULL);    
    ...
  }
  return rc;
}
...</pre>
<p>The fastener location information is modified using the <code>CATIFmaSpotLocation 
::SetIJKAxis(...)</code> method. For getting the <em>CATIFmaSpotLocation</em> interface,
<a href="#3">Browsing the Fastener Product</a> use case.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Displaying the Execution Status Message of the Command</h3>
<pre class="code">...
HRESULT CAAFstFastenerServices::DisplayPopup(CATUnicodeString iStrMessage, 
                                             CATUnicodeString iStrTitle,
                                             CATDlgStyle iStyle)
{
  if( 0 &lt; iStrMessage.GetLengthInChar() )
  {    
    CATApplicationFrame* pAppFrame = CATApplicationFrame::GetFrame();
    if (NULL != pAppFrame)
    {
      CATDlgNotify* pDlgNotify = new CATDlgNotify(pAppFrame-&gt;GetApplicationDocument(), &quot;Notif&quot;, iStyle);
      if (NULL != pDlgNotify)
      {        
        pDlgNotify-&gt;DisplayBlocked(iStrMessage, iStrTitle);
        pDlgNotify-&gt;RequestDelayedDestruction();
      }
      ...
    }
  }
  return S_OK;
}
...</pre>
<p>When the command execution ends, the user is informed whether the fastener product 
browsing is a success or failure.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case demonstrates to the user how the existing fastener products be 
modified to valuate them with the new information using the different fastener APIs.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td><a name="1"></a>[1]</td>
		<td><a href="CAAFMATaMdlOverView.htm">Fastener Modeler Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a name="2"></a>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td><a name="3"></a>[3]</td>
		<td><a href="CAAFMAUcFastenerBrowse.htm">Browsing the Fastener Product</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2009]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
