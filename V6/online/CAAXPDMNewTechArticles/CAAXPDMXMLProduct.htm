<html xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>XPDMXML for Product Domain</title>
 <script language="JavaScript" src="../CAADocJavaScript/submit.js"></script>

</head>

<body>
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1>XPDMXML for Product Domain</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Technical Article</td>
	</tr>
</table>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td >
      <h2><a name="Top"></a>Abstract</h2>
      <p>This article describes about the XPDMXML scema for Product Domain. 
		This article provides all necessary information about XPDMXML schema 
		used while instanciating Product Domain. </p>
        <ul>
				<li><a href="#Intro">Introduction</a></li>
				<li><a href="#Mapping">Entity Mapping</a></li>
				<li><a href="#Inshort"> In Short</a></li>
				<li><a href="#References">References</a></li>
		</ul>
		</td>

 </tr>
  
  </table>

<!---------------------------------comment------------------------------------->
<h2><a name="Intro"></a>Introduction</h2>
<p> XPDMXML is the XML used for XPDM exchange. This plays very important role in 
exchanging PLM Metadata information between XPDM and <strong>3D</strong>EXPERIENCE 
Platform. General sturcture of XPDMXML is explained in <a href="#References">
XPDMXML[1]</a>.</p>
<p> XPDMXML contains domain objects. These domain objects are created though 
instanciation of any V6 domain like Product , EBOM etc.Structure is formed of 
combination of domain objects. This is well explained in <a href="#References">
XPDMXML Core and Domain[2]</a>.</p>
<p> This article describes about writting XPDMXML by instanciating Product 
domain.Every domain is having it's own types. We are extending these domain types 
from abstract base classes as mentioned in XPDMXML schema. Product domain types 
instanciated from abstract base classes is shown in <a href="#Fig.1">Fig.1 </a></p>

<table>
		<caption> Fig.1 XPDMXML Product Domain</caption>
			<tr>
			<td><a name="Fig.1"> </a> 
		<img src="images/CAAProductXPDMXML_1.jpg"></td>
	</table>
	
<p> Here we can see that : </p>	
<ul> 
<li> <strong>ProductInst</strong> and <strong>FastenerInst</strong> types are 
derived from <strong>InstanceBase</strong> abstract class.</li>
<li> <strong>Product</strong> and <strong>Fastener</strong> types are derived 
from <strong>ReferenceBase</strong> abstract class.</li>
<li> <strong>Rep3D</strong> and <strong>Drawing</strong> types are derived from
<strong>RepresentationBase</strong> abstract class.</li>
<li> <strong>Rep3DInst</strong> and <strong>DrawingInst</strong> types are 
derived from <strong>RepresentationInstanceBase</strong> abstract class.</li>
<li> <strong>Rep3DAggr</strong> and <strong>DrawingAggr</strong> types are 
derived from <strong>RepresentationAggregatedBase</strong> abstract class.</li>
</ul>
<p> All these types are derived from <code> ObjectBase</code> abstract class,which contains information about lifecycle management and customization. 
Role of this abstract base classes are explined in <a href="#References">XPDMXML 
Core and Domain Objects[2]</a>.<code> StructureBase </code>is 
an abstract class defines a collection of 
objects that represents a structure. Structure is formed from collection of 
domain.</p>
<p> <strong>ProductStructure</strong> is product domain class of type <code> ProductStructureType</code>. <code> ProductStructureType</code> is derived from <code> StructureBase</code>. It contains the list of objects to define whole product structure. 
It consist of following groups :</p>
<ul>
<li> <strong>ProductStructureGroup </strong> : It is dedicated to manages 3D structuration and 3D representations.</li>
<p>    -  Product is made of other instantiated Product.<br> 
       -  ProductInst is the instantiation of Product and it defines the 3D relative position.<br>
       -  Rep3D associates a Geometrical definition to a Product.<br> 
       -  Rep3DInst is the instantiation of Rep3D and is used to link the Rep3D to Product.<br>

       -  Rep3DAggr is an aggregated Rep3D.</p>

<li> <strong>ProductDrawingGroup</strong> : It is dedicated to manage 2D representation in a Product Structure.</li> 
<p>    -  Drawing associates a 2D representation to a Product.<br>
       -  DrawingInst is the instantiation of Drawing.<br>  
       -  DrawingAggr is an aggregated Drawing. </p>
<li> <strong>ProductFastenerGroup</strong> : It is dedicated to manage fastener related information in Product Structure.</li>
<p>
     - FastenerReferenceType contains all the technological and process information of the Fastener.<br>
     - FastenerInstanceType indicates the positionning and orientation of the fastener and also aggregates all the stacking information.</p>
 </ul>
 <p> This is explained in <a href="#Fig.2">Fig.2</a> with relationship between 
	two elements.</p>
	<table>
		<caption> Fig.2 XPDMXML Product XSD</caption>
			<tr>
			<td><a name="Fig.2"> </a> 
			<img src="images/CAAProductXPDMXML.jpg"></td>
						
	</table>
<p> Significance of different components of <strong>ProductStructureGroup</strong> in this <a href="#Fig.2">Fig.2</a> is given below : </p>
<ul> 
<li> <p> <strong>Product</strong> is made of other instanciated product. It is 
associated with instance though ProductInst. It has
FileRef 
attribute which refers to file associated to Product.Usually the 
Rep3D is associated to Product without any ProductInst<strong> </strong>, it uses 
Rep3DInst to aggregate Rep3D.</p>
</li>
<li> 
<p> <strong>ProductInst</strong> allows the reuse of an existing Product3D by Product3D that aggregates it. 
The Product3DInstanceType defines relative 3D position between the two 
Product3D. It is aggregated by a Product via its '<u>Owned</u>' element. It provides 
Product instanciation information via its '<u>Instancing</u>' element.</p>
</li>
<li> 
<p> <strong>Rep3DInst </strong>  allows the reuse of an existing Rep3D by a Product. It is aggregated by a Product via its 'Owned' element.It 
provides Rep3D instanciation information via its '<u>Instancing</u>' element.</p>
</li>
<li> 
<p> <strong>Rep3D </strong> exposes one and only one 3D geometry. It is usually shared by several Product by using Rep3D objects.It 
has FileRef attribute which refers to geometry file.</p>
</li>
<li> 
<p> <strong>Rep3DAggr</strong> exposes a 3D geometry.It is aggregated by a Product via its '<u>Owned</u>' element.
			It shares the same Versioning information with the Product it is aggregated to.It 
has FileRef attribute which refers to geometry file.<br>
</p>
</li>
</ul>
<p> Significance of different components of <strong>ProductDrawingGroup</strong> in this <a href="#Fig.2">Fig.2</a> is given below : </p>
<ul> 
<li> <strong>Drawing</strong> exposes a 2D representation. 
			 It is instanciated by a Product via a DrawingInst.</li>
<li> <strong>DrawingInst</strong>&nbsp; allows the reuse of an existing Drawing 
by a Product that aggregates it. It is aggregated by a Product via its 'Owned' 
element. It provides Drawing instanciation information via its '<u>Instancing</u>' element.</li>
<li> <strong>DrawingAggr</strong> exposes a 2D geometry. It is aggregated by a 
Product via its 'Owned' element. It shares the same Versioning information with 
the Product it is aggregated to.It has FileRef attribute which refers to file.</li>
</ul>
<p> Significance of different components of <strong>ProductFastenerGroup</strong> in this <a href="#Fig.2">Fig.2</a> is given below : </p>
<ul>
<li> <strong>FastenerReferenceType</strong> contains information about 
Fastener.It has attributes related to shape of Fastener as diameter of the Spot 
fastener and thickness for a Bead fastener.</li>
<li> <strong>FastenerInstanceType</strong> indicates the positionning and 
orientation of the fastener. It has atrributes like length of the fastesner in 
case of a Bead fastener and Relative Position matrix between the 
FastenerReferenceType and the root Reference3DType.It is aggregated by a Product 
via its '<u>Owned</u>' element. It provides Fastener instanciation information 
via its '<u>Instancing</u>' element.</li>

</ul>
<script type="text/javascript">insertLinkToTop();</script>
<h2><a name="Mapping"></a> Entity Mapping</h2>
<p>As we know XPDMXML is written by instantiating any V6 Domain.
The following section describes the default mapping of Product data model with XPDMXML entities. </p>
<table>
		<caption> Fig.3 XPDMXML mapping</caption>
			<tr>
			<td><a name="mapping"> </a> 
			<img src="images/mappingtable.jpg"></td>
						
	</table>

<script type="text/javascript">insertLinkToTop();</script>

<h2><a name="Inshort"></a>In Short</h2><p>This article describes about Product 
Domain types to be used while writting XPDMXML with instanciating Product 
domain. This article gives detailed information about every product domain type 
and how these type are mapped to V6 entity. </p>
<p>This article gives information about Product domain objects are linked with 
each other i.e. relationship between different objects. User will come to know 
about attributes mapping between XPDMXML Entity and Enovia Data model attribute 
name.</p>
<script type="text/javascript">insertLinkToTop();</script>

<h2><a name="References"></a>References    </h2>
 <table>
     <tr>
    
       <td >[1]</td>
       <td ><a href="CAAXPDMXML.htm">XPDMXML</a></td>
     </tr>  
     <tr>
    
       <td >[2]</td>
       <td ><a href="CAAXPDMXMLCore.htm">XPDMXML Core and Domain</a></td>
     </tr>  

   </table>
   
<!---------------------------------comment------------------------------------->
<h2><a name="History"></a>History </h2> <table><tr>
    <td valign="top"><strong>Version</strong>: [Aug 2014]</td>
    <td valign="top">Document created</tr>
  <tr>
<script type="text/javascript">insertLinkToTop();</script>
  </tr>
</table>

<!---------------------------------comment------------------------------------->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>


