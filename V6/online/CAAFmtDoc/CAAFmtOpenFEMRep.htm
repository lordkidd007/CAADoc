<!doctype html public "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Open and Scan FEM</title>
<style type="text/css">
.style1 {
	font-family: monospace;
	color: #976970;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1"><h1><a name="Top"></a>Opening and scanning FEM</h1></td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article explains how to open, browse a FEMRep and its Mesh Parts in a model.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmtOpenFEMRep Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAFmtOpenFEMRep Do?</a></li>
				<li><a href="#How">How to Launch CAAFmtOpenFEMRep?</a></li>
				<li><a href="#Where">Where to Find the CAAFmtOpenFEMRep Code?</a> </li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show an end user how to open an existing FEMRep and browse its content using the Generic CAA APIs.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmtOpenFEMRep Use Case</h2>
<p><code>CAAFmtOpenFEMRep</code> is a use case of the <code>CAAFmtInterfaces.edu</code> framework
that illustrates the <code>CATFmtModelInterfaces</code> and <code>CATFmtToolsInterfaces</code> frameworks capabilities regarding Mesh Parts.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmtOpenFEMRep Do?</h3>
<p><code>CAAFmtOpenFEMRep</code> is a &quot;batch&quot; that illustrates
how to browse a FEMRep and its Mesh Parts.</p>
<p>The input model for this Use Case is shown in [<a href="#Fig1">Fig.1</a>].
It contains a FEMRep with a Triangle mesh and a Hexahedron mesh.
The use case will browse the nodes and elements of those meshes, and write their tags as an output. 
</p>
<table>
	<caption align="top">Fig1: The CAAModelTST01 Model</caption>
	<tr>
		<td><a name="Fig1"></a><img alt="" src="images/CAAFmtOpenFEMRep01.png"></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmtOpenFEMRep?</h3>
<p>First, you need to import the CAAModelTST01.3dxml into your data base. 
You can find it under : <code>InstallRootFolder\CAADoc\CAAFmtInterfaces.edu\CAAFmtInterfacesEduRsc.m\src\resources</code></p>
<p><span lang="fr">Then t</span>o launch <code>CAAFmtOpenFEMRep</code>, you will need to set up the build time environment 
and compile the <code>CAAFmtOpenFEMRep.m</code> module along with its 
prerequisites [<a href="#References">1</a>]. Once it's built, set up the run time
environment and execute the following command: </p>
<p><code>mkrun -c &quot;<i><a>CAAFmtOpenFEMRep</a>
<a>Repository</a> <a>Server</a> <a>User</a> <a>Password</a> <a>SecurityCtx</a> <a>PLM_Type</a> <a>PLM_External_Root</a> <a>V_version_Root</a></i>&quot;</code></p>

<p>
where:</p>
<table  id="table1" >
	<tr>		
		<th><b><i>Repository</i></b></th>
		<td><script type="text/javascript">insertRepository();</script></td>
	</tr>
	<tr>
		<th ><b><i>Server</i></b></th>
		<td >The server as host::<i> name</i>:<i>port_number/RootURI</i></td>
	</tr>
	<tr>
		<th><b><i>User</i></b></th>
		<td>The user name</td>
	</tr>
	<tr>
		<th><b><i>Password</i></b></th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th><b><i>SecurityCtx</i></b></th>
		<td>a string representing the security context ( Role. Organization. Project&nbsp;);
            Choose Role as Designer ( as the use case create the PLM Data)</td>
	</tr>
	<tr>
		<th><b>PLM_Type</b></th>
		<td>the PLM type of the Product to open</td>
	</tr>
	<tr>
		<th><b>PLM_External_Root</b></th>
		<td>the PLM Id of the Product to open</td>
	</tr>
	<tr>
		<th><b>V_version_Root</b></th>
		<td>the PLM version of the Product</td>
	</tr>
</table>
	
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmtOpenFEMRep Code</h3>
<p>The CAAFmtOpenFEMRep use case is made of a single 
file located in the <code>CAAFmtOpenFEMRep.m</code> 
module of the <code>CAAFmtInterfaces.edu</code> 
framework:<br>
<code>InstallRootFolder\CAADoc\CAAFmtInterfaces.edu\CAAFmtOpenFEMRep.m\</code></p>
<p>The use case relies on functions defined in the <code>CAAAdpUtilities.m</code> module of the
<code>CAAPLMClientAdapter.edu</code> framework:<br>
<code><i>InstallRootDirectory</i>\CAAPLMClientAdapter.edu\CAAAdpUtilities.m\</code></p>
<p>Where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The CAAFmtOpenFEMRep use case can be divided into 3 main steps:</p>
<ol>
	<li><a href="#OpenModel">Opening the model</a></li>
	<li><a href="#GetMeshManager">Getting the Mesh Manager</a></li>
	<li><a href="#ScanMesh">Scanning the Mesh</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="OpenModel"></a>Opening the model</h3>
<p>To open the test model, we use services from the <code>CAAPLMClientAdapter.edu</code> framework.<br>
The product reference is instanciated through the CATIPLMRepInstances interface.</p>
<pre class="code">...
hr = ::CAAAdpCreateSession(repository_n,server_n,user_n,password_n,security_n);

CATBoolean authoringMode = TRUE;
CATIPLMRepInstances * piRepInstances = NULL;
CATOmbLifeCycleRootsBag Bag;
hr = ::CAAAdpOpenProduct(plmtype_n, plmid_n, version_n,
	                     IID_CATIPLMRepInstances, (void **) &amp;piRepInstances, Bag, authoringMode);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="GetMeshManager"></a>Getting the Mesh Manager</h3>
<p>To get the Mesh Manager, we need to iterate on the Rep Instances to find the FEMRep, then get the Mesh Set (CATFmtSetNodesElements) on the FEMRep.</p>
<pre class="code">...
CATIFmtRepManager * pRepManager = NULL;
CATIPrdIterator * pIter = NULL;
piRepInstances -&gt; Iterator ( pIter );
if ( pIter )
{
	CATBaseUnknown_var nextRep;
	while ( SUCCEEDED ( pIter -&gt; Next ( nextRep ) ) )
	{
		if ( CATFmtRepManagerServices::IsAFEMRep( nextRep ) )
		{
			pRepManager = (CATIFmtRepManager *) CATFmtRepManagerServices::GetRepManagerFromRepresentation(nextRep, IID_CATIFmtRepManager);
 			break;
		}
	}
}
...
CATIFmtMeshManager * pMeshManager = NULL;
if ( pRepManager ) 
{
	CATBaseUnknown * pSet = pRepManager -&gt; GetSet ( CATFmtSetNodesElements );
	if ( pSet )
	{
		pSet -&gt; QueryInterface ( IID_CATIFmtMeshManager , (void**)&amp;pMeshManager );
	}
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="ScanMesh"></a>Scanning the Mesh</h3>
<p>After retrieving the Mesh, we can iterate on its elements or nodes.
By doing so we will iterate on every entity of the Mesh Set, that is to say elements and nodes of the 2 meshes within our model's FEMRep.</p>
<pre class="code">...
CATIFmtMesh * pMesh = NULL;
pMesh = pMeshManager -&gt; GetMesh ();

CATFmtMeshElementIter elemIter ( pMesh );
while ( CATFmtElement * pElement = elemIter.NextElement () )
{
	CATIFmtConnectivity * elemConnect;
	elemConnect = pElement-&gt;GetConnectivity(); <span class="comment">//no AddRef done here, no release will be done</span>
	cout &lt;&lt; <span class="string">&quot; Element tag = &quot;</span> &lt;&lt; pElement-&gt;GetTag() &lt;&lt; <span class="string">&quot; connectivity = &quot;</span> &lt;&lt; elemConnect-&gt;GetName() &lt;&lt; endl;
}
CATFmtMeshNodeIter nodeIter ( pMesh );
while ( CATFmtNode * pNode = nodeIter.NextNode () )
{
	cout &lt;&lt; <span class="string">&quot; Node tag = &quot;</span> &lt;&lt; pNode-&gt;GetTag() &lt;&lt; endl;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The <code>CAAFmtOpenFEMRep</code> use case explains how to browse an existing FEMRep and its content,
using the Generic CAA APIs exposed in the <code>CATFmtModelInterfaces</code> and <code>CATFmtToolsInterfaces</code> frameworks.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
