<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating an Assembly of FEMs</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating an Assembly of FEMs</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article explains how to open an existing product and to create 
		an assembly of FEMs.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmtFEMAssembly Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAFmtFEMAssembly Do</a></li>
				<li><a href="#How">How to Launch CAAFmtFEMAssembly </a></li>
				<li><a href="#Where">Where to Find the CAAFmtFEMAssembly Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show how to create an assembly of FEMs using the 
Generic CAA APIs.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmtFEMAssembly Use Case</h2>
<p>CAAFmtFEMAssembly is a use case of the CAAFmtInterfaces.edu framework that 
illustrates CATFmtModelInterfaces framework capabilities regarding FEM assembly.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmtFEMAssembly Do?</h3>
<p>CAAFmtFEMAssembly creates FEMRep under the root product and then creates links
between the created FEMRep and the FEMReps which are aggrated under the sub-products.</p>
<p>The input model for this Use Case is shown in [<a href="#Fig1">Fig.1</a>]. It 
contains a product has two sub-products which have a 3D Shape and a FEMRep.</p>
<table>
	<caption align="center"><a name="Fig1"></a>Fig1: The Input Product Model</caption>
	<tr>
		<td><img src="images/CAAFmtFEMAssembly001.jpg"/></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmtFEMAssembly</h3>
<p>To launch CAAFmtFEMAssembly, you will need to set up the build time 
environment, then compile CAAFmtFEMAssembly.m along with its prerequisites, set 
up the run time environment, and then execute the use case [<a href="#References">1</a>].</p>
<p>To launch the use case, execute the following command:</p>
<p><code>mkrun -c &quot;<i>CAAFmtFEMAssembly Repository Server User Password SecurityCtx 
PLM_Type PLM_External_Root V_version_Root</i>&quot;</code></p>
<p>where :</p>
<code>
<table  id="table1" >
	<tr>		
		<th><b><i>Repository</i></b></th>
		<td>PLM1</td>
	</tr>
	<tr>
		<th ><b><i>Server</i></b></th>
		<td >The server as host::<i> name</i>:<i>port_number/RootURI</i></td>
	</tr>
	<tr>
		<th><b><i>User</i></b></th>
		<td>The user name</td>
	</tr>
	<tr>
		<th><b><i>Password</i></b></th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th><b><i>SecurityCtx</i></b></th>
		<td>a string representing the security context ( Role. Organization. Project&nbsp;);<o:p>
            Choose Role as Designer ( as the use case create the PLM Data)</o:p></td>
	</tr>
	<tr>
		<th><b>PLM_Type</b></th>
		<td>the PLM type of the Product to open</td>
	</tr>
	<tr>
		<th><b>PLM_External_Root</b></th>
		<td>the PLM Id of the Product to open</td>
	</tr>
	<tr>
		<th><b>V_version_Root</b></th>
		<td>the PLM version of the Product</td>
	</tr>
</table>
</code>
<p><b>Import PLM Data:</b><br/>
The use case requires input PLM Data: PLM reference and PLM Representation Reference. This data is stored in 3D XML Files, whose extension is &quot;3dxml&quot;. 
You must import these PLM Data in the database by clicking on [+] tab in the upper right corner -&gt;Import -&gt;3D XML prior to launching the use case.<br/>
The &quot;3dxml&quot; file is supplied in the <code>CAAFmtInterfaces.edu\CAAFmtInterfacesEduRsc.m\src\resources</code>
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmtFEMAssembly Code</h3>
<p>The CAAFmtFEMAssembly use case is made of a single source file named CAAFmtFEMAssembly.cpp 
located in the CAAFmtFEMAssembly.m module of the CAAFmtInterfaces.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAFmtInterfaces.edu\CAAFmtFEMAssembly.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are five logical steps in CAAFmtFEMAssembly:</p>
<ol>
	<li><a href="#Step1">Opening the input product</a></li>
	<li><a href="#Step2">Creating the assembly FEM Rep and retrieving its Assembly Rep Manager</a></li>
	<li><a href="#Step3">Adding links to child FEM Representations</a></li>
	<li><a href="#Step4">Saving the simulation PLM object</a></li>
	<li><a href="#Step5">Closing the PLM session</a></li>
</ol>
<p>We will now discuss each of those sections in detail.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the input product</h3>
<p>To open the product test model, you should use services from the <code>
CAAPLMClientAdapter.edu</code> framework.<br />
With the help of the <code>CATIPLMNavReference</code> interface you can navigate through the product structure.</p>
<pre class="code">...
hr = ::CAAAdpCreateSession(repository_n,server_n,user_n,password_n,security_n);

<span class="keyword">CATBoolean</span> authoringMode = TRUE;
<span class="keyword">CATIPLMNavReference</span> * piNavRefOnRoot = NULL;
<span class="keyword">CATOmbLifeCycleRootsBag</span> Bag;
hr = ::CAAOpenPLMComponent(plmtype_n, plmid_n, version_n, IID_CATIPLMNavReference, (void **) &amp;piNavRefOnRoot , Bag, authoringMode);                     
...</pre>
<p>For further information about setting up a PLM session refer to the article "Connecting to V6 Server"[<a href="#References">2</a>]</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating the assembly FEM Rep and retrieving its Assembly Rep Manager</h3>
<p>The next step of this use case involves the creation of a finite element 
representation model on the product that you just opened.</p>
<p>To do this, you should use the <code>CreateRepresentation</code> method of <code>CATIFmtRepManager</code> interface to create the new FEM representation 
and then you should call the <code>GetRepManagerFromRepresentation</code> from <code>CATFmtRepManagerServices</code> service class.</p>
<p>For further information about creating a FEM representation refer to the article &quot;Creating a FEM representation&quot;[<a href="#References">3</a>]</p>
<pre class="code">...
<span class="keyword">CATBaseUnknown</span> * pFEMRep = NULL;
hr = <span class="keyword">CATFmtFEMRepFactory</span>::CreateRepresentation( NULL, spProductAsPrdObj, NULL, NULL, "", FALSE, &amp;pFEMRep );
<span class="keyword">CATBaseUnknown_var</span> spFEMRep = pFEMRep;
if ((FAILED( hr )) || (NULL_var == spFEMRep))
{
    ...
}
...</pre>
<p>Then you should retrieve the assembly representation manager.</p>
<pre class="code">...
<span class="keyword">CATIFmtRepManager</span> * pRepManager = NULL;
pRepManager = (<span class="keyword">CATIFmtRepManager</span> *) <span class="keyword">CATFmtRepManagerServices</span>::GetRepManagerFromRepresentation( spFEMRep, IID_CATIFmtRepManager );
<span class="keyword">CATIFmtAssemblyManager_var</span> spAssemblyManager(pRepManager);
if (!!pRepManager) pRepManager-&gt;Release();
if (NULL_var == spAssemblyManager)
{
    ...
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Adding links to child FEM Representations</h3>
<p>To create an assembly of FEM, you should create links between the child FEMs and 
the previously created FEM.</p>
<pre class="code">...
hr = spAssemblyManager-&gt;AddChild(lFEMRepList);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Saving the simulation PLM object</h3>
<p>To save the simulation PLM object, you should use services from the <code>
CATAdpOpenSaveServices</code> framework.</p>
<pre class="code">...
<span class="keyword">CATAdpSaver</span> adpSaver;
hr = adpSaver.Save();
if (FAILED(hr))
{
    ...
}
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Closing the PLM session</h3>
<p>To close the test model, you should use services from the <code>CAAPLMClientAdapter.edu</code> 
framework. Before closing the model, you have to manage the lifecycle of the 
AddRef'ed 
objects.</p>
<pre class="code">...
if(NULL!=piNavRefOnRoot) { piNavRefOnRoot-&gt;Release(); piNavRefOnRoot=NULL; }
<span class="comment">// Empties the bag</span>
Bag.RemoveAll();
hr = ::CAAAdpCloseSession();
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The <code>CAAFmtFEMAssembly</code> use case demonstrates the use of various 
CAA APIs in <code>CATFmtModelInterfaces</code> framework to create an assembly 
of FEMs.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="CAAFmtCreateFEMRep.htm">
		Creating a FEM representation</a></td>
	</tr>



</table>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Oct 2014]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>

