<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating Non Geometrical Features</title>
</head>

<body>

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Non Geometrical Features</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This use case explains how to create and integrate a new analysis feature 
		derivate from MechanicalElement which doesn't have any geometry: the <strong>CAAMmrMultiMeasure</strong>.
		It also shows how to create a Set dedicated to aggregate 
		CAAMmrMultiMeasure in the MechanicalPart: the <strong>CAAMmrMeasureSet</strong>, derivate 
		from MechanicalSet.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#MmrMultiMeasure">What Is a &quot;CAAMmrMultiMeasure&quot;, 
				What Is a &quot;CAAMmrMeasureSet&quot;</a></li>
			<li><a href="#UseCase">The &quot;MultiMeasure And MeasureSet&quot; Use 
				Case</a>
				<ul>
					<li><a href="#What">What Does the &quot;MultiMeasure And MeasureSet&quot; 
						Use Case Do</a></li>
					<li><a href="#How">How to Launch the &quot;MultiMeasure And 
						MeasureSet&quot; Use Case</a></li>
					<li><a href="#Where">Where to Find the &quot;CAAMmrMultiMeasureAndMeasureSet&quot; 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step-by-Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case illustrates the sub-section entitled &quot;<strong>The Contents of the 
Specification Container - Non Geometrical Features Set</strong>&quot; and &quot;<strong>The 
Contents of the Specification Container - Non Geometrical Features</strong>&quot; you 
can find in the &quot;Technical Articles&quot; section of the Mechanical Modeler 
home page.</p>
<p>Its main intent is to show you <strong>MechanicalElements</strong> and &quot;<strong>MechanicalSets</strong>&quot; 
derives specificities [<a href="#References">1</a>], [<a href="#References">2</a>] 
and to explain how to use them when you need to design non Geometrical Features.</p>
<p>In this use case, you will learn to:</p>
<ul>
	<li><strong>Createb</strong> features derivate from MechanicalElement and MechanicalSet:
		<p>How to create a new StartUp of MechanicalElement or MechanicalSet, how 
		to store it in a feature's catalog and how to instantiate it.</p>
	</li>
	<li><strong>Integrate</strong> MechanicalSet and MechanicalElement derivates in 
		DS Mechanisms using their default behaviors.
		<p>Default Behaviors for CATIParmPublisher, CATINavigateObject, ContextualMenu.</p>
		<p>How to make a Build process with non geometrical features. How implement 
		visualization on non Geometrical Feature.</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="MmrMultiMeasure"></a>What Is a &quot;CAAMmrMultiMeasure&quot;, What 
Is a &quot;CAAMmrMeasureSet&quot;</h2>
<p>The <code><strong>CAAMmrMultiMeasure</strong></code> is an analysis feature that derives 
from <code><strong>MechanicalElement</strong></code> StartUp. It allows users to compute the 
Length, or the Wet Area and/or the Volume of a Geometrical Feature. Consequently, 
it is designed with one input: The Geometrical Feature to analyze, and three outputs: 
the three computed parameters.</p>
<p>It doesn't have any geometry but a visualization: on the 3D View, its result 
- constituted from a physical measure - is displayed in a violet box.</p>
<p>As it is a specific feature, we decided to design a specific set to aggregate 
it in the MechanicalPart: the <code><strong>CAAMmrMeasureSet</strong></code>. This set derives 
from <code><strong>MechanicalSet</strong></code> StartUp and can display the visualization 
of the features aggregated in it.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The &quot;MultiMeasure And MeasureSet&quot; Use Case</h2>
<p>&quot;MultiMeasure And MeasureSet&quot; is a use case of the CAAMechanicalModelerExtend.edu 
framework that illustrates the Mechanical Modeler extended capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does the &quot;MultiMeasure And MeasureSet&quot; Use 
Case Do</h3>
<p>The final intent of this use case is to design, create and use an analysis feature 
which doesn't have any geometry but which has a 3D Representation. It can be divided 
into several steps:</p>
<ol>
	<li>Creating the new Analysis Feature <strong>StartUp</strong> (<strong>CAAMmrMultiMeasure</strong>), 
		the new Analysis Set <strong>StartUp</strong> (<strong>CAAMmrMeasureSet</strong>) and storing 
		them in the <strong>catalog &quot;CAAMmrMultiMeasureAndMeasureSetCatalog.CATfct&quot;</strong> 
		using &quot;OSM Modeling Language&quot;.&nbsp;
		<p>The CATfct file has been generated using CATfctEditorAssistant tool.&nbsp; 
		The client authentication is &quot;CAAMmrUseCaseForMechanicalSetsAndElements&quot;.</p>
	</li>
	<li>Creating an <strong>interface to instantiate</strong> the new StartUps &quot;<strong>CAAMmrMultiMeasure</strong>&quot; 
		and &quot;<strong>CAAMmrMeasureSet</strong>&quot; - the <em><strong>CAAIMmrMultiMeasureAndMeasureSetFactory</strong></em> 
		interface.
		<p>To create instances of the <strong>CAAMmrMultiMeasure</strong> and <strong>CAAMmrMeasureSet</strong> 
		StartUp, you should create and implement a factory interface on the specification 
		container. This interface creates instances but do not set them in the MechanicalPart.</p>
		<table>
			<caption><a name="Fig1"></a>Fig.1: The CAAIMmrMultiMeasureAndMeasureSetFactory 
			Interface</caption>
			<tr>
				<td>
				<img alt="" height="51" src="images/CAAMmrMeasureFactInterface.jpg" width="549"/></td>
			</tr>
		</table>
		<p>CATPrtCont is the container containing all the specifications of the 
		Part. This factory interface uses the &quot;<strong>CAAMmrMultiMeasureAndMeasureSetCatalog</strong>&quot; 
		catalog file created in the first step.</p>
	</li>
	<li>Creating an interface to <strong>modify or retrieve the input specifications</strong> 
		of the CAAMmrMultiMeasure instances.- the <em><strong>CAAIMmrMultiMeasure</strong></em> 
		interface.
		<p>In the <em>CATFmFeatureBehaviorCustomization</em> implementation, or in 
		the edition command, it is mandatory to have an access to the input specifications 
		of the new feature. It is the role of the <em>CAAIMmrMultiMeasure</em> interface.</p>
		<table>
			<caption><a name="Fig2"></a>Fig.2: The CAAIMmrMultiMeasure Interface</caption>
			<tr>
				<td>
				<img alt="" height="50" src="images/CAAMmrMeasureInterfaceType.jpg" width="445"/></td>
			</tr>
		</table>
		<p>With this interface you can retrieve or modify the value of CAAMmrMultiMeasure's 
		Attributes.</p>
	</li>
	<li><strong>Integrating the CAAMmrMultiMeasure</strong>
		<p>To integrate a new feature in DS behaviors, Interfaces classified in 
		three classes need to be taken into account:</p>
		<ul>
			<li>The mandatory interfaces:
				<ul>
					<li><strong><em>CATIFmFeatureBehaviorCustomization</em></strong> - Building 
						CAAMmrMultiMeasure Result.
						<p>To compute something, analysis feature has to integrate 
						update mechanism [<a href="#References">3</a>], which is 
						done implementing <em>CATIFmFeatureBehaviorCustomization</em> 
						interface on CAAMmrMultiMeasure (<code>CAAEMmrMultiMeasureBehavior.cpp</code>).</p>
					</li>
					<li><em><strong>CATIReplace</strong></em> - Modifying CAAMmrMultiMeasure 
						inputs.
						<p>This interface enables you to define the available elements 
						for a replacement, and makes the replacement, which is done 
						in CAAMmrMultiMeasure's implementation (<code>CAAEMmrMultiMeasureReplace.cpp</code>).</p>
					</li>
				</ul>
			</li>
			<li>The Dassault Syst&egrave;mes Behavior interfaces:
				<ul>
					<li><strong><em>CATIEdit</em></strong> - Editing CAAMmrMultiMeasure inputs.
						<p>This interface of the ApplicationFrame framework enables 
						to edit features. The double clicking on MmrCAAMultiMeasure 
						launches the <code>CAAMmrMultiMeasureStCmd</code> state 
						command, an interactive command without panel. This command 
						can be used in the creation mode and in the edition mode.</p>
					</li>
					<li><strong><em>CATIContextualSubMenu</em></strong> - Use of Default MechanicalElement 
						/ MechanicalSet behaviors.
						<p>As MechanicalElement has a default behavior, CAAMmrMultiMeasure 
						inherits from this one. Consequently, CAAMmrMultiMeasure 
						has a default contextual sub-menu.</p>
					</li>
					<li><em><strong>CATINavigateObject, CATIParmPublisher, CATIParmDirectAccess</strong></em>: 
						- Display Measure's result.
						<p>Enables the visualization of the parameters in the 
						tree 
						and in fx Formula table. (CAAEMmrMultiMeasureNavigateObject.cpp and 
						CAAEMmrMultiMeasureParmPublisher.cpp)</p>
					</li>
				</ul>
			</li>
			<li>Specific Case:
				<p>As we want to visualize the measure's result in the 3D view, 
				we decided to implement Visualization behaviors:</p>
				<ul>
					<li><em><strong>CATIVisu</strong></em> or <em><strong>CATI3DGeoVisu</strong></em> - 
						building a 3D Representation for CAAMmrMultiMeasure and 
						CAAMeasureSet.
						<p>This Specialized 3D Visualization interface makes objects 
						have a 3D representation. In <code>CAAEMmrMultiMeasureVisu</code>, 
						CAAMmrMultiMeasure builds a 3DBagRep in which the representation 
						of the measure's result is shown.</p>
						<p>CAAMmrMeasureSet's implementation (<code>CAAEMmrMeasureSetVisu</code>) 
						builds a 3DBagRep which aggregates all the 3DRep of its 
						aggregated features.</p>
						<p>For more detail in CATI3DGeoVisu, please refer to specified 
						article [4].</p>
					</li>
					<li><em><strong>CATIVisProperties</strong></em> - Managing the graphic properties 
						associated with the features representations.
						<p>For more detail in CATIVisProperties, please refer to 
						specified article [5]. (Here, the implementation is done 
						in CAAEMmrMultiMeasureAndMeasureSetVisProperties.cpp.)</p>
					</li>
					<li><em><strong>CATISelectShow</strong></em> - Adding hide/Show command 
						to your non geometrical features.
						<p>The Hide/Show command enables to hide or show the selected 
						features. To benefit from this functionality on your feature, 
						it must implement the CATISelectShow interface, which is 
						done with <code>CATEMmrMultiMeasureSelectShow</code> implementation.</p>
						<p><strong>Note</strong>: the Hide/Show command uses the
						<em>CATIVisProperties</em> interface to modify the visibility 
						state of the feature.</p>
					</li>
				</ul>
			</li>
		</ul>
	</li>
	<li><strong>Creating Interactively Instances</strong>
		<p>To create interactively new instances of the <strong>CAAMmrMeasureSet</strong> 
		or <strong>CAAMmrMultiMeasure</strong>, you will create an add-in of the Generative Shape Design 
		app (<code>CAAEMmrMultiMeasureAndMeasureSetAdn</code>) into which 
		you will add the MmrMultiMeasure and the MmrMeasureSet Creation Commands 
		(<code>CAAMmrMultiMeasureStCmd</code> and <code>CAAMmrMeasureSetStCmd</code>). The commands will be located in
		the <kbd>CAA MechMod Extend UC</kbd> section of the action bar, as shown in the picture below:</p>
		<table>
					<caption style="width: 361px">View of MmrMultiMeasure 
					commands in the action bar</caption>
					<tr>
						<td>
						<img alt="" src="images/CAAMmrMultiMeasureInActionBar.jpg" width="355" height="221"/></td>
					</tr>
				</table>

	</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch the &quot;MultiMeasure And MeasureSet&quot; 
Use Case</h3>
<p>To launch this use case, you will need to set up the build time environment, 
then compile the following modules of the <strong>CAAMechanicalModelerExtend.edu</strong> 
framework along with their prerequisites:</p>
<ul>
	<li>CAAMmrMultiMeasureAndMeasureSet.m.</li>
	<li>CAAMmrMultiMeasureAndMeasureSetUI.m.</li>
	<li>CAAMmrMultiMeasureAndMeasureSetAddIn.m.</li>
</ul>

<p><a name="Addin"></a><strong>Addin Access</strong></p>


<p>The add-in to Shape Design apps within CATIA is 
available thanks to a data extension of the <code><strong>CAAMmrMultiMeasureAndMeasureSetAddin</strong></code> 
component. This necessitates the following entries uncommented in the <code><strong>CAAMechanicalModelerExtend.edu.dico</strong></code> 
file:</p>
<pre class="code">...
#CAA# CAAMmrMultiMeasureAndMeasureSetAddin  CATIWorkbenchAddin            libCAAMmrMultiMeasureAndMeasureSetAddIn
#CAA# CAAMmrMultiMeasureAndMeasureSetAddin  CATIShapeDesignWorkshopAddin  libCAAMmrMultiMeasureAndMeasureSetAddIn
...</pre>

<p>The <code><strong>dico</strong></code> file entries imply that the add-in implements
<code><em><strong>CATIShapeDesignWorkshopAddin</strong></em></code>. It also implements
<em><code><strong>CATIWorkbenchAddin</strong></code></em>, owing to the fact that it is a data 
extension of <code><strong>CAAMmrMultiMeasureAndMesureSetAddin</strong></code>.</p>




<p>Next, let's execute interactively the use case. Several steps must be followed 
in order to completely execute the use case:</p>
<p>Launch CATIA. When the application is ready, follow scenarios described below:</p>
<ul>
	<li>The <strong>Creation</strong> scenario:
		<ul>
		    <li>Launch <kbd>Generative Shape Design</kbd> app from <kbd>3D</kbd> quadrant of the compass</li>
			<li>Open a Part including geometrical instances or Create one &quot;from 
				scratch&quot;.</li>
			<li>Activate <kbd>CAA MechMod Extend UC</kbd> section of the action 
			bar.</li>
			<li>Measure the length or the wet area (and) the volume of a geometrical 
				feature using the <kbd>CAAMmrMultiMeasure</kbd> command.			
			The computed length, or area or volume, will appear in 3D 
				and in the tree.</li>
			<li>Instantiate a MeasureSet using the <kbd>CAAMmrMeasureSet</kbd>command. 
				A new set appears under the Part Node. Then, if you instantiate 
				a new CAAMmrMeasure, it will be aggregated under the new CAAMeasureSet.
				<table>
					<caption>View of MmrMultiMeasure Instance</caption>
					<tr>
						<td>
						<img alt="" src="images/CAAMmrMultiMeasureScreenShot.jpg" width="523" height="415"/></td>
					</tr>
				</table>
			</li>
			<li>Use of Default MechanicalSet and MechanicalElement:
				<ul>
					<li><kbd>fx</kbd> command (in <kbd>Tools</kbd> section of the action bar) shows 
					all parameters aggregated under CAAMmrMeasureSet 
						and its sons. It shows all parameters aggregated under CAAMmrMultiMeasure.</li>
					<li><kbd>object</kbd>Sub-Menu allows Reorder/Reorder Children for CAAMmrMeasureSet 
						and Reorder for CAAMmrMultiMeasure.</li>
					<li>Copy/Paste can be used.</li>
				</ul>
			</li>
		</ul>
		<ul>
			<li>It is possible to see the computed parameter on Formula panel and to 
			use this value into rules. To do this, just click on <kbd>fx</kbd> icon. 
				You will note that the computed value is in &quot;read only mode&quot; 
				(the cell containing the computed value is gray).</li>
		</ul>
	</li>
	<li>The <strong>Edition</strong> scenario:
		<ul>
			<li>Double click the CAAMmrMultiMeasure instance.</li>
			<li>Change its input selecting a new geometrical feature,
			the feature result and its 3D representation are updated.</li>
		</ul>
	</li>
	<li>The <strong>Open</strong> scenario:
		<ul>
			<li>Open a Part including CAAMmrMultiMeasure instances
				<a href="#Note">(*)</a>. Check the visualisation in 3D and in 
			the tree.</li>
			<li>Change MmrMultiMeasure's input.</li>
			<li>Check modification in the 3D and in the tree.</li>
		</ul>
		<p><a name="Note"></a>(*) This represents a PLM Representation reference 
		which is provided in the CAAMmrMultiMeasureAndMeasureSet.3DXML file, at 
		the path specified below.</p>
		<p><code>InstallRootFolder\CAADoc\CAAMechanicalModelerExtend.edu\InputData\CAAMmrMultiMeasureAndMeasureSet.3DXML\</code></p>
		<p>where <code>InstallRootFolder</code> [<a href="#References">6</a>] is 
		the folder where the API CD-ROM is installed.</p>
		<p>After import, you will have a PLM Representation Reference with CAAMmrMultiMeasure 
		and CAAMmrMeasureSet.</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMmrMultiMeasureAndMeasureSet Code</h3>
<p>The &quot;MultiMeasure And MeasureSet&quot; use case is made of several modules 
of the CAAMechanicalModelerExtend.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModelerExtend.edu\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">6</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>These modules are:</p>
<ul>
	<li><strong>CAAMmrMultiMeasureAndMeasureSet.m</strong> - This module contains the implementations 
		of the <strong><em>CATIFmFeatureBehaviorCustomization</em></strong> interface (manages 
		the build operation called during the update of MmrMultiMeasure), the definition 
		and the implementation of the <strong><em>CAAIMmrMultiMeasureAndMeasureSetFactory</em></strong> 
		interface (manages the CAAMmrMultiMeasure And CAAMmrMeasureSet StartUp instantiation), 
		the <strong><em>CAAIMmrMultiMeasure</em></strong> interface (manages the access to the 
		input specifications of the Analysis Feature).
		<p>Moreover, in this module, you will find the implementations of <em><strong>CATI3DGeoVisu</strong></em>,
		<em><strong>CATIVisProperties</strong></em>, <em><strong>CATIParmPublisher</strong></em>,
		<em><strong>CATIParmDirectAccess</strong></em>, <em><strong>CATIReplace</strong></em> and <em><strong>
		CATIFmFeatureBehaviorCustomization.</strong></em></p>
		<ul>
			<li>CAAIMmrMultiMeasure.cpp, the header file is in the PublicInterfaces 
				directory of the CAAMechanicalModelerExtend.edu framework.</li>
			<li>CAAIMmrMultiMeasureAndMeasureSetFactory.cpp, the header file is 
				in the PublicInterfaces directory of the CAAMechanicalModelerExtend.edu 
				framework.</li>
			<li>CAAEMmrMultiMeasure.cpp, the header file is in the LocalInterfaces 
				directory.</li>
			<li>CAAEMmrMultiMeasureAndMeasureSetFactory.cpp, the header file is 
				in the LocalInterfaces directory.</li>
			<li>CAAEMmrMultiMeasureBehavior.cpp, the header file is in the LocalInterfaces 
				directory</li>
			<li>CAAEMmrMultiMeasureReplace.cpp, the header file is in the LocalInterfaces 
				directory.</li>
			<li>CAAEMmrMultiMeasureVisu.cpp, the header file is in the LocalInterfaces 
				directory.</li>
			<li>CAAEMmrMultiMeasureAndMeasureSetVisProperties.cpp, the header file 
				is in the LocalInterfaces directory.</li>
			<li>CAAEMmrMeasureSetVisu.cpp, the header file is in the LocalInterfaces 
				directory.</li>
			<li>CAAEMmrMeasureParmPublisher.cpp, the header file is in the LocalInterfaces 
				directory.</li>
		</ul>
	</li>
	<li><strong>CAAMmrMultiMeasureAndMeasureSetAddIn.m</strong> - This module contains the 
		implementation of the <em><strong>CATIShapeDesignWorkshopAddin</strong></em> 
		interface. In other words, it defines an add-in to Shape Design apps.
		<ul>
			<li>CAAEMmrMultiMeasureAndMeasureSetAdn.cpp, the header file is in the 
				LocalInterfaces directory</li>
		</ul>
	</li>
	<li><strong>CAAMmrMultiMeasureAndMeasureSetUI.m</strong> - This module contains the implementation 
		of the <em><strong>CATIEdit</strong></em> and <em><strong>CATINavigateObject</strong></em> 
		for CAAMmrMultiMeasure and <em><strong>CATISelectShow</strong></em> for CAAMmrMultiMeasure 
		and CAAMmrMeasureSet.
		<p>It also contains the implementation of StateCommands to create and insert 
		CAAMmrMultiMeasures and CAAMmrMeasureSets.</p>
		<ul>
			<li>CATEMmrMultiMeasureSelectShow.cpp, the header file is in the LocalInterfaces 
				directory.</li>
			<li>CAAEMmrMultiMeasureEdit.cpp, the header file is in the LocalInterfaces 
				directory.</li>
			<li>CAAEMmrMultiMeasureNavigateObject.cpp, the header file is in the 
				LocalInterfaces directory.</li>
			<li>CAAMmrMeasureSetStCmd.cpp, the header file is in the LocalInterfaces 
				directory.</li>
			<li>CAAMmrMultiMeasureStCmd.cpp, the header file is in the LocalInterfaces 
				directory.</li>
		</ul>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step-by-Step"></a>Step-by-Step</h2>
<p>Here are the successive steps of the use case:</p>
<ul>
	<li>Creating a feature catalog using OSM language.</li>
	<li>Creating the factory interface of CAAMmrMultiMeasure and MeasureSet.</li>
	<li>Creating the CAAMmrMultiMeasure's interface of type.</li>
	<li>Building the CAAMmrMultiMeasure's result.</li>
	<li>Displaying the computed result in 3D.</li>
	<li>Creating an add-in to Shape Design apps.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The CAAMechanicalModelerExtend.edu &quot;MultiMeasure And MeasureSet&quot; sample 
shows how to create your own Non Geometrical Feature.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAMmrTaMechanicalElement.htm">Non Geometrical Features</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAMmrTaMechanicalSet.htm">Non Geometrical Feature Sets</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAFmFeatModExt/CAAFmExtUcBuildUpdate.htm">
		The Build/Update Protocol</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="#" onclick="CAAlinkOutOfPreqs('CAAVisVisualization/CAAVisUcSampleCATIVisu.htm'); return false;">
		Making a Component Displayable With CATI3DGeoVisu</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="#" onclick="CAAlinkOutOfPreqs('CAAVisVisualization/CAAVisTaGraphicProperties.htm'); return false;">
		Graphical Properties</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [May 2007]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Jan 2011]</td>
		<td>Document updated for V6 modifications</td>
	</tr>
	<tr>
		<td>Version: <strong>3</strong> [Mai 2014]</td>
		<td>Document updated for 3DEXPERIENCE platform migration</td>
 </tr>

</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
