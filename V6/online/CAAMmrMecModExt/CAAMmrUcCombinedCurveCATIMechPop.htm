<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Enabling the Build Deactivation</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Enabling the Build Deactivation</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The main goal of this use case is to describe how to implement the
		<em>CATIMechanicalProperties</em>. This interface enabling for a geometrical 
		feature to manage its activation or deactivation in the update mechanism 
		[<a href="#References">1</a>].</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMmrCombCurveMechanicalProperties Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAMmrCombCurveMechanicalProperties 
						Do</a></li>
					<li><a href="#How">How to Launch CAAMmrCombCurveMechanicalProperties</a></li>
					<li><a href="#Where">Where to Find the CAAMmrCombCurveMechanicalProperties 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case describes the implementation of the <em>CATIMechanicalProperties</em>
interface. This interface has three methods:</p>
<ul>
	<li><code>IsInactive</code>: it returns the status of the feature for the update 
		mechanism.</li>
	<li><code>Activate</code>: it sets that the feature is active for the build.</li>
	<li><code>InActivate</code>: it unsets that the feature is active for the build.</li>
</ul>
<p>If the first method, used by the implementation of the <em>CATIFmFeatureBehavior</em> 
interface [<a href="#References">2</a>], just returns a value, the last two ones 
modify the status value, and regenerate the visualization of the combined curve. 
You will learn how to do that.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMmrCombCurveMechanicalProperties Use Case</h2>
<p>CAAMmrCombCurveMechanicalProperties is a use case of the CAAMechanicalModelerExtend.edu 
framework that illustrates the Mechanical Modeler extended capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMmrCombCurveMechanicalProperties Do</h3>
<p>This use case implements the <em>CATIMechanicalProperties</em> on the Combined 
Curve. To enable the end user to choose the status of the feature (Active or not 
[<a href="#References">3</a>]), a command has been integrated in the sub-contextual 
menu of the Combined Curve.</p>
<table>
	<caption>Fig.1: Contextual Menu</caption>
	<tr>
		<td>
		<img alt="" src="images/CAAMmrCombCrvActivated.jpg" width="404" height="114"/></td>
		<td>
		<img alt="" src="images/CAAMmrCombCrvContextualMenuDeac.jpg" width="408" height="113"/></td>
	</tr>
</table>
<p>When the end user selects a Combined Curve, and rights click, depending on the 
current state of the feature's instance, it can either activate or deactivate it. 
On the above picture:</p>
<ul>
	<li>When the Activate command is proposed, it means that the current state of 
		the feature is &quot;deactivated&quot;. The Activate command (a DS command) 
		calls the <code>Activate</code> method of the <em>CATIMechanicalProperties</em>
		<strong>interface to rebuild the combined curve and refresh the visualization. 
		See <a href="#Fig2">Fig.2</a> on left.</strong></li>
	<li>When the Deactivate command is proposed, it means that the current state 
		of the feature is &quot;activated&quot;. The Deactivate command calls the
		<code>InActivate</code> method of the <em>CATIMechanicalProperties</em>
		<strong>interface to force the build of the combined curve and refresh the visualization. 
		See <a href="#Fig2">Fig.2</a> on right</strong>.</li>
</ul>
<table>
	<caption><a name="Fig2">Fig.2</a>: An Active (left) or Deactivate (right) Combined 
	Curve</caption>
	<tr>
		<td>
		<img alt="" height="284" src="images/CAAMmrCatalogIntegration-PartCombCrv_P2.jpg" width="358"/></td>
		<td>
		<img alt="" height="282" src="images/CAAMmrCombCrvDeactivated.jpg" width="340"/></td>
	</tr>
</table>
<p>On left, the feature is active, and on right it is inactive: the mask of the 
icon is different
<img alt="" height="36" src="images/CAAMmrCombCrvMaskDeactivation.jpg" width="44"/>, 
and the combined curve is not drawn.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAMmrCombCurveMechanicalProperties</h3>
<p>See the section entitled &quot;How to Launch the Combined Curve Use Case&quot; 
in &quot;Creating a New Geometrical 
Feature: The Combined Curve&quot; [<a href="#References">5</a>] for a detailed description of how 
this use case should be launched.</p>
<p>Launch CATIA, when the application is ready, follow the scenario described below:</p>
<ul>
	<li>Open <strong>CAAMmrCombinedCurve</strong> (*).</li>
	<li>Launch <kbd>Generative Shape Design</kbd> app from the <kbd>3D</kbd> quadrant of the compass.</li>
	<li>Right click the <strong>Combined Curve</strong> and select <kbd>Deactivate</kbd>.</li>
	<li>Right click the <strong>Combined Curve</strong> and select <kbd>Activate</kbd>.</li>
</ul>
<p>(*) This represents the Input Model, loaded in the PROVIDER . We have provided 
the CAAMmrCombinedCurve.3dxml file, at the path specified below.</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModelerExtend.edu\InputData\CAAMmrCombinedCurve.3dxml\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contaiInstallRootFolder\CAADocns the Input Model with the following 
attributes:, which needs to be imported to the PROVIDER, you are working with.</p>
<ul>
	<li><strong>PLM_ExternalID</strong>: CAAMmrCombinedCurve</li>
</ul>
<p><strong>Attention</strong>: Its mandatory that you provide a suitable prefix to the PLM_ExternalID 
of the Input Model, while importing a 3D XML file, to ensure that data stored in 
the PROVIDER, is unique.</p>
<p>Please refer to the document [<a href="#References">4</a>] for how to import 
and reimport such a 3D XML file in your PLM repository.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMmrCombCurveMechanicalProperties Code</h3>
<p>The CAAMmrCombCurveMechanicalProperties use case is made of a one class, the
<em>CAAEMmrCombinedCurveMechProp</em> class, located in the CAAMmrCombinedCurve.m 
module of the CAAMechanicalModelerExtend.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModelerExtend.edu\CAAMmrCombinedCurve.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>This use case is divided into two main steps:</p>
<ul>
	<li><a href="#Step1">Defining the CAAEMmrCombinedCurveMechProp Class</a></li>
	<li><a href="#Step2">Implementing the CAAEMmrCombinedCurveMechProp Class</a>
		<ul>
			<li><a href="#Step21">Coding the IsInactive Method</a></li>
			<li><a href="#Step22">Coding the Activate Method</a></li>
			<li><a href="#Step23">Coding the Inactivate Method</a></li>
		</ul>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Defining the CAAEMmrCombinedCurveMechProp Class</h3>
<pre class="code">#include &quot;CATBaseUnknown.h&quot;  
class CAAEMmrCombinedCurveMechProp: public CATBaseUnknown
{
   CATDeclareClass;

   public:

      CAAEMmrCombinedCurveMechProp ();
      virtual ~CAAEMmrCombinedCurveMechProp ();

      virtual int <strong>IsInactive</strong>() const ;
      virtual void <strong>Activate</strong>() ;
      virtual void <strong>InActivate</strong>() ;

   private:

      CAAEMmrCombinedCurveMechProp (CAAEMmrCombinedCurveMechProp &amp;iObjectToCopy);
      CAAEMmrCombinedCurveMechProp&amp; operator=(CAAEMmrCombinedCurveMechProp &amp;iObjectToCopy);

   <strong>private:
      int _status ;</strong>
};</pre>
<p>The <em>CAAEMmrCombinedCurveMechProp</em> C++ class derives from <em>CATBaseUnknown</em>. 
The <code>CATDeclareClass</code> macro declares that the <em>CAAEMmrCombinedCurveMechProp</em> 
class belongs to a component. The copy constructor and the &quot;=&quot; operator 
are set as private to prevent the compiler from automatically creating as public.</p>
<p>The <em>CATIMechanicalProperties</em> interface contains three methods to override:</p>
<ul>
	<li><code>IsInactive</code>: Returns the status of the feature. See
		<a href="#Step21">Coding the IsInactive Method</a>.</li>
	<li><code>Activate</code>: Sets that the feature is active for the build. See
		<a href="#Step22">Coding the Activate Method</a>.</li>
	<li><code>InActivate</code>: Unsets that the feature is active for the build. 
		See <a href="#Step23">Coding the Inactivate Method</a>.</li>
</ul>
<p>In this sample, the status is kept by a data member, <code>_status</code>. But 
in your own implementation, it is strongly recommended to use a new knowledge parameter 
associated with an attribute of the combined curve.</p>
<ul>
	<li>The end user can control the parameter in the Fx command (DS command),</li>
	<li>The parameter is persistent,</li>
	<li>Modifying the parameter automatically update the geometrical feature.</li>
</ul>
<p>The value of the state is the same whatever the implementation code:</p>
<ul>
	<li>0 : the combined curve is active for the build (The default value initialized 
		in the constructor).</li>
	<li>1 : the combined curve is de-active for the build.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Implementing the CAAEMmrCombinedCurveMechProp Class</h3>
<p>As usual, to implement an interface you first need to use the TIE macro.</p>
<pre class="code">CATImplementClass ( CAAEMmrCombinedCurveMechProp ,
                    DataExtension , 
                    CATBaseUnknown ,
                    <strong>CombinedCurve</strong> );

#include &quot;<strong>TIE_CATIMechanicalProperties.h</strong>&quot;  
TIE_CATIMechanicalProperties( CAAEMmrCombinedCurveMechProp);</pre>
<p>The <em>CAAEMmrCombinedCurveMechProp</em> class states that it implements the
<em>CATIMechanicalProperties</em> interface thanks to the <code>TIE_CATIMechanicalProperties</code> macro. 
This extension class is dedicated to this component, and the <code>CATImplementClass</code> 
macro declares that the <em>CAAEMmrCombinedCurveMechProp</em> class is data extension 
class, thanks to the <code>DataExtension</code> keyword, and that it extends the 
component whose main class is CombinedCurve. The third parameter must always be 
set to <em>CATBaseUnknown</em>, makes no sense, and is unused for extensions.</p>
<p>Do not forget to update the interface dictionary. Here it is an extract of the 
CAAMechanicalModelerExtend.edu.dico file located in the CNext folder of the CAAMechanicalModelerExtend.edu 
framework.</p>
<pre class="code">...
CombinedCurve               CATIMechanicalProperties                libCAAMmrCombinedCurve
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step21"></a>Coding the Inactive Method</h3>
<pre class="code">...
int CAAEMmrCombinedCurveMechProp::IsInactive() const
{
   return _status ;
}</pre>
<p>This method only returns the value of <code>_status</code>, the data member.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step22"></a>Coding the Activate Method</h3>
<pre class="code">void CAAEMmrCombinedCurveMechProp::Activate() 
{
...
   <strong>_status = 0 ;</strong>
   <strong>RefreshCombinedCurve</strong>();
...</pre>
<p>The <code>Activate</code> method sets that the geometrical feature must be taken 
into account in the update mechanism. So the value of <code>_status</code>, the 
data member, is set to 0. RefreshCombinedCurve is an internal method that updates 
the visualization of the feature and of it's mask in the tree.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step23"></a>Coding the InActivate Method</h3>
<pre class="code">void CAAEMmrCombinedCurveMechProp::InActivate() 
{
...
   <strong>_status = 1 ;</strong>
   <strong>RefreshCombinedCurve</strong>();
...</pre>
<p>The <code>InActivate</code> method sets that the geometrical feature must not 
be taken into account [<a href="#References">1</a>] in the update mechanism. So 
the value of <code>_status</code>, the data member, is set to 1.</p>
<p>It is the only one difference with the <code>Activate</code> method, the other 
steps are identical: force the update, redraw the tree, and update 
the viewers.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated how to implement the <em>CATIMechanicalProperties</em> 
interface. In the activate or Inactivate methods you should:</p>
<ol>
	<li>Set the value of the status - Use a Knowledge parameter.</li>
	<li>Update the tree to modify the mask of the icon.</li>
	<li>Update viewers to re-visualize the feature which has been updated.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAMmrTaBuildIntegrating.htm">Integrating a New Geometrical 
		Feature in the Update Mechanism</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAMmrUcCombinedCurveBuild.htm">Building Combined Curve</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAMmrUcCombinedCurveConSubMenu.htm">Adding a Contextual Sub-Menu</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAAMmrUcCombinedCurveSamplesOverview.htm">Creating a New Geometrical 
		Feature: the Combined Curve</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2005]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Jan 2011]</td>
		<td>Document updated for V6 modifications</td>
	</tr>
	<tr>
	    <td>Version: <strong>3</strong> [Mai 2014]</td>
	    <td>Document updated for 3DEXPERIENCE platform migration</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
