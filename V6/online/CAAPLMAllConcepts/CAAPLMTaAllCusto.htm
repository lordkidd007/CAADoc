<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script language="JavaScript" src="../CAADocJavaScript/submit.js"></script>
<title>Understanding PLM Modeler and Customization</title>
</head>

<body>

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Understanding PLM Modeler and Customization</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>

<!-- -------------------------------comment---------------------------------- -->
<table class="abstract">
  <tr>
    <td>
      <h2>Abstract</h2>
		<p>Reading the article 'Understanding PLM Modelers' [<a href="#References">1</a>] 
		you have had a glance of the requirements, and a conceptual definition 
		of a PLM Modeler. This current article details more precisely what does 
		the &quot;PLM Modeler&quot; word cover, and what does customize a PLM 
		Modeler mean.&nbsp; </p>
		<p>It is strongly recommended to have previously read the article &quot;Understanding PLM 
		Dictionary&quot; [<a href="#References">2</a>] to take full advantage of this 
		article. </p>
      <ul>
		<li><a href="#PLM Modeler Definition">PLM Modeler Definition</a><ul>
		<li><a href="#PLM Core Modeler Specialization">PLM Core Modeler Specialization</a></li>
        <li><a href="#PLM Modeler Name">PLM Modeler Name</a></li>
		<li><a href="#PLM Modeler Class Contents">PLM Modeler Class Contents</a></li>
		<li><a href="#Top and Sub Modeler">Intermediate Modelers</a></li>
		<li><a href="#PLM Modeler Examples">PLM Modeler Examples</a></li>
      </ul>
    	</li>
		<li><a href="#PLM Customization Definition">PLM Customization Definition</a><ul>
			<li><a href="#PLM Modeler Customization">PLM Modeler Customization</a>
			</li>
			<li><a href="#PLM Customization Class Contents">PLM Customization Class Contents</a></li>
			<li><a href="#PLM Customization Rules">PLM Customization Rules</a></li>
			<li><a href="#PLM Customization Examples">PLM Customization Examples</a></li>
		</ul></li>
		<li><a href="#PLM Custo versus Custo">PLM Instantiable Set Definition</a></li>
		<li><a href="#InShort">In Short</a></li>
		<li><a href="#References">References</a></li>
      </ul>
    </td>
  </tr>
</table>
<!-- -------------------------------comment---------------------------------- -->
<!-- -------------------------------comment---------------------------------- -->
<h2><a name="PLM Modeler Definition"></a>PLM Modeler Definition</h2>
<p>All PLM Modelers are based on an unique modeler, the PLM Core Modeler. 
Referring&nbsp; to the PLM Core Modeler Reference [<a href="#References">3] </a>article, you know that this base modeler is made up of six abstract PLM Classes. Building a PLM 
modeler consists in <i>specializing
</i>(the word will be of course explained next) these six PLM 
Core Classes </p>
<p>Note that <b>PLM Modelers are only created by DS</b>. </p>
<p>Before getting into the details, a quick remember on PLM 
Class [<a href="#References">2</a>]. A PLM Class is defined by</p>
<ul>
	<li>A name (i.e. its type),</li>
	<li>An use,</li>
</ul>
<blockquote>
	<table class="border1" id="table19" >
		<tr>
			<th>Use</th>
			<th>Meaning</th>
		</tr>
		<tr>
			<td><b>Instantiable</b></td>
			<td>A concrete PLM Class which can only be used to 
		create PLM object in the vault.</td>
		</tr>
		<tr>
			<td><b>Customizable</b> </td>
			<td>An abstract PLM Class which cannot be used to create PLM object in the vault. Its unique use is to be 
	enriched to create a new PLM Class which will be Instantiable.</td>
		</tr>
		<tr>
			<td><b>Internal</b> </td>
			<td>An abstract PLM Class too. It can be used 
	to create a new PLM Class which can be Instantiable, customizable or internal.</td>
		</tr>
	</table>
</blockquote>
<ul>
	<li>A list of PLM Attributes, </li>
	<li>A list of PLM Relations,</li>
	<li>A list of PLM Behaviors (there are not stored within the PLM Dictionary, 
	that's code).</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="PLM Core Modeler Specialization"></a>PLM Core Modeler Specialization</h3>
<p>A PLM Modeler is a PLM Core Modeler Specialization. The next picture will be 
the best way to explain what does it means:</p>
<table border="0" id="table2">
	<caption><a name="Fig.1">Fig.1</a> PLM Core Modeler Specialization</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_Specialization2.gif"></td>
	</tr>
</table>
<p>[<a href="#Fig.1">Fig.1</a>] shows the essential things:&nbsp; </p>
<ul>
	<li>A PLM Modeler is a set of PLM Classes, each one a specialization 
	of one PLM Core Modeler Class. </li>
	<li>A PLM Modeler can be a <b>partial</b> specialization of the PLM 
	Core Modeler : You can see that the current PLM Modeler has only five PLM 
	Classes. If the six PLM Core Classes will have been specialized, it will be 
	a full PLM 
	Core Modeler specialization.</li>
	<li>a PLM Modeler can only contain &quot;instantiable&quot; or customizable PLM Classes, 
	it cannot contain internal PLM Classes.&nbsp; </li>
</ul>
<p>And an other hand the next one illustrates what is impossible:</p>
<table border="0" id="table3">
	<caption>Fig.2 Impossible cases</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_Specialization3.gif"></td>
	</tr>
</table>
<ul>
	<li>(1) Two PLM Modeler classes cannot specialize more than once the same PLM Core Class</li>
	<li>(2) No internal class at the PLM Modeler level</li>
	<li>(3) A PLM Modeler Class cannot be a specialization of two PLM Core 
	classes</li>
</ul>
<p>So, we can define a PLM Modeler as a set of at most six PLM Classes, each 
one specializing a PLM Core Modeler class. </p>
<h3><a name="PLM Modeler Name"></a>PLM Modeler Name</h3>
<p>The PLM Modeler classes are stored within the PLM 
dictionary [<a href="#References">2</a>], 
inside one metadata file. Generally the name of this file is also the <b>PLM Modeler name</b>. Nevertheless there are few exceptions like PRODUCT modeler. The 
name of the modeler is PRODUCT, but the name of its metadata is PRODUCTCFG. In 
all CAA API , you use the modeler's name, and never the metadata name.</p>
<p>The PLM Modeler lists, with their exact name, is available on this page [<a href="#References">3</a>]. </p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="PLM Modeler Class Contents"></a>PLM Modeler Class Contents</h3>
<p>Until now we have seen what is made of a PLM Modeler in terms of PLM Classes, but 
we have not described what does really &quot;specialization' mean.&nbsp; A PLM Core 
Class is said <i>specialized</i> by a PLM Modeler class due to these 
specificites:</p>
<ul>
	<li>PLM Attributes of the PLM modeler class are the ones added by the 
	modeler + those of the PLM Core Modeler class,</li>
	<li>No added PLM relations by the modeler, </li>
	<li>PLM Behaviors of the&nbsp; PLM modeler class are the ones added by the 
	modeler + those of the PLM Core Modeler class,</li>
</ul>
<table border="0" id="table4">
	<caption><a name="Fig.3">Fig.3</a> PLM Modeler Class Contents</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_PLMClass.gif" width="308" height="213"></td>
	</tr>
</table>
<p>Whatever the use of the PLM Modeler class (instantiable or customizable) this 
definition is valid.</p>
<script type="text/javascript">insertLinkToTop()</script>
<h3><a name="Top and Sub Modeler"></a>Intermediate Modelers</h3>
<p>Until now we have described the PLM Modeler as a direct specialization of the 
PLM Core Modeler. But to be more exact, between the PLM Modeler and the PLM Core 
Modeler, some intermediate modelers can be defined.&nbsp; </p>
<table border="0" id="table20">
	<caption>Fig.9 Intermediate Modelers</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_subtop.gif"></td>
	</tr>
</table>
<p>To factorize PLM behaviors or PLM Attributes, intermediate modelers (one or 
more) can be defined 
between the PLM Core Modeler and the PLM Modeler. An intermediate modeler can 
only contain internal PLM Classes, like the PLM Core Modeler. </p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="PLM Modeler Examples"></a>PLM Modeler Examples</h3>
<p>We could give three examples to have a concrete view of what can be a PLM Modeler.</p>
<ul>
	<li><a href="#PRODUCT Modeler">PRODUCT Modeler</a> , defined with six customizable PLM 
	Classes </li>
	<li> <a href="#PLMPosRole Modeler">PLMPosRole Modeler</a> , defined with two customizable PLM Classes </li>
	<li> <a href="#CATMaterial Modeler">CATMaterial Modeler</a> , defined with only one 
	instantiable&nbsp; PLM 
	Classes </li>
</ul>
<p>Each one will be illustrated through CAA encyclopedia pages [<a href="#References">3</a>] showing the PLM Data Model of each 
modelers. The PLM Data model being only the PLM Attributes 
of the PLM Classes. </p>
<h4><a name="PRODUCT Modeler"></a>PRODUCT Modeler </h4>
<p>The PRODUCT Modeler is a full specialization of the PLM Core Modeler: the six PLM 
Core Modeler classes are specialized as illustrated by [<a href="#Fig.4">Fig.4</a>]:</p>
<table border="0" id="table5">
	<caption><a name="Fig.4">Fig.4</a> PRODUCT Modeler Definition</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_PRODUCT1.gif"></td>
	</tr>
</table>
<p>You can have a confirmation if you select PRODUCT within the PLM Data Model 
Reference [<a href="#References">3</a>]. The following page, [<a href="#Fig.5">Fig.5</a>],&nbsp; 
is displayed. </p>
<table border="0" id="table6">
	<caption><a name="Fig.5">Fig.5</a> PRODUCT Data Model</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_PRODUCT2.gif"></td>
	</tr>
</table>
<p>[<a href="#Fig.5">Fig.5</a>] shows :</p>
<ul>
	<li>The title name of the page is not &quot;PRODUCT Data Model&quot; but &quot;PRODUCTCFG Data Model&quot;. 
	It is due to the fact that the title at the top of such page is not the name 
	of the modeler but the name of 
	its metadata file. Nevertheless, the modeler 
	name is well PRODUCT, the name is displayed just below.</li>
	<li>You retrieve the six PLM Classes, and you can see they are all 
    customizable. </li>
</ul>
<p>Have a look at one PLM Class of the PRODUCT modeler: when you click 
VPMInstance, The following page, [<a href="#Fig.6">Fig.6</a>],&nbsp; is 
displayed. </p>
<table border="0" id="table16">
	<caption><a name="Fig.6">Fig.6</a> VPMInstance class</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_PRODUCT_Inst.gif"></td>
	</tr>
</table>
<p>[<a href="#Fig.6">Fig.6</a>] shows that the <code>VPMInstance</code> class contains :</p>
<ul>
	<li>PLM 
attributes coming mainly from one PLM Core class (<code>PLMCoreInstance</code>), 
    </li>
    <li>only one PLM attribute (the first) comes from an <a href="#Top and Sub Modeler">
	intermediate</a> modeler (<code>LPAbstractInstance</code>)</li>
    <li>no PLM Attribute added by the class itself</li>
</ul>
<h4>&nbsp;<a name="PLMPosRole Modeler"></a>PLMPosRole Modeler </h4>
<p>It is a PLM modeler with only two PLM Classes. There are both CAA derivable (i.e. 
customizable). </p>
<table border="0" id="table7">
	<caption>Fig.7 &nbsp;PLMPosRole Data Model</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_PLMPosRole.gif"></td>
	</tr>
</table>
<h4>&nbsp;<a name="CATMaterial Modeler"></a>CATMaterial Modeler </h4>
<p>It is a PLM modeler with only one PLM Class, <code>CATMatConnection</code>, which is instantiable. 
(Empty Customizable means Customizable=No)</p>
<table border="0" id="table11">
	<caption>Fig.8 CATMaterial Modeler Data Model</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_CATMaterial.gif"></td>
	</tr>
</table>
<p>(Empty Customizable means Customizable=No)<script type="text/javascript">insertLinkToTop()</script></p>




<h2><a name="PLM Customization Definition"></a>PLM Customization Definition</h2>
<p>A PLM Modeler is defined by a set of PLM 
Classes containing PLM attributes and implementing behaviors fitting the modeler's 
requirements. 
</p>
<p>Sometimes, the designer of the PLM Modeler can consider 
that there is no reason to add something to the modeler, so he/she will define 
the modeler as a set of instantiable PLM Classes. The PLM 
Modeler could not be customized. </p>
<p>But conversely, the 
modeler's designer can consider that additional information may be added to the PLM 
Modeler. In this case, she/he will design as &quot;customizable&quot; the PLM 
Modeler classes. You may add your own information on the Modeler PLM Classes.&nbsp; </p>
<p><b>Contrary to the PLM Modeler, which is only created by DS, PLM Customization 
may be done by customer using DMC tool </b>[<a href="#References">4</a>].</p>
<p>Have a look at the details.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="PLM Modeler Customization"></a>PLM Modeler Customization 
</h3>
<p>The PLM Modeler customization consists in <i>customizing</i> the 
customizable PLM Modeler classes. To simplify the wording, a PLM Modeler 
customization is named a PLM Customization.</p>
<p>[<a href="#Fig.10">Fig.10</a>] , just below, shows a customization of the PLM Modeler 
represented [<a href="#Fig.1">Fig.1</a>]</p>
<table border="0" id="table8">
	<caption><a name="Fig.10">Fig.10</a> PLM Modeler Customization</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_custo.gif"></td>
	</tr>
</table>
<p>[<a href="#Fig.10">Fig.10</a>] shows that:</p>
<ul>
	<li>only the customizable PLM Classes of 
the PLM Modeler are customized. </li>
	<li>a PLM customization is only a set of instantiable PLM classes.</li>
</ul>
<p>And an other hand the next picture illustrates what is impossible:</p>
<table border="0" id="table9">
	<caption><a name="Fig.11">Fig.11</a> Impossible cases</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_custoimpossible.gif"></td>
	</tr>
</table>
<ul>
	<li>(1) (3) An instantiable PLM Class cannot be customized</li>
	<li>(1) a PLM Customization cannot be customized. </li>
	<li>(2) a PLM Core class cannot be customized since it is an internal class</li>
</ul>
<p>If the PLM Customization cannot be customized, a PLM Modeler can be several 
times customized:</p>
<table border="0" id="table10">
	<caption><a name="Fig.12">Fig.12</a> Multi Customization</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_multicusto.gif"></td>
	</tr>
</table>
<p><code>PLMCustomization1</code> and <code>PLMCustomization2</code> are two PLM customizations of the 
same PLM Modeler. </p>
<p>The PLM Customization classes are stored within the PLM dictionary [<a href="#References">2</a>] 
, inside a metadata file whose the name is the <b>PLM customization's name</b> . </p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="PLM Customization Class Contents"></a>PLM Customization Class Contents</h3>
<p>The PLM Modeler customization means that a PLM Customization class 
contains:</p>
<ul>
	<li>a new name, the customization type,</li>
	<li>PLM attributes added by the customer + those of the PLM Modeler + those of the PLM Core 
    Modeler</li>
	<li>No added relations, so the PLM relations are only those of the PLM Core 
	Modeler</li>
	<li>No added behaviors</li>
</ul>
<p>In other words the customization only consists in adding PLM Attributes to 
a PLM Modeler Class. But a customization does not mean that you must absolutely add PLM Attributes. 
You can customize a PLM Modeler Class without adding new PLM attributes. The new PLM Class 
will only contain the PLM Attributes inherited from its PLM modeler class.</p>
<p>If a new PLM Class is created, it contains a specific name (i.e type). But you cannot implement interfaces (behaviors) to the new 
created PLM Class. We have already said in the PLM Dictionary [<a href="#References">2</a>] 
article, that the PLM Class type is not a late type. </p>
<p>About PLM Attributes, the only one restriction is about the &quot;protected&quot; 
flag [<a href="#References">5</a>]: you can only add PLM attributes which are 
either <b>free</b> or <b>user</b>. You cannot add an attribute whose the 
protected flag is internal (reserved modeler level), or external. It is detailed 
in the referenced article [<a href="#References">5</a>]. </p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="PLM Customization Rules"></a>PLM Customization Rules</h3>
<p>In fact there is only one rule to respect : <b>all</b> the customizable PLM Classes 
of a PLM Modeler must be customized.</p>
<p>In the example just below, the customer has only customized the PLM 
Reference, PLM Instance, PLM Representation Reference and PLM Representation 
Instance of the PRODUCT modeler. He/she has not customized the PLM Port and the PLM 
Connection since the PLM classes are useless for his/her application. But this customization is not valid, the six 
customizable PLM Classes of PRODUCT must be customized. </p>
<table border="0" id="table12">
	<caption><a name="Fig.13">Fig.13</a> Customization Rules</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_rule.gif"></td>
	</tr>
</table>
<p>It is mandatory to customize 
ALL the customizable PLM classes of a PLM Modeler. In the previous example, the customer must customize the PLM Port and PLM 
Connection as the forth other PLM Classes. A solution is to create these two 
PLM classes without adding PLM Attributes. </p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="PLM Customization Examples"></a>PLM Customization Examples</h3>
<p>DS provides some customization of its PLM Modeler, taken for example the PRODUCT Modeler. </p>
<p>[<a href="#Fig.14">Fig.14</a>] is the page displayed when you select PRODUCT 
in the PLM Data Model reference page [<a href="#References">3</a>].&nbsp; </p>
<table border="0" id="table13">
	<caption><a name="Fig.14">Fig.14</a> PRODUCT Modeler Customization</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_custoexample.gif"></td>
	</tr>
</table>
<p><code>Data Model</code> gives a link to the modeler (you retrieve <code>
PRODUCTCFG</code> the name of the metadata containing the PRODUCT modeler), and
<code>Custom Data Models</code> lists all PLM customizations provided by DS. 
There is one PLM customization of the PRODUCT modeler: <code>PLMProductDS</code> 
</p>
<table border="0" id="table14">
	<caption><a name="Fig.15">Fig.15</a> PLMProductDS Customization</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_PLMProductDS.gif"></td>
	</tr>
</table>
<p>You retrieve the six PLM Classes. You can see that no PLM Classes are 
derivable, it is normal since a PLM Customization can only contain instantiable PLM Classes.</p>
<p>Taken two PLM Classes to check their contents:</p>
<table border="0" id="table15">
	<caption><a name="Fig.16">Fig.16</a> PLM Customization Class Contents</caption>
	<tr>
		<td valign="top">
		<img border="0" src="images/CAAPLMAllModeler_PLMProductDS_RepRef.gif"></td>
		<td valign="top">
		<img border="0" src="images/CAAPLMAllModeler_PLMProductDS_Inst.gif"></td>
	</tr>
</table>
<ul>
	<li>On the left, the <code>PLMRepresentationDS</code> class: a customization of the PLM 
	Product Representation Reference: You can see that only one PLM attribute has been added (<code>V_RepKind</code>), 
	all others come from a PLM Core class (<code>PLMCoreRepReference</code>).</li>
	<li>On the right, the <code>PLMProductInstanceDS</code> class: a customization of the PLM 
	Product instance: You can see that no PLM attribute has been added, all 
	come from a PLM Core class&nbsp;(<code>PLMCoreInstance</code>), only one 
    comes from an intermediate modeler.</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<h2><a name="PLM Custo versus Custo"></a>PLM Instantiable Set Definition</h2>
<p>The PLM Instantiable Set is a concept only introduced to explain what is made 
of a PLM Environment [<a href="#References">6</a>]. Nevertheless the definition 
has been logically added to this article because the concept is based on PLM 
Modeler and PLM Customization.</p>
<p>A PLM Instantiable Set is the exhaustive set of PLM Instantiable Classes coming 
from a PLM Modeler and one of its PLM Customization. This next picture will explain the purpose.</p>
<table border="0" id="table18">
	<caption>Fig.17 Full Set of Instantiable PLM Classes</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAPLMAllModeler_customization.gif"></td>
	</tr>
</table>
<ul>
	<li><b>Case 1 :</b> The modeler contains instantiable (black) and 
	customizable (dashed) PLM Classes</li>
</ul>
<blockquote>
	<p>The PLM Instantiable Set consists in five instantiable PLM Classes : the four 
	of the PLM Customization 
	and one of the PLM Modeler itself.</p>
</blockquote>
<ul>
	<li><b>Case 2 :</b> The modeler only contains instantiable (black) PLM 
	Classes</li>
</ul>
<blockquote>
	<p>The PLM Instantiable Set&nbsp; consists in four instantiable PLM Classes : those of the PLM 
	Modeler itself </p>
</blockquote>
<ul>
	<li><b>Case 3 :</b> The modeler only contains customizable (dashed) PLM 
	Classes</li>
</ul>
<blockquote>
	<p>The PLM Instantiable Set&nbsp; consists in four instantiable&nbsp; PLM Classes : those of the PLM 
	Customization </p>
</blockquote>
<p>The PLM Instantiable Set is not a reality for the PLM dictionary, there is no 
metadata to describe it. It is just a word to represent what are the 
instantiable PLM Classes that you handle when you specify the name of the 
modeler or the name of one of its customization. So to reference a PLM Instantiable 
Set, either you give a PLM Customization name, or a PLM Modeler name, but only 
when all its PLM Classes are instantiable.</p>
<h2><a name="InShort"></a>In Short</h2>
<p>You have learned that:</p>
<ul>
	<li>PLM Modeler, only designable by DS, is a set of max six PLM classes which 
	are either instantiable or customizable. </li>
	<li>PLM Customization, designable by DS or customer, is the customization of 
	<b>all</b> customizable PLM Modeler classes.&nbsp; </li>
</ul>
<p>If the PLM Modeler class can add Attributes and behaviors, the PLM 
Customization class can only add attributes. </p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -------------------------------comment---------------------------------- -->
<h2><a name="References"></a>References</h2>
<table >
  <tr>
    <td >[1]</td>
    <td><a href="CAAPLMTaAllCorePrinciples.htm">Understanding PLM Modelers</a></td>
  </tr>
  <tr>
    <td >[2]</td>
    <td>
	<a href="CAAPLMTaAllPLMDictionary.htm">Understanding PLM Dictionary</a></td>
  </tr>
  <tr>
    <td >[3]</td>
    <td>PLM Dictionary Reference</td>
		
  </tr>
    
  <tr>
    <td >[4]</td>
    <td>
	DMC Tool</td>
  </tr>
    
  <tr>
    <td >[5]</td>
    <td>
	<a href="CAAPLMTaAllAttributes.htm">Understanding PLM Attributes</a></td>
  </tr>
    
  <tr>
    <td >[6]</td>
    <td>
	<a href="CAAPLMTaAllEnvironment.htm">Understanding PLM Environment</a></td>
  </tr>
    
</table>
<script type="text/javascript">insertLinkToTop()</script>

<!-- -------------------------------comment---------------------------------- -->
<h2><a name="History"></a>History</h2>
<table >
  <tr>
    <td >Version: <strong>1</strong> [Dec 2007]</td>
    <td >Document created</td>
  </tr>
  
</table>
<script type="text/javascript">insertLinkToTop()</script>

<!-- -------------------------------comment---------------------------------- -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>

