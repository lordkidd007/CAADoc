<html>

  <head>
  <meta http-equiv="Content-Language" content="en-us">
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <meta name="GENERATOR" content="Microsoft FrontPage 12.0">
  <meta name="ProgId" content="FrontPage.Editor.Document">
  <link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
  <title>PLM Representation Reference Overview</title>
  <script language="JavaScript" src="../CAADocJavaScript/submit.js">
  </script>  </head>

  <body >

 

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>PLM Representation Reference Overview</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>


   <!---------------------------------comment------------------------------------->
   <table class="abstract">
     <tr>
       <td>
       <h2>Abstract</h2>
       <p><span lang="en-us">This article introduces a PLM Core object the PLM Representation Reference.</span></p>
       <ul>
         <li><a href="#What are PLM Representation Reference">What are PLM Representation References</a>?<ul>
         <li><a href="#PLM Object versus Stream Data">PLM Object versus Stream 
         Data</a></li>
         <li><strong style="font-weight: 400"><a href="#Vault and Store Data">Vault and Store Data</a></strong></li>
       </ul></li>
         <li><a href="#Managing PLM Representation Reference">Managing PLM Representation Reference</a><ul>
           <li><a href="#Creating Representation Reference">Creating PLM Representation Reference</a></li>
           <li><a href="#Selective Loading or Stream Loading Mode">Selective 
           Loading or Stream Loading Mode</a></li>
           <li><a href="#Opening Representation Reference">Opening PLM Representation Reference</a></li>
           <li><a href="#Deleting PLM Representation Reference">Deleting PLM Representation Reference</a></li>
         </ul></li>
         <li><a href="#PLM Reference and PLM Representation Reference">PLM Reference and PLM Representation Reference</a><ul>
         <li><strong style="font-weight: 400">
         <a href="#Multi and Mono Instantiable PLM Representation Reference">Multi and Mono Instantiable PLM 
         Representation Reference</a></strong></li>
         <li><a href="#Multi-Representation">Multi-Representation</a></li>
       </ul>
         </li>
         <li><span lang="en-us"><strong style="font-weight: 400">
         <a href="#InShort">In Short</a></strong></span></li>
         <li><span lang="en-us"><strong style="font-weight: 400">
         <a href="#References">References</a></strong></span></li>
       </ul>
       </td>
     </tr>
   </table>
   <!---------------------------------comment------------------------------------->
   <h2><a name="What are PLM Representation Reference"></a>What are PLM 
   Representation References?</h2>
<p>This chapter presents what is made of a PLM Representation 
Reference.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="PLM Object versus Stream Data"></a>PLM Object versus Stream Data</h3>
<p>A PLM Representation Reference is a PLM Object [<a href="#References">1</a>] 
with PLM attributes [<a href="#References">2</a>] like any other PLM Objects. 
But the PLM Representation Reference has a specificity. It is an object 
representing file data. These file data are called <b>stream</b>. A PLM 
Representation Reference can have several steams: one is the <b>main</b> 
stream, and all others are <b>secondary</b> streams.</p>
	<ul>
		<li>The <b>main</b> stream also called <b>Authoring</b> 
		stream, is what the PLM Representation Reference is created with. This 
        stream can be accessed and its 
		contents can 
		be linked to other PLM objects.</li>
		<li>The <b>secondary</b> streams are by contrast generated internally 
		and cannot be accessed. Moreover no link can be established to other PLM 
		objects. These streams are used in place of the main one for performance 
        reasons.</li>
	</ul>
   <p>The object which enables the PLM Representation Reference to reach a 
   stream in called a <b>stream descriptor</b>. It is an internal object. </p>
<h4>Main Stream</h4>
<p>The stream contains data which can be very different. There are three kinds 
of main streams:</p>
<ul>
  <li>Coming from a <b>non CATIA document</b> : txt, xls , ... files. The list 
  is as follows:</li>
</ul>

		<table border="1" id="table33">
			<caption>Valid File Extension List</caption>
			<tr>
				<td>txt</td>
				<td >xls</td>
				<td>doc</td>
				<td>ppt</td>
				<td>xml</td>
				<td>123</td>
				<td>csv</td>
				<td>pdf</td>
			</tr>
			<tr>
				<td>html</td>
				<td style="width: 54px">IXFelec</td>
				<td>cc360</td>
				<td>isl</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
			</tr>
			<tr>
				<td>&nbsp;</td>
				<td style="width: 54px">lib</td>
				<td>asc</td>
				<td>view</td>
				<td>cloud</td>
				<td>hym</td>
				<td>cbk</td>
				<td>grk</td>
			</tr>
			<tr>
				<td>ac</td>
				<td style="width: 54px">Surf</td>
				<td>xyz</td>
				<td>crs</td>
				<td>lin</td>
				<td>bin</td>
				<td>swl</td>
				<td>cgo</td>
			</tr>
			<tr>
				<td>CATAppliRsc</td>
				<td style="width: 54px">cals</td>
				<td>ioca</td>
				<td>png</td>
				<td>tif</td>
				<td>bmp</td>
				<td>iff</td>
				<td>jpg</td>
			</tr>
			<tr>
				<td>jpeg</td>
				<td >jpe</td>
				<td>pcx</td>
				<td>pic</td>
				<td>gif</td>
				<td>hdr</td>
				<td>exr</td>
				<td>fx</td>
			</tr>
			<tr>
				<td>dds</td>
				<td style="width: 54px">dib</td>
				<td>rle</td>
				<td>bmz</td>
				<td>jfif</td>
				<td>tiff</td>
				<td>model</td>
				<td>cgr</td>
			</tr>
		</table>
	
<ul>
  <li>
  Structured as a <b>V5 </b>document : 3D Shape, CATDrawing, ....
  </li>
</ul>
<blockquote>
  <p>The contents is DS modeler dependant. The contents is structured by 
  containers.</p>
</blockquote>
<ul>
  <li><b>Non typed</b> or <b>Technological</b> Contents</li>
</ul>
<blockquote>
  <p>The contents is, by opposite to the previous one, non DS modeler dependant. 
  Generally you find third party data. Like V5 structure streams, technological 
  streams are structured by containers.</p>
</blockquote>
<p>There is an interface, <i>CATIPLMNavRepReference (</i>CATPLMComponentInterfaces 
FW<i>) , </i>which can give you the category of the main (authoring) stream 
associated with a PLM Representation Reference. </p>
<p>But attention, this interface, like all CATPLMComponentInterfaces FW 
interfaces are PLM Modeler dependant, you should refer to the PLM Modeler's 
documentation to see if the interface is implemented by the PLM Representation 
Reference of the PLM Modeler. Moreover, a PLM Modeler can have a PLM 
Representation Reference whose the type of streams can be less as the ones 
presented. One again Refer to the PLM Modeler documentation for specific details 
about its PLM Representation Reference.</p>
<h4>Secondary Stream</h4>
<p>The type of the secondary streams is modeler's dependant, you should refer to 
each modeler documentation for more information about them. Nevertheless we can 
give on example, the cgr file. When the main stream is a 3DShape (Product 
Modeler), the secondary stream can be a cgr file. It is a file representing the 
3D Shape with light-weight objects since it is only used for visualization purpose.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="Vault and Store Data"></a>Vault and Store Data</h3>
<p>A PLM Representation reference is like any other PLM 
   object stored within the <b>vault</b> database [<a href="#References">4</a>], 
while the streams are stored in the <b>store.</b></p>
<table >
  <caption align="center"><a name="Fig.1">Fig.1</a> Vault and Store Objects</caption>
  <tr>
    <td>
	<img border="0" src="images/CAAPLMAllRepresentationVaultStore.gif"></td>
  </tr>
</table>
   <p>[<a href="#Fig.1">Fig.1</a>] shows that the streams are stored in 
   Store whereas the PLM objects( including PLM Representation references) are 
	stored within the vault, also known as the database/repository. You can also see 
	that a PLM object can only point to a main stream. </p>
<p>If you can query a PLM Representation Reference in the database with PLM 
attributes criteria, you cannot make a query inside the Store. Accessing the 
streams is only possible through its PLM Representation reference. </p>
	<script type="text/javascript">insertLinkToTop()</script>

<h2><a name="Managing PLM Representation Reference"></a>Managing PLM 
Representation Reference</h2>
<p>This section explains how you can create, open, or delete a PLM 
Representation Reference.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="Creating Representation Reference"></a>Creating Representation 
Reference</h3>
<p>There is no generic API to create a PLM Representation Reference. You should 
refer to the PLM Modeler's documentation to retrieve the appropriate interfaces. 
Nevertheless, you can always previously read the technical article &quot;Creating PLM 
Components&quot;&nbsp; [<a href="#References">5</a>] to have an overview of how to 
create a PLM Representation Reference.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="Selective Loading or Stream Loading Mode"></a>Selective Loading or 
Stream Loading Mode</h3>
<p>Before to deal with the opening topic, we should explain what are the loading 
modes. These modes pilote which streams are in memory, and what you can do on 
the loading streams. The kind of modes and their behaviors is typically managed by each PLM 
Modeler. Nevertheless we can give three generic modes with their behaviors:</p>
<table id="table34" border="1">
  <tr>
    <th> <p align="center"><b>Loading Mode </b></th>
    <th> <p align="center"><b>Loaded</b> <b>stream </b> </th>
    <th> <p align="center"><b>Allowed Actions</b></th>
    <th><p align="center"> <b>Usage</b></th>
  </tr>
  <tr>
    <td><b><a name="PLMMode">PLMMode</a></b></td>
    <td>None</td>
    <td>No edition possible</td>
    <td>nothing</td>
  </tr>
  <tr>
    <td><b><a name="VisuMode">VisuMode</a></b></td>
    <td>Secondary stream necessary for visualization</td>
    <td>No edition possible</td>
    <td>The geometry is visualized thanks to a light-weight rendering</td>
  </tr>
  <tr>
    <td><b><a name="EditMode">EditMode</a></b></td>
    <td>Main SD</td>
    <td>All edition allowed</td>
    <td>Full authoring </td>
  </tr>
</table>
<p>Some PLM modelers can propose other loading modes, and can propose to switch 
in session from one mode to another one.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h3 align="left"><a name="Opening Representation Reference"></a>Opening 
   Representation Reference</h3>
	
	<p>Whatever the type of PLM Representation Reference , that can be opened directly by calling <b>
	CATAdpOpener::CompleteAndOpen </b>(CATPLMIntegrationUse
	framework). They are loaded in <a href="#VisuMode">
	VisuMode</a> in this case. Consequently the main stream 
	is loaded with full authoring enabled.</p>
   
       <pre class="code">...
    CATIAdpPLMIdentificator* piPLMIdOnRep=...;
    ...
    CATIPLMComponent *piCompOnRep;
    <strong>CATOmbLifeCycleRootsBag</strong> Bag;
    <strong>CATAdpOpener</strong> opener(Bag)

    hr= opener.<strong>CompleteAndOpen</strong>(piPLMIdOnRep,IID_CATIPLMComponent, (void**) &amp;piCompOnRep);
...</pre>
       
	<p>But a PLM Representation Reference can also be opened indirectly, when being part of a PLM component 
	structure that is opened by <b>
	CATAdpOpener::CompleteAndOpen</b>. This method can open PLM 
    Representation References when the open mode's argument is <b>
	Authoring . </b> (By default method opens Object in Authoring mode ) </p>
       <pre class="code">...
    CATIAdpPLMIdentificator* piPLMIdOnRep=...;
    ...
    CATIPLMComponent *piCompOnRep;
    <strong>CATOmbLifeCycleRootsBag</strong> Bag;
    <strong>CATAdpOpener</strong> opener(Bag)

    hr= opener<strong>.CompleteAndOpen</strong>(piPLMIdOnRep,IID_CATIPLMComponent, (void**) &amp;piCompOnRep);
 ...</pre>
      
   <p>When this method is called with the <b>
	Authoring </b>mode, the V5 structure streams are loaded in 
	<a href="#VisuMode">
	VisuMode</a> whereas the Technological and non CATIA streams are loaded in
	<a href="#PLMMode">PLMMode</a>. </p>

   <script type="text/javascript">insertLinkToTop()</script>
   <!---------------------------------comment------------------------------------->
   <h3><a name="Deleting PLM Representation Reference"></a>Deleting PLM Representation Reference</h3>
<p>Like the creation step there is no generic API to delete a PLM Representation 
Reference. You should refer to the PLM Modeler's documentation.</p>
<script type="text/javascript">insertLinkToTop()</script>

	<h2><a name="PLM Reference and PLM Representation Reference"></a>PLM Reference and PLM Representation Reference</h2>
<p>A PLM Representation Reference can be created to live stand-alone, but 
generally they are linked to a PLM Reference. </p>
<table>
  <caption align="center"><a name="Fig.2">Fig.2</a> PLM Reference links</caption>
  <tr>
    <td>
    <img border="0" src="images/CAAPLMAllRepresentationPLMRefPLMRepRef.gif" width="280" height="127"></td>
  </tr>
</table>
<p>A PLM reference can aggregate a PLM Representation Instance whose the 
reference is a PLM Representation Reference. The CATPLMComponentInterfaces 
framework offerts some interface to manage (in read only) these PLM objects. <i>
CATIPLMNavReference</i> for the PLM Reference, <i>CATIPLMNavRepInstance</i> for 
the PLM Representation instance, and <i>CATIPLMNavRepReference</i> for the<i>
</i>PLM Representation Reference. </p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="Multi and Mono Instantiable PLM Representation Reference"></a>Multi and Mono Instantiable PLM 
         Representation Reference</h3>
<p>A multi instantiable PLM Representation Reference is one which can be 
N times instantiated, the interactive word is <b>Shared</b> PLM Representation 
Reference. By opposite a mono-instantiable PLM Representation Reference can only 
be once instantiated. Fundamentally it means that a none-shared PLM 
Representation Reference cannot exist without its PLM Reference. Sometimes you 
could see also the wording &quot;aggregated PLM Representation Reference&quot; in place of 
&quot;non-instantiable&quot; . It is a short cut to mean that the PLM Representation 
Reference is strongly linked with its PLM Reference.</p>
<p>Having a none-shared PLM Representation Reference implies some specific 
behaviors:</p>
<ul>
  <li>You cannot version a such PLM Representation Reference.&nbsp;When you version its PLM Reference, all its none-shared PLM Representation Reference will be 
  automatically versioned</li>
  <li>You can change their maturity state.</li>
  <li>When you delete the unique instance, the PLM Representation Reference is 
  deleted too. </li>
</ul>
<p>Interactively, a mask on the icon should specify the PLM Representation Reference 
state.</p>
<p>By code, you can know the PLM Representation Reference quality by using the
<code>IsOnceInstantiable</code> method of the <i>CATIPLMNavRepReference</i> interface.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h3><a name="Multi-Representation"></a>Multi-Representation</h3>
<p>[<a href="#Fig.2">Fig.2</a>] , just above, shows that a PLM Reference can 
aggregate a PLM Representation Instance, an instance of a PLM Representation 
Reference. But conceptually a PLM Reference can aggregate several PLM 
Representation Instances.</p>
<table >
  <caption align="center">Fig.3 Multi-Representation</caption>
  <tr>
    <td>
    <img border="0" src="images/CAAPLMAllRepresentationPLMRefPLMRepRef2.gif"></td>
  </tr>
</table>
	<p>It could require to manage the
    <a href="#Selective Loading or Stream Loading Mode">loading mode</a> of each 
    PLM Representation Reference to have a none-superimposed rendering. </p>
    <script type="text/javascript">insertLinkToTop()</script>

<h2><a name="InShort"></a>In Short</h2>
   <p>This article presents a PLM Core object, the PLM Representation Reference. 
   This presentation is an overview, and is PLM Modeler dependant. If you refer 
   to each Modeler's documentation you will learn the specificities of their own 
   type of PLM Representation Reference. </p>
   
  <script type="text/javascript">insertLinkToTop()</script>

   <!---------------------------------comment------------------------------------->
   <h2><a name="References"></a>References</h2>
   <table  id="table16">
     <tr>
       <td  >[1]</td>
       <td >
		<a href="CAAPLMTaAllCorePrinciples.htm">PLM Core Model Overview</a></td>
     </tr>
     <tr>
       <td  >[2]</td>
       <td ><a href="CAAPLMTaAllAttributes.htm">Understanding PLM Attributes </a> </td>
     </tr>
     <tr>
       <td height="15"  >[4]</td>
       <td height="15" ><a href="CAAPLMTaAllClientServerArchi.htm">PLM Client/Server Architecture Overview</a></td>
     </tr>
     <tr>
       <td  >[5]</td>
       <td >To be created</td>
     </tr>
     </table>
  
   <script type="text/javascript">insertLinkToTop()</script>

   <!---------------------------------comment------------------------------------->
   <h2><a name="History"></a>History</h2>
   <table >
     <tr>
       <td >Version: <strong>1</strong> [June 2008]</td>
       <td >Document created</td>
     </tr>
    
   </table>
   <script type="text/javascript">insertLinkToTop()</script>
   <!---------------------------------comment------------------------------------->
   <script type="text/javascript">insertCopyright();</script>


  </body>

</html>

