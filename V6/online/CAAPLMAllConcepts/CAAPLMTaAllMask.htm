<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script language="JavaScript" src="../CAADocJavaScript/submit.js"></script>
<title>PLM Security Mask Overview</title>
</head>

<body>
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>PLM Security Mask Overview</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>

<!-- -------------------------------comment---------------------------------- -->
<table class="abstract">
  <tr>
    <td>
      <h2>Abstract</h2>
      <p>This document describes the PLM Security Mask, how it is defined to control access to PLM component attributes.</p>
      <ul>
		<li><strong style="font-weight: 400"><a href="#Sect1">Access Control</a></strong></li>
		<li><strong style="font-weight: 400"><a href="#Sect2">The Data Model Mask</a></strong></li>
		<li><strong style="font-weight: 400"><a href="#Sect21">The PLM Security Mask</a></strong></li>
		<li><strong style="font-weight: 400"><a href="#Sect3">Customization</a></strong></li>
        <li><strong style="font-weight: 400"><a href="#InShort">In Short</a></strong></li>
        <li><strong style="font-weight: 400"><a href="#References">References</a></strong></li>
      </ul>
    </td>
  </tr>
</table>
<!-- -------------------------------comment---------------------------------- -->
<h2><a name="Sect1"></a>Access Control</h2>
<p>PLM is by definition a collaborative environment, where PLM components are shared 
with 
many disciplines inside a company and possibly outside partners. Having data 
shared by such a wide range of users requires some sort of access control. It 
would delimit which kind of data each user can view or update.</p>
<p>Data which access needs to be controlled are the PLM component's attributes. If this 
control is defined at the data model level [<a href="#References">2</a>], 
it would be impossible to have a varying level of control depending on different 
situations. Every time a user connects to a PLM server, he is assigned a 
security context depending on the role, the organization and the project he has 
selected. It is this security context that determines which attributes are 
acessible or not. The other situations that require different attribute control 
are the PLM operations. A PLM component creation might have fewer attributes 
accessible than a PLM component query operation. Some attributes like the 
creation date, are not meant to be filled by the user and are thus not shown on 
a PLM component creation dialog. However, such attributes can be very useful for 
a query and must indeed be available on PLM component query dialog so that they 
can be filled by the user.</p>
<p>PLM security masks are designed so that attributes can be filtered 
differently: on a security context basis and on a PLM operation basis. Its principle is 
illustrated in the following figure, where it stands between the client and the 
server, acting like a filter on the PLM components' attributes.</p>
<p>&nbsp;</p>
<p align="center">
<img border="0" src="images/CAAPLMAllMask_arch.png" width="417" height="138"></p>
<p align="center">Fig. 1 - Security Mask principle</p>
<p align="left">A PLM Security Mask as shown in the above figure is not defined 
as a single entity but as several constituting mask files. Each of these files 
defines the mask at the data model level.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h2><a name="Sect2"></a>The Data Model Mask</h2>
<p>A data model mask is defined by a text file with the .mask extension. Each mask 
file contains the definition for all the PLM component classes of a given data 
model [2]. These files can be generated by the <code>PLMPosGenMaskFile</code> 
command-line tool.</p>
<p>A mask file can be generated using inheritance. In this case, the definition 
of the inherited attributes are copied from the mask of the deriving data model. 
If inheritance is not used or if there's no mask for the deriving data model, 
then the mask file is generated with all the attributes specified as accessible 
by the data model. This generated mask file needs of course to be reviewed and 
edited.</p>
<p>A 
mask file contains single line directives of the following format:</p>
<p align="center"><i>&lt;directive&gt; &lt;argument1&gt;;&lt;argument2&gt;;...</i></p>
<p>There are six directives in all: <code>MASK</code>, <code>ENTITY</code>,
<code>ATTR</code>, <code>VALUE</code>, <code>FUNC</code> and <code>FATTR</code>. </p>
<p>A mask file begins with the <code>MASK</code> directive which indicates the 
name of the PLM Security Mask to which this file belongs to (more on this later). Following the <code>MASK</code> 
directive are the <code>ENTITY</code> sections.</p>
<p>Each <code>ENTITY</code> section names a PLM component class and contains
<code>
ATTR</code> and <code>VALUE</code> lines. </p>
<p>An <code>ATTR</code> directive lists the attributes of the PLM component 
class that are acessible. Because the mask is a filter to be applied 
on the data model, only attributes that are deemed accessible by the data model 
can be specified by the <code>ATTR</code> directives. This directive also includes 
additional information like:</p>
<ul>
	<li>Whether a value is required (as if this a mandatory attribute [<a href="#References">2</a>])</li>
	<li>The default value (useful for the corresponding PLM component creation 
	dialog)</li>
</ul>
<p>An <span style="letter-spacing: 0"><font color="#000000">
<span style="font-size: 8pt"><code>ATTR</code></span></font></span> directive 
can be followed by several <code>VALUE</code> directives. In this case each
<code>VALUE</code> directive specifies an authorized value. Control is made to 
ensure that the value of this attribute will always belong to this list.</p>
<p>The <code>ENTITY</code> section is followed by six
<span style="letter-spacing: 0"><font color="#000000">
<span style="font-size: 8pt"><code>FUNC</code></span></font></span> sections, 
each one corresponding to a PLM operation:</p>
<ul>
	<li>Create: attributes authorized for display and modification when a PLM 
	component is created</li>
	<li>EZQuery: attributes needed for a simplified query of a PLM component</li>
	<li>Query: attributes allowed as input for a full fledge query of PLM 
	components</li>
	<li>Read: attributes shown when a PLM component is displayed</li>
	<li>Tree: attributes shown when a query result is displayed</li>
	<li>Write: attributes authorized for display and modification when a PLM 
	component is modified</li>
</ul>
<p>A <code>FUNC</code> section names one of the six PLM operations: Create, EZQuery, 
Query, Tree, Read and Write. It is made of <code>FATTR</code> lines (just like 
an <span style="letter-spacing: 0"><font color="#000000">
<span style="font-size: 8pt"><code>ENTITY</code></span></font></span> section is 
made of <span style="letter-spacing: 0"><font color="#000000">
<span style="font-size: 8pt"><code>ATTR</code></span></font></span> lines). The
<code>FATTR</code> directive lists the attributes that are accessible for the 
corresponding PLM operations, and whether they can be modified. Of course 
attributes specified by the <code>FATTR</code> lines must be present in the 
preceding <code>ATTR</code> lines.</p>
<p align="left">In summary, each mask file corresponds to a specific data model. 
Each <code>ENTITY</code> section filters the attributes of a PLM component class 
while each <code>FUNC</code> section further restricts the list of attributes 
that are accessible during a given PLM operation.</p>
<p align="center">
<img border="0" src="images/CAAPLMAllMask_mask.png" width="387" height="319"></p>
<p align="center"><a name="Fig2"></a>Fig. 2 - Example of a Mask file</p>
<p align="left">Let's consider a mask file example, the one of the <code>
PLMProductDS</code> data model customization as shown in <a href="#Fig2">Figure 
2</a>. </p>
<p align="left">The left part represents the structure of the mask file. It 
consists of a <code>MASK</code> section followed by six <code>ENTITY</code> 
sections. The <code>MASK</code> section indicates that the mask belongs to the
<span style="letter-spacing: 0"><font color="#000000" style="font-size: 9pt">
<code>context1</code></font></span> global mask and the&nbsp; <code>ENTITY</code> 
sections correspond to PLM component classes defined by the <code>PLMProductDS</code> 
data model <code>(PLMProductDS</code>, <code>PLMRepresentationDS</code>, ...). 
</p>
<p align="left">The right part details the structure of an <code>ENTITY</code> section, the one 
corresponding to the <code>PLMRepresentationDS</code> PLM component class. The 
first section defines the accessible attributes with the <code>ATTR</code> lines 
and their authorized vlaues with the <code>VALUE</code> lines. It is then 
followed by six <code>FUNC</code> sections, each one further restricting the 
list of accessible attributes during a PLM operation with <code>FATTR</code> 
lines.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h2 align="left"><a name="Sect21"></a>The PLM Security Mask</h2>
<p align="left">As explained in the previous section,&nbsp; each data model mask 
file has a <code>MASK</code> directive which specifies the PLM Security Mask to 
which it belongs to. This whole PLM Security Mask is created by the <code>PLMPosMaskCompiler</code> 
command-line tool. This tool compiles all the .mask files into a single 
.SecurityMask file. It is this file that gets loaded and used at run-time.</p>
<p align="center">
<img border="0" src="images/CAAPLMAllMask_securitymask.png" width="349" height="280"></p>
<p align="center">Fig. 3 - Generation of a PLM Security Mask</p>
<p align="left">There can be any number of PLM Security Masks which are assigned 
to different security contexts by the administrator as needed. The only 
requirement is that the PLM Security Mask named <b>DEFAULT</b> must always be 
defined.</p>
<script type="text/javascript">insertLinkToTop()</script>

<h2><a name="Sect3"></a>Customization</h2>
<p>A generated .mask file can be changed in anyway as long as it does not 
include inaccessible attributes (as specified by the data model).</p>
<p>Any number of PLM Security Masks can be defined to match the requirements of 
the security contexts.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -------------------------------comment---------------------------------- -->
<h2><a name="InShort"></a>In Short</h2>
<p>We have seen how a PLM Security Mask can be defined to filter PLM component 
attributes depending on security contexts and different PLM operations.</p>
<script type="text/javascript">insertLinkToTop()</script>

<!-- -------------------------------comment---------------------------------- -->
<h2><a name="References"></a>References</h2>
<table>
  <tr>
    <td >[1]</td>
    <td><a href="CAAPLMTaAllCusto.htm">PLM Data Model Customization Overview</a></td>
  </tr>
  <tr>
    <td >[2]</td>
    <td><a href="CAAPLMTaAllAttributes.htm">PLM Object Attributes Overview</a></td>
  </tr>
  
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -------------------------------comment---------------------------------- -->
<h2><a name="History"></a>History</h2>
<table >
  <tr>
    <td >Version: <strong>1</strong> [Nov 2006]</td>
    <td >Document created</td>
  </tr>
  
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -------------------------------comment---------------------------------- -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>

