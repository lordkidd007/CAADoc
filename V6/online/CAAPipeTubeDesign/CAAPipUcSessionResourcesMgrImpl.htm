<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Retrieving Information of Available Piping Specifications as Defined in 
Project Resources Management</title>
</head>

<body>

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving Information of Available Piping 
		Specifications as Defined in Project Resources Management</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATPipeTubeDesignUseItf use case. This use 
		case explains how to retrieve information of available Piping 
		Specification as defined in Project Resources Management (PRM)</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPipSessionResourcesMgrImpl Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAPipSessionResourcesMgrImpl Do</a></li>
				<li><a href="#How">How to Launch CAAPipSessionResourcesMgrImpl</a></li>
				<li><a href="#Where">Where to Find the 
					CAAPipSessionResourcesMgrImpl Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming 
with CATIA Piping and Tubing Interfaces.
		<br/>
				Its main intent is to provide you information about available 
Piping Specifications for use as defined in PRM.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPipSessionResourcesMgrImpl Use Case</h2>
<p>CAAPipSessionResourcesMgrImpl.m is a use case of the CAAPipeTubeDesign.edu 
framework that illustrates the CATIA Piping and Tubing Interfaces framework 
capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPipSessionResourcesMgrImpl Do</h3>
<p>The goal of CAAPipSessionResourcesMgrImpl use case is to show how to retrieve 
the available Piping Specifications as defined in PRM.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPipSessionResourcesMgrImpl</h3>
<p>To launch CAAPipSessionResourcesMgrImpl, you will need to set up the build 
time environment, then compile CAAPipSessionResourcesMgrImpl.m along with its 
prerequisites, set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot;CAAPipSessionResourcesMgrImpl Repository Server User Password SecutityCtx Version&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>protocol://Host:port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
    	<th><a name="SecurityCtx"></a>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>Version</th>
		<td>The V_Version attribute value of the reference to be opened.</td>
	</tr>
</table>

<p>* The input piping discipline and design resources are retrieved by importing 
the <strong>PipingResources.3dxml</strong>
    file from the <strong>CAAPipeTubeDesign.edu</strong> framework.
</p>
<p><code> 
InstallRootFolder\CAADoc\CAAPipeTubeDesign.edu\InputData\PipingResources.3dxml</code></p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the 
folder where the API CD-ROM is installed.</p>

<p>This 3D XML file contains Piping Design and Piping Discipline resources.</p>
<p>
  <strong>Attention</strong>: Before executing the project, please ensure <code>Piping Design Resource Set</code> and 
                              <code>Piping Discipline Resource Set</code> must be associated with 
                       <br/>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                          <em>Project (e.g Standard)</em> in user input security context <a href="#SecurityCtx">(SecurityCtx)</a> in Project Resource Management Editor.
</p>
<p>** For more information about <strong>Project Resource Management and its association with Project</strong>, Please refer [<a href="#References">2</a>].
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPipSessionResourcesMgrImpl Code</h3>
<p>The CAAPipSessionResourcesMgrImpl sample is made of a single class named 
CAAPipSessionResourcesMgrImpl located in the CAAPipSessionResourcesMgrImpl.m 
module of the CAAPipeTubeDesign.edu framework:
<code>InstallRootFolder\CAADoc\CAAPipeTubeDesign.edu\CAAPipSessionResourcesMgrImpl.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the 
folder where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CAAAdpCreateSession</em></td>
		<td>Class to create a batch session and connects to a repository.</td>
	</tr>		
	<tr>
		<td><em>CATPipSessionServicesProvider</em></td>
		<td>To create a class instance by its name.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the Piping and Tubing environment and it's 
components creation by looking at the code of the CAAPipSessionResourcesMgrImpl. 
There are five logical steps in CAAHvaSessionResourcesMgrImpl:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>	
	<tr>
		<td>2</td>
		<td><a href="#Step2">Creating a Session</a></td>
	</tr>	
	<tr>
		<td>3</td>
		<td><a href="#Step3">Retrieving the Interface CATIPipSessionResourcesMgr</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Accessing the Available Piping Specifications 
		through the Interface CATIPipSessionResourcesMgr</a></td>
	</tr>	
	<tr>
		<td>5</td>
		<td><a href="#Step5">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
  //------------------------------------------------------------------
  // - The necessary input arguments to start CATIA session
  //------------------------------------------------------------------  
  if (7 != argc)
  {
    cout &lt;&lt; endl;
    cout &lt;&lt;&quot;CAAPipSessionResourcesMgr &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Version&gt;&quot;&lt;&lt; endl;
    cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
    cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project  ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Version: The V_Version attribute value of the reference to be opened&quot; &lt;&lt;endl;
    cout &lt;&lt; endl;
    retCode = 1;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating a Session</h3>
<p>We create a session.</p>
<pre class="code">...
  //------------------------------------------------------------------
  // - For Setting Repository
  //------------------------------------------------------------------  
  repository = argv[1];

  // -----------------------------------------------------------------
  // Create Session
  // -----------------------------------------------------------------
  hr = ::CAAAdpCreateSession(repository, argv[2], argv[3], argv[4], argv[5]);
  if (FAILED(hr)) { retCode = 2; goto EscapeWay; }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Retrieving the Interface CATIPipSessionResourcesMgr</h3>
<p>Retrieve the interface CATIPipSessionResourcesMgr by using method 
GetSessionResourcesMgr of CATPipSessionServicesProvider service provider to 
instantiate a class.
</p>
<pre class="code">...
  //------------------------------------------------------------------
  // - For Setting Environment
  //------------------------------------------------------------------
  uVersion = argv[6];
  cout &lt;&lt; &quot;V_Version : &quot; &lt;&lt; uVersion.ConvertToChar() &lt;&lt; endl ;

  // We do not need any Model for this. Importing the PipingResources.3dxml file from the CAAPipeTubeDesign.edu fw
  // This 3D XML file contains all the piping resources updated in PRM

  //-----------------------------------------------------------------------
  // Instantiate the component
  //-----------------------------------------------------------------------
  hr = CATPipSessionServicesProvider::GetSessionResourcesMgr(pIPipSessionResourcesMgr);
  if( (FAILED(hr)) || (NULL == pIPipSessionResourcesMgr) ) { retCode = 3; goto EscapeWay; }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Accessing the Available Piping Specifications 
through the Interface CATIPipSessionResourcesMgr</h3>
<pre class="code">...
  hr = pIPipSessionResourcesMgr-&gt;GetSpecNames(ListPipingSpecs);
  if( FAILED(hr) ) { retCode = 4; goto EscapeWay; }

  //Currently in the database we have set ONLY 2 Piping Specs. Hence HARD Code this check.
  SizeList = ListPipingSpecs.Size();
  if( 2 != SizeList ) { retCode = 5; goto EscapeWay; }

  cout &lt;&lt; endl &lt;&lt; &quot;Piping Specs Value&quot;;
  cout &lt;&lt; endl &lt;&lt; &quot;========================================================================&quot;;

  for( index = 1; index &lt;= SizeList; index++)
  {
    uPipSpecName = ListPipingSpecs[index];
    if( 1 &gt; uPipSpecName.GetLengthInChar() ) { retCode = 6; goto EscapeWay; }

    cout &lt;&lt; endl &lt;&lt; uPipSpecName.ConvertToChar();
  }
  cout &lt;&lt; endl &lt;&lt; &quot;========================================================================&quot;&lt;&lt; endl;
...</pre>
<script type="text/javascript">  insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Disconnecting and Deleting the Session</h3>
<p>We delete the session and disconnect from the database.</p>
<pre class="code">...
  ListPipingSpecs.RemoveAll();

  //-------------------------------------
  //- Disconnect and Delete session
  //-------------------------------------
  hr = ::CAAAdpCloseSession();
  if (FAILED(hr)) 
  {
    cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
    retCode = 7;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to access the available Piping 
Specifications that are defined in PRM.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
  <tr>
		<td>[2]</td>
		<td>
		<a href="#" onclick="CAAlinkOutOfPreqs('CAAPLMSetUpData/CAAPLMTaProjectResourcePrinciples.htm#Openness for CAA Application'); return false;">		V6 Application Resource and associate the Resource Table to a project</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Apr 2012]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
