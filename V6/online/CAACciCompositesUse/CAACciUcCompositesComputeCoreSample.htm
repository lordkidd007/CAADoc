<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Computing Composites Core Sample</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Computing Composites Core Sample</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the usage of Composites Core sample Operator, 
		how to compute for a set of points laying on composites reference surface 
		the core samples : for each point the operator returns the plies and/or 
		cores which are stacked locally.</p>
		<p>The class CAACciCompositesComputeCoreSample perfoms the core sampling 
		and returns in a file a dump of the points with the corresponding plies 
		entities.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn with This Use Case</a></li>
			<li><a href="#UseCase">The CAACciCompositesComputeCoreSample Use Case
				</a>
				<ul>
					<li><a href="#What">What Does CAACciCompositesComputeCoreSample 
						Do</a></li>
					<li><a href="#How">How to Launch CAACciCompositesComputeCoreSample
						</a></li>
					<li><a href="#Where">Where to Find CAACciCompositesComputeCoreSampleCode</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a> </li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will You Learn With This Use Case</h2>
<p>
<img alt="CompositesCoreSample" height="370" src="images/CAACciCompositesCoreSample.jpg" width="875"/></p>
<p>This use case illustrate the how to use Composites Core Samples Operator in order 
to compute a Core Sampling of the Composites Part using a set of predefined points 
in the 3DShape</p>
<h2><a name="UseCase"></a>The CAACciCompositesComputeCoreSample Use Case</h2>
<p>CAACciCompositesComputeCoreSample is a use case of the CAACompositesUseItf.edu 
framework that illustrates u<code>sage of component </code>CATICciRetrieveCompositesData 
and the usage of accessor orf Composites feature CATICciStacking, CATICcciSequence, 
CATICciPliesGroup, etc ...</p>
<h3><a name="What"></a>What Does CAACciCompositesComputeCoreSample Do</h3>
<p>The goal of CAACciCompositesComputeCoreSample is to open a 3DShape representation 
containing Composites Objet Representations, to scan Composites Features and to 
dump Composites Features informations. </p>
<h3><a name="How"></a>How to Launch CAACciCompositesComputeCoreSample</h3>
<p>To launch CAACciCompositesComputeCoreSample, you will need to set up the build 
time environment, then compile CAACciCompositesComputeCoreSample.m along with its 
prerequisites, set up the run time environment, and then execute the use case [<a href="#References">2</a>].To 
launch the use case execute the command:</p>
<p>mkrun -c &quot;<em>CAACciCompositesComputeCoreSample Repository Server User Password 
SecurityCtx PLMType PLMExternalID Version ReferenceSurface DataFilename </em>&quot;</p>
<p>Where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The name and port of the server as <em>name</em>:<em>port_number</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose a role to access data</td>
	</tr>
	<tr>
		<th>PLMType </th>
		<td>A PLMType for a PLM Reference or PLM Representation Reference.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The <code><strong>PLM_ExternalID</strong></code> ofa PLM Reference or 
		PLM Representation Reference be browsed</td>
	</tr>
	<tr>
		<th>V_version</th>
		<td>The <code><strong>V_version</strong></code> of a PLM Reference or PLM 
		Representation Reference</td>
	</tr>
	<tr>
		<th>ReferenceSurface</th>
		<td>The <code><strong>ReferenceSurface</strong></code> for core sampling, 
		Sample gets lists of points laying on the surface and computes point normals 
		on surface. </td>
	</tr>
	<tr>
		<th>DataFileName</th>
		<td>The <code><strong>FileName</strong></code> is a name for the result 
		dump file, file path if ${CATTemp}/&lt;FileName&gt;.txt</td>
	</tr>
</table>
<p>(*) The Input Model, loaded in the PROVIDER for CAACciCompositesComputeCoreSample 
sample is CAACciCompositesCoreSample.3dxml file, at the path specified below.[<a href="#References">1</a>]</p>
<p><code>InstallRootFolder\CAADoc\CAACompositesUseItf.edu\InputData\CAACciCompositesCoreSample.3dxml\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contains the Input Models with the following attributes:, which 
needs to be imported to the PROVIDER, you are working with.</p>
<ul>
	<li><strong>cd PLM_ExternalID</strong>: Rep-CAACompositesCoreSample00</li>
	<li><strong>Version</strong>: --- </li>
</ul>
<p><strong>Attention</strong>: It is mandatory that you provide a suitable prefix 
to the PLM_ExternalID of the Input Model, while importing a 3D XML file, to ensure 
that data stored in the PROVIDER, is unique.</p>
<p>Please refer to the document [<a href="#References">2</a>] for how to import 
and re-import such a 3D XML file in your PLM repository.</p>
<ul>
	<li>The <strong>first five</strong> are related to the connection and described 
		in the Basic Batch use case [<a href="#References">2</a>]. </li>
	<li>The PLMType is necessary to locate the component in database. </li>
	<li>The IID argument define the <strong>value</strong> of the <strong>attribute 
		name of the representation object in database</strong>. (Used to read or 
		create and save.) </li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAACciCompositesComputeCoreSample Code</h3>
<p>The CAACciCompositesComputeCoreSample use case is made of main program located 
in the CAACciCompositesComputeCoreSample.m module of the CAACompositesUseItf.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAACompositesUseItf.edu\CAACciCompositesComputeCoreSample.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are different logical steps illustrated in CAACciCompositesComputeCoreSample 
navigate in the Composites 3DShape. </p>
<ul>
	<li><a href="#Part">Retrieve Part Feature in the 3DShape</a></li>
	<li><a href="#Component">Use the Composites Data Access Component</a></li>
	<li><a href="#Points">Gets points for core sample</a></li>
	<li><a href="#Run">Run the Core Sample Operator</a></li>
	<li><a href="#Analyse">Get the Core Sample Results and Analyze</a></li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Part"></a>Retrieve Part Feature in the 3DShape</h3>
<p>We open a 3DShape Part representation , all Composites features are instantiated 
in the part container of the 3D Shape representation.</p>
<p>We first get a smart pointer to <em>CATIMmiPrtContainer</em> from the<em>
</em><em>CATIPLMNavRepReference</em> interface tied on the PLMComponent associated 
to the 3DShape then we get the Mechanical Part feature from the <em>CATIMmiMechanicalFeature</em> 
which allow to retrieve <em>CATIMmiUsePrtPart </em>interface.</p>
<pre class="code">
... 
      CATString  StrPLMType = iArgv[6];
  
      rc = ::CAAOpenPLMComponent(StrPLMType,PLM_ExternalIDValue,V_versionValue,
                                 IID_CATIPLMComponent,(void**)&amp; piPLMComponentOnPart,bag,ExpandAll);
... 
     CATIPsiRepresentationLoadMode_var spLoadModeOn3DShape = piPLMComponentOnPart;
	 if (spLoadModeOn3DShape != NULL_var)
        rc = spLoadModeOn3DShape-&gt;ChangeLoadingMode(CATIPsiRepresentationLoadMode::EditMode);

     CATIMmiPrtContainer * piPrtCont = NULL;
     CATIPsiRepRefApplicativeDataAccess * pDataAccess = NULL ; 
     rc = piPLMComponentOnPart-&gt;QueryInterface( IID_CATIPsiRepRefApplicativeDataAccess, (void **) &amp; pDataAccess );
     if (SUCCEEDED(rc) &amp;&amp; NULL != pDataAccess)
      {
          rc = pDataAccess -&gt; RetrieveApplicativeContainer("CATPrtCont",IID_CATIMmiPrtContainer,(void **)&amp;piPrtCont);
          pDataAccess -&gt; Release();        pDataAccess = NULL ;
       }
     ... 
     if (NULL!= piPrtCont)
            spMmiPrtCont=piPrtCont; 
               
    CATIMmiUsePrtPart_var spMmiUsePrtPart; 
    if (NULL_var != spMmiPrtCont) 
    {    
      CATIMmiMechanicalFeature_var spMechFeatOnPart= NULL_var ;
       if (NULL!= piPrtCont) {   
         rc = spMmiPrtCont-&gt; <strong>GetMechanicalPart</strong>(spMechFeatOnPart);
         piPrtCont -&gt; Release();    piPrtCont = NULL;
        }
      }
     spMmiUsePrtPart = spMechFeatOnPart;
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Component"></a>Use the Composites Data Access Component</h3>
<p>Data access component is provided by Composites APIis Interfaces<br />
The component is designed to retrieve Composites Features in the 3DShape </p>
<pre class="code">
... 
    CATICciRetrieveCompositesData * pIRetrieveCompositesData = NULL;
    rc = <strong>CATCreateCciRetrieveCompositesData</strong> (pIRetrieveCompositesData); 
    if (SUCEEDED(rc) ) {
        pIRetrieveCompositesData-&gt;Release() ;pIRetrieveCompositesData = NULL; <span class="comment">// Release of the component after usage </span>
    }
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Points"></a>Gets Points for Core Sample</h3>
<p>A defined list of points is used. For each, we check point is laying on 
the reference surface and compute normal of the surface at the point.&lt;\p&gt;
<br />
All result points data are stored in a CATMathSetOfPointsNDWithVectors CGM 
table object.</p>
<pre class="code">
... 

    int NOfPoints = pListOfPoint.Size();
    CATMathSetOfPointsNDWithVectors CSPoints( 3, NOfPoints );
    for( int ii = 1; ii &lt;= NOfPoints; ii++ )
    {
        CATBody_var pBodyPt ; 
        CATIMmiMechanicalFeature_var spPoint = pListOfPoint[ii];
        CATIMmiUseGeometricalElement_var spGeoPoint= spPoint; 
        if (!!spGeoPoint) {
            spGeoPoint-&gt; <strong>GetBodyResult</strong>(pBodyPt); 
        }

        if (NULL_var !=pBodyPt) 
        {
            CATMathPoint MathPoint; CATMathDirection MathDir; 

            int IslayingOn = ::<strong>IsLayingOn</strong>(spGeoFact, pBodyPt, pBodySurface);
            if (IslayingOn) { 

                double Tol = .001; 
                int iOkNormal  = ::<strong>GetNormal</strong>  (spGeoFact, pBodyPt, pBodySurface, Tol , MathPoint , MathDir) ; 
                if (iOkNormal){ 
                    double normalCoord[3] = {0,0,0};
                    double pointCoord[3] = {0,0,0,}; 
                    MathPoint.GetCoord(pointCoord);
                    MathDir.GetCoord(normalCoord);
                    CATIAlias_var spAlsPoint = spPoint; 
                    CSPoints.AddPointWithVector ( pointCoord, normalCoord );
                }
            }
        }
      }
      CSPoints.Pack();
</pre>
<p>Note: ::IsLayingOn and ::GetNormal are CGM encapsulation tools provided in CAACciCompositesTools.h</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Run"></a>Run the Core Sample Operator</h3>
<p>Core sample operator is a Composites dedicated operator that gets locally one 
Stacking structure &quot;ponctuals&quot; informations like effective stacking sandwish, 
resutlting thickness , etc ... </p>
<pre class="code">
... 
   int retVal = 0 ;
   HRESULT hrst = E_FAIL; 
   CATICciCoreSample* CoreSampleOperItf = NULL;
   CATSoftwareConfiguration * SoftConfig = new CATSoftwareConfiguration();
   rc = <strong>CATCreateCciCoreSample</strong>( CoreSampleOperItf, SoftConfig );
   if( NULL != SoftConfig ){
       SoftConfig-&gt;Release();	SoftConfig = NULL;
   }

   if (NULL!=  CoreSampleOperItf) 
   { 
       // SetUp Parameters and Run 
       CoreSampleOperItf-&gt;<strong>SetParts</strong>( LOfDocs );
       CoreSampleOperItf-&gt;<strong>SetPoints</strong>( CSPoints, 50 );
       CoreSampleOperItf-&gt;<strong>SetPlies</strong>( ListOfEntities );
       rc  = CoreSampleOperItf-&gt;<strong>Run</strong>(3);
       if( FAILED(rc) ){
            <span class="comment">// .....Erreur </span>
            retVal = 1;
       }
       <span class="comment">// Analye Result ...</span>
            
       CoreSampleOperItf-&gt;Release();CoreSampleOperItf = NULL;
  }
       
 ...
 </pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Analyse"></a>Get the Core Sample Results and Analyze</h3>
<p>Core sample operator is a Composites dedicated operator that gets locally one 
Stacking structure a &quot;punctual&quot; information containing the effective stacking, 
allowing for example to compute the local resulting thickness of the composites 
3DShape, etc.</p>
<pre class="code">
... 
   CATLISTV(CATIMmiMechanicalFeature_var)  oEntities;
   double* pDir1 = NULL;
   double* pDir2 = NULL;
   CATListOfInt compDiagnostic;

   int NOfPoints = ....
   for( int i = 1; i &lt;= NOfPoints; i++ )
   {	
        rc  = CoreSampleOperItf-&gt;<strong>GetResultsForAnalysis</strong>(i, oEntities,pDir1,pDir2,compDiagnostic);
        if(SUCCCEEDED(rc) &amp;&amp;  0 != oEntities.Size() ){
           for( int ff = 1,arr = 0; ff &lt;= entSz; ff++ )
           {
              <span class="comment">//..........   
              // Entities list associated to point a index ff  are plies or Cores.  
              // Once list identified it is easy the gets informations on each entity like material,  thickness , fiber direction etc ...   
              //..........
              </span>
           }
           if (NULL!= pDir1) delete [] pDir1; pDir1 = NULL;
           if (NULL!= pDir1)delete [] pDir2; pDir2 = NULL;
           compDiagnostic.RemoveAll();
           oEntities.RemoveAll();
        }
        else {
            <span class="comment"> // ........ No intersection for the Point index: i</span>
        }
  }
 ...
 </pre>
<p>The sample details the interpretation that can be done from the core sampling 
results.</p>
<p>For example, at a given input point, the associated plies with their warp and 
weft directions are dumped in resulting ${CATTemp}/&lt;filename&gt;.txt as follow:
</p>
<pre class="code">
.... 
Point [    40] = Point.64 encountered      8 entities
Ply.1 WARP= (  1.0000 -0.0000  0.0000 ) WEFT= (  0.0000  0.9892 -0.1468 )
Ply.2 WARP= (  0.7071  0.6994 -0.1038 ) WEFT= ( -0.7071  0.6994 -0.1038 )
Ply.3 WARP= (  0.7071 -0.6994  0.1038 ) WEFT= (  0.7071  0.6994 -0.1038 )
Ply.4 WARP= (  0.0000  0.9892 -0.1468 ) WEFT= ( -1.0000  0.0000 -0.0000 )
Ply.5 WARP= (  0.0000  0.9892 -0.1468 ) WEFT= ( -1.0000  0.0000 -0.0000 )
Ply.6 WARP= (  0.7071 -0.6994  0.1038 ) WEFT= (  0.7071  0.6994 -0.1038 )
Ply.7 WARP= (  0.7071  0.6994 -0.1038 ) WEFT= ( -0.7071  0.6994 -0.1038 )
Ply.8 WARP= (  1.0000 -0.0000  0.0000 ) WEFT= (  0.0000  0.9892 -0.1468 )
Point [    41] = Point.65 encountered      8 entities
Ply.1 WARP= (  1.0000 -0.0000  0.0000 ) WEFT= (  0.0000  0.9892 -0.1468 )
Ply.2 WARP= (  0.7071  0.6994 -0.1038 ) WEFT= ( -0.7071  0.6994 -0.1038 )
Ply.3 WARP= (  0.7071 -0.6994  0.1038 ) WEFT= (  0.7071  0.6994 -0.1038 )
Ply.4 WARP= (  0.0000  0.9892 -0.1468 ) WEFT= ( -1.0000  0.0000 -0.0000 )
Ply.5 WARP= (  0.0000  0.9892 -0.1468 ) WEFT= ( -1.0000  0.0000 -0.0000 )
Ply.6 WARP= (  0.7071 -0.6994  0.1038 ) WEFT= (  0.7071  0.6994 -0.1038 )
Ply.7 WARP= (  0.7071  0.6994 -0.1038 ) WEFT= ( -0.7071  0.6994 -0.1038 )
Ply.8 WARP= (  1.0000 -0.0000  0.0000 ) WEFT= (  0.0000  0.9892 -0.1468 )
Point [    42] = Point.66 encountered      8 entities
Ply.1 WARP= (  1.0000 -0.0000  0.0000 ) WEFT= (  0.0000  0.9892 -0.1468 )
Ply.2 WARP= (  0.7071  0.6994 -0.1038 ) WEFT= ( -0.7071  0.6994 -0.1038 )
Ply.3 WARP= (  0.7071 -0.6994  0.1038 ) WEFT= (  0.7071  0.6994 -0.1038 )
Ply.4 WARP= (  0.0000  0.9892 -0.1468 ) WEFT= ( -1.0000  0.0000 -0.0000 )
Ply.5 WARP= (  0.0000  0.9892 -0.1468 ) WEFT= ( -1.0000  0.0000 -0.0000 )
Ply.6 WARP= (  0.7071 -0.6994  0.1038 ) WEFT= (  0.7071  0.6994 -0.1038 )
Ply.7 WARP= (  0.7071  0.6994 -0.1038 ) WEFT= ( -0.7071  0.6994 -0.1038 )
Ply.8 WARP= (  1.0000 -0.0000  0.0000 ) WEFT= (  0.0000  0.9892 -0.1468 )
....
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This article has illustrate how to use Composites CoreSample Operator </p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAACciTaCompositesDesign.htm">About Composites Engineering 
		Design Features</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
