<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating Zones, Define the Zones Laminates</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Zones, Define the Zones Laminates</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the ZoneGroup and Zones Composites Data Model. 
		How to retrieve and/or create Zones Features in the 3D Shape.</p>
		<p>The class CAACciCompositesZonesWithLaminate object explains how to navigate 
		in preliminary design (Zones) Composites Data Model, access to the features, 
		gets information.</p>
		<p>Zones features in the samples are created, modified: for example sample 
		shows how to set up the Zones laminate layout.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn with This Use Case</a></li>
			<li><a href="#UseCase">The CAACciCompositesZonesWithLaminate Use Case
				</a>
				<ul>
					<li><a href="#What">What Does CAACciCompositesZonesWithLaminate 
						Do</a></li>
					<li><a href="#How">How to Launch CAACciCompositesZonesWithLaminate
						</a></li>
					<li><a href="#Where">Where to Find CAACciCompositesZonesWithLaminate 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a> </li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will You Learn With This Use Case</h2>
<p>
<img alt="CompositesCreation" height="448" src="images/CAACciCompositesManufacturingWithZone.jpg" width="850"/></p>
<p>This use case illustrates the ability to navigate in preliminary design objects 
(ZoneGroup/Zones) of Composites Data Model and how to create in Composites Data 
Model new ZoneGroups and new Zones.</p>
<p>The key point of the CAA Preliminary Design APIs from Zones is the ability to 
set up the layout of the laminates associated to Zones. Basic CAA scenario consists 
in initialized Zones definition, Structure, Material, Layout. (Users need afterwards 
to work interactively in the 3DShape to fulfill the design ( transition, EOP, ...).</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAACciCompositesZonesWithLaminate Use Case</h2>
<p>CAACciCompositesZonesWithLaminate is a use case of the CAACompositesUseItf.edu 
framework that illustrates usage of component. CATICciRetrieveCompositesData, CATICciCompositesDataFactory, 
and the usage of accessor of Composites features CATICciCompositesParameters, CATICciZonesGroup, 
CATICciZone, CATICciCompositesGeometry, CATICciContour.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAACciCompositesZonesWithLaminate Do</h3>
<p>The goal of CAACciCompositesZonesWithLaminate is to open a 3DShape representation 
containing Composites Objet Representations, to scan Composites Features and to 
dump Composites Features information.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAACciCompositesZonesWithLaminate</h3>
<p>To launch CAACciCompositesZonesWithLaminate, you will need to set up the build 
time environment, then compile CAACciCompositesZonesWithLaminate.m along with its 
prerequisites, set up the run time environment, and then execute the use case [<a href="#References">2</a>].To 
launch the use case execute the command:</p>
<p>mkrun -c &quot;<em>CAACciCompositesZonesWithLaminate Repository Server User Password 
SecurityCtx PLMType PLMExternalID Version</em>&quot;</p>
<p>Where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td style="width: 570px">
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td style="width: 570px">The name and port of the server as <em>name</em>:<em>port_number</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td style="width: 570px">The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td style="width: 570px">The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td style="width: 570px">A string representing the security context (Role.Organization.Project). 
		Choose a role to access data</td>
	</tr>
	<tr>
		<th>PLMType </th>
		<td>A PLMType for a PLM Reference or PLM Representation Reference.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td style="width: 570px">The <code><strong>PLM_ExternalID</strong></code> 
		ofa PLM Reference or PLM Representation Reference be browsed</td>
	</tr>
	<tr>
		<th>V_version</th>
		<td style="width: 570px">The <code><strong>V_version</strong></code> of 
		a PLM Reference or PLM Representation Reference</td>
	</tr>
</table>
<p>(*) The Input Model, loaded in the PROVIDER for CAACciCompositesZonesWithLaminate 
sample is CAACciCompositesManufacturingWithZone.3dxml file, at the path specified below.[<a href="#References">1</a>]</p>
<p><code>InstallRootFolder\CAADoc\CAACompositesUseItf.edu\InputData\CAACciCompositesManufacturingWithZone.3dxml\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contains the Input Models with the following attributes:, which 
needs to be imported to the PROVIDER, you are working with.</p>
<ul>
	<li><strong>PLM_ExternalID</strong>: Rep-CompositesManufacturingWithZone</li>
	<li><strong>Version</strong>: --- </li>
</ul>
<p><strong>Attention</strong>: It is mandatory that you provide a suitable prefix 
to the PLM_ExternalID of the Input Model, while importing a 3D XML file, to ensure 
that data stored in the PROVIDER, is unique.</p>
<p>Please refer to the document [<a href="#References">2</a>] for how to import 
and re-import such a 3D XML file in your PLM repository.</p>
<ul>
	<li>The <strong>first five</strong> are related to the connection and described 
		in the Basic Batch use case [<a href="#References">2</a>]. </li>
	<li>The PLMType is necessary to locate the component in database. </li>
	<li>The IID argument define the <strong>value</strong> of the <strong>attribute 
		name of the representation object in database</strong>. (Used to read or 
		create and save.) </li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAACciCompositesZonesWithLaminate Code</h3>
<p>The CAACciCompositesZonesWithLaminate use case is made of main program located 
in the CAACciCompositesZonesWithLaminate.m module of the CAACompositesUseItf.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAACompositesUseItf.edu\CAACciCompositesZonesWithLaminate.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are different logical steps illustrated in CAACciCompositesZonesWithLaminate 
navigate in the Composites 3DShape. </p>
<ul>
	<li><a href="#Part">Retrieve Part Feature in the 3DShape</a></li>
	<li><a href="#Component">Use the Composites Data Access Component</a></li>
	<li><a href="#Factory">Composites Object Factory</a></li>
	<li><a href="#ZoneGroup">Create a New ZoneGroup</a></li>
	<li><a href="#Zones">Create New Zone(s) in a ZoneGroup</a></li>
	<li><a href="#Update">Update</a></li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Part"></a>Retrieve Part Feature in the 3DShape</h3>
<p>We open a 3DShape Part representation , all Composites features are instantiated 
in the part container of the 3D Shape representation.</p>
<p>We first get a smart pointer to <em>CATIMmiPrtContainer</em> from the<em>CATIPLMNavRepReference</em> 
interface tied on the PLMComponent associated to the 3DShape then we get the Mechanical 
Part feature from the<em>CATIMmiMechanicalFeature</em> which allow to retrieve
<em>CATIMmiUsePrtPart</em>interface.</p>
<pre class="code">...  
      CATString  StrPLMType = iArgv[6];
  
      rc = ::CAAOpenPLMComponent(StrPLMType,PLM_ExternalIDValue,V_versionValue,
                                 IID_CATIPLMComponent,(void**)&amp; piPLMComponentOnPart,bag,ExpandAll);
... 
     CATIPsiRepresentationLoadMode_var spLoadModeOn3DShape = piPLMComponentOnPart;
	 if (spLoadModeOn3DShape != NULL_var)
        rc = spLoadModeOn3DShape-&gt;ChangeLoadingMode(CATIPsiRepresentationLoadMode::EditMode);

     CATIMmiPrtContainer * piPrtCont = NULL;
     CATIPsiRepRefApplicativeDataAccess * pDataAccess = NULL ; 
     rc = piPLMComponentOnPart-&gt;QueryInterface( IID_CATIPsiRepRefApplicativeDataAccess, (void **) &amp; pDataAccess );
     if (SUCCEEDED(rc) &amp;&amp; NULL != pDataAccess)
      {
          rc = pDataAccess -&gt; RetrieveApplicativeContainer("CATPrtCont",IID_CATIMmiPrtContainer,(void **)&amp;pMmiUsePrtCont);
          pDataAccess -&gt; Release();        pDataAccess = NULL ;
       }


    CATIMmiMechanicalFeature_var spMechFeatOnPart ;
    if (NULL!= pMmiUsePrtCont) {   
      rc = pMmiUsePrtCont-&gt; GetMechanicalPart(spMechFeatOnPart);
      pMmiUsePrtCont-&gt; Release();    pMmiUsePrtCont= NULL;
    }
    CATIMmiUsePrtPart_var spMmiUsePrtPart = spMechFeatOnPart;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Component"></a>Use the Composites Data Access Component</h3>
<p>Data access component is provided by Composites APIis Interfaces<br />
The component is designed to retrieve Composites Features in the 3DShape </p>
<pre class="code">... 
    CATICciRetrieveCompositesData * pIRetrieveCompositesData = NULL;
    rc = 	<strong>CATCreateCciRetrieveCompositesData</strong> (pIRetrieveCompositesData); 
    if (SUCEEDED(rc) ) {
        //...
        pIRetrieveCompositesData-&gt;Release(); pIRetrieveCompositesData = NULL;  <span class="comment">// Release of the component after usage </span>
    }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Factory"></a>Composites Object Factory</h3>
<p>The CATICciCompositesDataFactory APIs Interfaces allows to create composites 
objects 3DShape.</p>
<pre class="code">... 
    CATICciCompositesDataFactory_var spICreateCompositesData( pMmiUsePrtCont);
    if( NULL_var == spICreateCompositesData ){ 
      return   1;
    }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="ZoneGroup"></a>Create a New ZoneGroup</h3>
<p>CATICciCompositesDataFactory::CreatePliesGroup is used to create new pliesGroup. 
A reference surface, a draping direction and a rosette reference need to be provide 
when it is created. If no pPliesGroup name is provided as input system will automatically 
compute the PliesGroup name. </p>
<pre class="code">... 
    CATBoolean DrapingDir = FALSE;
     <span class="comment">//----------------- Creation of a Zone Group -----------------</span>
    CATUnicodeString ZoneGpName = &quot;&quot;;
    CATICciZonesGroup_var ZonesGpCAA = 
    spICreateCompositesData -&gt; <strong>CreateZonesGroup</strong>( ZoneGpName, spMmiSurface,DrapingDir, spMfRosette );
    if( NULL_var != ZonesGpCAA ){
       <span class="comment">//....</span>
    }
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Zones"></a>Create New Zone(s) in a ZoneGroup</h3>
<p>CATICciCompositesDataFactory::CreateZone is used to create a new Zone. A reference 
surface, a Shell support and a rosette references need to be provide when Zone is 
created. </p>
<p>In addition Zone APIs give the ability to setup the laminate thickness law on 
the zone for the defined material and direction of composites parameters. <br />
This can be usefully as well when the Zone structure already exists and when the 
CAA developer has to modify or renew the laminate thickness law on Zones.</p>
<pre class="code">... 
    CATICciCompositesGeometry_var spCompositesGeometry ;
    CATICciContour_var spContour;

     <span class="comment">//----------------- Creation of a Zone -----------------</span>
    CATICciZone_var spZoneCaa; 
    int nbZone = .... 
    int iIdxZone =0 ; 
    for (iIdxZone=1 ; iIdxZone&lt;=nbZone ; iIdxZone++ ) 
    {
   
        CATUnicodeString ZoneName = &quot;&quot;;
        spZoneCaa = spICreateCompositesData -&gt; <strong>CreateZone</strong>( ZoneName,	ZonesGpCAA );
        if( NULL_var != spZoneCaa ) 
        {
             <span class="comment">//Contour </span>
            spCompositesGeometry = NULL_var;
            rc = spZoneCaa -&gt; GetCompositesGeometry(spCompositesGeometry);
            if (NULL_var != spCompositesGeometry)
            {
                rc = spCompositesGeometry -&gt; <strong>AddContour</strong>(spContour);
                if (NULL_var != spContour)
                {
                    
                     <span class="comment">// Shell </span>
                    rc = spContour -&gt; <strong>SetSupportShell</strong> (spMmiSurface);
                    
                     <span class="comment">//List curves for a contour / (retrieve curves required for contout..)</span> 
                     CATLISTV(CATIMmiMechanicalFeature_var) spMechFeatListOfContourWires =....;
                    
                    if (spMechFeatListOfContourWires.Size() &gt;0 ) { 
                        rc = spContour -&gt; <strong>SetCurves</strong> (spMechFeatListOfContourWires);
 	            }

 	             <span class="comment">//Rosette</span>
                    if (NULL_var != spMfRosette){ 
                        rc = spZoneCaa -&gt; <strong>SetRosette</strong>( spMfRosette);
                    }


 	            <span class="comment">//Set Up Layer Infos</span>  
                   if (MaterialList.Size() &gt;0 ){ 
                        rc = spZoneCaa -&gt; <strong>SetMaterials</strong>( MaterialList );

                        <span class="comment">//Thickness law : for each material , define number of laye for each direction (Here numlayer = 1 for each) </span>
		      for (int kk =1 ; kk &lt;= MaterialList.Size(); kk++ ) {
                            int *Array = new int[NbOfDir];
                            for ( int ll =0 ; ll &lt;  NbOfDir ; ll++){
                                   Array[ll] = 1 ;
                            }
                              
                            CATListOfInt Layers( Array,NbOfDir);
                            rc = spZoneCaa -&gt; <strong>SetNumberOfLayers</strong>( kk,Layers );
                            delete []Array;   Array = NULL;
                        }
                    }
                } 
            }  <span class="comment">// End Contour setup for the zone </span>
        }            
     }  <span class="comment">// End loop on Zone to be created </span>
 ...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Update"></a>Update</h3>
<p>After Composites objects creation in the 3DShape, update the 3DShape [<a href="#References">1</a>].</p>
<pre class="code">... 
    CATIUseEntity *pUseEntity= NULL;
    rc = spMmiUsePrtPart-&gt;QueryInterface(IID_CATIUseEntity , (void**)&amp; pUseEntity);
    if ( SUCCEEDED(rc))	{
        rc = DataCommonProtocolServices::Update(pUseEntity);
        pUseEntity-&gt;Release(); pUseEntity = NULL ;
    }
    if (FAILED(rc)){
      <span class="comment">// ... UPDATE ERROR</span>
       RetCode = 1 ;
    }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This article has demonstrated how to create or edit the zone preliminary design</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAAFmFeatMod/CAAFmTaOverview.htm">
		Feature Modeler Concept</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAACciTaCompositesDesign.htm">About Composites Engineering 
		Design Features </a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
