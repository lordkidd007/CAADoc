<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating an SFD Opening Using a Sketch Profile</title>
</head>

<body onload="highlightSearchTerms();">

<table class="table1">
	<tr>
		<td class="DocHeader3">
		<table>
			<tr>
				<td class="DocHeader1" colspan="2">
				<h1>Creating an SFD Opening Using a Sketch Profile</h1>
				</td>
			</tr>
			<tr>
				<td class="DocHeader4" colspan="2">&nbsp;</td>
			</tr>
			<tr>
				<td class="DocHeader3">
				<table class="DocHeaderIntro">
					<tr>
						<td class="Intro1">
						<p class="header"><a name="hj-top"></a>This use case primarily 
						focuses on the methodology to create a SFD Opening using 
						sketch profile.</p>
						<div id="toc">
						</div>
						<hr class="header" /></td>
					</tr>
					<tr>
						<td class="Intro2"><span class="run-in">Before you begin:</span> 
						Note that:<ul>
							<li>You should first launch CATIA and import the
							<code>CAAScdSfdUcPart.3dxml</code>, <code>CAAScdSfdUcCGR.3dxml</code> 
							and <code>CAAScdSfdUcSR.3dxml</code> files supplied 
							in folder <code>InstallRootDirectory\CAADoc\Doc\online\CAAScdSfdModeler\samples\</code> 
							where <code>InstallRootDirectory</code> is the directory 
							where the CAA CD-ROM is installed.</li>
						</ul>
						<p><span class="run-in">Where to find the macro:
						<a href="CAAScdSfdUcCreateOpeningSketchSource.htm">CAAScdSfdUcCreateOpeningSketchSource.htm</a></span></p>
						</td>
					</tr>
				</table>
				</td>
				<td class="DocHeader2">
				<table class="DocTopics">
					<tr>
						<td class="TopicsTitle">Related Topics</td>
					</tr>
					<tr>
						<td>&lt;<em>topic1</em>&gt;</td>
					</tr>
					<tr>
						<td>&lt;<em>topic2</em>&gt;</td>
					</tr>
				</table>
				</td>
			</tr>
		</table>
		</td>
	</tr>
</table>
<table class="indented">
	<tr>
		<td>
		<p>This use case can be divided in nine steps:</p>
		<ol>
			<li><a href="#Step1">Searches and opens model which is named as &quot;SFD_VB_TEST&quot;</a></li>
			<li><a href="#Step2">Retrieves Selection object</a></li>
			<li><a href="#Step3">Retrieves Part object</a></li>
			<li><a href="#Step4">Retrieves a SFD panel object</a></li>
			<li><a href="#Step5">Retrieves first sketch profile</a></li>
			<li><a href="#Step6">Creates opening with limit mode set to UpToLast</a></li>
			<li><a href="#Step7">Retrieves second sketch profile</a></li>
			<li><a href="#Step8">Creates opening with limit mode set to dimensions(Limit1/Limit2)</a></li>
			<li><a href="#Step9">Updates the Part object</a></li>
		</ol>
		</td>
	</tr>
</table>
<table class="table1">
	<tr>
		<td>
		<ol class="task">
			<li>
			<p><strong><a name="Step1"></a>Searches and opens model which is named 
			as &quot;SFD_VB_TEST&quot; </strong></p>
			<p>As a first step, the UC retrieves a model &quot;SFD_VB_TEST&quot; from DB and 
			loads it and returns object of the Editor. </p>
			<pre class="code">... 
 <span class="keyword">Dim </span>SFDPrdEditor <span class="keyword"> As </span> Editor
<span class="keyword"> Dim </span>prdName<span class="keyword"> As </span>String
 prdName = &quot;SFD_VB_TEST&quot;
 OpenProduct prdName , SFDPrdEditor
...</pre>
			<p>The function <strong><code>OpenProduct</code></strong> returns
			<strong><code>SFDPrdEditor</code></strong>, a Editor object. After searching 
			and opening of SFD model from underlying database the current active 
			editor is returned in <strong><code>SFDPrdEditor</code></strong>.</p>
			</li>
			<li>
			<p><strong><a name="Step2"></a>Retrieves Selection Object</strong></p>
			<p>As a next step, the UC retrieves Selection object in SFDProdSel variable. 
			To retrieve the Selection object <strong><code>SFDPrdEditor </code>
			</strong>is used.</p>
			<pre class="code"> ...
    <span class="keyword">Set</span> SFDProdSel = SFDPrdEditor<strong>.Selection </strong>
 ...
</pre>
			</li>
			<li>
			<p><strong><a name="Step3"></a>Retrieves Part object</strong></p>
			<p>In this step UC retrieves Part object ObjPart variable.</p>
			<pre class="code">...
  <span class="keyword">Set</span> ObjPart = SFDPrdEditor.<strong>ActiveObject</strong>
...</pre>
			</li>
			<li>
			<p><strong><a name="Step4"></a>Retrieves a SFD panel object</strong></p>
			<p>In this step UC retrieves panel object.</p>
			<pre class="code">...
  <span class="keyword">Set</span> RefSfdPanel = ObjPart.<strong>FindObjectByName</strong>(&quot;Panel.1&quot;)
  <span class="keyword">Dim</span> ObjSfdPanel <span class="keyword">As</span> SfdPanel
  SFDProdSel.<strong>Add</strong> RefSfdPanel
  <span class="keyword">Set</span> ObjSfdPanel = SFDProdSel.<strong>FindObject</strong>(&quot;CATIASfdPanel&quot;)
...</pre>
			<p><code>FindObjectByName</code> method finds object whose name is &quot;Panel.1&quot; 
			and returns reference to it. Here RefSfdPanel is of type <code>Reference</code>. 
			To retrieve <code>SfdPanel</code> object from <code>Reference</code> 
			add retrieved reference to the selection and call <code>FindObject</code> 
			method as shown above. This will return the <code>SfdPanel</code> object 
			variable. </p>
			</li>
			<li>
			<p><strong><a name="Step5"></a>Retrieves first sketch profile</strong></p>
			<p>In this step UC retrieves a sketch profile.</p>
			<pre class="code">...
  <span class="keyword">Set</span> ProfileSketchOpeningUpToLast = ObjPart.<strong>FindObjectByName</strong>(&quot;Profile.1&quot;)
  <span class="keyword">Set</span> RefProfileSketchOpeningUpToLast = ObjPart.<strong>CreateReferenceFromObject</strong>(ProfileSketchOpeningUpToLast)
...</pre>
			<p><code>FindObjectByName</code> method finds object whose name is &quot;Profile.1&quot; 
			and returns reference to it. Here RefProfileSketchOpeningUpToLast is 
			of type <code>Reference</code>. To retrieve the <code>RefProfileSketchOpeningUpToLast</code> 
			object from <code>ProfileSketchOpeningUpToLast</code> object <code>CreateReferenceFromObject</code> 
			method is used.</p>
			</li>
			<li>
			<p><strong><a name="Step6"></a>Creates opening with limit mode set to UpToLast</strong></p>
			<p>Now, panel and sketch profile are available to create opening. Call
			<code>CreateOpeningSketchUpToLast</code> method to create opening on 
			panel using sketch profile. <code>CreateOpeningSketchUpToLast</code> 
			method takes a panel and a sketch profile as input parameters and it 
			returns created opening as output parameter in <code>ObjStrOpeningWtLtMdUpToLast</code>.</p>
			<pre class="code">...
  <span class="keyword">Dim</span> ObjStrOpeningWtLtMdUpToLast <span class="keyword">As</span> StrOpening
  <strong>CreateOpeningSketchUpToLast</strong> ObjSfdPanel, RefProfileSketchOpeningUpToLast, ObjStrOpeningWtLtMdUpToLast
...</pre>
			<p>The method <code>CreateOpeningSketchUpToLast</code> is detailed as 
			in the below sub steps.</p>
			<ol class="task" style="list-style-type: lower-roman">
				<li>
				<p><strong>Creates a opening with no properties set</strong></p>
				<pre class="code"><span class="keyword">Sub</span> <strong>CreateOpeningSketchUpToLast</strong>(iObjSfdPanel <span class="keyword">As</span> SfdPanel, iRefProfileSketch <span class="keyword">As</span> Reference, oObjStrOpening <span class="keyword">As</span> StrOpening)
  <strong><a href="#AddOpening">AddOpening</a></strong> iObjSfdPanel, oObjStrOpening
...</pre>
				<p>In this step Uc calls a method <code>AddOpening</code> which 
				creates a opening with no properties set and returns it in output 
				parameter <code>oObjStrOpening</code>. Uc sets different properties 
				like catgory, type of opening, etc. of the opening in the subsequent 
				steps.</p>
				</li>
				<li>
				<p><strong>Sets opening type to catStrOpeningModeOutputProfile for sketch opening</strong></p>
				<pre class="code">...
  <strong><a href="#SetOpeningType">SetOpeningType</a></strong> oObjStrOpening, catStrOpeningModeOutputProfile
...</pre>
				<p>In this step Uc calls a method <code>SetOpeningType</code>. This 
				method takes a opening (oObjStrOpening) and opening type value (catStrOpeningModeOutputProfile) 
				as input parameters.</p>
				</li>
				<li>
				<p><strong>Sets category</strong></p>
				<pre class="code">...
  <strong><a href="#SetCategory">SetCategory</a></strong> oObjStrOpening, &quot;SldOpening&quot;
...</pre>
				<p>In this step Uc calls a method <code>SetCategory</code>, it sets 
				the category of the opening. This method takes a opening (oObjStrOpening) 
				and category (&quot;SldOpening&quot;) as input parameters.</p>
				</li>
				<li>
				<p><strong>Retrieves StrOpeningExtrusionMngt and sets forming extrusion 
				mode</strong></p>
				<pre class="code">...
    <span class="keyword">Set</span> ObjStrOpeningExtrusionMngt = oObjStrOpening.<strong>StrOpeningExtrusionMngt</strong>
    ObjStrOpeningExtrusionMngt.<strong>ExtrusionMode</strong> = 2
...</pre>
				<p>In this step object forming extrusion mode is set. To set the 
				forming extrusion mode, extrusion mode value is assigned to property
				<code>ExtrusionMode</code>. Here 2 defines After Forming Extrusion 
				Mode.</p>
				</li>
				<li>
				<p><strong>Sets output profile</strong></p>
				<pre class="code">...
  <span class="comment">&#39;set LimitMode to 0 for UpTOLast</span>
  <strong><a href="#SetOutPutProfile">SetOutPutProfile</a></strong> oObjStrOpening, iRefProfileSketch, 0
...</pre>
				<p>In this step Uc calls a method <code>SetOutPutProfile</code>. 
				It sets the output profile, direction and limit mode for the opening. 
				This method takes a opening(oObjStrOpening), reference to sketch 
				profile(iRefProfileSketch) and limit mode value(0) as input parameters. 
				Here 0 means limit mode(Extrusion) is set to &quot;UpToLast&quot;.</p>
				</li>
				<li>
				<p><strong>Updates created opening object</strong></p>
				<pre class="code">...
    ObjPart.<strong>UpdateObject</strong> oObjStrOpening
<span class="keyword">End Sub</span></pre>
				<p>Method <code>UpdateObject</code> updates the created opening.</p>
				</li>
			</ol>
			</li>
			<li>
			<p><strong><a name="Step7"></a>Retrieves second sketch profile</strong></p>
			<pre class="code">...
  <span class="keyword">Set</span> ProfileSketchOpeningDimensions = ObjPart.FindObjectByName(&quot;Profile.2&quot;)
  <span class="keyword">Set</span> RefProfileSketchOpeningDimensions = ObjPart.CreateReferenceFromObject(ProfileSketchOpeningDimensions)
...</pre>
			<p><code>FindObjectByName</code> method finds object whose name is &quot;Profile.2&quot; 
			and returns reference to it. Here <code>RefProfileSketchOpeningDimensions</code> 
			is of type <code>Reference</code>. To retrieve the <code>RefProfileSketchOpeningDimensions</code> 
			object from <code>ProfileSketchOpeningDimensions</code> object <code>
			CreateReferenceFromObject</code> method is used.</p>
			</li>
			<li>
			<p><strong><a name="Step8"></a>Creates opening with limit mode set to dimensions(Limit1/Limit2)</strong></p>
			<p>Call <code>CreateOpeningSketchDimensions</code> method to create 
			opening on panel using sketch profile. <code>CreateOpeningSketchDimensions</code> 
			method takes a panel and a sketch profile as input parameters and it 
			returns created opening as output parameter in <code>ObjStrOpeningWtLtMdDim</code>.</p>
			<pre class="code">...
  <span class="keyword">Dim</span> ObjStrOpeningWtLtMdDim <span class="keyword">As</span> StrOpening
  <strong>CreateOpeningSketchDimensions</strong> ObjSfdPanel, RefProfileSketchOpeningDimensions, ObjStrOpeningWtLtMdDim
...</pre>
			<p>The method <code>CreateOpeningSketchDimensions</code> is detailed 
			as in the below sub steps.</p>
			<ol class="task" style="list-style-type: lower-roman">
				<li>
				<p><strong>Creates a opening with no properties set</strong></p>
				<pre class="code"><span class="keyword">Sub</span> <strong>CreateOpeningSketchDimensions</strong>(iObjSfdPanel <span class="keyword">As</span> SfdPanel, iRefProfileSketch <span class="keyword">As</span> Reference, oObjStrOpening <span class="keyword">As</span> StrOpening)
  <strong><a href="#AddOpening">AddOpening</a></strong> iObjSfdPanel, oObjStrOpening
...</pre>
				<p>In this step Uc calls a method <code>AddOpening</code> which 
				creates a opening with no properties set and returns it in output 
				parameter <code>oObjStrOpening</code>. Uc sets different properties 
				like catgory, type of opening, etc. of the opening in the subsequent 
				steps.</p>
				</li>
				<li>
				<p><strong>Sets opening type to 1 for sketch opening</strong></p>
				<pre class="code">...
  <strong><a href="#SetOpeningType">SetOpeningType</a></strong> oObjStrOpening, catStrOpeningModeOutputProfile
...</pre>
				<p>In this step Uc calls a method <code>SetOpeningType</code>. This 
				method takes a opening (oObjStrOpening) and opening type value (catStrOpeningModeOutputProfile) 
				as input parameters. Here catStrOpeningModeOutputProfile is means the opening is sketch opening.</p>
				</li>
				<li>
				<p><strong>Sets category</strong></p>
				<pre class="code">...
  <strong><a href="#SetCategory">SetCategory</a></strong> oObjStrOpening, &quot;SldOpening&quot;
...</pre>
				<p>In this step Uc calls a method <code>SetCategory</code>, it sets 
				the category of the opening. This method takes a opening (oObjStrOpening) 
				and category (&quot;SldOpening&quot;) as input parameters.</p>
				</li>
				<li>
				<p><strong>Retrieves StrOpeningExtrusionMngt and sets forming extrusion 
				mode</strong></p>
				<pre class="code">...
    <span class="keyword">Set</span> ObjStrOpeningExtrusionMngt = oObjStrOpening.<strong>StrOpeningExtrusionMngt</strong>
    ObjStrOpeningExtrusionMngt.<strong>ExtrusionMode</strong> = 2
...</pre>
				<p>In this step object forming mode is set. To set the forming mode, 
				forming mode value is assigned to property <code>ExtrusionMode</code>. 
				Here 2 defines After Forming Extrusion Mode.</p>
				</li>
				<li>
				<p><strong>Sets output profile</strong></p>
				<pre class="code">...
  <span class="comment">&#39;set LimitMode to 1 for Dimensions</span>
  <strong><a href="#SetOutPutProfile">SetOutPutProfile</a></strong> oObjStrOpening, iRefProfileSketch, 1
...</pre>
				<p>In this step Uc calls a method <code>SetOutPutProfile</code>. 
				It sets the output profile, direction and limit mode for the opening. 
				This method takes a opening(oObjStrOpening), reference to sketch 
				profile(iRefProfileSketch) and limit mode value(1) as input parameters. 
				Here 1 means limit mode(Extrusion) is set to &quot;Limit1/Limit2&quot;.</p>
				</li>
				<li>
				<p><strong>Retrieves StrOpeningLimitDimensionsMngt object</strong></p>
				<pre class="code">...
  <span class="keyword">Dim</span> ObjStrOpeningLimitDimensionsMngt <span class="keyword">As</span> StrOpeningLimitDimensionsMngt
  <span class="keyword">Set</span> ObjStrOpeningLimitDimensionsMngt = oObjStrOpening.<strong>StrOpeningLimitDimensionsMngt</strong>
...</pre>
				<p>Uc retrieves object of type <code>StrOpeningLimitDimensionsMngt</code> 
				in <code>ObjStrOpeningLimitDimensionsMngt</code>. This is used to 
				set the dimensions.</p>
				</li>
				<li>
				<p><strong>Retrieves and sets FirstOffset and SecondOffset parameter 
				values of opening and invert it</strong></p>
				<pre class="code">...
  <span class="comment">&#39;set FirstOffset of opening output profile</span>
  <span class="keyword">Set</span> FirstOffset = ObjStrOpeningLimitDimensionsMngt.<strong>GetFirstOffset</strong>
  FirstOffset.<strong>ValuateFromString</strong> (&quot;1000mm&quot;)
  <span class="comment">&#39;Set second Offset of opening output profile</span>
  <span class="keyword">Set</span> SecondOffset = ObjStrOpeningLimitDimensionsMngt.<strong>GetSecondOffset</strong>
  SecondOffset.<strong>ValuateFromString</strong> (&quot;-2000mm&quot;)
  <span class="comment">&#39;Invert the first offset and second offset</span>
  ObjStrOpeningLimitDimensionsMngt.<strong>Invert</strong>
...</pre>
				<p>Here Uc retrieves <code>FirstOffset</code> parameter by using 
				method <code>GetFirstOffset</code> and its value is set to 1000mm 
				by using method <code>ValuateFromString</code>. Then Uc retrieves
				<code>SecondOffset</code> parameter and its value is set to -2000mm 
				by using method <code>ValuateFromString</code>. These offsets are 
				inverted using method <code>Invert</code>.</p>
				</li>
				<li>
				<p><strong>Updates created opening object</strong></p>
				<pre class="code">...
    ObjPart.<strong>UpdateObject</strong> oObjStrOpening
<span class="keyword">End Sub</span></pre>
				<p>Method <code>UpdateObject</code> updates the created opening.</p>
				</li>
			</ol>
			</li>
			<li>
			<p><strong><a name="Step9"></a>Updates the Part object</strong></p>
			<pre class="code">...
    ObjPart.<strong>Update</strong>
<span class="keyword">End Sub</span></pre>
			<p><code>Update</code> method updates the <code>ObjPart</code></p>
			</li>
		</ol>
		<p><strong>Detailed steps of methods called in the use case</strong></p>
		<ul class="task">
			<li>
			<p><strong><a name="AddOpening"></a>AddOpening method</strong></p>
			<pre class="code"><span class="keyword">Sub</span> AddOpening(iObjSfdPanel <span class="keyword">As</span> SfdPanel, oObjStrOpening <span class="keyword">As</span> StrOpening)
    <span class="comment">&#39;Get StrOpenings object</span>
    <span class="keyword">Dim</span> ObjStrOpenings <span class="keyword">As</span> StrOpenings
    <span class="keyword">Set</span> ObjStrOpenings = iObjSfdPanel.<strong>StrOpenings</strong>
    <span class="comment">&#39;Add opening</span>
    <span class="keyword">Set</span> oObjStrOpening = ObjStrOpenings.<strong>Add</strong>
<span class="keyword">End Sub</span></pre>
			<p>Method <code>AddOpening</code>takes a panel object <code>iObjSfdpanel</code> 
			as input parameter and it returns created opening as output parameter 
			in <code>oObjStrOpening</code>. In this method object of type <code>
			StrOpenings</code> is retrieved in <code>ObjStrOpenings</code>. Then 
			on this object <code>Add</code> method is called to create an opening 
			with no properties set.</p>
			</li>
			<li>
			<p><strong><a name="SetOpeningType"></a>SetOpeningType method</strong></p>
			<pre class="code"><span class="keyword">Sub</span> SetOpeningType(iObjStrOpening <span class="keyword">As</span> StrOpening, iOpeningType <span class="keyword">As </span>CATStrOpeningMode))
    <span class="comment">&#39;set opening type</span>
    iObjStrOpening.<strong>OpeningType</strong> = iOpeningType
<span class="keyword">End Sub</span></pre>
			<p>Method <code>SetOpeningType</code> takes a opening object <code>iObjStrOpening</code> 
			and opening type <code>iOpeningType</code> as input parameters. In this 
			method <code>iOpeningType</code> which is input to this method is assigned 
			to <code>OpeningType</code> property.</p>
			</li>
			<li>
			<p><strong><a name="SetCategory"></a>SetCategory method</strong></p>
			<pre class="code"><span class="keyword">Sub</span> SetCategory(iObjStrOpening <span class="keyword">As</span> StrOpening, iCategory <span class="keyword">As String</span>)
    <span class="comment">&#39;Get StrCategoryMngt object</span>
    <span class="keyword">Dim</span> ObjStrCategoryMngt <span class="keyword">As</span> StrCategoryMngt
    <span class="keyword">Set</span> ObjStrCategoryMngt = iObjStrOpening.<strong>StrCategoryMngt</strong>
    <span class="comment">&#39;set catgory</span>
    ObjStrCategoryMngt.<strong>SetCategory</strong> iCategory
<span class="keyword">End Sub</span></pre>
			<p>Method <code>SetCategory</code> takes opening object(iObjStrOpening) 
			and category(iCategory) as input parameters. In this method object of 
			type <code>StrCategoryMngt</code> is retrieved in <code>ObjStrCategoryMngt</code>. 
			Then method <code>SetCategory</code> is called to set the category.</p>
			</li>
			<li>
			<p><strong><a name="SetOutPutProfile"></a>SetOutPutProfile method</strong></p>
			<pre class="code"><span class="keyword">Sub</span> SetOutPutProfile(iObjStrOpening <span class="keyword">As</span> StrOpening, iOutputProfile <span class="keyword">As</span> Reference, iLimitMode <span class="keyword">As Long</span>)
<span class="comment">&#39;   1- Retrieves StrOpeningOutputProfile</span>
    <span class="keyword">Dim</span> ObjStrOpeningOutputProfile <span class="keyword">As</span> StrOpeningOutputProfile
    <span class="keyword">Set</span> ObjStrOpeningOutputProfile = iObjStrOpening.<strong>StrOpeningOutputProfile</strong>
<span class="comment">&#39;   2- Sets OutputProfile for sketch opening</span>
    ObjStrOpeningOutputProfile.<strong>OutputProfile</strong> = iOutputProfile
<span class="comment">&#39;   3- Sets direction</span>
    <span class="keyword">Set</span> Manager = CATIA.ActiveEditor.GetService(&quot;RfgService&quot;)
    <span class="keyword">Set</span> ObjRefDirection = Manager.<strong>GetReferencePlane</strong>(ObjPart, 1, &quot;DECK.1&quot;)
    <span class="keyword">Set</span> RefDirection = ObjPart.CreateReferenceFromObject(ObjRefDirection)
    ObjStrOpeningOutputProfile.<strong>Direction</strong> = RefDirection
<span class="comment">&#39;   4- Sets LimitMode</span>
    ObjStrOpeningOutputProfile.<strong>LimitMode</strong> = iLimitMode
<span class="keyword">End Sub</span></pre>
			<p>Method <code>SetOutPutProfile</code> takes opening object(iObjStrOpening), 
			output profile(iOutputProfile) and limit mode(iLimitMode) as input parameters. 
			In the first step of this method object of type <code>StrOpeningOutputProfile</code> 
			is retrieved in <code>ObjStrOpeningOutputProfile</code>. In the second 
			step <code>OutputProfile</code> property is set to <code>iOutputProfile</code>. 
			In the third step reference to the plane &quot;DECK.1&quot; is retrieved using
			<code>GetReferencePlane</code> method from <code>RfgService</code> and 
			then it set as the Direction. In the fourth step it sets <code>LimitMode</code> 
			property to iLimitMode.</p>
			</li>
		</ul>
		<table>
			<caption><a name="Fig.1"></a>Fig.1: Member</caption>
			<tr>
				<td>
				<img alt="Member" src="CAAScdSfdUcCreateOpeningSketch.png" width="1024" height="738"/></td>
			</tr>
		</table>
		<script type="text/javascript">insertLinkToTop()</script>
		<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
		</td>
	</tr>
</table>

<script type="text/javascript">insertCopyright();</script>

</body>

</html>
