<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating an SFD Slot</title>
</head>

<body onload="highlightSearchTerms();">

<table class="table1">
	<tr>
		<td class="DocHeader3">
		<table>
			<tr>
				<td class="DocHeader1" colspan="2">
				<h1>Creating an SFD Slot</h1>
				</td>
			</tr>
			<tr>
				<td class="DocHeader4" colspan="2">&nbsp;</td>
			</tr>
			<tr>
				<td class="DocHeader3">
				<table class="DocHeaderIntro">
					<tr>
						<td class="Intro1">
						<p class="header"><a name="hj-top"></a>This use case primarily 
						focuses on the methodology to cerate a slot.</p>
						<div id="toc">
						</div>
						<hr class="header" /></td>
					</tr>
					<tr>
						<td class="Intro2"><span class="run-in">Before you begin:</span> 
						Note that:<ul>
							<li>You should first launch CATIA and import the
							<code>CAAScdSfdUcSteel_A42.3dxml</code>, <code>CAAScdSfdUcWT18x179_5.3dxml</code>,
							<code>CAAScdSfdUcSlotSections.3dxml</code> <code>CAAScdSfdUcCreateSlot.3dxml</code>,
							<code>CAAScdSfdUcCGR.3dxml</code> and <code>CAAScdSfdUcSR.3dxml</code> 
							files supplied in folder <code>InstallRootDirectory\CAADoc\Doc\online\CAAScdSfdModeler\samples\</code> 
							where <code>InstallRootDirectory</code> is the directory 
							where the CAA CD-ROM is installed.</li>
						</ul>
						<p><span class="run-in">Where to find the macro:
						<a href="CAAScdSfdUcCreateSlotSource.htm">CAAScdSfdUcCreateSlotSource.htm</a></span></p>
						</td>
					</tr>
				</table>
				</td>
				<td class="DocHeader2">
				<table class="DocTopics">
					<tr>
						<td class="TopicsTitle">Related Topics</td>
					</tr>
					<tr>
						<td>&lt;<em>topic1</em>&gt;</td>
					</tr>
					<tr>
						<td>&lt;<em>topic2</em>&gt;</td>
					</tr>
				</table>
				</td>
			</tr>
		</table>
		</td>
	</tr>
</table>
<table class="indented">
	<tr>
		<td>
		<p>This use case can be divided in nine steps:</p>
		<ol>
			<li><a href="#Step1">Searches and opens model which is named as &quot;SFD_VB_TEST&quot;</a></li>
			<li><a href="#Step2">Retrieves Selection object</a></li>
			<li><a href="#Step3">Retrieves Part object</a></li>
			<li><a href="#Step4">Retrieves a SFD stiffener object</a></li>
			<li><a href="#Step5">Retrieves a SFD panel object </a></li>
			<li><a href="#Step6">Creates Slot </a></li>
			<li><a href="#Step7">Edits Slot data</a></li>
			<li><a href="#Step8">Removes created slot from the panel</a></li>
			<li><a href="#Step9">Updates the Part object</a></li>
		</ol>
		</td>
	</tr>
</table>
<table class="table1">
	<tr>
		<td>
		<ol class="task">
			<li>
			<p><strong><a name="Step1"></a>Searches and opens model which is named 
			as &quot;SFD_VB_TEST&quot; </strong></p>
			<p>As a first step, the UC retrieves a model &quot;SFD_VB_TEST&quot; from DB and 
			loads it and returns object of the Editor.</p>
			<pre class="code">... 
 <span class="keyword">Dim </span>SFDPrdEditor <span class="keyword"> As </span> Editor
<span class="keyword"> Dim </span>prdName<span class="keyword"> As </span>String
 prdName = &quot;SFD_VB_TEST&quot;
 OpenProduct prdName , SFDPrdEditor
...</pre>
			<p>The function <strong><code>OpenProduct</code></strong> returns
			<strong><code>SFDPrdEditor</code></strong>, a Editor object. After searching 
			and opening of SFD model from underlying database the current active 
			editor is returned in <strong><code>SFDPrdEditor</code></strong>.</p>
			</li>
			<li>
			<p><strong><a name="Step2"></a>Retrieves Selection Object</strong></p>
			<p>As a next step, the UC retrieves Selection object in SFDProdSel variable. 
			To retrieve the Selection object <strong><code>SFDPrdEditor </code>
			</strong>is used.</p>
			<pre class="code">...
    <span class="keyword">Set</span> SFDProdSel = SFDPrdEditor<strong>.Selection </strong>
...</pre>
			</li>
			<li>
			<p><strong><a name="Step3"></a>Retrieves Part object</strong></p>
			<p>In this step UC retrieves Part object ObjPart variable.</p>
			<pre class="code">... 
  <span class="keyword">Set</span> ObjPart = SFDPrdEditor.<strong>ActiveObject</strong> 
...</pre>
			</li>
			<li>
			<p><strong><a name="Step4"></a>Retrieves a SFD Stiffener object</strong></p>
			<p>In this step UC create and retrieves stiffener object. This stiffener 
			will be used as a penetrating element for the slot creation. </p>
			<pre class="code">... 
  <span class="keyword">Dim</span> ObjSfdStiffener <span class="keyword">As</span> StrSfdStiffener
  <strong>CreateStiffener</strong> ObjSfdStiffener
...</pre>
			<p><code>CreateStiffener</code> method will create a stiffener and return 
			it in <code>ObjSfdStiffener</code> object.</p>
			</li>
			<li>
			<p><strong><a name="Step5"></a>Retrieves a SFD panel object</strong></p>
			<p>In this step UC finds a SFD panel in the part and retrieve SfdPanel 
			object using Selection object. This panel will be used as a penetrated 
			element in the slot creation.</p>
			<pre class="code">... 
  <span class="keyword">Set</span> RefObjSfdPanel = ObjPart.<strong>FindObjectByName(&quot;</strong>Panel.3<strong>&quot;)</strong> 
  <span class="keyword">Dim</span> ObjSfdPanel <span class="keyword">As</span> SfdPanel 
  SFDProdSel.<strong>Add </strong>RefObjSfdPanel 
  <span class="keyword">Set</span> ObjSfdPanel = SFDProdSel.<strong>FindObject(&quot;</strong>CATIASfdPanel<strong>&quot;)</strong> 
...</pre>
			<p>In above lines, <code>FindObjectByName</code> method finds object 
			whose name is &quot;Panel.3&quot; and returns reference to it. Here <code>RefSfdPanel</code> 
			is of type <code>Reference</code>. To retrieve <code>SfdPanel</code> 
			object from the reference, add retrieved reference to the selection 
			and call <code>FindObject </code>method as shown above. This will give 
			the <code>SfdPanel</code> object.</p>
			</li>
			<li>
			<p><strong><a name="Step6"></a>Creates Slot</strong></p>
			<p>Now, penetrated element (panel) and penetrating element (stiffener) 
			are available to create slot. Call <code>CreateSlot</code> method to 
			create slot.
			<code>CreateSlot</code> method takes a panel and a stiffener as input parameters 
			and it returns created slot as output parameter.</p>
			<pre class="code">... 
  <span class="keyword">Dim</span> ObjStrSlot <span class="keyword">As </span>StrSlot 			
  <strong>CreateSlot</strong> ObjSfdPanel, ObjSfdStiffener, ObjStrSlot 
...</pre>
			<p>The method <code>CreateSlot</code> is detailed as in the below sub 
			steps.</p>
			<ol class="task" style="list-style-type: lower-roman">
				<li>
				<p><strong>Retrieves <code>StrSlots</code> object and and create 
				an slot with no data.</strong></p>
				<pre class="code"><span class="keyword">Sub</span> CreateSlot(iObjSfdPanel <span class="keyword">As</span> SfdPanel, iObjSfdStiffener <span class="keyword">As </span>StrSfdStiffener, oObjStrSlot <span class="keyword">As</span> StrSlot)
    <span class="comment">&#39;Get StrSlots object</span>
    <span class="keyword">Dim</span> ObjStrSlots <span class="keyword">As</span> StrSlots
    <span class="keyword">Set</span> ObjStrSlots = iObjSfdPanel.<strong>StrSlots</strong>
    <span class="comment">&#39;Create StrSlot</span>
    <span class="keyword">Set</span> oObjStrSlot = ObjStrSlots.<strong>Add</strong>
...</pre>
				<p><code>StrSlots </code>is retrieved in
				<code>ObjStrSlots</code> variable from <code>iObjSfdPanel</code> object. 
				On <code>ObjStrSlots</code> object, <code>Add</code> method is called 
				to create the slot with no data. Now Uc needs to set the different 
				properties of the slot like penetrating element, slot parameters 
				etc.</p>
				</li>
				<li>
				<p><strong>Sets penetrating profile for slot</strong></p>
				<pre class="code">...
    <span class="comment">&#39;set penetrating element</span>
    <span class="keyword">Dim</span> PenetratingElem <span class="keyword">As</span> Reference
    <span class="keyword">Set</span> PenetratingElem = ObjPart.<strong>CreateReferenceFromObject</strong>(iObjSfdStiffener)
    oObjStrSlot.<strong>SetPenetratingProfile </strong>PenetratingElem 
...</pre>
				<p><code>PenetratingElem</code> is of type <code>Reference</code>. 
				Method <code>CreateReferenceFromObject</code> creates reference 
				to <code>iObjSfdStiffener</code> and returns it in <code>PenetratingElem</code>. 
				Then <code>SetPenetratingProfile</code> method is called to set 
				the penetrating profile for the slot.</p>
				</li>
				<li>
				<p><strong>Sets slot parameters</strong></p>
				<pre class="code">...
    <strong>SetSlotParameters</strong> oObjStrSlot, iObjSfdPanel
...</pre>
				<p>Method <code>SetSlotParameters</code> is called to set the slot 
				parameters of respective slot which is set.</p>
				<p>The method <code>SetSlotParameters</code> is detailed as in the 
				below sub steps.</p>
				<ol class="task" style="list-style-type: lower-roman">
					<li>
					<p><strong>Retrieves <code>StrDetailFeature</code> object</strong></p>
					<pre class="code"><span class="keyword">Sub</span> SetSlotParameters(iObjStrSlot <span class="keyword">As</span> StrSlot,iObjSfdPanel <span class="keyword">As</span> SfdPanel)
    <span class="keyword">Dim</span> ObjStrDetailFeature <span class="keyword">As</span> StrDetailFeature
    <span class="keyword">Set</span> ObjStrDetailFeature = iObjStrSlot.<strong>StrDetailFeature</strong>
...</pre>
					<p><code>ObjStrDetailFeature </code>is of type <code>StrDetailFeature</code>. 
					It is retrieved from <code>iObjStrSlot</code> object using method
					<code>StrDetailFeature</code>. Later this object is used to 
					set different slot parameters like slot name, slot type etc.</p>
					</li>
					<li>
					<p><strong>Sets Slot type</strong></p>
					<pre class="code">...
    ObjStrDetailFeature.<strong>Type</strong> = &quot;RECT&quot;
...</pre>
					<p><code>Type </code>property of <code>StrDetailFeature</code> 
					is set to &quot;RECT&quot;. This defines the type of the slot.</p>
					</li>
					<li>
					<p><strong>Sets Slot name</strong></p>
					<pre class="code">...
    ObjStrDetailFeature.<strong>FeatureName</strong> = &quot;RECT_UNI_WT&quot;
...</pre>
					<p><code>FeatureName </code>property of <code>StrDetailFeature</code> 
					is set to &quot;RECT_UNI_WT&quot;. This defines the name of the slot.</p>
					</li>
					<li>
					<p><strong>Retrieves list of parameters of impacted object</strong></p>
					<pre class="code">...
    <span class="keyword">Set</span> ObjPartParameters = ObjPart.<strong>Parameters</strong>
    <span class="comment">&#39;parameters will be aggregated under impacted
    &#39;object(here impacted object is iObjSfdPanel)</span>
    <span class="keyword">Set</span> HBParameters = ObjPartParameters.<strong>SubList</strong>(iObjSfdPanel, True)
...</pre>
					<p><code>Parameters</code> property of <code>ObjPart</code> 
					returns collection object containing the part parameters.
					<code>SubList</code> method from <code>Parameters</code> returns 
					the sub-collection of parameters aggregated to <code>iObjSfdPanel</code> 
					object and it collected in <code>HBParameters</code> object.</p>
					</li>
					<li>
					<p><strong>Creates parameters and stores role of each parameter 
					in an array</strong></p>
					<pre class="code">...
    <span class="keyword">Set</span> DBB = HBParameters.<strong>CreateDimension</strong>(&quot;DBB&quot;, &quot;LENGTH&quot;, &quot;300&quot;)
    <span class="keyword">Set</span> DR = HBParameters.CreateDimension(&quot;DR&quot;, &quot;LENGTH&quot;, &quot;200&quot;)
    <span class="keyword">Set</span> DL = HBParameters.CreateDimension(&quot;DL&quot;, &quot;LENGTH&quot;, &quot;200&quot;)
    <span class="keyword">Set</span> DTT = HBParameters.CreateDimension(&quot;DTT&quot;, &quot;LENGTH&quot;, &quot;50&quot;)
    <span class="comment">&#39;Define parameter roles in an array</span>
    <span class="keyword">Dim</span> ParamRoles(3) <span class="keyword">As</span> Variant
    ParamRoles(0) = &quot;DBB&quot;
    ParamRoles(1) = &quot;DR&quot;
    ParamRoles(2) = &quot;DL&quot;
    ParamRoles(3) = &quot;DTT&quot;
...</pre>
					<p>Method <code>CreateDimension</code> creates a user dimension. 
					Here Uc creates 4 parameters (DBB, DR, DL, DLL) for slot. Role 
					of each parameter is stored in ParamRoles array.</p>
					</li>
					<li>
					<p><strong>Sets parameters</strong></p>
					<pre class="code">...
    ObjStrDetailFeature.<strong>SetParameters</strong> HBParameters, ParamRoles
...</pre>
					<p><code>SetParameters</code> method of <code>ObjStrDetailFeature</code> 
					is called to set the parameters for slot creation. This method 
					takes two input parameters. First parameter is the collection 
					object of slot parameters and second object is an array which 
					contains the role of each parameter from the collection object.</p>
					</li>
					<li>
					<p><strong>Updates the ObjStrDetailFeature object</strong></p>
					<pre class="code">...
    ObjStrDetailFeature.<strong>Update</strong>
<span class="keyword">End Sub</span></pre>
					<p>Call to <code>Update</code> method of <code>ObjStrDetailFeature</code> 
					will update connection coordinate and visualization of the slot 
					feature.</p>
					</li>
				</ol>
				</li>
				<li>
				<p><strong>Retrieves <code>SfdConnectionSet</code> object from SfdPart 
				object and updates the ConnectionSet</strong></p>
				<pre class="code">...
    <span class="keyword">Dim</span> ObjSfdPart <span class="keyword">As</span> SfdPart
    SFDProdSel.Add (ObjPart)
    <span class="keyword">Set</span> ObjSfdPart = SFDProdSel.FindObject(&quot;CATIASfdPart&quot;)
    <span class="keyword">Dim</span> ObjSfdConnectionSet As SfdConnectionSet
    <span class="keyword">Set</span> ObjSfdConnectionSet = ObjSfdPart.<strong>GetConnectionsSet</strong>
    ObjSfdConnectionSet.<strong>UpdateConnectionsSet</strong> UpdatedCnx, RemovedCnx, UnkStatusCnx
...</pre>
				<p>To retrieve <code>ObjSfdPart</code> from <code>ObjPart</code>, 
				ObjPart is added to the <code>Selection</code> object <code>SFDProdSel</code>. 
				Then on <code>SFDProdSel</code> object, <code>FindObject</code> 
				method is called as shown above. <code>GetConnectionSet</code> method 
				from <code>SfdPart</code> returns <code>SfdConnectionSet</code> 
				which is collected in <code>ObjSfdConnectionSet</code>. Then
				<code>UpdateConnectionsSet</code> updates all the connections created. 
				It has three out parameters, first is for number of updated connections 
				second is for number of connections which are removed and third 
				is for number of unknown status connections.</p>
				</li>
				<li>
				<p><strong>Updates created Slot object</strong></p>
				<pre class="code">...
    ObjPart.<strong>UpdateObject</strong> oObjStrSlot
<span class="keyword">End Sub</span></pre>
				<p><code>UpdateObject</code> method from <code>Part</code> will 
				update the created slot.</p>
				</li>
			</ol>
			</li>
			<li>
			<p><strong><a name="Step7"></a>Edits Slot data</strong></p>
			<p>In this step UC edits Slot&#39;s some of the data like it changes the 
			value of the first parameter which is DBB.</p>
			<pre class="code">...
   <strong>EditSlotData</strong> ObjStrSlot
...</pre>
			<p>The method <code>EditSlotData</code> is detailed as in the below 
			sub steps.</p>
			<ol class="task" style="list-style-type: lower-roman">
				<li>
				<p><strong>Retrieves StrDetailFeature object using created slot</strong></p>
				<pre class="code"><span class="keyword">Sub</span> EditSlotData(iObjStrSlot <span class="keyword">As</span> StrSlot)
    <span class="keyword">Dim</span> ObjStrDetailFeature <span class="keyword">As</span> StrDetailFeature
    <span class="keyword">Set</span> ObjStrDetailFeature = iObjStrSlot.<strong>StrDetailFeature</strong>
...</pre>
				<p>Property <code>StrDetailFeature</code> retrieves the object of 
				type <code>StrDetailFeature</code>.</p>
				</li>
				<li>
				<p><strong>Retrieves slot parameters</strong></p>
				<pre class="code">...
    <span class="keyword">Dim</span> SlotParameters <span class="keyword">As</span> StrParameters
    <span class="keyword">Set</span> SlotParameters  = ObjStrDetailFeature.<strong>GetParameters</strong>
...</pre>
				<p>Method <code>GetParameters</code> retrieves the collection object 
				of type <code>StrParameters</code>. This object has slot parameters 
				which were created and set by the method <code>SetParameters</code>.</p>
				</li>
				<li>
				<p><strong>Changes the slot parameter value</strong></p>
				<pre class="code">...
    <span class="keyword">Dim</span> DBBParameter <span class="keyword">As</span> Parameter
    <span class="keyword">Set</span> DBBParameter = SlotParameters.<strong>Item(1)</strong>
    DBBParameter.<code>ValuateFromString</code>(&quot;500mm&quot;)
...</pre>
				<p>Uc retrieves first parameter from the collection of parameters 
				using method <code>Item(1)</code>. Here 1 represents the first parameter 
				from the collection.</p>
				</li>
				<li>
				<p><strong>Updates the connection coordinate and visualiztion for 
				slot</strong></p>
				<pre class="code">...
    ObjStrDetailFeature.<strong>Update</strong>
<span class="keyword">End Sub</span></pre>
				<p>Call to <code>Update</code> method of <code>ObjStrDetailFeature</code> 
				will update connection coordinate and visualization of the slot 
				feature.</p>
				</li>
			</ol>
			</li>
			<li>
			<p><strong><a name="Step8"></a>Removes created slot from the panel</strong></p>
			<p>In this step UC removes slot created on a panel.</p>
			<pre class="code">...
   <strong>RemoveSlot</strong> ObjSfdPanel
...</pre>
			<p>The method <code>RemoveSlot</code> is detailed as in the below sub 
			steps.</p>
			<ol class="task" style="list-style-type: lower-roman">
				<li>
				<p><strong>Retrieves object of type StrSlots</strong></p>
				<pre class="code"><span class="keyword">Sub</span> RemoveSlot (iObjSfdPanel <span class="keyword">As </span>SfdPanel)
    <span class="keyword">Dim</span> ObjStrSlots <span class="keyword">As</span> StrSlots
    <span class="keyword">Set</span> ObjStrSlots = iObjSfdPanel.<strong>StrSlots</strong>
...</pre>
				<p><code>StrSlots</code> provides methods for creating a new slot 
				retrieve the created slots and remove slots.</p>
				</li>
				<li>
				<p><strong>Removes the first slot</strong></p>
				<pre class="code">...
    <span class="keyword">Dim </span>ObjStrSlot <span class="keyword">As </span>StrSlot
    <span class="keyword">Set</span> ObjStrSlot = ObjStrSlots.<strong>Item(1)</strong>
    ObjStrSlots.<strong>Remove</strong> (ObjStrSlot)
<span class="keyword">End Sub</span></pre>
				<p>Call to the <code>Item(1)</code> retrieves first slot from the 
				collection of slot. Then <strong>RemoveSlot</strong> method from
				<code>StrSlots</code> removes the slot <code>ObjStrSlot</code>.
				<code>RemoveSlot</code> method takes one input parameter which is 
				a object of <code>StrSlot</code>. This is the slot which will be 
				removed.</p>
				</li>
			</ol>
			</li>
			<li>
			<p><strong><a name="Step9"></a>Updates the Part object</strong></p>
			<pre class="code">...
    ObjPart.<strong>Update</strong>
<span class="keyword">End Sub</span></pre>
			<p><code>Update</code> method updates the <code>ObjPart.</code></p>
			<script type="text/javascript">insertLinkToTop()</script>
			<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
			</li>
		</ol>
		</td>
	</tr>
</table>
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
