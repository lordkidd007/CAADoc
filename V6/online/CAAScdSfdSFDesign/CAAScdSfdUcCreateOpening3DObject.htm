<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating an SFD Opening Using 3D Objects</title>
</head>

<body onload="highlightSearchTerms();">

<table class="table1">
	<tr>
		<td class="DocHeader3">
		<table>
			<tr>
				<td class="DocHeader1" colspan="2">
				<h1>Creating an SFD Opening Using 3D Objects</h1>
				</td>
			</tr>
			<tr>
				<td class="DocHeader4" colspan="2">&nbsp;</td>
			</tr>
			<tr>
				<td class="DocHeader3">
				<table class="DocHeaderIntro">
					<tr>
						<td class="Intro1">
						<p class="header"><a name="hj-top"></a>This use case primarily 
						focuses on the methodology to create a SFD Opening using 
						3D object.</p>
						<div id="toc">
						</div>
						<hr class="header" /></td>
					</tr>
					<tr>
						<td class="Intro2"><span class="run-in">Before you begin:</span> 
						Note that:<ul>
							<li>You should first launch CATIA and import the
							<code>CAAScdSfdUcPart.3dxml</code> <code>CAAScdSfdUcCGR.3dxml</code> 
							and <code>CAAScdSfdUcSR.3dxml</code> files supplied 
							in folder <code>InstallRootDirectory\CAADoc\Doc\online\CAAScdSfdModeler\samples\</code> 
							where <code>InstallRootDirectory</code> is the directory 
							where the CAA CD-ROM is installed.</li>
						</ul>
						<p><span class="run-in">Where to find the macro:
						<a href="CAAScdSfdUcCreateOpening3DObjectSource.htm">CAAScdSfdUcCreateOpening3DObjectSource.htm</a></span></p>
						</td>
					</tr>
				</table>
				</td>
				<td class="DocHeader2">
				<table class="DocTopics">
					<tr>
						<td class="TopicsTitle">Related Topics</td>
					</tr>
					<tr>
						<td>&lt;<em>topic1</em>&gt;</td>
					</tr>
					<tr>
						<td>&lt;<em>topic2</em>&gt;</td>
					</tr>
				</table>
				</td>
			</tr>
		</table>
		</td>
	</tr>
</table>
<table class="indented">
	<tr>
		<td>
		<p>This use case can be divided in seven steps:</p>
		<ol>
			<li><a href="#Step1">Searches and opens model which is named as &quot;SFD_VB_TEST&quot;</a></li>
			<li><a href="#Step2">Retrieves Selection object</a></li>
			<li><a href="#Step3">Retrieves Part object</a></li>
			<li><a href="#Step4">Retrieves a SFD panel object</a></li>
			<li><a href="#Step5">Creates opening</a></li>
			<li><a href="#Step6">Removes opening</a></li>
			<li><a href="#Step7">Updates the Part object</a></li>
		</ol>
		</td>
	</tr>
</table>
<table class="table1">
	<tr>
		<td>
		<ol class="task">
			<li>
			<p><strong><a name="Step1"></a>Searches and opens model which is named 
			as &quot;SFD_VB_TEST&quot; </strong></p>
			<p>As a first step, the UC retrieves a model &quot;SFD_VB_TEST&quot; from DB and 
			loads it and returns object of the Editor. </p>
			<pre class="code">... 
 <span class="keyword">Dim </span>SFDPrdEditor <span class="keyword"> As </span> Editor
<span class="keyword"> Dim </span>prdName<span class="keyword"> As </span>String
 prdName = &quot;SFD_VB_TEST&quot;
 OpenProduct prdName , SFDPrdEditor
...</pre>
			<p>The function <strong><code>OpenProduct</code></strong> returns
			<strong><code>SFDPrdEditor</code></strong>, a Editor object. After searching 
			and opening of SFD model from underlying database the current active 
			editor is returned in <strong><code>SFDPrdEditor</code></strong>.</p>
			</li>
			<li>
			<p><strong><a name="Step2"></a>Retrieves Selection Object</strong></p>
			<p>As a next step, the UC retrieves Selection object in SFDProdSel variable. 
			To retrieve the Selection object <strong><code>SFDPrdEditor </code>
			</strong>is used.</p>
			<pre class="code"> ...
    <span class="keyword">Set</span> SFDProdSel = SFDPrdEditor<strong>.Selection </strong>
 ...</pre>
			</li>
			<li>
			<p><strong><a name="Step3"></a>Retrieves Part object</strong></p>
			<p>In this step UC retrieves Part object ObjPart variable.</p>
			<pre class="code">...
  <span class="keyword">Set</span> ObjPart = SFDPrdEditor.<strong>ActiveObject</strong>
...</pre>
			</li>
			<li>
			<p><strong><a name="Step4"></a>Retrieves a SFD panel object</strong></p>
			<p>In this step UC retrieves panel object.</p>
			<pre class="code">...
  <span class="keyword">Set</span> RefObjPanel = ObjPart.<strong>FindObjectByName</strong>(&quot;Panel.1&quot;)
  <span class="keyword">Dim</span> ObjSfdPanel <span class="keyword">As</span> SfdPanel
  SFDProdSel.<strong>Add</strong> RefObjPanel
  <span class="keyword">Set</span> ObjSfdPanel = SFDProdSel.<strong>FindObject</strong>(&quot;CATIASfdPanel&quot;)
...</pre>
			<p><code>FindObjectByName</code> method finds object whose name is &quot;Panel.1&quot; 
			and returns reference to it. Here RefObjPanel is of type <code>Reference</code>. 
			To retrieve <code>SfdPanel</code> object from <code>Reference</code> 
			add retrieved reference to the selection and call <code>FindObject</code> 
			method as shown above. This will return the <code>SfdPanel</code> object 
			variable.</p>
			</li>
			<li>
			<p><strong><a name="Step5"></a>Creates opening</strong></p>
			<p>Now, panel is available to create opening on it. Call <code>CreateOpening3DObject</code> 
			method to create opening on panel. <code>CreateOpening3DObject</code> 
			method takes a panel as input parameter and it returns created opening 
			as output parameter in <code>ObjStrOpening</code>.</p>
			<pre class="code">...
  <span class="keyword">Dim</span> ObjStrOpening <span class="keyword">As</span> StrOpening
  <strong>CreateOpening3DObject</strong> ObjSfdPanel, ObjStrOpening
...</pre>
			<p>The method <code>CreateOpening3DObject</code> is detailed as in the 
			below sub steps.</p>
			<ol class="task" style="list-style-type: lower-roman">
				<li>
				<p><strong>Creates a cylinder, later which will be used for opening 
				creation as a intersecting profile</strong></p>
				<pre class="code"><span class="keyword">Sub</span> CreateOpening3DObject(iObjSfdPanel <span class="keyword">As</span> SfdPanel, oObjStrOpening <span class="keyword">As</span> StrOpening)
    <span class="keyword">Set</span> ObjHybridShapeFactory = ObjPart.HybridShapeFactory
    <span class="keyword">Set</span> ObjHybridShapePointCoord = ObjHybridShapeFactory.AddNewPointCoord(90000, 10000, 0)
    <span class="keyword">Set</span> PointRef = ObjPart.CreateReferenceFromObject(ObjHybridShapePointCoord)
    <span class="keyword">Set</span> Manager = CATIA.ActiveEditor.GetService(&quot;RfgService&quot;)
    <span class="keyword">Set</span> ObjDirection = Manager.GetReferencePlane(ObjPart, 1, &quot;DECK.2&quot;)
    <span class="keyword">Set</span> Direction = ObjPart.CreateReferenceFromObject(ObjDirection)
    <span class="keyword">Set</span> ObjHybridShapeDirection = ObjHybridShapeFactory.AddNewDirection(Direction)
    <span class="keyword">Set</span> ObjHybridShapeCylinder = ObjHybridShapeFactory.<strong>AddNewCylinder</strong>(PointRef, 2000, 32800, 20, ObjHybridShapeDirection)
    <span class="keyword">Set</span> CylinderRef = ObjPart.<strong>CreateReferenceFromObject</strong>(ObjHybridShapeCylinder)
...</pre>
				<p>In this step Uc creates a cylinder and stores its reference in
				<code>CylinderRef</code>. Later this created cylinder will be used 
				for opening creation as a intersecting element.</p>
				</li>
				<li>
				<p><strong>Retrieves <code>StrOpenings</code> and creates an opening 
				with no properties set</strong></p>
				<pre class="code">...
    <span class="comment">&#39;Get StrOpenings object</span>
    <span class="keyword">Dim</span> ObjStrOpenings <span class="keyword">As</span> StrOpenings
    <span class="keyword">Set</span> ObjStrOpenings = iObjSfdPanel.<strong>GetOpenings(0)</strong>
    <span class="comment">&#39;Add opening</span>
    <span class="keyword">Set</span> oObjStrOpening = ObjStrOpenings.<strong>Add</strong>
...</pre>
				<p>Object of <code>StrOpenings</code> is retrieved in <code>ObjStrOpenings</code>. 
				Then method <code>Add</code> from <code>ObjStrOpenings</code>is 
				called to create an opening. This creates an opening with no properties 
				set. Now Uc sets different properties on opening to complete the 
				creation of the opening.</p>
				</li>
				<li>
				<p><strong>Sets opening type to 3d object</strong></p>
				<pre class="code">...
    ObjStrOpeningType.<strong>OpeningType</strong> = catStrOpeningMode3DObject
...</pre>
				<p><code>OpeningType</code> property is set to catStrOpeningMode3DObject. catStrOpeningMode3DObject defines that 
				opening is created using a 3D object.</p>
				</li>
				<li>
				<p><strong>Retrieves <code>StrCategoryMngt</code> and sets category</strong></p>
				<pre class="code">...
    <span class="comment">&#39;Get StrCategoryMngt object</span>
    <span class="keyword">Dim</span> ObjStrCategoryMngt <span class="keyword">As</span> StrCategoryMngt
    <span class="keyword">Set</span> ObjStrCategoryMngt = oObjStrOpening.<strong>StrCategoryMngt</strong>
    <span class="comment">&#39;set category</span>
    ObjStrCategoryMngt.<strong>SetCategory</strong> &quot;SldOpening&quot;
...</pre>
				<p>Object of <code>StrCategoryMngt</code> is retrieved in <code>
				ObjStrCategoryMngt</code>. Then method <code>SetCategory</code> 
				is called to set the category.</p>
				</li>
				<li>
				<p><strong>Retrieves <code>StrOpening3DObject</code> and sets intersecting 
				profile</strong></p>
				<pre class="code">...
    <span class="comment">&#39;Get StrOpening3DObject object</span>
    <span class="keyword">Dim</span> ObjStrOpening3DObject <span class="keyword">As</span> StrOpening3DObject
    <span class="keyword">Set</span> ObjStrOpening3DObject = oObjStrOpening.<strong>StrOpening3DObject</strong>
    <span class="comment">&#39;Set intersecting element</span>
    ObjStrOpening3DObject.<strong>IntersectingElement</strong> = CylinderRef
...</pre>
				<p>Object of <code>StrOpening3DObject</code> is retrieved in
				<code>ObjStrOpening3DObject</code>. Then created <code>CylinderRef</code> 
				is assigned to the property <code>IntersectingElement</code>. Opening 
				will be created at the intersection of panel and cylinder (3D Object).</p>
				</li>
				<li>
				<p><strong>Retrieves StrOpeningExtrusionMngt and sets forming extrusion 
				mode</strong></p>
				<pre class="code">...
    <span class="keyword">Set</span> ObjStrOpeningExtrusionMngt = oObjStrOpening.<strong>StrOpeningExtrusionMngt</strong>
    ObjStrOpeningExtrusionMngt.<strong>ExtrusionMode</strong> = 2
...</pre>
				<p>In this step object forming mode is set. To set the forming mode, 
				forming mode value is assigned to property <code>ExtrusionMode</code>. 
				Here 2 defines After Forming Extrusion Mode.</p>
				</li>
				<li>
				<p><strong>Retrieves <code>SfdOpeningPlate</code> and call method 
				MoveToOpeningPPrSet</strong></p>
				<pre class="code">...
    <span class="comment">&#39;Get SfdOpeningPlate object</span>
    <span class="keyword">Dim</span> ObjSfdOpeningPlate <span class="keyword">As</span> SfdOpeningPlate
    <span class="keyword">Set</span> ObjSfdOpeningPlate = oObjStrOpening.<strong>SfdOpeningPlate</strong>
    <span class="comment">&#39;move opening to OpeningPPrSet so that it will interrupt the profile</span>
    ObjSfdOpeningPlate.<strong>MoveToOpeningPPrSet</strong>
...</pre>
				<p>Object of <code>SfdOpeningPlate</code> is retrieved in <code>
				ObjSfdOpeningPlate</code> from object <code>oObjSfdOpening</code>. 
				Then on <code>ObjSfdOpeningPlate</code> object <code>MoveToOpeningPPrSet</code> 
				method is called. Due to this method call opening will interrupt 
				the profiles if they are intersecting the opening.</p>
				</li>
				<li>
				<p><strong>Updates created opening object</strong></p>
				<pre class="code">...
    ObjPart.<strong>UpdateObject</strong> oObjStrOpening
<span class="keyword">End Sub</span></pre>
				<p>Method <code>UpdateObject</code> updates the created opening.</p>
				</li>
			</ol>
			</li>
			<li>
			<p><strong><a name="Step6"></a>Removes opening</strong></p>
			<pre class="code">...
    <span class="keyword">Dim</span> ObjStrOpenings <span class="keyword">As</span> StrOpenings
    <span class="keyword">Set</span> ObjStrOpenings = ObjSfdPanel.<strong>GetOpenings(0)</strong>
    ObjStrOpenings.<strong>Remove</strong> ObjStrOpening
...</pre>
			<p>Object of <code>StrOpenings</code> is retrieved in <code>ObjStrOpenings</code>. 
			Then on <code>ObjStrOpenings</code> object <code>Remove</code> method 
			is called to remove the opening. This method takes a input parameter 
			opening object to remove.</p>
			</li>
			<li>
			<p><strong><a name="Step7"></a>Updates the Part object</strong></p>
			<pre class="code">...
    ObjPart.<strong>Update</strong>
<span class="keyword">End Sub</span></pre>
			<p><code>Update</code> method updates the <code>ObjPart</code></p>
			<script type="text/javascript">insertLinkToTop()</script>
			<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
			<script type="text/javascript">insertCopyright();</script>
			</li>
		</ol>
		</td>
	</tr>
</table>

</body>

</html>
