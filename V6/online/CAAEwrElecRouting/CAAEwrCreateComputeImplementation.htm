<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Computing Bundle Segment Dimensions</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Computing Bundle Segment Dimensions</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This use case explains how to create your proper algorithm to compute 
		the dimensions (i.e. diameter and minimum bend radius) of a bundle segment 
		according on the wires its contains.</p>
		<ul>
			<li><a href="#Learn">Modifying the Interface Dictionary of the Framework 
			CAAElecRoutingItf.edu</a></li>
			<li><a href="#UseCase">Building the CAAEwrRoutingImpl Component</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>Modifying the Interface Dictionary of the Framework CAAElecRoutingItf.edu</h2>
<p>The dictionary is called CAAElecRoutingItf.edu.dic and is located in the following 
path:</p>
<p><code>InstallRootFolder\CAADoc\CAAElecRoutingItf.edu\CNext\code\dictionary</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>To activate your code, you have to uncomment the following line: </p>
<pre class="code">#ElecBundleSegment          CATIEwrUipBundleSegment         libCAAEwrRoutingImpl</pre>
<p>The interface dictionary declares that the <em>ElecBundleSegment </em>object implements 
the <em>CATIEwrUipBundleSegment </em>interface and that the code to load into memory 
to use this interface is located in the libCAAEwrRoutingImpl shared library or DLL. 
To have more details, you can refer to the referenced articles [<a href="#References">1</a>] 
and [<a href="#References">2</a>]</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>Building the CAAEwrRoutingImpl Component</h2>
<p>CAAEwrRoutingImpl is a CATIA component exposing the CATIEwrUipBundleSegment interface. 
For the definition of components and interfaces, you can refer to the referenced 
articles [<a href="#References">1</a>] and [<a href="#References">2</a>]</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAEwrRoutingImpl Do</h3>
<p>The goal of CAAEwrRoutingImpl is to calculate the diameter and the minimum bend 
radius of a bundle segment according to the wires contained in it.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Build CAAEwrRoutingImpl</h3>
<p>To launch CAAEwrRoutingImpl, you will need to set up the build time environment, 
then compile CAAEwrRoutingImpl along with its prerequisites as described in [<a href="#References">3</a>]</p>
<p>To do that, you must use the mkmk command (refer to [<a href="#References">5</a>] 
for more explanations)</p>
<pre>$ cd ws_root_dir/CAADoc/CAAElecRoutingItf.edu/CAAEwrRoutingImpl.m
$ mkmk</pre>
<p>or</p>
<pre>$ cd ws_root_dir/CAADoc/CAAElecRoutingItf.edu
$ mkmk CAAEwrRoutingImpl.m</pre>
<p>After, to test your component, you will have to log in to the 3DEXPERIENCE 
Platform. Type 3DEXPERIENCE on the 
command line (refer to [<a href="#References">5</a>]), and to follow the scenario 
given in the referenced chapter [<a href="#References">4</a>].</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAEwrRoutingImpl Code</h3>
<p>CAAEwrRoutingImpl code is located in the CAAEwrRoutingImpl.m module of the CAAElecRoutingItf.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAElecRoutingItf.edu\CAAEwrComputeBundleSegment.m</code></p>
<p><code>InstallRootFolder\CAADoc\CAAElecRoutingItf.edu\CAAEwrComputeBundleSegment.m\LocalInterfaces</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the folder 
where the API CD-ROM is installed.
It is made of a unique source file named <strong>CAAEwrUipBundleSegmentExt.cpp</strong>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>Description of the Extension Class</h3>
<p>The extension class is called CAAEwrUipBundleSegmentExt.h and is located in the 
LocalInterfaces of the CAAEwrRoutingImpl.m module of the CAAElecRoutingItf.edu framework:</p>
<p><code>InstallRootFolder\CAAElecRoutingItf.edu\CAAEwrComputeBundleSegment.m\LocalInterfaces</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the folder 
where the API CD-ROM is installed.</p>
<pre class="code">#ifndef CAAEwrUipBundleSegmentExt_H
#define CAAEwrUipBundleSegmentExt_H

// COPYRIGHT DASSAULT SYSTEMES 2002

// inherited from
#include &quot;CATBaseUnknown.h&quot;

// forward declaration
#include &quot;CATListOfDouble.h&quot;

class CAAEwrUipBundleSegmentExt: public CATBaseUnknown
{
  CATDeclareClass;
  
public:
  
  CAAEwrUipBundleSegmentExt();
  virtual ~CAAEwrUipBundleSegmentExt();
  
  /**
  * Returns the value of bundle segment diameter (in mm) fonction
  * of the values of the diameters of the wires contained in it.     
  *  
  * iListOfWireDiameters
  *   The list of the diameters of the wires contained in the bundle segment
  *   (the diameters must be expressed in mm)
  * oBundleSegmentDiameter
  *   The value of the bundle segment diameter 
  *   (the diameter must be expressed in mm)
  */
  HRESULT ComputeDiameter (const CATListOfDouble iListOfWireDiameters , double &amp; oBundleSegmentDiameter); 
  
  /**
  * Returns the value of bundle segment bend radius (in mm) fonction
  * of the values of the bend radii of the wires contained in it.     
  *  
  * iListOfWireBendRadius
  *   The list of the bend radii of the wires contained in the bundle segment
  *   (the bend radii must be expressed in mm)
  * oBundleSegmentBendRadius
  *   The value of the bundle segment bend radius
  *   (the value must be expressed in mm)
  */ 
  HRESULT ComputeBendRadius (const CATListOfDouble iListOfWireBendRadius, double &amp; oBundleSegmentBendRadius);
  
private:
  
  CAAEwrUipBundleSegmentExt(const CAAEwrUipBundleSegmentExt &amp;);
  CAAEwrUipBundleSegmentExt&amp; operator=(const CAAEwrUipBundleSegmentExt &amp;); 
  
};
#endif</pre>
<p>For more details about what is an extension class, you can refer to the referenced 
article [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>Description of the Implemented Methods</h3>
<p>The code of the implemented methods is contained in the source file named <strong>
CAAEwrUipBundleSegmentExt.cpp.</strong></p>
<p>Firstly we include the adhesion of our class CAAEwrUipBundleSegmentExt with interface 
CATIEwrUipBundleSegment as like:</p>
<pre class="code">#include &quot;TIE_CATIEwrUipBundleSegment.h&quot;
TIE_CATIEwrUipBundleSegment(CAAEwrUipBundleSegmentExt);

CATImplementClass(CAAEwrUipBundleSegmentExt, CodeExtension, CATBaseUnknown, ElecBundleSegment);</pre>
<p>The first method is called <strong>ComputeDiameter</strong>. It takes as input the list 
of the diameters of the wires contained in the bundle segment (CATListOfDouble) 
and it returns the value of the bundle segment.</p>
<p>The calculation is based upon the whole area taken by all the wires.</p>
<pre class="code">...
//==========================================================================
// ComputeDiameter
//==========================================================================
HRESULT CAAEwrUipBundleSegmentExt::ComputeDiameter(const CATListOfDouble iListOfWireDiameters, 
                                                   double &amp; oBundleSegmentDiameter)

{
  oBundleSegmentDiameter = 0.;
  
  int nbDiam = iListOfWireDiameters.Size();
  double Area = 0.;
  
  for (int ii=1;ii&lt;=nbDiam;ii++)
    Area += CATPI * iListOfWireDiameters[ii] * iListOfWireDiameters[ii] /4.;
  
  oBundleSegmentDiameter = sqrt (Area * 4. / CATPI);;
  
  return S_OK;
}
...</pre>
<p>The second method is called <strong>ComputeBendRadius</strong>. It takes as input the list 
of the bend radii of the wires contained in the bundle segment (CATListOfDouble) 
and it returns the value of the bundle segment bend radius.</p>
<p>The returned bend radius is equal to the maximum bend radius of the wires.</p>
<pre class="code">...
//==========================================================================
// ComputeBendRadius
//==========================================================================
HRESULT CAAEwrUipBundleSegmentExt::ComputeBendRadius(const CATListOfDouble iListOfWireBendRadius, 
                                                     double &amp; oBundleSegmentBendRadius)
{
  oBundleSegmentBendRadius=0.;
  
  int nbRad=iListOfWireBendRadius.Size();
  
  for (int ii=1;ii&lt;=nbRad;ii++)
  {
    if (iListOfWireBendRadius[ii] &gt; oBundleSegmentBendRadius)
    {
      oBundleSegmentBendRadius = iListOfWireBendRadius[ii];
    }
  }
  
  return S_OK;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAASysObjectModeler/CAASysUcOMCreatingCmp.htm">
		Creating Components</a> </td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAASysObjectModeler/CAASysUcOMCreatingInt.htm">
		Creating Interfaces</a> </td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a> </td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAEwrComputeBundleSegment.htm">Testing Your Own Algorithm Implementation</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAABtlMkmk/CAABtlMkHandBook.htm">
		mkmk Handbook</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Mar 2002]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>1.1</strong> [May 2006]</td>
		<td>Document updated</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
