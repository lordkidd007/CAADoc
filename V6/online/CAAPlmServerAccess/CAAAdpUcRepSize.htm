<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>Computing Rep Ref size</title>
<script language="JavaScript" src="../CAADocJavaScript/submit.js">
		</script>

<style type="text/css">
.style5 {
	font-family: "Courier New";
	font-size: x-small;
}
.style3 {
	font-family: "Courier New";
	font-size: xx-small;
}
.style2 {
	font-size: x-small;
}
.style7 {
	font-family: "Courier New", Courier;
	font-size: 9pt;
	}
.style8 {
	font-weight: normal;
}
.style9 {
	color: #000000;
}
</style>

</head>

<body style="text-align: left">
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Computing Rep Ref size</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td  >
      <h2><a name="Top"></a>Abstract</h2>
      <p>This article discusses the <code><b>CAAAdpRepSize</b></code> use
      case.&nbsp; The objective of this Use Case is to demonstrate the steps involved&nbsp;
      in computing the size in vault of the Stream Descriptors associated                   with a set of
      Rep Refs. The set of Rep Refs are those retrieved from the database by
      running a query on it,&nbsp; based on an input search criteria.<br>
      <ul>
        <li><a href="#Learn">What You Will Learn With This Use Case</a></li>
        <li><a href="#UseCase">The CAAAdpRepSize Use Case</a>
          <ul>
            <li><a href="#What">What does the CAAAdpRepSize do</a></li>
            <li><a href="#How">How to launch CAAAdpRepSize</a></li>
            <li><a href="#Where">Where to find the CAAAdpRepSize code</a></li>
          </ul>
        </li>
        <li><a href="#Step">Step-by-Step</a></li>
		<li><a href="#InShort">In Short</a></li>
		<li><a href="#History">References</a></li>
      </ul>&nbsp;
    </td>
  </tr>
</table>

<!---------------------------------comment------------------------------------->

<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>

<p>The Use Case was primarily written with an objective to teach the process of
computing the size in vault of the stream descriptors associated with a set of
Rep Refs.&nbsp;</p>

<p>In the process, user also learns to query the database to seek a set of Rep
Refs satisfying a search criteria. The Query Use Case [<a href="#References">1</a>]
provides further details on Querying PLM Components from the database.</p>

<p>From the query result the Rep Ref Identificator (<code><b><i>CATIAdpPLMIdentificator</i></b></code>)
is sought, which is an input for the Rep Size computation.</p>

<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<h2><a name="UseCase"></a>The CAAAdpRepSize Use Case</h2>
<p> <code><b>CAAAdpRepSize</b></code> is a use case of the <code><b> CAAPLMClientAdapter.edu</b></code>
framework that
illustrates the <code><b>CATPLMIntegrationAccess</b></code> framework capabilities.&nbsp;</p>
<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<h3><a name="What"></a>What Does CAAAdpRepSize Do</h3>
<p>This use case is a batch&nbsp; which consists in to call the <code>
GetRepresentationsDataSize</code> method of the <i>CATAdpDataSizeServices </i>
class. This API takes a set of PLM Representation Reference as input. This set 
has been computed by looking for all the PLM Rep Ref in data base according to 
an input criteria. </p>

<p>The sample data for this use case are set of PLM Representation Reference (PLM 
Rep Ref) listed below [<a href="#Fig.1">Fig.1</a>].&nbsp; These PLM Rep Ref are inside 
3D XML files delivered with the use case.&nbsp; See 
	the <a href="#How">How to Launch CAAAdpRepSize</a>&nbsp; 
	section for more details. </p>

    <table border="0" >
           <caption><a name="Fig.1">Fig.1</a> List of PLM Representation Reference</caption>
           <tr>
        <td >
        <img border="0" src="images/CAAAdpRepSize_Fig1.jpg" width="600" height="176"></td>
      </tr>
    </table>
  <p>When the two PLM Rep Ref have been saved, you have captured their size:</p>
<table border="0" id="table16">
	<caption><a name="Fig.2">Fig.2</a>PLM_ExternalID=REP_FOR_CAR1</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAAdpRepSize_Fig2.jpg" width="610" height="258"></td>
	</tr>
</table>
<table border="0" id="table17">
	<caption><a name="Fig.3">Fig.3</a> PLM_ExternalID=REP_FOR_CAR2</caption>
	<tr>
		<td>
		<img border="0" src="images/CAAAdpRepSize_Fig3.jpg" width="610" height="311"></td>
	</tr>
</table>
<p>If the criteria is look for all PLM Rep Ref whose the PLM_ExternalID is &quot;REP_FOR_CAR*&quot; 
, we have the such result:</p>
  
		<font color="#0000FF">   
<table class="code" width="912" id="table18">
  <tr>
    <td width="904"><pre>...
Results of the Query: 2 components retrieved

Attribute Name : PLM_ExternalID
Attribute Value: REP_FOR_CAR2

Attribute Name : V_version
Attribute Value: ---

Attribute Name : PLM_ExternalID
Attribute Value: REP_FOR_CAR1

Attribute Name : V_version
Attribute Value: ---

The size in vault of a set of Representations is: <b>135</b>
</b> ...</pre>
    </td>
  </tr>
</table>

<p>T</font>he use case displays the identifier set attribute value for each found PLM 
Representation Reference, and then display the value retrieved by <code>
GetRepresentationsDataSize</code> . The valus is equal to 135 (=76+59). </p>

<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<h3 class="style8"><a name="How"></a>How to Launch CAAAdpRepSize</a></h3>
<p>To launch <code>CAAAdpRepSize</code> , you will need to set up the build time
environment, then compile <code>CAAAdpRepSize</code> along with its prerequisites,
set up the run time environment, and then execute the use case [<font color="#0000FF"><a href="#References">1</a>].</p>
  </font>

<p>To
launch the use case execute the command:</p>
<p><code> <a>mkrun -c &quot;</a>CAAAdpRepSize</code> <a><code>Repository Server User Password SecurityCtx PLMType AttrName
AttrValue [Attr Name] [Attr Value] ...&quot;</code></a> </p>
<p>where:</p>

		<font color="#0000FF">   

<table class="border1"  id="table13" >
  <tr>
    <th><b>Repository</b></th>
     <td><script type="text/javascript">insertRepository();</script></td>
  </tr>
  <tr>
     <th><b>Server</b></th>
    <td>The name and port of the server as <i>name</i>:<i>port_number</i></td>
  </tr>
  <tr>
    <th ><b>User</b></th>
    <td>The user name</td>
  </tr>
  <tr>
    <th ><b>Password</b></th>
    <td >The user password to authenticate the user</td>
  </tr>
  <tr>

    <th><b>SecurityCtx</b></th>
    <td>A string representing the security context (Role.Organization.Project). 
    Choose Role as Reviewer </td>
  </tr>
  
  <tr>
    <th><b>PLMType</b></th>
    <td>A String representing PLMType </td>
  </tr>

  
	<tr>
  <th> <b>AttrName&nbsp;</b></th>
			<td>Represents an Attribute Name to define input search
      criteria for PLM Rep Refs</td>
		</tr>
	<tr>
		<th> <b>AttrValue</b></th>
		<td>Represents an Attribute Value to define input search
      criteria for PLM Rep Refs</td>
   </tr>
	<tr>
		<th> <b>[AttrName&nbsp;]</b></th>
		<td>Represents any more Attribute Names to define input search criteria for
      PLM Rep Refs</td>
   </tr>
 	<tr>
		<th> <b>[AttrValue]</b></th>
		<td>Represents any more Attribute Values to define input search criteria 
        for PLM Rep Refs</td>
   </tr>
</table>





  </font>





<p>The input <code><a>PLMRepReferences</a></code>
are retrieved by importing <code><a>CAAAdpRepSize</a></code><a><code>1.</code></a><code>3dxml</code>
(for 
  
		<font color="#0000FF">   
<a href="#Fig.2"><span class="style9">REP_FOR_CAR1</span></a></font>) and <code><a>CAAAdpRepSize</a></code><a><code>2.</code></a><code>3dxml </code>
(for 
  
		<font color="#0000FF">   
<a href="#Fig.3"><span class="style9">REP_FOR_CAR2</span></a></font><span class="style9">) files from the <a><code>CAAPLMClientAdapter.edu</code></a> 
fwk</span><font color="#0000FF">.&nbsp;</p>
<table id="table15">
    <tr>
      <td><code>InstallRootDirectory\CAAPLMClientAdapter.edu\InputData\</code></td>
    </tr>
</table>
  </font>

<p>where <code>InstallRootDirectory</code>  [<font color="#0000FF"><a href="#References">1</a></font>] is the directory where the CAA CD-ROM
is installed.</p>
<p align="left">Attention:  Please refer to the document [<font color="#0000FF"><a href="#References">1</a></font>]
for how to import and reimport such a 3D XML file in your PLM repository.&nbsp;</p>
  
		<font color="#0000FF">   
<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<h3 class="style8"><a name="Where"></a>
  </font>

  Where to Find the CAAAdpRepSize&nbsp; Code</h3>
  
		<font color="#0000FF">   
<p>The <code>CAAAdpRepSize</code> use case is located in the <code>CAAAdpRepSize</code><a><code>.m</code></a> module of the
<a><code>CAAPLMClientAdapter.edu</code></a> framework:</p>
<table>
  <tr>
    <td><code>InstallRootDirectory\CAAPLMClientAdapter</code>.<code>edu\CAAAdpRepSize.m\</code></td>
  </tr>
</table>
<p>where <code><a>InstallRootDirectory</a></code>  [<font color="#0000FF"><a href="#References">1</a>]
is the directory where the CAA CD-ROM
is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<h2 class="style8"><a name="Step"></a>
  
  </font>

  </font>

		<font color="">   
Step-by-Step</h2>
<p>Following are the main steps in <code>CAAAdpRepSize</code> :</p>
  
		<font color="#0000FF">   
<ol>
  <li><a href="#Prolog">Prolog</a></font></li>
  </font>

  <li>
	<a href="#Retrieve the knowledge or Custo PLMType in the current environment">
	Retrieve the knowledge or Custo PLMType in the current environment</a></li>
  
		<font color="#0000FF">   
  <li>
	<a href="#Query the database for components with AttributeSet and PLMType">
	Query the database for components with AttributeSet and PLMType</a></li>
  <li>
	<a href="#Create a list of Identificators of  PLMType  returned by the Query">Create a list of Identificators of&nbsp; PLMType returned by the Query</a></li>
  <li>
	<a href="#Compute the cumulative size in vault of a set of PLMType returned by Query">Compute the cumulative size in vault of
    a set of PLMType returned by Query</a></li>
  <li><a href="#Computing Size for an invalid PLMType  list input">Computing
     Size for an invalid PLMType list input</a></li>
  <li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<!---------------------------------comment------------------------------------->

<!---------------------------------comment------------------------------------->

</font>

<h3 class="style8"><a name="Prolog"></a>Prolog&nbsp;</h3>
<p>The <code>CAAAdpRepSize</code> use case begins by creating a session
and connecting to the Input Repository. This,
being the most fundamental prerequisite for all batch use cases, it is the first
step in their execution.</p>
<p>In this case, we create a session and connect to Repository with the Reviewer Role
(since we ain't modifying PLM data but only retrieving it from the database). There are other parameters as well,
details of which can be found in the&nbsp; &quot;Creating a Basic PLM Batch&quot;
use case article [<font color="#0000FF"><a href="#References">2</a></font>].
This article primarily deals with Opening and Closing a PLM session.</p>
  
		<font color="#0000FF">   
  <script type="text/javascript">insertLinkToTop();</script>

<script type="text/javascript">insertLinkToTop();</script>
<h3 class="style8">
<a name="Retrieve the knowledge or Custo PLMType in the current environment">
Retrieve the Knowledge or Custo PLMType in the
current environment</a></h3>
<p>The PLMtype is retrieved in environment.&nbsp; This acts as one of the criteria while querying the database
for PLM Components.</p>
<table class="code" width="912">
  <tr>
    <td width="904"><pre>...</pre>
  
	<pre>        CATIType_var<font SIZE="2"> spCATType;</font></pre>
	<font SIZE="2">
	<p class="style5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr= CATCkePLMNavPublicServices::RetrieveKnowledgeType(iStrPLMType,spCATType);</p>
  
		<font color="#0000FF">   
	<p>

</font>

    </font><span class="style5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
	if</span><span class="style3"><span class="style2"> ( NULL_var == 
	spCATType ) </span></span></p>
	<font SIZE="2">
	<p class="style5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
	{</p>
	<p class="style5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
	hr= CATCkePLMNavCustoAccessPublicServices::RetrieveCustoType(iStrPLMType,spCATType);
	
	</p>
	<p class="style5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....</p>
	<p class="style5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	}
	</p>
	</font>
	<pre>......</pre>

    </td>
  </tr>
</table>

<script type="text/javascript">insertLinkToTop();</script>
<h3 class="style8"><a name="Query the database for components with &quot;AttributeSet + Usable Custo&quot;"></a>
<a name="Query the database for components with AttributeSet and PLMType">Query the database for components with "AttributeSet 
and PLMType "</a></h3>

<p>We launch a search in the database to retrieve information of PLM Components conforming the following
search criteria</p>
<blockquote>
  <ul>
    <li >The PLM type for Rep Ref <code>&nbsp;</code>(<code class="style2">spCATType</code>)</li>
    <li >Attribute-value sets input&nbsp; (<code>iAttributeSet</code>)
      .
      The steps involved in creating the AttributeSets will be found in the
      Query Use Case. [<font color="#0000FF"><a href="#References">3</a>]</li>
  </ul>
</blockquote>

<table class="code" width="912">
  <tr>
    <td width="904">
      <pre>	CATListPtrCATAdpQueryResult oQueryResults;
	hr = CATAdpPLMQueryServices::GetElementsFromAttributes(spCATType,iAttributeSet,
      	                                                    oQueryResults);
...</pre>
    </td>
  </tr>
</table>

<p>The return of this query is a list of <code>CATAdpQueryResult</code>
objects. These objects contain information of the PLM Components. Thus its only
the information of the PLM Components which is sought and not the actual
components.&nbsp;</p>

<p>So if the components are to be loaded/opened in the current session,&nbsp;
we'll have to seek their Identification&nbsp; from the <code>CATAdpQueryResult</code>
object and explicitly load them in the&nbsp; session.</p>

<script type="text/javascript">insertLinkToTop();</script>
<h3 class="style8">
<a name="Create a list of Identificators of  PLMType  returned by the Query">Create a list of Identificators of&nbsp; 
PLMType&nbsp; returned by the Query</a></h3>

<p>The API which computes the Size, takes a list of <code>Identificator</code> as input. We now retrieve this <code>Identificator</code>
from the Query result.</p>

<table class="code" width="912">
  <tr>
    <td width="904">
      <pre>...
	CATLISTP(CATIAdpPLMIdentificator) ListRepIdent;
      	int QueryResSize = oQueryResults.Size();</pre>
      <pre>	for (int k=1; k&lt;=QueryResSize; k++)
	{
		CATAdpQueryResult* pCurrentResult = NULL;
		pCurrentResult = oQueryResults[k];
		if (NULL != pCurrentResult)
		{
			CATIAdpPLMIdentificator* poAdpPLMIdentificator = NULL;
			hr = pCurrentResult-&gt;GetIdentifier(poAdpPLMIdentificator);
			if (SUCCEEDED(hr) &amp;&amp; (NULL != poAdpPLMIdentificator))
			{
				ListRepIdent.Append(poAdpPLMIdentificator);
				CATAdpIdentificationSet oIdentifyingSet;
				hr = CATAdpQueryServices::GetIdentificationSet(poAdpPLMIdentificator,
      									 oIdentifyingSet);
				if (S_OK == hr)
				{
					int current=0;
					CATString AttributeName;
					CATUnicodeString AttrValue;
					while (S_OK == (oIdentifyingSet.NextAttribute
      								(current,AttributeName,AttrValue)))
					{
						cout &lt;&lt; &quot;Attribute Name : &quot;
      						     &lt;&lt; AttributeName.getUnicodeString() &lt;&lt; endl;
						cout &lt;&lt; &quot;Attribute Value: &quot;
      						     &lt;&lt; AttrValue.ConvertToChar() &lt;&lt; endl &lt;&lt; endl;
					}
...</pre>
    </td>
  </tr>
</table>
<p>From the <code>Identificator</code>, the <code>IdentificationSet</code>
is retrieved which has those attribute-values sets, which uniquely identify a
PLM Component. We display this information to enable one to identify the <code>PLM</code>
<code>Rep</code> <code>Ref</code> retrieved from the database.</p>

<script type="text/javascript">insertLinkToTop();</script>
<h3 class="style8"><a name="Compute the cumulative size in vault  of a set of Rep Refs returned by Query"></a>
<a name="Compute the cumulative size in vault of a set of PLMType returned by Query">Compute the cumulative size in vault of
a set of PLMType returned by Query</a></h3>
<p>Here we compute the cumulative size of the Stream Descriptors associated with
a list of Rep Refs. This set is a result of the query we ran earlier on the
database, with a user-defined search criteria.</p>

<table class="code" width="912">
  <tr>
    <td width="904">
      <pre>	unsigned int RepSize; // The unit is kilobytes
	hr = CATAdpDataSizeServices::GetRepresentationsDataSize(ListRepIdent,RepSize);
...</pre>
    </td>
  </tr>
</table>
<p align="left">Please take note that the Rep Size returned by this API should
necessarily be the same as the size of the data stored&nbsp; in vault, while
saving this&nbsp; Rep Ref in CATIA. [<font color="#0000FF"><a href="#Fig.2">Fig.2</a>]</p>

<script type="text/javascript">insertLinkToTop();</script>
<h3 class="style8"><a name="Computing Size for an invalid PLMType  list input">Computing
Size for an invalid PLMType&nbsp; list input</a></h3>

<p>The Rep Size API returns <code>E_INVALIDARG</code>, if the list of Rep
Ref <code>Identificators</code> is</p>

<ul>
  <li>empty</li>
  <li>has atleast one element which is not of the Rep Ref type</li>
</ul>
<p>Here we have passed an empty list and the return of the API has been
reflected by the Use Case too, as depicted in the code below.</p>

<table class="code" width="912">
  <tr>
    <td width="904">
      <pre>	} else if(E_INVALIDARG == hr)
	{
		cout &lt;&lt; &quot;Rep Ref Size API returns INVALIDARG for an empty Rep Ref list input&quot; &lt;&lt; endl;
</pre>
    </td>
  </tr>
</table>

<script type="text/javascript">insertLinkToTop();</script>
<h3><span class="style8"><a name="Epilog"></a></span>
  
		<font color="#0000FF">   
  <span class="style8">Epilog</span></h3>
<p>The <code>CAAAdpRepSize</code> use case ends by simply closing the PLM
session. Since all PS use cases&nbsp; necessarily conclude by closing the PLM
session, we have a dedicated article on this topic namely.&nbsp; &quot;Creating a
Basic PLM Batch&quot; [<font color="#0000FF"><a href="#References">2</a>].&nbsp;</p>
<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<h2><span class="style8"><a name="InShort"></a></span>
  
		<font color="#0000FF">   
  <span class="style8">In Short</span></h2>

<p>The use case primarily computes the Rep Size of the Stream Descriptors
associated with a list of PLM Rep Refs.</p>

<p>This list is retrieved by running a query on the database seeking those <code>PLM
Rep Refs </code>whose attribute-value sets are input by user. Also, we seek
only&nbsp; the <code>PLMRepresentationDS</code> type, which is an &quot;<font color="#0000FF"><span class="style7">PLMType</span>&quot;
type of a <code>PLM</code> <code>Rep</code> <code>Ref</code>
in the environment.&nbsp;</p>

<p>The query result, a <code>CATAdpQueryResult</code>  object contains&nbsp;
information associated with&nbsp; the PLM Components, which
satisfied our search criteria. We seek the <code>Identificator</code> of
the Rep Ref from this result object and append a list of <code>identificators</code>,
an input for the Rep Size computation API.&nbsp; The output in KB (KiloBytes) of the Rep Size API, is the same as the size of
the data transferred to vault during the Rep Ref save in CATIA.</p>

<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->
<h2 class="style8"><a name="References"></a>References</h2>

<table>
     <tr>
     <td valign="top">[1]</td>
     <td>
       
		<font color="#0000FF">   
       <a href="../CAADocUseCases/CAADocRunSample.htm">
       Building and Launching a CAA Use Case</a></font>

     </td>
     </tr>

     <tr>
     <td valign="top">[2]</td>
     <td>
  
		<font color="#0000FF">   
     <a href="CAAAdpUcBasicBatch.htm">Creating
       a Basic PLM Batch</a></font></td>
     </tr>

     <tr>
     <td valign="top">[3]</td>
     <td>
  
		<font color="#0000FF">   
     <a href="CAAAdpUcQueryPLMComponent.htm">Querying PLM Components by AttributeSets and &quot;Usable Custo&quot;
      type</a></font></td>
     </tr>

</table>

   
<!---------------------------------comment------------------------------------->
<h2><span class="style8"><a name="History"></a></span>
  
		<font color="#0000FF">   
  <span class="style8">History</span></h2>
<table >
  <tr>
    <td valign="top">Version: <strong class="style8">1</strong>     [Nov 2006]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
<script type="text/javascript">insertLinkToTop();</script>  </tr>
</table>

<!---------------------------------comment------------------------------------->
<script type="text/javascript">insertCopyright();</script>

</font>

</font>

</font>

</font>

</font>

</font>

</font>

</font>

</body>

</html>

