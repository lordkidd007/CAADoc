<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Using SRS Coordinate Converter</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1>Using SRS Coordinate Converter</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATSrsUseItf use case. This use case 
		explains how to use SRS Coordinate Converter.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASrsCoordinateConverter Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASrsCoordinateConverterDo</a></li>
				<li><a href="#How">How to Launch CAASrsCoordinateConverter</a></li>
				<li><a href="#Where">Where to Find the CAASrsCoordinateConverter
					Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA SRS (Space Reference System) Interfaces. Its main intent is to allow you to use SRS.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASrsCoordinateConverter Use Case</h2>
<p>CAASrsCoordinateConverter.m is a use case of the CAASpaceReferenceSystemDoc.edu framework 
that illustrates the CATIA SRS Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASrsCoordinateConverter Do</h3>
<p>The goal of CAASrsCoordinateConverter use case is to show how to retrieve and modify SRS data.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASrsCoordinateConverter </h3>
<p>To launch CAASrsCoordinateConverter , you will need to set up the build time 
environment, then compile CAASrsCoordinateConverter along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
    <p>You should first launch CATIA and import the
								<code>CAASrsCoordinateConverterUc.3dxml</code> file supplied 
								in folder <code>InstallRootDirectory\CAADoc\Doc\online\CAAScdSrsSpaceReferenceSystem\samples\</code> 
								where <code>InstallRootDirectory</code> is the directory 
								where the CAA CD-ROM is installed.</p>
    The below need to be set for use Coordinate methods : <br />&nbsp;&nbsp;&nbsp; 1) Change Unit to M<br />&nbsp;&nbsp;&nbsp; 2) Attach Resource Table to Collab Space in Data Setup
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASrsCoordinateConverter Repository Server User Password SecutityCtx PLM_ExternalID &quot;</em></pre>
<p>where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The value of the <code>PLM_ExternalID</code> attribute of the SRS part.</td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>CAASrsCoordinateConverterUc.3dxml</strong>
    file from the  <strong>CAASpaceReferenceSystem.edu</strong> framework.
</p>
<p>
<code> InstallRootFolder\CAADoc\CAASpaceReferenceSystem.edu\InputData\CAASrsCoordinateConverterUc.3dxml</code><br>
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASrsCoordinateConverter Code</h3>
<p>The CAASrsSpaceReferenceSystem sample is made up of a single file located in the CAASrsCoordinateConverter.m module of the CAASpaceReferenceSystem.edu 
framework: <code>InstallRootFolder\CAADoc\CAASpaceReferenceSystem.edu\CAASrsCoordinateConverter.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table>
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td>CATISrsUseCoordinateConverter</td>
		<td>Interface dedicated to the SRS coordinate converter</td>
	</tr>
	</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are 11 logical steps in Main:</p>
<table>
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Setting the Connection Parameters</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step6">Retrieving the Customized Reference of the Product 
		Modeler</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step7">Opening the Model (arg[6])</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step8">Opening the Product</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step9">Getting the CATIMmiPrtContainer and Service from It</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step10">Getting Coordinate Converter(Using Instantiate Service)</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step11">Converting Absolute Coordinate To Srs Coordinate</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step12">Converting Srs Coordinate To Absolute Coordinate</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step13">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (7 != argc)
{
cout &lt;&lt; endl;
cout &lt;&lt;&quot;CAASrsSpaceReferenceSystem &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Environment&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project ).&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
cout &lt;&lt; endl;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>Connection Parameters initialization.</p>
<pre class="code">...
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Repository&quot;, argv[1]);
if (FAILED(hr))
{
retCode = 2;
goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Server&quot;, argv[2]);
if (FAILED(hr))
{ 
retCode = 3;
goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserID&quot;, argv[3]);
if (FAILED(hr))
{ 
retCode = 4;
goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserPasswd&quot;, argv[4]);
if (FAILED(hr))
{
retCode = 5;
goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;SecurityCtx&quot;, argv[5]);
if (FAILED(hr))
{
retCode = 6;
goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
hr = CATPLMSessionServices::InitPLMSession();
if (FAILED(hr))
{
retCode = 7;
goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a></h3>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving the Customized Reference of the Product Modeler</h3>
<pre class="code">...
hr = CATCkePLMNavPublicServices::RetrieveKnowledgeType("VPMReference", hTypeModeler);
if( ( FAILED(hr) || (NULL_var == hTypeModeler) ) )
{
retCode = 9;
goto EscapeWay;
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the Model (arg[6])</h3>
<pre class="code">...
attributeSet.AddAttribute(&quot;PLM_ExternalID&quot;,argv[6]);
hr = CATAdpPLMQueryServices::GetElementsFromAttributes(hTypeModeler,
                                                       attributeSet,
                                                       ListP_QueryResults) ;

if(1 <=ListP_QueryResults.Size())
{
  pQueryResult =ListP_QueryResults[1] ;
  if(NULL !=pQueryResult)
  {
    hr =pQueryResult->GetIdentifier(pIPLMIdent) ;
  }
}
if ( (FAILED(hr)) || (NULL == pIPLMIdent) )
{
retCode = 10;
goto EscapeWay;
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Opening the Product</h3>
<pre class="code">...
  hr = adpOpener.CompleteAndOpen(pIPLMIdent,IID_CATIPLMProducts, (void**) &amp;pIPLMProduct);
if ( (FAILED(hr)) || (NULL == pIPLMProduct) )
{
retCode = 11;
goto EscapeWay;
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the CATIMmiPrtContainer and Service from It</h3>
<pre class="code">...
  hr  =  SwitchToDesignModeAndReturnPartContainer(pIPLMProduct,pIPrtCont,piUsePart);  
  if(NULL == pIPrtCont)  
  {  
    retCode  =  12;  
    goto  EscapeWay;  
  }
  
  //-----------------------------------------------------------------------
  // - Get InstantiateService
  //-----------------------------------------------------------------------
  hr = GetInstantiateService(spSrsCoordinateConverter);
  if (FAILED(hr) || !spSrsCoordinateConverter)
  {
    retCode = 13;
    goto EscapeWay;
  }
  ...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Getting Coordinate Converter(Using Instantiate Service)</h3>
<pre class="code">...

  hr = CATSrsUseInstantiateService::CreateSrsCoordinateConverter(pSrsCoordinateConverter);
  
  ...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Converting Absolute Coordinate To Srs Coordinate</h3>
<pre class="code">...
  <span class="comment">
  //-----------------------------------------------------------------------
  // - Converting Absolute Coordinate To Srs Coordinate
  //-----------------------------------------------------------------------
  </span>
  CATMathPoint point;                     <span class="comment">// Input</span>
  CATLISTV(CATUnicodeString) luSRSCoord;  <span class="comment">// Output</span>
  ...
  hr = pSrsCoordinateConverter->ConvertAbsoluteCoordToSrsCoord(point, luSRSCoord);

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Converting Srs Coordinate To Absolute Coordinate</h3>
<pre class="code">...
  <span class="comment">
  //-----------------------------------------------------------------------
  // - Converting Srs Coordinate To Absolute Coordinate
  //-----------------------------------------------------------------------
  </span>
  CATLISTV(CATUnicodeString) luSRSCoord;  <span class="comment">// Input</span>
  CATMathPoint point;                     <span class="comment">// Output</span>
  ...

  hr = pSrsCoordinateConverter->ConvertSrsCoordToAbsoluteCoord(luSRSCoord, point);

...</pre>
<h3><a name="Step13"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
  hr = CATPLMSessionServices::ClosePLMSession();
  if (FAILED(hr)) 
  {
    cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
    retCode = 16;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to retrieve and use SRS methods.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [May 2014]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
