<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Editing a User Feature</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Editing a User Feature</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article shows how to edit a User Feature.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMcaUdfEdition Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAMcaUdfEdition Do</a></li>
					<li><a href="#How">How to Launch CAAMcaUdfEdition</a></li>
					<li><a href="#Where">Where to Find the CAAMcaUdfEdition Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The goal of this article is to show how to edit a User Feature.</p>
<p>On a User Feature you can modify:</p>
<ol>
	<li>The value on an input, that is set a new input feature in place of an old 
		one.</li>
	<li>The value of a published parameter.</li>
</ol>
<p>Before reading this article, see the technical article about Power Copy and User 
Feature [<a href="#References">1</a>].s</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMcaUdfEdition Use Case</h2>
<p><code>CAAMcaUdfEdition</code> is a use case of the <code>CAARepTemplate.edu</code> 
framework that illustrates <code>CATTemplateInterfaces</code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMcaUdfEdition Do</h3>
<p>In the CAAMcaUdfEdition_CAAUdfModelWithInstances 3D Shape depicted in [<a href="#Fig1">Fig.1</a>] 
we have two instances of the User Feature reference <code>CAAUserFeatureSample</code>. 
This User Feature reference has been created by the use case &quot;Creating a User 
Feature Reference&quot; [<a href="#References">2</a>], and the two instances have 
been created thanks to the use case &quot;Instantiating a User Feature Reference&quot; 
[<a href="#References">3</a>].</p>
<table>
	<caption><a name="Fig1">Fig.1</a>: The CAAMcaUdfEdition_CAAUdfModelWithInstances 
	3D Shape</caption>
	<tr>
		<td><img alt="" src="images/CAAMcaUdfEdition1.jpg"/></td>
	</tr>
</table>
<p>On the first instance <code>CAAUserFeatureSample.1</code> we will change the 
inputs. Its inputs are <code>Point.3</code> and <code>Point.1</code> and will become
<code>Point.1</code> and <code>Point.2</code> respectively, eventually. The current 
loft is as depicted in [<a href="#Fig2">Fig. 2</a>] and the one after modification 
is as in [<a href="#Fig3">Fig. 3</a>].</p>
<table>
	<caption><a name="Fig2">Fig.2</a>: Image before Modifications</caption>
	<tr>
		<td><img alt="" src="images/CAAMcaUdfEdition2a.jpg"/></td>
	</tr>
</table>
<table>
	<caption><a name="Fig3">Fig.3</a>: Image after Modifications</caption>
	<tr>
		<td><img alt="" src="images/CAAMcaUdfEdition2b.jpg"/></td>
	</tr>
</table>
<p>On the second instance <code>&quot;The Loft With Point2 and Point3&quot;,</code> 
we will change the value of the first published parameter <code>&quot;Radius of 
the circle placed at the first input&quot;</code>. This value is 10mm and will become 
50mm. The current loft is as depicted in [<a href="#Fig4">Fig.4</a>] and after modification 
is as depicted in [<a href="#Fig5">Fig.5</a>].</p>
<table>
	<caption><a name="Fig4">Fig.4</a>: Image before Modifications</caption>
	<tr>
		<td><img alt="" src="images/CAAMcaUdfEdition3a.jpg"/></td>
	</tr>
</table>
<table>
	<caption><a name="Fig5">Fig.5</a>: Image after Modifications</caption>
	<tr>
		<td><img alt="" src="images/CAAMcaUdfEdition3b.jpg"/></td>
	</tr>
</table>
<p><strong>The interactive scenario</strong>:</p>
<p>Launch CATIA, When the application is ready :</p>
<ul>
	<li><strong>Open CAAMcaUdfEdition _CAAUdfModelWithInstances</strong><a href="#Note">(*)</a>.</li>
	<li>Double click on <strong>CAAUserFeatureSample.1</strong> in the specifications 
		tree.
	<p>A <strong>UserFeature Edition</strong> dialog box appears</p>
		<ul>
			<li>Click the <strong>Inputs</strong> tab.
				<ul>
					<li>Click the first line, and click <strong>Point.1</strong> 
						in the specification tree.</li>
					<li>You are now on the second line, Click <strong>Point.2</strong> 
						in the specification tree.</li>
					<li>Click <strong>OK</strong>.</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>Double click on <strong>The Loft with Point2 and Point3</strong> in the 
		specification tree.
	<p>A <strong>UserFeature Edition</strong> dialog box appears.</p>
		<ul>
			<li>Click the <strong>Parameters</strong> tab.
				<ul>
					<li>In the first editor, dedicated to the parameter &quot;<strong>Radius 
						of the circle placed at the first input</strong>&quot;, 
						enter 50.</li>
					<li>Click <strong>OK</strong>.</li>
				</ul>
			</li>
		</ul>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAMcaUdfEdition</h3>
<p>To launch CAAMcaUdfEdition , you will need to set up the build time environment, 
then compile CAAMcaUdfEdition along with its prerequisites, set up the run time 
environment, and then execute the use case [<a href="#References">4</a>]. To launch 
the use case execute the command:</p>
<p>mkrun -c &quot;<em>CAAMcaUdfEdition Repository Server User Password SecurityCtx 
PLMType PLMExternalID Version</em>&quot;</p>
<p>Where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:Port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer(Since use case modifies the PLM Data)</td>
	</tr>
	<tr>
		<th>PLMType</th>
		<td>A PLM Type of the PLM Representation Reference to be opened</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The <code><strong>PLM_ExternalID</strong></code> of the PLM representation 
		reference containing the data to edit the user feature reference.</td>
	</tr>
	<tr>
		<th>V_version</th>
		<td>The <code><strong>V_version</strong></code> of the same PLM Representtaion 
		Reference</td>
	</tr>
</table>
<p><a name="Note"></a>(*) The Input Model, loaded in the PROVIDER in CAAMcaUdfEdition.3dxml 
file, at the path specified below.</p>
<p><code>InstallRootFolder\CAADoc\CAARepTemplate.edu\InputData\CAAMcaUdfEdition.3dxml\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contains the Input Model with the following attributes:, which 
needs to be imported to the PROVIDER, you are working with.</p>
<ul>
	<li><strong>PLM_ExternalID</strong>: CAAMcaUdfEdition _CAAUdfModelWithInstances(with 
		a prefix)</li>
	<li><strong>Version</strong>: ---</li>
</ul>
<p><strong>Attention</strong>: Its mandatory that you provide a suitable prefix 
to the PLM_ExternalID of the Input Model, while importing a 3D XML file, to ensure 
that data stored in the PROVIDER, is unique.</p>
<p>Please refer to the document [<a href="#References">4</a>] for how to import 
and reimport such a 3D XML file in your PLM repository.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMcaUdfEdition Code</h3>
<p>The CAAMcaUdfEdition use case is made of one main program located in the CAAMcaUdfEdition.m 
module of the CAARepTemplate.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAARepTemplate.edu\CAAMcaUdfEdition.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>In the CAAMmrUtilities.m module of the CAAMechanicalModeler.edu framework, there 
is a global function to retrieve data from the input representation reference, named 
CAAMmrGetGeometry. It is located in <code>CAAMmrGetGeometry.cpp</code>. The header 
of this function, <code>CAAMmrGetGeometry.h</code>, is set in the PublicInterfaces 
directory of the framework.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>This section does not follow exactly the use case code. We have chosen to show, 
from the use case, the main steps of one edition.</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Step1">Retrieving the User Feature</a></li>
	<li><a href="#Step2">Beginning Modifications</a></li>
	<li><a href="#Step3">Modifyingthe Inputs</a></li>
	<li><a href="#Step4">Modifying the Published Parameters</a></li>
	<li><a href="#Step5">Ending Modifications</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>CAAMcaUdfEdition begins creating a session, and opening the CAAMcaUdfEdition 
_CAAUdfModelWithInstances 3D Shape. Next it retrieves the root container of this 
representation reference<code>.</code> This is the usual sequence for loading a 
PLM Component [<a href="#References">5</a>].</p>
<p>Thanks to the <code>GetMechanicalPart</code> method on the root container we 
retrieves the Mechanical Part. This representation reference is handled by the smart 
pointer <code>spSpecObjectCAAUdfModelPart</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Retrieving the User Feature</h3>
<p>This piece of code is almost the same for the first and the second User Feature 
to modify. For the first User Feature, the second argument of <code>CAAMmrGetGeometry
</code>is <code>CAAUserFeatureSample.1</code>, and for the second feature it is
<code>The Loft With Point2 and Point3</code>.</p>
<pre class="code">   CATBaseUnknown * pOnInstance = NULL ;
  <strong>CATIUdfFeatureInstance</strong>* pIUdfFeatInstance = NULL ;
  rc = ::CAAMmrGetGeometry(<strong>spSpecObjectCAAUdfModelPart</strong>,&quot;CAAUserFeatureSample.1&quot;,&amp;pOnInstance);
  if ( FAILED(rc) ) return 1 ;
  rc = pOnInstance-&gt;QueryInterface(IID_CATIUdfFeatureInstance,(void **) &amp;<strong>pIUdfFeatInstance</strong>);
  if ( FAILED(rc) )  return 1;
  ...</pre>
<p>The goal of this section is to find in the 3D shape of the CAAMcaUdfEdition _CAAUdfModelWithInstancesrepresentation 
reference , the feature <code>CAAUserFeatureSample.1</code> (i.e <code>The Loft 
With Point2 and Point3</code>).</p>
<p><code>CAAMmrGetGeometry</code> is a function which returns a pointer, <code>pOnInstance</code>, 
on the object whose name is the second argument. This object is a User Feature which 
implements <em>CATIUdfFeatureInstance</em>. <code>pIUdfFeatInstance</code> is the 
pointer to this interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Beginning Modifications</h3>
<pre class="code"> ...
  rc = pIUdfFeatInstance-&gt;<strong>Init</strong>();
  if ( FAILED(rc) ) return 1;
...</pre>
<p>This step is mandatory for any modification on the instance. Only after calling 
the <code>Init</code> method you can modify the instance.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Modifying the Inputs</h3>
<p>This step is done on the first User Feature instance <code>CAAUserFeatureSample.1</code>. 
This User Feature has two inputs.</p>
<p>Modification of the first input:</p>
<pre class="code"> ...
  CATBaseUnknown * pInput = NULL ;
  rc = ::CAAMmrGetGeometry(spSpecObjectCAAUdfModelPart,&quot;<strong>Point.1</strong>&quot;,&amp;pInput);
  if ( FAILED(rc) )  return 1 ;

  CATPathElement * pPathFirstInput = new CATPathElement(pInput);
  rc = pIUdfFeatInstance-&gt;<strong>SetNewInput</strong>(1,pPathFirstInput);
  if ( FAILED(rc) )  return 1 ;
...</pre>
<p>The feature associated with the first input is <code>Point.3</code>. (See the 
use case Instantiating a User Feature Reference [<a href="#References">3</a>]). 
We change it to the <code>Point.1 feature.</code></p>
<p><code>Point.1</code> is found in the 3D Shpae of the CAAMcaUdfEdition _CAAUdfModelWithInstancesrepresentation 
reference thanks to the <code>CAAMmrGetGeometry</code> function. This function 
returns a pointer to this feature, <code>pInput</code>.</p>
<p>We create a path, <code>pPathFirstInput,</code> with the pointer <code>pInput</code>. 
At last, we use the <code>SetNewInput</code> method on the <code>pIUdfFeatInstance</code> 
to modify the first input of the User Feature. The first argument of this method 
is the number of the input, here it is <strong>1</strong> and the second argument 
is the complete path of the new input, <code>pPathFirstInput.</code></p>
<p><strong>Note</strong>: <code>pIUdfFeatInstance</code> is the <em>CATIUdfFeatureInstance</em> 
interface pointer of the first instance defined in the <a href="#Step1">Retrieving 
the User Feature</a> step.</p>
<p>For the second input:</p>
<pre class="code"> ...
  rc = ::CAAMmrGetGeometry(spSpecObjectCAAUdfModelPart,&quot;<strong>Point.2</strong>&quot;,&amp;pInput);
  if ( FAILED(rc) )  return 1 ;
  
  CATPathElement * pPathSecondInput = new CATPathElement(pInput);
  rc = pIUdfFeatInstance-&gt;<strong>SetNewInput</strong>(<strong>2</strong>,pPathSecondInput);
  if ( FAILED(rc) )  return 1 ;
...</pre>
<p>The feature associated with the second input is <code>Point.1</code>. (See the 
use case Instantiating a User Feature Reference [<a href="#References">3</a>]). 
We change it by the <code>Point.2 feature.</code></p>
<p><code>Point.2</code> is found in the 3D Shpae of the CAAMcaUdfEdition _CAAUdfModelWithInstancesrepresentation 
reference thanks to the <code>CAAMmrGetGeometry</code> function. This function returns 
a pointer on this feature, <code>pInput</code>.</p>
<p>We create a path, <code>pPathSecondInput</code>, with the pointer <code>pInput</code>. 
At last, we use the <code>SetNewInput</code> method on the <code>pIUdfFeatInstance</code> 
to modify the second input of the User Feature. The first argument of this method 
is the number of the input, here it is <strong>2</strong> and the second argument 
is the complete path of the new input, <code>pPathSecondInput</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Modifying the Published Parameters</h3>
<p>This step consists in modifying the value of the published parameters of the 
User Feature instance.</p>
<p>This step has been done on the second User Feature instance <code>The Loft With 
Point2 and Point3</code>.</p>
<pre class="code"> ...
 CATListValCATBaseUnknown_var * pListParam = NULL ;
  rc = pIUdfFeatInstance-&gt;<strong>GetParameters</strong>(pListParam) ;
  if ( FAILED(rc) ) return 1 ;
     
  <strong>CATICkeParm</strong>_var spCkeParm = (*pListParam)[1] ;
  if ( NULL_var != spCkeParm)
  {
     spCkeParm-&gt;Valuate(0.050f);
  }
...</pre>
<p><code>pIUdfFeatInstance</code> is the <em>CATIUdfFeatureInstance</em> interface 
pointer of the instance.The <code>GetParameters</code> method retrieves the list 
of all the published parameters.</p>
<p>In this use case, the value of the first parameter, <code>(*pListParam)[1]</code> 
has been changed by using the valuate method of <em>CATICkeParm</em> interface.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Ending Modifications</h3>
<pre class="code"> ...
  rc = pIUdfFeatInstance-&gt;<strong>Reset</strong>();
  if ( FAILED(rc) ) return 1;
...</pre>
<p>This step is mandatory after any modification on the instance. After the
<code>Reset</code> call you cannot modify the instance any longer.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>The last actions of the CAAMcaUdfEdition use case are the following: saves the 
modified CAAMcaUdfEdition _CAAUdfModelWithInstancesrepresentation reference , closes 
it and deletes the session. It is also described in the Loading a PLM Component 
use case [<a href="#References">5</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated how to edit a User Feature:</p>
<ul>
	<li>Retrieves the User Feature to modify thanks to a local global function. 
		This feature implements the <em>CATIUdfFeatureInstance</em> interface.</li>
	<li>Begins the modifications by calling the <code>Init</code> method.</li>
	<li>Modifies the User Feature, either the inputs or the published parameters.</li>
	<li>End the modifications in calling the Reset method.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAMcaTaPowerCopyAndUserFeatures.htm">An Overview of Power Copies and User Features</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>Creating a User Feature Reference</td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAMcaUcUdfInstantiation.htm">Instantiating a User Feature 
		Reference</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpen.htm">
		Querying, Expanding and Loading a PLM Object</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [Nov 2001]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
