<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>About Units</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>About Units</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article focuses on the subtleties about using units in CATIA.
		</p>
		<ul>
			<li><a href="#EndUser">Units from the End 
				User Standpoint</a></li>
			<li><a href="#Devel">Units from the Developer Standpoint</a>
				<ul>
					<li><a href="#Creation">At Literal Creation (the 
						MKS Units)</a></li>
					<li><a href="#Modifying">When Modifying 
						the Literal Value (the MKS Units)</a></li>
					<li><a href="#Retrieving1">When 
						Retrieving the Literal Value (the MKS Units)</a></li>
					<li><a href="#Displaying">When Displaying 
						a Literal Value (the Setting Units)</a></li>
					<li><a href="#Retrieving2">When Retrieving 
						the Stored Value of the Literal (the Document Units)</a></li>
				</ul>
			</li>
			<li><a href="#References">References</a></li>
			<li><a href="#InShort">In Short</a></li>
		</ul>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="EndUser"></a>Units from the End User Standpoint</h2>
<p>The end user view of units is entirely managed by the Tools-&gt;Options-&gt;Units 
settings.</p>
<p><img alt="Units Property Page" height="302" src="images/KwrUnits.gif" width="383"/></p>
<p>The units selected by the end-user are those displayed in the
<img alt="Knowledge Icon" height="24" src="images/I_FormulaP2.gif" width="24"/> dialog box 
when you create a parameter. For example, if the meter (m) has been selected for 
the unit of the Length type magnitude, the unit displayed in the value field when 
you create a new parameter of Length type will be the meter. Likewise, the parameter 
values in the specification tree as well as the values displayed in the feature 
editors will be displayed in meters.</p>
<p>When you run a CATIA session and modify your settings, you override the default 
setting files. This new settings are stored in your environment as 'profiles' and 
reused when you reopen a CATIA session or execute a batch sample.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Devel"></a>Units from the Developer Standpoint</h2>
<p>There are a number of methods whereby you can modify or access literal values. 
Here is a description of these methods as well as the units they support or return.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Creation"></a>At Literal Creation</h3>
<p>Literals are created by using the <code>CATICkeParmFactory::Create<em>xxx</em></code> 
methods. The value passed as the argument of a creation method should always be 
specified in the MKS Unit System (MKS stands for meters, kilograms, seconds).</p>
<p><strong>Examples</strong>:</p>
<pre class="code">// The initial value of &quot;Radius&quot; is 2.5 meters
CATICkeParm_var spRadius = spFact-&gt;CreateLength (&quot;Radius&quot;,2.5);

// The initial value of &quot;vol&quot; is 2 cubic meters
CATICkeParm_var
  spVolume = spFact-&gt;CreateDimension(
    CATCkeGlobalFunctions::GetParmDictionary()-&gt;FindMagnitude(&quot;VOLUME&quot;),&quot;vol&quot;,2);</pre>
<p>All available magnitudes are referenced in an article [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Modifying"></a></h3>
<h3>When Modifying the Literal Value</h3>
<p>Literal values are modified by using the CATICkeInst::Valuate method. The value 
passed as the argument should always be specified in the MKS unit system.</p>
<p><strong>Examples</strong>:</p>
<pre class="code">// The new value of &quot;Radius&quot; is 4 meters
spRadius-&gt;Valuate(4);</pre>
		<pre>// The new value of &quot;vol&quot; is 50 cubic meters
spVolume-&gt;Valuate(50);</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Retrieving1"></a>When Retrieving a Literal Value</h3>
<p>Literal values are retrieved by using the CATICkeInst::AsReal or AsType methods. 
These methods return the parameter value in MKS units.</p>
<p><strong>Examples</strong>:</p>
<pre class="code">// Display 4 (meters)
cout &lt;&lt; spRadius-&gt;Value()-&gt;AsReal();</pre>
		<pre>// Display 50 (cubic meters)
cout &lt;&lt; spVolume-&gt;Value()-&gt;AsReal();</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Displaying"></a>When Displaying a Literal Value</h3>
<p>Literal values are displayed by using the CATICkeParm::Show method which displays 
a value with the units specified in your CATIA settings (Tools-&gt;Options-&gt;Units).</p>
<p><strong>Examples</strong>:</p>
<pre class="code">// Display 4000mm if the Length default unit specified in the settings is the mm
cout &lt;&lt; spRadius-&gt;Show().CastToCharPtr();</pre>
		<pre>// Display 50 (cubic meters) if the Volume default unit specified in the settings is the m3
cout &lt;&lt; spVolume-&gt;Show().CastToCharPtr();</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Retrieving2"></a>When Retrieving the Literal 
Stored Value</h3>
<p>The stored value of a parameter is retrieved by using the CATIParmAsStored::ValueStored 
method which returns the value in internal units. The internal units are the units 
the geometric modeler uses when performing internal computations. You can't change 
these units. The internal unit for a Length is the mm. The internal unit for an 
angle is the degree.</p>
<p><strong>Examples</strong>:</p>
<pre class="code">// Display 4000mm
CATIParmAsStored_var spStoredRadius = spRadius;
cout &lt;&lt; spStoredRadius-&gt;ValueStored() &lt;&lt; endl; </pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>Use the following methods to manage units and magnitudes.</p>
<table>
	<tr>
		<td><code>CATICkeParmFactory::Createxxx</code></td>
		<td>To create a parameter and set its initial value in MKS units.</td>
	</tr>
	<tr>
		<td><code>CATICkeParm::Valuate</code></td>
		<td>To assign a value in MKS units.</td>
	</tr>
	<tr>
		<td><code>CATICkeInst::AsReal</code>, <code>AsType</code></td>
		<td>To retrieve a value in MKS units.</td>
	</tr>
	<tr>
		<td><code>CATICkeParm::Show</code></td>
		<td>To display a value in the CATIA setting units.</td>
	</tr>
	<tr>
		<td><code>CATICkeParm::ValueStored</code></td>
		<td>To retrieve a value in internal units.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAALifTaMagnitudes.htm">Magnitude Glossary</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
