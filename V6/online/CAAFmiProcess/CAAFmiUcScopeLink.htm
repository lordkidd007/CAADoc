<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Managing a Scope Link</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Managing a Scope Link</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article describes an example of use of Framework DELPPRProcessItf</p>
		<p>This usecase shows how to insert a scope link between a product reference 
		and a process reference; how to navigate along references linked by this 
		relationship and how to remove the scope links created.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmiScopeLink Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAFmiScopeLink Do</a></li>
					<li><a href="#How">How to Launch CAAFmiScopeLink</a></li>
					<li><a href="#Where">Where to Find the CAAFmiScopeLink Code</a>
					</li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>In this use case, you will learn how to use the DELIPPRProcessAuth and DELIPPRProcessNav 
interfaces in order to:</p>
<ul>
	<li>Create a Scope Link from a product reference to a process reference.</li>
	<li>Navigate on Scope relations from Process to Product or from Product to Process.</li>
	<li>Remove the Scope Links that are created</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmiScopeLink Use Case</h2>
<p>CAAFmiScopeLink is a use case of the CAAPPRProcessItf.edu framework that illustrates 
DELPPRProcessItf framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmiScopeLink Do</h3>
<ul>
	<li>Query root product and process references.</li>
	<li>Inserts them into the Bag.</li>
	<li>Creates a Scope link between both.</li>
	<li>Navigates from Process to Product and from Product to Process Occurences 
		following this assignated relationship.</li>
	<li>Removes the Scope links.</li>
</ul>
<table>
	<caption>Fig. 1: Model Structure of this Use Case</caption>
	<tr>
		<td>
		<img alt="Model Structure" src="images/CAAFmiScopeLink_Structure.png" width="600px"/></td>
	</tr>
</table>
<p>The creation fails if the scope crosses an existing scope. If Implement links 
(assignments) preexist, they are impacted by the scope creation as such.</p>
<p><strong>Usecase Objects:</strong> <code>CAAFmiScopeLink</code></p>
<p><strong>Expected Result:</strong> The result is a return code, its value is:</p>
<ul>
	<li>0 on successful completion</li>
	<li>1 if execution failed.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmiScopeLink</h3>
<p>To launch CAAFmiScopeLink, you will need to set up the build time environment, 
then compile CAAFmiScopeLink along with its prerequisites, set up the run time environment, 
and then execute the use case [<a href="#References">1</a>].</p>
<p><strong>Additional instructions:</strong> This use case is using data created 
by another use case [<a href="#References">2</a>], that you should run first. mkrun 
-c &quot;CAAFmiScopeLink Repository Server User Password SecurityCtx Environment&quot;</p>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>Repository</td>
		<td>The name of the repository (or provider)</td>
	</tr>
	<tr>
		<td>Server</td>
		<td>The name and port of the server</td>
	</tr>
	<tr>
		<td>User</td>
		<td>The user identifier</td>
	</tr>
	<tr>
		<td>Password</td>
		<td>The user password</td>
	</tr>
	<tr>
		<td>SecurityCtx</td>
		<td>A string representing the security context (Role.Organization.Project)
		</td>
	</tr>
	<tr>
		<td>Environment</td>
		<td>A PLM Environment containing a modeler customization</td>
	</tr>
</table>
<p>Example: <em>mkrun -c &quot;CAAFmiScopeLink PLM1 ve4al10dsy:8090 uxodtipt Ovb2pcds 
VPMADMIN.ADMIN.DEFAULT VPM&quot;</em></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmiScopeLink Code</h3>
<p>The CAAFmiScopeLink use case is made of a file located in the CAAFmiScopeLink.m 
module of the CAAPPRProcessItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAPPRProcessItf.edu\CAAFmiScopeLink.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>Main files:</p>
<pre class="code">CAAPPRProcessItf.edu/CAAFmiScopeLink.m/src/CAAFmiScopeLink.cpp
CAAPPRProcessItf.edu/ProtectedInterfaces/CAAFmiSessionServices.h
CAAPPRProcessItf.edu/ProtectedInterfaces/CAAFmiFindServices.h
CAAPPRProcessItf.edu/ProtectedInterfaces/CAAFmiReleaseServices.h
CAAPPRProcessItf.edu/ProtectedInterfaces/CAAFmiOccurrenceServices.h
CAAPPRProcessItf.edu/CAAFmiServices.m/src/CAAFmiSessionServices.cpp
CAAPPRProcessItf.edu/CAAFmiServices.m/src/CAAFmiFindServices.cpp
CAAPPRProcessItf.edu/CAAFmiServices.m/src/CAAFmiReleaseServices.cpp
CAAPPRProcessItf.edu/CAAFmiServices.m/src/CAAFmiOccurrenceServices.cpp</pre>
<pre class="code">CAAPLMClientAdapter.edu/PublicInterfaces/CAAAdpCreateCloseSession.h</pre>
<p><em>CAA files :</em></p>
<pre class="code"><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess');return false;">CATPLMIntegrationAccess</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess', 'class', 'CATAdpDictionaryServices');return false;">/PublicInterfaces/CATAdpDictionaryServices.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess');return false;">CATPLMIntegrationAccess</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess', 'class', 'CATAdpQueryServices');return false;">/PublicInterfaces/CATAdpQueryServices.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess');return false;">CATPLMIntegrationAccess</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess', 'class', 'CATAdpOpenSaveServices');return false;">/PublicInterfaces/CATAdpOpenSaveServices.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess');return false;">CATPLMIntegrationAccess</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess', 'class', 'CATAdpIdentificationSet');return false;">/PublicInterfaces/CATAdpIdentificationSet.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess');return false;">CATPLMIntegrationAccess</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess', 'class', 'CATLISTP(CATAdpQueryResult)');return false;">/PublicInterfaces/CATLISTP_CATAdpQueryResult.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess');return false;">CATPLMIdentificationAccess</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIdentificationAccess', 'interface', 'CATIAdpType');return false;">/PublicInterfaces/CATIAdpType.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess');return false;">CATPLMIdentificationAccess</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIdentificationAccess', 'interface', 'CATIAdpPLMIdentificator');return false;">/PublicInterfaces/CATIAdpPLMIdentificator.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess');return false;">CATPLMIntegrationAccess</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMIntegrationAccess', 'interface', 'CATIAdpEnvironment');return false;">/PublicInterfaces/CATIAdpEnvironment.h</a></pre>
<p><em>Documented Framework:</em></p>
<pre class="code">
<a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRProcessItf');return false;">DELPPRProcessItf</a><a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRProcessItf', 'function', 'GetPPRProcessAuth');return false;">/PublicInterfaces/DELPPRProcessAuthAccess.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRProcessItf');return false;">DELPPRProcessItf</a><a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRProcessItf', 'interface', 'DELIPPRProcessAuth');return false;">/PublicInterfaces/DELIPPRProcessAuth.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRProcessItf');return false;">DELPPRProcessItf</a><a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRProcessItf', 'function', 'GetPPRProcessNav');return false;">/PublicInterfaces/DELPPRProcessNavAccess.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRProcessItf');return false;">DELPPRProcessItf</a><a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRProcessItf', 'interface', 'DELIPPRProcessNav');return false;">/PublicInterfaces/DELIPPRProcessNav.h</a></pre>
<pre class="code">
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'interface', 'CATIPLMNavReference');return false;">/PublicInterfaces/CATIPLMNavReference.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'interface', 'CATIPLMNavOccurrence');return false;">/PublicInterfaces/CATIPLMNavOccurrence.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'interface', 'CATIPLMNavInstance');return false;">/PublicInterfaces/CATIPLMNavInstance.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'interface', 'CATIPLMNavEntity');return false;">/PublicInterfaces/CATIPLMNavEntity.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'class', 'CATListPtrCATIPLMNavInstance');return false;">/PublicInterfaces/CATListPtrCATIPLMNavInstance.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'class', 'CATListPtrCATIPLMNavEntity');return false;">/PublicInterfaces/CATListPtrCATIPLMNavEntity.h</a>
</pre>
<pre class="code"><a href="#" onclick="javascript:CAAlink('CPP', 'ObjectModelerBase');return false;">ObjectModelerBase</a><a href="#" onclick="javascript:CAAlink('CPP', 'ObjectModelerBase', 'class', 'CATOmbLifeCycleRootsBag');return false;">/PublicInterfaces/CATOmbLifeCycleRootsBag.h</a></pre>
<pre class="code"><a href="#" onclick="javascript:CAAlink('CPP', 'ProductStructureInterfaces');return false;">ProductStructureInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'ProductStructureInterfaces', 'function', 'CATPrdGetOccurrenceMngt');return false;">/PublicInterfaces/CATPrdGetOccurrenceMngt.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'ProductStructureInterfaces');return false;">ProductStructureInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'ProductStructureInterfaces', 'interface', 'CATIPrdOccurrenceMngt');return false;">/PublicInterfaces/CATIPrdOccurrenceMngt.h</a></pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are five logical steps in CAAFmiScopeLink:</p>
<ol>
	<li><a href="#Step1">Retrieving the DELIPPRProcessAuth and DELIPPRProcessNav 
		Interfaces</a></li>
	<li><a href="#Step2">Querying Root Process and Root Product References in the 
		Database</a></li>
	<li><a href="#Step3">Creating the Process/Product Scope</a></li>
	<li><a href="#Step4">Navigating Scope Links between Product and Process References</a></li>
	<li><a href="#Step5">Removing the Scope Links between Product and Process</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Retrieving the DELIPPRProcessAuth and DELIPPRProcessNav 
Interfaces</h3>
<pre class="code">
DELIPPRProcessAuth_var hPPRProcessAuth;
rc = ::GetPPRProcessAuth(hPPRProcessAuth);
DELIPPRProcessNav_var hPPRProcessNav;
rc = ::GetPPRProcessNav(hPPRProcessNav);</pre>
<p>The DELIPPRProcessAuth interface will later be used to create a scope link between 
Product and Process and the DELIPPRProcessNav interface to navigate along it.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Querying Root Process and Root Product References in the 
Database</h3>
<pre class="code">
CATOmbLifeCycleRootsBag Bag;
CATAdpAttributeSet AttributeSetProcess;
AttributeSetProcess.AddAttribute(&quot;PLM_ExternalID&quot;,&quot;Assemble.1&quot;); 
AttributeSetProcess.AddAttribute(&quot;V_version&quot;,&quot;---&quot;); 
CATIType_var spTypeProcess;
rc = CATCkePLMNavPublicServices::RetrieveKnowledgeType(&quot;DELFmiFunctionReference&quot;,spTypeProcess);

CATIPLMNavReference * piRootProcess = NULL;
int ret = CAAFmiFindServices::FindReference( piEnv, Bag, AttributeSetProcess, spTypeProcess, IID_CATIPLMNavReference, (void **)&amp;piRootProcess);
                                           
CATAdpAttributeSet AttributeSetProduct;
AttributeSetProduct.AddAttribute(&quot;PLM_ExternalID&quot;,&quot;Product.1&quot;); 
AttributeSetProduct.AddAttribute(&quot;V_version&quot;,&quot;---&quot;); 
CATIType_var spTypeProduct;
rc = CATCkePLMNavPublicServices::RetrieveKnowledgeType(&quot;VPMReference&quot;,spTypeProduct);

CATIPLMNavReference * piRootProduct = NULL;
ret = CAAFmiFindServices::FindReference( piEnv, Bag, AttributeSetProduct, spTypeProduct, IID_CATIPLMNavReference,(void **)&amp;piRootProduct);</pre>
<p>The DELIPPRProcessAuth interface will be later used to create relation between 
Product and Process.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating the Process/Product Scope</h3>
<pre class="code">
rc = hPPRProcessAuth-&gt;CreateScope(hNavRefOnRootProcess, hNavRefOnRootProduct);</pre>
<p>The scope is created from two CATIPLMNavReference.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Navigating Scope Links between Product and Process References</h3>
<pre class="code">
CATIPLMNavReference * piNavRefOnProductReference = NULL;
rc = hPPRProcessNav-&gt;GetProductOfTheScope(hNavRefOnRootProcess, (void **)&amp;piNavRefOnProductReference);
CATListPtrCATIPLMNavReference listProcessReferences;
rc = hPPRProcessNav-&gt;GetProcessOfEachScope(hNavRefOnRootProduct, listProcessReferences);</pre>
<p>Using the DELIPPRProcessNav interface, references are navigated in both direction 
along scope links, from the Product to the Process and then in the other direction. 
As DELIPPRProcessNav scope targeted method do suggest, scope may contain several 
Process references for a single Product reference.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Removing the Scope Links between Product and Process</h3>
<pre class="code">
rc = hPPRProcessAuth-&gt;RemoveScope(hNavRefOnRootProcess);</pre>
<p>DELIPPRProcessAuth interface is used to delete the scope link which was created 
between the product and the process reference.</p>
<h2><a name="InShort"></a>In Short</h2>
<p>Each Product referenced may be assigned to several Process references via Scope 
Links and navigating between them is made possible through the DELIPPRProcessNav 
class.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAFmiUcCreateStructure.htm">Creating a Process Structure</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>2</strong> [Jul 2012]</td>
		<td>Updated with Remove Scope</td>
	</tr>
	<tr>
		<td>Version: <strong>1</strong> [Jun 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
