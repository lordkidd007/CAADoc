<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Impact of New Memory Data Access</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Impact of New Memory Data Access</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2>Replacement of Memory Data Access API</h2>
<p>In V5 Representation Modelers, meaning modelers based on the Feature Modeler 
and whose data persist in files like CATPart or CATDrawing, rely on the Feature 
Modeler interfaces to allow manipulation of their objects. In V6, each modeler exposes 
specific interfaces to handle its own objects.&nbsp; Most of the time, the corresponding 
modifications on the modeler API have been performed in a generic way described 
in the next sections. </p>
<p>The feature modeler changes are described in [<a href="#References">1</a>], including 
new protocols that allow to update, delete and cut/copy/paste modeler objects. Those 
protocols are implemented by the V6 modelers. </p>
<p>Generic navigation in persistent streams through CATIContainer is not possible 
anymore, as described in [<a href="#References">2</a>]. Modelers expose their own 
APIs when necessary. </p>
<h2>Generic modification on the API</h2>
<p>For impacted modeler, V5 Frameworks providing APIs are generally replaced by 
framework with a &#39;UseItf&#39; suffix and prefixeded as requested by C++ coding rules. 
For example GSMInterfaces framework has been replaced by the <strong>CAT</strong>GSM<strong>UseItf</strong> 
framework. Frameworks IdentityCards and Imakefile.mk files have to be modified accordingly.</p>
<p>Classes and Interfaces have been moved into those new frameworks and possibly 
renamed using a similar pattern. For example CATIGSMLoft is replaced by CATIGSM<strong>Use</strong>Loft, 
and CATISketchFactory by CATI<strong>SktUse</strong>SketchFactory.</p>
<p>Methods in those classes have been kept. Arguments the type of which is CATISpecObject 
have been replaced by arguments with CATBaseUnknown type or CATIMmiMechanicalFeature 
type. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAACenOsmTaSpecsModelerAdoption.htm">Feature Modeler Changes 
		- Global View</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAACenOmbContainerAdoption.htm">Container Access Changes</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2007]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
