<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Extending a Product as Harness Bundle</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Extending a Product as Harness Bundle</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAAExtendPrdAsHarnessBundle use case. This 
		use case explains how to extend a product as Harness Bundle.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAExtendPrdAsHarnessBundle Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAExtendPrdAsHarnessBundle Do</a></li>
					<li><a href="#How">How to Launch CAAExtendPrdAsHarnessBundle</a></li>
					<li><a href="#Where">Where to Find the CAAExtendPrdAsHarnessBundle 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA EHD Interfaces. Its main intent is to allow you to extend a product as Harness 
Bundle.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAExtendPrdAsHarnessBundle Use Case</h2>
<p>CAAExtendPrdAsHarnessBundle.m is a use case of the CAAElecHarnessItf.edu framework 
that illustrates the CATIA EHD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAExtendPrdAsHarnessBundle Do</h3>
<p>The goal of CAAExtendPrdAsHarnessBundle use case is to show how to extend a product 
as Harness Bundle.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAExtendPrdAsHarnessBundle</h3>
<p>To launch CAAExtendPrdAsHarnessBundle , you will need to set up the build time 
environment, then compile CAAExtendPrdAsHarnessBundle along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot;CAAExtendPrdAsHarnessBundle Repository Server User Password SecutityCtx  Environment PLM_ExternalID Version&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The value of the <code>PLM_ExternalID</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
	<tr>
		<th>Version</th>
		<td>The version attribute value of the reference to be opened.</td>
	</tr>
	
</table>
<p>* The input model is retrieved by importing the <strong>CAAExtendPrdAsHarnessBundle.3dxml</strong> 
file from the <strong>CAAElecHarnessItf.edu</strong> framework. </p>
<p><code>InstallRootFolder\CAADoc\CAAElecHarnessItf.edu\InputData\CAAExtendPrdAsHarnessBundle.3dxml</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contains the root Product Reference with the following attributes:</p>
<ul>
	<li><a><code><strong>PLM_ExternalID</strong></code></a>: <code>RootPRD</code></li>
	<li><a><code><strong>Version</strong></code></a>: ---</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAExtendPrdAsHarnessBundle Code</h3>
<p>The CAAExtendPrdAsHarnessBundle sample is made of a single class named CAAExtendPrdAsHarnessBundle 
located in the CAAExtendPrdAsHarnessBundle.m module of the CAAElecHarnessItf.edu 
framework: <code>InstallRootFolder\CAADoc\CAAElecHarnessItf.edu\CAAExtendPrdAsHarnessBundle.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td>CAAOpenPLMComponent</td>
		<td>Class to Open PLM component in session</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATIPrd3DPartFactory</em></td>
		<td>Class dedicated to the 3DPart object Creation.</td>
	</tr>
	<tr>
		<td><em>CATIEhiReferenceFactory</em></td>
		<td>Interface to create Geometrical Harness and Harness Bundle.</td>
	</tr>
	<tr>
		<td><em>CATIEhiGeoHarness</em></td>
		<td>Interface to manage Geometrical Harness.</td>
	</tr>
	<tr>
		<td><em>CATIEhiHarnessBundle</em></td>
		<td>Interface to manage Harness Bundle.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the Electrical environment and it&#8217;s components 
creation by looking at the code of the Main. There are 11 logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Setting the Connection Parameters</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Settting the Current Environment to "envToUse" 
		from Input</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Retrieving the Environment</a></td>
	</tr>
	<tr>
		<td>6&nbsp;</td>
		<td><a href="#Step6">Opening the "RootPRD" Model (arg[7])</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Extending the Root Product as Geometrical Harness</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Creating a New 3D Part</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Extending the 3D Part as Harness Bundle</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Instantiating the Harness Bundle Inside the Geometrical 
		Harness</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step11">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (9 != argc)
{
cout &lt;&lt; endl;
cout &lt;&lt;&quot;CAAExtendPrdAsHarnessBundle &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Environment&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Environment: A PLM environment containing PLMProductDS (a PRODUCT's custo).&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Version : The version attribute value of the reference to be opened.&quot; &lt;&lt;endl;
cout &lt;&lt; endl;
retCode = 1;
goto EscapeWay;
}

//------------------------------------------------------------------
// - For Setting Environment
//------------------------------------------------------------------ 
envToUse = argv[6];

//------------------------------------------------------------------
// - For Setting Repository
//------------------------------------------------------------------ 
repository = argv[1];

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>Connection parameters initialization.</p>
<pre class="code">...
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Repository&quot;, argv[1]);
if (FAILED(hr))
{
retCode = 2;
goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Server&quot;, argv[2]);
if (FAILED(hr))
{ 
retCode = 3;
goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserID&quot;, argv[3]);
if (FAILED(hr))
{ 
retCode = 4;
goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserPasswd&quot;, argv[4]);
if (FAILED(hr))
{
retCode = 5;
goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;SecurityCtx&quot;, argv[5]);
if (FAILED(hr))
{
retCode = 6;
goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
hr = CATPLMSessionServices::InitPLMSession();
if (FAILED(hr))
{
retCode = 7;
goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Current Environment to "envToUse" 
from Input</h3>
<pre class="code">...
hr = PLMPSISessionHelpers::GetSessionHelpers(pSessionHelpers);
if (SUCCEEDED(hr) &amp;&amp; (NULL != pSessionHelpers))
{
hr = pSessionHelpers-&gt; SetCurrentEnvironment(envToUse);
if ( FAILED(hr) )
{
retCode = 8;
goto EscapeWay;
}
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving the Environment</h3>
<pre class="code">...
hr = CATAdpDictionaryServices::GetEnvironment(repository, envToUse, &amp;pIAdpEnvironment);
if ( FAILED(hr) || ( NULL == pIAdpEnvironment) )
{
retCode = 9;
goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Opening the "RootPRD" Model (arg[7])</h3>
<pre class="code">...
  StrPLMType = "VPMReference";
  
  hr = ::CAAOpenPLMComponent(StrPLMType, rootPrdName, strVersion, IID_CATIPLMProducts,(void **)&amp;pIRootProduct, Bag, blnExpandAllMode);
  if ((FAILED(hr)) || (NULL == pIRootProduct))
  {
    retCode = 10;
    goto EscapeWay;
  }

if ( (FAILED(hr)) || (NULL == pIPLMIdent) )
{
  retCode = 11;
  goto EscapeWay;
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Extending the Root Product as Geometrical Harness</h3>
<pre class="code">...
if ( SUCCEEDED(pIRootProduct-&gt;QueryInterface(IID_CATIEhiReferenceFactory,(void**)&amp;pPLMHarnessFactory)) &amp;&amp; (NULL != pPLMHarnessFactory))
{
  //
  // --- extend as geometrical bundle        
  hr = pPLMHarnessFactory-&gt;ExtendAsGeometricalHarness();
}
if( (FAILED(hr)) || (NULL == pPLMHarnessFactory) )
{
  retCode = 13;
  goto EscapeWay;
}

hr = pIRootProduct-&gt;QueryInterface(IID_CATIEhiGeoHarness,(void**)&amp;pIEhiGeoHarness);
if( (FAILED(hr)) || (NULL == pIEhiGeoHarness) )
{
  retCode = 14;
  goto EscapeWay;  
}

if (NULL != pPLMHarnessFactory)
{
  pPLMHarnessFactory -&gt; Release();
  pPLMHarnessFactory = NULL;
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Creating a New 3D Part</h3>
<pre class="code">...
hr = CATPrdFactory::CreatePrdFactory(IID_CATIPrd3DPartReferenceFactory, (void  **)&amp;pPrd3DPartRefFactory);

if( (FAILED(hr)) || (NULL == pPrd3DPartRefFactory) )
{
  retCode = 15;
  goto EscapeWay;  
}

hr = pPrd3DPartRefFactory-&gt;Create3DPart(pIAdpEnvironment,iCkeParmList1, iCkeParmList3, pPartPrdRef);

if((FAILED(hr)) || (NULL == pPartPrdRef))
{
  retCode = 16;
  goto EscapeWay;  
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Extending the 3D Part as Harness Bundle</h3>
<pre class="code">...
if ( SUCCEEDED(pPartPrdRef-&gt;QueryInterface(IID_CATIEhiReferenceFactory,(void**)&amp;pPLMHarnessFactory)) &amp;&amp; (NULL != pPLMHarnessFactory))
{
  // --- extend as geometrical bundle        
  hr = pPLMHarnessFactory-&gt;ExtendAsHarnessBundle();
}

if( (FAILED(hr)) || (NULL == pPLMHarnessFactory) )
{
  retCode = 17;
  goto EscapeWay;
}

hr = pPartPrdRef-&gt;QueryInterface(IID_CATIEhiHarnessBundle,(void**)&amp;pIEhiHarnessBundle);
if( (FAILED(hr)) || (NULL == pIEhiHarnessBundle) )
{
  retCode = 18;
  goto EscapeWay;  
}

hr = pIEhiHarnessBundle -&gt; QueryInterface(IID_CATIPLMProducts,(void**)&amp;pPLMPrdToAdd);
if( (FAILED(hr)) || (NULL == pPLMPrdToAdd) )
{
  retCode = 19;
  goto EscapeWay;  
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Instantiating the Harness Bundle Inside the Geometrical 
Harness</h3>
<pre class="code">...
hr = pIRootProduct -&gt; AddProduct(pPLMPrdToAdd, pNewPrdInst, IID_CATIPLMProducts );
if( (FAILED(hr)) || (NULL == pNewPrdInst) )
{
  retCode = 20;
  goto EscapeWay;  
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
hr = CATPLMSessionServices::ClosePLMSession();
if (FAILED(hr)) 
{
cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
retCode = 100;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to extend a product as Harness Bundle.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Apr 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
