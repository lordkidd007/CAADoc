<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Create a Scenario referencing a solver and a FEM representation</title>
<style type="text/css">
.style1 {
	font-family: monospace;
	color: #976970;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1"><h1><a name="Top"></a>Create a Scenario referencing a solver and a FEM representation</h1></td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article explains how to Create a Scenario referencing a solver and a FEM representation.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASimSpecifyAndComputeScenario Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASimSpecifyAndComputeScenario Do?</a></li>
				<li><a href="#How">How to Launch CAASimSpecifyAndComputeScenario?</a></li>
				<li><a href="#Where">Where to Find the CAASimSpecifyAndComputeScenario Code?</a> </li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show an end user how to create a Scenario referencing a solver and a FEM representation using the Generic CAA APIs.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASimSpecifyAndComputeScenario Use Case</h2>
<p><code>CAASimSpecifyAndComputeScenario</code> is a use case of the <code>CAASimRepExtend.edu</code> framework
that illustrates the <code>CATSimRepInterfaces</code>, <code>CATSimRepAdp</code>, <code>CATSimRepExecution</code> frameworks capabilities regarding Scenario model.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASimSpecifyAndComputeScenario Do?</h3>
<p><code>CAASimSpecifyAndComputeScenario</code> is a &quot;batch&quot; that illustrates (among others)
how to create a Scenario referencing a solver and a FEM representation.</p>
<p>The input model for this Use Case is shown in [<a href="#Fig1">Fig.1</a>].
It contains a simulation referencing a product with a FEM model owning a 3D mesh part and a structural property.
The use case will open the simulation starting from its ID and retrieve the Scenario representation.  
</p>
<p>Steps mentioned in this use case should not be followed for Multiphysics simulations.</p>
<table>
	<caption align="center"><a name="Fig1"></a>Fig1: The CAASimModels Model</caption>
	<tr>
		<td><img src="images/CAASimulation01.jpg"></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASimSpecifyAndComputeScenario?</h3>
<p>First, you need to import the <code>CAASimModels.3dxml</code> into your 
data base. You can find it under : <code>InstallRootFolder\CAADoc\CAASimRepExtend.edu\CAASimRepExtendEduRsc.m\src\resources</code></p>
<p>Then to launch <code>CAASimSpecifyAndComputeScenario</code>, you will need to set up the build time environment 
and compile the <code>CAASimSpecifyAndComputeScenario.m</code> module along with its 
prerequisites [<a href="#References">1</a>]. Once it's built, set up the run time
environment and execute the following command: </p>
<p><code>mkrun -c &quot;<i><a>CAASimSpecifyAndComputeScenario</a>
<a>Repository</a> <a>Server</a> <a>User</a> <a>Password</a> <a>SecurityCtx</a> <a>Env</a> <a>PLM_External_Root</a> <a>V_version_Root</a></i>&quot;</p>

<p>
where:</p>
<table  id="table1" >
	<tr>		
		<th><b><i>Repository</i></b></th>
		<td><script type="text/javascript">insertRepository();</script></td>
	</tr>
	<tr>
		<th ><b><i>Server</i></b></th>
		<td >The server as host::<i> name</i>:<i>port_number/RootURI</i></td>
	</tr>
	<tr>
		<th><b><i>User</i></b></th>
		<td>The user name</td>
	</tr>
	<tr>
		<th><b><i>Password</i></b></th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th><b><i>SecurityCtx</i></b></th>
		<td>a string representing the security context ( Role. Organization. Project&nbsp;);<o:p>
            Choose Role as Designer ( as the use case create the PLM Data)</o:p></td>
	</tr>
	<tr>
		<th><b>Environment</b></th>
		<td>A PLM environment</td>
	</tr>
	<tr>
		<th><b>PLM_External_Root</b></th>
		<td>the PLM Id of the Product to open</td>
	</tr>
	<tr>
		<th><b>V_version_Root</b></th>
		<td>the PLM version of the Product</td>
	</tr>
</table>
	
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASimSpecifyAndComputeScenario Code</h3>
<p>The CAASimSpecifyAndComputeScenario use case is made of a single 
file located in the <code>CAASimSpecifyAndComputeScenario.m</code> 
module of the <code>CAASimRepExtend.edu</code> 
framework:<br>
<code>InstallRootFolder\CAADoc\CAASimRepExtend.edu\CAASimSpecifyAndComputeScenario.m\</code></p>
<p>Where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The CAASimSpecifyAndComputeScenario use case can be divided into several steps. Among them, concerning the scenario feature creation we can notice the 3 following steps :</p>
<ol>
	<li><a href="#RetrieveFEMRep">Retrieve the Finite element model</a></li>
	<li><a href="#CreateSolverStartup">Create a CAA solver startup in the client catalog</a></li>
	<li><a href="#CreateScenario">Create a scenario referencing the FEM rep and the CAA solver</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="RetrieveFEMRep"></a>Retrieve the Finite element model</h3>
<p>To retrieve the FEM representation, we will start from the simulation opened in previous use case.
Open the simulation object is a use case which can be accessed with the link below.</p>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->

<td><a href="../CAASimScenarioDoc/CAASimOpenSimulation.htm"><p>Open an existing simulation object</p></a></td>
<script type="text/javascript">    insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<p>To get the Finite Element Model representation root, we first need to retrieve the simulated product on opened simulation.</p>
<pre class="code">...
CATISimulationPLMManager * piSimObj = NULL ;
<span class="comment">//Open the simulation</span>
...
<span class="comment">//Get the simulated product</span>
CATIPLMComponent * piSimulatedProduct = NULL;
HRESULT hr = piSimObj->RetrieveSimulatedComponent(piSimulatedProduct);

CATIPLMRepInstances_var spRepInstance(piSimulatedProduct);

<span class="comment">// Iterate on each rep instances</span>
<span class="comment">// We stop on first FEM Rep found</span>

CATBaseUnknown * piFEMRepRoot = NULL;
CATIPrdIterator * pIter = NULL;
piRepInstances -&gt; Iterator ( pIter );
if ( pIter )
{
	CATBaseUnknown_var nextRep;
	while ( SUCCEEDED ( pIter -&gt; Next ( nextRep ) ) )
	{
		if ( CATFmtRepManagerServices::IsAFEMRep( nextRep ) )
		{		   
		   piFEMRepRoot = (CATIFmtRepManager *) CATFmtRepManagerServices::GetRepManagerFromRepresentation(nextRep, IID_CATIFmtRepManager);
 		   break;
		}
	}
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="CreateSolverStartup"></a>Create a CAA solver startup in the client catalog</h3>
<p>Before creating he scenario we need to know which solver will be referenced by this scenario, which means which behavior will have this scenario.
That's why we need to create a new startup (CAASimSolver) which derives from CATSimulationSolver and owns its own attributes through the usual process thanks to osm tools [<a href="#References">2</a>].</p>
<pre class="code">...
document `CAASimRepFeaturesCatalog.CATfct` {
	container `RootCont` #root{
		feature `CAASimSolver`#2 `CATSimulationSolver`#55@`CATSimRepModeler.feat` #startup {
		}

remark : in our case no particular attribute is added to the derived type CATSimulationSolver.
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="CreateScenario"></a>Create a scenario referencing the FEM rep and the CAA solver</h3>
<p>We can now create a scenario which will reference a solver from the above defined type.</p>
<pre class="code">...
<span class="comment">//Before creating the scenario, we need to create an object in context to make point previous retrieved FEM root by the scenario.</span>
...
CATBaseUnknown * piFEMRepRoot = ...;<span class="comment">//retrieved above with the Finite Element Model...</span>
CATISimScenarioRepManager_var spScenarioManager;<span class="comment">//</span><td><a href="../CAASimScenarioDoc/CAASimOpenSimulation.htm">Retrieved in this use case</a></td><script type="text/javascript">    insertLinkToTop();</script>
...

CATLISTV(CATBaseUnknown_var) BehaviorLinkslist;
CATISimObjectInContext_var spSimOIC = CATSimObjectInContextFactory::BuildFromObject(piFEMRepRoot);
if(spSimOIC != NULL_var)  spSimOIC-&gt;Release();
BehaviorLinkslist.Append(spSimOIC);

<span class="comment">//Create the scenario pointing the FEM rep</span>
CATUnicodeString SolverLateType("CAASimSolver");
CATISimScenarioSpec_var spScenario;  

HRESULT hr = spScenarioManager->CreateScenario(spScenario, BehaviorLinkslist, SolverLateType);
...</pre>
<script type="text/javascript">    insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The <code>CAASimSpecifyAndComputeScenario</code> use case explains (among others) how to Create a Scenario referencing a solver and a FEM representation,
using the Generic CAA APIs exposed in the <code>CATSimRepInterfaces</code>, <code>CATSimRepAdp</code>, <code>CATSimRepExecution</code> frameworks.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="../CAAFmFeatModExt/CAAOsmUcCatalogSU.htm">
		Defining StartUp Catalog</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Sep 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
