<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Create excitation and probe in the scenario container</title>
<style type="text/css">
.style1 {
	font-family: monospace;
	color: #976970;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1"><h1><a name="Top"></a>Create excitation and probe in the scenario container</h1></td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article explains how to create some excitation and probe in the scenario container .</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASimSpecifyAndComputeScenario Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASimSpecifyAndComputeScenario Do?</a></li>
				<li><a href="#How">How to Launch CAASimSpecifyAndComputeScenario?</a></li>
				<li><a href="#Where">Where to Find the CAASimSpecifyAndComputeScenario Code?</a> </li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show an end user how to create some excitation and probe in the scenario container using the Generic CAA APIs.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASimSpecifyAndComputeScenario Use Case</h2>
<p><code>CAASimSpecifyAndComputeScenario</code> is a use case of the <code>CAASimRepExtend.edu</code> framework
that illustrates the <code>CATSimRepInterfaces</code>, <code>CATSimRepAdp</code>, <code>CATSimRepExecution</code> and <code>FeatureModelerExt</code> framework capabilities regarding Scenario model.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASimSpecifyAndComputeScenario Do?</h3>
<p><code>CAASimSpecifyAndComputeScenario</code> is a &quot;batch&quot; that illustrates (among others)
how to create some excitation and probe in the scenario container.</p>
<p>The input model for this Use Case is shown in [<a href="#Fig1">Fig.1</a>].
It contains a simulation referencing a product with a FEM model owning a 3D mesh part and a structural property.
The use case will create an excitation and a probe and make reference them by a scenario in the Scenario representation.  
</p>
<p>Steps mentioned in this use case should not be followed for Multiphysics simulations.</p>
<table>
	<caption align="center"><a name="Fig1"></a>Fig1: The CAASimModels Model</caption>
	<tr>
		<td><img src="images/CAASimulation01.jpg"></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASimSpecifyAndComputeScenario?</h3>
<p>First, you need to import the <code>CAASimModels.3dxml</code> into your 
data base. You can find it under : <code>InstallRootFolder\CAADoc\CAASimRepExtend.edu\CAASimRepExtendEduRsc.m\src\resources</code></p>
<p>Then to launch <code>CAASimSpecifyAndComputeScenario</code>, you will need to set up the build time environment 
and compile the <code>CAASimSpecifyAndComputeScenario.m</code> module along with its 
prerequisites [<a href="#References">1</a>]. Once it's built, set up the run time
environment and execute the following command: </p>
<p><code>mkrun -c &quot;<i><a>CAASimSpecifyAndComputeScenario</a>
<a>Repository</a> <a>Server</a> <a>User</a> <a>Password</a> <a>SecurityCtx</a> <a>Env</a> <a>PLM_External_Root</a> <a>V_version_Root</a></i>&quot;</p>

<p>
where:</p>
<table  id="table1" >
	<tr>		
		<th><b><i>Repository</i></b></th>
		<td><script type="text/javascript">insertRepository();</script></td>
	</tr>
	<tr>
		<th ><b><i>Server</i></b></th>
		<td >The server as host::<i> name</i>:<i>port_number/RootURI</i></td>
	</tr>
	<tr>
		<th><b><i>User</i></b></th>
		<td>The user name</td>
	</tr>
	<tr>
		<th><b><i>Password</i></b></th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th><b><i>SecurityCtx</i></b></th>
		<td>a string representing the security context ( Role. Organization. Project&nbsp;);<o:p>
            Choose Role as Designer ( as the use case create the PLM Data)</o:p></td>
	</tr>
	<tr>
		<th><b>Environment</b></th>
		<td>A PLM environment</td>
	</tr>
	<tr>
		<th><b>PLM_External_Root</b></th>
		<td>the PLM Id of the Product to open</td>
	</tr>
	<tr>
		<th><b>V_version_Root</b></th>
		<td>the PLM version of the Product</td>
	</tr>
</table>
	
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASimSpecifyAndComputeScenario Code</h3>
<p>The CAASimSpecifyAndComputeScenario use case is made of a single 
file located in the <code>CAASimSpecifyAndComputeScenario.m</code> 
module of the <code>CAASimRepExtend.edu</code> 
framework:<br>
<code>InstallRootFolder\CAADoc\CAASimRepExtend.edu\CAASimSpecifyAndComputeScenario.m\</code></p>
<p>Where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The CAASimSpecifyAndComputeScenario use case can be divided into 3 main steps concerning the excitation/probe creation:</p>
<ol>
	<li><a href="#CreateStartUps">Create the excitation and probe startup in the Client catalog</a></li>
	<li><a href="#InstanciateExcitation">Instanciate the excitation and probe in the scenario container</a></li>
	<li><a href="#AddExcitationToScenario">Add the new excitation and probe to the scenario</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="CreateStartUps"></a>Create the excitation and probe startup in the Client catalog</h3>
<p>Before creating the excitation and probe, we need to create 2 new startups and their own attributes through the usual process thanks to osm tools [<a href="#References">2</a>].</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<pre class="code">document `CAASimRepFeaturesCatalog.CATfct` {
	container `RootCont` #root{
		feature `CAASimExcitation`#4 `CATSpecObject`#10@`ObjectSpecsModeler.feat` #startup {
		}
		feature `CAASimProbe`#5 `CATSpecObject`#10@`ObjectSpecsModeler.feat` #startup {
		}
	}
}</pre>
<p>Excitation and probe don't need to derive from any simulation feature but they can directly derive from the base feature &quot;CATSpecObject&quot;. 
But they respectively need to implement <strong>CATISimExcitation</strong> and <strong>CATISimProbe</strong> interface</p>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="InstanciateExcitation"></a>Instanciate the excitation and probe in the scenario container</h3>
<p>We are now able to instanciate excitation and probe whose the startup have been defined above.</p>
<p>To create some new excitation or probe, we need to : </p>


<a href="../CAASimScenarioDoc/CAASimOpenSimulation.htm">
<p>Open an existing simulation object</p></a>
<script type="text/javascript">    insertLinkToTop();</script>

<pre class="code">...

<span class="comment">//Create Excitation/Probe using CAA APIs</span>
CATUnicodeString ProbeLateType("CAASimProbe");
CATUnicodeString ExcitationLateType("CAASimExcitation");

CATFmCredentials SpecCredential;
CATUnicodeString CatalogName = "CAASimRepFeaturesCatalog";<span class="comment">// Name of the CATFct file that describes the CAA Excitation/Probe</span>
CATUnicodeString ClientId = "CAASimRepFeaturesClientId";<span class="comment">// ID used to generate the CATfct file</span>
HRESULT HR = SpecCredential.RegisterAsApplicationBasedOn(CATFmFeatureModelerID, ClientId);
HR = SpecCredential.RegisterAsCatalogOwner(CatalogName, ClientId);

<span class="comment">//Get the scenario feature container</span>
CATBaseUnknown_var spContainerBU = CATSimFeatureModelServices::GetContainerFrom(spScenario);
CATFmContainerFacade SpecContainerFacade(SpecCredential, spContainerBU); 

CATFmStartUpFacade ProbeStartUpFacade(SpecCredential,ProbeLateType);
CATFmStartUpFacade ExcitationStartUpFacade(SpecCredential,ExcitationLateType);

<span class="comment">//Instantiate the Feature from their StartUp</span>
CATFmFeatureFacade InstanceProbeFromStartUp(SpecCredential);
CATFmFeatureFacade InstanceExcitationFromStartUp(SpecCredential);
HR = ProbeStartUpFacade.InstantiateIn(SpecContainerFacade, InstanceProbeFromStartUp);
HR = ExcitationStartUpFacade.InstantiateIn(SpecContainerFacade, InstanceExcitationFromStartUp);

<span class="comment">//Get the excitation and probe features newly created</span>
CATBaseUnknown_var spProbeBU = InstanceProbeFromStartUp.GetFeature();
CATBaseUnknown_var spExcitationBU = InstanceExcitationFromStartUp.GetFeature();
<span class="comment">//Get the excitation and probe interfaces</span>
CATISimProbe_var spProbe(spProbeBU);
CATISimExcitation_var spExcitation(spExcitationBU);

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="AddExcitationToScenario"></a>Add the new excitation and probe to the scenario.</h3>
<p>The excitation and probe are in the feature container but are not aggregated to any feature. 
We need to aggregate them to the scenario and made them referenced by the scenario for the future calculations.</p>
<pre class="code">...
CATISimScenarioSpec_var spScenario;
<td><a href="../CAASimScenarioDoc/CAASimCreateScenario.htm">
Create a scenario</a></td>
<script type="text/javascript">    insertLinkToTop();</script>
...
<span class="comment">//Add (and aggregate the excitation to the created scenario)</span>
CATLISTV(CATISimProbe_var) ProbeList;
ProbeList.Append(spProbe);
HRESULT HR = spScenario->AddProbes(ProbeList);

CATLISTV(CATISimExcitation_var) ExcitationList;
ExcitationList.Append(spExcitation);
HR = spScenario->AddExcitations(ExcitationList);
...</pre>   
<script type="text/javascript">    insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The <code>CAASimSpecifyAndComputeScenario</code> use case explains (among others) how to create some excitation and probe in the scenario container using the Generic CAA APIs exposed in 
the <code>CATSimRepInterfaces</code>, <code>CATSimRepAdp</code>, <code>CATSimRepExecution</code> and <code>FeatureModelerExt</code>framework.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="../CAAFmFeatModExt/CAAOsmUcCatalogSU.htm">
		Defining StartUp Catalog</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Sep 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
