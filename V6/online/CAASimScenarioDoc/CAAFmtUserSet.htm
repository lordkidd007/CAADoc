<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>User Sets for organization</title>
<style type="text/css">
.style1 {
	font-family: monospace;
	color: #976970;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1"><h1><a name="Top"></a>User Sets for organization</h1></td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article explains how to create and manage user sets.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#Explanation">Explanation about User Sets and User Set Managers</a></li>
			<li><a href="#UseCase">The CAAFmtUserSet Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAFmtUserSet Do?</a></li>
				<li><a href="#How">How to Launch CAAFmtUserSet?</a></li>
				<li><a href="#Where">Where to Find the CAAFmtUserSet Code?</a> </li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show an end user how to create and manage User Sets using the <code>CATISimUserSetManager</code> and <code>CATISimUserSet</code> interfaces.</p>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Explanation"></a>Explanation about User Sets and User Set Managers</h2>
<p>We are introducing a new object: The user Set. A user Set is a container that is placed inside a spec tree feature. Objects under that feature can then be moved inside this Set, for easier organization. User Sets can be created up to any depth.</p>
<p>Note that the user Sets are only a visual tool for the spec tree, used to modify the return value of <code>CATINavigateObject::GetChildren</code>. All objects remain owned by the original feature. Destroying a user set does not destroy any aggregated objects.</p>
<p>A user Set can be interfaced with two interfaces: <code>CATISimUserSetManager</code> and <code>CATISimUserSet</code></p>
<ul>
	<li>CATISimUserSetManager is used to access methods on anything that can <i>hold</i> a user Set. This includes the root feature, as well as the user Sets themselves.</li>
	<li>CATISimUserSet is to access methods on the Sets to move objects into the Sets.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show how to create, manage and use user folders.</p>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmtUserSet Use Case</h2>
<p><code>CAAFmtUserSet</code> is a use case of the <code>CAAFmtInterfaces.edu</code> framework
that illustrates the usage of the <code>CATISimUserSetManager</code> and <code>CATISimUserSet </code>interfaces.</p>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmtUserSet Do?</h3>
<p><code>CAAFmtUserSet</code> is a &quot;batch&quot; that illustrates (among others) how to create a user sets, how to move objects inside them, and finaly, how to move/destroy user sets.</p>
<p>The input model for this Use Case is shown in [<a href="#Fig1">Fig.1</a>]. It contains a simulation referencing a product with a FEM model, a group manager and several groups.</p>
<table>
	<caption align="center"><a name="Fig1"></a>Fig1: The CAASimModels Model</caption>
	<tr>
		<td><img src="images/CAASimulation02.jpg"></td>
	</tr>
</table>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmtUserSet?</h3>
<p>First, you need to import the <code>CAAModelTST01.3dxml</code> into your data base. You can find it under: <code>InstallRootFolder\CAADoc\CAASimRepExtend.edu\CAASimRepExtendEduRsc.m\src\resources</code></p>
<p>Then to launch <code>CAAFmtUserSet</code>, you will need to set up the build time environment and compile the <code>CAAFmtUserSet.m</code> module along with its prerequisites [<a href="#References">1</a>]. Once it's built, set up the run time environment and execute the following command: </p>
<p><code>mkrun -c &quot;<i><a>CAAFmtUserSet</a>
<a>Repository</a> <a>Server</a> <a>User</a> <a>Password</a> <a>SecurityCtx</a> <a>PLM_External_Root</a> <a>V_version_Root</a></i>&quot;</code></p>
<p>where:</p>
<table  id="table1" border="1">
	<tr>
		<th>Repository</th>
		<td><script type="text/javascript">insertRepository();</script></td>
	</tr>
	<tr>
		<th >Server</th>
		<td >The server as host::<i> name</i>:<i>port_number/RootURI</i></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>a string representing the security context ( Role. Organization. Project&nbsp;);<o:p>
            Choose Role as Designer ( as the use case create the PLM Data)</o:p></td>
	</tr>
	<tr>
		<th>PLM Type</th>
		<td>The PLM Type for the product reference</td>
	</tr>
	<tr>
		<th>PLM_External_Root</th>
		<td>the PLM Id of the Product to open</td>
	</tr>
	<tr>
		<th>V_version_Root</th>
		<td>the PLM version of the Product</td>
	</tr>
</table>
	
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmtUserSet Code</h3>
<p>The CAAFmtUserSet use case is made of a single file located in the <code>CAAFmtUserSet.m</code> module of the 
<code>CAAFmtInterfaces.edu</code> framework:<br>
<code>InstallRootFolder\CAADoc\CAAFmtInterfaces.edu\CAAFmtUserSet.m\</code></p>
<p>Where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The CAAFmtUserSet use case can be divided into 4 main steps concerning User Set Manipulation:</p>
<ol>
	<li><a href="#CreateUser Sets">Create a few user sets.</a></li>
	<li><a href="#MoveIntoUser Sets">Move some features (groups) into the user sets.</a></li>
	<li><a href="#AdvancedManipulation">Delete a user set, move a user set.</a></li>
	<li><a href="#IllegalUsage">Attempt an illegal move.</a></li>
</ol>
<p>After each step, the model is introspected and verified.</p>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="CreateUser Sets"></a>Create a few user sets.</h3>
<p>The first step of the Use Case is to create a few User Sets. This is doen using the <code>CATISimUserSetManager</code> interface, and the method <code>AddUserSet</code>:</p>
<pre class="code">CATISimUserSetManager_var spUserSetManager = spGroupManager;
CATBaseUnknown* pUserSet1 = NULL;
spUserSetManager-&gt;AddUserSet(&quot;UserSet1&quot;, pUserSet1);
</pre>

<p>We also create a User Set inside UserSet1. To do this, we simply query the user set as CATISimUserSetManager:</p>
<pre class="code">CATISimUserSetManager_var spUserSet1AsManager = pUserSet1;
CATBaseUnknown* pUserSet11 = NULL;
spFolder1AsManager-&gt;AddUserSet(&quot;UserSet11&quot;, pUserSet11);
</pre>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="MoveIntoUser Sets"></a>Move some features (groups) into the user sets.</h3>
<p>The second step is to move features into the User Sets. To do this, we must query the <code>CATISimUserSet</code> interface, and use the method <code>AddContent</code></p>
<pre class="code">  //Create Some User Sets:
  // GroupManager
  //  +US1
  //    +US11
  //  +US2
  CATISimUserSet_var spUserSet1;
  {
    CATBaseUnknown* pbu = NULL;
    HRESULT hr = spUserSetManagerGroup-&gt;AddUserSet(&quot;UserSet1&quot;, pbu);
    spUserSet1 = pbu;
    if(pbu) {pbu-&gt;Release(); pbu=NULL;}
    if(FAILED(hr) || !spUserSet1)
      {cout &lt;&lt; &quot;  Failed to Create User Set 1. Line: &quot; &lt;&lt; __LINE__ &lt;&lt; endl; return 1;}
  }

  CATISimUserSet_var spUserSet11;
  {
    CATBaseUnknown* pbu = NULL;
    HRESULT hr = spUserSet1-&gt;AddUserSet(&quot;UserSet11&quot;, pbu);
    spUserSet11 = pbu;
    if(pbu) {pbu-&gt;Release(); pbu=NULL;}
    if(FAILED(hr) || !spUserSet11)
      {cout &lt;&lt; &quot;  Failed to Create User Set 11. Line: &quot; &lt;&lt; __LINE__ &lt;&lt; endl; return 1;}
  }

  CATISimUserSet_var spUserSet2;
  {
    CATBaseUnknown* pbu = NULL;
    HRESULT hr = spUserSetManagerGroup-&gt;AddUserSet(&quot;UserSet2&quot;, pbu);
    spUserSet2 = pbu;
    if(pbu) {pbu-&gt;Release(); pbu=NULL;}
    if(FAILED(hr) || !spUserSet2)
      {cout &lt;&lt; &quot;  Failed to Create User Set 2. Line: &quot; &lt;&lt; __LINE__ &lt;&lt; endl; return 1;}
  }
</pre>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="AdvancedManipulation"></a>Delete a user set, move a user set.</h3>
<p>The third step does some mixed operations, to show how to destroy a User Set, and how to move a User Set.</p>
<pre class="code">//Remove US11
hr = spUserSet1-&gt;RemoveUserSet(spUserSet11);
if(FAILED(hr)) {cout &lt;&lt; &quot;  Failed to Remove US11 from US1. Line: &quot; &lt;&lt; __LINE__ &lt;&lt; endl; return 1;}
spUserSet11 = NULL_var;

//Move US2
hr = spUserSet1-&gt;InsertUserSet(spUserSet2);
if(FAILED(hr)) {cout &lt;&lt; &quot;  Failed to Move US2 into US1. Line: &quot; &lt;&lt; __LINE__ &lt;&lt; endl; return 1;}
</pre>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="IllegalUsage"></a>Attempt an illegal move.</h3>
<p>Features and User Sets can only be moved into User Sets that are aggregated by the same owner, you can't move anything anywhere. Furthermore, it is not possible to move a User Set A into another UserSet B, if A already contains User Set B: </p>
<pre class="code">  hr = spUserSet2-&gt;InsertUserSet(spUserSet1);
  if(SUCCEEDED(hr) ){cout &lt;&lt; &quot;  Succeeded with bad input. Line: &quot; &lt;&lt; __LINE__ &lt;&lt; endl; return 1;}
</pre>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The <code>CAAFmtUserSet</code> use case explains (among others) how to create and manage User Sets using the <code>CATISimUserSetManager</code> and <code>CATISimUserSet</code> interfaces.</p>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="../CAAFmFeatModExt/CAAOsmUcCatalogSU.htm">
		Defining StartUp Catalog</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [May 2012]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
