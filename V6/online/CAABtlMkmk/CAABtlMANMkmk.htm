<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>mkmk</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>mkmk</h1>
		</td>
	</tr>
	<tr>
		<td class="quick">Quick Reference</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The <strong>mkmk</strong> command builds sources written in C, C++, Express, 
		Fortran, and Java.</p>
		<ul>
			<li><a href="#Synopsis">Synopsis</a></li>
			<li><a href="#Usage">Usage</a></li>
			<li><a href="#Options">Options</a></li>
			<li><a href="#Examples">Examples</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Synopsis"></a>Synopsis</h2>
<p><strong>mkmk</strong> [<strong>-W</strong> WSPath] [<strong>-a</strong>|<strong>-lFW</strong> 
FWlist|<strong>-lMod</strong> MODlist|FW1 [FW1]|MOD1 [MOD2]] [<strong>-g</strong>[e]|<strong>-w</strong>|<strong>-dev</strong>] 
[<strong>-u</strong>] [<strong>-idcard</strong>|<strong>-noci</strong>] [<strong>-nobuild</strong>] 
[<strong>-mkdataonly</strong>|<strong>-nomk</strong>] [<strong>-xrefdb</strong>] 
[<strong>-javadoc</strong>] [<strong>-zip</strong>] [<strong>-bsc</strong>] [<strong>-jobs 
#</strong>] [<strong>-showcmd</strong>] [<strong>-keeptemp</strong>] [<strong>-h</strong> | <strong>-help</strong> 
| <strong>-?</strong>] [<strong>-v</strong>] </p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Usage"></a>Usage</h2>
<p>The <strong>mkmk</strong> command builds sources written in C, C++, Express, 
Fortran, and Java. mkmk uses the workspace path concatenation set by a previous 
mkGetPreq [<a href="#References">1</a>] run.</p>
<p>Run without any option, mkmk by default executes the four following phases:</p>
<ul>
	<li>&quot;ID card compilation&quot;: processes the [container] framework ID card</li>
	<li>&quot;header list generation&quot;: produces the list of headers made public by the 
	[container] framework. Corresponding file is <em>&lt;fw_name&gt;/various/$MkmkOS_VAR/Public&lt;fw_name&gt;.lh</em></li>
	<li>&quot;Imakefile.mk checking&quot;: the Imakefile.mk&nbsp; are checked and update module 
	if necessary. For updating, see -u, -g or -dev options.</li>
	<li>The build itself. When processing a shared library, mkmk splits the phase 
	in two, in order to successfully build a series of them:
	<ul>
		<li>Forced standalone generation of the (shared) library, even when symbols 
		are missing.</li>
		<li>Generation of the shared library (not OK if symbols are missing).</li>
	</ul>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Options"></a>Options</h2>
<p>mkCopyFw accepts the following options:</p>
<table class="fill">
	<tr>
		<th>Option</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code>-a</code></td>
		<td>If run in a workspace folder, build all the modules of all the frameworks 
		of the current workspace, or if run in a framework folder, build all the 
		modules of this framework.</td>
	</tr>
	<tr>
		<td><code>-bsc</code></td>
		<td>Create browser information files .bsc while compiling/linking.</td>
	</tr>
	<tr>
		<td><code>-dev</code></td>
		<td>Disable the optimization mode while compiling.</td>
	</tr>
	<tr>
		<td><code>-g</code></td>
		<td>Activate the debug mode while compiling.</td>
	</tr>
	<tr>
		<td><code>-ge</code></td>
		<td>Activate the editor and continue with the debug mode while compiling.</td>
	</tr>
	<tr>
		<td><code>-h|-help|-?</code></td>
		<td>Display the command help.</td>
	</tr>
	<tr>
		<td><code>-idcard</code></td>
		<td>Intend to recompile only the (embedding) framework identity card. No 
		modules are built. This is not the default.</td>
	</tr>
	<tr>
		<td><code>-javadoc</code></td>
		<td>Generate Java documentation.</td>
	</tr>
	<tr>
		<td><code>-jobs #</code></td>
		<td>Multiprocessing mode. # is the maximum number of parallel tasks mkmk 
		forks. Useful to limit the number of tasks when the machine is heavily used. 
		Default is 5.</td>
	</tr>
	<tr>
		<td><code>-keeptemp</code></td>
		<td>Keep the temporary files created by mkmk. When this option is not used, these files are deleted
		when mkmk returns. These files are located in the LocalGenerated folders.</td>
	</tr>
	<tr>
		<td><code>-lFW FWlist</code></td>
		<td>Build the modules of the frameworks the names of which are listed in 
		the file located at the path FWlist.</td>
	</tr>
	<tr>
		<td><code>-lMod MODlist</code></td>
		<td>Build the current framework modules the names of which are listed in 
		the file located at the path MODlist.</td>
	</tr>
	<tr>
		<td><code>-mkdataonly</code></td>
		<td>Regenerate the build time data only.</td>
	</tr>
	<tr>
		<td><code>-nobuild</code></td>
		<td>Do not start the module build. Useful when coupled with option -u. mkmk 
		then only regenerates the build time data.</td>
	</tr>
	<tr>
		<td><code>-noci</code></td>
		<td>Do not intend to recompile the (embedding) framework identity card. 
		This is not the default..</td>
	</tr>
	<tr>
		<td><code>-nomk</code></td>
		<td>Deactivate the build time data update.</td>
	</tr>
	<tr>
		<td><code>-showcmd</code></td>
		<td>Print command lines before executing them.</td>
	</tr>
	<tr>
		<td><code>-u</code></td>
		<td>Force the build time data update.</td>
	</tr>
	<tr>
		<td><code>-v</code></td>
		<td>Verbose mode.</td>
	</tr>
	<tr>
		<td><code>-w</code></td>
		<td>Activate warning messages while compiling.</td>
	</tr>
	<tr>
		<td><code>-W WSPath</code></td>
		<td>Path of the workspace to process. Default is the current folder.</td>
	</tr>
	<tr>
		<td><code>-xrefdb</code></td>
		<td>Generate a framework dependency database. <strong>Internal</strong>.</td>
	</tr>
	<tr>
		<td><code>-zip</code></td>
		<td>Create java source archive files .zip while compiling.</td>
	</tr>
	<tr>
		<td><code>FW1 [FW2]...</code></td>
		<td>Build the modules of FW1, FW2, etc.</td>
	</tr>
	<tr>
		<td><code>MOD1 [MOD2]...</code></td>
		<td>Build MOD1, MOD2, etc., of the current framework.</td>
	</tr>
</table>
<p>The table below gives you a view on what could be used:</p>
<table class="fill">
	<colgroup valign="top" span="1">
	</colgroup>
	<colgroup valign="top" span="2">
	</colgroup>
	<colgroup valign="top" span="3">
	</colgroup>
	<colgroup valign="top" span="4">
	</colgroup>
	<tr>
		<th></th>
		<th colspan="3">Current Working Folder</th>
	</tr>
	<tr>
		<th>Parameters on the command line</th>
		<th>Workspace Root Folder (WS)</th>
		<th>Framework FW1 Folder: WS/FW1</th>
		<th>Module Mod1 Folder: WS/FW1/Mod1</th>
	</tr>
	<tr>
		<td><code>-lFW fwlst</code></td>
		<td>FWs: the fwlst list<p>Mods: all the modules of the frameworks</p>
		</td>
		<td>FWs: the fwlst list
		<p>Mods: all the modules of the Frameworks</p>
		</td>
		<td>FWs: the fwlst list
		<p>Mods: all the modules of the Frameworks</p>
		</td>
	</tr>
	<tr>
		<td><code>-lMod modlst</code></td>
		<td><strong>ERROR: at least one framework must be specified</strong></td>
		<td>FWs: current FW
		<p>Mods: the modlst list</p>
		</td>
		<td>FWs: current FW
		<p>Mods: the modlst list</p>
		</td>
	</tr>
	<tr>
		<td><code>-a</code></td>
		<td>FWs: all FW
		<p>Mods: all modules of all FW</p>
		</td>
		<td>FWs: current FW
		<p>Mods: all modules belonging to this current FW</p>
		</td>
		<td>FWs: current FW
		<p>Mods: all modules belonging to this current FW</p>
		</td>
	</tr>
	<tr>
		<td><code>FW1 FW2</code></td>
		<td>FWs: FW1, FW2
		<p>Mods: all modules belonging to FW1 or FW2</p>
		</td>
		<td><strong>ERROR: FW1 and FW2 will be considered like modules of the current 
		FW</strong></td>
		<td><strong>ERROR: FW1 and FW2 will be considered like modules of the current 
		FW</strong></td>
	</tr>
	<tr>
		<td><code>Mod1 Mod2</code></td>
		<td><strong>ERROR: Mod1 and Mod2 will be considered like frameworks of the 
		current WS</strong></td>
		<td>FWs: current FW
		<p>Mods:Mod1, Mod2</p>
		</td>
		<td>FWs: current FW
		<p>Mods: Mod1, Mod2</p>
		</td>
	</tr>
	<tr>
		<td><code>FW1/Mod1 FW2/Mod2</code></td>
		<td>FWs: FW1, FW2
		<p>Mods: Mod1, Mod2</p>
		</td>
		<td>FWs: <strong>current FW</strong>, FW1, FW2
		<p>Mods: Mod1, Mod2</p>
		</td>
		<td>FWs: <strong>current FW</strong>, FW1, FW2
		<p>Mods: Mod1, Mod2</p>
		</td>
	</tr>
	<tr>
		<td><code>{nothing}</code></td>
		<td><strong>ERROR: at least one framework must be specified</strong></td>
		<td>FWs: current FW
		<p>Mods: all modules.</p>
		</td>
		<td>FWs: current FW
		<p>Mods: current module.</p>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Examples"></a>Examples</h2>
<p><strong>Beginners</strong>: if you are not (yet) familiar with the make principles, 
we recommend you to use <code>mkmk</code>:</p>
<ol>
	<li>The list of header files exported by the framework is updated.</li>
	<li>The identity card of the framework is updated if needed.</li>
	<li>The Build Time Data is updated if needed.</li>
	<li>The dependencies between derived objects and source objects are recomputed.</li>
	<li>The derived objects which set of dependencies changed, or for which at least 
	one prerequisite changed, are rebuilt.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAABtlMkGetPreq.htm">mkGetPreq</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Mar 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
