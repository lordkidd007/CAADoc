<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Converting Print Files</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Converting Print Files</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAAPrtChangeFormat use case. This use case 
		explains how to convert an input file encoded using a given format into 
		an output file encoded using another format.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPrtChangeFormat Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPrtChangeFormat Do</a></li>
					<li><a href="#How">How to Launch CAAPrtChangeFormat</a></li>
					<li><a href="#Where">Where to Find the CAAPrtChangeFormat Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show how to convert an input file encoded using 
a given format into an output file encoded using another format. To do this, you'll 
learn how to create a print file image from the input file, a print device, print 
parameters, and how to generate the output file encoded using the target format.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPrtChangeFormat Use Case</h2>
<p>CAAPrtChangeFormat is a use case of the CAAPrint.edu framework that illustrates 
Print framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPrtChangeFormat Do</h3>
<p>CAAPrtChangeFormat is a batch program that reads a CGM file from the command 
line and converts it into a TIFF file.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPrtChangeFormat</h3>
<p>To launch CAAPrtChangeFormat, you will need to set up the build time environment, 
then compile CAAPrtChangeFormat along with its prerequisites, set up the run time 
environment, and then execute the use case [<a href="#References">1</a>].</p>
<p>In addition, the <code>CAAPrtOut</code> environment variable should be set to 
the directory into which you want to create the resulting TIFF file, prior to launching 
CAAPrtChangeFormat with the path of the input CGM file as argument:</p>
<pre class="code">E:&gt;set CAAPrtOut=DirForOutputTIFFFile     
E:&gt;CAAPrtChangeFormat InstallRootFolder\CAADoc\CAAPrint.edu\CNext\resources\graphic\images\CAAPrtChangeFormat.cgm</pre>
<p>where:</p>
<ul>
	<li><code>DirForOutputTIFFFile</code> is the directory where the TIFF will be 
		created.</li>
	<li><code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
		where the API CD-ROM is installed.</li>
	<li><code>CAAPrtChangeFormat.cgm</code> is a sample CGM file. You can use other 
		CGM files you may have at hand.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPrtChangeFormat Code</h3>
<p>The CAAPrtChangeFormat use case is made of a single source file located in the 
CAAPrtChangeFormat.m module of the CAAPrint.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAPrint.edu\CAAPrtChangeFormat.m\src\CAACPrtChangeFormat.cpp</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>To create the CGM to TIFF CAAPrtChangeFormat format converter, there are six 
main steps:</p>
<ol>
	<li><a href="#Step1">Initializing the Printer Manager</a></li>
	<li><a href="#Step2">Creating a Print File Image from the Input File</a></li>
	<li><a href="#Step3">Creating a Print Raster File Device</a></li>
	<li><a href="#Step4">Defining Print Parameters</a></li>
	<li><a href="#Step5">Writing the Output File</a></li>
	<li><a href="#Step6">Cleaning the Application and Closing the Printer Manager</a></li>
</ol>
<p>Some preliminary tasks are not described. They deal with retrieving the input 
file name, finding out the output file directory, and building the output file name. 
The input file name is retrieved from the command line in the <code>InputName</code> 
variable, such as TestFile.cgm. The file extension is compared with cgm. The output 
file directory is given by the <code>CAAPrtOut</code> environment variable, which 
you have to export. The output file name uses the input file name and changes its 
suffix to tif, such as TestFile.tif and is stored in the <code>TmpFile</code> variable.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Initializing the Printer Manager</h3>
<pre class="code">#include &quot;CATPrintFileImage.h&quot;   <em>// To create an image from the input file</em>
#include &quot;CATPrintParameters.h&quot;  <em>// To define print parameters</em>
#include &quot;CATPrintFileDevice.h&quot;  <em>// To create a file device</em>
...

int main(int argc, char* argv[])
{
  int ReturnCode = 0;
  ... <em>// Retrieving the input file name, setting the output file directory, and
  ... // building the output file name is not described here</em>
     
  <strong>CATPrinterManager::Begin()</strong>;
  ...</pre>
<p>As soon as the input file is retrieved and the output file directory and name 
are set, the printer manager is initialized.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating a Print File Image from the Input File</h3>
<p>As soon as the input file is retrieved and the output file directory and name 
are set, the print file image can be built from the input file.</p>
<pre class="code">  ...     
  CATPrintFileImage *pImage;
  pImage = new <strong>CATPrintFileImage</strong>(InputName, &quot;CGM&quot;);
  ...</pre>
<p>This print file image is an instance of the <em>CATPrintFileImage</em> class 
instantiated from the input file. The input file format is passed as the second 
argument, here CGM. The print file image created holds the input file in memory 
and the CGM interpreter to enable the file interpretation as soon as this will be 
asked.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Print Raster File Device</h3>
<p>The print raster file device should be next instantiated.</p>
<pre class="code">  ...
  CATPrintFileDevice *pDevice;
  pDevice = new <strong>CATPrintFileDevice</strong>( (const char*) TmpFile, &quot;RASTER&quot; );
  ...   </pre>
<p>The print raster file device represents the output logical unit for a real device. 
It is made of a TIFF generator and of a stream into which the TIFF image writing 
will be performed. For this reason, the output file name and the RASTER type, that 
stands for TIFF, are passed as arguments.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Defining Print Parameters</h3>
<p>A print parameter object should be defined to be associated with the print file 
image to convert.</p>
<pre class="code">  ...
  <strong>CATPrintParameters</strong> Parameters;

  Parameters.<strong>SetWhitePixel</strong>(1);                               <em>// Print white pixels white</em>
  Parameters.<strong>SetMapToPaper</strong>(1);                               <em>// Resize image to match paper forma</em>t
  Parameters.<strong>SetBanner</strong>(&quot;CAAPrtChangeFormat&quot;);                <em>// Add a banner</em>
  Parameters.<strong>SetBannerPosition</strong>(CATPRINT_TOP);                <em>// at the top of the image</em>
  Parameters.<strong>SetLineWidthSpecificationMode</strong>(CATPRINT_SCALED); <em>// Change line width with scale</em>
  Parameters.<strong>SetLineTypeSpecificationMode</strong>(CATPRINT_SCALED);  <em>// Change non continuous lines with scale</em>
 
  float imageWidth=0, imageHeight=0;
  int result = pImage-&gt;<strong>GetSize</strong>(imageWidth, imageHeight); <em>// Retrieve input file dimensions</em>
  if (result)
  { 
    // Set the output image dimensions: width increases from 50%, height doesn't change
    CATPrintForm CurrentForm = Parameters.<strong>GetCurrentForm</strong>();
    CurrentForm().<strong>SetSize</strong>(imageWidth*1.5, imageHeight);
  } 
  ...</pre>
<p>The print parameters are taken into account to create the output image. The following 
parameters are set:</p>
<ul>
	<li>White pixels are kept white (for a print on white paper, it can be convenient 
		to print them in black)</li>
	<li>The image is resized to match the paper size</li>
	<li>A banner with the text &quot;CAAPrtChangeFormat&quot; is printed at the 
		top of the image</li>
	<li>The line width are changed with respect to the scale</li>
	<li>The size of the dashes is changed with respect to the scale</li>
	<li>The image size is changed in order to keep the same height, but to increase 
		its with 50%. To do this, the input file image size is retrieved using the
		<code>GetSize</code> method, and the new size is set as a print parameter 
		through the <em>CATPrintForm</em> instance retrieved using the <code>GetCurrentForm</code> 
		method from <code>parameters</code>.</li>
</ul>
<p>Other print parameters take their default values.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Writing the Output File</h3>
<p>The file conversion can now take place.</p>
<pre class="code">  ...
  if ( !pImage-&gt;<strong>Print</strong>(pDevice, Parameters) )
  {
    cout &lt;&lt; &quot; Error during printing &quot; &lt;&lt; endl;
    ReturnCode = 1;
  }    
  ...</pre>
<p>The <code>Print</code> method converts the print file image from CGM to TIFF 
using the parameters set, and writes the output to the print raster file device.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Cleaning the Application and Closing the Printer Manager</h3>
<pre class="code">  ...
  delete pDevice;
  delete pImage;
  <strong>CATPrinterManager::End()</strong>;
  return ReturnCode;
}</pre>
<p>Simply don't forget to delete allocated objects, close the Printer Manager, and 
return the appropriate return code.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case shows the objects involved when converting a print file, here encoded 
using CGM, into another file encoded using another format, here TIFF. These objects 
are the print file image, the print raster file device, and the set of parameters 
that are needed to create the TIFF file.</p>
<p>First, the Printer Manager is initialized. Then, a <em>CATPrintFileImage</em> 
instance is created using the input file, and a <em>CATPrintFileDevice</em> instance 
is created using the target file format to accommodate the output TIFF file. A
<em>CATPrintParameters</em> instance is created and valued using the appropriate 
setters to hold the intended print parameters. Finally, the <code>Print</code> method 
of the <em>CATPrintFileImage</em> class is used to generate the TIFF file, and the 
Printer Manager is closed.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table>
	<tr class="reference">
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
