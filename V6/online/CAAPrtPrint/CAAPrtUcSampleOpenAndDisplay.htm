<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Opening and Displaying an Image File</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Opening and Displaying an Image File</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAAPrtApplication use case. This use case 
		explains how to open an image file and display it in a viewer.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPrtApplication Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPrtApplication Do</a></li>
					<li><a href="#How">How to Launch CAAPrtApplication</a></li>
					<li><a href="#Where">Where to Find the CAAPrtApplication Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to open an image file read from the disk and to display 
it in a viewer. To do this, you'll learn how to create a print file image from the 
image file, print parameters, a 2D print representation from the print file image, 
and how to display this representation in a viewer.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPrtApplication Use Case</h2>
<p>CAAPrtApplication is a set of use cases of the CAAPrint.edu framework that illustrates 
Print framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPrtApplication Do</h3>
<p>This use case shows several capabilities of the Print framework. Each command 
of CAAPrtApplication is described below.</p>
<table>
	<tr>
		<td rowspan="5">File</td>
		<td>Open</td>
		<td>Opening a TIFF file</td>
	</tr>
	<tr>
		<td>Print</td>
		<td>Printing the image displayed in the viewer</td>
	</tr>
	<tr>
		<td>Capture</td>
		<td>Making a screen shot of the image displayed in the viewer</td>
	</tr>
	<tr>
		<td>Album</td>
		<td>Managing the image album</td>
	</tr>
	<tr>
		<td>Printer Setup</td>
		<td>Managing printer setup parameters</td>
	</tr>
	<tr>
		<td rowspan="3">Printable Objects</td>
		<td>Display a test image</td>
		<td>Displaying a supplied sample TIFF file</td>
	</tr>
	<tr>
		<td>Print a test image</td>
		<td>Printing a supplied sample JPEG file</td>
	</tr>
	<tr>
		<td>Print a label</td>
		<td>Typing a text in a window and printing it with a frame</td>
	</tr>
</table>
<p>This article describes what happens when the application is launched with the 
pathname of a TIFF file as parameter, which is equivalent to File Open. It displays 
a file selection box to select the TIFF file, and selecting the file displays it 
in the application viewer.</p>
<table>
	<caption><a name="Fig1"></a>Figure 1: The CAAPrtWheatField.tif File</caption>
	<tr>
		<td>
		<img alt="CAAPrtWheatField.tif File" height="550" src="images/CAAPrtSampleTIFFImage.gif" width="657"/></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPrtApplication</h3>
<p>To launch CAAPrtApplication, you will need to set up the build time environment, 
then compile CAAPrtApplication along with its prerequisites, set up the run time 
environment, and then execute the use case [<a href="#References">1</a>].</p>
<p>You can launch CAAPrtApplication using a TIFF file as argument:</p>
<pre class="code">E:&gt;CAAPrtApplication InstallRootDirectory\CAAPrint.edu\CNext\resources\graphic\images\CAAPrtWheatField.tif</pre>
<p>where:</p>
<ul>
	<li><code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
		where the API CD-ROM is installed.</li>
	<li><code>CAAPrtWheatField.tif</code> is the sample TIFF file supplied and shown 
		in <a href="#Fig1">Figure 1</a>. You can use other TIFF files you may have 
		at hand.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPrtApplication Code</h3>
<p>The CAAPrtApplication use case is made of an application class and of a window 
class whose header and source files are located in the CAAPrtApplication.m module 
of the CAAPrint.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAPrint.edu\CAAPrtApplication.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>CAAPrtApplication includes the following files:</p>
<table>
	<tr>
		<th>LocalInterfaces Folder</th>
	</tr>
	<tr>
		<td>CAAPrtApplication.h</td>
		<td>Header file for the interactive application</td>
	</tr>
	<tr>
		<td>CAAPrtDialog.h</td>
		<td>Header file for the dialog window that hosts the viewer</td>
	</tr>
	<tr>
		<th>src Folder</th>
	</tr>
	<tr>
		<td>CAAPrtApplication.cpp</td>
		<td>Source file for the interactive application</td>
	</tr>
	<tr>
		<td>CAAPrtDialog.cpp</td>
		<td>Source file for the dialog window that hosts the viewer</td>
	</tr>
</table>
<p>This article explains the <code>DisplayImage</code> method located in the CAAPrtDialog.cpp 
file.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>To display a TIFF image file in a 2D viewer, there are four main steps:</p>
<ol>
	<li><a href="#Step1">Creating a Print File Image from the Selected File</a></li>
	<li><a href="#Step2">Defining Print Parameters</a></li>
	<li><a href="#Step3">Creating a 2D Representation from the Image</a></li>
	<li><a href="#Step4">Displaying the Created 2D Representation</a></li>
</ol>
<p>The preliminary tasks that consist in either retrieving the input file name passed 
as the command argument or creating and displaying the file selection box, retrieving 
the input file name from the file selected, and checking that its a TIFF file not 
described. The input file name is passed to the <code>DisplayImage</code> method 
in the <code>IPath</code> argument, such as TestFile.tif. The viewer is accessed 
as a data member of the dialog window class using the <code>_pViewer</code> pointer, 
and the representation created is kept in the <code>_pRep</code> data member.</p>
<p>The <code>DisplayImage</code> method reads the TIFF file, creates a 2D representation, 
and displays this representation in the 2D viewer of the application.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Creating a Print File Image from the Input File</h3>
<pre class="code">void CAAPrtDialog::DisplayImage(const char* iPath)
{
  CATPrintFileImage *pImage = new <strong>CATPrintFileImage</strong>(iPath, &quot;TIFF&quot;);
  ...</pre>
<p>This print file image is an instance of the <em>CATPrintFileImage</em> class 
instantiated from the input file. The input file format is passed as the second 
argument, here TIFF. The print file image created holds the input file in memory 
and the TIFF interpreter to enable the file interpretation as soon as this will 
be asked.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Defining Print Parameters</h3>
<p>A print parameter object should be defined to be associated with the print file 
image.</p>
<pre class="code">  ...
  <strong>CATPrintParameters</strong> Parameters;
  ...</pre>
<p>The print parameters are taken into account to create the printed output. No 
specific value is reset, so all the print parameters take their default values.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a 2D Representation from the Image</h3>
<p>The file conversion to a 2D representation can now take place.</p>
<pre class="code">  ...
  CAT2DRep * pRep = NULL;
  pRep = new <strong>CATPrint2DRep</strong>(pImage, Parameters);

  pImage-&gt;<strong>Release</strong>();
  ...</pre>
<p>The <em>CATPrint2DRep</em> is a specific 2D representation built from a print 
file image and a set of print parameters. The print file image is now useless and 
can be released.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Displaying the Created 2D Representation</h3>
<pre class="code">  ...
  if (pRep)
  {
    if (_pRep)                    <em>// If there is a previous representation displayed</em>
    {
      _pViewer-&gt;<strong>RemoveRep</strong>(_pRep); <em>// Removes it from the viewer</em>
      _pRep-&gt;<strong>Destroy</strong>();           <em>// Releases it</em>
    }
    
    _pViewer-&gt;<strong>AddRep</strong>(pRep);       <em>// Adds the representation to the viewer</em>
    _pViewer-&gt;<strong>Reframe</strong>();          <em>// Redraws the viewer contents</em>
      
    _pRep = pRep;      <em>// Keeps the new representation for future use (printing, etc.)</em>
  }
}</pre>
<p>If the 2D representation is successfully created, it can be displayed. The possible 
displayed representation is first removed from the viewer and released, and the 
new created representtaion is added to the viewer that is then asked to redraw itself. 
This representation is kept as a data member for a future use, such as printing, 
or capturing it in the album.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case shows the objects involved when displaying an image file, here 
encoded using TIFF, in a 2D viewer. These objects are the print file image, the 
set of print parameters, the 2D representation into which the image is converted, 
and the 2D viewer that displays it.</p>
<p>First, a <em>CATPrintFileImage</em> instance is created using the input file, 
and a <em>CATPrintParameters</em> instance is created. Then a <em>CATPrint2DRep</em> 
instance is created using print file image and the print parameters. Finally, this 
representation is passed to the 2D viewer for display.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
