<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating an SDD Slot</title>
</head>

<body onload="highlightSearchTerms();">

<table class="table1">
	<tr>
		<td class="DocHeader3">
		<table>
			<tr>
				<td class="DocHeader1" colspan="2">
				<h1>Creating an SDD Slot</h1>
				</td>
			</tr>
			<tr>
				<td class="DocHeader4" colspan="2">&nbsp;</td>
			</tr>
			<tr>
				<td class="DocHeader3">
				<table class="DocHeaderIntro">
					<tr>
						<td class="Intro1">
						<p class="header"><a name="hj-top"></a>This use case primarily 
						focuses on the methodology to cerate a SDD slot.</p>
						<div id="toc">
						</div>
						<hr class="header" /></td>
					</tr>
					<tr>
						<td class="Intro2"><span class="run-in">Before you begin:</span> 
						Note that:<ul>
							<li>You should first launch CATIA and import the
							<code>CAAScdSddUcCreateSlot.3dxml</code>, <code>CAAScdSddUcCGR.3dxml</code>, <code>CAAScdSddUcSlotSections.3dxml </code> 
							and <code>CAAScdSddUcSR.3dxml</code> files supplied 
							in folder <code>InstallRootDirectory\CAADoc\Doc\online\CAAScdSddModeler\samples\</code> 
							where <code>InstallRootDirectory</code> is the directory 
							where the CAA CD-ROM is installed.</li>
						</ul>
						<p><span class="run-in">Where to find the macro:
						<a href="CAAScdSddUcCreateSlotSource.htm">CAAScdSddUcCreateSlotSource.htm</a></span></p>
						</td>
					</tr>
				</table>
				</td>
				<td class="DocHeader2">
				<table class="DocTopics">
					<tr>
						<td class="TopicsTitle">Related Topics</td>
					</tr>
					<tr>
						<td>&lt;<em>topic1</em>&gt;</td>
					</tr>
					<tr>
						<td>&lt;<em>topic2</em>&gt;</td>
					</tr>
				</table>
				</td>
			</tr>
		</table>
		</td>
	</tr>
</table>
<table class="indented">
	<tr>
		<td style="height: 124px">
		<p>This use case can be divided in 7 steps</p>
		<ol>
			<li><a href="#Step1">Searches and opens model which is named as &quot;SddProduct&quot;</a></li>
			<li><a href="#Step2">Retrieves Selection object</a></li>
			<li><a href="#Step3">Retrieves Part object</a></li>
			<li><a href="#Step4">Retrieves a SDD stiffener object</a></li>
			<li><a href="#Step5">Retrieves a SDD plate object </a></li>
			<li><a href="#Step6">Creates Slot </a></li>
			<li><a href="#Step7">Updates the Part object</a></li>
		</ol>
		</td>
	</tr>
</table>
<table class="table1">
	<tr>
		<td>
		<ol class="task">
			<li>
			<p><strong><a name="Step1"></a>Searches and opens model which is named 
			as &quot;SddProduct&quot; </strong></p>
			<p>As a first step, the UC retrieves a model &quot;SddProduct&quot; from DB and 
			loads it and returns object of the Editor. </p>
			<pre class="code">... 
 <span class="keyword">Dim </span>SDDPrdEditor <span class="keyword"> As </span> Editor
<span class="keyword"> Dim </span>prdName<span class="keyword"> As </span>String
 prdName = &quot;SddProduct&quot;
 OpenProduct prdName , SDDPrdEditor
...</pre>
			<p>The function <strong><code>OpenProduct</code></strong> returns
			<strong><code>SDDPrdEditor</code></strong>, a Editor object. After searching 
			and opening of SDD model from underlying database the current active 
			editor is returned in <strong><code>SDDPrdEditor</code></strong>.</p>
			</li>
			<li>
			<p><strong><a name="Step2"></a>Retrieves Selection Object</strong></p>
			<p>As a next step, the UC retrieves Selection object in SDDProdSel variable. 
			To retrieve the Selection object <strong><code>SDDPrdEditor </code>
			</strong>is used.</p>
			<pre class="code"> ...
<span class="keyword">    Set</span> SDDProdSel = SDDPrdEditor<strong>.Selection </strong>
 ...
</pre>
			</li>
			<li>
			<p><strong><a name="Step3"></a>Retrieves Part object</strong></p>
			<p>In this step UC retrieves Part object ObjPart variable.</p>
			<pre class="code">... 
  <span class="keyword">Dim </span>product1Service <span class="keyword"> As </span> PLMProductService
  <span class="keyword">Set</span> product1Service = SDDPrdEditor.GetService(&quot;PLMProductService&quot;)
  <span class="keyword">Dim </span>ObjVPMRootOccurrence <span class="keyword"> As </span> VPMRootOccurrence
  <span class="keyword">Set</span> ObjVPMRootOccurrence = product1Service.RootOccurrence
  <span class="keyword">Dim </span>ObjVPMReference <span class="keyword"> As </span> VPMReference
  <span class="keyword">Set</span> ObjVPMReference = ObjVPMRootOccurrence.ReferenceRootOccurrenceOf
  <span class="keyword">Dim </span>ObjVPMRepInstances <span class="keyword"> As </span> VPMRepInstances
  <span class="keyword">Set</span> ObjVPMRepInstances = ObjVPMReference.RepInstances
  <span class="keyword">Set </span>ObjVPMRepReference = ObjVPMRepInstances.Item(1).ReferenceInstanceOf
  <span class="keyword">Set</span> ObjPart = ObjPart = ObjVPMRepReference.GetItem(&quot;Part&quot;)
...</pre>
			</li>
			<li>
			<p><strong><a name="Step4"></a>Retrieves a SDD Stiffener object</strong></p>
			<p>In this step UC retrieves stiffener object. This stiffener will be 
			used as a penetrating element for the slot creation. </p>
			<pre class="code">... 
  <span class="keyword">Set </span>ListOfInstances = ObjVPMReference.Instances
  <span class="keyword">Set</span> StiffenerRef = ListOfInstances.Item(2).ReferenceInstanceOf
  <span class="keyword">Set</span> StiffenerRepInstances = StiffenerRef.RepInstances
  <span class="keyword">Set</span> StiffenerRepInstReference = StiffenerRepInstances.Item(1).ReferenceInstanceOf
  <span class="keyword">Set</span> StiffenerPart = StiffenerRepInstReference.GetItem(&quot;Part&quot;)
  <span class="keyword">Dim </span>ObjSddProductStiffener <span class="keyword"> As </span> SddProductStiffener
  SDDProdSel.Add StiffenerRef
  <span class="keyword">Set </span>ObjSddProductStiffener = SDDProdSel.FindObject(&quot;CATIASddProductStiffener&quot;)
  <span class="keyword">Dim </span>ObjSddStiffener <span class="keyword"> As </span> SddStiffener
  <span class="keyword">Set </span>ObjSddStiffener = ObjSddProductStiffener.SddStiffener

...</pre>
			<p><code>FindObject</code> method finds object whose type is &quot;CATIASddProductStiffener&quot; 
			and returns it. To retrieve <code>SddStiffener</code> object from
			<code>ObjSddProductStiffener</code> call <code>SddStiffener</code> property 
			as shown above. This will the <code>SddStiffener</code> object. .</p>
			</li>
			<li>
			<p><strong><a name="Step5"></a>Retrieves a SDD plate object</strong></p>
			<p>In this step UC finds a SDD plate in the part. This plate will be 
			used as a penetrated element in the slot creation.</p>
			<pre class="code">... 
  <span class="keyword">Set</span> ListOfInstances = ObjVPMReference.Instances
  <span class="keyword">Set</span> PlateRef = ListOfInstances.Item(3).ReferenceInstanceOf
  <span class="keyword">Set</span> PlateRepInstances = PlateRef.RepInstances
  <span class="keyword">Set</span> PlateRepInstReference = PlateRepInstances.Item(1).ReferenceInstanceOf
  <span class="keyword">Set</span> PlatePart = PlateRepInstReference.GetItem(&quot;Part&quot;)
  SFDProdSel.<strong>Add </strong>PlateRef 
  <span class="keyword">Dim</span> ObjSddProductPlate <span class="keyword">As</span> SddProductPlate 
  <span class="keyword">Set</span> ObjSddProductPlate = SDDProdSel.FindObject(&quot;CATIASddProductPlate&quot;)
  <span class="keyword">Dim</span> ObjSddPlate <span class="keyword">As</span> SddPlate 
  <span class="keyword">Set</span> ObjSddPlate = ObjSddProductPlate.<strong>SddPlate </strong>
...</pre>
			<p>In above lines, <code>FindObject</code> method finds object whose 
			type is &quot;CATIASddProductPlate&quot; and returns to it. To retrieve <code>
			SddPlate</code> object from it, call <code>SddPlate </code>property 
			as shown above. This will give the <code>SddPlate</code> object.</p>
			</li>
			<li>
			<p><strong><a name="Step6"></a>Creates Slot</strong></p>
			<p>Now, penetrated element (plate) and penetrating element (stiffener) 
			are available to create slot. Call <code>CreateSlot</code> method to 
			create slot. <code>CreateSlot</code> method takes a plate and a stiffener 
			as input parameters and it returns created slot as output parameter.</p>
			<pre class="code">... 
  <span class="keyword">Dim</span> ObjStrSlot <span class="keyword">As </span>StrSlot 			
  <strong>CreateSlot</strong> ObjSfdPanel, ObjSfdStiffener, ObjStrSlot 
...</pre>
			<p>The method <code>CreateSlot</code> is detailed as in the below sub 
			steps.</p>
			<ol class="task" style="list-style-type: lower-roman">
				<li>
				<p><strong>Retrieves <code>StrSlots</code> object and and create 
				slot with no data.</strong></p>
				<pre class="code"><span class="keyword">Sub</span> CreateSlot(iObjSddPlate <span class="keyword">As</span> SddPlate, iObjSddStiffener <span class="keyword">As </span>SddStiffener, oObjStrSlot <span class="keyword">As</span> StrSlot)
<span class="comment">&#39;Get StrSlots object</span>
<span class="keyword">    Dim</span> ObjStrSlots <span class="keyword">As</span> StrSlots
<span class="keyword">    Set</span> ObjStrSlots = iObjSddPlate.<strong>StrSlots</strong>
<span class="comment">&#39;Create StrSlot</span>
<span class="keyword">    Set</span> oObjStrSlot = ObjStrSlots.<strong>Add</strong>
...</pre>
				<p><code>StrSlots</code> is retrieved in <code>ObjStrSlots</code> 
				variable from <code>iObjSddPlate</code> object. On <code>ObjStrSlots</code> 
				object, <code>Add</code> method is called to create the slot with 
				no data. Now Uc needs to set the different properties of the slot 
				like penetrating element, slot parameters etc.</p>
				</li>
				<li>
				<p><strong>Sets penetrating profile for slot</strong></p>
				<pre class="code">...
<span class="comment">&#39;set penetrating element</span>
<span class="keyword">  Dim</span> penetratingElem <span class="keyword">As</span> Reference
<span class="keyword">  Set</span> penetratingElem = StiffenerPart.<strong>CreateReferenceFromObject</strong>(iObjSddStiffener)
    oObjStrSlot.<strong>SetPenetratingProfile </strong>penetratingElem 
...</pre>
				<p><code>penetratingElem</code> is of type <code>Reference</code>. 
				Method <code>CreateReferenceFromObject</code> creates reference 
				to <code>iObjSddStiffener</code> and returns it in <code>penetratingElem</code>. 
				Then <code>SetPenetratingProfile</code> method is called to set 
				the penetrating profile for the slot.</p>
				</li>
				<li>
				<p><strong>Sets slot parameters</strong></p>
				<pre class="code">...
    <strong>SetSlotParameters</strong> oObjStrSlot, iObjSddPlate
...</pre>
				<p>Method <code>SetSlotParameters</code> is called to set the slot 
				parameters of respective slot which is set.</p>
				<p>The method <code>SetSlotParameters</code> is detailed as in the 
				below sub steps.</p>
				<ol class="task" style="list-style-type: lower-roman">
					<li>
					<p><strong>Retrieves <code>StrDetailFeature</code> object</strong></p>
					<pre class="code"><span class="keyword">Sub</span> SetSlotParameters(iObjStrSlot <span class="keyword">As</span> StrSlot,iObjSddPlate <span class="keyword">As</span> SddPlate)
<span class="keyword">    Dim</span> ObjStrDetailFeature <span class="keyword">As</span> StrDetailFeature
<span class="keyword">    Set</span> ObjStrDetailFeature = iObjStrSlot.<strong>StrDetailFeature</strong>
...</pre>
					<p><code>ObjStrDetailFeature </code>is of type <code>StrDetailFeature</code>. 
					It is retrieved from <code>iObjStrSlot</code> object using property
					<code>StrDetailFeature</code>. Later this object is used to 
					set different slot parameters like slot name, slot type etc.</p>
					</li>
					<li>
					<p><strong>Sets Slot type</strong></p>
					<pre class="code">...
    ObjStrDetailFeature.<strong>Type</strong> = &quot;RECT&quot;
...</pre>
					<p><code>Type </code>property of <code>SfdDetailFeature</code> 
					is set to &quot;RECT&quot;. This defines the type of the slot.</p>
					</li>
					<li>
					<p><strong>Sets Slot name</strong></p>
					<pre class="code">...
    ObjStrDetailFeature.<strong>FeatureName</strong> = &quot;RECT_UNI_WT&quot;
...</pre>
					<p><code>FeatureName </code>property of <code>SfdDetailFeature</code> 
					is set to &quot;RECT_UNI_WT&quot;. This defines the name of the slot.</p>
					</li>
					<li>
					<p><strong>Retrieves list of parameters of impacted object</strong></p>
					<pre class="code">...
    <span class="keyword">Set</span> ObjPartParameters = PlatePart.<strong>Parameters</strong>
    <span class="comment">&#39;parameters will be aggregated under impacted
    &#39;object(here impacted object is iObjSddPlate)</span>
    <span class="keyword">Set</span> HBParameters = ObjPartParameters.<strong>SubList</strong>(iObjSddPlate, True)
...</pre>
					<p><code>Parameters</code> property of <code>PlatePart</code> 
					returns collection object containing the part parameters.
					<code>SubList</code> method from <code>Parameters</code> returns 
					the sub-collection of parameters aggregated to <code>iObjSddPlate</code> 
					object and it collected in <code>HBParameters</code> object.</p>
					</li>
					<li>
					<p><strong>Creates parameters and stores role of each parameter 
					in an array</strong></p>
					<pre class="code">...
    <span class="keyword">Set</span> DBB = HBParameters.<strong>CreateDimension</strong>(&quot;DBB&quot;, &quot;LENGTH&quot;, &quot;300&quot;)
    <span class="keyword">Set</span> DR = HBParameters.CreateDimension(&quot;DR&quot;, &quot;LENGTH&quot;, &quot;200&quot;)
    <span class="keyword">Set</span> DL = HBParameters.CreateDimension(&quot;DL&quot;, &quot;LENGTH&quot;, &quot;200&quot;)
    <span class="keyword">Set</span> DTT = HBParameters.CreateDimension(&quot;DTT&quot;, &quot;LENGTH&quot;, &quot;50&quot;)
    <span class="comment">&#39;Define parameter roles in an array</span>
    <span class="keyword">Dim</span> ParamRoles(3) <span class="keyword">As</span> Variant
    ParamRoles(0) = &quot;DBB&quot;
    ParamRoles(1) = &quot;DR&quot;
    ParamRoles(2) = &quot;DL&quot;
    ParamRoles(3) = &quot;DTT&quot;
...</pre>
					<p>Method <code>CreateDimension</code> creates a user dimension. 
					Here Uc creates 4 parameters (DBB, DR, DL, DLL) for slot. Role 
					of each parameter is stored in ParamRoles array.</p>
					</li>
					<li>
					<p><strong>Sets parameters</strong></p>
					<pre class="code">...
    ObjStrDetailFeature.<strong>SetParameters</strong> HBParameters, ParamRoles
...</pre>
					<p><code>SetParameters</code> method of <code>ObjStrDetailFeature</code> 
					is called to set the parameters for slot creation. This method 
					takes two input parameters. First parameter is the collection 
					object of slot parameters and second object is an array which 
					contains the role of each parameter from the collection object.</p>
					</li>
					<li>
					<p><strong>Updates the ObjStrDetailFeature object</strong></p>
					<pre class="code">...
    ObjStrDetailFeature.<strong>Update</strong>
End Sub</pre>
					<p>Call to <code>Update</code> method of <code>ObjStrDetailFeature</code> 
					will update connection coordinate and visualization of the slot 
					feature.</p>
					</li>
				</ol>
				</li>
			</ol>
			</li>
			<li>
			<p><strong><a name="Step7"></a>Updates the product plate object</strong></p>
			<pre class="code">...
  ObjSddProductPlate.<strong>Update</strong>
<strong></strong>End Sub
</pre>
			<p><code>Update</code> method updates the <code>ObjSddProductPlate</code></p>
			</li>
		</ol>
		<script type="text/javascript">insertLinkToTop()</script>
		<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
		</td>
	</tr>
</table>
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
