<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Scanning a Mechanism</title>
</head>

<body onload="highlightSearchTerms();">

<table class="table1">
	<tr>
		<td class="DocHeader3">
		<table>
			<tr>
				<td class="DocHeader1" colspan="2">
				<h1>Scanning a Mechanism</h1>
				</td>
			</tr>
			<tr>
				<td class="DocHeader4" colspan="2">&nbsp;</td>
			</tr>
			<tr>
				<td class="DocHeader3">
				<table class="DocHeaderIntro">
					<tr>
						<td class="Intro1"><span class="run-in">Before you begin:</span> 
						Note that:<ul>
							<li>You should first launch CATIA and import the
							<code>Moteur.3dxml</code> file supplied in 
							folder <code>InstallRootFolder\CAADoc\Doc\CAAScdKin\samples\</code> 
							where <code>InstallRootFolder</code> is the folder 
							where the CAA CD-ROM is installed.</li>
						</ul>
						<p><span class="run-in">Where to find the macro:
						<a href="CAAScdKinScanSource.htm">CAAScdKinScanSource.htm</a></span></p>
						</td>
					</tr>
				</table>
				</td>
				<td class="DocHeader2">
				<table class="DocTopics">
					<tr>
						<td class="TopicsTitle">Related Topics</td>
					</tr>
					<tr>
						<td>&lt;<em>topic1</em>&gt;</td>
					</tr>
					<tr>
						<td>&lt;<em>topic2</em>&gt;</td>
					</tr>
				</table>
				</td>
			</tr>
		</table>
		</td>
	</tr>
</table>
<table class="indented">
	<tr>
		<td>
		<p>This use case can be divided in six steps:</p>
		<ol>
			<li><a href="#Step1">Retrieves the current Editor</a></li>
			<li><a href="#Step2">Retrieves the Product Service from the Editor</a></li>
			<li><a href="#Step3">Gets the discipline of all representation of the tree</a></li>
			<li><a href="#Step4">Gets the Mechanism Representation if the V_discipline is the good one </a></li>
			<li><a href="#Step5">Scans Joints under the Mechanism Representation</a></li>
			<li><a href="#Step6">Scans Commands and retrieves some information</a></li>
		</ol>
		</td>
	</tr>
</table>
<table class="table1">
	<tr>
		<td>
		<ol class="task">
			<li>
			<p><strong><a name="Step1"></a>Retrieves the current Editor</strong></p>
			<pre class="code">... 
            <span class="keyword">Dim </span>MyEditor<span class="keyword"> As </span> Editor
            <span class="keyword">Set </span>myEditor = CATIA.ActiveEditor
...</pre>
			</li>
			<li>
			<p><strong><a name="Step2"></a>Retrieves the Product Service from the Editor</strong></p>
			<pre class="code">... 
            <span class="keyword">Dim </span>MyPrdService   <span class="keyword">As  </span>PLMProductService
            <span class="keyword">Set </span>MyPrdService = myEditor.GetService(&quot;PLMProductService&quot;)
            <span class="keyword">Dim </span>myRootOccurrence <span class="keyword">As  </span>VPMRootOccurrence
            <span class="keyword">Set </span>myRootOccurrence = MyPrdService.RootOccurrence
            <span class="keyword">Set </span>myMCXParent = myRootOccurrence.ReferenceRootOccurrenceOf
...</pre>
			</li>
			<li>
			<p><strong><a name="Step3"></a>3- Gets the discipline of all representation of the tree</strong></p>
			<p>In this step, we search through all the reps of the tree.</p>
			<pre class="code">...
            <span class="keyword">For </span>Each MyEntity In MyPrdService.EditedContent
            <span class="keyword">  Dim </span>MyRef <span class="keyword">As </span>VPMReference
            <span class="keyword">  Set </span>MyRef = MyEntity
            <span class="keyword">  Dim </span>MyReps <span class="keyword">As </span>VPMRepInstances
            <span class="keyword">  Set </span>MyReps = MyRef.RepInstances
            <span class="keyword">  For </span>Each MyRep In MyReps
            <span class="keyword">    Dim </span>MyRepRef <span class="keyword">As </span>VPMRepReference
            <span class="keyword">    Set </span>MyRepRef = MyRep.ReferenceInstanceOf
            <span class="keyword">    Dim </span>attr <span class="keyword">As </span>String
                attr = MyRepRef.GetAttributeValue("V_discipline")
...</pre>
			</li>
			<li>
			<p><strong><a name="Step4"></a>4- Gets the Mechanism Representation if the V_discipline is the good one </strong></p>
			<p>We sort on the discipline of all reps to find mechanisms.</p>
			<p>Discipline for mechanisms is Mechanism for new products and Simulation for old ones.</p>
			<pre class="code">...					
<span class="keyword">              If </span> ( attr = "Mechanism" ) Then
<span class="keyword">                Dim </span>MyMechRep <span class="keyword"> As  </span>KinMechanism
<span class="keyword">                Set </span>MyMechRep = MyRep.GetItem("MECHRep")
...</pre>
			</li>
			<li>
			<p><strong><a name="Step5"></a>5- Scans Joints under the Mechanism Representation.</strong></p>
			<p>In this step, we get the joints collection.</p>
<pre class="code">...					
<span class="keyword">                Dim </span>MyJoints <span class="keyword"> As  </span>KinJoints
<span class="keyword">                Set </span>MyJoints = MyMechRep.Joints
...</pre>

			<p>For each engineering connection we get some information:</p>
<pre class="code">...			
<span class="keyword">                For </span> i = 1 To MyJoints.Count Step 1
<span class="keyword">                  Dim </span>MyJoint <span class="keyword">As </span>EngConnection
<span class="keyword">                  Set </span>MyJoint = MyJoints.Item(i)
...</pre>			
			   <p>As the Name</p>
<pre class="code">...			   
<span class="keyword">                  MsgBox</span> &quot; my Engineering Connection name = &quot; &amp; MyJoint.Name			   
...</pre>
			<p>Or the type</p>
<pre class="code">...			
<span class="keyword">                  MsgBox</span> &quot; my Engineering Connection Type = &quot; &amp; MyJoint.Type
...</pre>			
			</li>
			<li>
			<p><strong><a name="Step6"></a>6- Scans Commands and retrieves some information.</strong></p>
			<p>In this step, we get the commands collection.</p>
<pre class="code">...					
<span class="keyword">                  Dim </span>MyCommands <span class="keyword"> As  </span>KinCommands
<span class="keyword">                  Set </span>MyCommands = MyMechRep.Commands 
...</pre>

			<p>For each engineering connection we get some information:</p>
<pre class="code">...			
<span class="keyword">                For </span> i = 1 To MyCommands.Count Step 1
<span class="keyword">                  Dim </span>MyCommand <span class="keyword">As </span>KinCommand
<span class="keyword">                  Set </span>MyCommand = MyCommands.Item(i)
...</pre>			
			   <p>As the Name</p>
<pre class="code">...			   
<span class="keyword">                  MsgBox</span> &quot; Command name = &quot; &amp; MyCommand.Name
...</pre>
			<p>Or the current value</p>
<pre class="code">...			
<span class="keyword">                  MsgBox</span> &quot; Current Value = &quot; &amp; MyCommand.CurrentValue
...</pre>		
			</li>
		</ol>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
