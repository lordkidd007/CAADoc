<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating and Modifying a Web</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating and Modifying a Web</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAAStmWeb use case. This use case explains 
		how to create or modify a Web feature. A Web is the base feature for all 
		other aerospace sheet metal features.[<a href="#References">1</a>]</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAStmWeb Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAStmWeb Do</a></li>
					<li><a href="#How">How to Launch CAAStmWeb </a></li>
					<li><a href="#Where">Where to Find the CAAStmWeb Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will You Learn With This Use Case</h2>
<p>This use case learns how to use the aerospace sheet metal factory and the Web 
public interface to create , display or modify a Web. Its main intent is to introduce 
important concepts about the way to create or modify aerospace sheet metal features.</p>
<h2><a name="UseCase"></a>The CAAStmWeb Use Case</h2>
<p>CAAStmWeb is a use case of the CAAAerospaceSheetMetal.edu framework that illustrates 
the creation or modification of a Web feature.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAStmWeb Do</h3>
<p>This use case will show you the different steps to create or modify a Web.</p>
<p>More precisely this sample:</p>
<ul>
	<li>Read and analyze an input data (.txt) file</li>
	<li>Create a PLM Session</li>
	<li>Perform a query in the Database and open a Representation Reference including 
		the necessary geometric input features</li>
	<li>Create the Web feature if it does not exist in the input Representation 
		Reference</li>
	<li>Set the values of the parameters of the Web</li>
	<li>Update the Web feature</li>
	<li>Save the Representation Reference in the database</li>
	<li>Close the PLM session.</li>
</ul>
<p>With this sample, you will have in batch mode the same capabilities than an PLM 
interactive session.</p>
<p>The input data file contains the same fields than the UI Web command panel:</p>
<p>
<img alt="Web Command Dialog" height="509" src="images/CAAAslWebTxt.jpg" width="681"/></p>
<p>Some samples of input data are provided in <strong>Data.d\Web</strong> folder.</p>
<p>The structure of this file is simple:</p>
<p>KEYWORD: when a keyword is encountered a boolean is set to TRUE : the corresponding 
data is to set.</p>
<p>More details about available KEYWORDS are provided in front of the sample source 
file.</p>
<p>i.e. : The input data file above will create a Web with features included in
<strong>Test_1_CAAStmWeb</strong> Representation :</p>
<p>
<img alt="Web with Features" height="451" src="images/CAAAslBasicGeometry.jpg" width="659"/></p>
<p>Remark that the <strong>Sheet Metal Parameters</strong> feature must exist in 
the Representation (see the spec tree above).</p>
<p>The sample will create a Web with Plane.1 as <strong>Support</strong> and Extrude.1, 
Sketch.2 as <strong>Boundary</strong>:</p>
<p><img alt="Web" height="370" src="images/CAAAslWeb1.jpg" width="638"/></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAStmWeb</h3>
<p>To launch CAAStmWeb, you will need to set up the build time environment, then 
compile CAAStmWeb along with its prerequisites, and set up the run time environment, 
and then execute the use case [<a href="#References">2</a>].</p>
<p>Launch the use case as follows:</p>
<ul>
	<li>Before launching the use case:
		<ul>
			<li>Edit the File: <strong>CAATestCreateWeb01.txt</strong>
				<p>Customize the PLM... fields, like in the input data file described 
				above</p>
			</li>
			<li><strong>Import </strong>the <strong>Input Geometry</strong>
				<strong>Data</strong> in your <strong>database </strong>:
				<strong>CAAAerospaceSheetMetal.edu\InputData\CAAWebCreation.3dxml</strong>
				<p>Do not forget to give a <strong>Prefix</strong> when importing 
				this file</p>
				<p>i.e.: Prefix = <strong>Test_1_</strong> ==&gt; the PLM External 
				It will be: <strong>Test_1_MDD_CAA_Web_Creation</strong></p>
				<p>A Prefix is mandatory to enable more than one launch in the database</p>
			</li>
		</ul>
	</li>
	<li>To launch the use case : set the ENOVIA environment and execute the command:
		<pre>mkrun -c CAAStmWeb inputFolder\CAATestCreateWeb01.txt</pre>
	</li>
</ul>
<p>where <strong>inputFolder</strong> is a folder including CAATestCreateWeb01.txt</p>
<p>A default file is provided in <strong>CAAAerospaceSheetMetal.edu\Data.d\Web</strong></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAStmWeb Code</h3>
<p>The CAAStmWeb use case is made up of:</p>
<ul>
	<li>A main program located in the CAAStmWeb.m module of the CAAAerospaceSheetMetal.edu 
		framework:<p><code>InstallRootFolder\CAADoc\CAAAerospaceSheetMetal.edu\CAAStmWeb.m\</code></p>
	</li>
	<li>The input file <strong>CAATestCreateWeb01.txt</strong> is provided in a 
		subfolder of CAAAerospaceSheetMetal.edu:
		<p><code>InstallRootFolder\CAADoc\CAAAerospaceSheetMetal.edu\Data.d\Web</code></p>
	</li>
	<li>The input file <strong>CAAStmWeb.3dxml</strong> is provided in a subfolder 
		of CAAAerospaceSheetMetal.edu:
		<p><code>InstallRootFolder\CAADoc\CAAAerospaceSheetMetal.edu\InputData</code></p>
	</li>
</ul>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are seven main steps in CAAStmWeb:</p>
<ol>
	<li><a href="#ReadInput">Reading and Analyzing the Input Data</a></li>
	<li><a href="#Initialize">Creating a PLM Session</a></li>
	<li><a href="#Create">Creating the Web Feature</a></li>
	<li><a href="#Parameters">Setting the Web Parameters</a></li>
	<li><a href="#Update">Updating the Web Feature</a></li>
	<li><a href="#Save">Saving the Web Representation in the Database</a></li>
	<li><a href="#Close">Closing the PLM Session</a></li>
</ol>
<p>We will now comment each of those sections by looking at the code of the main 
method of the file CAAStmWeb.cpp.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="ReadInput"></a>Reading and Analyzing the Input Data</h3>
<p>CAAStmWeb sample will first read and analyze an input data file. </p>
<p><strong>Note</strong>: some services are provided in the class <strong>CAAStmServices</strong>.</p>
<pre class="code">...
CAAStmServices CAASmaTools;

rc = CAASmaTools.AnalyseWebInputData (InputDataFilePath, CAAWebInput);
...</pre>
<p>The method AnalyseWebInputData will read the input data file and store the data 
in the class CAAStmInputData: i.e : if the method <strong>GetSupportGeomToSet()
</strong>returns TRUE it means that the Support is to set.</p>
<pre class="code">...
class ExportedByCAAStmServices CAAStmInputData
  {
  public:

    CAAStmInputData();
    virtual ~CAAStmInputData();

    // General Data :
    // --------------

    // PLM : session management :

    CATUnicodeString          GetPLMRepository ();
    CATUnicodeString          GetPLMServer     ();
    CATUnicodeString          GetPLMUser       ();
    CATUnicodeString          GetPLMPassword   ();
    CATUnicodeString          GetPLMRole       ();

    // PLM : component management :

    CATUnicodeString          GetPLMEnvironment ();
    CATUnicodeString          GetPLMInputId     ();
    CATUnicodeString          GetPLMVersion     ();

    // Sample data :

    CATUnicodeString          GetLengthUnit     ();
    ...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Initialize"></a>Creating a PLM Session</h3>
<p>Create a session and query/open a Representation Reference including the input 
geometry: this step has no specificity.</p>
<p>It is a call to standard functionalities:</p>
<pre class="code">...
  // Creates a PLM session with : repository, server, user, password, role
  CATUnicodeString strRepository = CAAWebInput.GetPLMRepository();
  CATUnicodeString strServer     = CAAWebInput.GetPLMServer();
  CATUnicodeString strUser       = CAAWebInput.GetPLMUser();
  CATUnicodeString strPassword   = CAAWebInput.GetPLMPassword();
  CATUnicodeString strRole       = CAAWebInput.GetPLMRole();

  CATString Repository = strRepository.ConvertToChar();
  CATString Server     = strServer.ConvertToChar();
  CATString User       = strUser.ConvertToChar();
  CATString Password   = strPassword.ConvertToChar();
  CATString Role       = strRole.ConvertToChar();
   
  rc = ::CAAAdpCreateSession (Repository, Server, User, Password, Role);
  ...
  
  // Loads the Representation
  CATIPLMComponent * piPLMComponentOnPart = NULL; 
      
  CATUnicodeString strPLMType     = CAAWebInput.GetPLMEnvironment();
  CATUnicodeString strPLMInputId  = CAAWebInput.GetPLMInputId();
  CATUnicodeString strVersion     = CAAWebInput.GetPLMVersion();
  
  CATString        Environment    = strEnvironment.ConvertToChar();  // "PLMRepresentationDS"

  CATOmbLifeCycleRootsBag Bag;
  
  rc = ::CAAOpenPLMComponent (strPLMType.ConvertToChar(), strPLMInputId, strVersion, IID_CATIPLMComponent, (void**)&amp; piPLMComponentOnPart, Bag, TRUE);

  CATIMmiPrtContainer * piPrtContainer = NULL;
  
  if(SUCCEEDED(rc) &amp;&amp; (NULL != piPLMComponentOnPart))
    {
    CATIPsiRepresentationLoadMode_var spLoadMode = piPLMComponentOnPart;
    if(NULL_var != spLoadMode)
      rc = spLoadMode -&gt; ChangeLoadingMode (CATIPsiRepresentationLoadMode::EditMode);

     cout &lt;&lt; " (CAAStmWeb) The Part Representation " &lt;&lt; strPLMInputId.ConvertToChar() &lt;&lt; " is opened." &lt;&lt; endl;
      
    CATIPLMNavRepReference * piNavRepRef = NULL ; 

    rc = piPLMComponentOnPart -&gt; QueryInterface (IID_CATIPLMNavRepReference, (void**)&amp; piNavRepRef);

    if(SUCCEEDED(rc) &amp;&amp; (NULL != piNavRepRef))
      {
      rc = piNavRepRef -&gt; RetrieveApplicativeContainer ("CATPrtCont", IID_CATIMmiPrtContainer, (void**)&amp; piPrtContainer);
        
      piNavRepRef -&gt; Release();
      piNavRepRef = NULL ;
      }

  ...

  // Interfaces to manage Aerospace Sheet Metal Features:
  CATIMmiMechanicalFeature_var      spMechFeatOnPart;
  CATIAerospaceSheetMetalFactory *  piAslFactory  = NULL;  // ASM Factory
  CATIMmiMechanicalFeature *        piWebSpec     = NULL;  // Web Feature
  CATIStmWeb *                      piStmWeb      = NULL;  // Web public interface
  ...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Create"></a>Creating the Web Feature</h3>
<p>Create a Web feature using the <code>CreateWeb</code> method of <em>CATIAerospaceSheetMetalFactory</em>: 
this method will create all internal features and links between the attributes of 
the Web. Due to only one Web may exist in a Part we try.</p>
<p>First to find if a Web exist:</p>
<pre class="code">
...
// Try to retrieve the Web Feature :

if(NULL_var != spMechFeatOnPart)
{
  CATIAerospaceSheetMetalServices * pAslServices = NULL;

  rc = spMechFeatOnPart -&gt; QueryInterface(IID_CATIAerospaceSheetMetalServices, (void**)&amp; pAslServices) ;

  if(SUCCEEDED(rc))
  { 
    rc = pAslServices -&gt; RetrieveTheWeb (&amp;piWebSpec);

    pAslServices -&gt; Release();
    pAslServices = NULL;
  }
}
...
// No Web found : creation of a new one
rc = piAslFactory -&gt; CreateWeb (spMechFeatOnPart, &amp;piWebSpec);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Parameters"></a>Setting the Web Parameters</h3>
<p>Set the Web parameters according to the values stored in CAAWebInput, i.e: Support: 
set a <em>CATIMmiMechanicalFeature</em> pointer.</p>
<pre class="code">
...
// Support :
// ---------
if(SUCCEEDED(rc) &amp;&amp; (CAAWebInput.GetSupportGeomToSet()))
{
  // Search the Web Support input specification :
  CATIMmiMechanicalFeature * pSupportSpec = NULL;

  rc = CAASmaTools.FindFeatureInSpecTree (spMechFeatOnPart, CAAWebInput.GetSupportGeomName(), &amp;pSupportSpec);

  if(SUCCEEDED(rc) &amp;&amp; (NULL != pSupportSpec)) 
  {
    // Set the Web Support :
    rc = piStmWeb -&gt; SetSupport(pSupportSpec);
    ...
</pre>
<p>i.e : Material orientation: set a CATOrientation</p>
<pre class="code">...
// Support Material orientation :
// ------------------------------ 
if(SUCCEEDED(rc) &amp;&amp; (CAAWebInput.GetMaterialOrientToSet()))
{
  rc = piStmWeb -&gt; SetMaterialOrient(CAAWebInput.GetMaterialOrient());</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Update"></a>Updating the Web Feature</h3>
<p>We suggest to update the Part Feature instead of the Web to force all internal 
links of the Web to re-build:</p>
<p>This step is not necessary if &quot;DISPLAY:&quot; has been chosen.</p>
<pre class="code">// Update the Part : 
rc = CAASmaTools.Update (spMechFeatOnPart);</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Save"></a>Saving the Representation Reference in the Database.</h3>
<p>This step is NOT applied if &quot;DISPLAY:&quot; has been chosen.</p>
<pre class="code">// Save the PLM Component
rc = CATAdpOpenSaveServices::Save ();</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Close"></a>Closing the PLM Session</h3>
<p>Release the interface pointers and close the session.</p>
<pre class="code">// Close the PLM session
rc = ::CAAAdpCloseSession();</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create, display or modify a Web feature.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAAslTaFeatures.htm">An Overview of the Aerospace Sheetmetal 
		Design Features</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2005]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
