<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>3DPassport and the CAS Protocol</title>
</head>

<body onload="createToc();highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>3DPassport and the CAS Protocol</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article presents the main concepts to know when dealing with the log in, and the log off on any application making up the <b>3D</b>EXPERIENCE platform.</p>
		<div id="toc"></div>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Drivers"></a>A unique interface</h2>
<p>The 3DPassport is the key application to manage efficiently and safely the authentication, the login and the logoff on the <b>3D</b>EXPERIENCE platform. It is due to the fact it is the unique interface for all applications of the <b>3D</b>EXPERIENCE platform. Let's see how.</p> 
<h3><a name="Authentication"></a>For Authentication</h3>
<p>The 3DPassport is the application managing the repositories containing the Enterprise information systems enabling users to be connected to the <b>3D</b>EXPERIENCE platform. </p>
<table>
  <tr><td>
		<img alt="Manage ID Repositories" height="50%" width="50%" src="images/CAAUniqueAuthenticationMngt.png"/></td></tr>
</table>
<p>The 3DPassport being located between the  user identification systems, and  the <b>3D</b>EXPERIENCE platform applications, it provides for them a unique interface to manage the authentication.</p>
<ul>
  <li>A new repository does not imply any integration for the applications. The 3DPassport manages itself the new repository, and will authenticate the new users for any applications of the <b>3D</b>EXPERIENCE platform</li>
   <li>A new application does not need a specific integration for each repository. The unique protocole defined by the 3DPassport enables the new application to take befinit of all repositories</li>
</ul>
<p>This unique interface enables the <b>3D</b>EXPERIENCE platform to guaranty a safe access and sharing of these repositories by using secured API. </p>
<h3><a name="Drivers"></a>For Sign on</h3>
<p>The 3DPassport is also the application providing the single sign on (SSO) for the <b>3D</b>EXPERIENCE platform. It means the end user will have to provide just once his/her credentials to be logged to any application.</p>
<ul>
<li>After his/her first log in for one application, his/her next log-in for other applications will be automatically granted</li>
<li>The applications between them could exchange user identity without requiring another log in.</li>
</ul>   
<table>
  <tr><td>
		<img alt="Manage SSO" height="50%" width="50%" src="images/CAASSOMngt.png"/></td></tr>
</table>
<p>In this picture just above, once the end user signs on to the 3DSwYm application, a request to access any other applications of the <b>3D</b>EXPERIENCE platform, 
either by the end-user him/her self, or from 3DSwYm itself, will be granted. </p>
<p>The 3DPassport being the central application for the authetication can propagate session and identity to all <b>3D</b>EXPERIENCE platform services.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="ForLogoff"></a>For Log off </h3>
<p>The 3DPassport implements the single sign off, or single log off (SLO). It means that once the end user request a log off from one application, he/she can be automatically logged off from the others. 
Indeed, after a log off, the 3DPassport gives the hand to the applications having a opened session for the end user, and lets them the choice to log off or not this user. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="CAS"></a>CAS Protocol</h2>
<p>The Central Authentication Service (CAS) [<a href="#References"]>1</a>] is a single sign-on protocol for the web. Its purpose is to permit a user to access multiple applications while providing their credentials 
(such as userid and password) only once. It also allows web applications to authenticate users without gaining access to a user's security credentials, such as a password. </p>
<p>The CAS protocol involves at least three parties: a <b>client web browser</b>, <b>web applications</b> requesting authentication, and the <b>CAS server</b>. </p>
<table>
  <tr><td>
		<img alt="CAS Client/Server" height="50%" width="50%" src="images/CAACASClientServer.png"/></td></tr>
</table>
<p>This picture shows the three parts: top above the client web browser, in the middle the web applications requesting authentication, each one hosting a CAS client, and at the bottom the 3DPassport  hosting the CAS java CAS server.</p>

<p>For the web application of the <b>3D</b>EXPERIENCE platform, the 3DPassport provides the CAS Client components available for different platforms and technologies (java, php,.net,C++). By doing that, the 3DPassport ensures 
a unified and hight level secured authentication protocol. </p>
 
<p>The CAS server - the core application - exposes APIs to perform a standard <b>log in</b>  (Single Sign On), and <b>log out</b>  ( Single Log Out). Let's now describe in details 
the CAS protocol implemented by the 3DPassport for these two scenarios.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="SSO"></a>Log in - SSO</h3>
<p>Single sign-on (SSO) is a property of access control of multiple related, but independent software systems. With this property a user logs in once and gains access 
to all systems without being prompted to log in again at each of them. </p>
<h4>Logical Architecture</h4>
<p>The following diagram presents in a first glance the SSO workflow managed by the 3DPassport, and how the authentication is ensured.</p>
<table>
  <tr><td>
		<img alt="Manage SSO" src="images/CAASSOWorkflow.png"/></td></tr>
</table>
<ol>
<li>User accesses a web application ( or a Service Provider) resource on which he/she is not authenticated</li>
<li>(a/b) The CAS client embedded in the Service Provider redirects the user to 3DPassport CAS server</li>
<li>The user provides his/her credentials through the login page </li>
<li>(a/b If credentials are valid, CAS server responds with a HTPP redirect with a <b>Service Ticket</b> (ST) in the URL parameters and a <b>CASTGC</b> cookie in the headers of the response.
 The user is redirected to the service provider URL with the Service Ticket </b>
<li>The CAS client of the service provider validates the ST  against CAS server. The CAS server sends back the user identity and details to the service provider </b>
<li>The service provider returns the resource to the browser with a <b>application session</b> in the headers. The user is now logged on the service provider </li>
</ol>
<p>The next diagram zooms the exchanges between, and inside, these three componants (browser,3D Passport,web application), and adds a forth component, the enterprise information system, detaining the user identity.</p>
<table>
  <tr><td>
		<img alt="SSO in details" src="images/CAASSODetails1.png"/></td></tr>
</table>
<ol>
<li>We assume that the user is not authenticated  against the 3DSPassport and tries to access a protected resource of a web application. This application will be named service provider (SP) in the next steps </li>
<li>The request is filtered by the SP's CAS Assertion Consumer Service (ACS exposed by CAS Client) to check if any valid authenticated assertion exists in the user session </li>
<li>The SP's CAS client service challenges 3DPassport for SSO by redirecting the user to 3DPassport frontend. Since there is no authentication information in the request, the user is redirected to the 3D Passport login page. In this  step, 3DPassport generates a login ticket (<b>LT</b>), which will be included in the login form. 
The LT  is used as CSRF [<a href="#References"]>2</a>] token to prevent automatic replay of authentication request.</li>
<li>The user authenticates with his/her credentials (typically a username/password) </li>
<li>Credentials are forwarded to the SSO service which bound to a user repository checks the username/password validity. In this example, 3DPassport is plugged to a Enterprise Information System (EIS) identity provider's user directory (ex: LDAP repository).
If authentication is successful, 3DPassport retrieves user attributes (email,address,...) from the EIS user directory</li>
<li>3DPassport stores retrieved user attributes in its local user store</li>
<li>3DPassport SSO service redirects to the SP with the authentication cookie <b>(CASTGC)</b>, and a Service Ticket <b>(ST)</b> as URL parameter</li>
<li>The SP's CAS ACS  validates the Service Ticket and retrieves user identity & attributes from the CAS SSO service. A <b>user session</b> is then created on the SP (usually named sessionID)</li>
<li>The user is now authenticated on the SP. The SP returns the resource content to the browser with a valid authenticated sessionID in the response.</li>
</ol>
<p>Now, let's see how this logical diagram has been implemented through the HTTP procotol, and how/when the different elements of security (CASTGC/ST/LT/sessionID) are created and exchanged.</p>
<h4>HTTP Workflow</h4>
<p>The first diagram just below shows the HTTP requests, and their responses, to retrieve a resource from the service provider A. For this first request, the user is not authentified with the 3DPassport.</p>
<table>
  <tr><td>
		<img alt="SSO http" src="images/CAAHTTPRequest-A.png"/></td></tr>
</table>
<p>The shema can be split in six workflow zones. Each one is identified by a blue balloon on the left of the picture.</p>
<ol>
<li>It starts by an explicit call from the browser to the service provider A. The call (GET HTTP) contains the requested resource by its url.</li>
<li>Then there are several calls between the browser, the service provider,  and the 3DPassport. Each call comes from a previous HTTP request whose the response is an URL-redirection. 
The first call to 3DPassport returns a java session id (JSESSIONID) located in a cookie. </li>
<li>3DPassport returns the login page as response. This login page contains a login ticket (LT).</li>
<li>The end user is explicitely invited to give his/her credential (login/password) to the 3DPassport. The POST request sent to the 3DPasspor contains the login/passport as well the LT.</li>
<li>A zone of http requests between the browser, the service provider and the 3DPassport. Each call comes from a previous HTTP request whose the response is an URL- redirection.</li>
<li>Finally, the requested resource of the service provider A is returned to the browser while a service provider session has been opened for this user.</li>
</ol>
<p>With two explicite calls (the first GET, and the POST), you have got a resource from the service provider A.</p>  
<p>Now the end user is authenticated to the <b>3D</b>EXPERIENCE platform, let's see the workflow to retrieve a resource from another service provider than A. </p>
<table>
  <tr><td> <img alt="SSO http" src="images/CAAHTTPRequest-B.png"/></td></tr>
</table>
 
<ol>
<li>It starts by an explicit call from the browser to the service provider B. The call (GET HTTP) contains the requested resource by its url. There is no user session for B, so the service provider first requests an authentication against the 
3DPassport. </li>
<li>This zone contains requests between the browser, the 3Dpassport and the service provider B. Since the 3DPassport has a CASTGC cookie for this user, a new authentication will be not necessary. </li>
<li>Finally the requested resource of the service provider B is returned to the browser while a service provider session has been opened for this user.</li>
</ol>
 <p>With one call you have got a resource from the service provider B. A new authentication has not been asked for the end user.</p>
 
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="SLO"></a>Log out - SLO</h3>
<p>The 3DPassport log out consists in primarily to delete the cookie generated by the CAS server when the user has been authenticated (CASTGC cookie). Without this authentication cookie, 
the user could not anymore request a resource on a service provider if he/she does not have already an opened session on this provider. But the deletion of the client's single sign-on CAS session does not prevent the user to reach resources 
on a service provider for which his/her has still a client session id.</p>
<p>When the log out is performed on a service provider, it first deletes the user client session id, and then redirects to the 3DPassport log out.</p>
<p>The SLO, which stands for Single log out, is supported by 3DPassport. By this means the CAS server gives the hand to each  service provider having been granted for the CASTGC associated with the user. 
Each service provider can implement, or not, the SLO. If it supports, the end user will lost his/her session for this provider. </p> 
<p>This table gives the status for each Web application of the <b>3D</b>EXPERIENCE platform:</p>
<table class="fill">
<tr> <th>Web Application </th><th>SLO Support</th> </tr>
<tr> <td>3DSwYm </td><td>yes</td> </tr>
<tr> <td>3DDashboard </td><td>?</td> </tr>
<tr> <td>6WTags </td><td>?</td> </tr>
</table>

<h4>HTTP Workflow</h4>
<p>let's restart from the point we left the log in scenario. The end user is connected to the service provider A and B. 
Then he/she perfoms a log out for the Service provider A. In this scenario, the services, A and B, both implement the SLO. Let's see the HTTP request/response workflow it triggers.</p>
<table>
  <tr><td> <img alt="SSO http" src="images/CAASLOMngt.png"/></td></tr>
</table>
<p>On the left you can see the timelife of each session cookie. At the begining , there is the CASTGC, and the session id for A and B</p>
<ol>
  <li>The end user performs a log out to the service provider A. </li>
   <li>The HTTP response mentions the session id of the provider A is expired, and re-directs to the 3DPassport logout service</li>
    <li>The redirection to the 3DPassport logout service. It will trigger the next three requests ( asynchrone ) sent from the 3DPassport CAS server.</li>
   <li>3DPassport informs the browser the CASTGC for the user has expired. </li>
   <li>3DPassport informs a document to the service provider A. The protocole is a HTTP POST request containing a SAML Logout Request XML document. For A,  it is without effect since the user session is still expired (first step).</li>
   <li>3DPassport sends a second SAML message to B </li>
    <li>The service provider B sends a HTTP request to the browser to delete the user session id. There is no more Session ID in the browser.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Glossary"></a>Glossary</h2>
<h3><a name="LT"></a>Login Ticket (LT)</h3>
<p>It is a random, opaque string generated by the java CAS Server, and set in the login page form to prevent CSRF attack [<a href="#References"]>2</a>]. It must be passed along with the credential information when authenticate 
on CAS Server.</p>
<p>Its timelife is 2mn </p>
<h3><a name="ST"></a>Service Ticket (ST)</h3>
<p>A service ticket is generated by the java CAS Server per user and per service ( url). There are unique, and usable once, and valid for 2 mn only.  They are passed as URL get parameters.</p>
<h3><a name="CASTGC"></a>CAS Ticket Granted Cookie (CASTGC)</h3>
<p>When authenticated on CAS server, the client/browser receives a cookie (CASTGC) valid for 2h (renewable) or 1 week if "remember me" box is checked on authentication. 
Each time the CASTGC is used to authenticate on a service provider, the 2h timer is reset for another 2h. </p>
<p>If the user session expires on a service provider, and the CASTGC is still valid, the user can be automatically reauthenticated on the service provider.</p>
<h3><a name="SessionID"></a>Session ID (cookie)</h3>
<p>Each web application protects its access by giving a Session ID. When the time is over, the end user must request a new session ID to request again resources from the web application.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>3DPassport implements the <b>CAS protocol</b> to ensure a unique (and secure) authentication interface among all <b>3D</b>EXPERIENCE platform web applications. It means the implementation of two mechanisms:</p> 
<ul>
<li>The CAS Single Sign On (<b>SSO</b>), which means once the end user has given his/her credentials (login/password), he/she has access, without a new authentication, 
to the protected resources of any web applications of the <b>3D</b>EXPERIENCE platform.</li>
<li>The CAS Single Log Out (<b>SLO</b>), which means once the end user requests a log out for one web application, he/she is also deconnected from all web applications of the 
<b>3D</b>EXPERIENCE platform implementing themselves the SLO. For the other ones,
if the end user has already a session id for them, he/she can still make request for their resources.</li>
</ul>
<p>We invite the reader to have a look to the referenced article [<a href="#References"]>3</a>]. It shows the details of all the HTTP calls (requests and responses) exchanged during a Login/Logout with 3DSwYm.</p>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr><td>[1]</td><td><a href="#" onclick="javascript:CAAlinkUrl('http://www.jasig.org/cas/protocol#proxy-cas-2.0');return false;">CAS Protocol</a></td></tr>
		<td>[2]</td><td><a href="#" onclick="javascript:CAAlinkUrl('http://en.wikipedia.org/wiki/Cross-site_request_forgery');return false;">Cross-Site Request Forgery</a></td></tr>
		<td>[3]</td><td><a href="../CAASwymInfra/CAA3DSwymUcGettingStarted.htm">Getting Started</a></td></tr>	 
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [May 2014]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
