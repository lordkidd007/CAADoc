<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Customize the Manufactured Item Contextual Menu on the Manufactured Item Definition App</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Customize the Manufactured Item Contextual Menu on the Manufactured Item Definition App</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAAPPRLPEProcessContextualMenu use case. It 
		explains how to implement the DELIPPRLiveProcessContextualMenu to customize 
		the Manufactured Item Contextual menu on the Manufactured Item Definition App.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPPRLPEProcessContextualMenu Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPPRLPEProcessContextualMenu 
						Do</a></li>
					<li><a href="#How">How to Launch CAAPPRLPEProcessContextualMenu</a></li>
					<li><a href="#Where">Where to Find the CAAPPRLPEProcessContextualMenu 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you to create your own submenu groups under 
Manufactured Items contextual menus when working in the Manufactured Item Definition App. You 
will learn also how to add sub-menu items to these groups to launch a command.</p>
<ul>
	<li>Describing the different steps dedicated to the knowhow of the company through 
		the customization.</li>
	<li>Implementing the methods of DELIPPRLiveProcessContextualMenu to create submenu 
		groups under Manufactured Items contextual menus.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPPRLPEProcessContextualMenu Use Case</h2>
<p>CAAPPRLPEProcessContextualMenu is a use case of the CAADELPPRLiveProcessItf.edu 
framework that illustrates Manufactured Item Definition App customization capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPPRLPEProcessContextualMenu Do</h3>
<p>This use case illustrate how to add custom submenu grups on the menu contextual 
from a Manufactured Item Tile and Manufactured Item Nodes on the left tree of the Manufactured Item Definition 
App:</p>
<ul>
	<li>Declare submenu groups into the contextual menu of a Manufactured Item Tile or Manufactured Item 
		Node on the Manufactured Item Definition Editor.</li>
	<li>Add submenu items into the defined submenu groups and associate commands 
		to be launched by these submenus.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPPRLPEProcessContextualMenu</h3>
<p>To use CAAPPRLPEProcessContextualMenu, you will need to:</p>
<ul>
	<li>Set up the <strong>build time</strong> environment, then compile CAAPPRLPEProcessContextualMenu.m 
		module along with its prerequisites [<a href="#References">1</a>].</li>
	<li>Edit the interface dictionary, that is, the CAADELPPRLiveProcessItf.edu.dico 
		file located in:
		<p><code>InstallRootFolder\CAADoc\CAADELPPRLiveProcessItf.edu\CNext\code\dictionary\</code></p>
		<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is 
		the folder where the API CD-ROM is installed, and decomment the following 
		lines by removing the '#CAA#' character:</p>
		<pre class="code">VPMFctProcessRootOccurrence DELIPPRLiveProcessContextualMenu  libCAAPPRLPEProcessContextualMenu
VPMFctProcessOccurrence     DELIPPRLiveProcessContextualMenu  libCAAPPRLPEProcessContextualMenu
DELPPRLiveProxy             DELIPPRLiveProcessContextualMenu  libCAAPPRLPEProcessContextualMenu</pre>
	</li>
	<li>Set up the <strong>run time</strong> environment.</li>
	<li>Launch a CATIA V6 session.</li>
	<li>Go to the Manufactured Item Definition App.</li>
	<li>Right click on a Manufactured Item Tile or Node on the left tree.</li>
	<li>You will see two new custom submenus groups at the end of the standard Manufactured Item 
		contextual menu. These groups have each one a submenu item that launch a 
		command.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPPRLPEProcessContextualMenu Code</h3>
<p>The CAAPPRLPEProcessContextualMenu use case code is located in the CAAPPRLPEProcessContextualMenu.m 
module of the CAADELPPRLiveProcessItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAADELPPRLiveProcessItf.edu\CAAPPRLPEProcessContextualMenu.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The class CAAPPRLPEProcessContextualMenu, implements the Interface DELIPPRLiveProcessContextualMenu, 
this implementation is located on the file CAAPPRLPEProcessContextualMenu.m\src\CAAPPRLPEProcessContextualMenu.cpp, 
Its purpose is to declare the submenu groups to be created and insert the submenu 
items accordingly. Only two methods need be defined: GetContextualSubMenusNames 
and GetContextualSubMenu.</p>
<p>Here is the declaration of this class:</p>
<pre class="code">class CAAPPRLPEProcessContextualMenu: public DELIPPRLiveProcessContextualMenu
{
  CATDeclareClass;
  public:
    // Standard constructors and destructors for an implementation class
    // -----------------------------------------------------------------
    CAAPPRLPEProcessContextualMenu();
    virtual ~CAAPPRLPEProcessContextualMenu();
    // the implementantion of this function should declare the submenus names to be added
    virtual HRESULT GetContextualSubMenusNames(CATListValCATString* pListSubMenusNames );
    // the implementantion of this function should add the contextual sub menu items

    // on the contairner identified with the name iSubMenuName
    virtual HRESULT GetContextualSubMenu(const CATString&amp; iSubMenuName,CATCmdContainer*&amp; pMenu);

  private:
    // The copy constructor and the equal operator must not be implemented
    // -------------------------------------------------------------------
    CAAPPRLPEProcessContextualMenu (CAAPPRLPEProcessContextualMenu &amp;);
    CAAPPRLPEProcessContextualMenu&amp; operator=(CAAPPRLPEProcessContextualMenu &amp;);
};</pre>
<p>There are two logical steps in CAAPPRLiveProcessWorkbenchAddin:</p>
<ol>
	<li><a href="#Step1">Implementing the Interface</a></li>
	<li><a href="#Step2">Declaring the Submenu Groups</a></li>
	<li><a href="#Step3">Adding the Contextual Submenus Items According to the Declared 
		Groups</a></li>
</ol>
<p>We now comment each of those sections by looking at the code.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Implementing the Interface</h3>
<p>When right clicking on a Manufactured Item tile or node the system will look for an implementation 
of the interface DELIPPRLiveProcessContextualMenu on the current object, please 
remark that this implementation should be declared as extension of these three late 
types:</p>
<ol>
	<li>VPMFctProcessOccurrence</li>
	<li>VPMFctProcessRootOccurrence</li>
	<li>DELPPRLiveProxy</li>
</ol>
<p>If you look at the file: CAAPPRLPEProcessContextualMenu.m\src\CAAPPRLPEProcessContextualMenu.cpp. 
These declarations are done using the macro <strong>CATBeginImplementClass</strong>.</p>
<p>The Late Type Names: VPMFctProcessRootOccurrence and VPMFctProcessOccurrence, 
corresponds to the root Manufactured Item and a Manufactured Item respectively, and the Late Type name 
DELPPRLiveProxy corresponds to a Manufactured Item tile.</p>
<p>Here we use also the <strong>CATImplementBOA</strong> Macro to declare the interface implementation.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Declaring the Submenu Groups</h3>
<p>The desired submenu groups to be created should be declared on the implementation 
of the function: GetContextualSubMenusNames, as shown.</p>
<pre class="code">HRESULT CAAPPRLPEProcessContextualMenu::GetContextualSubMenusNames(CATListValCATString* pListSubMenusNames)
{
  ...
  // add two submenu groups
  pListSubMenusNames-&gt;Append(&quot;CustomSubMenu1&quot;);
  pListSubMenusNames-&gt;Append(&quot;CustomSubMenu2&quot;);
  return S_OK;
}</pre>
<p>The parameter of this function is a list of strings where we must add the submenu 
identifiers, Here two Submenus will be add by the system, with identifiers: CustomSubMenu1 
and CustomSubMenu2 respectively. These identifiers will be used later when adding 
the submenu items. And when defining the text that will be displayed to the user 
on the resource file.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Adding the Contextual Submenus Items According to the Declared 
Groups</h3>
<p>For each submenu group declared on the previous function the system will call 
the implementation of the function GetContextualSubMenu, as shown.</p>
<pre class="code">HRESULT CAAPPRLPEProcessContextualMenu::GetContextualSubMenu(const CATString&amp; iSubMenuName, CATCmdContainer*&amp; pMenu)
{
  ...
  // depending on the actual submenu identifier
  if (iSubMenuName==&quot;CustomSubMenu1&quot;) // insert the submenu items for CustomSubMenu1
  {
    // create a command starter called CreationAssemblyCmd
    NewAccess(CATCmdStarter,pCmdStarter,DELPRDCreateScopeCmd);

    // associate the starter to the command
    DELPPRInsertNewCreateAssemblyCmdHdr
    // this command creates a new Manufacturing Assembly under the selected One.
    SetAccessCommand(pCmdStarter, &quot;DELPPRInsertNewCreateAssemblyCmdHdr&quot;);

    // add the submenu item (command starter) into the submenu group container.
    AddAccessChild(pMenu,pCmdStarter);
  }
  else if iSubMenuName==&quot;CustomSubMenu2&quot;) // insert the submenu items for CustomSubMenu2
  {
    // create a command starter called DELPPRLiveLinkCreationCmd
    NewAccess(CATCmdStarter,pCmdStarter,DELPRDCreateMaterializationLinkCmd);

    // associate the starter to the command DELPPRLiveLinkCreationCmdHdr
    // this command creates a precedence constraint between two Manufactured Items
    SetAccessCommand(pCmdStarter, &quot;DELPPRLiveLinkCreationCmdHdr&quot;);

    // add the submenu item (command starter) into the submenu group container.
    AddAccessChild(pMenu,pCmdStarter);
  }
  return S_OK;
}</pre>
<p>This function will add the submenu items according to the actual iSubMenuName 
value, passed to the function as a parameter. The submenu items should be added 
into the command container pointed by the pMenu parameter.</p>
<h4>User Interface</h4>
<p>The title of the Submenu groups being added will should is defined on the resource 
file: DELPPRLiveProcessContextualMenu.CATNls, as follows.</p>
<pre class="code">CustomSubMenu1.Title=&quot;Custom Menu 1&quot;;
CustomSubMenu2.Title=&quot;Custom Menu 2&quot;;</pre>
<p>Please remark that the identifiers declared by the function GetContextualSubMenusNames 
will be used to identify these texts in the resource file.</p>
<p>The resource file is located in : <code>InstallRootFolder\CAADoc\CAADELPPRLiveProcessItf.edu\CNext\resources\msgcatalog</code> 
directory.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This article provides an example on how to use the DELIPPRLiveProcessContextualMenu 
interface to add custom submenus under the Manufactured Items contextual menus.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="References"></a>References</h3>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="History"></a>History</h3>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Apr 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
