<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml">
	<head>
		<title>Requirement Modeler- Technical Article</title>
		<meta content="False" name="vs_showGrid">
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<meta content="Microsoft FrontPage 12.0" name="GENERATOR">
		<meta content="FrontPage.Editor.Document" name="ProgId">
		<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
	<script language="JavaScript" src="../CAADocJavaScript/submit.js"></script>
		
	<body>
	<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Requirement Modeler- Technical Article</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
		 <!---------------------------------comment------------------------------------->
		<table class="abstract">
			<tr>
				<td>
					<h2><a name="Top"></a>Abstract</h2>
					<p>The objective of this article is to provide an overview 
					of the Requirement Modeler.&nbsp;Along with Requirement modeler 
					objects this articles speaks about Requirement APIs [<a href="#References">1</a>] 
					and the connectivity between Requirement Objects.</p>
					<ul>
						<li><A href="#Introduction">Introduction to Requirement Modeler</A>
						<li><A href="#Capabilities">Requirement Central Capabilities </A>
						<li><a href="#Entity and Relations">Requirement Modeler Objects: Entity and Relations</a>
						<li><a href="#Valid Requirement Data Model">Understanding and Creating a Valid Requirement Data Model</a>
						<li><a href="#Interfaces">Interfaces</a>
						<li><A href="#InShort">In Short</A>
						<li><A href="#References">References</A>

					</ul>
				</td>
			</tr>
		</table>
		 <!---------------------------------comment------------------------------------->
			<h2><A name="Introduction"></A>Introduction to Requirement Modeler
 
</h2>
<p>Requirements Central is a powerful change proposal management tool. It allows you to create and maintain Requirement 
data for a particular department.
Requirements are intended to propose changes or additions to hardware or software products. Requirements are created by the Requirement Manager with input into a 
product's definition. Requirements are the initial point at which a request is analyzed. New customer requirements are defined as 
Candidate Requirements and are related to the model for commitment. A single Candidate 
Requirement can be defined as a structure of requirements (sub requirements).
</p>
	
		
<script type="text/javascript">insertLinkToTop()</script>


<h2><A name="Capabilities"></A>Requirements Central Capabilities</h2>

	<p>With Requirements Central, you can capture and import requirements from an external specification, work with traceability reports related to requirement specifications, 
	and manage decisions made about proposed requirements. You can also perform various functions associated with the management of requirements, 
	such as defining and modifying tasks, and promoting tasks to the next level for approval. </p>
<SCRIPT type=text/javascript>insertLinkToTop();</SCRIPT>
	
<h2><A name="Entity and Relations"></A>Requirement Modeler Objects: Entity and Relationship</h2>
<p>Requirement Modeler is based on E/R architecture (Entity &amp; Relationships). 
Entities are various PLM Objects. These Entities are interconnected by 
Relations.</p>
<h3>Types of Requirement Entities</h3>
<ol>
	<li>Specification Folder</li>
	<li>Requirement Specification</li>
	<li>Requirement</li>
	<li>Chapter</li>
	<li>Comment</li>
</ol>
<h3>Types of Requirement Relations (those existing between the various Entities)</h3>
<ol>
	<li>Specification Structure</li>
	<li>Sub-Requirement Relationship</li>
	<li>Derived Requirement</li>
	<li>Folder Content</li>
	<li>Sub-Folder</li>
</ol>
<p><strong>REQUIREMENT: </strong>Requirement is some kind of proposal or suggestion for change in some 
hardware or software part of a product</p>
	<p><strong>SUB-REQUIREMENT: </strong>Sub-Requirement is nothing but a Requirement which is aggregated under Main Requirement by a Sub-Requirement type of Relation </p>
<p><strong>DERIVED-REQUIREMENT: </strong>Derived-Requirement does talk about a different Requirement but it is a 
subset of a Requirement and is aggregated under some Main Requirement </p>
	<p><span class="style1">Note</span>: All the above mentioned types of Requirements are the same objects 
	i.e. Requirement object. But the Relation / link between them decides what 
	type of relevant content will be present related to the Main Requirement</p>
<SCRIPT type=text/javascript>insertLinkToTop();</SCRIPT>
	
<h2><A name="Valid Requirement Data Model"></A>Understanding and Creating a Valid Requirement Data Model</h2>
	<p>Understanding the Requirement Data model means studying two aspects</p>
	<ul>
		<li><strong>Which</strong> are the different types of Requirement Objects?</li>
		<li><strong>Why</strong> to create those Requirement Objects?</li>
	</ul>
	<p>Creating a Requirement Data Model means learning</p>
	<ul>
		<li><strong>How</strong> to create Requirement Objects and the aggregation rules?</li>
	</ul>
<table>
	<caption><em>Fig. 1. Different types of Relations that can exist between 
	Entities</em></caption>
	<tr>
		<td>
		<img alt="" src="images/CAARmiReqEntAndRels.jpg" width="634" height="776"></td>
	</tr>
</table>
<p> The above diagram clearly illustrates the different types of Relations that 
can exist between the Requirement Entities. This will help to create a valid 
data model of Requirements Central.</p>
	<p> Following table will also help you to know which are the Valid 
	aggregation of Requirements Central Objects</p>
	<table>
		<caption style="width: 100px"><em>Req Table</em></caption>
		<tr>
			<td>
			<img alt="" src="images/CAARmiValidDataTable.jpg" width="620" height="392"></td>
		</tr>
	</table>
	<p>Based on the above mentioned information on valid data model, following 
	figure shows a typical data model</p>
<table>
	<caption style="width: 180px"><em>Requirement Data Model</em></caption>
	<tr>
		<td>
		<img alt="" src="images/CAARmiReqDataModel2.jpg" width="561" height="403"></td>
	</tr>
</table>
<SCRIPT type=text/javascript>insertLinkToTop();</SCRIPT>
	<h3>Lifecycle Management of Requirement Objects</h3>
<p> <strong>Creation</strong> : Requirement objects can be created only on Web 
side Requirements Central. There are no CAA Exposed APIs to create these 
objects.</p>
<p> <strong>Edition</strong> : There are no CAA exposed APIs to edit these objects</p>
<p> <strong>Navigation</strong>: There are CAA exposed APIs to open the Requirement 
objects in session of a rich client and navigate through the data model</p>
<p> <strong>Deletion</strong>: This is controlled on Web side by Requirements 
Central. No CAA exposed APIs to delete Requirement Objects</p>

<SCRIPT type=text/javascript>insertLinkToTop();</SCRIPT>

<h2><A name="Interfaces"></A> INTERFACES to work on different Requirement Objects</h2>
<p> To manage the different Requirement Entities we have provided methods 
through Interfaces</p>
<p> These interfaces will help you to navigate between the Requirement objects 
and also get information related to their properties</p>
<table>
	<caption><em>Fig. Interfaces to work with all Requirement Objects</em></caption>
	<tr>
		<td>
		<img alt="" src="images/CAARmiReqObjBehaviors.jpg" width="766" height="419"></td>
	</tr>
</table>
<p> To know more about functionalities provided by these interfaces, 
please refer to article [1] and the Use-Cases in Requirement Node.</p>

 <script type="text/javascript">insertLinkToTop()</script>
<h2><a name="InShort"></a>In Short</h2>
			<p>The article provides an introduction to Requirement Modeler along 
			with the various objects existing in it.</p>
			<script type="text/javascript">insertLinkToTop()</script>
			<!---------------------------------comment------------------------------------->
			<h2><a name="References"></a>References</h2>
			<table >
				<colgroup>
		<col valign="top" span="1">
	</colgroup>
	<tr>
       <td valign="top" height="12">[1]</td>
       <td>
       <a href="CAARmiTaReqModelerBehavior.htm">Requirement Modeler Behaviors</a></td>
     </tr>

	

			
				
			</table>
			 <!---------------------------------comment------------------------------------->
			<h2><a name="History"></a>History</h2>
			<table >
				<tr>
					<td vAlign="top">Version: <strong>1</strong> [Oct 2010]</td>
					<td>Document created</td>
				</tr>	
			</table>
			<script type="text/javascript">insertLinkToTop()</script>

			 <!---------------------------------comment------------------------------------->
		<script type="text/javascript">insertCopyright();</script>
	</body>
	</head>
</html>


