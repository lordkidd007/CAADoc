<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Exposing the Accommodation Features at PLM Level</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Exposing the Accommodation Features at PLM Level</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATAGTAccommodationUseItf use case. This use case 
		explains how to expose accommodation features to PLM level</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAAGTPLMPublication Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAAGTPLMPublication Do</a></li>
				<li><a href="#How">How to Launch CAAAGTPLMPublication</a></li>
				<li><a href="#Where">Where to Find the CAAAGTPLMPublication Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA AGT(Accommodation Design) Interfaces. Its main intent is to allow you to Expose Accommodation feature to PLM Level.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAAGTPLMPublication Use Case</h2>
<p>CAAAGTPLMPublication.m is a use case of the CAAAGTAccommodationDoc.edu framework 
that illustrates the CATIA AGT Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAAGTPLMPublication Do</h3>
<p>The goal of CAAAGTPLMPublication use case is to show how to expose Accommodation feature to PLM Level.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAAGTPLMPublication</h3>
<p>To launch CAAAGTPLMPublication , user need to set up the build time 
environment, then compile CAAAGTPLMPublication along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAAAGTPLMPublication Repository Server User Password SecutityCtx Environment V_Name AGTFeatureType&quot;</em></pre>
<p>where:</p>

<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment.</td>
	</tr>
	<tr>
		<th>V_Name</th>
		<td>The value of the <code>V_Name</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
	<tr>
		<th>AGTFeatureType</th>
		<td>The value of the <code>AGTFeatureType</code> is type of features to be exposed, refer the below table to get the type.</td>
	</tr>
</table>

<p>Table to get <code>AGTFeatureType</code>:</p>

<table class="fill">
	<tr>
		<th>Wall feature</th>
		<td> <code> AGTWall</code></td>
	</tr>
	<tr>
		<th>Ceiling feature</th>
		<td> <code> AGTCeiling</code></td>
	</tr>
	<tr>
		<th>Covering feature</th>
		<td> <code> AGTCovering</code></td>
	</tr>
	<tr>
		<th>Insulation feature</th>
		<td> <code> AGTInsulation</code></td>
	</tr>
	<tr>
		<th>DraughtStop feature</th>
		<td> <code> AGTDraughtStop</code></td>
	</tr>
	<tr>
		<th>FireBridge feature</th>
		<td> <code> AGTFireBridge</code></td>
	</tr>
	<tr>
		<th>Connector feature</th>
		<td> <code> AGTConnector</code></td>
	</tr>
	<tr>
		<th>Sill feature</th>
		<td> <code> AGTSill</code></td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>Root_Data_Test ---.000.3dxml</strong>
    file from the  <strong>CAAAGTPLMPublication.edu</strong> framework.
</p>
<p>
<code>InstallRootFolder\CAADoc\CAAAGTAccommodation.edu\InputData\Root_Data_Test.3dxml</code></p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>Add the Extensions with Suffix <strong>&quot;PLM_&quot;</strong> on server [<a href="#References">2</a>].</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>V_Name</strong></code></a>:
    <code>Root_Data_Test</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAAGTPLMPublication Code</h3>
<p>The CAAAGTPLMPublication use case is made of single file located in the 
CAAAGTPLMPublication.m module of the CAAAGTAccommodation.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAAGTAccommodation.edu\CAAAGTPLMPublication.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<th><em>CATPLMSessionServices</em></th>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<th><em>PLMPSISessionHelpers</em></th>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<th><em>CATAdpDictionaryServices</em></th>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<th><em>CATAdpQueryServices</em></th>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<th><em>CATAdpOpenSaveServices</em></th>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<th><em>CATIAGTPLMPublication</em></th>
		<td>Interface dedicated to navigate the Accommodation System.</td>
	</tr>
	<tr>
		<th><em>CATIAGTFeatPLMPublication</em></th>
		<td>Interface dedicated to navigate the features Accommodation System</td>
	</tr>
</table>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are 15 logical steps in Main:</p>
<ol>
	<li><a href="#Step1">Checking the Input Data</a></li>
	<li><a href="#Step2">Setting the Connection Parameters</a></li>
    <li><a href="#Step3">Creating a Session</a></li>
    <li><a href="#Step4">Setting the Current Environment to &quot;envToUse&quot; from Input</a></li>
    <li><a href="#Step5">Retrieving the Environment</a></li>
    <li><a href="#Step6">Retrieving the Customized Reference of the Product Modeler</a></li>
    <li><a href="#Step7">Opening the &quot;Root_Data_Test&quot; Model (arg[7])</a></li>
    <li><a href="#Step8">Opening the Product</a></li>
    <li><a href="#Step9">Getting the Root Occurrence from Root Product</a></li>
    <li><a href="#Step10">Getting AGTSystem, i.e. Pointer to <em>&quot;CATIPLMPublication&quot;</em></a></li>
    <li><a href="#Step11">Retrieving the Type of Object to Be Exposed</a></li>
    <li><a href="#Step12">Retrieving Objects to Publish</a></li>
    <li><a href="#Step13">Publishing Features</a></li>
    <li><a href="#Step14">Attaching Material</a></li>
    <li><a href="#Step15">Saving the Data</a></li>
    <li><a href="#Step16">Closing PLM Session</a></li>
</ol>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
...
if (9 != argc)
{
cout &lt;&lt; endl;
cout &lt;&lt;&quot;CAAAGTPLMPublication &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Environment&gt; &lt;V_Name&gt;&quot;&lt;&lt; endl;
cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Environment: A PLM environment containing PLMProductDS (a PRODUCT's custo).&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;V_Name: The V_Name of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;AGTFeatureType: The value of the AGTFeatureType is <em>AGTType</em> (Type of features) to be exposed.&quot; &lt;&lt;endl;
cout &lt;&lt; endl;
retCode = 91;
goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->

<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>Connection Parameters initialization.</p>
<pre class="code">...
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Repository&quot;, argv[1]);

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Server&quot;, argv[2]);

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserID&quot;, argv[3]);

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserPasswd&quot;, argv[4]);

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;SecurityCtx&quot;, argv[5]);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->

<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
hr = CATPLMSessionServices::InitPLMSession();
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Current Environment to &quot;envToUse&quot; from 
Input</h3>
<pre class="code">...
hr = PLMPSISessionHelpers::GetSessionHelpers(pSessionHelpers);
if (SUCCEEDED(hr) &amp;&amp; (NULL != pSessionHelpers))
{
  hr = pSessionHelpers-&gt; SetCurrentEnvironment(envToUse);
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving the Environment</h3>
<pre class="code">...
hr = CATAdpDictionaryServices::GetEnvironment(repository, envToUse, &amp;pIAdpEnvironment);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving the Customized Reference of the Product Modeler</h3>
<pre class="code">...
hr = CATCkePLMNavPublicServices::RetrieveKnowledgeType(&quot;VPMReference&quot;, hTypeModeler);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the &quot;Root_Data_Test&quot; Model (arg[7])</h3>
<pre class="code">...
identificationSetHarn.AddAttribute(&quot;V_Name&quot;,argv[7]);
hr = CATAdpPLMQueryServices::GetElementsFromAttributes(hTypeModeler,
                                                       attributeSet,
                                                       ListP_QueryResults) ;

if(1 &lt;= ListP_QueryResults.Size())
{
  pQueryResult = ListP_QueryResults[1] ;
  if(NULL != pQueryResult)
    hr = pQueryResult-&gt;GetIdentifier(pIPLMIdent) ;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Opening the Product</h3>
<pre class="code">...
  hr = adpOpener.CompleteAndOpen(pIPLMIdent,IID_CATIPLMProducts, (void**) &amp;pIPLMProduct);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the Root Occurrence from Root Product</h3>
<pre class="code">...
  hr = pIPLMProduct-&gt;QueryInterface(IID_CATIPLMNavReference, (void**)&amp;pIPLMNavRefOnRoot);
  if(SUCCEEDED(hr))
  {
    hr = CATPrdGetOccurrenceMngt(pIPrdOccurrenceMngt);
    if( SUCCEEDED(hr) &amp;&amp; ( NULL != pIPrdOccurrenceMngt ) )
      hr = pIPrdOccurrenceMngt-&gt;GetOrCreateRootOccurrence(pIPLMNavRefOnRoot, hRootNavOccurrence);
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Getting AGTSystem, i.e. Pointer to <em>&quot;CATIPLMPublication&quot;</em></h3>
<pre class="code" >...
  hr = GetAGTSystem(pIPLMProduct,pIUseAGTPLMPublication,pIUnkOccuAGTSystem);
</pre>
<p>Logic for GetAGTSystem is as given below:</p>
<pre class="code">...
  hNavOccurrence = ipIUnkRootObj;
  if( NULL_var != hNavOccurrence )
  {
    hr = hNavOccurrence-&gt;ListChildren(ListofPtrNavOccurrence) ;
    if( SUCCEEDED(hr) )
    {
      sizeChildren = ListofPtrNavOccurrence.Size() ;
      for(index = 1;index &lt;= sizeChildren ; index++)
      {
        if(NULL != pNavRef)  
        {  
          pNavRef-&gt;Release();  
          pNavRef = NULL;  
        } 

        pIElemNavOccurrence = ListofPtrNavOccurrence[index] ;
        if( NULL != pIElemNavOccurrence )
        {
          pIElemNavOccurrence-&gt;GetRelatedReference(pNavRef);
          if( NULL != pNavRef )
          {
            hr = pNavRef-&gt;QueryInterface(IID_CATIPLMPublication,(void  **) &amp;opIUseAGTPLMPublication);
            if( SUCCEEDED(hr) )
            {
              hr = pIElemNavOccurrence-&gt;QueryInterface(IID_CATBaseUnknown,(void  **) &amp;opIUnkOccuAGTSystem);
              break;
            }
            else
            {
              rc = GetAGTSystem( pIElemNavOccurrence, opIUseAGTPLMPublication, opIUnkOccuAGTSystem);
              if( SUCCEEDED( rc ) &amp;&amp; (NULL != opIUseAGTPLMPublication) &amp;&amp; ( NULL != opIUnkOccuAGTSystem ) )
                break;
            }
          }
        }
      }
    }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Retrieving the Type of Object to Be Exposed</h3>
<pre class="code">...
  typeOfFeatureToPublish = argv[8];
  hr = ConvertStringToAGTType( typeOfFeatureToPublish, enumAGTType );
...</pre>
    <p>Logic for <em>ConvertStringToAGTType</em> as shown below:</p>

<pre class="code">...
  if      ( itypeOfFeatureToPublish ==     "AGTRampBody"   )
    oeType = CATAGTType::AGTRampBody;

  else if ( itypeOfFeatureToPublish ==     "AGTWall"    )
    oeType = CATAGTType::AGTWall;

  else if ( itypeOfFeatureToPublish ==   "AGTCeiling"   )
    oeType = CATAGTType::AGTCeiling;

  else if ( itypeOfFeatureToPublish ==   "AGTCovering"  )
    oeType = CATAGTType::AGTCovering;

  else if ( itypeOfFeatureToPublish ==  "AGTInsulation" )
    oeType = CATAGTType::AGTInsulation;

  else if ( itypeOfFeatureToPublish == "AGTDraughtStop" )
    oeType = CATAGTType::AGTDraughtStop;

  else if ( itypeOfFeatureToPublish ==  "AGTFireBridge" )
    oeType = CATAGTType::AGTFireBridge;

  else if ( itypeOfFeatureToPublish ==  "AGTConnector" )
    oeType = CATAGTType::AGTConnector;

  else if ( itypeOfFeatureToPublish ==    "AGTSill"     )
    oeType = CATAGTType::AGTSill;

  if( oeType != CATAGTType::AGTUnknown )
    rc = S_OK;
...</pre>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Retrieving Objects to Publish</h3>
<pre class="code">...
  hr = pIUseAGTPLMPublication-&gt;GetFeatByType( enumAGTType, ListOfFeaturesToPublish );
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Publishing Features</h3>
<pre class="code">...
  hr = PublishFeatures( pIPLMProduct, pIUseAGTPLMPublication, ListOfFeaturesToPublish );
...</pre>
<h4>Steps in Publishing features:</h4>

<h5>Retrieving Attributes of Features to be Published</h5>
<pre class="code">...
pIUseAGTPLMPublication-&gt; GetAGTSystemUUID(systemUUID); 
ipFeatureToBePublish  -&gt; GetAGTFeatureUUID(featureUUID);
ipFeatureToBePublish  -&gt; GetFeatExtension(ucFeatExtension); 
ipFeatureToBePublish  -&gt; GetFeatureBody( spFeatureBody ); 
ipFeatureToBePublish  -&gt; GetFeatExtensionAttributes( ListOfExtensionAttributes );
ipFeatureToBePublish  -&gt; GetFeatMaterial( ucMaterialName );

CATIAlias_var spAlias (ipFeatureToBePublish);
if(!!spAlias)
FeatureName = spAlias-&gt;GetAlias(); 
CATUnicodeString ProductName = FeatureName + "_" + systemUUID + "_" + featureUUID;
</pre>

<p><code>pIUseAGTPLMPublication</code> is pointer to CATIAGTPLMPublication.</p>
<p><code>ipFeatureToBePublish</code> is pointer to CATIAGTFeatPLMPublication.</p>

<h5>Creating Pattern Factory &amp; 3D Part &amp; Insert into Root Product</h5>
<pre class="code">...
CATIPrd3DPartFactory *p3DPartFactory=NULL;
if( SUCCEEDED( CATPatternFactory::CreatePatternFactory( IID_CATIPrd3DPartFactory, (void  **) &amp;p3DPartFactory ) ) &amp;&amp; p3DPartFactory  )
{
  ...
  CATCkePLMNavPublicServices::RetrieveKnowledgeType( &quot;VPMReference&quot;, spRefType );
  rc = p3DPartFactory-&gt;Create3DPartFromType(spRefType, EmptyAttributeList,lvDummyRepAttributes,NULL, pPublishRef);
  CATIPLMProducts_var pPLMProduct = ipIPLMProduct;
  rc = pPLMProduct-&gt;AddProduct ( pPublishRef , pPublishInstance , IID_CATIPLMProducts ); // Insert into root product
  ...
</pre>
<h5>Adding Extension</h5>
<pre class ="code">
...
ucFeatExtension = "PLM_" + ucFeatExtension;
pIUseAGTPLMPublication-&gt;AddExtension( ucFeatExtension, spRefObject );
...
</pre>
<p> Here for sample we have used the feature extension with prefix as 'PLM_'</p>
<p>for e.g. for wall feature PublicAreaWall is the feature extension, so PLM extension is "PLM_PublicAreaWall" User can modify according to need.</p>
<h5>Setting Attributes</h5>
<pre class="code">...
CATICkeObject_var spInstanciated = pPublishRef;
if( !!spInstanciated  )
{
  spInstanciated  -&gt; SetLogicalName( ProductName );
  CATCkeObjectAttrWriteServices::SetValueWithString(spInstanciated, "V_Name", ProductName );//set the Name
  // User need to set the values here
  rc =CATCkeObjectAttrWriteServices::SetValueWithString(spInstanciated, "PartId", systemUUID ); // PartId : the attributes defined in Metadata 
  rc =CATCkeObjectAttrWriteServices::SetValueWithString(spInstanciated, "SyncId", featureUUID );// SyncId : the attributes defined in Metadata 
  //.......&lt;User needs to add attributes if necessary&gt;
  //......
}
...</pre>

<h5>Getting GeoFactory</h5>
<pre class="code">...
  CATGeoFactory_var spGeoFactory;
  CATICGMContainer_var CGMCont;
  pPrtContainer -&gt; GetGeometricalContainer(CGMCont);
  spGeoFactory = CGMCont;
  ...
</pre>

<h5>Cloning the Body</h5>
<pre class="code">...
  CATCloneManager cloneMngr (spGeoFactory );
  cloneMngr.Add( ispFeatureBody );
  cloneMngr.Run();

  CATICGMObject* pClonedObject=cloneMngr.ReadImage(ispFeatureBody);
  CATBody_var spNewBody(pClonedObject);
...
</pre>

<h5>Creating Datum Factory</h5>
<pre class="code">...
CATIMmiUseDatumFactory_var spUseDatumFactory;
spUseDatumFactory = pPrtContainer;
...
</pre>

<h5>Instantiating Datum</h5>
<pre class="code">...
CATIMmiMechanicalFeature * piDatumFeature = NULL;
rc = spUseDatumFactory -&gt; InstanciateDatum(spNewBody, piDatumFeature);
...
</pre>

<h5>Inserting in Procedural View</h5>

<pre class="code">...
CATBaseUnknown_var hFeature = piDatumFeature;
CATBaseUnknown_var hPart = spUsePart;
pIUseAGTPLMPublication-&gt;AddInProceduralView(hFeature, hPart );
...
</pre>

<h5>Updating</h5>

<pre class="code">...
CATIUseEntity * pEntity = NULL ;
if (SUCCEEDED (piDatumFeature -&gt; QueryInterface (IID_CATIUseEntity, (void **) &amp;pEntity)) &amp;&amp; pEntity)
{
  DataCommonProtocolServices::Update (pEntity) ;
  pEntity -&gt; Release() ;
  pEntity = NULL ;
}
...
</pre>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Attaching Material</h3>
<p>This includes the retriving the material and applying on exported PLM part.</p>
<h5>Retrive material from data base:</h5>
<pre class="code">...
CATCkePLMNavPublicServices::RetrieveKnowledgeType(&quot;CATMatReference&quot;, hTypeModeler);

CATAdpAttributeSet              attributeSet ;
attributeSet.AddAttribute(&quot;V_Name&quot;, ucMaterialName);
rc = CATAdpPLMQueryServices::GetElementsFromAttributes(hTypeModeler, attributeSet, ListP_QueryResults) ;

if(1 &lt;= ListP_QueryResults.Size())
{
  pQueryResult = ListP_QueryResults[1] ;
  if(NULL != pQueryResult)
    rc = pQueryResult-&gt;GetIdentifier(pIPLMIdent) ;
}

CATIMaterialReference *opMaterialReference
if( NULL != pIPLMIdent )
  rc = adpOpener.CompleteAndOpen(pIPLMIdent,IID_CATIMaterialReference, (void**) &opMaterialReference);
...</pre>

<h5>Attaching the material to Exported PLM part:</h5>

<pre class="code">
pPublishInstance-&gt;QueryInterface(IID_CATIPLMComponent, (void **)&piRepInstance);

CATIPrdObject_var spPrdOcc(pPublishInstance);
.
.
.
spPrdOcc-&gt;GetReferenceObject((CATBaseUnknown *&)piReference);

CATOmbObjectInContext::CreateObjectInContext( emptyList, piRepInstance, piReference, pOmbObjInContext);

CATMatAppliedAccess::SetMaterialCore( pOmbObjInContext, opMaterialReference, errorCode, forceReplace, &piAppliedMaterial );
</pre>

<p>note: pPublishInstance is the Exported PLM part.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Saving the Data</h3>
<pre class="code">...
hr = saver.Save( );
...</pre>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Closing PLM Session</h3>
<pre class="code">...
hr = CATPLMSessionServices::ClosePLMSession();
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to publish the features at PLM Level.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
    </tr>
    <tr>
        <td>[2]</td>
		<td>
		<a href="CAAAgtTaCreatingExtensions.htm">
		Creating Extensions</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jul 2014]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
