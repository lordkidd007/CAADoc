<html xmlns:v xmlns:o>
	<head>
		<title>Logical Reference with 2D layout</title>
		<meta content="False" name="vs_showGrid">
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<meta content="Microsoft FrontPage 12.0" name="GENERATOR">
		<meta content="FrontPage.Editor.Document" name="ProgId">
		<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script language="JavaScript" src="../CAADocJavaScript/submit.js"></script>
	<body>
	<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Logical Reference with 2D layout</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
		 <!---------------------------------comment------------------------------------->
		<table class="abstract">
			<tr>
				<td>
					<h2><a name="Top"></a>Abstract</h2>
					<p>The objective of this article is to provide an overview 
					of the Logical Reference with 2D layout defined by the Logical Modeler [<a href="#References">1</a>].&nbsp;This article 
					also presents : how to create a Logical Reference with 2D 
					layout, its significance and the 2D layout parameters associated with Logical Reference/Instance. </p>
					<UL>
						<li>
							<A href="#Overview">Logical Reference with 2D layout </A>
							<ul>
							<li><a href="#What">What is Logical Reference with 2D layout and its significance</a> 
							 </li>
							<li><a href="#How">How to create a Logical Reference with 2D layout</a> </li>
							
							<li><a href="#Modeler">Data Model Associated with Logical Reference with 2D Layout</A></li>
							
							</ul>
						<li>
						<A href="#2DParameters">2D Layout Parameters </A>
						<ul>
						<LI>
							<A href="#ParametersRef">2D Layout Parameters 
							associated with Logical Reference/Instance</A>
						
						<LI>
						<A href="#Storage">Where the 2D Layout Parameters are stored</A>

						<li>
							<A href="#Modify">How to modify 2D Parameters 
							associated with Logical Reference/Instance</A>
						</ul>
						<li>
							<A href="#InShort">In Short</A>

						<li>
							<A href="#References">References</A>

					</UL>
				</td>
			</tr>
		</table>
		 <!---------------------------------comment------------------------------------->
			<h2><A name="Overview"></A>Logical Reference with 2D layout 
</h2>
			<p>This section provides an introduction to the Logical Reference 
			with 2D layout and its relevance in the real applications. Let us 
			begin with the first question that arises - What is a Logical 
			Reference 
			with 2D layout ,whose details are given in the next section.
			</p>
	<script type="text/javascript">insertLinkToTop()</script>
		
			<H3><a name="What"></a>What is Logical Reference with 2D layout and its significance</H3>
			<p>Before we begin with Logical Reference with 2D layout , it is essential that 
			the user should know the meaning of a Logical Reference. A Logical 
			Reference is the base object of the logical tree. It defines
			 the overall logical architecture of the product and its behavior(how it provides the required 
			functionalities) . </p>
<p>A Logical Reference with 2D layout is a Logical Reference represented in 2D 
graph. A Logical Reference with 2D layout is a reference which aggregates a logical rep instance(an 
instance of logical representation with 2D layout) beneath it. Here, the logical 
representation with 2D layout is the conceptual 2D representation of the logical component. 
This 2D representation is used for 2D positioning and space allocation of the 
logical component. </p>

<p><b>Significance of logical component in the real applications :</b> Previously, while working on a product structure,
let say, the user has build a complete product structure in Catia. Now, the user realizes that a existing part in the reference is not placed at the 
right position and required to be shifted a bit to the right. Now, as the product model is the composition of the various distinct, interlinked
 parts ,you can imagine the large amount of rework that the user has to do to 
reposition a part ,thus leading to move all the respective linked parts also to 
be shifted.
This gave birth to a scenario known as Logical Component architecture which serve the purpose to solve the former problem.</p> <p>A Logical component
defines the overall logical architecture of the product and its behavior(how it provides the required functions).
With the help of logical component, the user builds a logical architecture of the whole product, finalizes it and then moves to physically creating 
the product structure.
It minimizes the amount to rework to create a complete product structure. Let us now see how to create a 
	Logical Reference 
with 2D layout , whose 
details are given in the next section.</p>

<script type="text/javascript">insertLinkToTop()</script>
	
<h3><a name="How"></a>How to create a Logical Reference with 2D layout </h3>	
<p>A Logical Reference with 2D layout is created in the RFLP Editor. When the 
user creates the Logical Reference with 2D layout , it actually creates a 
Logical Reference 
, a Logical representation
with 2D layout (along with its instance) and this rep instance is aggregated inside the reference. This architecture is similar to creating a 3D part in the Product Modeler.</p>	

<table>
     <caption align="center"><a name="Fig.1"></a>Fig.1: Logical Reference with 2D Layout</caption>
     <tr>
       <td><img src="images/CAALmiUcCreateReference2DLayout_Fig1.jpg"></td>
     </tr>
     <tr>
       
     </tr>
   </table>

<p> The CAA exposed API <b>CATIFLEditorReferenceFactory::CreateLogicalRefWith2DLayout</b> provided by the <b>CATFLEditorItf</b> 
framework is used to create a Logical Reference with 2D layout. The 
implementation details of Logical Reference with 2D layout creation is given in the use 
case [<a href="#References">2</a>].</p>
<script type="text/javascript">insertLinkToTop()</script>
<h3><a name="Modeler"></a>Data Model Associated with Logical Reference with 2D Layout</h3>

<p>A Logical Reference with 2D layout is created in <b>RFLVPMLogical</b> Modeler. When the user creates a 
Logical Reference 
with 2D layout , the following three 
objects 
are created: </p>
<ul>
 <li>a Logical Reference (of type <b>RFLVPMLogicalReference</b>)</li>

      <li>a logical rep instance(of type <b>RFLVPMLogicalRepInstance</b>)  </li>
     
     <li>a logical rep reference (of type <b>RFLVPMLogicalRepReference</b>, containing 2D 
       layout information)</li>
   </ul>
   <p><b>Note :</b> Please note that the Logical Representation Reference 
	created here is Mono Instantiable.</p>
<table >
     <caption align="center"><a name="Fig.1"></a>Fig.2: Logical Reference with 
		2D layout </caption>
     <tr>
       <td><img src="images/CAALmiTALogical2DLayout_DataModel.jpg"></td>
     </tr>
   </table>
	
<script type="text/javascript">insertLinkToTop()</script>


<h2><A name="2DParameters"></A>2D Layout Parameters </h2>

<p>A 2D layout is defined by parameters which govern the location of Logical 
Reference/Instance in 2D 
space(X,Y) and its overall size(width, height). </p>
<table >
     <caption align="center"><a name="Fig.3"></a>Fig.3: 2D layout Parameters of Logical Reference/Instance</caption>
     <tr>
       <td><img src="images/CAALmiTALogical2DLayout_Fig1.jpg"></td>
     </tr>
   </table>
   <p> (X Ref, Y Ref, W Ref, H Ref ) and (X Inst, Y Inst, W Inst, H Inst ) are the 4 parameters for the Reference 
   (Logical_RootRef) and its instance (Logical_ChildRef.1) respectively. The further details of 2D layout parameters are described in the next section.</p>
<script type="text/javascript">insertLinkToTop()</script>
   
   <h3><A name="ParametersRef"></A>2D Layout Parameters associated with Logical 
Reference/Instance
</h3>
<p>As depicted in the [<a href="#Fig.3">Fig.3</a>] above, there are basically 
four 2D layout parameters associated with Logical Reference and four 2D Layout 
parameters associated with the Logical Instance. The 
2D Layout parameter list associated with the Logical Reference or Logical 
Instance is mentioned below:</p>
<ul>
<li>Position value(X-Axis), it determines the Horizontal Position of the lower left corner of the 2D representation of a Logical reference or instance</li>
<li>Position value(Y-Axis),  it determines the Vertical Position of the lower left corner of the 2D representation of a Logical reference or instance </li>
<li>Width value, it determines the Width of the 2D representation of a Logical reference or instance </li>
<li>Height value, it determines the Height of the 2D representation of a Logical reference or instance </li>
</ul>

<p>As per the order of 2D parameters list( mentioned just above) and [<a href="#Fig.3">Fig.3</a>] above :</p>
<ul>
<li>The 2D 
parameter values associated with the Logical Reference(Logical_RootRef) are :&nbsp; X ref, Y ref, 
W ref, H ref .</li>
<li>The 2D parameter values associated with Logical instance(Logical_ChildRef.1) are 
: X Inst, 
Y Inst, W Inst, H Inst. </li>
</ul>

 


<p>Instance Position are relative to its aggregating reference.</p>
<p>If we modify the position of Logical reference, there is no modification of the position of the instances inside it
   ( as the relative 2D position of the instance INSIDE the box of its reference is not changed). Let us take an example to understand the 2D positioning of a logical instance :
</p>
<table>
     <caption align="center"><a name="Fig.4"></a>Fig.4: An Example</caption>
     <tr>
       <td><img src="images/CAALmiTALogical2DLayout_Fig2.jpg"></td>
     </tr>
   </table>
<p> As per the Logical structure given in [<a href="#Fig.4">Fig.4</a>] above, we can 
observe following facts :</p>
<ul>
<li>If I modify the position of Logical 61 given in [<a href="#Fig.4">Fig.4</a>] above, there is no modification of the position of the instances directly below(marked in Red below) 
<table>
     <caption align="center"><a name="Fig.5"></a>Fig.5</caption>
     <tr>
       <td><img src="images/CAALmiTALogical2DLayout_Fig3.jpg"></td>
     </tr>
   </table>
</li>
<li>If I modify the position of Logical 62.1 given in [<a href="#Fig.5">Fig.5</a>] above, there is no modification of the position of the instances directly below (Logical 63.1 
, marked in Yellow below)
<table>
     <caption align="center"><a name="Fig.6"></a>Fig.6</caption>
     <tr>
       <td><img src="images/CAALmiTALogical2DLayout_Fig4.jpg"></td>
     </tr>
   </table>
</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>

<h3><A name="Storage"></A>Where the 2D Layout Parameters are stored</h3>

<p>The 2D layout parameters of a Logical reference are ALWAYS stored inside the 2D Rep Ref associated with the Reference.</p><p>
 The 2D layout parameters of a Logical instance are ALWAYS stored in the 2D Rep Ref associated with 
its aggregating Reference . </p>
<p> Hence, looking at the [<a href="#Fig.4">Fig.4</a>] above, for the Logical Reference <b>(Logical 61 )</b>, we can say that :</p>
<ul>   Inside the <b>2D Rep Ref associated with Logical 61 (Logical MainView 485)</b>, there are following set of values :
<li>One set of values for the Reference (Logical 61)</li>
<li>One for each instance below Logical 61 (Logical 62.1 , Logical 63.1) </li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>

<h3><A name="Modify"></A>How to modify 2D Parameters associated with Logical 
Reference/Instance
</h3>
<p> The user can modify these 2D layout parameters thanks to the interface <b>CATIFL2DEntity</b> which belongs to 
<b>CATFLEditorItf</b> framework. The details of modifying these parameters is 
described below.</p>

<p> Since we have mentioned in the previous section [<a href="#Storage">#</a>] , 
that the 2D layout parameters are stored in the 2D Rep Ref associated with 
the Logical reference, it is important to note that the Logical Reference and Logical Representation Reference <b>Loading mode</b> will play a key role to modify the 2D layout parameters associated 
with the Logical reference/Instance. Let us understand this in detail below.</p>
<p><b> Importance of Loading mode :</b></p>
<ul>  
<li> Open the Logical reference in <b>Navigation</b> mode : <b>CATIFL2DEntity</b> fails to get/set the 2D layout parameters</li>
<li> Open the Logical reference in <b>Authoring</b> mode : <b>CATIFL2DEntity</b> 
succeeds to get/set the 2D layout parameters</li>

</ul>
		<p><strong>Behavior of </strong> <b>CATIFL2DEntity::Set2DPosition</b>&nbsp;and <b>CATIFL2DEntity::Set2DSize</b>:
			<p>The API <b>CATIFL2DEntity::Set2DPosition&nbsp; </b>not only sets the 2D 
position parameters of the Logical Reference/Instance, BUT it also <strong>updates the 3D Visu in CATIA </strong> of the Logical Reference/Instance depending on which the API is called.</p>
<p>Similarly, the API <b>CATIFL2DEntity::Set2DSize&nbsp; </b>not only sets the 2D 
size(Width, Height) parameters of the Logical Reference/Instance, BUT it also 
<strong>updates the 3D Visu in CATIA </strong> of the Logical Reference/Instance depending on which the API is called.
</p>
		<script type="text/javascript">insertLinkToTop()</script>
			 <!---------------------------------comment------------------------------------->
			<h2><a name="InShort"></a>In Short</h2>
			<p>The article provides an introduction to Logical Reference with 2D 
			layout and its significance. The article also illustrates the 
			various parameters associated with 2D layout of Logical Reference/Instance and how to modify these parameters.</p>
			<script type="text/javascript">insertLinkToTop()</script>
			<!---------------------------------comment------------------------------------->
			<h2><a name="References"></a>References</h2>
			<table >
				<colgroup>
		<col valign="top" span="1">
	</colgroup>
				
			<tr>
    <td>[1]</td>
    <td><a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAADocPLMModeler/CAALogical.htm')">
Logical Modeler</a></td>

  </tr>
<tr>
					<td vAlign="top">[2]</td>
					<td><a href="CAALmiUcCreateReference2DLayout.htm">Creating a 
					Logical Reference with 2D Layout</A>
					</td>
				</tr>

				
			</table>
			 <!---------------------------------comment------------------------------------->
			<h2><a name="History"></a>History</h2>
			<table >
				<tr>
					<td vAlign="top">Version: <strong>1</strong> [August 2009]</td>
					<td>Document created</td>
				</tr>	
			</table>
			<script type="text/javascript">insertLinkToTop()</script>

			 <!---------------------------------comment------------------------------------->
		<script type="text/javascript">insertCopyright();</script>
	</body>
	</head>
</html>


