<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Overview</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Overview</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article is an overview of a series of Use Cases which together explain 
		the creation, and the management of feature extension in Product context. 
		The Feature Extension fundamentals is explained in the article &quot;<strong>Feature 
		Extensions</strong>&quot;. [<a href="#References">1</a>]. Even if 
		this use case is relying on Feature Modeler concepts, its main role is to 
		underline the Product specificities. </p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPstINFRelimitedLine Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPstINFRelimitedLine Do</a></li>
					<li><a href="#How">How to Launch CAAPstINFRelimitedLine</a></li>
					<li><a href="#Where">Where to Find the CAAPstINFRelimitedLine 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case will details:</p>
<ul>
	<li>How to define the Startup of a Feature extension which defines it and specifies 
		the Container where it would be instantiated.</li>
	<li>What are the necessary and useful implemententation to do on the new feature 
		extension.</li>
	<li>Create and Delete on feature extension instance.</li>
	<li>Manage the Applicative container containing the feature extension.</li>
	<li>Manage interactively the feature extension.</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPstINFRelimitedLine Use Case</h2>
<p>CAAPstINFRelimitedLine is a use case of the CAAProductStructureExtend.edu 
framework that illustrates Product Structure, Feature modeler, Frame and Visualization 
framework capabilities.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPstINFRelimitedLine Do</h3>
<p>In the &quot;<strong>Integrating Applicative Data</strong>&quot; use case [<a href="#References">2</a>] 
we have defined the following features:</p>
<ul>
	<li><code>CAAPstINFPoint</code> (x,y,z value), <code>CAAPstINFLine</code> (based 
		on two <code>CAAPstINFPoint</code>), and <code>CAAPstINFWire</code> (based 
		on several <code>CAAPstINFPoint</code>).</li>
	<li><code>CAAPstINFRoot</code> to federate in the graph tree a set CAAPstINFxxx 
		features.</li>
</ul>
<p>These features are instantiated within an applicative container [<a href="#References">3</a>] 
located within a PLM Technological Representation [<a href="#References">4</a>].</p>
<table>
	<caption><a name="Fig1"></a>Fig.1: Applicative Features</caption>
	<tr>
		<td><img alt="Applicative Features" src="images/CAAPstINFInteractiveCreation.png"/></td>
	</tr>
</table>
<p>On [<a href="#Fig1">Fig.1</a>] you can see an instance of a <strong>PLM Technological 
Representation</strong> (<code>Representation1</code>). This instance is aggregated 
by a Product Reference (<strong>CAAPstINFProductRef</strong>). Beneath the techno 
rep's instance you can see some <strong>CAAPstINFxxx</strong> features.</p>
<p>The current Use Case defines the Feature Extension, a RelimitedLine (<code>CAAPstINFRelimitedLine</code>), 
which is an extension of the <code>CAAPstINFLine</code> feature. The RelimitedLine 
is depicted in Fig that follows. It is characterized by two parameters namely.
<strong>a1</strong>, <strong>a2</strong>.</p>
<table>
	<caption><a name="Fig2"></a>Fig.2: CAAPstINFRelimitedLine Definition</caption>
	<tr>
		<td>
		<img alt="CAAPstINFRelimitedLine Definition" height="164" src="images/CAAPstINFExtension_Define.gif" width="216"/></td>
	</tr>
</table>
<ul>
	<li>P1 and P2 are two <code>CAAPstINFPoint</code> defining a <code>CAAPstINFLine</code> 
		feature.</li>
	<li><strong>a1</strong> is a float whose value is inside the interval: [0.0,0.5].</li>
	<li><strong>a2</strong> is a float whose value is inside the interval: [0.5,1.0].</li>
	<li><code>CAAPstINFRelimitedLine</code> is the red/dashed line defined by these 
		two parameters and is based on the <code>CAAPstINFLine</code> feature.</li>
</ul>
<p>This extension feature will be instantiated inside an applicative container,<code> 
CAAPstINFExtensionCont</code>, which must be within the same PLM Technological 
Representation as the base feature (<code>CAAPstINFLine</code> feature) which it 
extends.</p>
<table>
	<caption><a name="Fig.3"></a>Fig.3: CAAPstINFExtensionCont</caption>
	<tr>
		<td>
		<img alt="CAAPstINFExtensionCont" height="320" src="images/CAAPstINFExtension_Container.gif" width="248"/></td>
	</tr>
</table>
<ul>
	<li><code>CAAPstINFCont</code> is the applicative container containing a set 
		of <code>CAAPstINFxxx</code> features.</li>
	<li><code>CAAPstINFExtensionCont</code> is the applicative container containing 
		the extension of the <code>CAAPstINFLine</code> features.</li>
	<li>Both containers are inside the same PLM Technological Representation.</li>
</ul>
<p>The use case has chosen to insert the new feature within its own applicative 
container,<code> CAAPstINFExtensionCont</code>, to fit the usual case where the 
application defining the extension is not responsible of the extended feature (i.e. 
base feature), and not responsible of the container where they are instantiated 
(the base feature).</p>
<p>Defining the container where will be instantiated the feature extension, 
like other parameters specific to a feature extension, are declared in a CATOsm 
file. The contents of this OSM file is explained in the technical article 
about the feature extension [<a href="#References">5</a>].</p>
<p>The RelimitedLine is then associated with standard DS behaviors such as the 3D 
Visualization, the spec tree integration, Interactive Edit, Contextual Menu support, 
Hide/Show, Auto-Update on Modify further detailed in the &quot;<a href="#How">How 
to Launch</a>&quot; section that follows.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPstINFRelimitedLine</h3>
<p>To launch the CAAPstINFRelimitedLine use case, you will need to 
set up the build time environment, then compile the following modules: </p>
<ul>
	<li>CAAPstINFModelerItf.m.</li>
	<li>CAAPstINFModeler.m.</li>
	<li>CAAPstINFAddin.m.</li>
	<li>CAAPstExtendUtilities.m.</li>
</ul>
<p>and those specific of the extension use case:</p>
<ul>
	<li>CAAPstINFLineExtension.m.</li>
	<li>CAAPstINFLineExtensionCmd.m.</li>
</ul>
<p>Before launching an interactive session, remove the bold characters in the dico 
file of the CAAProductStructureExtend.edu framework:</p>
<pre class="code"><b>#CAA#</b>CAAPstINFWksAddin     CATIWorkbenchAddin          libCAAPstINFAddin
<b>#CAA#</b>CAAPstINFWksAddin     CATIPRDWorkshopAddin        libCAAPstINFAddin</pre>
<p>The <strong>dico</strong> file is located in the <strong>CNext</strong> directory 
of the <strong>CAAProductStructureExtend.edu</strong> framework: <code>InstallRootDirectory\CAAProductStructureExtend.edu\CNext\code\dictionary</code></p>
<p>where <code>InstallRootDirectory</code> [<a href="#References">6</a>] is the 
directory where the CAA CD-ROM is installed.</p>
<p>Also prior to launching the interactive session, set the variable <strong>CAAPstINFExtensionContMenu</strong> 
with an arbitrary value. It is only then that the contextual menu becomes visible.</p>
<p>Several steps must be followed in order to completely execute the use case:</p>
<ul>
	<li>By executing the shell commands as described in the
		<a href="CAAPstUcINFExtensionStartUp.htm">Defining Feature Extension</a>
		Step. This step to create a catalog for a feat extension is fundamentally 
		similar to that of the base feature, except that the <strong>CATOsm</strong> 
		file defining our feature extension will have specific entries defining 
		the applicative container inside which our extension is instantiated. This 
		step could be skipped by making available the provided <strong>CATfct</strong> 
		in your Runtime view.</li>
	<li>Launch <b>V6</b>. When the application is ready, follow the scenario described 
		below:
		<ul>
			<li>Retrieve the <strong>CAA Product Structure INF</strong> Use case 
				toolbar.</li>
			<li>Launch the <b>Create a Techno Rep with CAAPstINFxxx</b> command.</li>
			<li>Select the Root Product, or a PLM Product Instance.</li>
			<li>Push the &quot;<strong>Create New Techno Rep</strong>&quot; button. 
				It results in a Techno Rep Instance with a set of features 
				under our Root Product, as depicted in the Fig. that follows. The 
				name of the Techno Rep Instance, is by default valuated, in its 
				appropriate field. Note the field is Read-Only.</li>
		</ul>
		<table>
			<caption>Fig.4: Creating CAAPstINFxxx Elements</caption>
			<tr>
				<td>
				<img alt="Creating CAAPstINFxxx Elements" height="344" src="images/CAAPstUCInfExtensionOverview_Fig4.jpg" width="507"/></td>
			</tr>
		</table>
	</li>
	<li>Launch the &quot;<b>Creating Line Extension</b>&quot; command (the third 
		command in the toolbar).</li>
	<li>Select a <strong>CAAPstINFLine</strong> feature. It results in a RelimitedLine 
		feature as depicted in the Fig. that follows.
		<table>
			<caption>Fig.5: 3D Visualization and Spec Tree Integration</caption>
			<tr>
				<td>
				<img alt="3D Visualization and Spec Tree Integration" height="232" src="images/CAAPstUCInfExtensionOverview_Fig5a.jpg" width="345"/></td>
			</tr>
		</table>
		<p>It is significant to note that the 3D Visualization of our feature 
		and its spec tree integration, as depicted in the Fig above, is realized 
		by associated these standard DS behaviors with our feature extension.</p>
	</li>
	<li>The RelimitedLine could be deleted with the contextual menu command &quot;<strong>Delete</strong>&quot;, 
		on the RelimitedLine Node in the spec tree.
		<table>
			<caption>Fig.6: Feature Delete</caption>
			<tr>
				<td>
				<img alt="Feature Delete" height="481" src="images/CAAPstUCInfExtensionOverview_Fig6.jpg" width="329"/></td>
			</tr>
		</table>
		<p>A similar command for <strong>delete</strong> is also available in the 
		contextual menu command in 3D. Note the integration in the spec tree and 
		in 3D happens simultaneously.</p>
	</li>
	<li>We proceed to Edit this RelimitedLine. This is accomplished by simply double-clicking 
		it, in 3D.
		<table>
			<caption>Fig.7: Editing Interactively the RelimitedLine</caption>
			<tr>
				<td>
				<img alt="Editing Interactively the RelimitedLine" height="411" src="images/CAAPstUcINFExtensionOverview_Fig5.jpg" width="474"/></td>
			</tr>
		</table>
		<p>Double-clicking the RelimitedLine launches the dialog box depicted above. 
		The RelimitedLine feature is then edited by modifying its attribute values, 
		inside the dialog box.</p>
	</li>
	<li>Next, user launches the contextual menu command, to display the contents 
		of the applicative container as depicted in the Fig. that follows.
		<table>
					<caption><a name="Fig8"></a>Fig.8: Contextual Menu Support</caption>
					<tr>
						<td>
						<img alt="Contextual Menu Support" height="313" src="images/CAAPstUCInfExtensionOverview_Fig7a.jpg" width="380"/><br />
						<img alt="Contextual Menu Support" height="320" src="images/CAAPstUCInfExtensionOverview_Fig7b.jpg" width="452"/></td>
					</tr>
				</table>
		<p>A dialog box is launched while will list the RelimitedLine features instantiated 
		inside the Applicative Container. A significant point to note is that the 
		feature can be edited by activating it (double-click) from inside this dialog 
		box, as well.</p>
	</li>
	<li>
		<table>
			<caption>Fig.9: Hide/Show Support</caption>
			<tr>
				<td>
				<img alt="Hide/Show Support" height="313" src="images/CAAPstUCInfExtensionOverview_Fig7a.jpg" width="380"/></td>
			</tr>
		</table>
		<p>Hide the extension using <b>Hide/Show </b>command in contextual menu, 
		as depicted in the Fig. above.</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPstINFRelimitedLine Code</h3>
<p>There are two modules to illustrate the feature extension:</p>
<ul>
	<li>CAAPstINFLineExtension.m
		<p>This module contains the Implementation Classes, listed in the categories 
		that follow:</p>
		<ul>
			<li>Implementations on the RelimitedLine
			<ul>
				<li><strong>CAAEPstINFRelimitedLine.cpp</strong>:
				<em>CAAIPstINFRelimitedLine</em> implementation for feature 
					introspection.</li>
				<li><strong>CAAEPstINFRelimitedLineBehavior.cpp</strong>:
					<em>CATIFmFeatureBehaviorCustomization</em> implementation, 
					for customizing delete, rebuilding feature on update.</li>
				<li><strong>CAAEPstINFVisuRelimitedLine.cpp</strong>:
					<em>CATI3DGeoVisu</em> implementation, invoked for a 3D Visu 
					update of your feature.</li>
				<li><strong>CAAEPstINFVisPropertiesRelimitedLine.cpp</strong>:
					<em>CATIVisProperties</em> implementation, which handles the 
					graphic properties of our features.</li>
				<li><strong>CAAEPstINFNavigateRelimitedLine.cpp</strong>: <em>CATINavigateObject</em> 
					implementation, which enables navigating through our feature 
					in the spec tree.</li>
				<li><strong>CAAEPstINFCSORelimitedLine.cpp</strong>:
				<em>CATICSOFilter</em> implementation to filter the command 
					in the contextual menu.</li>
				<li><strong>CAAEPstINFModelEventsRelimitedLine.cpp</strong>:
					<em>CATIModelEvents</em> implementation to update the 3D Visu 
					of our feature.</li>
				<li><strong>CAAEPstINFSelectShowRelimitedLine.cpp</strong>:
				<em>CATISelectShow</em> implementation to set Hide/Show contextual 
					command for our feature in the spec tree.</li>
				<li><strong>CAAEPstINFAliasRelimitedLine.cpp</strong>: <em>CATIAlias</em> 
					implementation to set and get feature alias.</li>
				</ul>
			</li>
			<li>Implementations on the RelimitedLine Applicative Container
			<ul>
				<li><strong>CAAEPstINFInitExtensionCont.cpp</strong>: <em>CATInit</em> implementation on the extension container.</li>
				</ul>
			</li>
			<li>Implementations on the Providers
			<ul>
				<li><strong>CAAPstCtxMenuProvForCAAPstINFExtCont.cpp</strong>:
					<em>CATICtxMenuProvider</em> implementation, a Provider which 
					realizes contextual menu command support for your feature.</li>
				<li><strong>CAAPstVisuProvForCAAPstINFExtCont.cpp</strong>:
				<em>CATI3DVisuProvider</em> implementation, a Provider which realizes 
					3D Visualization of your feature.</li>
				</ul>
			</li>
			<li>Global Routines
			<ul>
				<li><strong>CAAPstRetrieveTechnoRep.cpp</strong>: method 
					to retrieve the Techno Rep Instance from a feature that exists 
					in it.</li>
				<li><strong>CAAPstCreateLineExtension.cpp</strong>: method responsible 
					for the creation of our RelimitedLine feature extension.</li>
				<li><strong>CAAPstCheckAndRetrieveContainerFromContext.cpp</strong>: 
					Confirms Container Type of the Context (Techno Rep Instance).</li>
				<li><strong>CAAPstINFRetrieveCredentialsExtension.cpp</strong>: 
					Retrieves the Credentials of the Catalog defining our RelimitedLine.</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>CAAPstINFLineExtensionCmd.m
		<p>This module contains the &quot;<strong>View</strong>&quot; implementation 
		class:</p>
		<ul>
			<li>Implementations on the RelimitedLine:
			<ul>
				<li><strong>CAAEPstINFEditRelimitedLine.cpp</strong>: the
					<em>CATIEdit</em> implementation to support feature edit interactively.</li>
				</ul>
			</li>
			<li>StateCommands
			<ul>
				<li><strong>CAAPstCreateLineExtensionCmd.cpp</strong>: the state 
					command to create the RelimitedLine interactively.</li>
				<li><strong>CAAPstDisplayInfoCAAPstINFExtContCmd.cpp</strong>: 
					the state command to display the contents of the Applicative 
					Container containing our RelimitedLine.</li>
				<li><strong>CAAPstINFEditRelimitedLineCmd.cpp</strong>: the state 
					command to edit the RelimitedLine interactively.</li>
				</ul>
			</li>
			<li>Dialog Boxes
			<ul>
				<li><strong>CAAPstDisplayInfoCAAPstINFExtContDlg.cpp</strong>: 
					the dialog listing all the RelimitedLines.</li>
				<li><strong>CAAPstEditFeatExtnDlg.cpp</strong>: the dialog to edit 
					the RelimitedLine.</li>
				<li><strong>CAAPstINFEditRelimitedLineDlg.cpp</strong>: the dialog 
					to edit the RelimitedLine.</li>
				</ul>
			</li>
		</ul>
	</li>
</ul>
<p>These two modules are located in the CAAProductStructureExtend.edu 
framework: <code>InstallRootFolder\CAADoc\CAAProductStructureExtend.edu\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">6</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>Moreover, in the CNext\resources folder of this same framework you 
will find:</p>
<ul>
	<li>in <b>graphic</b> directory
	<ul>
		<li><strong>CAAPstINFExtensionCatalog.CATfct</strong> the provided 
			StartUp catalog which contains the <code>CAAPstINFRelimitedLine</code> 
			definition.</li>
		</ul>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>This Use Case is a set of Use Cases listed below:</p>
<ol>
	<li><a href="CAAPstUcINFExtensionStartUp.htm">Defining Feature Extension</a> [<a href="#References">7</a>]
		<p>This Use Case consists of:</p>
		<ul>
			<li>Creating the Startup which defines the feature extension and the 
				Container where it would be instantiated, using the OSM technology.</li>
			<li>Creating the StartUp Catalog thanks to the <strong>CATFctEditorAssistant</strong> 
				tool. The particularity of this step is that it is declarative, 
				it means no C++ coding.</li>
		</ul>
	</li>
	<li><a href="CAAPstUcINFExtensionLifeCycle.htm">Managing Feature Extension Life 
		Cycle</a> [<a href="#References">8</a>]<p>This Use Case fundamentally deals 
		with a feature extension Lifecycle. In other words, it details the steps 
		involved to create a feature extension and subsequently delete it.</p>
	</li>
	<li><a href="CAAPstUcINFExtensionBehaviors.htm">Implementing Feature Extension
		Behaviors</a> [<a href="#References">9</a>]<p>
		This Use Case involves associating a feature extension with different standard 
		DS behaviors, like 3D Visualization, Spec Tree Integration, interactive 
		edit, Contextual Menu support etc. realized by implementing dedicated Interfaces 
		for each on our feature extension.</p>
	</li>
	<li><a href="CAAPstUcINFExtensionProvider.htm">Managing Applicative Container</a> 
		[<a href="#References">10</a>]<p>Support for contextual menu, 3D Visualization 
		and Spec tree integration and Navigation for our feature extension, is realized 
		by a set of Providers declared to a Manager of Providers, inside an implementation 
		of the Applicative Container.</p>
	</li>
</ol>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The Use Case is in fact an overview of a set of UCs which together illustrate 
the deployment of feature extension in the CAA Client environment. The extension 
feature here is a RelimitedLine feature, an extension to the base Line feature. 
The illustrations involves defining the feature extension, its applicative container 
for instantiation and to assoicate a behavior to it, so that it is seen integrated 
in the spec tree inside V6 and is visualized in 3D, as well.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAAFmFeatModExt/CAAFmExtTcFeatureExtensionsToc.htm">
		Feature Extensions</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAPstUcINFIntegrateNewFeatures.htm">Integrating Applicative 
		Data In Product Context</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAFmFeatModExt/CAAFmExtTaApplicativeContainer.htm">
		Understanding Applicative Container</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAPstTaTechnoRep.htm">PLM Technological Representation</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAAFmFeatModExt/CAAFmExtTaFeatureExtension.htm">
		Understanding Feature Extensions</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td><a href="CAAPstUcINFExtensionStartUp.htm">Defining Feature Extensions</a></td>
	</tr>
	<tr>
		<td>[8]</td>
		<td><a href="CAAPstUcINFExtensionLifeCycle.htm">Managing Feature Extension 
		Lifecycle</a></td>
	</tr>
	<tr>
		<td>[9]</td>
		<td><a href="CAAPstUcINFExtensionBehaviors.htm">Defining Feature Extension 
		Behaviors</a></td>
	</tr>
	<tr>
		<td>[10]</td>
		<td><a href="CAAPstUcINFExtensionProvider.htm">Managing Applicative Container 
		with Feature Extensions</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <b>1</b> [Oct 2007]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
