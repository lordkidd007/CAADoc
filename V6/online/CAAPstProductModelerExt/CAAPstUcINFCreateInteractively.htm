<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating Interactively a Data Model</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Interactively a Data Model</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article describes the command "Create a Techno Rep with CAAPstINFxxx&quot; 
		the one introduced in the article describing the "Integrating Applicative, 
		Data In Product Context" use case [<a href="#References">1</a>]. This command 
		is defined by an addin that we have previously described [<a href="#References">2</a>].</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPstCreateINFProductCmd Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPstCreateINFProductCmd Do</a></li>
					<li><a href="#How">How to Launch CAAPstCreateINFProductCmd</a></li>
					<li><a href="#Where">Where to Find the CAAPstCreateINFProductCmd 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to illustrate to an end user creation of a feature 
model, interactively in V6. The integration of the model in V6 is based on the MVC 
architecture, which has an introduction in this UC.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPstCreateINFProductCmd Use Case</h2>
<p>CAAPstCreateINFProductCmd is a use case of the CAAProductStructureExtend.edu 
framework that illustrates Visualization, Frame, Product modelers capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPstCreateINFProductCmd Do</h3>
<p>CAAPstCreateINFProductCmd is a state command [<a href="#References">3</a>] , 
the <strong>first one</strong> in the &quot;CAA Product Structure INF Use cases&quot; 
toolbar.</p>
<table>
	<caption>Fig. 1: The &quot;Techno Rep with CAAPstINFxxx&quot; Command</caption>
	<tr>
		<td>
		<img alt="The Techno Rep with CAAPstINFxxx Command" height="56" src="images/CAAPstINFToolbar.png" width="192"/></td>
	</tr>
</table>
<p>To got this toolbar either you have to open a PLM Product Reference, or you just 
create a new one.</p>
<table>
	<caption>Fig. 2: The VPM Editor before the Creation</caption>
	<tr>
		<td>
		<img alt="The VPM Editor before the Creation" src="images/CAAPstINFCreateCommand01.png"/></td>
	</tr>
</table>
<p>Here the input data model is a Product Reference, <code>CAAPstINFProductRef</code>, 
aggregating an instance of another Product Reference, <code>CAAPstINFProductRef2.</code></p>
<p>When you push the command the following dialog box appears:</p>
<table>
	<caption><a name="Fig3"></a>Fig. 3: The Dialog Box</caption>
	<tr>
		<td><img alt="Dialog Box" src="images/CAAPstINFCreateCommand02.png"/></td>
	</tr>
</table>
<p>Then you are invited to select either the Root Product Reference, or a sub Product 
Instance. When the selection is done, in this case the node <code>CAAPstINFProductRef2.1,
</code>the dialog box is updated:</p>
<table>
	<caption><a name="Fig4"></a>Fig. 4: Dialog Box</caption>
	<tr>
		<td><img alt="Dialog Box" src="images/CAAPstINFCreateCommand03.png"/></td>
	</tr>
</table>
<p>And when you push the &quot;Create New Techno Rep&quot; button to create the 
data (note: the button is no more grayed):</p>
<table>
	<caption><a name="Fig5"></a>Fig. 5: Result</caption>
	<tr>
		<td><img alt="Result" src="images/CAAPstINFCreateCommand04.png"/></td>
	</tr>
</table>
<p>The result after the selection of <code>CAAPstINFProductRef2.1</code>. A PLM 
Technological Representation, <code>Representation33761</code> is created. It contains 
the <code>CAAPstINFContainer</code> container, having features defined in the
<code>CAAPstINFCatalog</code> feature catalog [<a href="#References">4</a>]. The 
PLM Technological Representation is instantiated below the Root Product Reference, 
or the Product Reference of the selected Product Instance.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPstCreateINFProductCmd</h3>
<p>See the section entitled &quot;How to Launch the Integrating Applicative Data 
In Product Context Use Case&quot; [<a href="#References">1</a>] in the referenced 
use case for a detailed description of how this use case should be launched.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPstCreateINFProductCmd Code</h3>
<p>The CAAPstCreateINFProductCmd use case is made of several classes located in 
the CAAPstINFModelerCmd.m module of the CAAProductStructureExtend.edu framework:
<code>InstallRootFolder\CAADoc\CAAProductStructureExtend.edu\CAAPstINFModelerCmd.m\</code></p>
<ul>
	<li>CAAPstCreateINFProductCmd.h / CAAPstCreateINFProductCmd.cpp the State Command 
		to create a data model like [<a href="#Fig5">Fig.5</a>].</li>
	<li>CAAPstCreateINFProductDlg.h / CAAPstCreateINFProductDlg.cpp the Dialog box 
		[<a href="#Fig3">Fig.3</a>] used by the state command.</li>
</ul>
<p>where <code>InstallRootFolder</code> [<a href="#References">5</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are four logical steps in CAAPstCreateINFProductCmd:</p>
<ol>
	<li><a href="#Step1">Creating the Selection Agent</a></li>
	<li><a href="#Step2">Retrieving the Product Reference</a></li>
	<li><a href="#Step3">Creating the Data</a></li>
	<li><a href="#Step4">Managing the Visualization Refresh</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Creating the Selection Agent</h3>
<p>Here an extract of the <code>BuildGraph</code> method of the <em>CATStateCommand</em>: 
[<a href="#References">3</a>]:</p>
<pre class="code">...
_daPathEltPLMRefOrInst = new CATPathElementAgent("SelPLMRefOrInst");
<strong>_daPathEltPLMRefOrInst-&gt;AddElementType</strong>(<strong>IID_CATIPLMNavOccurrence</strong>);
...</pre>
<p><code>_daPathEltPLMRefOrInst</code> is a data member of the <em>CAAPstCreateINFProductCmd</em> 
class. It is a <em>CATPathElementAgent</em> instance. The filter is the interface
<em>CATIPLMNavOccurrence</em>. Indeed to select the root or an instance below, you 
must use this interface because the object are occurrences. The last chapter of 
the referenced Product technical article [<a href="#References">6</a>] will give 
you better information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving the Product Reference</h3>
<p>Here an extract of the action command when the transition is triggered after 
a valid selection.</p>
<pre class="code">...
<strong>CATPathElement* pathmodel =</strong> <strong>_daPathEltPLMRefOrInst-&gt;GetValue</strong>();
CATBaseUnknown* pObj = NULL;

if ((NULL != pathmodel) &amp;&amp; (pathmodel-&gt;GetSize() &gt; 0))
{
   <strong>pObj = (*pathmodel)[pathmodel-&gt;GetSize()-1]</strong>;
   ...</pre>
<p>The selection is a path of elements. <code>pObj</code> is the leaf, the object 
we have selected and implementing <em>CATIPLMNavOccurrence</em>.</p>
<pre class="code">...
   CATIPLMProducts* pPLMProdOnSelEnt = NULL;
   CATIPLMNavOccurrence *pNavOccurenceObj = NULL ;
   HRESULT rc = <strong>pObj-&gt;QueryInterface(IID_CATIPLMNavOccurrence, (void**) &amp;pNavOccurenceObj)</strong>;
   if ( SUCCEEDED(rc) )
   {
      CATIPLMNavReference *pReference = NULL ;
      <strong>pNavOccurenceObj-&gt;GetRelatedReference(pReference)</strong>;
      if ( NULL != pReference )
      {
          pReference-&gt;QueryInterface(IID_CATIPLMProducts, (void**) &amp;pPLMProdOnSelEnt);
...</pre>
<p><code>pPLMProdOnSelEnt</code> is the pointer on the Product Reference that will 
aggregate the new PLM Technological instance. <code>pNavOccurenceObj</code> is the 
selected object as a <em>CATIPLMNavOccurrence</em> interface pointer. This occurrence 
can be the Root Product Reference, or an instance of Product Reference. The
<code>GetRelatedReference</code> of <em>CATIPLMNavOccurrence</em> returns this Product 
Reference.</p>
<pre class="code">...
_pCAAPstCreateINFProductCmdDlg-&gt;<strong>DisplaySelectedProdRef</strong>(pPLMProdOnSelEnt);</pre>
<p>The retrieved PLM Product Reference is given to the dialog box.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating the Data</h3>
<p>Here is an extract of the CreateTechnoRepWithCAAPstINF method of the <em>CAAPstCreateINFProductDlg</em> 
class. This method is triggered when the end user push the "Create New Techno Rep" 
button [<a href="#Fig4">Fig.4</a>].</p>
<pre class="code">...
CATIPsiRepresentationReference *pRepRef = NULL;
<strong>CAAIPstINFFactory</strong> *pFactoryOnContainer = NULL;
RESULT rc = ::<strong>CAAPstINFTechnoRepAndContainerCreation</strong>( _pCurrentSelRef,NULL,
		                                   IID_CATIPsiRepresentationReference,(void**) &amp;pRepRef,
		                                   IID_CAAIPstINFFactory,(void**)&amp;pFactoryOnContainer);</pre>
<p>The first part is exactly like in a batch code [<a href="#References">7</a>]. 
The global routine CAAPstINFTechnoRepAndContainerCreation() is responsible for creating 
and instantiating a Techno Rep Ref under an input Product Ref. <code>_pCurrentSelRef
</code>is a data member of CAAPstCreateINFProductDlg class. It is a <em>CATIPLMProducts</em> 
interface pointer that we have initialized with the pointer retrieved in the
<a href="#Step2">Retrieving the Product Reference</a> section.</p>
<p>The details of <em>CAAPstINFTechnoRepAndContainerCreation</em> are inside the 
UC "Creating a PLM Technological Representation" [<a href="#References">8</a>]. 
But here we have to know that this method creates the Techno Rep Ref with an initial 
container, <code>CAAPstINFContainer</code>. <code>pFactoryOnContainer</code> is 
a <em>CAAIPstINFFactory</em> interface pointer on the new container.</p>
<pre class="code">...
<strong>CAAPstCreateApplData</strong>(pFactoryOnContainer) ;
...</pre>
<p>Finally we call a method, <code>CAAPstCreateApplData</code> , of the <em>CAAPstCreateINFProductDlg</em> 
class. This method creates features using the <em>CAAIPstINFFactory</em> interface 
pointer.</p>
<pre class="code">...
<strong>CAAPstCreateApplData</strong>(pFactoryOnContainer) ;
...
CAAIPstINFRoot *pRoot = NULL ;
rc = <strong>spFactoryOnContainer-&gt;CreateRoot(pRoot)</strong>;
...
CAAIPstINFPoint *pPoint1 = NULL ;
if (SUCCEEDED(rc))
{
  rc = <strong>spFactoryOnContainer-&gt;CreatePoint(0.0,0.0,0.0,pRoot,pPoint1)</strong>;
}</pre>
<p>The beginning of the <code>CAAPstCreateApplData</code> method. The Root is created, 
and the first Point. You retrieve the same kind of code as the one inside the batch 
code [<a href="#References">7</a>].</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Managing the Visualization Refresh</h3>
<p>Once the features are created, we have to manage the visualization ( 3D view 
and Specification Tree). Of course, this part does not exist in the batch code [<a href="#References">7</a>].</p>
<p>This step does not explain in details the reason of the code, it is just an introduction 
of the MVC concept. The referenced article &quot;Managing View Refresh&quot; [<a href="#References">10</a>] 
delves deeper in the concepts.</p>
<pre class="code">...
CATBaseUnknown * pTechnoRepInstance = NULL ;
::<strong>CAAPstRetrieveTechnoRep</strong>(pRoot,&amp;pTechnoRepInstance);
...</pre>
<p>First we retrieve the instance of the PLM Technological Representation. <em>CAAPstRetrieveTechnoRep
</em>is a global function defined in another article [<a href="#References">9</a>].</p>
<pre class="code">...
<strong>CATIModelEvents</strong>_var spModelEvtInstRepTechno = pTechnoRepInstance ;
...
spModelEvtInstRepTechno-&gt;<strong>ConnectTo</strong>(pRoot) ;
...</pre>
<p>Then we &quot;connect&quot; to root, the instance of the PLM Technological Representation.</p>
<pre class="code">...
CATIModelEvents_var spModelEvtRoot = pRoot ;
...
spModelEvtRoot-&gt;<strong>ConnectTo</strong>(pPoint1) ;
...</pre>
<p>Then we &quot;connect&quot; each features aggregated by the root to the root 
feature.</p>
<pre class="code">...
    <strong>CATCreate</strong> notif(pRoot,pTechnoRepInstance);
    spModelEvtRoot-&gt;<strong>Dispatch</strong>(notif);
...</pre>
<p>Finally we can launch the event (of Creation) to update the 3D view.</p>
<pre class="code">...
<strong>CATIRedrawEvent</strong>_var spDrwEvtInstRepRef = pTechnoRepInstance ;
...
spDrwEvtInstRepRef-&gt;<strong>Redraw</strong>();
...</pre>
<p>The last step consists in to update the specification tree below the PLM Technological 
instance.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The UC illustrates the steps involved to interactively create a feature model 
in V6. It describes the command "Create a Techno Rep with CAAPstINFxxx&quot;, the 
one introduced in the article describing the "Integrating Applicative Data In Product 
Context" use case [<a href="#References">1</a>].</p>
<p>The integration of a feature model in V6 is based on the MVC concept which is 
briefly introduced in this UC.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAPstUcINFBuildCatalog.htm">Integrating Applicative Data In 
		Product Context</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAPstUcINFAddin.htm">VPM Editor Addin Creation</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAADegDialogEngine/CAADegTaGettingStarted.htm')">
		Wintop Commands</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAPstUcINFBuildCatalog.htm">Defining StartUp Catalog</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td>
		<a href="../CAAPstProductModeler/CAAPstTaProductOverview.htm">
		Product Modeler Overview</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td><a href="CAAPstUcINFCreateDocument.htm">Creating Data in PLM Technological 
		Representation</a></td>
	</tr>
	<tr>
		<td>[8]</td>
		<td><a href="CAAPstUcCreateAndInstantiateTechnoRep.htm">Creating PLM Technological 
		Representation</a></td>
	</tr>
	<tr>
		<td>[9]</td>
		<td><a href="CAAPstUcINFExtensionProvider.htm">Managing Applicative Container 
		with Feature Extension</a></td>
	</tr>
	<tr>
		<td>[10]</td>
		<td><a href="CAAPstUcINFMVCUpdate.htm">Managing View Refresh</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
