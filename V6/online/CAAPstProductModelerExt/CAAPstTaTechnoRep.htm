<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/DSDoc.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Understanding Technological Representations</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tbody>
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Understanding Technological Representations</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</tbody>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tbody>
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article describes how the PLM Technological Representation can be 
		used to integrate your applicative data in a PLM Product Assembly. The first 
		step consists in to present the PLM Technological Representation itself, 
		and then to present the applicative data that you find inside such PLM Representation 
		Reference. The last section gives some recommendations when several applications 
		can shared the same data.</p>
		<p>To take fully benefit of this article, first, it can be useful to read 
		the PLM Representation Reference article [<a href="#References">1</a>].</p>
		<ul>
			<li><a href="#Presentation">Need to Integrate Applicative Data</a></li>
			<li><a href="#TechnoRep">A PLM Representation Reference Named Technological 
				Representation</a>
				<ul>
					<li><a href="#Descriptor">Main Stream Descriptor Containing 
						Applicative Containers</a></li>
					<li><a href="#RepRef">A PLM Representation Reference as Other 
						Ones</a></li>
					<li><a href="#Product">How to Retrieve Technological Representation 
						Inside a PLM Product</a></li>
					<li><a href="#RepRef2">A Mono-Instantiated PLM Representation 
						Reference</a></li>
					<li><a href="#Opening">Opening a Techno Rep</a></li>
				</ul>
			</li>
			<li><a href="#Definition">Applicative Data Definition and Management</a><ul>
				<li><a href="#What">Applicative Data Are Features</a></li>
				<li><a href="#Which">Which Kind of Features?</a></li>
				<li><a href="#Features">Features Stored in Applicative Container</a></li>
				<li><a href="#Integration">Applicative Container Integration in 
					CATIA Application</a></li>
				</ul>
			</li>
			<li><a href="#Coexistence">Multi-Application Coexistence</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</tbody>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Presentation"></a>Need to Integrate Applicative Data</h2>
<p>Before to see the technical aspects of the PLM Technological Representation, 
first a glance to its usage.</p>
<p>A customer needs to review product designs from different angles to check design 
aesthetics. At the top level of the product design, he needs to store predefined, 
named viewpoint locations (CAA_VIEWPOINT) that can be activated at each review. 
The CAA development consists in:</p>
<ul>
	<li>A <strong>data model</strong> of the CAA_VIEWPOINT, allowing persistent 
		storage and easy retrieval when the end user wants to use that review function.</li>
	<li>A <strong>specs tree integration</strong> of the CAA_VIEWPOINT, allowing 
		end user visibility of relevant granularity and ability to locate relevant 
		commands in the UI.</li>
	<li>A <strong>3D view integration</strong> of the CAA_VIEWPOINT, allowing end 
		user visibility and ability to use it from the 3D<br />
		A toolbar with a command to store the current viewpoint as a new CAA_VIEWPOINT.</li>
	<li>A <strong>contextual menu</strong> on the CAA_VIEWPOINT in the specs tree, 
		with the &quot;apply&quot; command to use or remove the CAA_VIEWPOINT, and 
		an equivalent command in the above toolbar.</li>
	<li>An integration to the generic &quot;edit/<strong>properties</strong>&quot;, &quot;<strong>delete</strong>&quot; 
		and &quot;<strong>cut-copy-paste</strong>&quot; command.</li>
</ul>
<p>This article mainly deals with the first point, the data model. The other points, 
dealing with the data model integration inside a CATIA application, is briefly seen 
in the last chapter. For more details, refer to the complete article on the topic 
[<a href="#References">2</a>].</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="TechnoRep"></a>A PLM Representation Reference Named Technological Representation</h2>
<p>This PLM Representation Reference (RepRef) is named PLM Technological Representation 
in reason of its type &quot;TechnologicalRepresentation&quot;, a name often reduced 
to &quot;TechnoRep&quot;. In this chapter, all the technical aspects of this specific 
RepRef are detailed, except the creation itself which is fully described in the 
referenced article [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Descriptor"></a>Main Stream Descriptor Containing Applicative Containers</h3>
<p>This picture shows the contents of the PLM Representation Reference:</p>
<table>
	<caption><a name="Fig1">Fig.1</a> PLM Representation Reference Modelization</caption>
	<tbody>
	<tr>
		<td>
		<img alt="PLM Representation Reference Modelization" height="202" src="images/CAAPstTechnoRep_Contents.gif" width="425"/></td>
	</tr>
</tbody>
</table>
<p>The Techno Rep has a link to a main stream containing itself applicative containers. 
These containers containing in return the applicative data. These applicative data 
are the camera of the previous example just above. The next chapter,
<a href="#Definition">Applicative Data Definition and Management</a> details this 
aspect.</p>
<p>Now, continuing to see all the technical aspects on the PLM Representation Reference.
</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="RepRef"></a>A PLM Representation Reference as Other Ones</h3>
<p>A Techno Rep is a PLM Representation Reference, it means the same behaviors as 
the other PLM Rep Refs - except the mono-instantiation detailed in the next section
<a href="#RepRef2">A Mono-Instantiated PLM Representation Reference</a>.</p>
<ul class="wide">
	<li>It is a <strong>separable</strong> PLM Object
		<p>The API <em>CATIPrdExtRepresentationReferenceFactory</em> [<a href="#References">1</a>] 
		creates a separable PLM Object [<a href="#References">3</a>] which can be 
		used stand-alone.</p>
	</li>
	<li>But mostly <strong>instantiated</strong> in a Product <strong>Assembly</strong>
		<p>Once the Techno Rep is created [<a href="#References">1</a>], generaly 
		you instantiate it to integrate it inside a PLM Product Reference. The
		<code>AddRepInstance</code> method of the <em>CATIPLMRepInstances</em> interface 
		enables you to make this instantiation.</p>
		<p>But the best is to use the interface <em>CATIPrdExtAggregatedRepresentations</em>, 
		this interface creates and instantiate a Techno Rep below an existing Product 
		Reference.</p>
	</li>
	<li>With <strong>PLM attributes</strong>
		<p>You can use the <em>CATIPLMProperties</em> interface [<a href="#References">4</a>] 
		to modify or retrieve a PLM attribute defined by the Data model used to 
		create the PLM RepRef.</p>
	</li>
	<li>You can make a <strong>query</strong> in data base
		<p>You have an API (<code>GetElementsFromAttributes</code>) to query any 
		kind of PLM Components whose some attributes match criteria. But in the 
		PLM Representation Reference case, you have also the <code>GetElementByIdentificationSet</code> 
		method to query the unique reference matching the identifiant set attributes. 
		(two methods of CATPLMIntegrationAccess fw)</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Product"></a>How to Retrieve a Technological Representation</h3>
<p>There are two scenarios:</p>
<ul class="wide">
	<li>In <strong>Product context</strong>
		<p>You have opened a PLM Product containing PLM Representation References 
		whose one is your technological representation. The only means is to browse 
		the structure and for each PLM Representation References retrieves its type. 
		It is possible thanks the <code>GetMainDataType</code> method of the <em>
		CATIPLMRepresentationReference</em>. If the type is 'TechnologicalRepresentation', 
		you check if it contains your container using the <code>RetrieveApplicativeContainer</code> 
		method of the <em>CATIPLMNavRepReference</em> interface.</p>
	</li>
	<li>without <strong>Product context</strong>
		<p>You can make a query in database to retrieve the PLM Representation Reference. 
		The attributes must be enough pertinent to retrieve it.</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="RepRef2"></a>A Mono-Instantiated PLM Representation Reference</h3>
<p>Conversely to other Product Representation reference, a PLM Techno Rep is natively 
once instantiable [<a href="#References">1</a>].</p>
<p>If you first create the PLM Techno Rep (with <em>CATIPrdExtRepresentationReferenceFactory</em>), 
the instantiation must be done <em>before</em> the first save of the reference. 
Here a little scenario describing the issue of the instantation:</p>
<ul>
	<li>Create a PLM Techno Rep T1.</li>
	<li>Instantiate T1 inside a PLM Reference A, OK.</li>
	<li>Instantiate T1 inside a PLM Reference B, it is impossible.</li>
	<li>Create a PLM Techno Rep T2.</li>
	<li>Save T2.</li>
	<li>Instantiate T2 inside a PLM Reference, it is impossible.</li>
</ul>
<p>You can also use the <em>CATIPLMRepresentations</em> interface to create one 
shot, the reference and its instantation.</p>
<p>The <code>AddRepInstance</code> method of the <em>CATIPLMRepInstances</em> checks 
the mono-instantiation rule.</p>
<p>The other API which is impacted by this rule is the <code>ReplaceRepInstance</code> 
method of the <em>CATIPLMRepInstances</em> interface.</p>
<ul>
	<li>whatever the PLM Representation Reference of the current instance, you cannot 
		replace it by an instance of a PLM techno Rep.</li>
	<li>If the current instance is an instance of PLM techno Rep, the replace will 
		be impossible whatever the input PLM Representation Reference to instantiate.
	</li>
</ul>
<p>Refer to the technical article [<a href="#References">9</a>] for complete details 
about the once instantiable PLM Product Representation reference.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Opening"></a>Opening a Techno Rep</h3>
<p>There is only one API to open a techno Rep, stand alone or not. It is the
<code>CompleteAndOpen</code> method of the <em>CATAdpOpener</em> class. With this 
method, the techno Rep is <strong>always</strong> opened in <strong>EditMode</strong>.</p>
<p>Once opened, a techno Rep may be switched in PLM Mode using the <em>CATIPsiPLMRepresentationLoadMode</em> 
interface [<a href="#References">10</a>]. But, since you don't have anymore access 
to its containers, it can be only useful to light the memory session.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Definition"></a>Applicative Data Definition and Management</h2>
<p>In the previous chapter, we have seen the role and the usage of the PLM Representation 
Reference, now considering its contents.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>Applicative Data Are Features</h3>
<p>Applicative Data are <strong>features</strong> which have:</p>
<ul>
	<li><strong>Data</strong> via attributes.</li>
	<li><strong>Behaviors</strong> via interface implementation.</li>
</ul>
<p>You have dedicated articles in Feature modeler to deal with features. For the 
creation,</p>
<ul>
	<li>Feature Modeler Overview[<a href="#References">5</a>].</li>
	<li>Use cases of the &quot;Creating Feature&quot; section.</li>
</ul>
<p>and, for behavior, Integrating New Features in CATIA [<a href="#References">6</a>]
</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Which"></a>Which Kind of Features?</h3>
<p>A feature is created either:</p>
<ul>
	<li>From <strong>scratch</strong>, it derives from any other feature.</li>
	<li>From a &quot;<strong>derived</strong>&quot; feature.</li>
</ul>
<p>In a Technological Representation you can integrate whatever feature deriving 
from scratch. If it is a deriving feature, the derived feature must not be a feature 
of a Rep Modeler. If you derive a feature defined by a Rep modeler, you must integrate 
your new features in a PLM Representation Reference dedicated to V5 Data [<a href="#References">1</a>]. 
For example, if you derive a Mechanical Modeler feature, you must integrate your 
features in 3D Shape.</p>
<p>About <strong>feature extensions</strong> [<a href="#References">7</a>].</p>
<p>You can no more extend the PLM Product, since it is no more a feature. If you 
extend one of your own feature, you should respect only one rule: The based feature, 
and the extended one, must be in the same Technological Representation.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Features"></a>Features Stored in Applicative Containers</h3>
<p>Feature or feature extensions are always stored inside containers. The wording &quot;Applicative 
Container&quot; means a container defined by an application, but which is not defined 
by a Rep Modeler. One example, <code>CATPrtCont</code> for 3DShape, a container 
defined and managed by Mechanical Modeler, is not called an &quot;applicative&quot; 
container.</p>
<p>The interface to manage an applicative container in whatever the PLM Representation 
Reference (not specially to the Techno Rep) is the <em>CATIPLMRepRefApplicativeDataAccess/</em><em>CATIPLMNavRepReference</em> 
interface:</p>
<ul>
	<li>CreateApplicativeContainer: to create one (<em>CATIPLMRepRefApplicativeDataAccess</em> 
		interface).</li>
	<li>RetrieveApplicativeContainer: to retrieve one by its name (<em>CATIPLMNavRepReference</em> 
		interface).</li>
</ul>
<p>There is no method to delete an applicative container, or to retrieve all the 
container of one PLM Representation Reference.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Integration"></a>Applicative Container Integration in CATIA Application</h3>
<p>Sum up: you have eventually created a startup to define a new feature, and you 
have inserted feature instances inside an applicative container of a PLM Technological 
Representation. For a basic CAA Application, it can be enough. You have the interface,
<em>CATIPLMRepRefApplicativeDataAccess</em> to manage the applicative containers, 
and you have <em>CATIClientContainer</em> to list the features inside a container. 
Nevertheless, for an application such as one described in the first section,<a href="#Presentation"> 
Need to integrate Applicative Data</a>, it is not enough. The applicative features 
should be integrated in the specification tree describing the Product components, 
they must be visualized in a viewer, etc. It can solved by declaring the needed 
behaviors when the container is loaded.</p>
<p>The behaviors are declared to a manager of providers during the applicative container 
loading: in other words, in the <em>CATInit</em> Implementation of each applicative 
container. The article Applicative Container Integration [<a href="#References">2</a>] 
details what are the possible behaviors, what are the providers, and how works the 
manager of providers.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Coexistence"></a>Multi-Application Coexistence</h2>
<p>If your intention is to develop an application creating applicative data it is 
recommended to use your own Techno rep. This picture exposes the issue.</p>
<p>
<img alt="" height="210" src="images/CAAPstTechnoRep_Coexistence.gif" width="652"/></p>
<p>In this above example, the two applications have created each one a PLM Technological 
Representation to integrate their own features. If you use the first Techno Rep 
to create your containers and insert inside your features, it will be impossible 
to delete an instance of the PLM Techno Rep: You are not sure that it does not contain 
containers of another application.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The PLM Technological Representation, also named &quot;Techno Rep&quot; is a 
PLM Representation reference containing applicative containers in its main stream. 
Each applicative container contains features which can be a simple feature, or a 
feature extension, but in all cases, it can only be a feature which does not derive 
from a Rep modeler features (Mechanical Modeler for example).</p>
<p>After this article, you can study the use case illustrating the PLM Technological 
Representation Usage [<a href="#References">8</a>]</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tbody>
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAAPLMAllConcepts/CAAPLMTaAllRepresentation.htm">
		PLM Representation Reference</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAPstTaProviders.htm">Understanding Applicative Container 
		Integration</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPLMAllConcepts/CAAPLMTaAllCorePrinciples.htm">
		PLM Core Model Overview</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAAPstProductModeler/CAAPstUcModifyingProperties.htm">
		Modifying PLM Product Properties</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAAFmFeatModExt/CAAOsmTaOverview.htm">
		Feature Modeler Overview</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td>
		<a href="../CAAFmFeatModExt/CAAFmExtTaFeatureIntegration.htm">
		Features and Basic Protocols</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="../CAAFmFeatModExt/CAAFmExtTaFeatureExtension.htm">
		Understanding Feature Extensions</a></td>
	</tr>
	<tr>
		<td>[8]</td>
		<td><a href="CAAPstUcINFBuildCatalog.htm">Integrating Applicative Data In 
		Product Context</a></td>
	</tr>
	<tr>
		<td>[9]</td>
		<td>
		<a href="../CAAPstProductModeler/CAAPstTaProductRepRef.htm">
		PLM Product Representation Reference</a></td>
	</tr>
	<tr>
		<td>[10]</td>
		<td>
		<a href="../CAAPstProductModeler/CAAPstTaSelectiveLoading.htm">
		Understanding Representation Loading Mode</a></td>
	</tr>
</tbody>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tbody>
	<tr>
		<td>Version: <strong>1</strong> [Oct 2006]</td>
		<td>Document created</td>
	</tr>
</tbody>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
