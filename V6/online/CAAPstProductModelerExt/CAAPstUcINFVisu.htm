<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Visualization StartUp Behavior</title>
</head>

<body>

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1>Visualization StartUp Behavior</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article explains how to associate a Graphical Representation with 
		a StartUp. This article is one among a set of articles which together discuss 
		the "Integrating Applicative Data in Product Context" use case [<a href="#References">1</a>].</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPstINFVisu Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPstINFVisu Do</a></li>
					<li><a href="#How">How to Launch CAAPstINFVisu</a></li>
					<li><a href="#Where">Where to Find the CAAPstINFVisu Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to illustrate how to implement <em>CATI3DGeoVisu</em>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPstINFVisu Use Case</h2>
<p>The CAAPstINFVisu is a use case of the CAAProductStructureExtend.edu framework 
that illustrates the integration of Visualization frameworks capabilities in the 
scope of a Product Structure.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does the CAAPstINFVisu Use Case Do</h3>
<p>This use case explains how to implement <em>CATI3DGeoVisu</em> to have such a 
result.</p>
<table>
	<tr>
		<td><img alt="" src="images/CAAPstINFVisu.png"/></td>
	</tr>
</table>
<ul>
	<li>CAAPstINFPoint (ex <code>Point.6</code> - stand alone) is represented by 
		a point , by default its graphical property is a cross.</li>
	<li>CAAPstINFLine (ex <code>Line.</code>1 ) is a line (without Start/end point, 
		the visible points are<code> Point.1</code> and <code>Point.2</code>), by 
		default its graphical property is a solid line.</li>
	<li>CAAPstINFWire (ex <code>Wire.</code>1 ) is N lines with N+1 points , by 
		default its graphical property is solid line (for line) and cross point 
		( for Points).</li>
</ul>
<p>Managing the Graphic Properties is part of another article [<a href="#References">2</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch the CAAPstINFVisu Use Case</h3>
<p>See the section entitled &quot;How to Launch the CAAPstINFIntegrateNewFeatures 
Use Case&quot; in the &quot;Integrating Applicative Data in a Product Context&quot; 
[<a href="#References">1</a>] use case for a detailed description of how this use 
case should be launched.</p>
<p>Specifically, the code described in this article is executed upon loading the 
PLM Product Reference into the V6 session. (You can use CAAPstINFProductRef.3dxml 
file in the InputData directory of the CAAProductStructureExtend.edu framework).</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPstINFVisu Code</h3>
<p>This use case describes:</p>
<ul>
	<li>The implementation class of the <em>CATI3DGeoVisu</em> interface for all StartUps 
		- <em>CAAEPstVisuxxx</em>, where xxx is Root, Point, Line and Wire in the 
		CAAPstINFModelerUI module.</li>
	<li>The implementation class of the <em>CATIModelEvents</em> interface for all 
		StartUps - <em>CAAEPstINFModelEvents</em> in the CAAPstINFModelerUI module.</li>
</ul>
<p><code>InstallRootFolder\CAADoc\CAAProductStructureExtend.edu\CAAPstINFModelerUI.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step"></a>Step-by-Step</h3>
<p>There are five logical steps to CAAPstINFVisu:</p>
<ol>
	<li><a href="#Step1">Implementing CATIModelEvents</a></li>
	<li><a href="#Step2">Implementing CATI3DGeoVisu to Visualize Root</a></li>
	<li><a href="#Step3">Implementing CATI3DGeoVisu to Visualize Point</a></li>
	<li><a href="#Step4">Implementing CATI3DGeoVisu to Visualize Line</a></li>
	<li><a href="#Step5">Implementing CATI3DGeoVisu to Visualize Wire</a></li>
</ol>
<p>The code implementations use interfaces implemented by each feature of the data 
model. You have a description of these interface in the referenced article [<a href="#References">5</a>].</p>
<p>Don't forget to update the dico file to insert a interface implementation declaration.</p>
<pre class="code">...
CAAPstINF<strong>xxx</strong> CATI3DGeoVisu libCAAPstINFModelerUI  
...</pre>
<p>where xxx is Root, Point, Line and Wire.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Implementing CATIModelEvents</h3>
<p>The StartUp does not implement natively <em>CATIModelEvents</em>. It is mandatory 
to send visualization's event , or to receive them. as you could see in the command 
[<a href="#References">6</a>], or when the container is loaded in session [<a href="#References">7</a>]</p>
<pre class="code">
#include "<strong>TIE_CATIModelEvents.h</strong>"
TIE_CATIModelEvents(CAAEPstINFModelEvents);

<strong>CATBeginImplementClass</strong>(CAAEPstINFModelEvents,
   		    DataExtension, 
		    CATBaseUnknown, 
		    <strong>CAAPstINFPoint</strong>);
CATAddClassExtension(<strong>CAAPstINFLine</strong>);
CATAddClassExtension(<strong>CAAPstINFWire</strong>);
CATAddClassExtension(<strong>CAAPstINFRoot</strong>);
<strong>CATEndImplementClass</strong>(CAAEPstINFModelEvents); 

CAAEPstINFModelEvents::CAAEPstINFModelEvents()
{
}

CAAEPstINFModelEvents::~CAAEPstINFModelEvents()
{
}
</pre>
<p>The implementation is very simple : you copy/paste the provided implementation 
and you replace the StartUp late type by yours. The implementation is always the 
same.</p>
<p>Don't forget the dictionary file:</p>
<pre class="code">...
CAAPstINF<strong>xxx</strong> <strong>CATIModelEvents</strong> libCAAPstINFModelerUI  
...</pre>
<p>Where xxx is Root, Point, Line and Wire.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Implementing CATI3DGeoVisu to Visualize Root</h3>
<p>The implementation is reduced to implement the <code>BuildRep</code> method [<a href="#References">4</a>]</p>
<pre class="code">...
CATRep * <strong>CAAEPstINFVisuRoot</strong>::<strong>BuildRep</strong>()
{
   // The rep to return 
   CAT3DBagRep * pRepRoot = NULL;

   // Create bag of representations
   pRepRoot = new CAT3DBagRep();

   CAAIPstINFRoot* piPstINFOnRoot = NULL;
   HRESULT rc = <strong>QueryInterface(IID_CAAIPstINFRoot,(void**)&amp;piPstINFOnRoot)</strong>;

   CATListValCATBaseUnknown_var oChildList;
   if (SUCCEEDED(rc))
   {
      rc = <strong>piPstINFOnRoot-&gt;GetChildren (oChildList)</strong>;
   }
   if ( SUCCEEDED(rc) )
   {
      for ( int i=1 ; i &lt;= oChildList.Size(); i++ )
      {
         CATBaseUnknown_var spCBUOnChild = oChildList[i];
	if (NULL_var != spCBUOnChild)
	{
	   // Computes or retrieves its graphic representation
	   <strong>CATVisManager * pVisuManager = CATVisManager::GetVisManager();</strong>
	  <strong> CATModelIdentificator Ident((CATBaseUnknown*)spCBUOnChild);</strong>
	   CAT3DRep * pRepChild = (CAT3DRep *) <strong>pVisuManager-&gt;BuildRep(Ident)</strong>;
	   if ( NULL != pRepChild )
		<strong>pRepRoot-&gt;AddChild(*pRepChild)</strong>;
	}
       }
    }

    if ( NULL != piPstINFOnRoot)
    {
        piPstINFOnRoot-&gt;Release();
        piPstINFOnRoot = NULL;
    }
    return pRepRoot;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Implementing CATI3DGeoVisu to Visualize Point</h3>
<p>The implementation consists in to implement the <code>BuildRep</code> method 
[<a href="#References">4</a>].</p>
<pre class="code">...
CATRep * <strong>CAAEPstINFVisuPoint::BuildRep</strong>()
{
  // The rep to return 
  <strong>CAT3DCustomRep *pPointRep = NULL</strong>;

  // the Point 
  <strong>CAAIPstINFPoint</strong>* piPstINFPoint = NULL;                
  HRESULT rc = <strong>QueryInterface(IID_CAAIPstINFPoint, (void**)&amp;piPstINFPoint)</strong>;
	                        
  // Retrieves coordinates of the point
  float coord[3];
  double val;
  if ( NULL != piPstINFPoint )
  {
     rc = <strong>piPstINFPoint-&gt;GetX(&amp;val)</strong>;
     coord[0] = val;
  }
  
  if ( NULL != piPstINFPoint )
  {
	rc = <strong>piPstINFPoint-&gt;GetY(&amp;val)</strong>;
	coord[1] = val;			
  }
	 
  if (NULL != piPstINFPoint)
  {
	  rc = <strong>piPstINFPoint&gt;GetZ((&amp;val)</strong>;
      coord[2] = val;
   }

   if (NULL != piPstINFPoint)
   {
	   piPstINFPoint-&gt;Release();
	   piPstINFPoint = NULL;
   }

   if ( SUCCEEDED(rc) )
   {
        // Creation of the 3D graphic representation
        pPointRep  = new <strong>CAT3DCustomRep</strong>() ;
	
        // Creation of the Graphic Primitive dedicated to the point
<strong>        CAT3DMarkerGP * pPointGp = new CAT3DMarkerGP(coord,1,CROSS)</strong>;
        // Default graphical attribute set 
        CATGraphicAttributeSet PointGa ;
     
        // Association of the Gp and the Ga to the Representation     
<strong>        pPointRep -&gt; AddGP(pPointGp,PointGa)</strong>;
	     
        // Sets the bounding sphere
        CAT3DBoundingSphere be(coord,0.f,1.f) ;
        pPointRep-&gt;SetBoundingElement(be);
    }
  
  return pPointRep; 
...</pre>
<p>And the <code>SetPointGraphicAttribute</code> method which is in explained in 
the &quot;Graphical Property Startup Behavior" use case [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Implementing CATI3DGeoVisu to Visualize Line</h3>
<p>The implementation consists in to implement the <code>BuildRep</code> method 
[<a href="#References">4</a>].</p>
<pre class="code">...
CATRep * <strong>CAAEPstINFVisuLine</strong>::<strong>BuildRep</strong>()
{
   // The rep to return
   <strong>CAT3DCustomRep *pLineRep = NULL</strong>;

   // the Line 
   <strong>CAAIPstINFLine</strong> *piPstINFLine = NULL;                
   HRESULT rc = <strong>QueryInterface(IID_CAAIPstINFLine,(void**)&amp;piPstINFLine)</strong>;

   // Retrieves the Start Point of the Line
   <strong>CAAIPstINFPoint</strong>* piPstINFPointOnStartPt = NULL;
   if (SUCCEEDED(rc)  &amp;&amp; ( NULL!=piPstINFLine) )
   {      
      rc = <strong>piPstINFLine -&gt;GetPoint(1,piPstINFPointOnStartPt)</strong>; 
   }

   // Creation of the Graphic Primitive dedicated to the Line
   float coord[6] ;
   double dCoord;

   // Retrieve co-ords of the StartPoint and build a CATMathPoint with those
    if (SUCCEEDED(rc) &amp;&amp; (NULL != piPstINFPointOnStartPt))
    {
       rc = piPstINFPointOnStartPt -&gt;<strong>GetX</strong> (&amp;dCoord);
       coord[0] = dCoord;
    }
    if (SUCCEEDED(rc) &amp;&amp; (NULL != piPstINFPointOnStartPt))
    {
       rc = piPstINFPointOnStartPt -&gt;<strong>GetY</strong> (&amp;dCoord);
       coord[1] = dCoord ;
     }
     if (SUCCEEDED(rc) &amp;&amp; (NULL != piPstINFPointOnStartPt))
     {
        rc = piPstINFPointOnStartPt -&gt;<strong>GetZ</strong> (&amp;dCoord);
        coord[2] = dCoord;
     }
...
     CATMathPoint start;
     start.SetCoord(coord[0],coord[1],coord[2]);

     //Retrieves the End Point of the Line
     <strong>CAAIPstINFPoint</strong>* piPstINFPointOnEndPt = NULL;
     if (SUCCEEDED(rc) &amp;&amp;(NULL != piPstINFLine))
     {
	rc = piPstINFLine -&gt; <strong>GetPoint</strong>(2,piPstINFPointOnEndPt);
     }

    if (SUCCEEDED(rc) &amp;&amp;(NULL != piPstINFPointOnEndPt))
    {
       rc = piPstINFPointOnEndPt -&gt; <strong>GetX</strong> (&amp;dCoord);
       coord[3] = dCoord;
    }
    if (SUCCEEDED(rc) &amp;&amp; (NULL != piPstINFPointOnEndPt))
    {
       rc = piPstINFPointOnEndPt -&gt;<strong>GetY</strong> (&amp;dCoord);
       coord[4] = dCoord ;
     }
     if (SUCCEEDED(rc) &amp;&amp; (NULL != piPstINFPointOnEndPt))
     {
        rc = piPstINFPointOnEndPt -&gt; <strong>GetZ</strong> (&amp;dCoord);
        coord[5] = dCoord;
     }
...
     CATMathPoint end;
     end.SetCoord	(coord[3],coord[4],coord[5]);

     if (SUCCEEDED(rc))
     {
	// Creation of the 3D graphic representation for a Line
	pLineRep = new <strong>CAT3DCustomRep</strong>();

	// Constructs the graphic primitive dedicated to the line
	<strong>CAT3DLineGP</strong> * pLineGp = new <strong>CAT3DLineGP</strong>(coord,2) ;

	// Default attribut graphique 
	<strong>CATGraphicAttributeSet</strong>   LineGa ;

	// Association of the Gp and the Ga to the Representation
	pLineRep-&gt;<strong>AddGP</strong>(pLineGp,LineGa);

	// Computes the Bounding sphere
	CATMathPoint center =  start + ((end-start) / 2.f)  ;
	float radius = (float) start.DistanceTo(center);
	<strong>CAT3DBoundingSphere</strong> be(center,radius);

	// Sets the bounding sphere
	pLineRep-&gt;<strong>SetBoundingElement</strong>(be) ;
    }
...
    return pLineRep; 
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Implementing CATI3DGeoVisu to Visualize Wire</h3>
<p>The implementation consists in to implement the <code>BuildRep</code> method 
[<a href="#References">4</a>].</p>
<pre class="code">...
CATRep * CAAEPstINFVisuWire::BuildRep()
{
  // The rep to return 
  <strong>CAT3DCustomRep</strong> *pWireRep = NULL ;
  
  <strong>CAAIPstINFWire</strong> *piPstINFWire = NULL;                
  HRESULT rc = <strong>QueryInterface(IID_CAAIPstINFWire,(void**)&amp;piPstINFWire)</strong>;
  
  // Retrieve the points of the wire.
  CATListPtrCATBaseUnknown ListOfPoint;
  int NbPoint ; 
  if (SUCCEEDED(rc))
  {
     // the method GetPoints ensure all points are valid
     rc = piPstINFWire -&gt;<strong>GetPoints</strong>(ListOfPoint);
     NbPoint = ListOfPoint.Size() ;
  }

  CATMathPoint Extrem1, Extrem2 ;
<strong>  float * pCoordTable = new  float [NbPoint * 3 ]</strong>;
  if ( SUCCEEDED(rc) )
  {
      // Local method  
      rc = RetrieveCoordinates(NbPoint,ListOfPoint,&amp;pCoordTable,Extrem1,Extrem2);
      // memory cleanup
      for ( int i=1 ; i &lt;= NbPoint; i ++ )
      {
         CATBaseUnknown * pCurpoint = ListOfPoint[i] ;
	if ( NULL != pCurpoint )
	{
             pCurpoint-&gt;Release();
	    pCurpoint = NULL ;
	}
      }
  }
  if ( SUCCEEDED(rc) )
  {
      // Creation of the 3D graphic representation
      pWireRep  = new <strong>CAT3DCustomRep</strong>() ;

      // Constructs the graphic primitive dedicated to the lines
      <strong>CAT3DLineGP</strong> * pLineGp = new <strong>CAT3DLineGP</strong>(pCoordTable,NbPoint,ALLOCATE, LINE_STRIP) ;
 
      <strong>CATGraphicAttributeSet</strong> LineGa ;
      pWireRep-&gt;AddGP(pLineGp,LineGa);

      // Sets the bounding sphere
      CATMathPoint center =  Extrem1 + ((Extrem2-Extrem1) / 2.f)  ;
      float radius = (float) Extrem1.DistanceTo(center);
      <strong>CAT3DBoundingSphere</strong> be(center,radius);
      pWireRep-&gt;<strong>SetBoundingElement</strong>(be);
  }
  
  delete [] pCoordTable ;
  pCoordTable = NULL ;

  if (NULL != piPstINFWire)
  {
	piPstINFWire-&gt;Release();
	piPstINFWire = NULL ;
  }

  return pWireRep;
}
...</pre>
<p>and the <code>SetPointGraphicAttribute</code> / <code>SetLineGraphicAttribute</code> 
methods which are explained in the &quot;Graphical Property Startup Behavior&quot; 
use case [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The CAAPstINFVisu use case has shown you how to implement <em>CATI3DGeoVisu</em> 
to provide a graphic representation.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAPstUcINFIntegrateNewFeatures.htm">Integrating Applicative 
		Data in Product Context</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAPstUcINFGraphicalProperties.htm">Graphical Property StartUp 
		Behavior</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkOutOfPreqs('CAAVisVisualization/CAAVisUcSampleNewCATIVisu.htm')">
		Making a Component Displayable With CATI3DGeoVisu</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAAPstUcINFIntrinsicFeatBehavior.htm">Inherent StartUp Behavior</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td><a href="CAAPstUcINFMVCUpdate.htm">Managing View Refresh</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td><a href="CAAPstUcINFInitCont.htm">Initializing the Applicative Container 
		at Runtime</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>2</strong> [Jan 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
