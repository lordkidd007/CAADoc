<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Exposing Selectively Cut, Copy, Paste, Delete</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Exposing Selectively Cut, Copy, Paste, Delete</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The contextual menu associated with a PLM product Instance contains the 
		Cut, Copy, Paste, Paste Special, and Delete commands. This commands are 
		by default available. But you can prohibit them by code. This use case explains 
		how you can disable them selectively for the StartUps.</p>
		<p>This article is one among a set of articles which together discuss the 
		"Integrating Applicative Data in Product Context" use case [<a href="#References">1</a>].</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAPstINFCSOFilter Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAPstINFCSOFilter Do</a></li>
					<li><a href="#Launch">How to Launch CAAPstINFCSOFilter</a></li>
					<li><a href="#Where">Where to Find the CAAPstINFCSOFilter Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to illustrate how to disable some UI Commands.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPstINFCSOFilter Use Case</h2>
<p><code>CAAPstINFDataCommonProtocol</code> is a use case of the CAAProductStructureExtend.edu 
framework that illustrates FeatureModelerExt framework capabilities</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does the CAAPstINFCSOFilter Use Case Do</h3>
<p>These table sums up the behavior that we have implemented for the Root, the Point, 
the Line and the Wire:</p>
<ul>
	<li><strong>CAAPstINFRoot</strong>
		<table class="fill">
			<tr>
				<th>Operations</th>
				<th>Avaibility</th>
			</tr>
			<tr>
				<td>Copy</td>
				<td>No</td>
			</tr>
			<tr>
				<td>Cut</td>
				<td>No</td>
			</tr>
			<tr>
				<td>Delete</td>
				<td>Yes</td>
			</tr>
			<tr>
				<td>Paste</td>
				<td>Yes</td>
			</tr>
			<tr>
				<td>Paste Special</td>
				<td>No</td>
			</tr>
		</table>
	</li>
	<li><strong>CAAPstINFPoint</strong> / <strong>CAAPstINFLine</strong> /
		<strong>CAAPstINFWire</strong>
		<table class="fill">
			<tr>
				<th>Operations</th>
				<th>Avaibility</th>
			</tr>
			<tr>
				<td>Copy</td>
				<td>Yes</td>
			</tr>
			<tr>
				<td>Cut</td>
				<td>Yes</td>
			</tr>
			<tr>
				<td>Delete</td>
				<td>Yes</td>
			</tr>
			<tr>
				<td>Paste</td>
				<td>No</td>
			</tr>
			<tr>
				<td>Paste Special</td>
				<td>No</td>
			</tr>
		</table>
	</li>
</ul>
<p>These behaviors are customizable through the <em>CATICSOFilter</em> implementation.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Launch"></a>How to Launch the CAAPstINFCSOFilter Use Case</h3>
<p>See the section entitled &quot;How to Launch the Integrating Applicative Data 
In Product Context Use Case&quot; [<a href="#References">1</a>] in the referenced 
use case for a detailed description of how this use case should be launched.</p>
<p>Specifically, the code described in this article is executed upon loading the 
PLM Product Reference into the V6 session. (You can use CAAPstINFProduct.3DXML file 
in the InputData directory of the CAAProductStructureExtend.edu framework).</p>
<p>Interactive scenario once the CAAPstINFProduct is loaded:</p>
<ul>
	<li>Click button left on a <strong>Point (Line or Wire</strong>).</li>
	<li>Button right, click the <strong>Copy</strong> command.</li>
	<li>Select a Root.</li>
	<li>Button right, click the <strong>Paste</strong> command.</li>
</ul>
<p>Or</p>
<ul>
	<li>Click button left on a <strong>Point (Line or Wire)</strong>.</li>
	<li>Button right, click the <strong>Cut</strong> command.</li>
	<li>Select a Root.</li>
	<li>Button right, click the <strong>Paste</strong> command.</li>
</ul>
<p>Or</p>
<ul>
	<li>Click button left on a <strong>Point (Line or Wire)</strong>.</li>
	<li>Button right, click the <strong>Delete</strong> command.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPstINFCSOFilter Code</h3>
<p>This use case describes the implementation of the <em>CATICSOFilter</em> interface:</p>
<ul>
	<li>For the &quot;CAAPstINFRoot&quot;, CAAEPstINFCSORoot.cpp.</li>
	<li>For others, CAAEPstINFCSO.cpp.</li>
</ul>
<p>These files can be found in the CAAPstINFModelerUI.m shared library.</p>
<p><code>InstallRootFolder\CAADoc\CAAProductStructureExtend.edu\CAAPstINFModelerUI.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are two logical steps in CAAPstINFCSOFilter use case:</p>
<ol>
	<li><a href="#CSORoot">Implementing the <em>CATICSOFilter</em> for Root Features</a></li>
	<li><a href="#CSOFeature">Implementing the <em>CATICSOFilter</em> for Point, Line 
		and Wire Features</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="CSORoot"></a>Implementing the CATICSOFilter for Root Features</h3>
<pre class="code">
HRESULT <strong>CAAEPstINFCSORoot::CommandIsAvailable</strong> (const char *pHeaderID, const CATCSO *pCSO)
{
	 
    HRESULT result = E_FAIL;
  
    //Only Paste/Delete is available for Root, no cut, no copy, no Paste Special
    if (!strcmp(pHeaderID, "<strong>Paste</strong>"))   result = S_OK;
    if (!strcmp(pHeaderID, "<strong>Delete</strong>"))  result = S_OK;
       
    return result;	
}
</pre>
<p>The CommandIsAvailable() routine of the <em>CATICSOFilter</em> Interface implemented 
on the root feature is invoked for each of its contextual command. The first argument 
to the routine is the command identifier.</p>
<p>The implementation simply confirms if the command identifier input is one of 
those commands to be be made available in the contextual menu of a feature, and 
returns <strong>S_OK</strong> if found.</p>
<p>In the current case, the <strong>Paste</strong> and <strong>Delete</strong> commands, 
are to be made available in the contextual menu for the Root feature.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="CSOFeature"></a>Implementing the CATICSOFilter for Point/Line/Wire 
Features</h3>
<pre class="code">...
HRESULT <strong>CAAEPstINFCSO::CommandIsAvailable</strong> (const char *pHeaderID, const CATCSO *pCSO)
{
    HRESULT rc = S_OK ; 

    // no Paste for these features, but copy/cut and delete are available
    if (!strcmp(pHeaderID, "<strong>Paste</strong>"))  rc = E_FAIL ;
    if (!strcmp(pHeaderID, "<strong>PasteSpecial</strong>"))  rc = E_FAIL ;

    return rc;
}
...</pre>
<p>For the Point, Line and Wire features, the Paste and Paste Special commands are 
irrelvant and hence the implementation returns E_FAIL.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The <em>CAAPstINFCSOFilter</em> use case has shown you how to implement <em>CATICSOFilter</em> 
to able or disable some UI Commands.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table>
	<tr>
		<td>[1]</td>
		<td><a href="CAAPstUcINFBuildCatalog.htm">Integrating Applicative Data In 
		Product Context</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table>
	<tr>
		<td>Version: <strong>1</strong> [Jan 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
