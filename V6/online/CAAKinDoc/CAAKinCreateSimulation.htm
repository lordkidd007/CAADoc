<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating and Executing a Simulation</title>
    <style type="text/css">
        .auto-style1
        {
            height: 21px;
        }
    </style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating&nbsp; a Kinematics Simulation</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article explains how to kinematics simulation.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAKinCreateSimulation Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAKinCreateSimulation Do</a></li>
				<li><a href="#How">How to Launch CAAKinCreateSimulation</a></li>
				<li><a href="#Where">Where to Find the CAAKinCreateSimulation Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show how to create a 
    kinematics simulation using the Generic CAA APIs.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAKinCreateSimulation Use Case</h2>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAKinCreateSimulation Do?</h3>
<p>CAAKinCreateSimulation creates a kinematics simulation</p>
<p>The model result of this use case is shown in [<a href="#Fig1">Fig.1</a>]. A simulation object Simu1 is cretaed with the Model pointing the Product CAA_PRoot.</p>
<table>
	<caption align="center"><a name="Fig1"></a>Fig1: The Simulation object Simu1</caption>
	<tr>
		<td><img src="images/KinSimulation.jpg"/></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAKinCreateSimulation</h3>
<p>To launch CAAKinCreateSimulation, you will need to set up the build time 
environment, compile CAAKinCreateSimulation.m along with its prerequisites, set 
up the run time environment, and execute the use case [<a href="#References">1</a>].</p>
<p>To launch the use case, execute the following command:</p>
<p><code>mkrun -c &quot;<i>CAAKinCreateSimulation Repository Server User Password SecurityCtx 
PLM_Type PLM_External_Root V_version_Root</i>&quot;</code></p>
<p>where :</p>
<code>
<table  id="table1" >
	<tr>		
		<th><b><i>Repository</i></b></th>
		<td>PLM1</td>
	</tr>
	<tr>
		<th ><b><i>Server</i></b></th>
		<td >The server as host::<i> name</i>:<i>port_number/RootURI</i></td>
	</tr>
	<tr>
		<th class="auto-style1"><b><i>User</i></b></th>
		<td class="auto-style1">The user name</td>
	</tr>
	<tr>
		<th><b><i>Password</i></b></th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th><b><i>SecurityCtx</i></b></th>
		<td>A string representing the security context ( Role. Organization. Project&nbsp;);<o:p>
            Choose Role as Designer ( as the use case create the PLM Data)</o:p></td>
	</tr>
	<tr>
		<th><b>PLM_Type</b></th>
		<td>The PLM type of the Product to open</td>
	</tr>
	<tr>
		<th><b>PLM_External_Root</b></th>
		<td>The PLM Id of the Product to open</td>
	</tr>
	<tr>
		<th><b>V_version_Root</b></th>
		<td>The PLM version of the Product</td>
	</tr>
</table>
</code>
<p><b>Import PLM Data:</b><br/>
    <span style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, 'sans serif'; font-size: 10.909090995788574px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); display: inline !important; float: none;">The use case may require input PLM Data: PLM Reference or PLM Representation Reference. This data is stored in 3D XML files, whose extension is &quot;3dxml&quot;. You must import these PLM Data in the database using the PLM Access / Import As 3D XML command prior to launching the use case.</span><br style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, 'sans serif'; font-size: 10.909090995788574px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);" />
    <span style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, 'sans serif'; font-size: 10.909090995788574px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); display: inline !important; float: none;">The &quot;3dxml&quot; file is supplied in the CAAAssemblyConstraint.edu/InputData/CAA_PRoot.3dxml.</span>l
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAKinCreateSimulation Code</h3>
<p>The CAAKinCreateSimulation use case is made of a single source file named CAAKinCreateSimulation.cpp 
located in the CAAKinCreateSimulation.m module of the CAAKinSimulationUseItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAKinSimulationUseItf.edu\CAAKinCreateSimulation.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are eighteen logical steps in CAAKinCreateSimulation:</p>
<ol>
	<li><a href="#Step1">Opening the PLM Product</a></li>
	<li><a href="#Step2">Loading Representation Components</a></li>
	<li><a href="#Step3">Creating the simulation PLM Object</a></li>
	<li><a href="#Step4">Saving the simulation PLM object</a></li>
	<li><a href="#Step5">Closing the PLM session</a></li>
</ol>
<p>We will now discuss each of those sections in detail.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the PLM Product</h3>
<pre class="code">...
      const char * charPLMID = iArgv[7];
      CATUnicodeString strPLMID = charPLMID;
      const char * char_VersionValue = iArgv[8];
      CATUnicodeString strVersionValue = char_VersionValue;
      CATIPLMNavReference * piNavRefOnRoot = NULL;
      CATIAlias_var spAlias;
      CATOmbLifeCycleRootsBag Bag;
      hr = ::CAAOpenPLMComponent( StrPLMType,
                                  strPLMID, strVersionValue,
                                  IID_CATIPLMNavReference, (void **)& piNavRefOnRoot, Bag,
                                  TRUE); // TRUE = Expand All
  ...</pre>
<p><em>CAAAdpOpenProduct</em> is a service extract from CAA Use case containing the usual sequence for opening an existing product structure.&nbsp;
</p>
<h3><a name="Step2"></a>Loading Representation Components</h3>
<pre class="code">...
if( SUCCEEDED( RecursiveLoad( piNavRefOnRoot)) )
{
...</pre>
<p> RecursiveLoad is an internal method of the use case which loads 
all components from the root product.</p>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating the simulation PLM Object</h3>
<p>This step is the creation of a simulation PLM object on the opened product.</p>
<p>To do this, you should use the <code>CreateKinematicSimulation  </code>method of 
<code>CATIKinSimulationServices</code> interface. .</p>
<pre class="code">...
          CATIKinSimulationServices * piKinSimulationServices=NULL;
          hr=CreateKinSimulationServices( piKinSimulationServices);
          if (piKinSimulationServices != NULL )
          {    
            CATIType_var spType;
            CATUnicodeString  usSimulationName="Simu1";
            CATBaseUnknown_var spContext = piNavRefOnRoot;                                
            CATISimulationPLMManager*    piSimulationManager = NULL;
            CATLISTV(CATBaseUnknown_var)* piListAttributes = NULL;
            CATIAdpEnvironment* piEnv = NULL;
            CATICkeObject_var spProxy ;

            hr=piKinSimulationServices-&gt;CreateKinematicSimulation (
              spType,
              usSimulationName,               
              spContext,                                              
              piSimulationManager,
              piListAttributes ,
              piEnv ,  
              spProxy  );
    ...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Saving the simulation PLM object</h3>
<p>To save the simulation PLM object, you should use services from the <code>
CATAdpOpenSaveServices</code> framework.</p>
<pre class="code">
    ...
        hr = CATAdpOpenSaveServices::Save();
    ...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Closing the PLM session</h3>
<p>To close the test model, you should use services from the <code>CAAPLMClientAdapter.edu</code> framework. </p>
<pre class="code">...
hr = ::CAAAdpCloseSession();
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Oct 2013]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
