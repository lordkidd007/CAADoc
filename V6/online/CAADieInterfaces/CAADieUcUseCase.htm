<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Importing and Exporting an External File</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Importing and Exporting an External File</h1>
		</td>
	</tr>
	<tr>
		<td class="use" colspan="2">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h3>Abstract</h3>
		<p>This article shows how to use both CATDXImportExport services (import 
		and export).</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAACATDieImporterExporterSample Use Case</a>
			<ul>
				<li><a href="#What">What Does CAACATDieImporterExporterSample Do</a></li>
				<li><a href="#How">How to Launch CAACATDieImporterExporterSample</a></li>
				<li><a href="#Where">Where to Find the CAACATDieImporterExporterSample 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Learn"></a>What You Will Learn With This Use Case</h3>
<p>This use case is intended to show you how to use CATDXImportExport services, 
to import an external file to V6 and to export a V6 PLM object to an external file.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="UseCase"></a>The CAACATDieImporterExporterSample Use Case</h3>
<p>CAACATDieImporterExporterSample is a use case of the CAADXImportExportFile.edu 
framework that illustrates CATDXImportExport framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="What"></a>What Does CAACATDieImporterExporterSample Do</h4>
<p>This Use Case will take the full sample of a loop External file -&gt; V6 -&gt; External 
file (two steps).</p>
<ul>
	<li>Before, CAACATDieImporterExporterSample initialize the PLM environment (V6 
	session) with the given user parameters.</li>
	<li>The first goal of CAACATDieImporterExporterSample is to import an external 
	file to a V6 PLM object.</li>
	<li>Then, the second goal is to export the opened V6 PLM object to another external 
	file.</li>
	<li>After Import and Export, the PLM environment is closed.</li>
</ul>
<p>In case of failure, CAACATDieImporterExporterSample prints the occurred error 
message.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="How"></a>How to Launch CAACATDieImporterExporterSample</h4>
<p>To launch CAACATDieImporterExporterSample, you will need to set up the build 
time environment, then compile CAACATDieImporterExporterSample along with its prerequisites, 
set up the run time environment, and then execute the use case [<a href="#References">1</a>].</p>
<p>CAACATDieImporterExporterSample needs 10 parameters:</p>
<pre class="code">
CAACATDieImporterExporterSample &lt;<strong>Repository</strong>&gt; &lt;<strong>Server</strong>&gt; &lt;<strong>Username</strong>&gt; &lt;<strong>Password</strong>&gt; &lt;<strong>Role</strong>&gt;
                                &lt;<strong>InputFile</strong>&gt; &lt;<strong>ImportUsage</strong>&gt; &lt;<strong>OutputFile</strong>&gt; &lt;<strong>OutputType</strong>&gt; &lt;<strong>ExportUsage</strong>&gt;</pre>
<table class="fill">
	<tr>
		<td><em><strong>A.</strong></em></td>
		<td>&nbsp;</td>
		<td><em><strong>Arguments for the PLM Session:</strong></em></td>
		<td><em>To initialize the V6 PLM environment</em> [<a href="#References">2</a>]</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>1.</td>
		<td>&lt;<strong>Repository</strong>&gt;</td>
		<td>PLM repository</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>2.</td>
		<td>&lt;<strong>Server</strong>&gt;</td>
		<td>PLM server</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>3.</td>
		<td>&lt;<strong>Username</strong>&gt; </td>
		<td>PLM user name</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>4.</td>
		<td>&lt;<strong>Password</strong>&gt;</td>
		<td>PLM user password</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>5.</td>
		<td>&lt;<strong>Role</strong>&gt;</td>
		<td>PLM role</td>
	</tr>
	<tr>
		<td><em><strong>B. </strong></em></td>
		<td>&nbsp;</td>
		<td><em><strong>Arguments for Import: </strong></em></td>
		<td><em>Input data</em></td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>6.</td>
		<td>&lt;<strong>InputFile</strong>&gt;</td>
		<td>Input file to import (complete path, <strong>with</strong> its extension)</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>7.</td>
		<td>&lt;<strong>ImportUsage</strong>&gt;</td>
		<td>Usage for input file Import</td>
	</tr>
	<tr>
		<td><em><strong>C.</strong></em></td>
		<td>&nbsp;</td>
		<td><em><strong>Arguments for Export:</strong></em></td>
		<td><em>Output information</em></td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>8.</td>
		<td>&lt;<strong>OutputFile</strong>&gt;</td>
		<td>Output file for export (file path, <strong>WITHOUT</strong> the output 
		extension)</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>9.</td>
		<td>&lt;<strong>OutputType</strong>&gt;</td>
		<td>Extension for Export to the output file</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>10.</td>
		<td>&lt;<strong>ExportUsage</strong>&gt;</td>
		<td>Usage for Export to the output file</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Where"></a>Where to Find the CAACATDieImporterExporterSample Code</h4>
<p>The CAACATDieImporterExporterSample use case is made of a single file located 
in the CAACATDieImporterExporterSample.m module of the CAADXImportExportFile.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAADXImportExportFile.edu\CAACATDieImporterExporterSample.m\CAACATDieImporterExporterSample.cpp</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step"></a>Step-by-Step</h3>
<p>There are seven logical steps in CAACATDieImporterExporterSample:</p>
<ol>
	<li><a href="#Step1">Retrieving the PLM Environment</a></li>
	<li><a href="#Step2">Getting a Singleton Instance Pointer</a></li>
	<li><a href="#Step3">Importing the Input External File</a></li>
	<li><a href="#Step4">Exporting the Imported Data to Another External File</a></li>
	<li><a href="#Step5">Releasing the Singleton Instance</a></li>
	<li><a href="#Step6">Getting Error Message (in Case of Failure)</a></li>
	<li><a href="#Step7">Closing the PLM Session</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step1"></a>Retrieving the PLM Environment</h4>
<pre class="code"> // PLM Connection
// iArgv1 : PLM | PLM repository
// iArgv2 : PLM | PLM server
// iArgv3 : PLM | Username
// iArgv4 : PLM | Password
// iArgv5 : PLM | Role
// &quot;TRUE&quot; as 6th argument: to print traces...
HRESULT hr = ::CAAAdpCreateSession ( iArgv[1] , iArgv[2] , iArgv[3] , iArgv[4] , iArgv[5] , TRUE ) ; 

// PLM Environment
PLMPSISessionHelpers * pHelpers = NULL ;
PLMPSISessionHelpers::GetSessionHelpers(pHelpers);
if ( pHelpers ) {
  const CATString PLMEnv = &quot;Default&quot; ; // Fix to &quot;Default&quot;
  hr = pHelpers-&gt;SetCurrentEnvironment(PLMEnv);
}</pre>
<p>Mandatory step for Import: a V6 PLM Session must be created, a PLM Environment 
must be set. [<a href="#References">2</a>]</p>
<p><strong>Notes</strong>:</p>
<ul>
	<li>The 6th parameter of CAAAdpCreateSession() is optional (to print traces).</li>
	<li>The PLM environment is set to &quot;Default&quot;.</li>
	<li>Do not release pHelpers.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step2"></a>Getting a Singleton Instance Pointer</h4>
<pre class="code">CATDieImportExportServices * ServicesInstance = CATDieImportExportServices::GetInstance() ;</pre>
<p>The Services class CATDieImportExportServices is a Singleton class, as defined 
by Programming Design Patterns (by the &quot;GOF&quot;).</p>
<p>A unique instance of this class is created (if it doesn&#39;t exist yet) and a pointer 
to this instance is get by GetInstance() method.</p>
<p>Then we can use this pointer to call Import and Export functions.</p>
<p>The instance will be released after use in <a href="#Step5">the 5th step</a>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step3"></a>Importing the Input External File</h4>
<pre class="code">// iArgv6 : IMPORT | File with extension
// iArgv7 : IMPORT | Usage

CATUnicodeString InputFilePath = iArgv[6] ;
CATUnicodeString InputUsage    = iArgv[7] ;

// PLM Object created by Importer
CATBaseUnknown * pPLMObject = NULL ;

hr = ServicesInstance-&gt;ImportExternalFileToPLMObject ( InputFilePath , InputUsage , pPLMObject ) ;</pre>
<p>First conversion: Import of the input file, with the input usage, to create a 
new PLM object.</p>
<p>We will export this new PLM object in the <a href="#Step4">next step</a>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step4"></a>Exporting the Imported Data to Another External File</h4>
<pre class="code">
// iArgv8  : EXPORT | File without extension
// iArgv9  : EXPORT | Extension
// iArgv10 : EXPORT | Usage

CATUnicodeString OutputFilePath      = iArgv[8]  ;
CATUnicodeString OutputFileExtension = iArgv[9]  ;
CATUnicodeString OutputUsage         = iArgv[10] ;

hr = ServicesInstance-&gt;ExportPLMObjectToExternalFile ( pPLMObject , OutputFilePath , OutputFileExtension , OutputUsage ) ;</pre>
<p>Second conversion (if the first one has succeeded): Export of the V6 PLM object 
to an external file, with a given usage.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step5" href="#Step5"></a>Releasing the Singleton Instance</h4>
<pre class="code">
CATDieImportExportServices::DeleteInstance() ;

if ( pPLMObject != NULL )
    pPLMObject -&gt; Release () ;
pPLMObject = NULL ;</pre>
<p>We will not use Import and Export services any more: the instance of the Singleton 
services class can and must be released.</p>
<p>After use, the PLM object must be released too.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step6" href="#Step6"></a>Getting Error Message (in Case of Failure)</h4>
<pre class="code">
if ( FAILED(hr) )
{
  CATError * pOccurringError = CATError::CATGetLastError(ReturnCode);
  if (pOccurringError)
{
    const char* ErrorMessageID = pOccurringError -&gt; GetMsgId ();
    fprintf ( stdout, &quot;\n [%s] \n\n&quot;, ErrorMessageID ) ;

    CATUnicodeString ErrorFullMessage = pOccurringError -&gt; GetNLSMessage ();
    fprintf ( stdout, &quot; %s \n\n&quot;, ErrorFullMessage.ConvertToChar() ) ;

    pOccurringError -&gt; Release () ;
    pOccurringError = NULL ;

    CATError::CATCleanLastError () ;
  } 
}</pre>
<p>If a method as failed (returned HRESULT is E_FAIL, ...), we get and print the 
error message ID and its full description. [<a href="#References">3</a>]</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step7" href="#Step7"></a>Closing the PLM Session</h4>
<pre class="code">::CAAAdpCloseSession() ;</pre>
<p>Close the session, quit the PLM environment.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="InShort"></a>In Short</h3>
<p>CAACATDieImporterExporterSample shows how to import and export an external file 
with CATDXImportExport services class.</p>
<p>This Use Case execute both services (import and export).</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="References"></a>References</h3>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAASysMiddleware/CAASysTaMidErrors.htm">
		Managing Errors Using HRESULT</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="History"></a>History</h3>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Aug 2006]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
