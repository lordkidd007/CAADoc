<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Inserting Commands in Contextual Menus</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Inserting Commands in Contextual Menus</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article shows how to insert commands in the contextual menu when 
		the Select command is the active one.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAACafContextualMenu Use Case</a>
				<ul>
					<li><a href="#What">What Does CAACafContextualMenu Do</a></li>
					<li><a href="#How">How to Launch CAACafContextualMenu</a></li>
					<li><a href="#Where">Where to Find the CAACafContextualMenu 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how insert commands in the contextual menu 
of an object when the Select command is the current command. So in other words this 
article explains how to implement the <em>CATIContextualMenu</em> interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAACafContextualMenu Use Case</h2>
<p>CAACafContextualMenu is a use case of the CAACATIAApplicationFrm.edu framework 
that illustrates CATIAApplicationFrame framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAACafContextualMenu Do</h3>
<p>CAACafContextualMenu enables you to display the following contextual menu when 
you right click on an Ellipse during the Select command life:</p>
<p>
<img alt="" src="images/CAACafCtxMenuEllipse2.jpg" width="192" height="367"/></p>
<p>This menu is separated into three parts:</p>
<ol>
	<li>The items added in the menu by the current tab. <code>Center Graph, Reframe 
		On</code> ... are items added by the <em>CATFrmGraphAnd3DWindow</em> class. 
		This part is independent of the <em>CATIContextualMenu</em> implementation 
		on the Ellipse. </li>
	<li>The items defined in the contextual menu of the UIActive object [<a href="#References">1</a>] 
		and added in the menu by the <em>CATIContextualMenu</em> implementation 
		on the Ellipse.</li>
	<li>The items defined and added by the <em>CATIContextualMenu</em> implementation 
		on the Ellipse in the menu.</li>
</ol>
<p>These two commands are <code>Ellipse</code> and <code>Circle</code>, two commands 
defined in the <kbd>CAA Create Geom</kbd> app of &quot;CAA Geometry&quot; model. To reuse it, you 
should retrieve their command header identifiers [<a href="#References">2</a>]. 
The <kbd>Application Frame Structure Exposition</kbd> command enables you to find them.</p>
<p>Launch <code>3DEXPERIENCE</code>, when the application is ready:</p>
<ul>
     <li>Click on <kbd>3D</kbd>, the west quadrant of Compass.</li>
    <li>In the <kbd>3D Modeling apps</kbd> section, select <kbd>CAA Create Geom</kbd> app. </li>	
	<li>On the top bar, click right button-&gt;<kbd>Display</kbd>-&gt;<kbd>Customize</kbd></li>
	<li>The<strong> Customize</strong> Dialog Box appears
		<ul>
			<li>Click the <kbd>Section</kbd> page</li>
			<li>Select a section, for example <kbd>Tools</kbd> </li>
			<li>Click on <kbd>Add commands...</kbd> </li>
			<li>Select the <kbd>Application Frame Structure Exposition</kbd> command</li>
			<li>Click <kbd>Close</kbd></li>
		</ul>
	</li>
	<li>Launch the <kbd>Application Frame Structure Exposition</kbd> command
		<p>
		<img alt="" src="images/CAACafCtxMenuWshopExpo2.jpg" width="345" height="337"/></p>
		<ul>
			<li>Select <strong>CAAAfrGeometryWks</strong></li>
			<li>Enter a Path in the <kbd>Directory</kbd> editor</li>
			<li>Click <kbd>Print</kbd> : The <strong>CAAAfrGeometryWks.txt</strong> 
				file is generated</li>
			<li>Click <kbd>OK</kbd></li>
		</ul>
	</li>
</ul>
<p>In the <strong>CAAAfrGeometryWks</strong><strong>.txt</strong> find out the &quot;<code>Ellipse</code> &quot; 
and &quot;<code>Circle</code>&quot; strings:</p>
<table>
	<tr>
		<td>
		<img alt="Ellipse Command Header Identifier" height="78" src="images/CAACafCtxMenuEllipseHdr.jpg" width="269"/></td>
		<td>
		<img alt="Circle Command Header Identifier" height="80" src="images/CAACafCtxMenuCircleHdr.jpg" width="268"/></td>
	</tr>
</table>
<p>The identifiers of the command header instances are the <strong>Id</strong> strings, 
so <strong>CAAAfrEllipseHdr</strong> and <strong>CAAAfrCircleHdr</strong> for the &quot;<code>Ellipse</code> &quot; 
and &quot;<code>Circle</code>&quot; commands respectively. These two identifiers 
will be associated with the starters of the menu.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAACafContextualMenu</h3>
<p>See the section entitled &quot;How to Launch the CAAGeometry Use Case&quot; in 
[<a href="#References">4</a>] for a detailed description of how this use case should 
be launched. For the specific scenario:</p>
<ul>
    <li>Click on <strong>3D</strong>, the west quadrant of Compass.</li>
    <li>In the <strong>3D Modeling apps</strong> section, select <strong>CAA Create 
	Geom</strong> app. </li>
	<li>Create three <strong>Points</strong></li>
	<li>Create a <strong>Plane</strong></li>
	<li>Create an <strong>Ellipse</strong></li>
	<li>Right click on the <strong>Ellipse</strong> and select the <strong>Circle</strong> 
		command</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAACafContextualMenu Code</h3>
<p>The CAACafContextualMenu use case is made of one single class, the CAAECafContextualMenuEllipse 
class, located in the CAACafContextualMenu.m module of the CAACATIAApplicationFrm.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAACATIAApplicationFrm.edu\CAACafContextualMenu.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>To implement the <em>CATIContextualMenu</em> interface, there are two steps:</p>
<ol>
	<li><a href="#Header">Creating the Contextual Menu Description Class</a></li>
	<li><a href="#Source">Creating the Contextual Menu
		</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Header"></a> Creating the Contextual 
Menu Description Class</h3>
<ol>
	<li>Create the CAAECafContextualMenuEllipse.h file
		<pre class="code">#include &quot;CATExtIContextualMenu.h&quot;

class CAAECafContextualMenuEllipse : public <strong>CATExtIContextualMenu</strong>
{
  CATDeclareClass;

  public:

    CAAECafContextualMenuEllipse();
    virtual ~CAAECafContextualMenuEllipse();

  private:
    CAAECafContextualMenuEllipse(const CAAECafContextualMenuEllipse &amp;iObjectToCopy);
    CAAECafContextualMenuEllipse&amp; operator = (const CAAECafContextualMenuEllipse
                                                           &amp;iObjectToCopy);
};</pre>
		<p>The implementation class derives from the <em>CATExtIContextualMenu</em> 
		adapter class.</p>
	</li>
	<li>Create the CAAECafContextualMenuEllipse.cpp file
		<pre class="code">#include &quot;CAAECafContextualMenuEllipse.h&quot;
#include &quot;CATCreateWorkshop.h&quot;

<strong>CATImplementClass</strong>(CAAECafContextualMenuEllipse, 
                        DataExtension,CATBaseUnknown,
                        <strong>CAASysEllipse</strong>);

#include &quot;TIE_CATIContextualMenu.h&quot;
TIE_<strong>CATIContextualMenu</strong>(CAAECafContextualMenuEllipse);
...</pre>
		<p>The CAAECafContextualMenuEllipse class states that it implements the
		<em>CATIContextualMenu</em> interface thanks to the <code>TIE_CATIContextualMenu</code> 
		macro. The <code>CATImplementClass</code> macro declares that the CAAECafContextualMenuEllipse 
		class is a data extension, thanks to the <code>DataExtension</code> keyword, 
		that extends <em>CAASysEllipse</em>. The third argument must always be set 
		as <em>CATBaseUnknown</em> or <em>CATNull</em> for any kind of extension.</p>
		<pre class="code">...
CAAECafContextualMenuEllipse::CAAECafContextualMenuEllipse()
{
    <a href="#Source">Creating the Contextual Menu</a>
}

CAAECafContextualMenuEllipse::~CAAECafContextualMenuEllipse()
{
}
</pre>
		<p>The constructor contains the main code, and the destructor is empty.</p>
	</li>
	<li>Updating the Interface Dictionary
		<p>Update the interface dictionary, that is a file named, for example, CAACATIAApplicationFrm.dico, 
		whose directory's pathname is concatenated at run time in the CATDictionaryPath 
		environment variable, and containing the following declaration to state 
		that the CAASysEllipse component implements the <em>CATIContextualMenu</em> 
		interface, and whose code is located in the libCAACafContextualMenu shared 
		library or DLL.</p>
		<pre class="code">CAASysEllipse CATIContextualMenu libCAACafContextualMenu</pre>
	</li>
</ol>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Source"></a>Creating the Contextual Menu</h3>
<p>In this use case, the contextual menu associated with the UIActive object is 
first retrieved. It is possible thanks to the <code>GetContextualMenu</code> method 
of the adapter class. This menu, <code>pMenu</code>, is completed with the two commands 
(Circle and Ellipse). A separator is also added.</p>
<pre class="code">   ...
   <strong>CATCmdContainer</strong> * pMenu = NULL ; 

   CATExtIContextualMenu::<strong>GetContextualMenu</strong>(pMenu);

   if ( NULL != pMenu )
   {
      <strong>NewAccess</strong>(CATCmdStarter,pStEllipse,CAACafContextualMenuEllipseStr);
      NewAccess(CATCmdStarter,pStCircle,CAACafContextualMenuCircleStr);
      NewAccess(CATCmdSeparator,pSep1,CAACafContextualMenuSep);

      <strong>SetAccessCommand</strong>(pStEllipse,&quot;<strong>CAAAfrEllipseHdr</strong>&quot;);
      SetAccessCommand(pStCircle,&quot;<strong>CAAAfrCircleHdr</strong>&quot;);
      
      <strong>AddAccessChild</strong>(pMenu,pStEllipse);
      
      <strong>SetAccessNext</strong>(pStEllipse,pStCircle);
      SetAccessNext(pStCircle,pSep1);     
   }
   ...</pre>
<p>The menu, <code>pMenu,</code> is completed thanks to&nbsp; macros contained in the
<code>CATCreateWorkshop</code> file:</p>
<ul>
	<li>NewAccess
		<p>A command starter is created as a <em>CATCmdStarter</em> instance using 
		the <code>NewAccess</code> macro. <code>pStEllipse</code> is the variable 
		used to handle a pointer to the instance, and <code>CAACafContextualMenuEllipseStr</code> 
		is its identifier.</p>
		<p>A separator access is created as a <em>CATCmdSeparator</em> instance 
		using also the <code>NewAccess</code> macro. <code>pSep1</code> is the variable 
		used to handle a pointer to the instance and <code>CAACafContextualMenuSep</code> 
		is its identifier.</p>
	</li>
	<li>SetAccessCommand
		<p>A command header is associated with a command starter using the <code>
		SetAccessCommand</code> macro. The second parameter of the macro is the 
		command header identifier defined as the first parameter of the command 
		header constructor. For example, <code>CAAAfrEllipseHdr.</code></p>
		<table class="Remark">
			<tr>
				<td class="Remark"><span class="run-in">Warning</span>: In a 
				contextual menu or in a contextual sub menu implementation, it 
				is not recommended to create command headers. So you should 
				reuse command header identifiers created previously. To be sure 
				that the command header will be created when the menu is invoked you should use an identifier created 
				in the app, or in Add-ins of the app. </td>
			</tr>
		</table>
		<p>Refer to the technical article entitled &quot;The Command Headers&quot; 
		[<a href="#References">2</a>] for complete details about the re-usage of 
		the command header identifiers.</p>
	</li>
	<li>AddAccessChild/SetAccessNext
		<p>The <code>AddAccessChild</code> macro enables you to link the <code>pStEllipse</code><code>
		</code>access to the last access of <code>_pMenu</code>. The <code>SetAccessNext</code> 
		macro enables you to chain the other accesses to the <code>pStEllipse</code> 
		access.</p>
	</li>
</ul>
<p>The picture below shows <code>_pMenu</code> before and after:</p>
<p>
<img alt="Command Chain" height="257" src="images/CAACafCtxMenuChain.jpg" width="561"/></p>
<p><strong>Notes</strong>:</p>
<ol>
	<li>The <code>GetContextualMenu</code> method returns a pointer on a <em>CATCmdContainer</em> 
		instance class. The <em>CATExtIContextualMenu</em> class keeps this pointer, 
		and at the <em>CATExtIContextualMenu</em> class instance destruction, the 
		container and the accesses created in this current implementation will be 
		released.</li>
	<li>In this use case, the contextual menu of the UIActive object has been retrieved 
		and completed. But it is also possible to create your own contextual menu. 
		You overwrite the <code>GetContextualMenu</code> method which returns your 
		own <em>CATCmdContainer</em> class instance. This instance will be created 
		in the constructor (if constant menu) or in the <code>GetContextualMenu</code> 
		method (if variable menu).</li>
	<li>A <em>CATCmdContainer</em> class instance destruction (by a Release call) 
		automatically implies the destruction of its children.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case explains how to implement a contextual menu and how to retrieve 
command header identifiers.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAAfrTaOverview.htm">Wintop Frame Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAAfrTaCommandHeaders.htm">Understanding the Command Headers</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAAfrUcCAAGeometryOverview.htm">The CAAGeometry Sample</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Fev 2003]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Oct 2006]</td>
		<td>Document updated</td>
	</tr>
	<tr>
		<td>Version: <strong>3</strong> [Feb 2014]</td>
		<td>Document updated</td>
	</tr>

</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
