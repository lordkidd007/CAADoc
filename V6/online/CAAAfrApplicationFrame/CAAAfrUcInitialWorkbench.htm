<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Defining the Activated App</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Defining the Activated App</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article shows how to use the <em>CATIAfrActivateWorkbench </em>
		interface to define which app should be launched when an object is UI-activated.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAAfrInitialWorkbench Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAAfrInitialWorkbench Do</a></li>
					<li><a href="#How">How to Launch CAAAfrInitialWorkbench</a></li>
					<li><a href="#Where">Where to Find the CAAAfrInitialWorkbench 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how to use the <em>CATIAfrActivateWorkbench</em> 
interface to define the app to launch when an object is UI-activated [<a href="#References">1</a>] . 
A data model can be associated with several apps. When the end user double clicks an object, or opens or
creates a data model, the session must choose an app among 
those of the current UI-active object. By default, the choice for a given 
UI-active object is done according to the following protocol:</p>
<ul>
	<li>For its first UI-activation, it is the last used app in the previous 
	session and kept in a preferences file. If this file does not exist, it is 
	the first app in the list of apps for the selected object type.</li>
	<li>For the next UI-activations, it is the last used app in the session.</li>
</ul>
<p>Bt implementing the <em>CATIAfrActivateWorkbench</em> interface, you are able to modify this protocol and impose the app to activate
 according to your criteria.</p>
<p>This interface may be implemented on the following UI-active objects:</p>
<ul>
	<li><strong>ASMProduct</strong> for Product models</li>
	<li><strong>DrwDrawing</strong> for Drawing</li>
	<li><strong>MechanicalPart</strong> for Product representation</li>
	<li><strong>AnalysisManager</strong> for Analysis.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAAfrInitialWorkbench Use Case</h2>
<p>CAAAfrInitialWorkbench is a use case of the CAAApplicationFrame.edu framework 
that illustrates AfrFoundation framework capabilities.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAAfrInitialWorkbench Do</h3>
<p>This article shows an implementation of the <em>CATIAfrActivateWorkbench</em> 
interface<em> </em>on the <strong>MechanicalPart</strong> object. The imposed 
app, among the Part apps, is the <strong>Part Design</strong> app.</p>
<p>
&nbsp;</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAAfrInitialWorkbench</h3>
<p>To launch CAAAfrInitialWorkbench, you will need to set up the build time environment, 
then compile CAAAfrInitialWorkbench along with its prerequisites, set up the run 
time environment, and then execute the use case [<a href="#References">3</a>].</p>
<p>But just before launching the execution, edit the CAAApplicationFrame.edu.dico 
interface dictionary file located in the dictionary folder of the CAAApplicationFrame.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAApplicationFrame.edu\CNext\code\dictionary\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>In this file, remove the &quot;<strong>#</strong>&quot; character at the beginning 
of the following line:</p>
<pre class="code">...
#MechanicalPart      CATIAfrActivateWorkbench  libCAAAfrInitialWorkbench 
...</pre>
<p>and run mkCreateRuntimeView.</p>
<p>Then, in the window where you run the mkrun command, do not type the module 
name on the command line, but type 3DEXPERIENCE instead. When the application is ready, do the 
following:</p>
<ol class="task">
	<li>
		<p>Click on <kbd>3D</kbd>, the west quadrant of the compass.</p>
	</li>
	<li>
		 <p>In the <kbd>3D Modeling apps</kbd> section, 
		click on <kbd>Freestyle Shape Design</kbd> app.</p>
	</li>
	<li>
		<p>Exit the application.</p>
	</li>
	<li>
		<p>Re-launch <kbd>3DEXPERIENCE</kbd>.</p>
	</li>
	<li>
		<p>In the top bar, click on <kbd>Add &gt; Content</kbd>.</p>
	</li>
	<li>
		<p>Select <kbd>3D Part</kbd>. A 3D Part is created and you are in the 
		 <kbd>Part Design</kbd> app.</p>
		<p>Without the <em>CATIAfrActivateWorkbench</em> implementation, the 
		current app would have been <kbd>FreeStyle Shape Design</kbd>, the last 
		used app kept in a .CATSettings file.</p>
	</li>
	<li>
	    <p>Click on <kbd>3D</kbd>, the west quadrant of the compass. </p>
	</li>
	<li>
	    <p>In the <kbd>3D Modeling apps</kbd> section, 
		click on<kbd> Wireframe and Surface Design</kbd> app.</p>
		<p>You have explicitly asked for an app, it's now the new current one.</p>
	</li>
	<li>
		<p>In the top bar, click on <kbd>Add &gt; Content</kbd>.</p>
	</li>
	<li>
		<p>Select <kbd>3D Part</kbd>. A 3D Part is created and you are again in the 
		 <kbd>Part Design</kbd> app.</p>
		<p>Without the <em>CATIAfrActivateWorkbench</em> implementation, the 
		current app would have been <kbd>Wireframe and Surface Design</kbd>, the last used app 
		kept in the session.</p>
	</li>
	<li>
		<p>In the top bar, click on <kbd>Add &gt; Import</kbd>.</p>
	</li>
	<li>
		<p>Click on <kbd>CATIA File...</kbd>.</p>
	</li>

	<li>
		<p>In the <kbd>File Selection</kbd> dialog box, click <kbd>CAAAfrProduct.CATProduct</kbd> 
		(*) and click <kbd>Open</kbd>.</p>
	</li>
	<li>
		<p>Edit <kbd>Part1</kbd>. You are in the <kbd>Part Design</kbd> app.</p>
		<p>Without the <em>CATIAfrActivateWorkbench</em> implementation, the 
		current app would have been <kbd>Wireframe and Surface Design</kbd>, the 
		last used app for a Part.</p>
	</li>
	<li>
	    <p>Click on <kbd>3D</kbd>, the west quadrant of the compass. </p>
	</li>
	<li>
	    <p>In the <kbd>3D Modeling apps</kbd> section, 
		click on<kbd> Wireframe and Surface Design</kbd> app.</p>
		<p>You have explicitly asked for an app, it's now the new current one.</p>
	</li>
	<li>
		<p>Edit <kbd>Part2</kbd>. You are back to the <kbd>Part Design</kbd> 
		app.</p>
		<p>Without the <em>CATIAfrActivateWorkbench</em> implementation, the 
		current app would have been <kbd>Wireframe and Surface Design,</kbd> the 
		last used app for a Part.</p>
	</li>
</ol>
<p>(*)The document is located in the InputData folder of the CAAApplicationFrame.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAAApplicationFrame.edu\InputData\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAAfrInitialWorkbench Code</h3>
<p>The CAAAfrInitialWorkbench use case is made of one single class, the <em>CAAEAfrActivateWorkbenchOnPart</em> 
class, located in the CAAAfrInitialWorkbench.m module of the CAAApplicationFrame.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAApplicationFrame.edu\CAAAfrInitialWorkbench.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>To implement the <em>CATIAfrActivateWorkbench</em> interface, there are two steps:</p>
<ol>
	<li><a href="#Header">Creating the Header File</a></li>
	<li><a href="#Code">Creating the Source File</a></li>
</ol>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Header"></a>Creating the Header File</h3>
<pre class="code">// System framework
#include &quot;CATBaseUnknown.h&quot;  
#include &quot;CATString.h&quot;        

class CAAEAfrActivateWorkbenchOnPart: public CATBaseUnknown
{
  CATDeclareClass;

  public:

    CAAEAfrActivateWorkbenchOnPart();
    virtual ~CAAEAfrActivateWorkbenchOnPart();

    CATString &amp; <strong>GetInitialWorkbench</strong>();

  private:

    CAAEAfrActivateWorkbenchOnPart(const CAAEAfrActivateWorkbenchOnPart &amp;iObjectToCopy);
    CAAEAfrActivateWorkbenchOnPart &amp; operator = (const CAAEAfrActivateWorkbenchOnPart &amp;iObjectToCopy);

  private:

      CATString <strong>_WbName</strong> ;
};</pre>
<p>The <em>CAAEAfrActivateWorkbenchOnPart</em> class derives from <em>CATBaseUnkown</em>. 
The <code>GetInitialWorkbench</code> method is the only one method of the <em>CATIAfrActivateWorkbench</em> 
interface. The <code>CATDeclareClass</code> macro declares that the <em>CAAEAfrActivateWorkbenchOnPart</em> 
class belongs to a component. Note that the copy constructor and the assignment 
operator are set as private, and are not implemented in the source file. This prevents 
the compiler from creating them as public without you know. <strong><code>_WbName</code></strong> 
is the data returned by the <code>GetInitialWorkbench</code> method.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Code"></a>Creating the Source File</h3>
<pre class="code">#include &quot;CAAEAfrActivateWorkbenchOnPart.h&quot;

#include &quot;TIE_CATIAfrActivateWorkbench.h&quot;              
TIE_CATIAfrActivateWorkbench(CAAEAfrActivateWorkbenchOnPart); 

CATImplementClass (CAAEAfrActivateWorkbenchOnPart,<strong>DataExtension</strong>, 
                   CATBaseUnknown, <strong>MechanicalPart</strong>);</pre>
<p>The <em>CAAEAfrActivateWorkbenchOnPart</em> class states that it implements the
<em>CATIAfrActivateWorkbench</em> interface thanks to the <code>TIE_CATIAfrActivateWorkbench</code> 
macro. The <code>CATImplementClass</code> macro declares that the <em>CAAEAfrActivateWorkbenchOnPart</em> 
class is a data extension, thanks to the <code>DataExtension</code> keyword, that 
extends <code>MechanicalPart</code>. The third argument must always be set as
<em>CATBaseUnknown</em> or <em>CATNull</em> for any kind of extension.</p>
<pre class="code">...
CAAEAfrActivateWorkbenchOnPart::CAAEAfrActivateWorkbenchOnPart()                
{
    _WbName = &quot;<strong>PrtCfg</strong>&quot; ;
}
CAAEAfrActivateWorkbenchOnPart::~CAAEAfrActivateWorkbenchOnPart()
{
}
CATString &amp; CAAEAfrActivateWorkbenchOnPart::<strong>GetInitialWorkbench</strong>()
{
    return <strong>_WbName</strong>;
}</pre>
<p>In this implementation, the app is always the Part Design app. The name of 
this app is <strong>PrtCfg</strong>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case explains how to implement the <em>CATIAfrActivateWorkbench</em> 
interface.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAAfrTaOverview.htm">Wintop Frame Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Aug 2003]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Jan 2007]</td>
		<td>Document updated</td>
	</tr>
	<tr>
		<td>Version: <strong>3</strong> [Oct 2013]</td>
		<td>3DEXPERIENCE migration</td>
	</tr>

</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
