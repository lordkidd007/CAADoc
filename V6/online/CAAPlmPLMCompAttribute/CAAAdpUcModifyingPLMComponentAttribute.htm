<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>Modifying PLM Attributes of PLM Component</title>
<script language="JavaScript" src="../CAADocJavaScript/submit.js">
		</script>
<style>
<!--
div.Section1
	{page:Section1;}
.style1 {
	color: #976970;
}
-->
</style>
</head>

<body>
<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Modifying PLM Attributes of PLM Component</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>


<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td  >
      <h2><a name="Top"></a>Abstract</h2>
      <p>The objective of this use case is to revaluate the attribute of an input PLM Component.<p>The 
      Use Case retrieves an attribute value of an input PLM Component and 
      revaluates it. This is accomplished using the CATCkeObjectAttrReadServices 
      and CATCkeObjectAttrWriteServices respectively<ul>
        <li><a href="#Learn">What You Will Learn With This Use Case</a></li>
        <li><a href="#Where">The CAAAdpModifyingPLMComponentAttribute Use Case</a>
          <ul>
            <li><a href="#What">What does the CAAAdpModifyingPLMComponentAttribute do</a></li>
            <li><a href="#How">How to launch CAAAdpModifyingPLMComponentAttribute </a></li>
            <li><a href="#Where">Where to find the CAAAdpModifyingPLMComponentAttribute code</a></li>
          </ul>
        </li>
        <li><a href="#Step">Step-by-Step</a></li>
		<li><a href="#InShort">In Short</a></li>
		<li><a href="#History">References</a></li>
      </ul>&nbsp;
    </td>
  </tr>
</table>

<!---------------------------------comment------------------------------------->

<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>

<p>This use case illustrates how to retrieve PLM Attribute's value and how to 
re-valuate it.</p>

<p>Moreover, it is an illustration of the 'Accessing PLM Attribute Value' 
section of the technical article &quot;Accessing PLM Attributes&quot; [<a href="#References">1</a>]</p>

<script type="text/javascript">insertLinkToTop();</script>

<h2><a name="UseCase"></a>The CAAAdpModifyingPLMComponentAttribute Use Case</h2>
<p> <code><b>CAAAdpModifyingPLMComponentAttribute</b></code> is a use case of the <code><b> CAAPLMClientAdapter.edu</b></code>
framework that
illustrates the <code><b>CATPLMIntegrationAccess</b></code>  framework capabilities.&nbsp;</p>
<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<h3><a name="What"></a>What Does CAAAdpModifyingPLMComponentAttribute Do</h3>

<p>In this use case, firstly, we retrieve PLM Component using query. Then we are 
retrieving PLM Attribute's value. After that, we are re-valuating PLM 
Attribute's value with new input value. </p>

<p>In this use case, if we consider one sample case, for particular input (VPM, 
PRODUCT and PLMProductDS) if we try to change V_description (writable) 
attribute's value then use case gives following result.</p>

<table border="0" width="100%">
      <caption>
        <p align="left"><a name="Fig. 1"></a><b>Fig.1  Sample Results for 
        re-valuation of V_description (Writable) Attribute</b></p>
      </caption>
      <tr>
        <td width="100%">&nbsp;&nbsp;Successfully opened first PLM Component <br>
		Check if the input attribute exists <br>
		Attribute : V_IndustryCode exists<br>
		Input attribute exists as attribute<br>
		V_IndustryCode attribute value before re-valuation: Auto<br>
		The Component has been successfully valuated<br>
		V_IndustryCode attribute valuated recently as: Aut<br>
		<br>
		The input PLM Component is saved<br>
		</td>
      </tr>
    </table>

<p>Here mainly we are retrieving and modifying PLM Attribute's value 
of an input&nbsp; PLM Component. Thanks to 
  <code>CATCkeObjectAttrWriteServices </code> and <code>CATCkeObjectAttrReadServices</code>&nbsp; 
for providing methods of modifying and retrieving PLM Attribute's value 
respectively. </p>

<p>The input PLM attribute to be modified must be a &#8220;<b>writable</b>&#8221; because 
Set methods are dependant on the Editability flag of PLM Attribute. </p>



<p>These two classes provides methods where first two arguments are <i>
<code>CATICkeObject</code></i>* and the internal name of PLM Attribute. The third argument is 
the value of PLM Attribute, either as input for 
  <code>CATCkeObjectAttrWriteServices</code>, or as output for <code>CATCkeObjectAttrReadServices</code>.</p>

<script type="text/javascript">insertLinkToTop();</script>

<h3><a name="How"></a>How to Launch CAAAdpModifyingPLMComponentAttribute</a> </h3>

<p>To launch <code><b>CAAAdpModifyingPLMComponentAttribute</b></code> , you will need to set up the build time
environment, then compile <code><b>CAAAdpModifyingPLMComponentAttribute</b></code> along with its prerequisites,
set up the run time environment, and then execute the use case [<a href="#References">2</a>].</p>
<p>To
launch the use case execute the command:</p>
<p><code><b> <a>mkrun -c &quot;</a><i>CAAAdpModifyingPLMComponentAttribute</i></b></code><i>
</i><a><code><b><i>Repository Server User Password SecurityCtx PLMType AttributeName Value 
NewAttributeName NewValue</i>&quot;</b></code></a> </p>
<p>where:</p>

<table class="border1"  id="table13" height="309" >
  <tr>
    <th><b>Repository</b></th>
     <td><script type="text/javascript">insertRepository();</script></td>
  </tr>
  <tr>
     <th><b>Server</b></th>
    <td >The name and port of the server as <i>name</i>:<i>port_number</i></td>
  </tr>
  <tr>
    <th ><b>User</b></th>
    <td  >The user name</td>
  </tr>
  <tr>
    <th ><b>Password</b></th>
    <td >The user password to authenticate the user</td>
  </tr>
  <tr>

    <th ><b>SecurityCtx</b></th>
    <td >a string representing the security context (Role.Organization.Project).
      Choose role as Designer ( as the use case modifies the PLM Data)
      </td>
  </tr>

   	<tr>
	<th  > <b>PLMType</b></th>
	<td  >Represents the name of the PLM type </td>
    </tr>
    <th> AttributeName</th>
	<td>PLM Attribute Name for querying PLM Component (PLM Attribute whose the 
    type is a string)</td>
    </tr>
    <th> Value</th>
	<td>Value of PLM Attribute for querying PLM Component </td>
    </tr>
	
  <tr>
    <th> NewAttributeName</th>
	<td>PLM Attribute Name whose value to be revaluate (PLM Attribute whose the 
    protecting flag is free or user)</td>
    </tr>
	
  <tr>
    <th> NewValue</th>
	<td>New Value of PLM Attribute for revaluating</td>
    </tr>
	
</table>


<!---------------------------------comment------------------------------------->

<p>The input&nbsp;data is retrieved by importing <code><b><a>CAAAdpQueryPLMComponent_CAR_MODEL_1</a></b></code><a><code><b>.</b></code></a><code><b>3dxml</b></code>
file for  Root product from the <a><code><b> CAAPLMClientAdapter.edu</b></code></a> 
fwk.</p>
<table id="table15">
    <tr>
      <td><code>InstallRootDirectory\CAAPLMClientAdapter.edu\InputData\</code></td>
    </tr>
</table>
<p>where <code>InstallRootDirectory</code>  [<a href="#References">2</a>] is the directory where the CAA CD-ROM
is installed.</p>
<p>This 3D xml file contains a PRODUCT PLM Reference, whose the PLM Attributes 
(some of them) are valuated such as follows:</p>
<ul>
  <li>PLM_ExternalID= CAR_MODEL_1</li>
  <li>V_description= Auto</li>
</ul>
<p align="left"><b>Attention</b>:  Please refer to the document [<a href="#References">2</a>]
for how to import and reimport such a 3D XML file in your PLM repository.&nbsp;</p>
<script type="text/javascript">insertLinkToTop();</script>

<h3><a name="Where"></a>Where to Find the CAAAdpModifyingPLMComponentAttribute Code</h3>
<p>The <code><b>CAAAdpModifyingPLMComponentAttribute</b></code> use case is located in the <code><b>CAAAdpModifyingPLMComponentAttribute</b></code><a><code><b>.m</b></code></a> module of the
<a><code><b>CAAPLMClientAdapter</b><b>.edu</b></code></a> framework:</p>
<table>
  <tr>
    <td><code>InstallRootDirectory\</code><code>CAAPLMClientAdapter</code>.<code>edu</code><code>\CAAAdpModifyingPLMComponentAttribute.m\</code></td>
  </tr>
</table>
<p>where <code><a><b>InstallRootDirectory</b></a></code>  [<a href="#References">2</a>]
is the directory where the CAA CD-ROM
is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<h2><a name="Step"></a>Step-by-Step</h2>
<p>Following are the main steps in <code><b>CAAAdpModifyingPLMComponentAttribute</b></code> :</p>
<ol>
  <li><a href="#Prolog">Prolog</a></li>
  <li><a href="#Look for PLM Component">Look for the PLM Component using query</a></li>
  <li>
  <a href="#Confirm Attribute">Confirm PLM Attribute to be revaluated, is one among the list of 
  PLM Attributes</a></li>
  <li>
  <a href="#Retrieve and revaluate Value">Retrieve the current value of the attribute and re-valuate it</a></li>
  <li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<!---------------------------------comment------------------------------------->

<!---------------------------------comment------------------------------------->

<h3><a name="Prolog"></a>Prolog</h3>
<p>The <code><b>CAAAdpModifyingPLMComponentAttribute</b></code> use case begins by creating a session
and connecting to the input Repository.&nbsp; This,
being the most fundamental prerequisite for all batch use cases, it is the first
step in their execution.</p>
<p>In this case, we create a session and connect to Repository with the Designer Role
(since we are modifying PLM data). There are other parameters as well,
details of which can be found in the&nbsp; &quot;<b>Creating a Basic PLM Batch</b>&quot;
use case article [<a href="#References">3</a>].
This article primarily deals with Opening and Closing a PLM session.</p>
<script type="text/javascript">insertLinkToTop();</script>

<h3><a name="Look for PLM Component"></a>Look for the PLM Component using query</h3>



<p>Here we are retrieving PLM component by using query. For this necessary steps we 
can found in &quot;<b>Accessing PLM Attributes of PLM Component</b>&quot; use case 
article[<a href="#References">4</a>]. For querying PLM Component, we are giving 
PLM Class Type (<i>CATIType </i>retrieved from PLMClassType parameters with&nbsp; AttributeName and Value input as criteria 
by using <span class="style1">CAAAdpGetPLMObjectsFromAttrAndFromType</span> API .</p>



<script type="text/javascript">insertLinkToTop();</script>
<h3>
<a name="Confirm Attribute"></a>Confirm Attribute to be revaluated, is one among the list of Attributes</h3>
<p>
Here in this step we are retrieving list of all PLM Attributes, which has 
<b>read/write</b> permission. For this, we are giving <b>'TRUE'</b> as an option to <code>ListAttributes</code> method. 
 
</p>
<p>
Mainly the input PLM attribute to be modified must be a &#8220;<b>writable</b>&#8221;. Here we can 
do one more test&nbsp; for this we can use <code>IsWritable</code> method 
of <code>CATAttributeInfos.</code></p>
<p>
Here in this Use Case we are confirming input attribute is one among retrieved attribute list. 
For confirmation, we are comparing input attribute name with existing each 
attribute's name. This check we are making in this use case although Get or Set 
functions will return error for not valid PLM Attributes.</p>
<pre  class="code">
...
    CATListValCATAttributeInfos ListOfAttrInfos ;
    hr = <strong>CATCkePLMNavPublicServices::ListAttributesFromObject</strong>(CATCkePLMTypeAttrServices::All,
					                 piCATICkeObjectOnComp,
						        ListOfAttrInfos,
						        RUE); 
    int iSizeList = ListOfAttrInfos.Size();
    int i = 1 ;
    CATBoolean bAttrExists = FALSE;
    while ( (i=iSizeList) &amp;&amp; (FALSE == bAttrExists) )
    {
	CATAttributeInfos AttrInfo =  ListOfAttrInfos[i];
	
	CATUnicodeString attrName;
	attrName = AttrInfo.Name();
	
	if <b>(iUAttrName==attrName)</b>
	{
             bAttrExists = TRUE;
	    break;
	}
	i++ ; 
    }
...</pre>
   <script type="text/javascript">insertLinkToTop();</script>
<h3>
<a name="Retrieve and revaluate Value"></a>Retrieve the current value of the PLM Attribute and re-valuate it</h3>
<p>
In this use case we are retrieving current value of PLM Attribute by using 
<code>GetValueAsString</code> method of <code>CATCkeObjectAttrReadServices</code>. 
For retrieving Attribute value, we are giving <i><code>CATICkeObject</code></i>* and Attribute name&nbsp; 
as a input. </p>
<table class="code" width="912">
  <tr>
    <td ><pre>...
    CATUnicodeString iUAttrName      = iArgv[9];
    CATUnicodeString CurrentValue ;

    hr = <b>CATCkeObjectAttrReadServices::GetValueAsString(</b>piCATICkeObjectOnComp<b>,
        						 iUAttrName,CurrentValue)</b>;
...</pre>
    </td>
  </tr>
</table>

<p>
Then here we are setting new value to PLM Attribute by using <code>SetValueWithString</code> 
method of <code>CATCkeObjectAttrWriteServices</code>. For setting new Attribute value we are 
providing <i>CATICkeObject</i>* which is implemented on PLM Component. With that, 
we are giving PLM Attribute name and new value that has to be set. </p>
<table class="code" width="912">
  <tr>
    <td ><pre>...
    CATUnicodeString iUAttrNewValue  = iArgv[10];
    hr = <b>CATCkeObjectAttrWriteServices::SetValueWithString(</b>piCATICkeObjectOnComp<b>,
						   iUAttrName,iUAttrNewValue)</b>;
...</pre>
    </td>
  </tr>
</table>

<p>
Here  for these methods &quot;string&quot; is only the input/output format. Even for a 
PLM Attribute that is an integer, you can retrieve or set its value with a 
string. Nevertheless in the <code>SetValueWithString</code> if we give any other value other 
than integer (e.g. &quot;My Value&quot; )&nbsp; it will give an error. </p>

<script type="text/javascript">insertLinkToTop();</script>
<h3><a name="Epilog"></a>Epilog</h3>
<p>The <code><b>CAAAdpModifyingPLMComponentAttribute</b></code> use case ends by simply closing the PLM
session. Since all  use cases&nbsp; necessarily conclude by closing the PLM
session, we have a dedicated article on this topic viz.&nbsp; &quot;<b>Creating a
Basic PLM Batch</b>&quot; [<a href="#References">3</a>].&nbsp;</p>

<script type="text/javascript">insertLinkToTop();</script>
<!---------------------------------comment------------------------------------->

<h2><a name="InShort"></a>In Short</h2>

<p>This use case retrieves PLM Component using query. For querying PLM Component 
AttributeName and Value these inputs are the criteria.</p>
<p>Then we are confirming 
presence of PLM Attribute whose value is to be revaluated in the retrieved list 
of PLM attributes.</p>
<p>After that we Retrieve the current value of PLM Attribute by using&nbsp; <code>GetValueAsString</code> method of 
  <code>CATCkeObjectAttrReadServices.</code></p>
<p>Then we are revaluating PLM Attribute's value with input NewValue. For this, we are 
using <code>SetValueWithString</code> method of <code>CATCkeObjectAttrWriteServices</code>.</p>

<ul>
  <li>List the PLM Attributes with the help of&nbsp; <code>ListAttributesFromObject</code> 
  method of <code>CATCkePLMNavPublicServices</code></li>
  <li>For retrieving PLM Attribute's Value <code>GetValueAsString</code> method of 
  <code>CATCkeObjectAttrReadServices</code> is used.</li>
  <li>For revaluating PLM Attribute's Value <code>SetValueWithString</code> method of 
  <code>CATCkeObjectAttrWriteServices</code> is used.</li>
</ul>

&nbsp;<script type="text/javascript">insertLinkToTop();</script>

<h2><a name="References"></a>References</h2>
<table>
   <tr>
   <td valign="top">[1]</td>
   <td>
   <a href="CAAPLMTaAllKnowPLMAttributes.htm">Accessing PLM Attributes</a></td>
   </tr>
   <tr>
   <td valign="top">[2]</td>
   <td>
       <a href="../CAADocUseCases/CAADocRunSample.htm">
       Building and Launching a CAA Use Case</a> </td>
   </tr>
   <tr>
   <td valign="top">[3]</td>
   <td>
  <a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">Creating a Basic PLM Batch</a></td>

   </tr>
   <tr>
   <td valign="top">[4]</td>
   <td>
   <a href="CAAAdpUcPLMComponentAttributesAccess.htm">Accessing PLM Attributes of PLM Component</a></td>
   </tr>
</table>

   
<!---------------------------------comment------------------------------------->
<h2><a name="History"></a>History</h2>
<table >
  <tr>
    <td valign="top">Version: <strong>1</strong>     [Feb 2008]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
    <td valign="top">Version: <strong>2</strong>     [Nov 2010]</td>
    <td valign="top">Document updated to introduce CATCkePLMNavPublicServices</td>
  </tr>

<script type="text/javascript">insertLinkToTop();</script>
</table>

<!---------------------------------comment------------------------------------->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>




