<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>DialogEngine Programmer's Guide</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>DialogEngine Programmer's Guide</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h3>Abstract</h3>
		<p>This article is the state dialog command programmer's guide. Organized 
		as a step-by-step, it deals with all you can do to program your state dialog 
		command.</p>
		<ul>
			<li><a href="#100000">Creating a State Dialog Command</a></li>
			<li><a href="#InShort">In Short</a>.</li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="100000"></a>Creating a State Dialog Command</h2>
<p>Once you have designed your state dialog command and you have drawn its statechart 
diagram, you can go on with creating the command class. To do this, follow these 
steps:</p>
<ul>
	<li>Create the state dialog command class: This includes the declaration of 
		the objects and methods needed by your command in the class header file 
		[<a href="#References">1</a>].</li>
	<li>Manage the command life cycle: To decide what should happen when your command 
		completes, or when another command is selected while your command is the 
		current one, provide the body of the three methods <code>Activate</code>,
		<code>Desactivate</code>, and <code>Cancel</code> [<a href="#References">2</a>].</li>
	<li>Implement the statechart diagram: This is done in the overridden CATStateCommand
		<code>BuildGraph</code> method. You will create the states, the transitions, 
		declare the conditions and actions, and create dialog agents to take care 
		of the end user input [<a href="#References">3</a>].</li>
	<li>Provide condition and action methods: They are function members of your 
		state dialog command class [<a href="#References">3</a>].</li>
	<li>Enable for undo/redo: You can enable your command with two kinds of undo/redo, 
		the first to undo a given transition result and restore the transition source 
		state, and the second to undo the whole command result after the command 
		completes [<a href="#References">4</a>].</li>
	<li>Provide the command resources: These are the prompts associated with the 
		states and with undo/redo. Other resources, such as the command name, help, 
		and the icon to display in the toolbar, are provided with the command header 
		[<a href="#References">5</a>].</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>A dialog state command is a dialog command designed as a state machine, each 
state enabling end user input, that enables the end user to pass from state to state 
using transitions between these states triggered when requested events happen and 
when requested guard conditions are satisfied, and that execute the declared actions. 
It is modeled using a class deriving from the CATStateCommand class.</p>
<p>The statechart diagram is implemented using the <code>BuildGraph</code> method, 
and the command life cycle is managed by the <code>Activate</code>, <code>Desactivate</code>, 
and <code>Cancel</code> methods in addition to the command class constructor and 
destructor.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="References"></a>References</h3>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAADegTaCreatingCommand.htm">How to Create a State Dialog Command</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAADegTaLifecycle.htm">How to Manage the State Dialog Command 
		Lifecycle</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAADegTaGraph.htm">How to Implement the Command Statechart 
		Diagram</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAADegTaUndoRedo.htm">How to Manage Undo/Redo</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAADegTaResources.htm">How to Assign Resources to a State Dialog 
		Command</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="History"></a>History</h3>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
