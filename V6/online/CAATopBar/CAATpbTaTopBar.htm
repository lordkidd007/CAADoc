<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">
   <head>
      <meta http-equiv="Content-Language" content="en-us" />
      <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
      <link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
      <script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
      <script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
      <script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
      <title>TopBar API Documentation</title>
   </head>
   <body onload="highlightSearchTerms();" class="style1">
      <table class="DocHeader">
         <tr>
            <td class="DocHeader1">
               <h1>TopBar API Documentation</h1>
            </td>
         </tr>
         <tr>
            <td class="tech">Technical Article</td>
         </tr>
      </table>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <table class="abstract">
         <tr>
            <td>
               <h2>Abstract</h2>
               <p>This document is to explain what the TopBar is, and how it 
				works, and it will also describe how to use it.</p>
               <ul>
                  <li>
                     <a href="#Part1">What is the TopBar?</a>
                     <ul>
                        <li><a href="#Part11">How the TopBarProxy feeds the 
						TopBar?</a></li>
                        <li><a href="#Part12">Command providers (TopBarProxy)</a></li>
                        <li><a href="#Part13">TopBar</a></li>
                     </ul>
                  </li>
                  <li>
                     <a href="#Part2">Deployment</a>
                     <ul>
                        <li><a href="#Part21">Dependency</a></li>
                        <li><a href="#Part22">Initialization</a></li>
                     </ul>
                  </li>
                  <li>
                     <a href="#Part3">Modify settings</a>
                     <ul>
                        <li><a href="#Part31">Change the Brand, Application, 
						User Name or Picture</a></li>
                        <li><a href="#Part32">Add event for TopBar</a></li>
                     </ul>
                  </li>
                  <li><a href="#Part4">Activate commands of command providers</a></li>
                  <li><a href="#InShort">In Short</a></li>
                  <li><a href="#References">References</a></li>
               </ul>
            </td>
         </tr>
      </table>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h2><a name="Part1"></a>What is the TopBar?</h2>
      <p>The TopBar is a module visible in top of every 3DExperience platform 
		web pages.</p>
      <table>
         <caption><a name="elem"></a>Fig.1: TopBar</caption>
         <tbody>
            <tr>
               <td><img alt="TopBar" src="images/topbar.png"/></td>
            </tr>
         </tbody>
      </table>
      <p>The top bar provides immediate access to key information and services. 
		The logo, brand name, app name, and user name are for information only 
		and perform no function. From left to right of the TopBar:
      </p>
      <ul>
         <li>Dassault systèmes Logo</li>
         <li>Brand name</li>
         <li>Application Name</li>
         <li>Global search</li>
         <li>6wTagger icon</li>
         <li>User name</li>
         <li>Me services</li>
         <li>Add services</li>
         <li>Share services</li>
         <li>Home services</li>
         <li>Help services</li>
      </ul>
      <p>The TopBar is to be use in the 3D experience platform (Enovia web, IfWe 
		and SWYM). It provides a quick way to do global search, to let the user 
		launch command via the menu or to call the tagger.
      </p>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h3><a name="Part11"></a>How the TopBarProxy feeds the TopBar</h3>
      <p>The TopBar is composed of two UWA modules, named TopBar and 
		TopBarProxy.
         <br/>
         The TopBar is the visible part, and TopBarProxy is instantiate by the 
		command providers on page that need to communicate and set their menu 
		into the TopBar. They communicate via Intercom, a cross-Platform API for 
		cross document data exchange, it is useful because TopBarProxy are 
		wrapped in iframes.
      </p>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h3><a name="Part12"></a>Command providers (TopBarProxy)</h3>
      <p>The only action that is allowed for command providers is to give to the 
		TopBar its menus via TopBarProxy API.<br/>
         The TopBar will handle the part to decide if the menu has to be visible 
		or not to the user depends on the context. Make sure the command 
		provider ids is known by the TopBar.
      </p>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h3><a name="Part13"></a>TopBar</h3>
      <p>The TopBar has to know which command providers are on the page. The 
		number of&nbsp; content components is the number of TopBarProxy the 
		TopBar knows.<br/>
         The TopBar will handle the part to decide if the menu has to be visible 
		or not to the user depends on the context. Make sure the command 
		provider ids is known by the TopBar.
      </p>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h2><a name="Part2"></a>Deployment</h2>
      <p>There are 2 modules related to the TopBar:</p>
      <ul>
         <li>One module called TopBar is to instantiate the TopBar with its 
			options in page. The main frame that will manage the content 
			components has to instantiate the TopBar.
         </li>
         <li>To communicate with the TopBar, TopBarProxy module is needed. Make 
			an instance of TopBarProxy per content component, the content 
			component will communicate with the TopBarProxy via the TopBarProxy 
			API.
         </li>
      </ul>
      <p>This documentation describe how to initialize the TopBar module, to 
		initialize TopBarProxy see TopBarProxy documentation.</p>
      <h3><a name="Part21"></a>Dependency</h3>
 <p>All libraries, modules used are available in 
		runtime view in the folder:<br />
         &nbsp;&nbsp;&nbsp; <strong>
         \webapps</strong></p>
      <p>You will only need to add links for 
		the css, UWA css and TopBar css:</p>
      <pre class="code">
&lt;-- CSS--&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;../UWA2/assets/css/inline.css&quot; media=&quot;all&quot;/&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;../TopBar/TopBar.css&quot; media=&quot;all&quot; /&gt;
</pre>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h3><a name="Part22"></a>Initialization</h3>
      <p>Use init method to initialize the TopBar with its options, and add 
		event for the TopBar to trigger when needed.<br />
         TopBar.init(options)<br />
         <strong><em>Parameters</em></strong> <br/>
         options {Object}
      </p>
      <ul>
         <li>userName {String} sets the user name</li>
         <li>brand {String} sets the brand </li>
         <li>application {String} set the application name </li>
         <li>picture {String} used to retrieve the user profile picture. The 
			format of the URL should be: https://{sywmURL proxified or 
			not}/{ApiPath}/{login}/{format}</li>
         <li>
            events {Object}
            <ul>
               <li>tagger {Function} is called on click of the tagger icon </li>
               <li>search {Function} is called with an object parameters on 
				search launch
               </li>
               <li>clearSearch {Function} is called on clear search
               </li>
            </ul>
         </li>
      </ul>
      <p><em><strong>Exemple</strong></em><br />
      </p>
      <pre class="code">
require(['UWA/Core', 'TopBar/TopBar'], function (Core, TopBar) {
    'use strict';

    TopBar.init({
        userName: 'Julien MASSON',
        brand: 'IFWE Compass',
        application: 'Dashboard 1',
        picture: 'https://dev.3dswymers-ppd.dsy.ds/api/user/getpicture/login/axz/format/mini',
        events: {
            tagger: function () {
                alert(&quot;Tagger Click&quot;);
            },
            search: function (parameters) {
                alert(&quot;Search launched with &quot; + parameters.value);
            },
            clearSearch: function () {
                alert(&quot;Clear Search&quot;);
            }
        }
    });
});</pre>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h2><a name="Part3"></a>Modify settings</h2>
      <h3><a name="Part31"></a>Change the Brand, Application, User Name or 
		Picture</h3>
      <p>Use this method to modify settings on the TopBar.<br />
         TopBar.set( options, [value] )<br />
         <strong><em>Parameters</em></strong>
      </p>
      <ul>
         <li>
            options{String || Object} if you set a string, it has to be : 
			'userName', 'brand', 'application' or 'picture. Moreover, you have 
			to set a second arg, value.
            <ul>
               <li>userName {String} sets the user name</li>
               <li>brand {String} sets the brand </li>
               <li>application {String} set the application name </li>
               <li>picture {String} used to retrive the user profile picture. 
				The format of the URL should be: https://{sywmURL proxified or 
				not}/{ApiPath}/{login}/{format}</li>
            </ul>
         </li>
         <li>[value] {String} Optional, this has to be set if options is a 
			string type</li>
      </ul>
      <p><em><strong>Example</strong></em></p>
      <pre class="code">
require(['UWA/Core', 'TopBar/TopBar'], function (Core, TopBar) {
    'use strict';
    // Changing several attributes at the same time
    TopBar.set({
        userName: 'Your name here',
        application: 'Cool Application'
    });
});
</pre>
      <pre class="code">
require(['UWA/Core', 'TopBar/TopBar'], function (Core, TopBar) {
    'use strict';
    // Through key/value
    TopBar.set('brand', 'Super DS Brand');
});
</pre>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h3><a name="Part32"></a>Add event for TopBar</h3>
      <p>TopBar can trigger 3 callback events.</p>
      <ul>
         <li>A click on this icon <img src="images/taggerIcon.png" alt="tagger icon"/> 
			will trigger the &quot;tagger&quot; event.
         </li>
         <li>A click on this icon <img src="images/searchIcon.png" alt="search icon"/> 
			will trigger the &quot;search&quot; event.
         </li>
         <li>A click on this icon <img src="images/clearSearchIcon.png" alt="search icon"/> 
			will trigger the &quot;clearSearch&quot; event.
         </li>
      </ul>
      <p>To add or change event:<br />
         TopBar.addEvent(options,[listener], [bind])<br />
         <strong><em>Parameters</em></strong><br />
      </p>
      <ul>
         <li>
            options.events {Object}
            <ul>
               <li>tagger {Function} is called on click of the tagger icon </li>
               <li>search {Function} is called with an object parameters on 
				search launch
               </li>
               <li>clearSearch {Function} is called on clear search
               </li>
            </ul>
         </li>
         <li>[listener] {Function} Optional, that will be executed when event is 
			triggered</li>
         <li>[bind] {Object} Optional, change callback binding</li>
      </ul>
      <p><strong><em>Example</em></strong></p>
      <pre class="code">
require(['UWA/Core', 'TopBar/TopBar'], function (Core, TopBar) {
    'use strict';

    // Changing several events at the same time
    TopBar.addEvent({
        events: {
            tagger: function() {alert(&quot;Toggle Tagger&quot;);},
            search: function() {alert(&quot;Search performed&quot;);}
        }
    });
});</pre>
      <pre class="code">
require(['UWA/Core', 'TopBar/TopBar'], function (Core, TopBar) {
    'use strict';
    TopBar.addEvent('tagger', function(){alert(&quot;Toggle Tagger&quot;);});
});</pre>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h2><a name="Part4"></a>Activate commands of command providers</h2>
      <p>Some components on page or in widgets can declare commands. To see 
		these commands, in order to show them, activate the component ids by 
		calling the TopBar. Several command Providers can be activated at the 
		same time. This is useful if some commands need to always be visible, 
		independently from the active provider/widget. the order of display will 
		be the order in the array.<br />
         TopBar.MainMenuBar.setActiveMenuProviders(CommandProviderId )<br />
         <strong><em>Parameters</em></strong><br />
      </p>
      <ul>
         <li>
            CommandProviderId {String || Array} this is the identifier of the 
			CommandProvider(=TopBarProxy), or an array of CommandProviderIds.
         </li>
      </ul>
      <p><strong><em>Example</em></strong></p>
      <pre class="code">
require(['UWA/Core', 'TopBar/TopBar'], function (Core, TopBar) {
    'use strict';

    // Activating a command provider
    TopBar.MainMenuBar.setActiveMenuProviders(&quot;CommandProvider1&quot;);
});</pre>
      <pre class="code">
require(['UWA/Core', 'TopBar/TopBar'], function (Core, TopBar) {
    'use strict';

    // Activating a list of command providers
    TopBar.MainMenuBar.setActiveMenuProviders([&quot;CommandProvider1&quot;, &quot;CommandProvider2&quot;]);
});</pre>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h2><a name="InShort"></a>In Short</h2>
      <p><em>Follow this tutorial to instantiate TopBar in your app.</em></p>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h2><a name="References"></a>References</h2>
      <table class="reference">
         <tr>
            <td>[1]</td>
            <td><a href="#">Tools Options</a></td>
         </tr>
      </table>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <h2><a name="History"></a>History</h2>
      <table class="history">
         <tr>
            <td>Version: <strong>1</strong> [Jan 2000]</td>
            <td>Document created</td>
         </tr>
      </table>
      <script type="text/javascript">insertLinkToTop();</script>
      <!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
      <script type="text/javascript">insertCopyright();</script>
   </body>
</html>
