<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Browsing Connectivity</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Navigating Functional Connection</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2><a name="Top"></a>Abstract</h2>
		<p>This use case Navigates Functional Connections. Here in this use case 
		we retrieve connection and objects associated with it.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmiNavigatingConnectionsWithInterfaces Use Case</a>
				<ul>
					<li><a href="#What">What Does the CAAFmiNavigatingConnectionsWithInterfaces 
						Do</a></li>
					<li><a href="#How">How to Launch CAAFmiNavigatingConnectionsWithInterfaces</a></li>
					<li><a href="#Where">Where to Find the CAAFmiNavigatingConnectionsWithInterfaces 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#History">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The learning's from this Use Case are:</p>
<ul>
	<li>Retrieving Functional Connection.</li>
	<li>Retrieving the objects associated with Functional Connection.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmiNavigatingConnectionsWithInterfacesUse Case</h2>
<p>CAAFmiNavigatingConnectionsWithInterfaces is a use case of the CAAFunctModelerUseItf.edu framework 
that illustrates the CATFunctionalModelerUseItf framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmiNavigatingConnectionsWithInterfaces Do</h3>
<p>In this use case we retrieve the Functional Connection and the Objects( functional 
instances and its specific interfaces) associated with the connection.</p>
<p>As depicted in [<a href="#Fig1">Fig. 1</a>] below, initially we open the root 
Functional Reference <code>CAAFmiNavigatingConnectionsWithInterfaces_Root</code>. Then we navigate 
through and retrieve Functional Connection <code>Functional Sibling Connection</code> aggregated under 
Root reference.</p>
<p>Next we retrieve objects( functional instances and its specific interfaces) associated 
with the Functional Connection.</p>
<p>The Functional Connection <code>(Functional Sibling Connection)</code> shown in the [<a href="#Fig1">Fig. 
1</a>] is connecting following two instances:</p>
<ul>
	<li><code>Functional Instance 1</code> (using its interface
		<code>FlowExpositionInstance1 Consumption</code>).</li>
	<li><code>Functional Instance 2</code> (using its interface
		<code>FlowExpositionInstance2 Emission</code>).</li>
</ul>
<table>
	<caption><a name="Fig1"></a>Fig. 1: Input Functional Reference with Connection</caption>
	<tr>
		<td>
		<img alt="Input Functional Reference" src="images/CAAFmiNavigatingConnectionsWithInterfaces_Fig1.jpg"/></td>
	</tr>
</table>
<p>In the current UC, for the input model in [<a href="#Fig1">Fig. 1</a>], following 
objects are retrieved:</p>
<ul>
	<li>Functional Child 1 Instance Object (<code>Functional Instance 1</code>).</li>
	<li>Functional Interface Object aggregated under Functional Child 1 (<code>FlowExpositionInstance1 
		Consumption</code>).</li>
	<li>Functional Child 2 Instance Object (<code>Functional Instance 2</code>).</li>
	<li>Functional Interface Object aggregated under Functional Child 2 (<code>FlowExpositionInstance2 
		Emission</code>).</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmiNavigatingConnectionsWithInterfaces</h3>
<p>To launch CAAFmiNavigatingConnectionsWithInterfaces, you will need to set up the build time 
environment, then compile CAAFmiNavigatingConnectionsWithInterfaces along with its prerequisites, 
set up the run time environment, and then execute the use case [<a href="#References">1</a>].</p>
<p>To launch the use case execute the command:</p>
<p><code>mkrun -c &quot; CAAFmiNavigatingConnectionsWithInterfaces Repository Server User Password 
SecurityCtx PLMType IDAttribute1 AttrValue1 [IDAttribute2 Value2 ...]&quot;</code></p>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The name and port of the server as name:port_number/RootURI</td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>a string representing the security context (Role.Organization.Project). 
		Choose Role as Reviewer (as the use case does not modify the PLM Data).</td>
	</tr>
	<tr>
		<th>PLMType</th>
		<td>The String representing PLMType</td>
	</tr>
	<tr>
		<th>IDAttribute1*</th>
		<td>Identification attribute name for opening Root</td>
	</tr>
	<tr>
		<th>AttrValue1*</th>
		<td>Identification attribute name value for opening Root</td>
	</tr>
</table>
<p>* We could have several such Attribute-Value set.</p>
<p><code>CAAFmiNavigatingConnectionsWithInterfaces.3dxml</code> is the 3D XML file contains the 
root Functional Reference with the following attributes:</p>
<ul>
	<li><code>PLM_ExternalID</code>: fct00000001_E6ECA968-0000-43B4-53972EE600077943</li>
	<li><code>Version</code>: ---</li>
	<li><code>V_Name</code>: CAAFmiNavigatingConnectionsWithInterfaces_Root</li>
</ul>
<p><strong>Attention</strong>: This 3dxml have been created with OneClick and Unified Typing activated (default environment).</p>
<p><strong>Attention</strong>: Please refer to the document [<a href="#References">1</a>] 
for how to import and reimport such a 3D XML file in your PLM repository.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmiNavigatingConnectionsWithInterfaces Code</h3>
<p>The CAAFmiNavigatingConnectionsWithInterfaces use case is located in the CAAFmiNavigatingConnectionsWithInterfaces.m 
module of the CAAFunctModelerUseItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAFunctModelerUseItf.edu\CAAFmiNavigatingConnectionsWithInterfaces.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are several steps in CAAFmiNavigatingConnectionsWithInterfaces use case.</p>
<ol>
	<li><a href="#Prolog">Prolog</a></li>
	<li><a href="#Step1">Retrieving the Connection Object from Input Structure</a></li>
	<li><a href="#Step2">Retrieving Related Objects to the Functional Connection 
		Retrieved in Previous Step</a></li>
	<li><a href="#Epilog">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Prolog"></a>Prolog</h3>
<p>We connect to the input repository and a PLM session is created. A PLM session 
is an environment essential for running a CAA use case. The article [<a href="#References">1</a>] 
delves further into the process of building and launching a CAA use case.</p>
<p>Here we open in Authoring mode [<a href="#References">3</a>] the Functional structure 
input provided by the use case. This input model contains two instances with interfaces 
and connection between them.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Retrieving the Connection Object from Input Structure</h3>
<p>In this step we retrieve the list of Functional Connection objects aggregated 
under Root. From that list we retrieve first connection.</p>
<pre class="code">...
   <strong>CATListValCATIFctConnection</strong>_var listFunctionalConnections ;
   hr = piFctConnectionsOnRoot-&gt;<strong>List</strong>(listFunctionalConnections);
   ...
   <strong>CATIFctConnection</strong>_var spFctConnectionOnFirstConnection = listFunctionalConnections[1];
...</pre>
<p>A call to <code>CATIFctConnections::List</code> lists all Connections directly 
aggregated under Root. Then we retrieve <code>spFctConnectionOnFirstConnection</code> 
first Connection object from list.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving Related Objects to the Functional Connection 
Retrieved in Previous Step</h3>
<p>Now in this step we retrieve the related objects to the retrieved Functional 
connection. These related objects means the Instances in which the connection is done 
through the Connection Points (Interfaces).</p>
<pre class="code">...
    <strong>CATBaseUnknown_var</strong> spFunctionalInstance1;
    <strong>CATBaseUnknown_var</strong> spFunctionalConnectionPoint1;
    <strong>CATBaseUnknown_var</strong> spFunctionalInstance2;
    <strong>CATBaseUnknown_var</strong> spFunctionalConnectionPoint2;

    hr = spFctConnectionOnFirstConnection-&gt;<strong>GetConnectedElements</strong>(spFunctionalInstance1,
					spFunctionalConnectionPoint1,
					spFunctionalInstance2,
					spFunctionalConnectionPoint2);
...</pre>
<p>A call to <code>CATIFctConnection::GetConnectedElements</code> retrieves the 
objects related to the Connection. The Instances between connection is done (<code>spFunctionalInstance1</code>,
<code>spFunctionalInstance2</code>) through the Connection Points (<code>spFunctionalConnectionPoint1, spFunctionalConnectionPoint2</code>).</p>
<p>With the retrieved Connection Points, we retrieve the Interfaces (Flow Exposition Instances). </p>
<pre class="code">...
    CATListValCATBaseUnknown_var oLPathOfConnectionPoint;
    hr = pConnectionPoint-><strong>GetPath</strong>(oLPathOfConnectionPoint);
...</pre>
<p>A call to <code>CATFctConnectionPoint::GetPath</code> retrieves the path of the
Connection Point. In that case, this path contains the Flow Exposition Instance.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Epilog"></a>Epilog</h3>
<p>The CAAFmiNavigatingConnectionsWithInterfaces use case ends by simply closing the PLM session. 
Since all use cases necessarily conclude by closing the PLM session, we have a dedicated 
article on this topic &quot;Connecting to V6 Server&quot; [<a href="#References">2</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>In this use case we are retrieving Functional Connection from the given structure. 
Then the objects associated with the Functional Connection.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpen.htm">
		Querying, Expanding &amp; Opening PLM Components</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2014]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
