<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating Functional Port</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Functional Port</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2><a name="Top"></a>Abstract</h2>
		<p>The use case illustrates the steps involved in the CAA Customization 
		to create a Functional Port.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAFmiCreatingPort Use Case</a>
				<ul>
					<li><a href="#What">What Does the CAAFmiCreatingPort Do</a></li>
					<li><a href="#How">How to Launch CAAFmiCreatingPort</a></li>
					<li><a href="#Where">Where to Find the CAAFmiCreatingPort Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#History">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The learning from this Use Case is creating the Functional Port under the root 
functional reference using <code>CATIFctPorts::Add</code> API.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAFmiCreatingPort Use Case</h2>
<p>CAAFmiCreatingPort is a use case of the CAAFunctModelerUseItf.edu framework that 
illustrates the CATFunctionalModelerUseItf frameworks capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAFmiCreatingPort Do</h3>
<p>The purpose of the port (whether it will provide the data flow or will be used 
for activation/deactivation of function) is being determined by the functional flow 
reference . It is possible to create the port with/without the flow reference.</p>
<p>In this use case we creates the functional port (without the flow reference associated) 
under the root functional reference (the functional model being created in the article &quot;Creating 
Functional Model&quot; [<a href="#References">3</a>] ).</p>
<p><strong>Note</strong>: Functional port has a mandatory attribute that is its 
Direction. Port could have In/Out.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1: Functional Reference with Port</caption>
	<tr>
		<td>
		<img alt="Functional Reference with Port" src="images/CAAFmiCreatingPort_1.jpg"/></td>
	</tr>
</table>
<p><a href="#Fig1">Fig. 1</a> above shows a root Functional Reference <code>CAAFmiCreateFuncModel_RootRef---</code>.</p>
<p>This use case creates the Port <code>FunctionalPort Emission-FlowRefAssociatdWithPort</code>(shown 
in yellow box in <a href="#Fig1">Fig. 1</a>) beneath the root functional reference.</p>
<p><strong>Note</strong>: The Flow Reference (<strong>FlowRefAssociatdWithPort</strong>) 
existing with the Port <code>FunctionalPort Emission-FlowRefAssociatdWithPort</code> 
(depicted in <a href="#Fig1">Fig. 1</a> above), is being created in the use case &quot;Creating 
Flow&quot; [<a href="#References">4</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAFmiCreatingPort</h3>
<p>To launch the use case execute the command:</p>
<p><code>mkrun -c &quot; CAAFmiCreatingFuncModel Repository Server User Password 
SecurityCtx PLMType Attribute_name1_RepRef Attribute_value1_RepRef [IDAttribute2 
Value2 ...]&quot;</code></p>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The name and port of the server as name:port_number/RootURI</td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>a string representing the security context (Role.Organization.Project). 
		Choose Role as Designer (as the use case does modifies the PLM Data).</td>
	</tr>
	<tr>
		<th>PLMType</th>
		<td>The name of the PLM Type</td>
	</tr>
	<tr>
		<th>Attribute_name1_RepRef*</th>
		<td>The attribute name for Functional Rep Ref</td>
	</tr>
	<tr>
		<th>AttrValue1*</th>
		<td>Attribute Value</td>
	</tr>
</table>
<p>* We could have several such Attribute-Value set. The count is determined by 
the IDSet attributes of the Functional Rep Ref.</p>
<p>CAAFmiCreatingFuncModel.3dxml is the 3D XML file contains the root Functional 
Reference with the following attributes:</p>
<ul>
	<li><code>PLM_ExternalID</code>: CAAFmiCreatingFuncModel_RepRef</li>
	<li><code>Version</code>: ---</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAFmiCreatingPort Code</h3>
<p>The <a><code>CAAFmiCreatingPort</code></a> use case is an extract of the code 
located in the <a><code>CAAFmiCreatingFuncModel.m</code></a> module of the <a>
<code>CAAFunctModelerUseItf.edu</code></a> framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAFunctModelerUseItf.edu\CAAFmiCreatingFuncModel.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<ol>
	<li><a href="#Step1">Valuating the Mandatory Attribute for Functional Port to 
		Create</a></li>
	<li><a href="#Step2">Creating the Functional Port under the Root</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Valuating the Mandatory Attribute for Functional Port to 
Create</h3>
<p>Before we create the functional port, we are required to valuate the mandatory 
attribute for the Functional Port to create.</p>
<pre class="code">...
 	<strong>CATLISTV(CATICkeParm_var) iListOfPortAttr;</strong>

	CATICkeParmFactory_var spParmFactory = CATCkeGlobalFunctions::GetVolatileFactory();
	CATIParmDictionary_var spParmDico = CATCkeGlobalFunctions::GetParmDictionary();
	<strong>CATICkeParm_var spInPortPara = spParmFactory-&gt;CreateEnumere (spParmDico-&gt;GetEnumType(),"V_Direction",CATIFctPort::In);</strong>
	<strong>iListOfPortAttr.Append</strong>(spInPortPara);
...</pre>
<p>As depicted in the code abstract above, we first valuate the mandatory attribute 
(<strong>V_Direction</strong>) of functional port, which is <strong>CATIFctPort::In</strong>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating the Functional Port under the Root</h3>
<p>We now create the functional port under the Root.</p>
<pre class="code">...
 	<strong>CATIFctPorts * piFctPortsOnRootFunctRef = NULL;</strong>
	CATIFctPort * piFunctPort_1 = NULL;
	CATIFctPort * piFunctPort_2 = NULL;
	hr = piRootFunctRef-&gt;QueryInterface(IID_CATIFctPorts,(void **)&amp;piFctPortsOnRootFunctRef);	
	...
	hr = <strong>piFctPortsOnRootFunctRef-&gt;Add</strong>(NULL_var,
				       NULL,
				       iListOfPortAttr, 
				       NULL,
				       piFunctPort_1);
	...
	hr = <strong>piFctPortsOnRootFunctRef-&gt;Add</strong>(NULL_var,
					NULL,
					iListOfPortAttr, 
					NULL,
					piFunctPort_2);
	...
	hr = <strong>piFctPortsOnRootFunctRef-&gt;Remove</strong>(piFunctPort_2);
	...</pre>
<p>A call to <code>CATIFctPorts::Add</code> implementation on a Functional Reference, 
creates the functional port under it. The new functional port is retrieved as a
<em>CATIFctPort</em> type.</p>
<p>A call to <code>CATIFctPorts::Remove</code> implementation on a Functional Reference, 
removes and deletes the given Functional Port from the Functional ports aggregated 
by the Functional Reference.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The use case basically illustrates the steps involved in the CAA Customization 
to create a Functional Port.</p>
<p>The Functional Port is created under the root functional reference using
<code>CATIFctPorts::Add</code> API.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcBasicBatch.htm">
		Connecting to V6 Server</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAFmiUcCreatingFuncModel.htm">Creating Functional Model</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAFmiUcCreatingFlow.htm">Creating Flow with Port</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td><a href="CAAFmiUcCreatingFunctionalFlowModel.htm">Creating Flow with Interface</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Aug 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
