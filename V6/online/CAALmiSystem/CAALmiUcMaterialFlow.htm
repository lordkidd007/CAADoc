<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Managing a Material Flow</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Managing a Material Flow</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article describes an example of use of Framework DELPPRSystemItf</p>
		<p>This use case shows how to insert a Material Flow between two System Occurrences,
			how to navigate along occurrences linked by this relationship and also how to 
            remove the Material Flow introduced between the two Systems.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAALmiMaterialFlow Use Case</a>
			<ul>
				<li><a href="#What">What Does CAALmiMaterialFlow Do</a></li>
				<li><a href="#How">How to Launch CAALmiMaterialFlow</a></li>
				<li><a href="#Where">Where to Find the CAALmiMaterialFlow Code</a>
				</li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>In this use case, you will learn how to use the DELIPPRSystemAuth and DELIPPRSystemNav 
interfaces in order to:</p>
<ul>
	<li>Create a material flow from a system occurrence to a process occurrence.</li>
	<li>Navigate on Material flows from Process to System or from System to Process.</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAALmiMaterialFlow Use Case</h2>
<p>CAALmiMaterialFlow is a use case of the CAAPPRSystemItf.edu framework that illustrates 
DELPPRSystemItf framework capabilities.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAALmiMaterialFlow Do</h3>
<ul>
	<li>Find the root System reference&#39;s.</li>
	<li>Inserts them into the Bag.</li>
	<li>Retrieves its two child instances.</li>
	<li>On the root Ref, GetOccurrenceFromSystemReference</li>
	<li>From it, get the occurrence of each System Child Instance.</li>
	<li>Create the material flow between those two child System Occurrences.</li>
	<li>Navigates on the material flow between the IN and and OUT Port in both directions.</li>
</ul>
<p><strong>Use case Objects</strong>: <code>CAALmiMaterialFlow</code></p>
<p><strong>Expected Result</strong><br />
The result is a return code, its value is:</p>
<ul>
	<li>0 on successful completion.</li>
	<li>1 if execution failed.</li>
</ul>
<table>
	<caption>Fig. 1: Model Structure of This Use Case</caption>
	<tr>
		<td>
		<img src="images/CAALmiMaterialFlow_Structure.png" width="400px" alt="Model Structure"/></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAALmiMaterialFlow</h3>
<p>To launch CAALmiMaterialFlow, you will need to set up the build time environment, 
then compile CAALmiMaterialFlow along with its prerequisites, set up the run time 
environment, and then execute the use case [<a href="#References">1</a>].</p>
<p><em>Additional instructions:</em> This use case is using data created by another 
use case [<a href="#References">2</a>], that you should run first.</p>
<p>mkrun -c &quot;CAALmiMaterialFlow 
Repository Server User Password SecurityCtx Environment&quot;</p>
<p>Where:</p>
<!--
          <pre>
        Repository    : The name of the repository (or provider)
                    Server        : The name and port of the server
                    User          : The user identifier
                    Password      : The user password
                    SecurityCtx   : A string representing the security context (Role.Organization.Project)
                    Environment   : A PLM Environment containing a modeler customization
          </pre>
-->
<table class="fill">
	<!--
          <tr>
          <th>Repository :</th>
            <th style="width:20px"> </th>
            <th>The name of the repository (or provider)</th>
          
            <th class="style2">Repository :</th>
            <th style="width:20px"> </th>
            <th class="style3">The name of the repository (or provider)</th>
           
          </tr>
          -->
	<tr>
		<th>Parameter</th>
		<th>description</th>
	</tr>
	<tr>
		<td>Repository</td>
		<td>The name of the repository (or provider)</td>
	</tr>
	<tr>
		<td>Server</td>
		<td>The name and port of the server</td>
	</tr>
	<tr>
		<td>User</td>
		<td>The user identifier</td>
	</tr>
	<tr>
		<td>Password</td>
		<td>The user password</td>
	</tr>
	<tr>
		<td>SecurityCtx</td>
		<td>A string representing the security context (Role.Organization.Project)</td>
	</tr>
	<tr>
		<td>Environment</td>
		<td>A PLM Environment containing a modeler customization</td>
	</tr>
</table>
<p><strong>Example</strong>:</p>
<pre class="code">mkrun -c &quot;CAALmiMaterialFlow PLM1 ve4al10dsy:8090 uxodtipt Ovb2pcds VPMADMIN.ADMIN.DEFAULT VPM&quot;</pre>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAALmiMaterialFlow Code.</h3>
<p>The CAALmiMaterialFlow use case is made of a file located in the CAALmiMaterialFlow.m 
module of the CAAPPRSystemItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAPPRSystemItf.edu\CAALmiMaterialFlow.m</code></p>
<p><em>Main files:</em></p>
<pre class="code">CAAPPRSystemItf.edu/CAALmiMaterialFlow.m/src/CAALmiMaterialFlow.cpp
CAAPPRSystemItf.edu/ProtectedInterfaces/CAALmiSessionServices.h
CAAPPRSystemItf.edu/ProtectedInterfaces/CAALmiFindServices.h
CAAPPRSystemItf.edu/ProtectedInterfaces/CAALmiReleaseServices.h
CAAPPRSystemItf.edu/ProtectedInterfaces/CAALmiOccurrenceServices.h
CAAPPRSystemItf.edu/CAALmiServices.m/src/CAALmiSessionServices.cpp
CAAPPRSystemItf.edu/CAALmiServices.m/src/CAALmiFindServices.cpp
CAAPPRSystemItf.edu/CAALmiServices.m/src/CAALmiReleaseServices.cpp
CAAPPRSystemItf.edu/CAALmiServices.m/src/CAALmiOccurrenceServices.cpp</pre>
<pre class="code">CAAPLMClientAdapter.edu/PublicInterfaces/CAAAdpCreateCloseSession.h</pre>
<p><em>Documented Frameworks (CAA files)</em>:</p>
<pre class="code"><a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRSystemItf');return false;">DELPPRSystemItf</a><a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRSystemItf', 'interface', 'DELIPPRSystemOccAuth');return false;">/PublicInterfaces/DELIPPRSystemOccAuth.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRSystemItf');return false;">DELPPRSystemItf</a><a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRSystemItf', 'interface', 'DELIPPRSystemAuth');return false;">/PublicInterfaces/DELIPPRSystemAuth.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRSystemItf');return false;">DELPPRSystemItf</a><a href="#" onclick="javascript:CAAlink('CPP', 'DELPPRSystemItf', 'interface', 'DELIPPRSystemNav');return false;">/PublicInterfaces/DELIPPRSystemNav.h</a></pre>
<pre class="code"><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'interface', 'CATIPLMNavReference');return false;">/PublicInterfaces/CATIPLMNavReference.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'class', 'CATListPtrCATIPLMNavReference');return false;">/PublicInterfaces/CATListPtrCATIPLMNavReference.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'interface', 'CATIPLMNavEntity');return false;">/PublicInterfaces/CATIPLMNavEntity.h</a>
<a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces');return false;">CATPLMComponentInterfaces</a><a href="#" onclick="javascript:CAAlink('CPP', 'CATPLMComponentInterfaces', 'class', 'CATListPtrCATIPLMNavEntity');return false;">/PublicInterfaces/CATListPtrCATIPLMNavEntity.h</a></pre>
<pre class="code"><a href="#" onclick="javascript:CAAlink('CPP', 'ObjectModelerBase');return false;">ObjectModelerBase</a><a href="#" onclick="javascript:CAAlink('CPP', 'ObjectModelerBase', 'class', 'CATOmbLifeCycleRootsBag');return false;">/PublicInterfaces/CATOmbLifeCycleRootsBag.h</a></pre>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are six logical steps in CAALmiMaterialFlow:</p>
<ol>
	<li><a href="#1">Retrieving the DELIPPRSystemAuth and DELIPPRSystemNav Interfaces</a>
	</li>
	<li><a href="#2">Querying the Root System Reference in the Database</a>
	</li>
	<li><a href="#4">Retrieving the Two Child Occurrences</a></li>
	<li><a href="#5">Create the System/System Material Flow</a></li>
	<li><a href="#6">Browsing Material Flow along the IN and OUT System Occurrence 
	Material Flow Relations</a></li>
    <li><a href="#7">Removing the System/System Material Flow</a></li>
</ol>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="1"></a>Retrieving the DELIPPRSystemAuth and DELIPPRSystemNav Interfaces</h3>
<pre class="code">DELIPPRSystemAuth_var hPPRSystemAuth;
rc = ::GetPPRSystemAuth(hPPRSystemAuth);
DELIPPRSystemNav_var hPPRSystemNav;
rc = ::GetPPRSystemNav(hPPRSystemNav);</pre>
<p>The DELIPPRSystemAuth interface will later be used to create a material flow 
between System and Process and the DELIPPRSystemNav interface to navigate along 
it.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="2"></a>Querying the Root System Reference in the Database</h3>
<pre class="code">CATOmbLifeCycleRootsBag Bag;
CATAdpAttributeSet AttributeSetSystem;
AttributeSetSystem.AddAttribute(&quot;PLM_ExternalID&quot;,&quot;GeneralSystem.1&quot;); 
AttributeSetSystem.AddAttribute(&quot;V_version&quot;,&quot;---&quot;); 

CATIType_var spTypeSystem;
rc = CATCkePLMNavPublicServices::RetrieveKnowledgeType(&quot;DELLmiGeneralSystemReference&quot;,spTypeSystem);

CATIPLMNavReference * piRootSystem = NULL;
int ret = CAALmiFindServices::FindReference( piEnv, Bag, AttributeSetSystem, spTypeSystem, IID_CATIPLMNavReference, (void **)&amp;piRootSystem);</pre>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="4"></a>Retrieving the Two Child Occurrences</h3>
<pre class="code">
 CATListPtrCATIPLMNavEntity listChildren;
rc = hNavRefOnRootSystem-&gt;ListChildren(listChildren, 0, NULL);
CATIPLMNavOccurrence_var hNavOccOnRootSystem;
rc = CAALmiOccurrenceServices::GetOccurrenceFromSystemReference(hNavRefOnRootSystem, hNavOccOnRootSystem);
CATIPLMNavOccurrence_var hNavOccOnSystemInst1;
rc = CAALmiOccurrenceServices::GetOccurrenceFromSystemInstance(CATIPLMNavInstance_var(listChildren[1]), hNavOccOnRootSystem, hNavOccOnSystemInst1);
CATIPLMNavOccurrence_var hNavOccOnSystemInst2;
rc = CAALmiOccurrenceServices::GetOccurrenceFromSystemInstance(CATIPLMNavInstance_var(listChildren[2]), hNavOccOnRootSystem, hNavOccOnSystemInst2);</pre>
<p>Occurrences are retrieved from either the root System reference and from its two 
child instances.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="5"></a>Create the System/System Material Flow</h3>
<pre class="code">
 rc = hPPRSystemAuth-&gt;CreateMaterialFlow(hNavOccOnSystemInst1, hNavOccOnSystemInst2);</pre>
<p>The Material Flow is created between the two CATIPLMNavOccurrences.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="6"></a>Browsing Material Flow along the IN and OUT System Occurrence 
Material Flow Relations</h3>
<pre class="code">
 CATListPtrCATIPLMNavOccurrence listSystemOccTo;
rc = hPPRSystemNav-&gt;GetMaterialFlowSystemsTo(hNavOccOnSystemInst1, listSystemOccTo);
CATListPtrCATIPLMNavOccurrence listSystemOccFrom;
rc = hPPRSystemNav-&gt;GetMaterialFlowSystemsFrom(hNavOccOnSystemInst2, listSystemOccFrom);</pre>
<p>Using the DELIPPRProcessNav interface, occurrences are navigated from System to 
System in both direction. As DELIPPRProcessNav Material Flow targeted method do 
suggest, Systems may be linked by several Material Flow relations.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="7"></a>Removing the System/System Material Flow</h3>
<pre class="code">
 rc = hPPRSystemAuth-&gt;RemoveMaterialFlow(hNavOccOnSystemInst1, hNavOccOnSystemInst2);</pre>
<p>DELIPPRSystemAuth interface is used to remove the link.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>Each System occurrence may be linked via Material Flows and navigating between 
them is made possible through the DELIPPRProcessNav Class.
DELIPPRSystemAuth interface is used to remove the Material Flow links.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAFmiProcess/CAAFmiUcCreateStructure.htm">
		Creating a Process Structure</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Aug 2010]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Aug 2012]</td>
		<td>Document is updated with Removal of material flow links</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
