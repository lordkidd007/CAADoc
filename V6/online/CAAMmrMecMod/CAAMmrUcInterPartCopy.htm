<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Copying Mechanical Features</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Copying Mechanical Features</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <strong>CAAMmrInterIntraPartCopy</strong> 
		use case. This use case shows how to copy mechanical features using <em>CATIMmiUseCreateImport</em> 
		interface.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMmrInterIntraPartCopy Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAMmrInterIntraPartCopy Do</a></li>
					<li><a href="#How">How to Launch CAAMmrInterIntraPartCopy</a></li>
					<li><a href="#Where">Where to Find the CAAMmrInterIntraPartCopy 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case explains the usage of the <em>CATIMmiUseCreateImport</em> interface 
to copy mechanical features. It presents:</p>
<ul>
	<li>How to copy mechanical features with or without an Assembly context.</li>
	<li>How to choose the type of copy, with or without link.</li>
</ul>
<p>In the <a href="#What">What Does CAAMmrInterIntraPartCopy Do</a> section, all 
the copies done by the code are presented by pictures, and commented. It gives you 
an overview of the <em>CATIMmiUseCreateImport</em> possibilities, and the result 
of the copies.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMmrInterIntraPartCopy Use Case</h2>
<p><code>CAAMmrInterIntraPartCopy</code> is a use case of the CAAMechanicalModeler.edu 
framework that illustrates CATMecModUseItf and CATMecModLiveUseItf frameworks capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMmrInterIntraPartCopy Do</h3>
<p>This use case uses a Product with the following structure:</p>
<table>
	<caption><a name="Fig1"></a>Fig.1 The Input Product</caption>
	<tr>
		<td>
		<img alt="" height="325" src="images/CAAMmrPartCopyProduct.jpg" width="639"/></td>
	</tr>
</table>
<p>The input product contains:</p>
<ul>
	<li>
		<p>Two sub-products containing an instance of the <code>CAAMmrInterIntraPartCopy_Comp1</code> 
		Representation Reference.</p>
	</li>
	<li>
		<p>One sub product containing a sub-product containing an instance of the
		<code>CAAMmrPartInterIntraCopy_Comp3</code> Representation Reference.</p>
	</li>
</ul>
<table>
	<caption><a name="Fig2"></a>Fig.2 The CAAMmrInterIntraPartCopy_Comp1 Representation 
	Reference</caption>
	<tr>
		<td>
		<img alt="" height="160" src="images/CAAMmrPartCopyComp1.jpg" width="234"/></td>
	</tr>
</table>
<p>The Representation Reference<code> CAAMmrPartInterIntraCopy_Comp1</code> only 
contains Geometrical Feature Sets [<a href="#References">1</a>].</p>
<table>
	<caption><a name="Fig3"></a>Fwig.3 The CAAMmrPartInterIntraCopy_Comp3 Representation 
	Reference</caption>
	<tr>
		<td>
		<img alt="" height="304" src="images/CAAMmrPartCopyComp3.jpg" width="496"/></td>
	</tr>
</table>
<p>The <code>CAAMmrPartInterIntraCopy_Comp3</code> Representation Reference contains 
some points, one pad, and an invisible surface (an extruded sketch which is split: 
the result is not visible because <code>Split.1</code> is not the current feature. 
Refer to the article entitled &quot;Order and Absorption Concept&quot; [<a href="#References">2</a>].</p>
<p>The Product and the Representation References are all together inside a CAAMmrInterIntraPartCopy.3dxml 
file ,located in the <code>InputData</code> folder of the <code>
CAAMechanicalModeler.edu</code> framework:</p>
<ul>
	<li><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\InputData\</code></li>
</ul>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>The batch carries out a series of copies between mechanical features:</p>
<ul>
	<li>
		<p><strong>From</strong> <code>CAAMmrInterIntraPartCopy_Comp3</code> <strong>to</strong>
		<code>CAAMmrInterIntraPartCopy_Comp1</code></p>
		<table class="fill">
			<tr>
				<th>Source (CAAMmrInterIntraPartCopy_Comp3)</th>
				<th>Target (CAAMmrInterIntraPartCopy_Comp1)</th>
			</tr>
			<tr>
				<td><code>PartBody</code></td>
				<td><code>Part</code></td>
			</tr>
			<tr>
				<td><code>Point.1</code></td>
				<td><code>Part</code></td>
			</tr>
			<tr>
				<td><code>Point.2</code></td>
				<td><code>PartBody</code></td>
			</tr>
			<tr>
				<td><code>Point.3</code></td>
				<td><code>Geometrical Set.1</code></td>
			</tr>
			<tr>
				<td><code>Geometrical Set.1</code></td>
				<td><code>Part</code></td>
			</tr>
			<tr>
				<td><code>Ordered Geometrical Set.2</code></td>
				<td><code>PartBody</code></td>
			</tr>
			<tr>
				<td><code>Ordered Geometrical Set.2</code></td>
				<td><code>Ordered Geometrical Set.3</code></td>
			</tr>
		</table>
		<p>These copies are done according to the four cases below:</p>
		<ul>
			<li>Out of Assembly context and with &quot;As Result with Link&quot; 
				option. See [<a href="#Fig4">Fig.4 -left</a>] for the result.</li>
			<li>Out of Assembly context and with &quot;As Result &quot; option. 
				See [<a href="#Fig4">Fig.4 -right</a>] for the result.</li>
			<li>In Assembly context and with &quot;As Result with Link&quot; option. 
				See [<a href="#Fig5">Fig.5- left</a>] for the result.</li>
			<li>In Assembly context and with &quot;As Result&quot; option. See [<a href="#Fig5">Fig.5- 
				right</a>] for the result.</li>
		</ul>
		<p>Note that the copies out of Assembly context are equivalent to open separately 
		the two representation references, and to do the copies.</p>
	</li>
	<li><strong>From</strong> <code>CAAMmrInterIntraPartCopy_Comp3</code> <strong>to</strong> <code>
		CAAMmrInterIntraPartCopy_Comp3</code>
		<table class="fill">
			<tr>
				<th>Source (CAAMmrInterIntraPartCopy_Comp3)</th>
				<th>Target (CAAMmrInterIntraPartCopy_Comp3)</th>
			</tr>
			<tr>
				<td><code>PartBody</code></td>
				<td><code>Part</code></td>
			</tr>
			<tr>
				<td><code>Point.1</code></td>
				<td><code>Part</code></td>
			</tr>
			<tr>
				<td><code>Point.2</code></td>
				<td><code>PartBody</code></td>
			</tr>
			<tr>
				<td><code>Point.3</code></td>
				<td><code>Ordered Geometrical Set.2</code></td>
			</tr>
		</table>
		<p>These copies are done according to the two cases below:</p>
		<ul>
			<li>With &quot;As Result with Link&quot; option. See [<a href="#Fig6">Fig.6-left</a>] 
				for the result.</li>
			<li>With &quot;As Result &quot; option. See [<a href="#Fig6">Fig.6-right</a>] 
				for the result.</li>
		</ul>
	</li>
</ul>
<p>Now the result of these copies are presented according to the different cases:</p>
<ol>
	<li><a href="#Case1">Copies from two Representation References out of Assembly 
		Context</a></li>
	<li><a href="#Case2">Copies from two Representation References in Assembly 
		Context</a></li>
	<li><a href="#Case3">Copies into the same Representation Reference</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Case1"></a>Copies from two Representation References out of the Assembly 
Context</h4>
<p>It consists in a copy of mechanical features from <code>CAAMmrInterIntraPartCopy_Comp3</code> 
to <code>CAAMmrInterIntraPartCopy_Comp1</code>.</p>
<table>
	<caption><a name="Fig4"></a>Fig.4 Copies from CAAMmrInterIntraPartCopy_Comp3 
	to CAAMmrInterIntraPartCopy_Comp1 Out of Assembly Context</caption>
	<tr>
		<th>Copy As Result With Link</th>
		<th>Copy As Result</th>
	</tr>
	<tr>
		<td colspan="2">
		<img alt="" height="432" src="images/CAAMmrInterPartCopyResultNPS.jpg" width="585"/></td>
	</tr>
</table>
<p>These two images show the <code>CAAMmrInterIntraPartCopy_Comp1</code> after the 
copies. The four existing sets of this Representation References are surrounded 
in yellow.</p>
<p>First considerations:</p>
<ul>
	<li>On the left, the &quot;<strong>As result with link</strong>&quot; copies: It means 
		that the geometry is copied, but in case of original feature modification, 
		the copied result can be updated.
		<p>Note that there are different symbols in the specification tree, depending 
		on the status of the copied feature:
		<img alt="" height="24" src="images/CAAMmrInterPartCopyIcon3.jpg" width="30"/> 
		means that the original Representation Reference is not opened. If the original 
		Representation Reference is opened (here the <code>CAAMmrInterIntraPartCopy_Comp3)</code>, 
		the symbol becomes
		<img alt="" height="25" src="images/CAAMmrInterPartCopyIcon9.jpg" width="28"/>. 
		If, for example, you change the coordinates of a point in the original Representation 
		Reference, the symbol of the copied feature becomes:
		<img alt="" height="22" src="images/CAAMmrInterPartCopyIcon10.jpg" width="22"/>. 
		To synchronize the copied feature, either the synchronization is automatically 
		done in the update (See Tools options), or you explicitly synchronize the 
		feature using the Synchronize command.</p>
	</li>
	<li>On the right, the &quot;<strong>As result</strong>&quot; (without link) 
		copies: It means that the geometry is copied, but in case of original feature 
		modification, the copied result will be never updated.
		<p>Note that the symbols are now:
		<img alt="" height="25" src="images/CAAMmrInterPartCopyIcon4.jpg" width="31"/>, 
		representing a broken link.</p>
	</li>
</ul>
<p>Other considerations:</p>
<ul class="wide">
	<li><code>PartBody,</code> from <code>CAAMmrInterIntraPartCopy_Comp3,</code> 
		copied into the <code>Part</code> of CAAMmrInterIntraPartCopy_Comp1<code>
		</code>is <code>Body.2</code>.</li>
	<li><code>Point.1,</code> from <code>CAAMmrInterIntraPartCopy_Comp3,</code>copied 
		into the <code>Part</code> of <code>CAAMmrInterIntraPartCopy_Comp1</code> 
		is<code> Point.1.</code>
		<ul>
			<li>On the left, <code>Point.1</code> is located under the <code>External 
				References</code> feature, the mechanical feature which groups together 
				the external references.</li>
			<li>On the right, <code>Point.1</code> is a datum [<a href="#References">3</a>]. 
				It is aggregated under <code>Geometrical Set.2,</code> the current 
				geometrical feature set of <code>CAAMmrInterIntraPartCopy_Comp1
				</code>- Note that <code>Geometrical Set.2</code> is underlined.</li>
		</ul>
	</li>
	<li><code>Point.2,</code> from <code>CAAMmrInterIntraPartCopy_Comp3,</code>copied 
		into the <code>PartBody</code> of <code>CAAMmrInterIntraPartCopy_Comp1</code> 
		is<code> Point.2.</code>.</li>
	<li><code>Point.3,</code> from <code>CAAMmrInterIntraPartCopy_Comp3,</code> 
		copied into <code>Geometrical Set.1</code> of <code>CAAMmrInterIntraPartCopy_Comp1</code> 
		is <code>Point.3</code>.</li>
	<li><code>Geometrical Set.1,</code> from <code>CAAMmrInterIntraPartCopy_Comp3,
		</code>copied into <code>the Part</code> feature of <code>CAAMmrInterIntraPartCopy_Comp1</code> 
		is on left, <code>Geometrical Set.5</code>, and on right, <code>Geometrical 
		Set.4</code>. This difference comes from that on left, External References 
		has been created. Except, this naming's difference, you can note that both 
		contain datum features. The contents of <code>Geometrical Set.1</code> has 
		been copied with the &quot;As result&quot; option in the two cases. In a 
		future version, the &quot;As Result With link&quot; for a geometrical features 
		set will be possible. Note that today, interactively this kind of copy is 
		impossible.</li>
	<li><code>Ordered Geometrical Set.2,</code> from <code>CAAMmrInterIntraPartCopy_Comp3,
		</code>copied <code>into the PartBody of CAAMmrInterIntraPartCopy_Comp1 
		is Ordered Geometrical Set.6.</code>
		<ul>
			<li>On the left, and on the right the same icon:
				<img alt="" height="25" src="images/CAAMmrInterPartCopyIcon5.jpg" width="25"/> 
				- It is the same problem as for <code>Geometrical Set.1</code>. 
				Whatever the copy option, the contents of an <code>Ordered Geometrical 
				Set</code> is copied with the &quot;As Result&quot; option.</li>
			<li><code>Sketch.2</code> included into <code>Ordered Geometrical Set.2
				</code>is not copied. Sketches are never copied such as interactively.</li>
			<li><code>Extrude.1</code> is not copied, <code>Surface.2</code>&nbsp; 
				is the &quot;result&quot; of&nbsp; <code>Split.1</code>, an absorbent 
				feature. [<a href="#References">2</a>].</li>
		</ul>
	</li>
	<li><code>Ordered Geometrical Set.2</code>, from <code>CAAMmrInterIntraPartCopy_Comp3,
		</code>copied into the <code>Ordered Geometrical Set.3</code> of <code>CAAMmrInterIntraPartCopy_Comp1</code> 
		is <code>Ordered Geometrical Set.7</code>.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Case2"></a>Copies from Two Representation References in Assembly Context</h4>
<p>It is again the same copies from <code>CAAMmrInterIntraPartCopy_Comp3 to CAAMmrInterIntraPartCopy_Comp1</code>, 
but now in Assembly context.</p>
<table>
	<caption><a name="Fig5"></a>Fig.5 Copies from CAAMmrInterIntraPartCopy_Comp3 
	to CAAMmrInterIntraPartCopy_Comp1 In Assembly Context</caption>
	<tr>
		<th>Copy As Result with Link</th>
		<th>Copy As Result</th>
	</tr>
	<tr>
		<td colspan="2">
		<img alt="" height="441" src="images/CAAMmrInterPartCopyResultPS.jpg" width="655"/></td>
	</tr>
</table>
<p>These two images show the <code>CAAMmrPartCopy</code> Representation References 
after the copies. The four existing sets of this Representation References are surrounded 
in yellow.</p>
<p>First considerations are about the <strong>Product's icons</strong>.</p>
<p>The Part origin of the features is the <code>CAAMmrInterIntraPartCopy_Comp3</code> 
Representation Reference. They are copied in an instance of the <code>CAAMmrInterIntraPartCopy_Comp1</code> 
Representation Reference (CAAMmrInterIntraPartCopy_Comp1.1). So sometimes, you can 
also read Ref/Inst copies.</p>
<p>Second considerations are about the <strong>copies's location</strong>.</p>
<p>You can see on [<a href="#Fig5">Fig.5</a>] that two results are coincident: The 
yellow pad (from <code>CAAMmrInterIntraPartCopy_Comp1.1)</code> and the gray one 
(from <code>CAAMmrInterIntraPartCopy_Comp3)</code> are coincident. On the Product 
instance links to <code>CAAMmrInterIntraPartCopy_Comp1.1</code>, a positioning matrix, 
computed from the matrix of <code>CAAMmrInterIntraPartCopy_Comp3</code> and
<code>CAAMmrInterIntraPartCopy_Comp1.1</code> is stored.</p>
<p>Otherwise, about the <strong>result of the copies</strong> with (on the left), or without 
link (on the right) it is the same comments as for copies without Assembly context 
([<a href="#Fig4">Fig.4</a>]).</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Case3"></a>Copies into the Same Representation Reference</h4>
<p>In this last case, copies are done from and to the <code>CAAMmrInterIntraPartCopy_Comp3</code> 
Representation Reference.</p>
<table>
	<caption><a name="Fig6"></a>Fig.6 Copies Inside CAAMmrInterIntraPartCopy_Comp3</caption>
	<tr>
		<th>Copy As Result with Link</th>
		<th>Copy As Result</th>
	</tr>
	<tr>
		<td colspan="2">
		<img alt="" height="438" src="images/CAAMmrInterPartCopyResultComp3AsResultWL.jpg" width="284"/><img alt="" height="439" src="images/CAAMmrInterPartCopyResultComp3AsResult.jpg" width="267"/></td>
	</tr>
</table>
<p>These two images show the <code>CAAMmrInterIntraPartCopy_Comp3</code> representation 
reference after the copies.</p>
<p>First considerations:</p>
<ul>
	<li>On the left, the &quot;<strong>As result with link</strong>&quot; copies. See the 
		icons:
		<img alt="" height="36" src="images/CAAMmrInterPartCopyIcon6.jpg" width="32"/> 
		for the solid, and
		<img alt="" height="29" src="images/CAAMmrInterPartCopyIcon7.jpg" width="30"/> 
		for the points. It means that the geometry has been copied with the &quot;As 
		result with link&quot; option within the representation reference.</li>
	<li>On the right, the &quot;<strong>As result</strong>&quot; (without link) copies. The 
		same icons now have the symbol representing a datum:
		<img alt="" height="23" src="images/CAAMmrInterPartCopyIcon4.jpg" width="27"/>
		<p>About the copies themself:</p>
		<ul>
			<li><code>Body.2</code> is the copy of <code>PartBody</code>. The geometry 
				is of course at the same location.</li>
			<li><code>Point.4</code> is the copy of <code>Point.1</code>. The
				<code>Part</code> feature being the destination, <code>Point.4</code> 
				is included after the current feature of <code>Ordered Geometrical 
				Set.2.</code> On [<a href="#Fig3">Fig.3</a>] you can see that
				<code>Sketch.1</code> is the current feature. So the new point is 
				created just after it [<a href="#References">3</a>].</li>
			<li><code>Point.5</code> is the copy of <code>Point.2.</code> <code>
				PartBody</code> being the destination, it is included in the Body 
				feature.</li>
			<li><code>Point.6</code> is the copy of <code>Point.3.</code> <code>
				Ordered Geometrical Set.2</code> being the destination, its is included 
				at the end of the set.</li>
		</ul>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAMmrInterIntraPartCopy</h3>
<p>To launch CAAMmrInterIntraPartCopy, you will need to set up the build time environment, 
then compile CAAMmrInterIntraPartCopy along with its prerequisites, set up the run 
time environment, and then execute the use case [<a href="#References">4</a>]. To 
launch the use case, execute the following steps:</p>
<ol>
	<li><code>mkrun -c &quot;<em>CAAMmrInterIntraPartCopy Repository Server 
		User Password SecurityCtx PLMType PLMExternalID Version Copy_option 
		PS_option Comp1 Product2&quot;</em></code>.
		<p>Where:</p>
		<table class="fill">
			<tr>
				<th>Repository</th>
				<td>
				<script type="text/javascript">insertRepository();</script>
				</td>
			</tr>
			<tr>
				<th>Server</th>
				<td>The server as <em>Host:port_number/RootURI</em></td>
			</tr>
			<tr>
				<th>User</th>
				<td>The user name</td>
			</tr>
			<tr>
				<th>Password</th>
				<td>The user password to authenticate the user</td>
			</tr>
			<tr>
				<th>SecurityCtx</th>
				<td>A string representing the security context (Role.Organization.Project). 
				Choose Role as Designer(as the use case modifies the PLM data)</td>
			</tr>
			<tr>
				<th>PLM_Type</th>
				<td>A string representing PLM Product Type (e.g. VPMReference)</td>
			</tr>
			<tr>
				<th>PLM_ExternalID</th>
				<td>The <code><strong>PLM_ExternalID</strong></code> of a PLM Reference or 
				PLM Representation Reference</td>
			</tr>
			<tr>
				<th>Version</th>
				<td>The <code><strong>majorrevision</strong></code> of a PLM Reference or PLM 
				Representation Reference</td>
			</tr>
			<tr>
				<th>Copy_option</th>
				<td>1= Paste with Link, otherwise Paste As Result</td>
			</tr>
			<tr>
				<th>PS_option</th>
				<td>PS= Assembly context, otherwise= without Assembly context</td>
			</tr>
			<tr>
				<th>Comp1</th>
				<td>The name of the product instance involved in the copy operation. 
				Here it is &quot;CAAMmrInterIntraPartCopy_Comp1.1&quot;.</td>
			</tr>
			<tr>
				<th>Product2</th>
				<td>The name of the Product instance involved in the copy operation. 
				Here it is &quot; CAAMmrInterIntraPartCopy_Product2.1&quot;.</td>
			</tr>
		</table>
		<p>The Input PLM Product Reference is provided by a 3D XML file: CAAMmrInterIntraPartCopy.3dxml, 
		at the path specified below.</p>
		<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\InputData\CAAMmrInterIntraPartCopy.3dxml\</code></p>
		<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is 
		the folder where the API CD-ROM is installed.</p>
		<p>The attribute values of this PLM Product Reference are the following.</p>
		<ul>
			<li><strong>PLM_ExternalID</strong> : <code>CAAMmrPartCopy</code>(with a prefix)</li>
			<li><strong>majorrevision</strong>: ---</li>
		</ul>
		<p><strong>Attention</strong>: the use case modifying the Input PLM Representation 
		Reference, it is recommended to import [<a href="#References">4</a>] four 
		times the same representation. Use each time a different prefix ( e.g. Test1NPS_, 
		Test2NPS_, Test1PS_, Test2PS_)</p>
	</li>
	<li><strong>Read</strong> the modified Representation References
		<p>The input models, those of your directory, are modified, and contain 
		the result of the copies.</p>
	</li>
</ol>
<p>Some examples:</p>
<ul>
	<li>mkrun -c &quot;CAAMmrInterIntraPartCopy Repository Server User Password 
		SecurityCtx PLMType <code><strong>Test1NPS</strong>_CAAMmrInterIntraPartCopy
		</code>--- 1 NPS CAAMmrInterIntraPartCopy_Comp1.1 CAAMmrInterIntraPartCopy_Product2.1&quot;
		<p>To copy the mechanical features, out of the Assembly context, and with &quot;As 
		Result with link&quot; option. See the results, <a href="#Fig4">Fig.4</a> 
		and <a href="#Fig6">Fig.6</a>, both on the left.</p>
	</li>
	<li>mkrun -c &quot;CAAMmrInterIntraPartCopy Repository Server User Password 
		SecurityCtx PLMType <code><strong>Test2NPS</strong>_CAAMmrInterIntraPartCopy
		</code>--- 2 NPS CAAMmrInterIntraPartCopy_Comp1.1CAAMmrInterIntraPartCopy_Product2.1&quot;
		<p>To copy the mechanical features, out of the Assembly context, and with &quot;As 
		Result&quot; option. See the results, <a href="#Fig4">Fig.4</a> and
		<a href="#Fig6">Fig.6</a>, both on the right.</p>
	</li>
	<li>mkrun -c &quot;CAAMmrInterIntraPartCopy Repository Server User Password 
		SecurityCtx PLMType <code><strong>Test1PS</strong>_CAAMmrInterIntraPartCopy</code> 
		--- 1 PS CAAMmrInterIntraPartCopy_Comp1.1CAAMmrInterIntraPartCopy_Product2.1&quot;
		<p>To copy the mechanical features, in Assembly context, and with &quot;As 
		Result with link&quot; option. See the results,<a href="#Fig5"> Fig.5</a>, 
		on the left.</p>
	</li>
	<li>mkrun -c &quot;CAAMmrInterIntraPartCopy Repository Server User Password 
		SecurityCtx PLMType <code><strong>Test2PS_</strong>CAAMmrInterIntraPartCopy</code>
		--- 2 PS CAAMmrInterIntraPartCopy_Comp1.1CAAMmrInterIntraPartCopy_Product2.1&quot;
		<p>To copy the mechanical features, in Assembly context, and with &quot;As 
		Result&quot; option. See the results,<a href="#Fig5"> Fig.5</a>, on the 
		right.</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMmrInterIntraPartCopy Code</h3>
<p>The CAAMmrInterIntraPartCopy use case is made of a single source file named CAAMmrInterIntraPartCopyMain.cpp 
located in the CAAMmrInterIntraPartCopy.m module of the CAAMechanicalModeler.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\CAAMmrInterIntraPartCopy.m\</code></p>
<p>The use case uses three global functions, <em>CAAMmrGetGeometry</em> and <em>CAAMmrGetPartFromProduct</em>, 
which are defined in:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\CAAMmrUtilities.m\</code></p>
<p>and <em>CAAOpenPLMComponent</em>, which is defined in:</p>
<p><code>InstallRootFolder\CAADoc\CAAPLMClientAdapter.edu\CAAAdpUtilities.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are four logical steps in the use case:</p>
<ol>
	<li><a href="#Step1">Prolog</a></li>
	<li><a href="#Step2">Copying out of Assembly Context</a></li>
	<li><a href="#Step3">Copying in Assembly Context</a></li>
	<li><a href="#Step4">Saving the Session</a></li>
</ol>
<p>All the copies shown in the &quot;<a href="#What">What Does CAAMmrInterIntraPartCopy 
Do</a>&quot; section are not detailed in this article. Only two of them are detailed 
to explain the usage of the <em>CATIMmiUseCreateImport</em> interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Prolog</h3>
<p>CAAMmrInterIntraPartCopy begins by creating a session, and opening the input 
product.</p>
<pre class="code">...
  <strong>CATOmbLifeCycleRootsBag</strong> Bag; 	
  rc = <strong>CAAOpenPLMComponent</strong>(PLMtype,
                           PLM_ExternalIDValue,
                           VersionValue,
                           IID_CATIPLMProducts,
                           void **) &amp;<strong>piPLMProductsOnRoot</strong>,
                           Bag,
                           TRUE);
...</pre>
<p><code>CAAOpenPLMComponent</code> is a global function defined in the CAAPLMClientAdapter.edu 
framework. It is fully explained in the &quot;Querying, Opening and Expanding a 
PLM Component&quot; use case [<a href="#References">6</a>]. This global function 
opens the input Product (thanks to its <code>PLM_ExternalID</code> &amp; <code>majorrevision</code> 
attributes values), and returns <code>piPLMProductsOnRoot</code>, a <em>CATIPLMProducts</em> 
interface pointer on the Root PLM Reference.</p>
<p>The part of code retrieving the different sub-products, and the mechanical features 
is not detailed. Refer to the code sample.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Copying out of Assembly Context</h3>
<p>The copy of <code>Point.3</code> (<code>CAAMmrInterIntraPartCopy_Comp3</code>) 
into <code>Ordered Geometrical Set.2 (CAAMmrInterIntraPartCopy_Comp3)</code> is 
detailed. The new feature is <code>Point.6</code>. You can see the result on the 
[<a href="#Fig6">Fig.6</a>]. The copy is done with five steps.</p>
<ol>
	<li>Retrieve a <em>CATIMmiUseCreateImport</em> class instance.
		<pre class="code">...
  <strong>CATIMmiUseCreateImport</strong>* pInterPartCopy = NULL; 
  rc = <strong>CATMmiUseServicesFactory::CreateMmiUseCreateImport</strong>(pInterPartCopy);     
...</pre>
	</li>
	<li>Set Source and Target.
		<pre class="code">...
  CATBaseUnknown_var SourceToCopy = spOnPoint3OfComp3;
  CATIMmiMechanicalFeature_var Target = spOnOrderedGeomSet2OfComp3;
  pInterPartCopy-&gt;<strong>SetObject</strong>(SourceToCopy);
  pInterPartCopy-&gt;<strong>SetTarget</strong>(Target);         
...</pre>
		<p><code>spOnPoint3OfComp3</code> and <code>spOnOrderedGeomSet2OfComp3</code> 
		are smart pointers on <code>Point.3</code> and <code>Ordered Geometrical 
		Set.2</code>, two mechanical features of the <code>CAAMmrInterIntraPartCopy_Comp3</code> 
		representation reference See [<a href="#Fig3">Fig.3</a>]. Refer to the 
		code of the use case, the way to retrieve these two pointers.</p>
	</li>
	<li>Set the copy option thanks the <code>SetLinkMode</code> method.
		<pre class="code">...
  pInterPartCopy -&gt;<strong>SetLinkMode</strong>(CopyWithLink);
...</pre>
		<p><code>CopyWithLink</code> is a <em>CATBoolean</em> value. It is valuated 
		according to the Copy_Option argument of the program. See the
		<a href="#How">How to Launch CAAMmrInterIntraPartCopy</a> section. If the 
		argument is <code>1</code>, the <code>value of CopyWithLink</code> is TRUE, 
		otherwise its value is FALSE. If you do not use the <code>SetLinkMode</code> 
		method, the option of copy depends on the &quot;Keep link with selected 
		object&quot; option.</p>
		<table>
			<caption><a name="Fig7"></a>Fig.7 Tools Options</caption>
			<tr>
				<td>
				<img alt="" height="530" src="images/CAAMmrInterPartCopyTO.jpg" width="697"/></td>
			</tr>
		</table>
	</li>
	<li>Execute the copy using the <code>Run</code> method.
		<pre class="code">...
rc = pInterPartCopy -&gt;<strong>Run</strong>(Result);
...</pre>
	</li>
	<li>Displays the result.
		<pre class="code">...
  alias = Result ;
  if ( NULL_var != alias )
  {
     cout &lt;&lt;&quot; The result of the copy is&quot; ;
     cout &lt;&lt;&quot; &quot; &lt;&lt; spAlias-&gt;GetAlias().CastToCharPtr() &lt;&lt; endl &lt;&lt; endl;
  }
...</pre>
		<p>This step is of course optional.</p>
	</li>
	<li>Resets the <em>CATIMmiUseCreateImport</em> class instance for another copy.
		<pre class="code">...
  pInterPartCopy-&gt;Reset();
...</pre>
		<p>To copy another mechanical feature you must come back to the first step.</p>
	</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Copying in Assembly Context</h3>
<p>The copy of <code>Point.1</code> of <code>CAAMmrInterIntraPartCopy_Comp3</code> 
into the Part feature of <code>CAAMmrInterIntraPartCopy_Comp1.1</code> is detailed. 
The new feature is <code>Point.1</code>. You can see the result on the [<a href="#Fig6">Fig.4</a>]. 
These copy is done with six steps.</p>
<ol>
	<li>Initialize the Source and Target<p>Since previously, the <code>Reset
		</code>method has been called on <code>pInterPartCopy</code>, we can set 
		new values.</p>
		<pre class="code">...
  SourceToCopy = spOnPoint1OfComp3 ; 
  Target = spPartRequestOnMechPartOfComp1 ;

  pInterPartCopy-&gt;<strong>SetObject</strong>(SourceToCopy);
  pInterPartCopy-&gt;<strong>SetTarget</strong>(Target);         
...</pre>
		<p><code>spOnPoint1OfComp3</code> is a smart pointer on <code>Point.1
		</code>of <code>the CAAMmrInterIntraPartCopy_Comp3</code> representation 
		reference [<a href="#Fig3">Fig.3</a>]. <code>spPartRequestOnMechPartOfComp1</code> 
		is a smart pointer on the <code>Part</code> feature of the <code>CAAMmrInterIntraPartCopy_Comp1</code> 
		representation reference [<a href="#Fig3">Fig.2</a>]. Refer to the code 
		of the use case, for the way to retrieve these two pointers.</p>
	</li>
	<li>Set the copy option thanks the <code>SetLinkMode</code> method.
		<pre class="code">...
pInterPartCopy-&gt;<strong>SetLinkMode</strong>(CopyWithLink);
...</pre>
	</li>
	<li>Set the Assembly Context.
		<p>For a contextual link, both the source and target occurrences are needed.</p>
		<pre class="code">...
if( TRUE == PSContext)
 {
   CATIPLMNavOccurrence_var spOccurrenceComp3, spOccurrenceComp1 ;
   ...
   pInterPartCopy -&gt;SetPLMOccurrences(spOccurrenceComp3,spOccurrenceComp1);
 }
...</pre>
		<p><code>spOccurrenceOnComp3</code> and <code>spOccurrenceOnComp1</code> 
		are smart pointers on a <em>CATIPLMNavOccurrence</em> interface. They are 
		the corresponding occurrences of the instances of <code>CAAMmrInterIntraPartCopy_Comp3</code> 
		and <code>CAAMmrInterIntraPartCopy_Comp1.1</code> in the context of the 
		assembly. Refer to the code of the use case, for the way to retrieve these 
		two pointers.</p>
		<p>You can see the result on the [<a href="#Fig4">Fig.4</a>].</p>
	</li>
	<li>Execute the copy using the <code>Run</code> method.
		<pre class="code">...
rc = pInterPartCopy -&gt;<strong>Run</strong>(Result);
...</pre>
	</li>
	<li>Displays the result.
		<pre class="code">...
alias = Result ;
if ( NULL_var != alias )
{
  cout &lt;&lt;&quot; The result of the copy is&quot; ;
  cout &lt;&lt;&quot; &quot; &lt;&lt; spAlias-&gt;GetAlias().CastToCharPtr() &lt;&lt; endl &lt;&lt; endl;
}
...</pre>
		<p>This step is of course facultative.</p>
	</li>
	<li>Resets the <em>CATIMmiUseCreateImport</em> class instance.
		<pre class="code">...
pInterPartCopy-&gt;Reset();
...</pre>
		<p>To copy another mechanical feature you must come back to the first step.</p>
	</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Saving the Session</h3>
<p>The product and all the Representation References are saved [<a href="#References">7</a>] 
in the session and then the session is closed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has shown different kind of copies, and explained the usage of 
the <em>CATIMmiUseCreateImport</em> class.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAMmrTaContentsSpecCont1.htm">The Geometrical Feature Sets</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAMmrTaOrderLinearBody.htm">Order and Absorption Concepts</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAMmrTaContentsSpecCont2.htm">The Geometrical Features</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpen.htm">
		Querying, Expanding and Opening PLM Object</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcSave.htm">
		Saving PLM Components</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [Oct 2004]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: 2 [Apr 2010]</td>
		<td>Document updated for V6 novelties</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
