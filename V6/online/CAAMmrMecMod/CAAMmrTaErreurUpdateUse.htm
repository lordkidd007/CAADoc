<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>A Description of Update Errors</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>A Description of Update Errors</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The aim of this article is to explain the error management during the 
		Build/Update process of Mechanical Features.</p>
		<ul>
			<li><a href="#100000">What is an Update Error ?</a></li>
			<li><a href="#200000">Sick Features</a></li>
			<li><a href="#300000">Cyclical Errors</a></li>
			<li><a href="#400000">Error Propagation</a></li>
			<li><a href="#500000">Use of CATIMmiUseUpdateError Interface</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="100000"></a>What is an Update Error ?</h2>
<p>During the Build/Update process of the geometrical result of a mechanical feature, 
an error can occur, blocking the construction of the geometry. Such errors are called 
Update errors. When an update error occurs, the end-user is informed about the origin 
of the error and can modify one or several parameters before an update is re-launched. 
This information is managed by associating the faulty feature with an object, called 
Update Error.</p>
<p>Let's take the simple example of an EdgeFillet feature. If its radius is too 
big, the build generates an error and the following dialog box appears [<a href="#Fig1">Fig.1</a>].</p>
<table>
	<caption><a name="Fig1"></a>Fig.1: Update Error on Edge Fillet</caption>
	<tr>
		<td>
		<img alt="Update Error on Edge Fillet" height="354" src="images/CAAMmrUpdateErrorFillet.jpg" width="391"/></td>
	</tr>
</table>
<p>This dialog box displays the diagnosis of the update error associated with the 
feature and a more detailed message at the bottom of the panel. It is possible to 
edit the faulty feature to correct the error.</p>
<p>The <em><strong>CATIMmiUseUpdateError</strong></em> interface enables you to retrieve 
information on a possible update error associated with a feature</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="200000"></a>Sick Features</h2>
<p>The sick features are the features at the root of the error. Lets look at an 
example:</p>
<table>
	<caption><a name="Fig2"></a>Fig.2: Pad Feature</caption>
	<tr>
		<td>
		<img alt="Pad Feature" height="151" src="images/CAAMmrUpdateErrPadFillete.jpg" width="214"/></td>
		<td>
		<img alt="Pad Feature" height="150" src="images/CAAMmrUpdateErrBrokenEdge.jpg" width="221"/></td>
	</tr>
</table>
<p>First of all there is a Pad with a fillet set on two edges (left picture). Next, 
the Sketch is edited to replace the support edge of the fillet by a broken edge 
(right picture). When exiting the Sketcher editor, the following dialog box [<a href="#Fig3">Fig. 
3</a>] appears to notify you of an update error on the <code>EdgeFillet.1</code> 
feature.</p>
<table>
	<caption><a name="Fig3"></a>Fig.3: Sick Feature</caption>
	<tr>
		<td>
		<img alt="Sick Feature" height="333" src="images/CAAMmrErrSickFeature.jpg" width="678"/></td>
	</tr>
</table>
<p>The dialog box displays the <code>Edge.1</code> feature that you need to edit 
to modify. <code>Edge.1</code> is a sick feature for the <code>EdgeFilllet.1</code> 
feature. By editing the <code>Edge.1</code> feature, the error can be corrected.</p>
<p>For a single error several sick features can be involved.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="300000"></a>Cyclical Errors</h2>
<p>Let's take a look at the following example in order to understand the cyclical 
errors. First we have a PartBody with three Pads: <code>Pad.2</code> created on 
the upper face of <code>Pad.1</code> and <code>Pad.3</code> created on the upper 
face of <code>Pad.2</code> [<a href="#Fig5">Fig.5</a>]. Next, <code>Pad.1</code> 
is moved to be placed after <code>Pad.3</code>. [<a href="#Fig6">Fig.6.</a>]
</p>
<table>
	<caption><a name="Fig5"></a>Fig.5: Pads</caption>
	<tr>
		<td>
		<img alt="Pads" height="291" src="images/CAAMmrUpdateErrPadEmpiles.jpg" width="438"/></td>
	</tr>
</table>
<table>
	<caption><a name="Fig6"></a>Fig.6: Cyclicity Error</caption>
	<tr>
		<td>
		<img alt="Cyclicity Error" height="494" src="images/CAAMmrErrCycle.jpg" width="540"/></td>
	</tr>
</table>
<p></p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="400000"></a>Error Propagation</h2>
<p>With the Dassault Syst&#232;mes features, the error propagation follows the update 
path. Here are two examples that illustrate this: the first for the solid and surfacic 
features set update (Body/PartBody) [<a href="#Fig7">Fig.7</a>] and the second 
for the surfacic features set&nbsp; case (OGS/GS) [<a href="#Fig8">Fig.8</a>].</p>
<table>
	<caption><a name="Fig7"></a>Fig.7: Solid and Surfacic Features Set Update</caption>
	<tr>
		<td>
		<img alt="Solid and Surfacic Features Set Update" height="283" src="images/CAAMmrErrProp1.jpg" width="536"/>&nbsp;</td>
	</tr>
</table>
<p>In this example, you can notice that the error is propagated from the <code>EdgeFillet</code>&nbsp; 
to its aggregating feature, the PartBody, as well as to the Part. The Part update 
implies the <code>PartBody</code> update and the <code>EdgeFillet</code> update.</p>
<table>
	<caption><a name="Fig8"></a>Fig.8: Surfacic Features Set Update</caption>
	<tr>
		<td>
		<img alt="Surfacic Features Set Update" height="321" src="images/CAAMmrErrProp2.jpg" width="541"/></td>
	</tr>
</table>
<p>In the surfacic example above, the error propagation is clearly not the same 
as the path of the aggregation. The <code>Point.1</code> feature has an update error, 
but <code>GeomSet.1,</code> its aggregating set, has no error. However,
<code>Line.1</code> and <code>GeomSet.2</code> do have an update error.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="500000"></a>Use of CATIMmiUseUpdateError Interface</h2>
<p>After launching the update of a feature, you can analyze the status of the updated 
feature by using the <em><strong>CATIMmiUseUpdateError</strong></em> interface on 
the feature.</p>
<pre class="code">...

<strong>CATIMmiUseUpdateError</strong>_var UpdateError = pUpdatedFeature;
if (UpdateError != NULL_var)
{
  rc = UpdateError-&gt;<strong>HasAnUpdateError</strong>();
  if (rc == S_OK)
  { 
    CATUnicodeString ErrMsg;
    rc = UpdateError-&gt;<strong>GetDiagnostic</strong>(ErrMsg);
	
    CATLISTV(CATIMmiMechanicalFeature_var) SickFeatures;
    rc = UpdateError-&gt;<strong>GetAssociatedSickFeatures</strong>(SickFeatures);
    int nbSickFeat = SickFeatures.Size();
					 
    if (nbSickFeat)
    {        
      CATUnicodeString ErrFullMsg;
      rc = UpdateError-&gt;<strong>GetFullDiagnostic</strong>(ErrFullMsg);
    }
  }
}
...</pre>
<p>PUpdatedFeature is a pointer on the the feature you have juste updated. All mechanical 
feature adhere to the <em>CATIMmiUseUpdateError</em> interface.</p>
<p>The first method to call is the <code>HasAnUpdateError</code> method that enables 
you to know if the update was successful or not. Beware that the method returns
<code>S_FALSE</code> if there isn't an update error.</p>
<p>The <code>GetDiagnostic</code> method retrieves the error diagnostic.</p>
<p>The <code>GetAssociatedSickFeatures</code> method retrieves the possible sick 
features involved.</p>
<p>If there are sick features involved, the <code>GetFullDiagnostic</code> method 
retrieves a message which is a concatenation of the diagnostic associated with each 
one of the sick features.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>During the update of a mechanical feature an error can occur. This error blocks 
the construction of the topology of the feature and can be corrected by editing 
the underlying sick features or the feature itself.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="CAAMmrTaSpecResultForMechFeat.htm">
		Specification/Result Mechanism Applied to Mechanical Features</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Dec 2002]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Feb 2011]</td>
		<td>Document updated for V6 modifications</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
