<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Managing Axis Systems</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Managing Axis Systems</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <strong>CAAMmrAxisSystemManagement</strong> 
		use case. This use case shows how to use the <em>CATIMf3DAxisSystemManager</em> 
		interface.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMmrAxisSystemManagement Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAMmrAxisSystemManagement Do</a></li>
					<li><a href="#How">How to Launch CAAMmrAxisSystemManagement</a></li>
					<li><a href="#Where">Where to Find the CAAMmrAxisSystemManagement 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how to use the <em>CATIMf3DAxisSystemManager
</em>interface to:</p>
<ul>
	<li>Retrieve all the axis systems of a Part feature within the 3D Shape associated 
		with the Representation Reference.</li>
	<li>Set an axis system as the current one,</li>
	<li>Transform point and vector coordinates in the current axis system.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMmrAxisSystemManagement Use Case</h2>
<p><code>CAAMmrAxisSystemManagement</code> is a use case of the CAAMechanicalModeler.edu 
framework that illustrates CATMecModUseItf and CATMecModLiveUseItf frameworks capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMmrAxisSystemManagement Do</h3>
<p><code>CAAMmrAxisSystemManagement</code> lists all the axis systems of a Representation 
Reference, sets as current an axis system, and transforms the (0,0,0) point and 
the (0,0,1) vector in this current axis system.</p>
<p>If you use the <code>CAAAxisSystemCreation_Save</code> 3D Shape created by the
<code>CAAMmrAxisSystemCreation</code> use case [<a href="#References">1</a>]:</p>
<table>
	<caption><a name="Fig1"></a>Fig.1: The CAAMmrAxisSystemCreation_Save 3D Shape</caption>
	<tr>
		<td>
		<img alt="" height="293" src="images/AxisSystemManagement3_P2.jpg" width="485"/></td>
	</tr>
</table>
<p>The list of axis systems is the following: (*)</p>
<p><strong>CAAMmrAxisSystemManagement</strong> is opened.</p>
<p>There are five axis systems in the representation reference:</p>
<ol>
	<li>AS_Standard</li>
	<li>AS_AxisRotation</li>
	<li>AS_EulerAngles</li>
	<li>AS_AxisStandardOriAxisDir</li>
	<li>AS_Explicit</li>
</ol>
<p>You can see in the <a href="#Fig1">Fig-1</a> that there is no axis system with 
the
<img alt="Axis System Icon" height="22" src="images/CAAMmrAxisSystemMngt4.jpg" width="20"/> 
icon, so there is no axis system as current. The AS_Standard axis system is set 
as standard: (*)</p>
<p><img alt="" height="44" src="images/CAAMmrAxisSystemMngt2.jpg" width="400"/></p>
<p>The current axis system parameters:</p>
<p><strong>Origin X= 150mm, Y= 0mm, Z= 0mm<br />
X Axis X= 0, Y= 0, Z= 1<br />
Y Axis X= 0, Y= -1, Z= 0<br />
Z Axis X= 1, Y= 0, Z= 0</strong></p>
<p>The origin of the absolute axis system and the z vector are translated in the 
AS_Standard axis system: (*)</p>
<p><img alt="" height="48" src="images/CAAMmrAxisSystemMngt5.jpg" width="321"/></p>
<p>The AS_Standard characteristics are the following:</p>
<p>
<img alt="" height="187" src="images/CAAMmrAxisSystemMngt6.jpg" width="514"/></p>
<p>(*) It is an extract of the <code>CAAMmrAxisSystemManagement</code> output traces.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAMmrAxisSystemManagement</h3>
<p>To launch <code>CAAMmrAxisSystemManagement</code>, you will need to set up the 
build time environment, then compile <code>CAAMmrAxisSystemManagement</code> along 
with its prerequisites, set up the run time environment, and then execute the use 
case [<a href="#References">2</a>]. To launch the use case execute the command:</p>
<p><code>mkrun -c &quot;CAAMmrAxisSystemManagement <em>Repository</em> <em>Server</em>
<em>User</em> <em>Password</em> <em>SecurityCtx PLMRepType</em> PLMExternalID V<em>ersion</em>
<em>CurrentAS&quot;</em></code></p>
<p>Where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer(as the use case modifies the PLM data)</td>
	</tr>
	<tr>
		<th>PLMRepType</th>
		<td>A string representing PLM Representation Type (e.g. VPMRepReference)</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The <code>PLM_ExternalID</code> of a PLM Reference or PLM Representation 
		Reference</td>
	</tr>
	<tr>
		<th>Version</th>
		<td>The <code>majorrevision</code> of a PLM Reference or PLM Representation 
		Reference</td>
	</tr>
	<tr>
		<th>CurrentAS</th>
		<td>The name of the axis system to set as current.</td>
	</tr>
</table>
<p>You can directly execute this use case if you know how to locate your own Representation 
Reference. If not, you can import a 3D XML file supplied in the <code>CAAMechanicalModeler.edu</code> 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\InputData\CAAMmrAxisSystemManagement.3dxml\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This 3D XML file contains the Representation Reference with the following attributes:</p>
<ul>
	<li><strong>PLM_ExternalID</strong> : CAAMmrAxisSystemManagement</li>
	<li><strong>majorrevision</strong> : ---</li>
</ul>
<p><strong>Attention</strong>: This use case saving the input Representation Reference, you 
must reimport the original component with another prefix, to re-execute and see 
the modifications. Please refer to document [<a href="#References">2</a>] for how 
to import and reimport such a 3D XML file in your PLM repository.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMmrAxisSystemManagement Code</h3>
<p>The <code>CAAMmrAxisSystemManagement</code> use case is made of one module,
<code>CAAMmrAxisSystemManagement.m</code>, found in the the <code>CAAMechanicalModeler.edu</code> 
framework and containing a single source program, CAAMmrTestManagement.cpp:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\CAAMmrAxisSystemManagement.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">2</a>] is the 
folder where the API CD-ROM is installed.</p>
<p>and two others files exported by the CAAPLMClientAdapter.edu framework:</p>
<ul>
	<li>CAAAdpCreateCloseSession.cpp - to create and close a PLM session</li>
	<li>CAAOpenPLMComponent.cpp - to open the Representation Reference</li>
</ul>
<p><code>InstallRootFolder\CAADoc\CAAPLMClientAdapter.edu\CAAAdpUtilities.m\</code></p>
<p>where <code>InstallRootFolder</code> is the folder where the API CD-ROM 
is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are eight logical steps in <code>CAAMmrAxisSystemManagement</code>:</p>
<ol>
	<li><a href="#Step1">Prolog</a></li>
	<li><a href="#Step2">Retrieving the CATIMf3DAxisSystemManager Interface Pointer</a></li>
	<li><a href="#Step3">Displaying the Count of Axis Systems</a></li>
	<li><a href="#Step4">Finding the Current Axis System</a></li>
	<li><a href="#Step5">Retrieving the Input Axis System in the Axis System List</a></li>
	<li><a href="#Step6">Setting the New Current Axis System</a></li>
	<li><a href="#Step7">Transforming the (0,0,0) Point and the (0,0,1) Vector in 
		the Current Axis System</a></li>
	<li><a href="#Step8">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Prolog</h3>
<p><code>CAAMmrAxisSystemManagement</code> begins by creating a session, and opening 
the input 3D Shape. Next it retrieves the specification container of this Part as 
a pointer to <em>CATIMmiPrtContainer</em>, <code>pIPartContainer.</code> This is the 
usual sequence for Opening PLM Component [<a href="#References">3</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving the CATIMf3DAxisSystemManager Interface Pointer</h3>
<p>The <em>CATIMf3DAxisSystemManage</em>r interface is implemented by the specification 
container, <code>piPartContainer</code>[<a href="#References">4</a>].</p>
<pre class="code">...
  <strong>CATIMf3DAxisSystemManager</strong> * pIMf3DAxisSystemManagerOnFeatCont = NULL ;
  rc = piPartContainer-&gt;<strong>QueryInterface</strong>(IID_CATIMf3DAxisSystemManager,
                                      (void **) &amp; <strong>pIMf3DAxisSystemManagerOnFeatCont</strong>);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Displaying the Count of Axis Systems</h3>
<p><code>pIMf3DAxisSystemManagerOnFeatCont</code> is the <em>CATIMf3DAxisSystemManager</em> 
interface pointer. The <code>GetAxisSystems</code> method retrieves the list of 
axis systems in the 3D Shape.</p>
<pre class="code">...
  <strong>CATLISTV</strong>(CATIMf3DAxisSystem_var) ListAxisSystem ;
  rc = pIMf3DAxisSystemManagerOnFeatCont-&gt;<strong>GetAxisSystems</strong>(ListAxisSystem);
  ...

  int nbAS = ListAxisSystem.Size();
  cout &lt;&lt;&quot;   There are &quot; &lt;&lt; nbAS &lt;&lt; &quot; axis system(s) in the representation reference&quot; &lt;&lt; endl;
  for ( int i= 1 ; i &lt;= nbAS  ; i++)
  {
     CATIMf3DAxisSystem_var spMf3DAxisSystemOnAS= ListAxisSystem[i] ;
     if ( NULL_var != spMf3DAxisSystemOnAS)
     {
        CATIAlias_var spAliasOnCurrentAS = spMf3DAxisSystemOnAS;
        if ( NULL_var != spAliasOnCurrentAS )
        {
            cout&lt;&lt;&quot;      &quot;&lt;&lt; spAliasOnCurrentAS-&gt;GetAlias().ConvertToChar() &lt;&lt; endl;
        }
     }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Finding the Current Axis System</h3>
<p>The <code>GetCurrentAxisSystem</code> method retrieves the current axis 
system. If the returned value is NULL_var, no axis system is current.</p>
<pre class="code">...
  <strong>CATIMf3DAxisSystem_var</strong> spMf3DAxisSystemOnCurrentAS ;
  rc=pIMf3DAxisSystemManagerOnFeatCont-&gt;<strong>GetCurrentAxisSystem</strong>(spMf3DAxisSystemOnCurrentAS);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving the Input Axis System in the Axis System List</h3>
<p>The ninth argument, <code>iArgv[9]</code>, of the use case is the name of an 
axis system to set as current. If this name is &quot;AbsoluteAS&quot;, no axis system 
should be current. The goal of this section is to find this axis system in the list 
of axis systems retrieved in the &quot;<a href="#Step3">Displaying
the Count of Axis Systems</a>&quot; section (<code>ListAxisSystem</code>).</p>
<pre class="code">...
  CATUnicodeString NewCurrentAxisName = iArgv[9] ;
  CATUnicodeString AbsoluteAS = &quot;AbsoluteAS&quot; ;
  CATBoolean Found = FALSE ;

  if ( (AbsoluteAS != NewCurrentAxisName) &amp;&amp; (OldCurrentAxisName != NewCurrentAxisName) )
  {
      int i = 1 ;
      while ( (FALSE == Found) &amp;&amp; ( i&lt;= nbAS ))
      {
          CATIMf3DAxisSystem_var spMf3DAxisSystem = ListAxisSystem[i];
          if ( NULL_var != spMf3DAxisSystem )
          {
             CATIAlias_var spAliasOnCurrentAS = spMf3DAxisSystem ;
             if ( NULL_var != spAliasOnCurrentAS )
             {
                if ( NewCurrentAxisName == spAliasOnCurrentAS-&gt;<strong>GetAlias</strong>() )
                {
                    Found = TRUE ;
                    spMf3DAxisSystemOnCurrentAS = spMf3DAxisSystem;
                }
             }
          }
          i++ ;
      }
      if ( FALSE == Found)
      {
         cout &lt;&lt; &quot;   The  &quot; &lt;&lt; NewCurrentAxisName &lt;&lt;&quot; has not been found&quot; &lt;&lt; endl;
         NewCurrentAxisName = OldCurrentAxisName ;
      }
  }
...</pre>
<p>If the input axis system has been found ( <code>Found</code> is equal to
<code>TRUE</code>), <code>spMf3DAxisSystemOnCurrentAS</code>, a <em>CATIMf3DAxisSystem</em> 
interface pointer declared in the &quot;<a href="#Step4">Finding 
the Current Axis System</a>&quot; section, contains the pointer on this axis system.
<code>OldCurrentAxisName</code> is the name of the axis system found in the &quot;<a href="#Step4">Finding 
the Current Axis System</a>&quot; section. If there is no current axis system, the 
name is AbsoluteAS.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Setting the Input Axis System as Current</h3>
<p>If the input axis system is &quot;AbsoluteAS &quot;, no axis system should be 
current, the <code>SetCurrentAxisSystem</code> method argument is NULL_var. But, 
if the input axis system has been found, the <code>SetCurrentAxisSystem</code> method 
argument is <code>spMf3DAxisSystemOnCurrentAS</code> the <em>CATIMf3DAxisSystem</em> 
interface pointer on the input axis system.</p>
<pre class="code">...
  if ( AbsoluteAS == NewCurrentAxisName)
  {
     rc = pIMf3DAxisSystemManagerOnFeatCont-&gt;<strong>SetCurrentAxisSystem</strong>(NULL_var);
     ...
  }else if ( TRUE == Found )
  {
     rc = pIMf3DAxisSystemManagerOnFeatCont-&gt;<strong>SetCurrentAxisSystem</strong>(spMf3DAxisSystemOnCurrentAS);
     ...
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Transforming the (0,0,0) Point and the (0,0,1) Vector in 
the Current Axis System</h3>
<pre class="code">...
  if ( AbsoluteAS != NewCurrentAxisName)
  {
     CATMathPoint PointToConvert (.0,.0,.0) ;
     CATMathPoint ConvertedPoint;
     
     rc = pIMf3DAxisSystemManagerOnFeatCont-&gt;<strong>ConvertPointCoordinates</strong>(TRUE,
                                                     PointToConvert,ConvertedPoint);
     ...
     
     CATMathVector VectorToConvert (.0,.0,1.0) ;
     CATMathVector ConvertedVector;
     rc = pIMf3DAxisSystemManagerOnFeatCont-&gt;<strong>ConvertVectorCoordinates</strong>(TRUE,
                                                     VectorToConvert,ConvertedVector);                                
...</pre>
<p>The first argument of the <code>ConvertPointCoordinates</code> and
<code>ConvertVectorCoordinates</code> methods specifies the coordinates system of 
conversion: TRUE : the current axis system , FALSE the absolute axis system.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Epilog</h3>
<p>The last actions of the use case are the following: save and close the PLM session. 
This is described in the Opening PLM Component use case [<a href="#References">3</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case explains how to use the <em>CATIMf3DAxisSystemManager</em> interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAMmrUcAxisSystemCreation.htm">Creating Axis Systems</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpen.htm">
		Querying, Expanding and Opening PLM Object</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAMmrTa3DShape.htm">From the PLM Representation to the 3D 
		Shape</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Apr 2003]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Apr 2010]</td>
		<td>Document updated for V6 novelties</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
