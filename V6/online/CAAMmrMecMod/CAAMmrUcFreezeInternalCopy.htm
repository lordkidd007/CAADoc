<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Freeze or Unfreeze Internal Copy</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Freeze or Unfreeze Internal Copy</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The Use Case is an Interactive State Command to switch the Freeze state 
		of an <strong>Internal Copy</strong> with Link [<a href="#References">1</a>]. 
		An Internal Copy is a feature copied &quot;As result with Link&quot; within 
		a 3D Shape (Part). It can be frozen while a feature copied across 3D Shapes 
		(<strong>External Reference</strong>) cannot be frozen.</p>
		<p>The default state of an Internal Copy is Unfrozen. This implies any modification 
		in the geometry of the source feature, is updated in the copied feature, 
		as well, thanks to an Update mechanism which automatically handles this 
		synchronization. When an Internal Copy is frozen, its link to its source 
		feature is deactivated. So the geometry of the copied feature is not recomputed 
		each time its source is modified.</p>
		<p>The Use Case accomplishes this by deploying a <strong>State Command</strong> 
		[<a href="#References">2</a>] located in the &quot;<strong>CAA MechMod 
		UC</strong>&quot; 
		section of the action bar, an add-in of 3D Shape apps [<a href="#References">3</a>] 
		within CATIA.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMmrFreezeInternalCopy Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAMmrFreezeInternalCopy Do</a></li>
					<li><a href="#How">How to Launch CAAMmrFreezeInternalCopy</a></li>
					<li><a href="#Where">Where to Find the CAAMmrFreezeInternalCopy 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The Use Case illustrates the capabilities of the <em><code>CATIMmiResultFreeze</code></em> 
APIs, primarily to:</p>
<ul>
	<li>An Internal Copy, selected interactively in CATIA with the help of a Selection 
		Agent.</li>
	<li>retrieve the freeze status of this feature.</li>
	<li>If Internal Copy is Unfrozen (default creation behavior), the call to
		<em><code>CATIMmiResultFreeze</code></em>::<code>Freeze</code> to freeze 
		it.</li>
	<li>If frozen, the call to <em><code>CATIMmiResultFreeze</code></em>::<code>Unfreeze</code>, 
		to unfreeze it.</li>
	<li>Finally, a <code>DataCommonProtocolServices::Update</code> to bring the 
		geometry/position of the copied feature after Unfreeze, in sync with the 
		source feature.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMmrFreezeInternalCopy Use Case</h2>
<p><code>CAAMmrFreezeInternalCopy</code> is a use case of the <code>CAAMechanicalModeler</code>.<code>edu</code> 
framework that mainly illustrates <code>CATMecModUseItf</code> framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMmrFreezeInternalCopy Do</h3>
<p>This use case is an Interactive Exclusive State Command which switches the Freeze 
status (Freeze/Unfreeze) of a feature copied within a 3D Shape, with Link (an Internal 
Copy). To begin with the Use Case integrates a <strong>Freeze/Unfreeze</strong> 
State Command, viewed as
<img alt="" height="25" src="images/CAAMmrFreezeInternalCopy_CommandIcon.gif" width="30"/>, 
in the &quot;<strong>CAA MechMod Uc&quot; </strong>section of the action bar, a<strong>n 
add-in</strong> of&nbsp; 3D Part apps, as depicted below. [<a href="#Fig1">Fig. 1</a>].</p>
<table>
	<caption><a name="Fig1"></a>Fig.1 CAA MechMod section</caption>
	<tr>
		<td style="width: 205px">
		<img alt="" src="images/CAAMmrSpecTreeToolbar.jpg" width="372" height="70"/></td>
	</tr>
</table>
<p>We illustrate the execution of this Use Case, on an input model, as the one seen 
below [<a href="#Fig2">Fig. 2</a>]. A Rep Ref <code>CAAMmrFreezeInternalCopy_Rep</code> 
is associated with a <code>3DShape</code> consisting of <code>Point.1</code>, and 
its copy &quot;<strong>As Result with Link</strong>&quot;, <code>Point.2</code>. 
Both points occur at the <strong>Origin</strong>, as [<a href="#Fig2">Fig. 2</a>] 
depicts. The icon
<img alt="" src="images/CAAMmrFreezeInternalCopy_FeatureIcon.gif" width="27" height="25"/> 
that appears alongside <code><strong>Point.2</strong></code> in the tree implies 
that a link exists to the source feature <code><strong>Point.1</strong></code>.</p>
<table>
	<caption><a name="Fig2"></a>Fig. 2 Input Model</caption>
	<tr>
		<td>
		<img alt="" src="images/CAAMmrFreezeInternalCopy_Fig2.jpg" width="525" height="335"/>
		</td>
	</tr>
</table>
<p>On activating the State Command, the first state prompts end-user to select an 
Internal Copy with Link in the model hierarchy. The selection is restricted to only 
the entities implementing the <code>CATIMmiResultFreeze</code>. On selection, application 
continues to prompt the user for the same selection, owing to an incoming transition 
to the same state.</p>
<p>To begin with, <code><span>Point.2</span></code> is in an Unfrozen state, a default 
state wherein the position/geometry of the copied feature (<code><span>Point.2</span></code>) 
is in sync with the original feature (<code><span>Point.1</span></code>), since 
the link between the two is active.</p>
<p>As the [<a href="#Fig3">Fig. 3</a>] depicts, <code><span>Point.1</span></code> 
was relocated at a distance of <strong>100mm</strong> along the <strong>X-axis</strong>. 
Position of <code><span>Point.2</span></code> is instantly updated to this new position. 
Both points are coincident, at the new location, as [<a href="#Fig3">Fig. 3</a>] 
indicates.</p>
<table>
	<caption><a name="Fig3"></a>Fig.3 Behavior of Point.2 (Internal Copy) while 
	in Unfrozen (Default) State</caption>
	<tr>
		<td>
		<img alt="" src="images/CAAMmrFreezeInternalCopy_Fig3.jpg" width="543" height="379"/></td>
	</tr>
</table>
<p>At this stage, we launch the State Command
<img alt="" height="25" src="images/CAAMmrFreezeInternalCopy_CommandIcon.gif" width="30"/>. 
It prompts the user to select an &quot;Internal Copy&quot; in the tree, to freeze its state. 
As soon as <code>Point.2</code> is selected, the icon
<img alt="" height="25" src="images/CAAMmrFreezeInternalCopy_CommandIcon.gif" width="30"/> 
appears alongside it, in the model hierarchy [<a href="#Fig4">Fig. 4</a>]. Now 
if the source feature <code>Point.1</code> is relocated, say at a distance of
<strong>150mm</strong> along the <strong>X-axis</strong>, <code>Point.2</code> remains 
frozen at its original location. This is owing to the fact that the link between 
the two has been temporarily deactivated.</p>
<table>
	<caption><a name="Fig4"></a>Fig.4 Behavior of Point.2 (Internal Copy) while 
	in Frozen State</caption>
	<tr>
		<td>
		<img alt="" src="images/CAAMmrFreezeInternalCopy_Fig4.jpg" width="520" height="353"/></td>
	</tr>
</table>
<p>The last step is to unfreeze <code><span>Point.2</span></code>, yet again through 
the state command
<img alt="" height="25" src="images/CAAMmrFreezeInternalCopy_CommandIcon.gif" width="30"/>. 
The icon
<img alt="" src="images/CAAMmrFreezeInternalCopy_FeatureIcon.gif" width="27" height="25"/> 
reappears alongside <code>Point.2</code>, in the model hierarchy, as soon as it 
switches to an unfrozen (default) state. The link between the copied and the source 
feature is restored, thus enabling the update mechanism to synchorize the geometry/positions 
of the source and copied geometries.</p>
<p>[<a href="#Fig5">Fig.5</a>] depicts thus update. You'll find <code><span>Point.2</span></code> 
also gets relocated at <strong>150mm</strong> from <strong>Origin</strong>, thus 
coinciding with <code><span>Point.1</span></code>.</p>
<table>
	<caption><a name="Fig5"></a>Fig. 5 Position of Point.2 updated on being Unfrozen</caption>
	<tr>
		<td>
		<img alt="" src="images/CAAMmrFreezeInternalCopy_Fig5.jpg" width="546" height="381"/></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a href="#Where" name="How"></a>How to Launch CAAMmrFreezeInternalCopy</h3>
<p>To launch <code>CAAMmrFreezeInternalCopy</code>, you will need to set up the 
build time environment, then compile <code>CAAMmrFreezeInternalCopy</code> along 
with its prerequisites, set up the run time environment, and then execute the use 
case [<a href="#References">4</a>].</p>
<p>Launch CATIA, when the application is ready:</p>
<ul>
	<li>Open or Create a 3D Shape as the one depicted above.</li>
	<li>Activate the "CAA MechMod UC" section in the action bar </li>
</ul>
<p>You may run this use case on an input model retrieved by importing the <a>
<code>CAAMmrFreezeInternalCopy_Rep.3dxml</code></a> file from the <a><code>CAAMechanicalModeler.edu</code></a> 
fwk, at the location stated below</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\InputData</code></p>
<p>This 3D XML file contains the <strong>Rep Reference</strong> 
with the following attributes:</p>
<ul>
	<li><a><code>PLM_ExternalID</code></a>: <code>CAAMmrFreezeInternalCopy_Rep</code></li>
	<li><a><code>Version</code></a>: ---</li>
</ul>
<p>While importing a 3D XML file to CATIA provide the prefix which will be your
<strong>Root_prefix</strong>. The Use Case is now ready for further execution further 
explained in the [<a href="#What">What Does CAAMmrFreezeInternalCopy Do</a>] section.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Addin"></a>Add-in Access</h3>
<p>The <strong>&quot;CAA MechMod UC&quot;</strong> add-in to 3DShape apps within 
CATIA, is available thanks to a data extension 
of the <code>CAAMmrPartWksAddin</code> component. This necessitates the following 
entries uncommented in the <code>CAAMechanicalModeler.edu.dico</code> file.</p>
<pre class="code">...
#CAAMmrPartWksAddin CATIWorkbenchAddin libCAAMmrPartWksAddin
#CAAMmrPartWksAddin CATIPrtWksAddin libCAAMmrPartWksAddin
...</pre>
<p>The <code><strong>dico</strong></code> file entries imply that the add-in implements
<em>CATIPrsWksAddin</em>. It also implements <em>CATIWorkbenchAddin</em>, owing 
to the fact that it is a data extension of <code>CAAMmrPartWksAddin</code>.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMmrFreezeInternalCopy Code</h3>
<p>The <code>CAAMmrFreezeInternalCopy</code> use case is made of a Class defined 
in the <code>CAAMmrFreezeInternalCopy.m</code> module of the <code>CAAMechanicalModeler.edu</code> 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\CAAMmrFreezeInternalCopy.m\</code></p>
<ul>
	<li><code>CAAMmrPartWksFreezeUnfreezeCmd.cpp</code> has the State Command implementation.</li>
</ul>
<p>The use case pre-requires an Add-in module too:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\</code><code>CAAMmrPartWksAddin.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">4</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The steps in the <code>CAAMmrFreezeInternalCopy</code> use case are</p>
<ol>
	<li><a href="#Step1">Building the State Command and Integrating it within CATIA</a></li>
	<li><a href="#Step2">Implementing the Callback to an Incoming Transition Associated 
		with this State Command</a>
		<ul>
			<li><a href="#Step21">Retrieving the Chosen Entity from the Selection 
				Agent</a></li>
			<li><a href="#Step22">Seeking the Freeze Status of the Copied Feature</a></li>
		</ul>
	</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Building the State Command and Integrating it within CATIA</h3>
<p>The first step implements an exclusive State Command [<a href="#References">2</a>], 
the UML diagram for which is seen below [<a href="#Fig6">Fig. 6</a>]. This implementation 
occurs in the State Command <code>BuildGraph</code> routine.</p>
<p>This command is integrated in a 3D Shape add-in within CATIA. The steps involved in these implementations are detailed in the <em>Commands</em> 
and <em>Frame</em> sections of the <em>User Experience</em> domain.</p>
<table>
	<caption><a name="Fig6"></a>Fig. 6 UML Representation of the State Command</caption>
	<tr>
		<td>
		<img alt="" height="184" src="images/CAAMmrFreezeInternalCopy_Fig6.gif" width="73"/></td>
	</tr>
</table>
<p>As the UML diagram [<a href="#Fig6">Fig. 6</a>] indicates, the State Command 
has a state prompting an end user to select an Internal Copy with Link in the model 
hierarchy. The selection is restricted to only those entities, which implement
<code><em>CATIMmiResultFreeze</em></code> as the code below depicts.</p>
<pre class="code"><strong>CATPathElementAgent</strong>* _daObjectToSelect;
...
<strong>_daObjectToSelect</strong> = new CATPathElementAgent(&quot;SelCopiedFeature&quot;);
_daObjectToSelect-&gt;<strong>AddElementType</strong>(<strong>IID_CATIMmiResultFreeze</strong>);
...</pre>
<p>This state has an incoming transition to itself associated with it, as a result 
of which, it remains eternally prompting an end-user to select an entity whose freeze 
status is to be switched. An action associated with this incoming transition namely.
<code>CAAMmrPartWksFreezeUnfreezeCmd</code>::<code>FreezeOrUnfreeze</code> switches 
the freeze status of the selected feature. We proceed to now detail this implementation 
of this callback routine.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Implementing the Callback to an Incoming Transition Associated 
with the State Command</h3>
<p>Here we detail the implementation of the Callback associated with the State Command. 
This callback is triggered in response to the user selecting an &quot;Internal Copy&quot; in 
the tree. It retrieves the selected feature, seeks its freeze 
status and switches its state (freeze/unfreeze).</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step21"></a>Retrieving the Chosen Entity from the Selection Agent</h4>
<p>To begin with, it retrieves the chosen copied feature from the Selection Agent.</p>
<pre class="code">// Within the State Command Class
<strong>CATPathElementAgent</strong>* _daObjectToSelect;
...
void <strong>CAAMmrPartWksFreezeUnfreezeCmd</strong>::<strong>FreezeOrUnfreeze</strong>(void* iData)
{
  <strong>CATPathElement</strong>* pathModel = _daObjectToSelect-&gt;<strong>GetValue</strong>();
  <strong>CATBaseUnknown</strong>* pSelectedObj = NULL;

  <strong>pSelectedObj</strong> = (<strong>*pathModel</strong>)[<strong>pathModel-&gt;GetSize()-1</strong>];
...</pre>
<p>On selecting an entity within CATIA, the Selection Agent, a <code>CATPathElementAgent</code> 
object, <code>_daObjectToSelect</code> is valuated. The call to <code>GetValue</code> 
of the Selection Agent returns the chosen entity, as a <code>CATPathElement</code> 
object, *<code>pathModel</code>.</p>
<p>This object consists of the entity selected, with all its ancestors up the product 
model hierarchy until Root. We retrieve the first element in this list, which is 
just the copied feature, for further processing.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h4><a name="Step22"></a>Seeking the Freeze Status of the Copied Feature</h4>
<p>We next seek the freeze status of the selected feature. If Unfrozen it is switched 
to the frozen state and vice versa.</p>
<p>On being Unfrozen, since the link is restored, an update is explicitly launched, 
to synchronize the geometry of the copied feature with that of its source.</p>
<pre class="code">...
  <strong>CATIMmiResultFreeze</strong>* pIMmiResultFreezeOnSelFeat = NULL;
  HRESULT hr = <strong>pSelectedObj</strong>-&gt;<strong>QueryInterface</strong>(IID_CATIMmiResultFreeze,
                                            (void**)&amp;<strong>pIMmiResultFreezeOnSelFeat</strong>);

  <strong>CATBoolean</strong> FreezeStatus = pIMmiResultFreezeOnSelFeat-&gt;<strong>IsFrozen</strong>();
  if (<strong>TRUE == FreezeStatus</strong>)
  {
    hr = pIMmiResultFreezeOnSelFeat-&gt;<strong>Unfreeze</strong>();

    <strong>CATIUseEntity</strong> *pUseEntityOnSelFeat= NULL;
    hr = pIMmiResultFreezeOnSelFeat-&gt;QueryInterface(IID_CATIUseEntity , (void**)&amp; pUseEntityOnSelFeat);
    if ( SUCCEEDED(hr) )
    {
      hr = <strong>DataCommonProtocolServices::Update</strong>(pUseEntityOnSelFeat);
      pUseEntityOnSelFeat-Release(); pUseEntityOnSelFeat = NULL ;
    }  	
  } 
  else
  {
    hr = pIMmiResultFreezeOnSelFeat-&gt;<strong>Freeze</strong>();
...</pre>
<p>The <code>CATIMmiResultFreeze</code>::<code>IsFrozen</code> call returns a
<code>CATBoolean</code>, <code>FreezeStatus</code> (<code>TRUE</code>, if frozen, 
else <code>FALSE</code>).</p>
<p>If Unfrozen, the <code>CATIMmiResultFreeze</code>::<code>Freeze</code> call freezes 
the selected feature. The call is valid only for an Internal Copy, meaning features 
copied across 3D Shapes (<strong>External Reference</strong>) cannot be frozen. 
On freeze, the Internal Copy is no longer linked with its source feature, and hence 
its geometry is no longer recomputed during an Update operation.</p>
<p>The <code>CATIMmiResultFreeze</code>::<code>Unfreeze</code> call unfreezes the 
selected feature. The link with its source feature is now restored and hence an 
Update operation synchronizes the geometry of the copied feature with its source. 
This update is done by calling the <code>DataCommonProtocolServices::Update</code> 
method on the selected feature.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The Use Case retrieves the freeze status of an Internal Copy with Link and switches 
its state (Freeze/Unfreeze) [<a href="#References">1</a>]. An <strong>Internal Copy</strong> 
is a feature copied within a 3D Shape. It can be frozen while a feature copied across 
3D Shapes (<strong>External Reference</strong>) cannot be frozen.</p>
<p>The Use Case is executed through an Interactive <strong>State Command</strong> 
[<a href="#References">2</a>], integrated in the &quot;<strong>CAA MechMod UC&quot; </strong>
section of the action bar; 
an add-in of 3D Shapes apps within CATIA&nbsp; [<a href="#References">3</a>]. On activating this state command, it prompts an end-user 
to select a copied feature within the product hierarchy. The Selection Agent associated 
with the State Command restricts the selection to only those entities which implement
<code>CATIMmiResultFreeze</code>. An Internal Copy is one of them.</p>
<p>The default state of an Internal Copy is Unfrozen. In this state, the copied 
geometry is synchronized with its source. On freezing it, the link between the source 
and its copy, is deactivated, implying that the geometry of the copied feature is 
not recomputed, in response to any modification in the source geometry. On unfreezing, 
this link is restored and the copied feature is yet again in synchronized with its 
source.</p>
<p>Its significant to note that immediately after an Unfreeze, an explicit call 
to the <code>DataCommonProtocolServices::Update</code> is essential to achieve synchronization. 
However, any further modifications in the source geometry are automatically reflected 
in the copied feature, since it is implicitly handled by the Update mechanism.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAMmrTaFreeze.htm">Internal Copy With Link</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAADegDialogEngine/CAADegTaGettingStarted.htm">
		Getting Started with State Dialog Commands</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAAAfrApplicationFrame/CAAAfrUcSampleAddin.htm">
		Creating an Add-in</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [Apr 2007]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: 2 [Apr 2010]</td>
		<td>Document updated for V6 novelties</td>
	</tr>
	<tr>
		<td>Version: 3 [Mai 2014]</td>
		<td>Document updated for 3DEXPERIENCE platform migration</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
