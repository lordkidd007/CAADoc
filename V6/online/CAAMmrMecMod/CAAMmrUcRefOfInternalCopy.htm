<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Retrieving Reference Feature From a Copy as Link Inside Same 3D Shape
</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving Reference Feature From a Copy as Link Inside 
		Same 3D Shape</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <strong>CAAMmrRefOfInternalCopy</strong> use 
		case. This use case describes how to retrieve a feature that has been copied, 
		from the copied feature, when the copy (with link) operation has been done 
		inside the same 3D Shape. You can refer to the technical article &quot;Internal 
		Copy With Link&quot; [<a href="#References">1</a>].</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMmrRefOfInternalCopy Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAMmrRefOfInternalCopy Do</a></li>
					<li><a href="#How">How to Launch CAAMmrRefOfInternalCopy</a></li>
					<li><a href="#Where">Where to Find the CAAMmrRefOfInternalCopy 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This article is mainly an illustration of the <em><strong>CATIMmiInternalCopyWithLink</strong>
</em>interface. Thanks to this interface, only implemented by a mechanical feature 
which is a copy with link of another mechanical feature inside the same 3D Shape, 
you can retrieve the original feature.</p>
<p>You will also learn that while the copied feature is linked to its original feature, 
you can retrieve the original feature. But if the copied feature is isolated by 
becoming a datum [<a href="#References">2</a>], you cannot use this interface anymore.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMmrRefOfInternalCopy Use Case</h2>
<p><code>CAAMmrRefOfInternalCopy</code> is a use case of the CAAMechanicalModeler.edu 
framework that illustrates CATMecModUseItf and CATMecModLiveUseItf frameworks capabilities.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMmrRefOfInternalCopy Do</h3>
<p>CAAMmrRefOfInternalCopy is a main program which:</p>
<ul>
	<li>Creates a 3D Shape.</li>
	<li>Creates 3 GSM Points.</li>
	<li>Uses <em><strong>CATIMmiUseCreateImport</strong></em> interface to do the 
		three copies with link.</li>
	<li>Retrieves the original feature from each copy.</li>
	<li>Freezes one copied feature, using <em><strong>CATIMmiResultFreeze</strong>,</em> 
		and retrieves the original feature from the frozen feature.</li>
	<li>Isolates one copied feature, using <em><strong>CATIIsolate</strong>,</em> 
		and fails to retrieve the original feature from the frozen feature.</li>
	<li>Saves the 3D Shape.</li>
</ul>
<p>Here is the picture of the 3D Shape after the save:</p>
<table>
	<caption><a name="Fig1"></a>Fig.1 3D Shape Created</caption>
	<tr>
		<td>
		<img alt="3D Shape Created" height="419" src="images/CAAMmrRefOfInternalCopy.png" width="404"/></td>
	</tr>
</table>
<ul>
	<li><code>Point.1</code>, <code>Point.2</code> and <code>Point.3</code> are 
		three points created thanks to the <em><strong>CATIGSM</strong></em><em><strong>Use</strong></em><em><strong>Factory
		</strong></em>interface. Since the three points are created from three floats, 
		they are 3 datums. You recognize the &quot;datum&quot; icon.</li>
	<li><code>Point.4</code> is the copy of <code>Point.1 (</code>you recognize 
		the &quot;copy with link&quot; icon).</li>
	<li><code>Point.5</code> is the copy of <code>Point.2</code> + freeze
		(you recognize the &quot;frozen&quot; icon).</li>
	<li><code>Point.5</code> is the copy of <code>Point.3</code> + isolation (you 
		recognize the &quot;datum&quot; icon).</li>
</ul>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAMmrRefOfInternalCopy</h3>
<p>To launch CAAMmrRefOfInternalCopy, you will need to set up the build time environment, 
then compile CAAMmrRefOfInternalCopy along with its prerequisites, set up the run 
time environment, and then execute the use case [<a href="#References">3</a>]. To 
launch the use case, execute the following command:</p>
<pre><code>mkrun -c &quot;<em>CAAMmrRefOfInternalCopy Repository Server User Password SecurityCtx &quot;</em></code></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer (since the use case modifies the PLM Data)</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMmrRefOfInternalCopy Code</h3>
<p>The CAAMmrRefOfInternalCopy use case is made of one file located in the CAAMmrRefOfInternalCopy.m 
module of the CAAMechanicalModeler.edu framework: <code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\CAAMmrRefOfInternalCopy.m\</code></p>
<p>and one other file exported by the CAAPLMClientAdapter.edu framework:</p>
<p>CAAAdpCreateCloseSession.cpp - to create and close a PLM session: InstallRootFolder\CAADoc\CAAPLMClientAdapter.edu\CAAAdpUtilities.m\</p>
<p>where <code>InstallRootFolder</code> [<a href="#References">3</a>] is the directory 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are six logical steps in CAAMmrRefOfInternalCopy:</p>
<ol>
	<li><a href="#Step1">Prolog</a></li>
	<li><a href="#Step2">Copying Created Points</a></li>
	<li><a href="#Step3">Retrieving the Original Feature</a></li>
	<li><a href="#Step4">Freezing 
		one Point, and Retrieving the Original Feature</a></li>
	<li><a href="#Step5">Isolating 
		one Point, and Retrieving the Original Feature</a></li>
	<li><a href="#Step6">Epilog</a></li>
</ol>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Prolog</h3>
<p>The first part consists in creating a PLM Representation Reference. This is fully 
described in the referenced use case &quot;Creating a 3D Shape as new Representation&quot; 
[<a href="#References">4</a>].</p>
<p>We then create a Geometrical Set (GSMToolForPoint on [<a href="#Fig1">Fig.1</a>]) 
using the <em><strong>CATIMmiUseSetFactory</strong></em> interface, and then three 
GSM Points, <code>Point.1</code>, <code>Point.2</code> and <code>Point.3</code> 
using the <em><strong>CATIGSMUseFactory</strong></em> interface.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Copying Created Points</h3>
<p>To copy a mechanical feature you should use the <em><strong>CATIMmiUseCreateImport</strong></em> 
interface. This interface pointer is retrieved by the <code>CreateMmiUseCreateImport</code> 
method of the <em><strong>CATMmiUseServicesFactory</strong></em> services class.</p>
<pre class="code">...
<strong>CATIMmiUseCreateImport</strong>* pInterPartCopy = NULL; 
rc = <strong>CATMmiUseServicesFactory::CreateMmiUseCreateImport</strong>(pInterPartCopy); 
    
// Sets the option of copy 
CATBoolean CopyWithLink = TRUE;
pInterPartCopy-&gt;<strong>SetLinkMode</strong>(CopyWithLink); 

CATBaseUnknown_var SourceToCopy = spPoint1;
CATBaseUnknown_var Target       = spNewTool ;
pInterPartCopy-&gt;<strong>SetObject</strong>(SourceToCopy);
pInterPartCopy-&gt;<strong>SetTarget</strong>(Target); 
                                                                                                    
CATIMmiMechanicalFeature_var ResultPoint1 ;
rc = pInterPartCopy-&gt;<strong>Run</strong>(ResultPoint1);
  
pInterPartCopy-&gt;<strong>Reset</strong>();</pre>
<pre class="code">...</pre>
<p><code>spPoint1</code> is a smart pointer on the first created feature.
<code>ResultPoint1</code> is the result of the copy. To do the other two copies, do not 
forget to reset, between each copy, the <em>CATIMmiUseCreateImport</em> interface 
pointer, using the <code>Reset</code> method.</p>
<p>You have noticed that it is a copy with link: the argument of <code>SetLinkMode</code> 
is TRUE.</p>
<p>The source is the point to duplicate (<code>spPoint1</code> ), and the target 
is the same geometrical set which contains the original feature, <code>spNewTool</code>, 
in other words GSMToolForPoint feature on [<a href="#Fig1">Fig.1</a>])</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Retrieving the Original Feature</h3>
<pre class="code">...
<strong>CATIMmiInternalCopyWithLink_var</strong> spIntCopyWithLink0nResultPoint1 = ResultPoint1;
CATIAlias * pAliasOnReference = NULL ;
spIntCopyWithLink0nResultPoint1-&gt;<strong>GetSelectedElement</strong>(IID_CATIAlias,(void**)&amp;pAliasOnReference);
...</pre>
<p><code>ResultPoint1 is</code> the result of the copy. For a point, a line, a plane 
and a curve it is the result of the <code>Run</code> method of <em>the CATIMmiUseCreateImport</em> 
interface, but not for a PartBody or a geometrical set.</p>
<p><code>GetSelectedElement</code> method of <em>CATIMmiInternalCopyWithLink</em> 
retrieves the feature that has been copied. Here <code>point.1</code> is the copied 
feature for <code>ResultPoint1</code>.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Freezing 
one Point, and Retrieving the Original Feature</h3>
<p>For more details on freezing a mechanical feature, refer to the technical use 
case [<a href="#References">1</a>].</p>
<pre class="code">...
<strong>CATIMmiInternalCopyWithLink</strong>_var spIntCopyWithLink0nResultPoint2 = ResultPoint2;		
<strong>CATIMmiResultFreeze</strong>_var spResultFreezeOnResultPoint2 = ResultPoint2;
rc = spResultFreezeOnResultPoint2-&gt;<strong>Freeze</strong>();
rc = spIntCopyWithLink0nResultPoint3-&gt;<strong>GetSelectedElement</strong>(IID_CATIAlias,(void**)&amp;pAliasOnReference);
...</pre>
<p>After the freeze operation, <code>GetSelectedElement</code> method of <em>CATIMmiInternalCopyWithLink</em> 
continues to return the copied feature.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Isolating 
one Point, and Retrieving the Original Feature</h3>
<pre class="code">...
<strong>CATIMmiInternalCopyWithLink</strong>_var spIntCopyWithLink0nResultPoint3 = <strong>ResultPoint3</strong>;		
<strong>CATIIsolate</strong>_var spIsolateOnResultPoint3 = ResultPoint3;
rc = spIsolateOnResultPoint3-&gt;<strong>Isolate</strong>();
rc = spIntCopyWithLink0nResultPoint3-&gt;<strong>GetSelectedElement</strong>(IID_CATIAlias,(void**)&amp;pAliasOnReference);
...
<strong>CATIMmiInternalCopyWithLink</strong>_var spIntCopyWithLink0nResultPoint1 = <strong>ResultPoint3</strong>;
</pre>
<p>First you retrieve a <em>CATIMmiInternalCopyWithLink</em> interface pointer on
<code>ResultPoint3</code>, then you isolate this feature. The result returned by
<code>GetSelectedElement</code> will be E_FAIL. If then, you retrieve a new<em> 
CATIMmiInternalCopyWithLink</em> interface pointer on the same feature, <code>ResultPoint3,
</code>the QueryInterface will fail: <code>spIntCopyWithLink0nResultPoint1</code> 
will be NULL_var at the last line of this part of code. It is due to the fact that 
now <code>ResultPoint3</code> is a datum. The Isolate methods has broken the link 
between the original and the copied feature.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Epilog</h3>
<p>The last step of the use case consists in saving and closing the session.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>You have learnt how to use <em><strong>CATIMmiInternalCopyWithLink</strong></em> 
interface.</p>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAMmrTaFreeze.htm">Internal Copy With Link</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAMmrTaContentsSpecCont2.htm">The Geometrical Features</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAMmrUcCreateExplicitPart.htm">Creating a 3D Shape as New 
		Representation</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Nov 2007]</td>
		<td>Document created</td>
	</tr>
</table>
<table>
	<tr>
		<td>Version: <strong>2</strong> [Apr 2010]</td>
		<td>Document updated for V6 novelties</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
