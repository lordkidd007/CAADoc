<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Retrieving Selecting Object in Copied Feature</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving Selecting Object in Copied Feature</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the <strong>CAAMmrBRepScanServices</strong> use 
		case. This use case shows how to retrieve Selecting Objects in copied geometry.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAMmrBRepScanServices Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAMmrBRepScanServices Do</a></li>
					<li><a href="#How">How to Launch CAAMmrBRepScanServices</a></li>
					<li><a href="#Where">Where to Find the CAAMmrBRepScanServices 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how to retrieve BRep Access objects, also 
called Selecting Objects in copied geometry.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAMmrBRepScanServices Use Case</h2>
<p><code>CAAMmrBRepScanServices</code> is a use case of the <code>CAAMechanicalModeler.edu</code> 
framework that mainly illustrates CATMecModUseItf and CATMecModLiveUseItf frameworks 
capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAMmrBRepScanServices Do</h3>
<p>CAAMmrBRepScanServices begins by opening the following Product Model (<a href="#note">*</a>)</p>
<table>
	<caption><a name="Fig1"></a>Fig.1 The Opened Product Model</caption>
	<tr>
		<td>
		<img alt="The Opened Product Model" height="357" src="images/CAAMmrBRepScanServices_inputModel.png" width="432"/>
		</td>
	</tr>
</table>
<p>The Product, <code>CAAMmrBRepScanServicesRoot</code>, aggregates 
two instances of products : <code>CAAMmrBRepScanServices_P1</code> and <code>CAAMmrBRepScanServices_P2</code>. 
In turn, these two products aggregate an instance of PLM Representation Reference.</p>
<ul>
	<li><code>CAAMmrBRepScanServices_P1</code> is a PLM Rep Ref 
		with a 3DShape whose <code>PartBody</code> is empty.</li>
	<li><code>CAAMmrBRepScanServices_P2</code> is a PLM Rep Ref 
		with a 3DShape whose <code>PartBody</code> forms the colored Part.</li>
</ul>
<p>Then, the use case copies the <code>PartBody</code> of <code>CAAMmrBRepScanServices_P2</code> 
inside <code>CAAMmrBRepScanServices_P1</code> with the following options:</p>
<ul>
	<li>Copy with link (It means that in case of original 
		feature modification, the copied result can be updated).</li>
	<li>Outside the Product context (copy 3D Shape to 3D Shape).</li>
</ul>
<p>The result will be as follow:</p>
<table>
	<caption><a name="Fig2"></a>Fig.2 Model After the Copy</caption>
	<tr>
		<td>
		<img alt="Model After the Copy" height="399" src="images/CAAMmrBRepScanServices_OutputModel.png" width="474"/></td>
	</tr>
</table>
<p>On this picture, simulated interactively, we have moved the copied
<code>PartBody</code> (inside <code>CAAMmrBRepScanServices_P1</code>) to distinguish 
it from the original <code>PartBody</code> (inside <code>CAAMmrBRepScanServices_P2</code>).</p>
<p>Then, we are looking for the selecting objects associated with the
<code>EdgeFillet.1</code>. This picture illustrates these objects:</p>
<table>
	<caption><a name="Fig3"></a>Fig.3 Selecting Object</caption>
	<tr>
		<td>
		<img alt="Selecting Object" height="358" src="images/CAAMmrBRepScanServices_SelEdges.png" width="445"/></td>
	</tr>
</table>
<p>Interactively, if you select <code>EdgeFillet.1</code>, two faces 
are highlighted. These two faces are selecting objects.</p>
<p>Finally, the use case retrieves these two faces in the copied features. 
These two faces are selecting objects too.</p>
<table>
	<caption><a name="Fig4"></a>Fig.4 Selecting Object</caption>
	<tr>
		<td>
		<img alt="Selecting Object" height="349" src="images/CAAMmrBRepScanServices_OutputModelAndSel.png" width="414"/></td>
	</tr>
</table>
<p>Inside the white boxes you have the initial Selecting faces, and 
in the dotted white boxes you have the same one in the result of the copy.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAMmrBRepScanServices</h3>
<p>To launch <code>CAAMmrBRepScanServices</code>, you will need to set up the build 
time environment, then compile <code>CAAMmrBRepScanServices</code> along with its 
prerequisites, set up the run time environment, and then execute the use case [<a href="#References">1</a>].</p>
<p>To launch the use case execute the command:</p>
<p><code>mkrun -c &quot;CAAMmrBRepScanServices <em>Repository Server User Password 
SecurityCtx PLM_Type PLM_ExternalID Version</em>&quot;</code></p>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer(as the use case modifies the PLM data)</td>
	</tr>
	<tr>
		<th>PLM_Type</th>
		<td>A string representing PLM Product Type (e.g. VPMReference)</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The <code>PLM_ExternalID</code> of a PLM Reference or PLM Representation 
		Reference to be opened (<a href="#note">*</a>)</td>
	</tr>
	<tr>
		<th>Version</th>
		<td>The <code>majorrevision</code> of a PLM Reference or PLM Representation 
		Referenceto be opened (<a href="#note">*</a>)</td>
	</tr>
</table>
<p><a name="note"></a>(*) The input model is retrieved by importing the
<code>CAAMmrBRepScanServices</code><a><code>.3dxml</code></a> file from the
<code>CAAMechanicalModeler</code><a><code>.edu</code></a> framework.</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\InputData\CAAMmrBRepScanServices.3dxml</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] 
is the folder where the API CD-ROM is installed.</p>
<p>The 3D XML file contains a Product Reference [<a href="#Fig1">Fig.1</a>] 
with the following attributes:</p>
<ul>
	<li><a><code>PLM_ExternalID</code></a>: <code>CAAMmrBRepScanServicesRoot</code></li>
	<li><a><code>majorrevision</code></a>: ---</li>
</ul>
<p>Please refer to document [<a href="#References">1</a>] for how to import and 
reimport such a 3D XML file in your PLM repository.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAMmrBRepScanServices Code</h3>
<p>The CAAMmrBRepScanServices use case is made of one file, CAAMmrBRepScanServicesMain.cpp, 
located in the CAAMmrBRepScanServices.m module of the CAAMechanicalModeler.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAMechanicalModeler.edu\CAAMmrBRepScanServices.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the 
folder where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are eight logical steps in <code>CAAMmrBRepScanServices</code>:</p>
<ul>
	<li><a href="#Step1">Opening the Input Root PLM Product Reference</a></li>
	<li><a href="#Step2">Retrieving Useful Objects for the Copy</a></li>
	<li><a href="#Step3">Setting the Input Environment as the Current One</a></li>
	<li><a href="#Step4">Copying PartBody</a></li>
	<li><a href="#Step5">Getting EdgeFillet.1 Faces inside PartBody Result</a></li>
	<li><a href="#Step6">Getting the BRepAccess within Copied PartBody</a></li>
	<li><a href="#Step7">Getting the BRepAccess within initial Part</a></li>
	<li><a href="#Step8">Checking Step</a></li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the Input Root PLM Product Reference</h3>
<pre class="code">...
<strong>CATOmbLifeCycleRootsBag</strong> Bag; 				   
rc = <strong>::CAAOpenPLMComponent</strong>(PLM_Type,
                           PLM_ExternalIDValue,
                           VersionValue,
                           IID_CATIPLMProducts,
                           (void **) &amp;piPLMProductsOnRoot,
                           Bag,
                           TRUE);
...</pre>
<p>The use case calls <code>CAAOpenPLMComponent</code> API to open a PLM Product 
Reference.The article &quot;<strong>Querying, Expanding and Opening PLM Object</strong>&quot; 
[<a href="#References">2</a>] provides the details of the CAA recommended routine 
for PLM Product Reference retrieval.</p>
<p>The root PLM Product Reference, <code>piPLMProductsOnRoot</code>, is retrieved 
as <code><em>CATIPLMProducts</em></code>* type.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving Useful Objects for the Copy</h3>
<p>Here is only described some parts of the code sample.</p>
<pre class="code">...
CATUnicodeString comp1Name =&quot;CAAMmrBRepScanServices_P1Inst&quot; ;
<strong>CATIPLMProducts</strong> *piPLMProductOnComp1 = NULL;
rc = piPLMProductsOnRoot-&gt;<strong>GetProductByName</strong>(comp1Name,piPLMProductOnComp1);
<strong>CATIPLMNavInstance</strong>_var spNavInstanceOnComp1 = piPLMProductOnComp1;
...</pre>
<p>We retrieve the instance associated with the CAAMmrBRepScanServices_P1 Product 
Reference. We use <code>GetProductByName</code> method of <em>CATIPLMProducts</em> 
interface. <code>piPLMProductsOnRoot</code> is the root PLM Product Reference, and 
the name of the instance is <code>CAAMmrBRepScanServices_P1Inst</code>. <code>spNavInstanceOnComp1</code> 
is a <em>CATIPLMNavInstance</em> interface pointer on the PLM Product Instance.</p>
<pre class="code">...
  <strong>CATIPartRequest</strong>_var spPartRequestOnMechPartOfP2;
  rc = ::<strong>CAAMmrGetPartFromProduct</strong>(spNavInstanceOnComp2, spPartRequestOnMechPartOfP2);
 ...</pre>
<p>Then we use a global function exported by the CAAMechanicalModeler.edu framework,
<em>CAAMmrGetPartFromProduct</em> that retrieves the Part feature [<a href="#References">3</a>] 
inside the 3DShape associated with the PLM Represesentation Reference. <code>spPartRequestOnMechPartOfP2</code> 
is a <em>CATIPartRequest</em> interface pointer on the Part feature of <code>CAAMmrBRepScanServices_P2</code>.</p>
<p>To retrieve a specific feature by its name we use another global function exported 
by the CAAMechanicalModeler.edu framework, <em>CAAMmrGetGeometry</em>.</p>
<p>Here an extract to retrieve the EdgeFillet.1 of <code>CAAMmrBRepScanServices_P2.</code></p>
<pre class="code">...
  CATBaseUnknown * pFil = NULL ;
  rc = ::<strong>CAAMmrGetGeometry</strong>( spPartRequestOnMechPartOfP2, &quot;EdgeFillet.1&quot;, &amp;pFil );
  CATBaseUnknown_var spOnEdgeFilletOfP2 = pFil ;
 ...</pre>
<p><code>spPartRequestOnMechPartOfP2</code> is the <em>CATIPartRequest</em> interface 
pointer on the Part feature of <code>CAAMmrBRepScanServices_P2</code>. The second 
argument is the name of the feature, and the last one is a <em>CATBaseUnknown</em> 
pointer on the retrieved feature.</p>
<p><a name="PartBodyRetrieval"></a>Here is an extract to retrieve the PartBody 
of <code>CAAMmrBRepScanServices_P2.</code></p>
<pre class="code">...
  CATBaseUnknown * pBody = NULL ;
  rc = ::<strong>CAAMmrGetGeometry</strong>(spPartRequestOnMechPartOfP2, &quot;PartBody&quot;, &amp;pBody );
  CATBaseUnknown_var spOnBodyOfP2 = pBody ;
 ...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Setting the Input Environment as the Current One</h3>
<p>This step is mandatory if you want make a copy, since a copy creates PLM components.</p>
<pre class="code">...
PLMPSISessionHelpers* pSessionHelpers = NULL;
rc = PLMPSISessionHelpers::<strong>GetSessionHelpers</strong>(pSessionHelpers);
...
rc = pSessionHelpers-&gt;<strong>SetCurrentEnvironment</strong>(EnvironmentName);
...</pre>
<p><code>EnvironmentName</code> is the seventh argument of the batch.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Copying PartBody</h3>
<pre class="code">...
<strong>CATIMmiUseCreateImport</strong>* pInterPartCopy = NULL;       
rc = <strong>CATMmiUseServicesFactory</strong>::<strong>CreateMmiUseCreateImport</strong>(pInterPartCopy); 

CATBaseUnknown_var SourceToCopy = spOnBodyOfP2;
CATIMmiMechanicalFeature_var Target = spPartRequestOnMechPartOfP1;

rc = pInterPartCopy-&gt;<strong>SetObject</strong>(SourceToCopy);
rc = pInterPartCopy-&gt;<strong>SetTarget</strong>(Target);
                                                  
CATBoolean CopyWithLink = TRUE;
pInterPartCopy -&gt;<strong>SetLinkMode</strong>(CopyWithLink); 

CATIMmiMechanicalFeature_var spResult;
rc = pInterPartCopy-&gt;<strong>Run</strong>(spResult);

pInterPartCopy-&gt;Release();  pInterPartCopy = NULL;
...</pre>
<p>The copy is made thanks the <em>CATIMmiUseCreateImport</em> interface. 
You retrieve a pointer on this interface using the <code>CreateMmiUseCreateImport</code> 
method of the <em>CATMmiUseServicesFactory</em> class.</p>
<p>The source of the copy (the feature to copy) is <code>spOnBodyOfP2</code>. 
This feature is the <code>PartBody</code> of the <code>CAAMmrBRepScanServices_P2</code> 
PLM Rep Ref. Its retrieval is <a href="#PartBodyRetrieval">described below</a>.</p>
<p>The target of the copy is spPartRequestOnMechPartOfP1. This feature 
is the Part feature of the C<code>AAMmrBRepScanServices_P1</code> PLM Rep Ref. Its 
retrieval is <a href="#Step2">described below.</a></p>
<p><code>SetLinkMode</code> with <code>TRUE</code> as argument creates 
a copy with link. It means that if the original feature is modified, the copied 
can be updated.</p>
<p>At last <code>Run</code> method executes the copy. <code>spResult</code> 
is a <em>CATIMmiMechanicalFeature</em> interface pointer on the copied feature. On 
[<a href="#Fig2">Fig.2</a>] it is <code>Body.2.</code></p>
<p>At last the <em>CATIMmiUseCreateImport</em> interface pointer is released 
since it was the unique copy to do. Otherwise, you can reuse the same pointer for 
another copy, but previously you must reset data using the <code>Reset</code> method.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Getting EdgeFillet.1 Faces Inside PartBody</h3>
<p>This step consists in retrieving the selecting object associated with the geometry 
of the EdgeFillet.1 feature inside the PartBody of <code>CAAMmrBRepScanServices_P2,
</code>the two faces represented in [<a href="#Fig3">Fig.3</a>].</p>
<p>First the geometry of EdgeFillet.1 feature:</p>
<pre class="code">...
<strong>CATIMmiUseGeometryAccess</strong>_var spGeomAccessOnEdgeFillet = spOnEdgeFilletOfP2;
CATListValCATIMmiUseBRepAccess_var LBrepAccess;
rc = spGeomAccessOnEdgeFillet-&gt;<strong>GetBReps</strong>(LBrepAccess);  
...</pre>
<p>The <code>GetBReps</code> method of the <em>CATIMmiUseGeometryAccess</em> 
interface retrieves the BRep objects associated with a feature. <code>spOnEdgeFilletOfP2</code> 
is a <em>CATBaseUnknown</em> smart pointer on the EdgeFillet.1 of the <code>CAAMmrBRepScanServices_P2</code> 
PLM Representation Reference. See the
<a href="#Step2">Retrieving Useful Objects for 
the Copy</a> section.</p>
<p>Then, for each CATIMmiUseBRepAccess interface pointer, we look for the equivalent 
face(s) in the result of the PartBody of <code>CAAMmrBRepScanServices_P2.</code></p>
<pre class="code">...
int n_face = LBrepAccess.Size();
CATListValCATIMmiUseBRepAccess_var ListBreps;
for (int i_face=1; i_face &lt;= n_face; i_face++)
{
  <strong>CATIMmiUseBRepAccess</strong>_var Unk = LBrepAccess[i_face];
  if (NULL_var != Unk)
  {
    <strong>CATIMmiUseBRep</strong>_var spBrep=Unk;
    if (NULL_var == spBrep) 
      continue;
		   
		  
    CATListValCATIMmiUseBRepAccess_var ListTemp;
    rc = spBrep-&gt;<strong>GetBreps</strong>(ListTemp, CATMmrDefaultLimitationType, spResultPartBody2Feat); 
    if (ListTemp.Size())
      ListBreps.Append(ListTemp);
  }
}
...</pre>
<p>The argument of the <code>GetBreps</code> method of <em>CATIMmiUseBRep</em> 
interface is the solid feature, the result of the PartBody [<a href="#References">4</a>].
<code>spResultPartBody2Feat</code> is retrieved such as:</p>
<pre class="code">...
    <strong>CATIBodyRequest</strong>_var spBodyRequestOnBodyOfP2 = spOnBodyOfP2;
  
    CATLISTV(CATBaseUnknown_var) ListResult ;
    rc = spBodyRequestOnBodyOfP2-&gt;<strong>GetResults</strong>(&quot;&quot;,ListResult);
 
    CATBaseUnknown_var spResultPartBody2 = ListResult[<strong>1</strong>];
    <strong>CATIMmiMechanicalFeature</strong>_var spResultPartBody2Feat = spResultPartBody2;
   
...</pre>
<p>The result of a PartBody is always the first element of the list.
</p>
<p><code>ListBreps</code> contains the faces of EdgeFillet.1 (here 
two faces).</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Getting the BRepAccess within Copied PartBody</h3>
<p>We have retrieved the list of selecting objects of the original feature,
<code>ListBreps</code>. Now lets retrieve the equivalent selecting objects in the 
result of the copy.</p>
<pre class="code">...
  <strong>CATIMmiBRepScanServices</strong> *piScanServices = NULL;  
  rc = CATInstantiateComponent(Component_BRepScanServices,CATIMmiBRepScanServices::ClassId(),(void **)&amp;piScanServices);  
  if (FAILED(rc) || piScanServices == NULL)
    return 1;
    
  CATListValCATIMmiUseBRepAccess_var ListBRepsRef;
  CATListValCATIMmiUseBRepAccess_var ListBRepsDual;
  
 for (i_face = 1; i_face &lt;= n_face; i_face++)
 {
   CATIMmiUseBRepAccess_var spBRepIn = ListBreps[i_face]; 
   CATIMmiMechanicalFeature_var spFeatRef=NULL_var;
   CATIMmiUseBRepAccess_var spBRepOut = NULL_var;

    rc = piScanServices-&gt;<strong>FindDualBRepAccess</strong>(spFeatRef, spResult, spBRepIn, spBRepOut);
    if (FAILED(rc) || NULL_var == spBRepOut) 
      continue;

    ListBRepsRef.Append(spBRepIn);
    ListBRepsDual.Append(spBRepOut);
  } 
 
...</pre>
<p>We use the <code>FindDualBRepAccess</code> method of the <em>CATIMmiBRepScanServices</em> 
class. In this case the inputs of this method are the following:</p>
<ul>
	<li><code>spFeatRef</code>: a <em>CATIMmiMechanicalFeature</em> interface 
		smart pointer on the reference feature. The value can be <code>NULL</code> 
		because the input will be not used in this case.</li>
	<li><code>spResult</code> : a <em>CATIMmiMechanicalFeature</em> interface smart 
		pointer on the copied feature. It's is described in the
		<a href="#Step4">Copying PartBody</a> section. It is the feature 
		result of the copy of the <code>PartBody</code> feature of <code>CAAMmrBRepScanServices_P2</code> 
		inside <code>CAAMmrBRepScanServices_P1</code></li>
	<li>spBRepIn: a <em>CATIMmiUseBRepAccess</em> interface smart pointer on one 
		selecting object of EdgeFillet.1.</li>
	<li>spBRepOut : it is the ouput argument of the method, a smart pointer on the 
		equivalent selecting object inside the result.</li>
</ul>
<p><code>ListBRepsDual</code> contains the list of selecting objects inside the 
result. On [<a href="#Fig4">Fig.4</a>] you can seen the two selecting objects in 
the dotted white boxes.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Getting the BRepAccess within initial Part</h3>
<p>For each selecting object found in the result, lets retrieve the selecting object 
in the original feature. In mathematical terms we are looking for the Bi-Dual objects.
</p>
<pre class="code">...
  CATListValCATIMmiUseBRepAccess_var ListBRepsBiDual; 
  n_face = ListBRepsDual.Size();
  for( i_face = 1; i_face &lt;= n_face; i_face++)
  {
    CATIMmiMechanicalFeature_var spFeatRef = spOnBodyOfP2;
    //spResult = The edgefillet copied in comp1
    CATIMmiUseBRepAccess_var spBRepIn = NULL_var;  
    CATIMmiUseBRepAccess_var spBRepOut = ListBRepsDual[i_face];;
    
    rc = piScanServices-&gt;<strong>FindDualBRepAccess</strong>(spFeatRef, spResult, spBRepIn , spBRepOut); 
    if (FAILED(rc) || NULL_var == spBRepIn ) 
      continue;
    ListBRepsBiDual.Append(spBRepIn);
  }
...</pre>
<p>We use the <code>FindDualBRepAccess</code> method of the <em>CATIMmiBRepScanServices</em> 
class. In this case the inputs of this method are the following:</p>
<ul>
	<li><code>spFeatRef</code>: a <em>CATIMmiMechanicalFeature</em> interface 
		smart pointer on the feature where the selecting Objects will be looked 
		for. The value cannot be <code>NULL</code>. It is the <code>PartBody</code> 
		of the <code>CAAMmrBRepScanServices_P2. spOnBodyOfP2</code> is explained 
		in the <a href="#Step2">Retrieving Useful 
		Objects for the Copy</a> section.</li>
	<li><code>spResult</code>: a <em>CATIMmiMechanicalFeature</em> interface smart 
		pointer on the copied feature. It's described in the
		<a href="#Step4">Copying PartBody</a> section. It is the feature 
		result of the copy of the <code>PartBody</code> feature of <code>CAAMmrBRepScanServices_P2</code> 
		inside <code>CAAMmrBRepScanServices_P1</code></li>
	<li><code>spBRepOut</code>: it is a pointer on the selecting object inside the result.</li>
	<li><code>spBRepIn</code>: it is the ouput argument of the method, a <em>CATIMmiUseBRepAccess</em> 
		interface smart pointer on one selecting object of EdgeFillet.1 inside
		<code>CAAMmrBRepScanServices_P2</code>.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Checking Step</h3>
<p>All the elements of <code>ListBRepsBiDual</code> must belong to the initial list,
<code>ListBRepsRef</code>. Both are list containing faces of EdgeFillet.1 inside
<code>CAAMmrBRepScanServices_P2</code>, but <code>ListBRepsRef</code> can 
contain more elements.</p>
<pre class="code">...
for( i_face = 1; i_face &lt;= n_face; i_face++)
{
  CATIMmiUseBRep_var spBRepIn = ListBRepsBiDual[i_face];
  if (NULL_var == spBRepIn) 
    continue;
    
  CATBoolean Found = FALSE;
  int j=1;
  while ((Found==FALSE) &amp;&amp; (j&lt;=ListBRepsRef.Size()))
  {
    CATIMmiUseBRep_var spBRepOut = ListBRepsRef[j];
    CATBoolean IsSame=FALSE;
    rc = spBRepIn-&gt;<strong>IsSameBRep</strong>(spBRepOut, IsSame);
    if (IsSame)
      Found = TRUE;
    j++;
  }
...</pre>
<ul>
	<li><code>ListBRepsRef</code> is the list of selecting object of <code>CAAMmrBRepScanServices_P2
		</code>for which we have found an equivalence in<code> CAAMmrBRepScanServices_P1</code>.</li>
	<li><code>ListBRepsBiDual</code> is the list of selecting object of <code>CAAMmrBRepScanServices_P2</code>.</li>
</ul>
<p>To compare two BRep objects, use the <code>IsSameBRep</code> method.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>The use case has shown that:</p>
<ul>
	<li>Using <em>CATIMmiUseGeometryAccess</em> you retrieve the selecting objects 
		of a feature.</li>
	<li>Using the <code>FindDualBRepAccess</code> method of <em>CATIMmiBRepScanServices</em> 
		you can retrieve the equivalent selecting objects in the copied feature.</li>
</ul>
<p></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAAPlmServerAccess/CAAAdpUcQueryOpen.htm">
		Querying, Expanding and Opening PLM Object</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAMmrTa3DShape.htm">From the PLM Representation to the 3D 
		Shape</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAMmrTaSpecResultForMechFeat.htm">Specification/Result Mechanism 
		Applied to Mechanical Features</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: 1 [Nov 2006]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
