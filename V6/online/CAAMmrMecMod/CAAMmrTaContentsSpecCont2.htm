<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>The Geometrical Features</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>The Geometrical Features</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>As seen in the article &quot;Mechanical Modeler Overview&quot; [<a href="#References">1</a>], 
		the design of mechanical objects is based on three main categories of Mechanical 
		Features: the <strong>Part Feature</strong>, the<strong> Geometrical Feature 
		Sets</strong> and the <strong>Geometrical Features</strong>. This article 
		focuses on the Geometrical Features.</p>
		<p>The Part Feature and Geometrical Feature Sets are described in the following 
		articles [<a href="#References">2</a>][<a href="#References">3</a>].</p>
		<ul>
			<li><a href="#100000">The Geometrical Features</a></li>
			<li><a href="#200000">Classification by Topology</a></li>
			<li><a href="#300000">Solid versus Surfacic Feature</a>
				<ul>
					<li><a href="#310000">Definition</a></li>
					<li><a href="#320000">Interface</a></li>
					<li><a href="#330000">Inserting in a Geometrical Feature Set</a></li>
				</ul>
			</li>
			<li><a href="#400000">Form versus Contextual Feature</a>
				<ul>
					<li><a href="#410000">Definition</a></li>
					<li><a href="#420000">The First Feature of a PartBody/Body</a></li>
				</ul>
			</li>
			<li><a href="#500000">Creation versus Modification Feature</a>
				<ul>
					<li><a href="#510000">Definition</a></li>
					<li><a href="#520000">Main Input Specification</a></li>
					<li><a href="#530000">Interface</a></li>
				</ul>
			</li>
			<li><a href="#600000">Datum Feature</a>
				<ul>
					<li><a href="#610000">Definition</a></li>
					<li><a href="#620000">Creating a Datum</a></li>
				</ul>
			</li>
			<li><a href="#700000">Example of Features</a>
				<ul>
					<li><a href="#710000">Part Design Features</a></li>
					<li><a href="#720000">Generative Shape Design Features</a></li>
				</ul>
			</li>
			<li><a href="#800000">Inserting a Geometrical Feature Inside a Geometrical 
				Feature Set</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="100000"></a>The Geometrical Features</h2>
<p>A Geometrical Feature is a mechanical feature that generates a Topological result, 
modeled by a <strong>CATBody</strong>. The CATBody is visualized in the Geometry 
Area of CATIA.</p>
<p><img alt="" height="262" src="images/CAAMmrTopoResult.jpg" width="336"/></p>
<p>Sketch.1, Sketch.2, Extrude.1, Pad.1 are Geometrical Features. The reference 
planes are also Geometrical Features.</p>
<p>Refer to the article &quot;the CGM Topological Model&quot; [<a href="#References">5</a>] 
for details on the topological objects.</p>
<p>Refer to the article &quot;Specification/Result Mechanism applied to Mechanical 
Feature&quot;[<a href="#References">6</a>] for details on how to retrieve the topological 
result.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="200000"></a>Classification by Topology</h2>
<p>Here are some examples of interfaces that enable you to classify a geometrical 
feature by its topological result. These interfaces are useful to filter selections, 
they can be used in a selection agent for example.</p>
<ul>
	<li><em><strong>CATIMfPoint</strong>,<strong> CATIMfLine</strong></em> and
		<em><strong>CATIMfPlane</strong></em>
		<p>The CATBody associated with the feature is a equivalent respectively 
		to a Point (CATPoint), a Line (CATLine), a Plane (CATPlane).</p>
	</li>
	<li><em><strong>CATIMfInfiniteResult</strong></em>
		<p>All the domains of the CATBody associated with the feature are infinite 
		(infinite line or plane).</p>
	</li>
	<li><em><strong>CATIMfZeroDimResult</strong></em>, <em><strong>CATIMfMonoDimResult</strong></em>,
		<em><strong>CATIMfBiDimResult</strong></em> and <em><strong>CATIMfTriDimResult</strong></em>
		<p>All the domains of the CATBody associated with the feature have the same 
		dimension of respectively 0,1, 2 or 3 .</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="300000"></a>Solid versus Surfacic Feature</h2>
<h3><a name="310000"></a>Definition</h3>
<p>A <strong>solid</strong> <strong>feature</strong> is a feature only referencing 
3D geometry, except for volumes.</p>
<p>A <strong>surfacic</strong> <strong>feature</strong> is a feature referencing 
0D, 1D, 2D or 3D geometry for volumes:</p>
<ul>
	<li>Points are 0D surfacic features</li>
	<li>Wires (including the sketches) are 1D surfacic features</li>
	<li>Surfaces are 2D surfacic features</li>
	<li>Volumes are 3D surfacic features</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="320000"></a>Interface</h3>
<p>The <em><strong>CATIMf3DBehavior</strong></em> interface enables you to know 
if a geometrical feature is solid or surfacic:</p>
<ul>
	<li>For a solid feature, the <code><strong>IsASolid</strong></code> method returns
		<code>S_OK.</code></li>
	<li>For a surfacic feature, the <code><strong>IsAShape</strong></code> method 
		returns <code>S_OK.</code></li>
	<li>For volumes, both methods <code><strong>IsAShape</strong></code> and
		<code><strong>IsAVolume</strong></code> return <code>S_OK</code>, since 
		a volume is a surfacic feature.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="330000"></a>Insertion in Geometrical Feature Sets</h3>
<p>A solid feature can only be included into a Body feature, either Hybrid Body 
or Solid Body.</p>
<p>A surfacic feature can be included into a Geometrical Set, an Ordered Geometrical 
Set or a Hybrid Body (except for Volumes).</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="400000"></a>Form versus Contextual Feature</h2>
<p>A solid feature can either be a form or a contextual feature.</p>
<h3><a name="410000"></a>Definitions</h3>
<p>A <strong>form feature</strong> is a feature that is built by first computing 
its own shape and then performing a boolean operation between this shape and an 
input Solid feature. The initial shape of such a feature is called its <strong>footprint</strong><em>.</em></p>
<p>A Pad, a Hole, a Pocket, a Groove are examples of form features.</p>
<table>
	<caption><strong>Example of form feature : a Hole</strong></caption>
	<tr>
		<td>
		<img alt="" height="211" src="images/CAAMmrHoleShape.jpg" width="406"/></td>
	</tr>
</table>
<p><strong>A Contextual feature</strong> does not have a footprint. Its resulting 
shape is directly built from the input Solid feature and its input parameters.</p>
<p>Fillets, Drafts, and generally all Dress up features are contextual features.</p>
<table>
	<caption><strong>Example of contextual feature : a Fillet</strong></caption>
	<tr>
		<td>
		<img alt="" height="221" src="images/CAAMmrFilletResult.jpg" width="324"/></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="420000"></a>First Feature for a PartBody/Body</h3>
<p>The first feature in a PartBody cannot be a contextual feature because there 
is nothing to operate upon. This constraint does not exist for Body features seeing 
they can rely on the shape provided by the PartBody.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="500000"></a>Creation versus Modification Feature</h2>
<p>The distinction between a feature of creation and a feature of modification is 
only meaningful for features inside an ordered set and concerns the absorption concept. 
Refer to the article &quot;Order and Absorption Concepts&quot; for further details 
on this topic [<a href="#References">4</a>].</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="510000"></a>Definition</h3>
<p>A <strong>feature of creation</strong> is a feature creating 
matter from its input specifications. For example, a line created from two points 
is a feature of creation.</p>
<p>A <strong>feature of</strong> <strong>modification</strong> is a feature modifying 
one or several of its input specifications. For example, a Split is a feature of 
modification. A feature of modification is an <strong>absorbent</strong> feature 
and its modified inputs are <strong>absorbed</strong> features.</p>
<table>
	<caption><strong>Example of feature of modification : a Split</strong>
	</caption>
	<tr>
		<td>
		<img alt="" height="170" src="images/CAAMmrLinearBodyWithHybridBody2.jpg" width="272"/>
		<img alt="" height="172" src="images/CAAMmrLinearBodyWithHybridBody.jpg" width="257"/>
		</td>
	</tr>
</table>
<p>The picture on the left shows the model before the split operation, <code>Extrude.1</code> 
is visualized. the The picture on the right shows the result of the split operation.
<code>Split.1 has modified Extrude.1</code>, which is not drawn anymore, it has 
been absorbed<code>.</code></p>
<p>Here is a reminder on the behavior of absorbed features:</p>
<ul>
	<li>They are not visualized as long as the absorbent feature is visualized.</li>
	<li>They are not selectable as long as the absorbent feature is visualized.</li>
</ul>
<p>Note: A feature in an ordered set is no longer visualized if the current feature 
has been set to a feature above it in the specification tree.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="520000"></a>Main Input Specification</h3>
<p>In the case of multiple inputs for a feature of modification, one of them is 
necessarily privileged and is called the main input. This feature has two roles:</p>
<ul>
	<li>It gives the <strong>graphic properties</strong> to the absorbent feature</li>
	<li>In case of <strong>reorder</strong> of a feature of modification, the main 
		input of the previous feature becomes an input for the moved feature.
	</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="530000"></a>Interface</h3>
<p>The <code><strong>GetFeatureType</strong></code> method of the <em><strong>CATIInputDescription</strong></em> 
interface enables you to retrieve the type of your feature.</p>
<p>The <code><strong>GetListOfModifiedFeatures</strong></code> method of <em>
<strong>CATIInputDescription</strong></em> interface returns the list of absorbed 
features for a feature of modification. It returns E_FAIL for a feature of creation.
</p>
<p>The <code><strong>GetMainInput</strong></code> method of the <em><strong>CATIInputDescription</strong></em> 
interface enables you to retrieve the main input specification for a feature of 
modification. It returns E_FAIL for a feature of creation.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="600000"></a>Datum Feature</h2>
<h3><a name="610000"></a>Definition</h3>
<p>A Datum is a Geometrical Feature that only contains a result and doesn't contain 
its input specifications. It is a feature without a history, therefore it can't 
be updated.</p>
<p>A datum is not a specific feature: it is an existing feature with the &quot;datum&quot; 
status. It can be, for example, a Point, a Line, a Plane, etc. Any datum feature 
can be recognized in the Specification Tree with an added
<img alt="" height="15" src="images/CAAMmrDatumIcon.jpg" width="11"/> on its origin 
icon.</p>
<p>The <em><strong>CATIMf3DBehavior</strong></em> interface and its <code>
<strong>IsaDatum</strong></code> method returns the status of the feature.</p>
<p>Creating a datum can be done for different reasons:</p>
<ul>
	<li>To lightened the model if the historical record is not necessary.</li>
	<li>To hide the design.</li>
	<li>To apply constraints more easily.</li>
</ul>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="620000"></a>Creating a Datum</h3>
<p>There are two interfaces that enable the creation of a datum:</p>
<ul>
	<li><em><strong>CATIIsolate</strong></em> interface: enables to transform an 
		existing feature into a Datum feature.</li>
	<li><em><strong>CATIMmiUseDatumFactory</strong></em> interface: enables to create 
		a Datum feature from a CATBody.</li>
</ul>
<p>Note: In a CATIA session, there are two ways to create a Datum:</p>
<ul>
	<li>In Generative Shape Design application, you can set the
		<img alt="" src="images/I_IsolatedCAA.jpg" width="32" height="30"/> 
		CreateDatum setting.</li>
	<li>In Part Design application, you can use the sequence of the &quot;Copy &amp; 
		Paste Special&quot; command with &quot;Paste As Result&quot; option.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="700000"></a>Examples of Features</h2>
<p>Mechanical features are provided through applications such as Part Design or 
Generative Shape Design.</p>
<h3><a name="710000"></a>Part Design Features</h3>
<ul>
	<li>Solid features: created with the <em><strong>CATIPdgUsePrtFactory</strong></em> 
		interface.
		<ul>
			<li>Form features:
				<ul>
					<li>Pad</li>
					<li>Pocket</li>
					<li>Groove</li>
					<li>Shaft</li>
					<li>etc.</li>
				</ul>
			</li>
			<li>Contextual features:
				<ul>
					<li>Fillet</li>
					<li>Chamfer</li>
					<li>Split</li>
					<li>etc.</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>Volumes: also created with the <em><strong>CATIPdgUsePrtFactory</strong></em> 
		interface.
		<ul>
			<li>Draft</li>
			<li>Sewing</li>
			<li>Shell</li>
			<li>etc.</li>
		</ul>
	</li>
	<li>Surfacic operations : also created with the <em><strong>CATIPdgUsePrtFactory</strong></em> 
		interface.<ul>
			<li>Split</li>
			<li>Close Surface</li>
			<li>etc.</li>
		</ul>
	</li>
	<li>Boolean operations : created with the<em><strong> CATIPdgUsePrtBooleanFactory</strong></em> 
		interface.
		<ul>
			<li>Add</li>
			<li>Remove</li>
			<li>Intersect</li>
			<li>Assemble</li>
		</ul>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="720000"></a>Generative Shape Design Features</h3>
<p>They are created with the <em><strong>CATIGSMUseFactory</strong></em> interface.</p>
<ul>
	<li>Element 0D, 1D, 2D
		<ul>
			<li>Point</li>
			<li>Line</li>
			<li>Plane</li>
			<li>Extrude</li>
			<li>etc.</li>
		</ul>
	</li>
	<li>Transformation feature
		<ul>
			<li>Translation</li>
			<li>Rotation</li>
			<li>etc.</li>
		</ul>
	</li>
	<li>Dress-up</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="800000"></a>Inserting a Geometrical Feature Inside a Geometrical Feature 
Set</h2>
<ul>
	<li>Shape Features
		<p>Shape features created in GSD with the <em><strong>CATIGSMUseFactory</strong></em> 
		interface are created alone. After their creation, they need to be aggregated 
		to a Geometrical Feature Set by calling the <code><strong>InsertInProceduralView</strong></code> 
		method of<em><strong> CATIGSMUseProceduralView</strong></em> interface.</p>
		<pre class="code">...
CATIGSMUseFactory_var spGSMFact = ...
CATIMmiMechanicalFeature_var spGeomSet = ...

//Create GSM Point
double PointCoord[3];
PointCoord[0] = 20. 
PointCoord[1] =  5.  
PointCoord[2] = 20. 
CATIGSMUsePoint_var spPoint = spGSMFact-&gt;CreatePoint(PointCoord);

// Append the point in geometrical feature set
CATIGSMUseProceduralView_var spProceduralView1OnPoint = spPoint;
if (NULL_var != spProceduralView1OnPoint1)
  rc = spProceduralView1OnPoint-&gt;InsertInProceduralView(spGeomSet);
...</pre>
		<p>spGSMFact is a smart pointer on the SpecificationContainer.</p>
		<p>spGeomSet is a smart pointer on the GeometricalSet in which the Feature 
		is inserted.</p>
	</li>
	<li>Solid Features
		<p>Solid features created in Part Design with the <em><strong>CATIPdgUsePrtFactory</strong> 
		or<strong> CATIPdgUsePrtBooleanFactory</strong></em> interfaces are automatically 
		included in the current PartBody or Body.</p>
		<p>Otherwise, to aggregate a solid feature inside a PartBody or a Body, 
		use <code><strong>InsertFeature</strong></code> method of the <em>
		<strong>CATIMmiUseSolidInsertion</strong></em> interface.</p>
	</li>
	<li>Ordered sets<p>In the case of ordered sets, the new feature is positioned 
		just after the current feature if the current feature is in the set, otherwise 
		it's positioned at the end of the set. The GSD and Part Design interfaces 
		mentioned above manage the linearity rules within ordered sets.</p>
		<p>Mechanical Modeler provides a generic interface to manage insertion of 
		a Mechanical Feature into a Set, <em><strong>CATIMmiUseBasicInsertion</strong></em>. 
		This interface doesn't manage linearity rules within an ordered set and 
		it is necessary to invoke after the aggregation and after an update of the 
		feature, the <code><strong>Insert</strong></code> method of the <em>
		<strong>CATIMmiUseLinearBodyServices</strong></em> interface. Nevertheless, 
		it is preferable to use the interfaces provided by GSD and PartDesign.
		</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>Geometrical Features are mechanical features that generate a topological result.</p>
<p>There are two kinds of Geometrical Features:</p>
<ul>
	<li><strong>Solid</strong> features: they reference 3D geometry, except for 
		volumes. They can be aggregated by Bodies (Hybrid Body and Solid Body).
	</li>
	<li><strong>Surfacic</strong> features: they reference 0D, 1D, 2D and 3D geometry 
		for volumes. They can be aggregated either by Ordered Geometrical Sets, 
		Geometrical Sets or Hybrid Bodies, except for volumes.</li>
</ul>
<p>A Geometrical Feature can be a datum. It is a feature without specifications 
that contains only its result, a CATBody.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td><a href="CAAMmrTaMechModUseOverview.htm">Mechanical Modeler Overview</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAAMmrTaContentsSpecCont0.htm">The Part Feature</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="CAAMmrTaContentsSpecCont1.htm">The Geometrical Feature Sets</a></td>
	</tr>
	<tr>
		<td>[4]</td>
		<td><a href="CAAMmrTaOrderLinearBody.htm">Order and Absorption Concepts</a></td>
	</tr>
	<tr>
		<td>[5]</td>
		<td>
		<a href="../CAACgmModel/CAACgmTaTobTopoModel.htm">
		The CGM Topological Model</a></td>
	</tr>
	<tr>
		<td>[6]</td>
		<td><a href="CAAMmrTaSpecResultForMechFeat.htm">Specification/Result Mechanism 
		Applied to Mechanical Features</a></td>
	</tr>
	<tr>
		<td>[7]</td>
		<td>
		<a href="../CAAFmFeatMod/CAAFmTaOverview.htm">
		Feature Modeler Concept</a></td>
	</tr>
	<tr>
		<td>[8]</td>
		<td><a href="CAAMmrTaGenericNaming.htm">Generic Naming Overview</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Dec 2002]</td>
		<td>Document created</td>
	</tr>
	<tr>
		<td>Version: <strong>2</strong> [Jun 2003]</td>
		<td>Document updated to specify the feature's classification</td>
	</tr>
	<tr>
		<td>Version: <strong>3</strong> [Nov 2003]</td>
		<td>Document updated for OGS integration</td>
	</tr>
	<tr>
		<td>Version: <strong>4</strong> [Nov 2003]</td>
		<td>Document updated for R14 novelties</td>
	</tr>
	<tr>
		<td>Version: <strong>5</strong> [Mar 2010]</td>
		<td>Document updated for V6 novelties</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
