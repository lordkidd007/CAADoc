<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Editing Dimension Dress-Up</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Editing Dimension Dress-Up</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAADrwDimDressupCmd.cpp use case. This use 
		case explains how to edit a dimension dress-up.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a> </li>
			<li><a href="#IDMCATI">The Main Dimension Interfaces</a> </li>
			<li><a href="#UseCase">The CAADrwDimDressupCmd Use Case</a>
				<ul>
					<li><a href="#What">What Does CAADrwDimDressupCmd Do</a>
					</li>
					<li><a href="#How">How to Launch CAADrwDimDressupCmd</a></li>
					<li><a href="#Where">Where to Find the CAADrwDimDressupCmd Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>In this use case you will learn how to modify the dimension dress-up parameters.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="IDMCATI"></a>The Main Dimension Interfaces</h2>
<table>
	<caption>Fig. 1: The Dimension Interfaces UML Diagram</caption>
	<tr>
		<td>
		<img alt="Dimension Interface UML Diagram" height="535" src="images/CAADrwDimDressup2.jpg" width="490"/></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAADrwDimDressupCmd Use Case</h2>
<p>CAADrwDimDressupCmd is a use case of the CAADraftingInterfaces.edu framework 
that illustrates DraftingUseItf and CATAnnotationUseItf frameworks capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAADrwDimDressupCmd Do</h3>
<p>This sample waits for a dimension selection and modifies the dress-up as follows:</p>
<table>
	<caption>Fig. 2: The Dimension After and Before Dress-Up</caption>
	<tr>
		<td>
		<img alt="Dimension After and Before Dress-Up" height="287" src="images/CAADrwDimDressup1.jpg" width="332"/></td>
		<td>
		<dl>
			<dt>Texts</dt>
			<dd>Prefix = &#8220;L=&#8220;, main text upper = &#8220;Up&#8221; main 
			text lower = &#8220;Down&#8221;</dd>
			<dt>Dual value</dt>
			<dd>On, in inch, side by side</dd>
			<dt>Tolerance</dt>
			<dd>Main and dual, alpha-numerical</dd>
			<dt>Dimension Line</dt>
			<dd>Thickness = 0.2, color = blue</dd>
			<dt>Extension Line</dt>
			<dd>Funnel, thickness = 0.2, color = yellow, over-run = 4, blanking 
			= 4</dd>
			<dt>Symbol</dt>
			<dd>Circled cross, thickness = 0.2 color = green</dd>
			<dt>Font</dt>
			<dd>5mm, color = red</dd>
			<dt>Frame</dt>
			<dd>Rectangle</dd>
		</dl>
		</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAADrwDimDressupCmd</h3>
<p>To launch CAADrwDimDressupCmd, you will need to set up the build time environment, 
then compile CAADrwDimDressupCmd and CAADrwAddin along with its prerequisites, set 
up the run time environment, and then include the command in a workbench [<a href="#References">1</a>].</p>
<ol>
	<li>Launch a CATIA session.</li>
	<li>Right-click on Drafting workshop to activate CAAUseCaseCommands toolbar.</li>
	<li>Launch the DimDressup use case command, and select the annotation.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAADrwDimDressupCmd Code</h3>
<p>The CAADrwDimDressupCmduse case is made of two source files named CAADrwDimDressupCmd.h 
and CAADrwDimDressupCmd.cpp located in the CAADrwDimDressup.m module of the CAADraftingInterfaces.edu 
framework:</p>
<p><code>InstallRootFolder\CAADoc\CAADraftingInterfaces.edu\CAADrwDimDressup.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are 11 steps in CAADrwDimDressupCmd:</p>
<ol>
	<li><a href="#Step1">Building the State Chart and Creating the Appropriate Selection 
		Agent</a></li>
	<li><a href="#Step2">Retrieving the Selection</a></li>
	<li><a href="#Step3">Editing the Text</a></li>
	<li><a href="#Step4">Setting the Dual Value</a></li>
	<li><a href="#Step5">Adding the Tolerance</a></li>
	<li><a href="#Step6">Editing the Main Value</a></li>
	<li><a href="#Step7">Editing the Dual Value</a></li>
	<li><a href="#Step8">Editing the Dimension Line</a></li>
	<li><a href="#Step9">Editing the Extension Line</a></li>
	<li><a href="#Step10">Setting the Funnel</a></li>
	<li><a href="#Step11">Building the Dimension and Exit</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Building the State Chart and Creating the Appropriate Selection 
Agent</h3>
<pre class="code">void CAADrwDimDressupCmd::BuildGraph()
{  
   // Creation of the acquisition agent
   _pObjectAgent = new CATPathElementAgent(&quot;_ObjectAgent A&quot;);
   _pObjectAgent -&gt;SetBehavior( CATDlgEngWithPrevaluation | 
                                CATDlgEngMultiAcquisition | 
                                CATDlgEngWithCSO); 

   // We want to select dimensions
   _pObjectAgent -&gt;AddElementType(&quot;<strong>CATIDrwDimDimension</strong>&quot;);
   AddCSOClient(_pObjectAgent);
   
   //  States definition
   CATDialogState* state1 = GetInitialState(&quot;Sel dimension&quot;);
   state1-&gt;AddDialogAgent(_pObjectAgent);
   
   // Transition definition
   AddTransition(state1, NULL, IsOutputSetCondition(_pObjectAgent),
                 Action((ActionMethod)&amp;CAADrwDimDressupCmd::DressUp, NULL, NULL));
}</pre>
<p>In this section we create a <em>CATPathElementAgent</em> and set the corresponding 
element type to <em>CATIDrwDimDimension</em>. So only dimensions could be selected.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving the Selection</h3>
<pre class="code">boolean CAADrwDimDressupCmd::DressUp(void *)
{ 
   // We get the Selected set of objects
   CATSO* pObjSO = _pObjectAgent-&gt;GetListOfValues(); 
   CATPathElement *pElemPath = NULL;
   
   if (pObjSO)  
   {

      // There is a selection, we will scan it from the beginning
      pObjSO-&gt;InitElementList();
      while (NULL != (pElemPath = (CATPathElement*)pObjSO-&gt;NextElement()))
      {
         // Make sure the element is dimension
         <strong>CATIDrwDimDimension</strong> *piDim = (CATIDrwDimDimension *)pElemPath-&gt;FindElement(IID_CATIDrwDimDimension);
         
         if (NULL != piDim)
         {
...</pre>
<p>The acquisition agent did put the selected dimension into the CSO. So we get 
the set of object and loop on it.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Editing the Text</h3>
<pre class="code">...
            // Text properties
            <strong>CATIDrwTextProperties</strong>_var spTextProperties = piDim;
            spTextProperties-&gt;<strong>SetFontSize</strong>(5);
            spTextProperties-&gt;<strong>SetColor</strong>(255, 0, 0, 255);
            spTextProperties-&gt;<strong>SetFrameType</strong>(CATDrwRectangle);
...</pre>
<p>The dimension implements the <em>CATIDrwTextProperties</em> interface. Using 
this interface, we modify the font size, color and the text frame format.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Dual Value</h3>
<pre class="code">...            
            // Dual value
            piDim-&gt;<strong>ShowDualValue</strong>();
...</pre>
<p>The dual value is set using the <em>CATIDrwDimDimension</em> interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Adding the Tolerance</h3>
<pre class="code">...
            // Tolerance
            piDim-&gt;<strong>AddTolerance</strong>(&quot;h7&quot;,&quot;g6&quot;,1,1);
...</pre>
<p>The tolerance is set using the <em>CATIDrwDimDimension</em> interface.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Editing the Main Value</h3>
<pre class="code">...
            // We get the dim value
            <strong>CATIDrwDimValue</strong>_var spDimValue = piDim-&gt;GetValue();
            spDimValue-&gt;<strong>SetDualValueDisplay</strong>(CATDrwDimDualSideBySide);
            
            // The main value
            <strong>CATIDrwDimValueComponent</strong>_var spMainValue = spDimValue-&gt;<strong>GetFaceComponent</strong>();
            <strong>CATIDrwDimText</strong>_var spMainText = spMainValue-&gt;<strong>GetText</strong>();
            spMainText-&gt;<strong>SetPSText</strong>(&quot;L=&quot;, &quot;&quot;);
            spMainText-&gt;<strong>SetBAULText</strong>(&quot;&quot;, &quot;&quot;, &quot;Up&quot;, &quot;Down&quot;);
...</pre>
<p>The <em>CATGraphicAttributeSet</em> will be used to convert RGBA data from a 
4-integer representation to a 1-integer representation. First we get the dimension 
value. This feature manages the main and dual value representations. Then we get 
the main value from the dimension value. Using <code>SetPSText</code> we set:</p>
<ul>
	<li>The prefix</li>
	<li>The suffix.</li>
</ul>
<p>Using <code>SetBAULText</code> we set:</p>
<ul>
	<li>The text before</li>
	<li>The text after</li>
	<li>The text upper</li>
	<li>The text lower.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Editing the Dual Value</h3>
<pre class="code">...
            // The dual value
            CATIDrwDimValueComponent_var spDualValue = spDimValue-&gt;<strong>GetDualComponent</strong>();
            <strong>CATIDrwDimFormat</strong>_var spDualFormat = spDualValue-&gt;<strong>GetFormat</strong>();
            spDualFormat-&gt;<strong>SetUnit</strong>(CATDrwDimUnitINCH);
...</pre>
<p>We get the dual value from the dimension value and modify the format putting 
the unit to &quot;INCH&quot;.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Editing the Dimension Line</h3>
<pre class="code">...
            // Useful to convert RGBA(4-int)&lt;-&gt;RGBA(1-int)
            <strong>CATGraphicAttributeSet</strong> attrSet;
            // DimensionLine
            <strong>CATIDrwDimDimensionLine</strong>_var spDimLine = piDim-&gt;<strong>GetDimensionLine</strong>();
            attrSet.SetColorRGBA(255,0,0,255);
            spDimLine-&gt;<strong>SetGraphicParameters</strong>(attrSet.GetColorRGBA(), 0.2);
            spDimLine-&gt;<strong>SetSymbol</strong>(CATDrwDimSymbCircledCross,CATDrwDimSymbCircledCross);
            attrSet.<strong>SetColorRGBA</strong>(0,255,0,255);
            spDimLine-&gt;<strong>SetSymbolsGraphicParameters</strong>(attrSet.GetColorRGBA(), 0.1, 
                                                   attrSet.GetColorRGBA(), 0.1);
...</pre>
<p>We get the dimension line interface from the dimension. Using the <em>CATIDrwDimDimensionLine</em> 
interface we modify :</p>
<ul>
	<li>The color and thickness (using the <em>CATGraphicAttributeSet</em>)</li>
	<li>Both symbols</li>
	<li>The symbol graphic parameters.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Editing the Extension Line</h3>
<pre class="code">...
            // ExtentionLine
            <strong>CATIDrwDimExtensionLine</strong>_var spExtLine = piDim-&gt;<strong>GetExtensionLine</strong>();
            attrSet.SetColorRGBA(0,255,255,255);
            spExtLine-&gt;<strong>SetGraphicParameters</strong>(attrSet.GetColorRGBA(), 0.2);
            spExtLine-&gt;<strong>SetGap</strong>(4);
            spExtLine-&gt;<strong>SetOverRun</strong>(4);
...</pre>
<p>We get the extension line interface from the dimension.<br />
Using the <em>CATIDrwDimExtensionLine</em> interface we modify :</p>
<ul>
	<li>The color and thickness (using the <em>CATGraphicAttributeSet</em>)</li>
	<li>The gap and over-run.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Setting the Funnel</h3>
<pre class="code">...
            // Funnel
            <strong>CATIDrwDimExtensionLineLinear</strong>_var spLinearExtLine = spExtLine;
            spLinearExtLine-&gt;<strong>SetFunnel</strong>(1);
...</pre>
<p>This is a distance dimension. So the extension line implements <em>CATIDrwDimExtensionLine</em>.
<code>CATIDrwDimExtensionLineLinear::SetFunnel(1)</code> sets the funnel at true.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a><span lang="fr">Refreshing</span> the Dimension and Exit</h3>
<pre class="code">...
           // Let's <span lang="fr">refresh </span>the dimension after spec modifications
           // ----------------------------------------------------------
           if (SUCCEEDED(spTextProperties<span lang="fr">-&gt;Refresh()</span>))
             rc = TRUE;
           piDim-&gt;Release();
           piDim=NULL;
         }
      }
      
      _pObjectAgent -&gt; InitializeAcquisition();
      return TRUE;
   }
   return FALSE;
}</pre>
<p>We have to update the dimension to take into account the dress-up modifications.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case shows how to edit a dimension dress-up. The main dimension interfaces 
are <em>CATIDrwDimDimension, CATIDrwTextProperties, CATIDrwDimValue, CATIDrwDimValueComponent, 
CATIDrwDimText, CATIDrwDimFormat, CATIDrwDimDimensionLine, CATIDrwDimExtensionLine, 
CATIDrwDimExtensionLineLinear</em> and <em>CATIBuild</em>.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jan 2000]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
