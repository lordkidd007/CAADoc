<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="GENERATOR" content="Microsoft FrontPage 12.0" />
<meta name="ProgId" content="FrontPage.Editor.Document" />
<link rel="stylesheet" type="text/css" href="../CAAShrResources/caav5.css"/>
<script type="text/javascript" src="../CAAShrResources/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAAShrResources/submit.js">/* */</script>
<title>Component Family Modeler Description &amp; Customization</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Component Family Modeler Description &amp; Customization</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<p>This article presents the Component Family modeler.</p>
		<ul>
			<li><a href="#Description">Description</a> 
			<ul>
				<li><a href="#Business Logic Description">Business Logic</a></li>
				<li><a href="#PandO">P&amp;O</a></li>
			</ul>
			</li>
			<li><a href="#Customization">Customization</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Description"></a>Description</h2>
<p>This section first presents the objects representing the Component Family modeler. 
Then it describes how this object model view has been translated towards PLM objects 
based on PLM Core Modeler objects.</p>
<p>The component family modeler is not customizable itself but is dependant from 
the product modeler that has to be customized. Two business logics are used in Component 
Family to adapt to product modeler customization. We also detail here some conditions 
that have to be fulfilled so that Component Family modeler works well.</p>
<p>The Component Family modeler is a component generator (parts, assemblies). It 
uses a generic model definition (from Product modeler) with a table of values that 
contains its parametric variability.</p>
<p>Each row of this table defines an element of the family. This element will be 
a clone of the generic model, with different parameters values and without the design 
table feature.</p>
<p>All family elements generation are done under the identity of the family owner 
(through a PLM Batch). This ensures and easy management of needed rights, and also 
ensures that all the generated models belong to family owner.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Business Logic Description"></a>Business Logic</h3>
<p>The component family modeler enables &#8220;on-demand&#8221; generation of family elements 
models: family elements can be classified in catalog chapter before they are generated. 
When a user asks for the instantiation of such an element, this element is generated 
if it is not yet.</p>
<p>Because of the &#8220;on-demand&#8221; generation, the Component Family modeler needs to 
ensure that the generic model is not modified between two models generation (so 
that all family element models are built using the same generic model). This is 
realized through maturity rules: the generic model components must all be at a maturity 
state defined in the business logic. A command available in the Component Family 
editor eases the maturity change of those components. It uses the list of transitions 
declared in the above business logic to change the maturity of generic model components. 
This only works if the connected user has the necessary rights to apply all the 
transitions provided in the business logic.</p>
<p>The family elements generated models are created by a cloning operation of the 
generic model. This operation is done on the server side and it needs that clone 
requests contain the definition of the new identifier set of cloned components. 
Another business logic has been provided to perform this task.</p>
<p>To find out more about the associated Business Logics, see the
<em>How to Implement the Component Family Maturity Business Logic?</em>
and the
<em>How to Implement the Component Family Naming Business Logic? topics</em> [<a href="#References">1</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="PandO"></a>P&amp;O</h3>
<p>The family owner needs the following rights to perform following actions:</p>
<ul>
	<li>Cloning</li>
	<li>Versioning</li>
	<li>Put an extension on a product</li>
	<li>Change the maturity of the components belonging to the generic model (including 
	the table representation) from the initial maturity state to the target maturity 
	state defined in the business logic described above.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Customization"></a>Customization</h2>
<p>No customization is possible</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>Business Logic Openness Infrastructure Reference, in the DS Product 
			Documentation Portal, Client Collaborative Platform, Virtual Product 
			Modeling, VPM Knowledge Standardization, PLM Openings</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jul 2010]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop()</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
