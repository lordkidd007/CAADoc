<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Listing Documents Attached to a Product and Detaching Documents</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Listing Documents Attached to a Product and Detaching 
		Documents</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article demonstrates to an end user how to retrieve the list of 
		documents attached to a product selected interactively in VPM Editor and 
		then detaching the document from the product, using the CAA Exposition.</p>
		<p><strong>Note: Document Modeler is not RACE Compliant.</strong></p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAADocListAndDetachDocCmd Use Case</a>
				<ul>
					<li><a href="#What">What Does CAADocListAndDetachDocCmd Do</a></li>
					<li><a href="#How">How to Launch CAADocListAndDetachDocCmd</a></li>
					<li><a href="#Where">Where to Find the CAADocListAndDetachDocCmd 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The user learns the concepts listed below:</p>
<p>The CAA Exposition which enables to:</p>
<ul>
	<li>List the documents attached to Product.</li>
	<li>Detach the document from the Product.</li>
</ul>
<p>Along with this, the use case also demonstrates the following points:</p>
<ul>
	<li>A path element agent<em> CATPathElementAgent</em> type, to manage selection 
		of a PLM entity in the VPM Editor window.</li>
	<li>Retrieve the occurrence using the <em>CATIPLMNavOccurrence</em> interface.</li>
	<li>Get the reference related to the occurrence and obtain <em>CATIPLMComponent</em>.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAADocListAndDetachDocCmd Use Case</h2>
<p>CAADocListAndDetachDocCmd is a use case of the CAADocumentUseItf.edu framework 
that illustrates the PLMDocumentInterfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAADocListAndDetachDocCmd Do</h3>
<p>The goal of CAADocListAndDetachDocCmd Use Case is to deploy the Openness provided 
by CAA:</p>
<ul>
	<li>To list the documents attached to a product selected interactively in the 
		VPM Editor.</li>
	<li>To detach the first document attached to product.</li>
</ul>
<p>We work on an input model as depicted in the <a href="#Fig1">Fig. 1</a> that 
follows. The model will have to be explicitly created by the end-user.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1: Input Model</caption>
	<tr>
		<td>
		<img alt="Input Model" height="357" src="images/CAADocListAndDetachFirstDoc_1.jpg" width="449"/></td>
	</tr>
</table>
<p>The input model consists of a root product <strong>CAADocProdRoot---</strong>. 
The product is attached to the following documents which are not visible in VPM 
Editor. The documents attached to the Product are visible in VPM Navigator. Hence 
for clear understanding of Input Model, <strong>CAADocProdRoot---</strong> and the 
attached documents are shown in VPM Navigator.</p>
<ul>
	<li>Document <strong>Generic Document</strong>, of type &quot;<strong>Generic 
		Document</strong>&quot; (internal type <strong>Generic Document</strong>) 
		which contains <strong>Generic_Document.txt</strong>.</li>
	<li>Document <strong>CDM_Document</strong>, of type &quot;<strong>Document</strong>&quot; 
		(internal type <strong>Document</strong>) which contains <strong>CDM_Document.txt</strong>.</li>
</ul>
<p>The UC then lists the documents attached to the product and detaches the first 
document. This is accomplished with the command &quot;<strong>Listing Doc Attached 
To Product And Detaching First Doc</strong>&quot; inside the &quot;<strong>CAA Document 
VPM Editor addin toolbar</strong>&quot; toolbar, in <strong>a PLM Editor AddIn</strong> 
in <strong>CATIA.</strong> This <strong>AddIn</strong> (<strong>Toolbar</strong>) 
exists in the VPM Editor workbench as depicted in the <a href="#Fig2">Fig.2</a> 
that follows. The &quot;<strong>How to Launch</strong>&quot; section that follows 
details the steps involved to launch the VPM Editor workbench and access this toolbar.</p>
<table>
	<caption><a name="Fig2"></a>Fig. 2: Working with Documents Attached to Product 
	Toolbar</caption>
	<tr>
		<td>
		<img alt="Working with Documents Attached to Product Toolbar" height="90" src="images/CAADocListAndDetachFirstDoc_2.jpg" width="318"/></td>
	</tr>
</table>
<p>The UC execution proceeds as follows:</p>
<ul>
	<li>User activates the &quot;<strong>Listing Doc Attached To Product And Detaching 
		First Doc</strong>&quot; command.</li>
	<li>The command prompts user to select a Product, from the Product spec tree 
		in the VPM Editor session.</li>
	<li>User selects the Product, in the current case &quot;CAADocProdRoot&quot;. 
		Next a dialog box the follows appears.
		<table>
			<caption><a name="Fig3"></a>Fig.3: Listing Documents Dialog Box</caption>
			<tr>
				<td>
				<img alt="Listing Documents Dialog Box" height="149" src="images/CAADocUc_ListingFilesDlgBox.jpg" width="289"/>
				</td>
			</tr>
		</table>
		<p>*The dialog box depicted above [<a href="#Fig3">Fig. 3</a>] is only representative.</p>
		<p>The dialog box lists the documents attached to the product. The first 
		document from this list will then be detached. The number of documents attached 
		to the product before and after detaching the first document are displayed 
		in the command prompt.</p>
	</li>
	<li>
		<p>Propagate to save the changes.</p>
		<table>
			<caption><a name="Fig4"></a>Fig.4: Propagation</caption>
			<tr>
				<td>
				<img alt="Propagation" height="122" src="images/CAADocListAndDetachFirstDoc_3.jpg" width="139"/></td>
			</tr>
		</table>
		<p>Please note that when document get detached it also get deleted from 
		database, there is no need of explicit deletion. Above [<a href="#Fig4">Fig.4</a>] 
		shows the document deletion while propagation.</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAADocListAndDetachDocCmd</h3>
<p>To launch CAADocListAndDetachDocCmd:</p>
<ol>
	<li>Set the current folder to <code>InstallRootFolder\CAADoc/CAADocumentUseItf.edu</code>.</li>
	<li>Set up the build time environment and build the CAADocVPMEditorAddin.m and 
		CAADocVPMEditorCommands.m module&lt;/&gt; </li>
	<li>Edit the <code>CNext\code\dictionary\CAADocumentUseItf.edu.dico</code> dictionary 
		by uncommenting the #CAA# from the following lines:
		<pre class="code">#CAA# CAADocVPMEditorAdn  CATIPrsConfigurationAddin  libCAADocVPMEditorAddin
#CAA# CAADocVPMEditorAdn  CATIWorkbenchAddin         libCAADocVPMEditorAddin</pre>
	</li>
	<li>Install the dictionary and other resource files by executing <code>mkCreateRuntimeView</code>.</li>
	<li>Start CATIA by executing <code>mkrun</code>.</li>
	<li>Create the model as depicted in [<a href="#Fig1">Fig. 1</a>], and save it.</li>
	<li>Display the toolbar named &quot;<strong>CAA Document VPM Editor addin toolbar</strong>&quot;<strong>
		</strong>toolbar if necessary. It is depicted in the <a href="#Fig2">Fig. 
		2</a> above.</li>
	<li>The execution follows the steps listed in the &quot;<strong>What does the 
		UC do</strong>&quot; section above.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAADocListAndDetachDocCmd Code</h3>
<p>The CAADocListAndDetachDocCmd use case is located in the CAADocVPMEditorCommands.m 
module of the CAADocumentUseItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAADocumentUseItf.edu\CAADocVPMEditorCommands.m</code></p>
<p>For the Add-In, it includes the <em>CAADocVPMEditorAddin</em> class, located 
in the CAADocVPMEditorAddin.m module of the CAADocumentUseItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc/CAADocumentUseItf.edu\CAADocVPMEditorAddin.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are two steps in CAADocListAndDetachDocCmd:</p>
<ol>
	<li><a href="#Step1">Selecting a Product in the VPM Editor Spec Tree</a></li>
	<li><a href="#Step2">Retrieving the List of Documents Attached to the Product 
		and Detaching the Document</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Selecting a Product in the VPM Editor Spec Tree</h3>
<p>The UC being an interactive UC is primarily implemented as a StateCommand detailed 
in the UC [<a href="#References">2</a>]. Current UC explains the selection of Product 
in VPM Editor. However UC [<a href="#References">2</a>] explains the selection of 
Document in VPM Navigator. The current step involves selecting a Product in the 
VPM Editor spec tree. This is accomplished with path element agent (<code>_pCAAPathEltPLMRefOrInst</code>),
<em>CATPathElementAgent</em> type, which enables selection of a PLM Product in an 
VPM Editor window). This path element agent is intended to select PLM Product only.</p>
<p>The path element agent enables us to retrieve the selected object, as a <em>CATBaseUnknown</em> 
type (<code>pObj</code>). The <code>pObj</code> in turn helps us to obtain <em>CATIPLMNavOccurrence</em>, 
in order to browse the occurrences. Using <code>GetRelatedReference</code> method 
of <em>CATIPLMNavOccurrence</em>, an occurrence's reference can be retrieved.</p>
<p>This reference is used to get the PLM Component, <em>CATIPLMComponent</em> type 
and is a key input to the next step, which retrieves the list of documents attached 
to the selected product.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Retrieving the List of Documents Attached to the Product 
and Detaching the Document</h3>
<p>The <code>Run()</code> routine of the State Command class is detailed below.
</p>
<pre class="code">CATBoolean <strong>CAADocListAndDetachDocCmd::Run</strong>(void *data)
{
    HRESULT hr=E_FAIL;
     ...
    CATListPtrCATIAdpPLMIdentificator oDocumentIdentifiers;
    hr = <strong>PLMDocumentServices::ListDocuments(pPLMComp, oDocumentIdentifiers)</strong>;
     ...
    hr = <strong>PLMDocumentServices::DetachDocument(pPLMComp, oDocumentIdentifiers[1]);</strong>
...		
</pre>
<p>The <code>ListDocuments</code> static API of the <em>PLMDocumentServices</em> 
class lists the documents attached to a component. Its input argument are:</p>
<ul>
	<li><code>pPLMComp</code>, a <em>CATIPLMComponent</em>* type representing the 
		PLM entity in session.</li>
	<li><code>oDocumentIdentifiers</code>, a <em>CATListPtrCATIAdpPLMIdentificator</em> 
		type, which will contain the list of document identifiers.</li>
</ul>
<p>The <code>DetachDocument</code> static API of the <em>PLMDocumentServices</em> 
class detaches the document from a specified object. Its input argument are:</p>
<ul>
	<li><code>pPLMComp</code>, a <em>CATIPLMComponent</em>* type representing the 
		PLM entity in session.</li>
	<li><code>oDocumentIdentifiers[1]</code>, a <em>CATListPtrCATIAdpPLMIdentificator</em> 
		type, which will contain first document from the list of document identifiers.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case illustrates to an end user how to list the documents attached to 
the selected product and detach the first document from the list. It is an interactive 
UC, where the end-user selects a Product in the spec tree inside the VPM Editor 
window. The list of documents is then displayed in the dialog box and the first 
document from the list is detached.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAADocUcDisplayingAtrributes.htm">Displaying Document Properties</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History">History</a></h2>
<table class="history">
	<tr>
		<td>Version: 1 [July 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
