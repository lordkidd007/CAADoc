<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Uploading Files to a Document</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Uploading Files to a Document</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article demonstrates to an end user the steps involved to upload 
		a file under a Document using the CAA Exposition. It is an interactive UC, 
		which integrates an Add-In command inside the VPM Navigator. This command 
		prompts an end-user enables an end-user to upload a file so as to attach 
		it under a Document, in the Product spec tree inside the VPM Navigator.
		</p>
		<p><strong>Note : Document Modeler is not RACE Compliant.</strong></p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAADocDisplayAttributesCmd Use Case</a>
				<ul>
					<li><a href="#What">What Does CAADocDisplayAttributesCmd Do</a></li>
					<li><a href="#How">How to Launch CAADocDisplayAttributesCmd</a></li>
					<li><a href="#Where">Where to Find the CAADocDisplayAttributesCmd 
						Code</a></li>
				</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>The user learns the concepts listed below:</p>
<ul>
	<li>An aquisition agent, a <em>CATPLMNavPropertiesAcquisition</em> type, to 
		manage selection of a PLM entity in the immersive window (Search result 
		and Explorer window).</li>
	<li>The CAA Exposition which enables uploading a file so as to attach it under 
		a Document.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAADocUploadingFilesCmd Use Case</h2>
<p>CAADocUploadingFilesCmd is a use case of the CAADocumentUseItf.edu framework 
that illustrates the PLMDocumentInterfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAADocUploadingFilesCmd Do</h3>
<p>The goal of CAADocUploadingFilesCmd Use Case is to deploy the Openness provided 
by CAA, to upload a file in your local folder, to attach it to a Document selected 
interactively in the VPM Navigator. We work on an input model as depicted in the 
Fig. that follows. The model will have to be explicitly created by the end-user.</p>
<table>
	<caption><a name="Fig1"></a>Fig. 1 Input Model</caption>
	<tr>
		<td>
		<img alt="Input Model" height="386" src="images/CAADocUc_InputModel.jpg" width="542"/></td>
	</tr>
</table>
<p>The input model consists of a root product <strong>CAADocProdRoot---</strong>. 
The product is attached to</p>
<ul>
	<li>Document <strong>Generic_Document</strong>, of type &quot;<strong>Generic 
		Document</strong>&quot; (internal type <strong>Generic Document</strong>) 
		which contains <strong>Generic_Document.txt</strong></li>
	<li>Document <strong>CDM_Document</strong>, of type &quot;<strong>Document</strong>&quot; 
		(internal type <strong>CDM_Document</strong>) which contains <strong>CDM_Document.txt</strong></li>
</ul>
<p>The UC then uploads files under the Document attached to this model. This is 
accomplished with the command &quot;<strong>Uploading Files on selected Document</strong>&quot; 
inside the &quot;<strong>Working with Files attach to Document</strong>&quot; toolbar, 
in <strong>a PLM Navigator AddIn</strong> in <strong>CATIA.</strong> This
<strong>AddIn</strong> (<strong>Toolbar</strong>) exists in the VPM Navigator workbench 
as depicted in the Fig. that follows. The &quot;<strong>How to Launch</strong>&quot; 
section that follows details the steps involved to launch the VPM Navigator workbench 
and access this toolbar.</p>
<table>
	<caption><a name="Fig2"></a>Fig. 2: Working with Files attached to a Document 
	Toolbar</caption>
	<tr>
		<td>
		<img alt="Working with Files Attached to a Document Toolbar" height="174" src="images/CAADocUc_UploadCommand.jpg" width="209"/></td>
	</tr>
</table>
<p>The UC execution proceeds as follows:</p>
<ul>
	<li>User activates the &quot;<strong>Uploading Files on selected document</strong>&quot; 
		command</li>
	<li>The command prompts user to select a document, from the Product spec tree 
		in the Explorer (VPM Navigator) session. A document of type &quot;<strong>Generic 
		Document</strong>&quot; and &quot;<strong>Document</strong>&quot; are the 
		only two types recognized by the exposed API</li>
	<li>User selects a document, in the current case &quot;Generic Document&quot;, 
		of type &quot;<strong>Generic Document</strong>&quot;, the document to which 
		the file uploaded will be attached. Next a dialog box the follows appears.
		<table>
			<caption><a name="Fig3"></a>Fig. 3: Upload Files Dialog Box</caption>
			<tr>
				<td>
				<img alt="Upload Files Dialog Box" height="134" src="images/CAADocUc_UploadCommandDlgBox.jpg" width="324"/>
				</td>
			</tr>
		</table>
		<p>The title of this dialog box is the name of the selected Document to 
		which our file will be uploaded. User will enter the exact path of the file 
		for upload and comments if any. Finally user clicks on the &quot;<strong>Upload 
		File</strong>&quot; button. This results in the invocation of the CAA Exposed 
		API, responsible for actually uploading the file to a document.</p>
	</li>
	<li>If the Upload succeeds, it results in a dialog box that appears below.
		<table>
			<caption><a name="Fig4"></a>Fig. 4: Success to Upload</caption>
			<tr>
				<td>
				<img alt="Fig.4" height="126" src="images/CAADocUcUploadingFiles_Image_Success.jpg" width="212"/></td>
			</tr>
		</table>
		<p>The resulting model is displayed below.</p>
		<table>
			<caption><a name="Fig5"></a>Fig. 5</caption>
			<tr>
				<td>
				<img alt="Fig.5" height="428" src="images/CAADocUc_OutputModel.jpg" width="566"/>
				</td>
			</tr>
		</table>
		You will find our uploaded document exists in the list of documents attached 
		to the Document &quot;<strong>Generic Document</strong>&quot;.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAADocUploadingFilesCmd</h3>
<p>To launch CAADocUploadFilesCmd :</p>
<ol>
	<li>Set the current folder to <code>InstallRootFolder\CAADoc\CAADocumentUseItf.edu</code>.</li>
	<li>Set up the build time environment and build the CAADocNavPropAcqAgentAddin.m 
		and CAADocNavCommmands.m module.</li>
	<li>Edit the <code>CNext\code\dictionary\CAADocumentUseItf.edu.dico</code> dictionary 
		by uncommenting the #CAA# from the following lines:
		<pre class="code">#CAA# CAADocNavPropAcqAgentAddin CATIImmNavAddin     libCAADocNavPropAcqAgentAddin
#CAA# CAADocNavPropAcqAgentAddin CATIWorkbenchAddin  libCAADocNavPropAcqAgentAddin</pre>
	</li>
	<li>Install the dictionary and other resource files by executing <code>mkCreateRuntimeView</code>.</li>
	<li>Start CATIA by executing <code>mkrun</code>.</li>
	<li>Create the model as depicted in [<a href="#Fig1">Fig. 1</a>], save it and 
		load it in the VPM Navigator session.</li>
	<li>Display the toolbar named &quot;<strong>Working with Files attached to Document
		</strong>&quot; toolbar if necessary. It is depicted in 
		the <a href="#Fig2">Fig. 2</a>. above.</li>
	<li>Hereafter, the execution follows the steps listed in the &quot;<strong>What 
		does the UC do</strong>&quot; section above.</li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAADocUploadFilesCmd Code</h3>
<p>The CAADocUploadingFilesCmd use case is located in the CAADocNavCommmands.m module 
of the CAADocumentUseItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAADocumentUseItf.edu\CAADocNavCommmands.m</code></p>
<p>For the Add-In, it includes the <em>CAADocNavPropAcqAgentAdn</em> class, located 
in the CAADocNavPropAcqAgentAddin.m module of the CAADocumentUseItf.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAADocumentUseItf.edu\CAADocNavPropAcqAgentAddin.m</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>There are two parts in CAADocUploadingFilesCmd:</p>
<ol>
	<li><a href="#Step1">Selecting a Document in the VPM Navigator Spec Tree</a></li>
	<li><a href="#Step2">Uploading a File Attached with a Document</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Selecting a Document in the VPM Navigator Spec Tree</h3>
<p>This step involves selecting a Document from the Product spec tree inside the 
VPM Navigator. This is accomplished withtwo acquisition agents (<code>_paNavAcqAgentCDMDoc
</code>or<code>_aNavAcqAgentGenDoc</code>), <em>CATPLMNavPropertiesAcquisition</em> 
type, which enables selection of a PLM entity in an immersive window (Search Result 
window and Explore window). These Acquisition agents allow to select objects of 
type Generic Document or Document (Document) only.</p>
<p>The agent also enables us to aquire the properties of the selected entity. As 
a result, we retrieve the Identificator of the selected PLM entity, as a <em>CATIAdpPLMIdentificator</em> 
type (<code>_piAdpIdOnSelectedDoc</code>).</p>
<p>We also retrieve the Knowledge Type of the selected PLM entity, and confirm if 
the Document type is either <strong>Generic Document</strong> or Document (<strong>Document</strong>), 
since the CAA Exposition to upload the files attached to a document works only for 
these types.</p>
<p>This step is further explained in the UC [<a href="#References">2</a>].</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Uploading a File Attached with a Document</h3>
<p>A file in a local folder of the user system is uploaded when the user clicks 
on the &quot;<strong>Upload File</strong>&quot; button in the dialog box depicted 
in [<a href="#Fig3">Fig. 3</a>] above. This event invokes the <code>UploadFile</code>() 
API of the <em>CAADocUploadFilesDlg</em> class, which represents the dialog box.</p>
<pre class="code">void <strong>CAADocUploadFilesDlg::UploadFile</strong>(CATCommand* iSendingCommand, 
				CATNotification* iSentNotification, 
				CATCommandClientData iUsefulData)
{
     CATUnicodeString iUploadFilePath(&quot;&quot;);
     iUploadFilePath=_pFilePathArea-&gt;GetText();
     CATUnicodeString UploadfileComment(&quot;&quot;);
     UploadfileComment=_pUploadFileComment-&gt;GetText();
                                                           
     <strong>PLMIDocument</strong> * piDocumentOnSelectedDoc =NULL;
     HRESULT hr= PLMDocumentServices::<strong>GetDocument</strong>(_piAdpIdOnSelectedDoc, piDocumentOnSelectedDoc );
     ...
     hr = piDocumentOnSelectedDoc-&gt;<strong>CreateFile</strong>(iUploadFilePath, UploadfileComment);
    ...
</pre>
<p>The <code>GetDocument</code> static API of the <em>PLMDocumentServices</em> class 
loads document in session using identificator (<code>_piAdpIdOnSelectedDoc</code>) 
and returns document object (<code>piDocumentOnSelectedDoc</code> of type PLMIDocument*)</p>
<p>The <code>CreateFile</code> method of the <em>PLMIDocument</em> uploads (Creates) 
a file attaching it to a Document, precondition being a file with the same name 
must not already exist. Its input argument are:</p>
<ul>
	<li><code>iUploadFilePath</code>, a <em>CATUnicodeString</em> type representing 
		the full path (including the file name) from which the file will be uploaded. 
		The file attached to the Document will have the same name as that of the 
		uploaded File. If a file with that name, already exists attached to the 
		document, an error is returned.</li>
	<li><code>UploadFileComment</code>, a <em>CATUnicodeString</em> type representing 
		the comment associated with the file (optional).</li>
</ul>
<p>The API recognizes documents of type &quot;<strong>Generic Document</strong>&quot; 
and &quot;<strong>Document</strong>&quot;.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case illustrates to an end user the steps involved to deploy the CAA 
Exposition which enables uploading a file attached to a Document (Generic Document 
and Document type). This is realized with the <code>UploadFileOnDocument</code>() 
static API exposed by the <em>PLMDocumentServices</em> class.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td><a href="CAADocUcDisplayingAtrributes.htm">Displaying Document Properties</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History">History</a></h2>
<table class="history">
	<tr>
		<td>Version: 1 [Feb 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
