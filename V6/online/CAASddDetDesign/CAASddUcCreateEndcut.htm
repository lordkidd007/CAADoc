<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating Endcut</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Endcut</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
				explains how to create an Endcut in SDD.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASddCreateEndcut Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddCreateEndcut Do</a></li>
				<li><a href="#How">How to Launch CAASddCreateEndcut</a></li>
				<li><a href="#Where">Where to Find the CAASddCreateEndcut Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>In this use case, you will learn how to create an Endcut on an already 
existing profile.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddCreateEndcut Use Case</h2>
<p>CAASddCreateEndcut.m is a use case of the CAAStructureDetDesignDoc.edu framework 
that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddCreateEndcut Do</h3>
<p>This use case:</p>
<ul>
  <li>Illustrates how to create an Endcut on an existing profile.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddCreateEndcut</h3>
<p>Please refer to <a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a>.</p>
<p>The executable name is <code>CAASddCreateEndcut</code>.</p>
<pre class="code"><em>mktun -c &quot; CAASddCreateEndcut Repository Server User Password SecutityCtx Environment PLM_ExternalID SaveORNot&quot;</em></pre>

<p>* The input model is retrieved by importing the following files:</p>
<p>
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSteel_A100.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddWT18x179.5.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCreateEndcut.3dxml</code><br />
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>The last 3D XML file contains the root Product&nbsp; Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>V_Name</strong></code></a>:
    <code>SddProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---.000</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddCreateEndcut Code</h3>
<p>The CAASddCreateEndcut sample is made of a single class named CAASddCreateEndcut 
located in the CAASddCreateEndcut.m module of the CAAStructureDetDesign.edu 
framework: <code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\CAASddCreateEndcut.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATISddUseProductMember</em></td>
		<td>Interface on product node of an SDD Member.</td>
	</tr>
	<tr>
		<td><em>CATISddUseMember</em></td>
		<td>Interface used to access properties of SDD Member.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseEndcutMngt</em></td>
		<td>Interface for creation, retrieval &amp; deletion of Endcuts on a profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseDetailFeature</em></td>
		<td>Interface for instantiation &amp; modification of detail features(endcuts, slots &amp; openings).</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>In this use case there are 6 logical steps in Main:</p>
<table class="fill">
	<tr><th>#</th><th>Step</th>	</tr>
	<tr><td>1</td><td><a href="#Step1">Opening the Model</a></td>	</tr>
	<tr><td>2</td><td><a href="#Step2">Navigating to Second Member under SddProduct</a></td>	</tr>
	<tr><td>3</td><td><a href="#Step3">Creating two Endcuts; One on Either End</a></td>	</tr>
	<tr><td>4</td><td><a href="#Step4">Setting the Endcut Parameters</a></td>	</tr>
	<tr><td>5</td><td><a href="#Step5">Updating</a></td>	</tr>
	<tr><td>6</td><td><a href="#Step6">Disconnecting and Deleting the Session</a></td>	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the Model</h3>
<p>This step is detailed in steps 1 to 7 in the
<a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a> page. The only one line code we have in the use case is</p>
<pre class="code">...
rc = CAASddGeneralServices::OpenProduct( argv[7], "", spRootProductOccurrence, rootBag );
...</pre>
<p>
The above code opens a product name specified as PLM_ExternalID, the 7th input to CAASddCreateEndcut.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Navigating to Second Member under SddProduct</h3>
<p>In the model, there are two Members under the root node 'SddProduct'. We use the first one as reference Member for comparison with Endcut creation result. Thus, we navigate to second Member. This Member is the one on which we operate.</p>
<pre class="code">...
CATListPtrCATIPLMNavOccurrence ListOfChildOccurrences;
spRootProductOccurrence-&gt;ListChildren( ListOfChildOccurrences );
int nlistOfChildOccurrencesSize = ListOfChildOccurrences.Size();
CATListValCATBaseUnknown_var ListOfProductMembers;
for( int i = 1; i &lt;= nlistOfChildOccurrencesSize; i++ )
{
  CATISddUseProductMember_var spProductMember = ListOfChildOccurrences[ i ];
  if( !!spProductMember )
    ListOfProductMembers.Append( spProductMember );
}
int nlistOfProductMembersSize = ListOfProductMembers.Size();
if( nlistOfProductMembersSize &lt; 2 ) { cout &lt;&lt; &quot;Unable to locate any SDD member product under the root product &quot; &lt;&lt; argv[7] &lt;&lt; endl; return 152; }

...</pre>
<pre class="code">...
CATISddUseProductMember_var spMemberPrd = ListOfProductMembers[ 2 ];
CATISddUseMember_var spMember;
if( !!spMemberPrd )
  spMemberPrd-&gt;GetMember( spMember );
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating two Endcuts; One on Either End</h3>
<p>The <code>CATIStrUdeEndcutMngt</code> is available on all profiles(stiffeners, stiffeners on free edge, members). This interface has methods for creation, retrieval and deletion of Endcuts.</p>
<pre class="code">...
CATIStrUseEndcutMngt_var spEndcutMngt = spMember;
if( spEndcutMngt == NULL_var )
  return 200;

CATIMmiMechanicalFeature_var spStartEndcut, spEndEndcut;
spEndcutMngt-&gt;AddEndcut( catStrProfileStart, spStartEndcut );
spEndcutMngt-&gt;AddEndcut( catStrProfileEnd, spEndEndcut );
if( spStartEndcut == NULL_var )         return 201;
if( spEndEndcut == NULL_var )           return 202;

CATIStrUseDetailFeature_var spDFStart = spStartEndcut, spDFEnd = spEndEndcut;
if( spDFStart == NULL_var )
  return 203;
if( spDFEnd == NULL_var )
  return 204;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Endcut Parameters</h3>
<p>We instantiate two different Endcuts for both ends of the Member to make the second Member resemble the first(reference) Member.</p>
<p>For the start Endcut, we select type &quot;<code>WT_snipe_radius</code>&quot; and set its radius parameter to &quot;<code>250 mm</code>&quot;.</p>
<pre class="code">...
rc = spDFStart-&gt;InitByName("WT_snipe_radius");
if( rc )          return 205;
rc = spDFStart-&gt;SetType( "SNIPE" );
if( rc )          return 206;
CATListValCATICkeParm_var ListOfParamsStart;
rc = spDFStart-&gt;GetParameters( ListOfParamsStart );
if( ( ListOfParamsStart.Size() &lt; 1 ) || rc )          return 207;
CATICkeParm_var spRadiusParam = ListOfParamsStart[ 1 ];
spRadiusParam-&gt;ValuateReal( "250mm" );
...</pre>
<p>For the end Endcut, we select type &quot;<code>WT_snipe_straight</code>&quot; and set its length parameter to &quot;<code>250 mm</code>&quot; and its angle parameter to &quot;<code>45 deg</code>&quot;.</p>
<pre class="code">...
rc = spDFEnd-&gt;InitByName("WT_snipe_straight");
if( rc )          return 208;
rc = spDFEnd-&gt;SetType( "SNIPE" );
if( rc )          return 209;
CATListValCATICkeParm_var ListOfParamsEnd;
rc = spDFEnd-&gt;GetParameters( ListOfParamsEnd );
if( ( ListOfParamsEnd.Size() &lt; 2 ) || rc )          return 210;
CATICkeParm_var spAgleParam = ListOfParamsEnd[ 1 ], spLengthParam = ListOfParamsEnd[ 2 ];
spAgleParam-&gt;ValuateReal( "45deg" );
spLengthParam-&gt;ValuateReal( "250mm" );
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Updating</h3>
<p>Update All is launched on the newly created endcut on the member product to update it.</p>
<pre class="code">
if (FAILED(CAASddModelServices::UpdateAll(spRootProductOccurrence))) { FAILURE; return 175; }
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Disconnecting and Deleting the Session</h3>
<p>Refer to the last step in the <a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a> page.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create endcut.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
