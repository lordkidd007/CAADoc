<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Creating an SDD Stiffener</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating an SDD Stiffener</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to create a SDD stiffener.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#BeforeStarting">Before Starting</a></li>
			<li><a href="#UseCase">The CAASddCreateStiffener Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddCreateStiffener Do</a></li>
				<li><a href="#How">How to Launch CAASddCreateStiffener</a></li>
				<li><a href="#Where">Where to Find the CAASddCreateStiffener Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>In this case, you will learn how to create a stiffener.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="BeforeStarting"></a>Before Starting</h2>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddCreateStiffener Use Case</h2>
<p>CAASddCreateStiffener.m is a use case of the CAAStructureDetDesignDoc.edu framework 
that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddCreateStiffener Do</h3>
<p>This use case:</p>
<ul>
  <li>Creates a stiffener taking three plates as support.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddCreateStiffener</h3>
<p>Please refer to <a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a>.</p>
<p>The executable name is <code>CAASddCreateStiffener </code>.</p>
<pre class="code"><em>mkrun -c &quot; CAASddCreateStiffener Repository Server User Password SecutityCtx Environment PLM_ExternalID&quot;</em></pre>

<p>* The input model is retrieved by importing the following files:</p>
<p>
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml</code></p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>The last 3D XML file contains the root Product&nbsp; Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>V_Name</strong></code></a>:
    <code>MySDDProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---.000</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddCreateStiffener Code</h3>
<p>The CAASddCreateStiffener sample is made of a single source code file named CAASddCreateStiffener.cpp
located in the CAASddCreateStiffener.m module of the CAAStructureDetDesign.edu 
framework:
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\CAASddCreateStiffener.m\</code>
where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATIStrUseStiffenerMngt</em></td>
		<td>Interface used to create a stiffener.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseProfileType</em></td>
		<td>Interface used to define the type of a profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseProfileSurfSurf</em></td>
		<td>Interface used to manage the geometrical support of a profile defined by two surfaces,
		such as stiffeners using a surface as support.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseSectionMngt</em></td>
		<td>Interface used to define the section of a profile and its positioning (anchor point,
		translation, rotation).</td>
	</tr>
	<tr>
		<td><em>CATIStrUseProfileLimitMngt</em></td>
		<td>Interface used to define the limits of a profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCategoryMngt</em></td>
		<td>Interface used to define the category of an object.</td>
	</tr>
		<tr>
		<td><em>CATIStrUseMaterialMngt</em></td>
		<td>Interface used to define the material applied on an object.</td>
	</tr>
	<tr>
		<td><em>CATISddUsePlateSupportMngt</em></td>
		<td>Interface used to set additional plates as support of a stiffener.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>In this use case there are 9 logical steps in Main:</p>
<table class="fill">
	<tr><th>#</th><th>Step</th></tr>
	<tr><td>1</td><td><a href="#Step1">Opening the model</a></td></tr>
	<tr><td>2</td><td><a href="#Step2">Creating the Stiffener Product</a></td></tr>
	<tr><td>3</td><td><a href="#Step3">Defining Plate and Web Support</a></td></tr>
	<tr><td>4</td><td><a href="#Step4">Defining and Positioning the Section</a></td></tr>
	<tr><td>5</td><td><a href="#Step5">Defining Material</a></td></tr>
	<tr><td>6</td><td><a href="#Step6">Defining Additional Plates</a></td></tr>
	<tr><td>7</td><td><a href="#Step7">Setting Explicit Limits</a></td></tr>
	<tr><td>8</td><td><a href="#Step8">Updating</a></td></tr>
	<tr><td>9</td><td><a href="#Step9">Disconnecting and Deleting the Session</a></td></tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the Model</h3>
<p>This step is detailed in steps 1 to 7 in the
<a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a> page.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating the Stiffener Product</h3>
<p>Using <code>CATIStrUseStiffenerMngt</code> on the root product occurrence, it is possible to create a stiffener
product and its associated stiffener feature.</p>
<pre class="code">
CATIStrUseStiffenerMngt_var spStiffenerMngt = spRootProductOccurrence;
if (!spStiffenerMngt) { return 100; }

CATISddUseProductStiffener_var spProductStiffener;
CATBaseUnknown_var spProductStiffenerBU;
if (FAILED(spStiffenerMngt-&gt;AddStiffener(spProductStiffenerBU)) || !(spProductStiffener = spProductStiffenerBU))
{ cout &lt;&lt; "Cannot create a stiffener" &lt;&lt; endl; FAILURE; return 153; }

CATISddUseStiffener_var spStiffener;
if (FAILED(spProductStiffener-&gt;GetStiffener(spStiffener)) || !spStiffener)
{ cout &lt;&lt; "Cannot retrieve the stiffener feature" &lt;&lt; endl; FAILURE; return 154; }
</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Defining Plate and Web Support</h3>
<p>Two profile types qualify as stiffener:</p>
<ul>
  <li>Surface-Surface: The profile's trace is defined as the intersection of two surfaces: the plate's molded surface
  and a surface as web support.</li>
  <li>Curve: The profile's trace is a curved selected as web support, the plate's molded surface is used as reference
  for the orientation of the profile section.</li>
</ul>

<p>The first step is to define the type of profile type using <code>CATIStrUseProfileType</code>, depending on the
nature of the web support.</p>
<pre class="code">
CATIStrUseProfileType_var spProfileType = spStiffener;
if (!spProfileType) { FAILURE; return 155; }
if (FAILED(spProfileType-&gt;SetType(catStrProfileSurfSurf))) { FAILURE; return 156; }
// Use catStrProfileCrv if the web support is a curve.
</pre>

<p>The support definition for a surface-surface stiffener is done with <code>CATIStrUseProfileSurfSurf</code>.
For a stiffener on curve, it is done with <code>CATIStrUseProfileCrv</code>. Call of <code>GetFirstOffset</code>
and <code>GetSecondOffset</code> (or <code>GetCurveOffset</code> for <code>CATIStrUseProfileCrv</code>) is mandatory
to intialize the parameter, even when offsets are 0. Failure to define them may result in errors upon update.</p>
<pre class="code">
// -- Then we have to set the first plate as first support
CATIStrUseProfileSurfSurf_var spProfileSurfSurf = spStiffener;
if (!spProfileSurfSurf) { FAILURE; return 157; }
CATISddUseProductPlate_var spDeck1Product = listOfPlateProducts[1];
CATISddUsePlate_var spDeck1;
if (!spDeck1Product || FAILED(spDeck1Product-&gt;GetPlate(spDeck1)) || !spDeck1) { FAILURE; return 158; }
if (FAILED(spProfileSurfSurf-&gt;SetFirstSurface(spDeck1, spDeck1Product, spProductStiffener))) { FAILURE; return 159; }

// -- Then, the second support
CATIPLMNavOccurrence_var spCGROccurrence;
if (FAILED(CAASddNavigationServices::FindProductFromTitle(spRootProductOccurrence, "Reference Planes System Long Normal", spCGROccurrence)) 
     || !spCGROccurrence) { FAILURE; return 160; }
CATIMmiMechanicalFeature_var spMechanicalPart, spLONG1;
if (FAILED(CAASddNavigationServices::GetMechanicalPartFromProduct(spCGROccurrence, spMechanicalPart)) || !spMechanicalPart) { FAILURE; return 160; }
if (FAILED(CAASddNavigationServices::GetReferencePlaneFromAlias(spMechanicalPart, "LONG.1", spLONG1)) || !spLONG1) { FAILURE; return 160; }
if (FAILED(spProfileSurfSurf-&gt;SetSecondSurface(spLONG1, spCGROccurrence, spProductStiffener))) { FAILURE; return 161; }

// -- Then initialize the offsets
CATICkeParm_var spDummyParm;
spProfileSurfSurf-&gt;GetFirstOffset(spDummyParm);
spProfileSurfSurf-&gt;GetSecondOffset(spDummyParm);
</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Defining and Positioning the Section</h3>
<p>Regardless of the type of the stiffener, section definition and positioning is done with
<code>CATIUseStrSectionMngt</code>. As in the previous step, parameter initialization is required, even if the default value (0)
is not modified.</p>
<pre class="code">
  // -- Then the section, anchor point, plate side, flange orientation, angle mode.
  CATIStrUseSectionMngt_var spSectionMngt = spStiffener;
  if (!spSectionMngt) { FAILURE; return 162; }
  if (FAILED(spSectionMngt-&gt;SetSectionName("L9x4x1"))) { FAILURE; return 163; }
  if (FAILED(spSectionMngt-&gt;SetAnchorPoint("catStrWebSideLeft"))) { FAILURE; return 164; }
  if (FAILED(spSectionMngt-&gt;SetWebOrientation())) { FAILURE; return 165; } // No input means that the orientation keyword that is set is computed from the molded conventions
  if (FAILED(spSectionMngt-&gt;SetFlangeOrientation())) { FAILURE; return 166; }
  if (FAILED(spSectionMngt-&gt;SetAngleMode(catStrNormalToPlate))) { FAILURE; return 167; }
  // -- -- need to make those calls to initialize parameters, even if they are not used
  spSectionMngt-&gt;GetAngle(spDummyParm);
  spSectionMngt-&gt;GetWebAnchorPointOffset(spDummyParm);
  spSectionMngt-&gt;SetWebAnchorPointOffsetMode(catStrPlateFace);
  spSectionMngt-&gt;GetFlangeAnchorPointOffset(spDummyParm);
</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Defining Material</h3>
<p>Material is defined with <code>CATIStrUseMaterialMngt</code>. Material name is not case sensitive,
but it is <strong>strongly recommended</strong> to use the original casing.</p>
<pre class="code">
CATIStrUseMaterialMngt_var spMaterialMngt = spProductStiffener;
if (!spMaterialMngt) { FAILURE; return 168; }
if (FAILED(spMaterialMngt-&gt;SetMaterial("Steel A42"))) { FAILURE; return 169; }
</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Defining Additional Plates</h3>
<p>Given the fact that it is possible to weld a stiffener on multiple plates, it is possible to set additional plates
as a support of a stiffener.</p>
<p>Definition is done with <code>CATISddUseSupportPlateMngt</code>. Only additional plates are set with this interface,
the first ("reference") plate has been defined with the call of <code>CATIStrUseProfileSurfSurf::SetFirstSurface</code>
or <code>CATIStrUseProfileCrv::SetReference</code>.</p>
<pre class="code">
CATISddUseSupportPlateMngt_var spSupportPlateMngt = spStiffener;
if (!spSupportPlateMngt) { FAILURE; return 170; }
isize = listOfPlateProducts.Size();
for (i = 2 ; i &lt;= isize ; ++i)
{
  CATISddUseProductPlate_var spSecondaryProductPlate = listOfPlateProducts[i];
  if (!spSecondaryProductPlate) { FAILURE; return 171; }
  CATISddUsePlate_var spSecondaryPlate;
  spSecondaryProductPlate-&gt;GetPlate(spSecondaryPlate);
  if (!spSecondaryPlate) { FAILURE; return 171; }
  if (FAILED(spSupportPlateMngt-&gt;AddOtherSupportPlate(spSecondaryPlate, spSecondaryProductPlate, spProductStiffener))) { FAILURE; return 172; }
}
</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Setting Explicit Limits</h3>
<p>Unlike in Structure Functional Design, in which a stiffener is basically limited by the delimited molded surface
of the support panel, stiffeners of Structure (Detailed) Design are using the unlimited molded surface of its reference
plate. Thus, if no limit is applied on the stiffener, it may end up being infinite.</p>
<p><code>CATIStrUseProfileLimitMngt::ExplicitLimits</code> considers the union of the support plates' delimited molded
surfaces and set the appropriate limit. This operation is not associative: change of limits in one of the underlying
plates does not trigger automatic profile limit change.</p>
<pre class="code">
CATIStrUseProfileLimitMngt_var spLimitMngt = spStiffener;
if (!spLimitMngt) { FAILURE; return 173; }
if (FAILED(spLimitMngt-&gt;ExplicitLimits())) { FAILURE; return 174; }
</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Updating</h3>
<p>Update All is launched on the newly created stiffener product to update it.</p>
<pre class="code">
if (FAILED(CAASddModelServices::UpdateAll(spRootProductOccurrence))) { FAILURE; return 175; }
</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Disconnecting and Deleting the Session</h3>
<p>Refer to the last step in the <a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a> page.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create SDD stiffeners.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Sep 2013]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>

