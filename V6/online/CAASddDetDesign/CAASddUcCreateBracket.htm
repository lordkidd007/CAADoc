<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating an SDD Bracket</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating an SDD Bracket</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to create bracket.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASddCreateBracket Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddCreateBracket Do</a></li>
				<li><a href="#How">How to Launch CAASddCreateBracket</a></li>
				<li><a href="#Where">Where to Find the 
				CAASddCreateBracket 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA SDD(Structure Detail Design) Interfaces. Its main intent is to allow you to create 
parametric plate.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddCreateBracket Use Case</h2>
<p>CAASddCreateContourBased.m is a use case of the CAAStructureDetDesignDoc.edu framework 
that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddCreateBracket Do</h3>
<p>The goal of CAASfdCreateBracket use case is to show how to create  
a contour based plate.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddCreateBracket</h3>
<p>To launch CAASddCreateBracket, you will need to set up the build time 
environment, then compile CAASddCreateBracket along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mktun -c &quot;</em>CAASddCreateBracket<em> Repository Server User Password SecutityCtx Environment PLM_ExternalID&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>PLM1<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>User</th>
		<td>The user name.</td>
	</tr>
	<tr>
		<th>Password</th>
		<td>The user password to authenticate the user.</td>
	</tr>
	<tr>
		<th>SecurityCtx</th>
		<td>A string representing the security context (Role.Organization.Project). 
		Choose Role as Designer.</td>
	</tr>
	<tr>
		<th>Environment</th>
		<td>A PLM environment.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The value of the <code>PLM_ExternalID</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>
CAASddCreateBracket.3dxml</strong>
    file from the  <strong>CAAStructureDetDesign.edu</strong> framework.
</p>
<p>
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCreateBracket.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\SAMPLE_RCO_2LIMITS_CURVE.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSteel_A42.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddWT18x179_5.3dxml</code><br />
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>PLM_ExternalID</strong></code></a>:
    <code>SddProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddCreateBracket Code</h3>
<p>The CAASddCreateBracket sample is made of a single class named 
CAASddCreateBracket 
located in the CAASddCreateBracket.m module of the CAAStructureDetDesign.edu 
framework: <code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\CAASddCreateBracket.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATCkePLMNavPublicServices</em></td>
		<td>Class used to retrieve customized reference of the product.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATIPsiRepresentationLoadMode</em></td>
		<td>Class to manage Opening of the product and switching to edit mode.</td>
	</tr>
	<tr>
		<td><em>CATISddUseProductFactory</em></td>
		<td>Interface to create SDD Product Plate/Member/Bracket.</td>
	</tr>
	<tr>
		<td>CATISddUseProductBracket</td>
		<td>Interface to create SDD Contour Based.</td>
	</tr>
	<tr>
		<td><em>CATISddUseBracket</em></td>
		<td>Interface for SDD bracket.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCategoryMngt</em></td>
		<td>Interface to get/set Category.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseSketchBasedDMSMngt</em></td>
		<td>Interface to manage the DMS and the reference sketch.</td>
	</tr>
	<tr>
		<td><em>CATIStrUsePanelSurf</em></td>
		<td>Interface for set/get panel support.</td>
	</tr>
	<tr>
		<td><em>CATIStrUsePanelLimitMngt</em></td>
		<td>Interface dedicated to set/get limits for panel.</td>
	</tr>
	<tr>
		<td><em>CATIStrUsePlate</em></td>
		<td>Interface for Str Plate.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseStiffenerMngt</em></td>
		<td>Interface dedicated to manage stiffener.</td>
	</tr>
	<tr>
		<td><em>CATIStrUsePlatesMngt</em></td>
		<td>Interface dedicated to manage plates.</td>
	</tr>
	</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are 21 logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Setting the Connection Parameters</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Setting the Current Environment to &quot;envToUse&quot; 
		from Input</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Retrieving the Environment</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Retrieving the Customized Reference of the Product 
		Modeler</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Opening the &quot;SddProduct&quot; Model (arg[7])</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Opening the Product</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Getting CATIMmiusePrtPart</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Getting Occurrence from Reference</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step11">Getting SDD Product Factory</a></td>
	</tr>
	<tr>
		<td>12</td>
		<td><a href="#Step12">Creating SDD Product Bracket</a></td>
	</tr>
	<tr>
		<td>13</td>
		<td><a href="#Step13">Getting Bracket</a></td>
	</tr>
	<tr>
		<td>14</td>
		<td><a href="#Step14">Setting Category of SDD Bracket</a></td>
	</tr>
	<tr>
		<td>15</td>
		<td><a href="#Step15">Setting Support of the Plate</a></td>
	</tr>
	<tr>
		<td>16</td>
		<td><a href="#Step16">Setting Material</a></td>
	</tr>
		<tr>
		<td>17</td>
		<td><a href="#Step17">Setting Thickness</a></td>
	</tr>

	<tr>
		<td>18</td>
		<td><a href="#Step18">Setting Reference Sketch</a></td>
	</tr>

	<tr>
		<td>19</td>
		<td><a href="#Step19">Updating Bracket</a></td>
	</tr>
	<tr>
		<td>20</td>
		<td><a href="#Step20">Saving Created Bracket</a></td>
	</tr>

	<tr>
		<td>21</td>
		<td><a href="#Step21">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (8 != argc)
{
  cout &lt;&lt; endl;
  cout &lt;&lt;&quot;CAASddCreateBracket &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;Environment&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
  cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;User: The user name for connection.&quot; &lt;&lt;endl ;
  cout &lt;&lt;&quot;Password: The user password for connection.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;SecurityCtx: A string representing the security context ( Role. Organization. Project ). Choose Role as Reviewer ( as the use case does not modify the PLM Data).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Environment: A PLM environment containing PLMProductDS (a PRODUCT's custo).&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
  cout &lt;&lt; endl;
  retCode = 1;
  goto EscapeWay;
}

//------------------------------------------------------------------
// - For Setting Environment
//------------------------------------------------------------------ 
envToUse = argv[6];

//------------------------------------------------------------------
// - For Setting Repository
//------------------------------------------------------------------ 
repository = argv[1];
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>Connection Parameters initialization.</p>
<pre class="code">...
cout &lt;&lt;&quot; Connection Parameters init: begin&quot; &lt;&lt; endl;
hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Repository&quot;, argv[1]);
if (FAILED(hr))
{
  retCode = 2;
  goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;Server&quot;, argv[2]);
if (FAILED(hr))
{ 
  retCode = 3;
  goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserID&quot;, argv[3]);
if (FAILED(hr))
{ 
  retCode = 4;
  goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;UserPassword&quot;, argv[4]);
if (FAILED(hr))
{
  retCode = 5;
  goto EscapeWay;
}

hr = CATPLMSessionServices::SetPLMSessionParameter(&quot;SecurityCtx&quot;, argv[5]);
if (FAILED(hr))
{
  retCode = 6;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
hr = CATPLMSessionServices::InitPLMSession();
if (FAILED(hr))
{
  retCode = 7;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Current Environment to &quot;envToUse&quot; from 
Input</h3>
<pre class="code">...
hr = PLMPSISessionHelpers::GetSessionHelpers(pSessionHelpers);
if (SUCCEEDED(hr) &amp;&amp; (NULL != pSessionHelpers))
{
  hr = pSessionHelpers-&gt; SetCurrentEnvironment(envToUse);
  if ( FAILED(hr) )
  {
    retCode = 8;
    goto EscapeWay;
  }
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving the Environment</h3>
<pre class="code">...
hr = CATAdpDictionaryServices::GetEnvironment(repository, envToUse, &amp;pIAdpEnvironment);
if ( FAILED(hr) || ( NULL == pIAdpEnvironment) )
{
  retCode = 9;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving the Customized Reference of the Product Modeler</h3>
<pre class="code">...
hr = CATCkePLMNavPublicServices::RetrieveKnowledgeType(&quot;VPMReference&quot;, hTypeModeler);
if( ( FAILED(hr) || (NULL_var == hTypeModeler) ) )
{
  retCode = 10;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the &quot;SddProduct&quot; Model (arg[7])</h3>
<pre class="code">...
attributeSet.AddAttribute(&quot;PLM_ExternalID&quot;,argv[7]) ;
hr = CATAdpPLMQueryServices::GetElementsFromAttributes(hTypeModeler,
attributeSet,
ListP_QueryResults) ;

if(1 &lt;= ListP_QueryResults.Size())
{
  pQueryResult = ListP_QueryResults[1] ;
  if(NULL != pQueryResult)
  {
    hr = pQueryResult-&gt;GetIdentifier(pIPLMIdent) ;
  }
}

if ( (FAILED(hr)) || (NULL == pIPLMIdent) )
{
  retCode = 11;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Opening the Product</h3>
<pre class="code">...
hr = adpOpener.CompleteAndOpen(pIPLMIdent, IID_CATIPLMProducts, (void**) &amp;pIPLMProduct);
if ( (FAILED(hr)) || (NULL == pIPLMProduct) )
{
  retCode = 12;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting CATIMmiUsePrtPart</h3>
<pre class="code">...
hr  =  SwitchToDesignModeAndReturnPartContainer( pIPLMProduct, pIPrtCont, pPlatePart );
if((NULL == pIPrtCont) || (NULL == pPlatePart))
{
  retCode  =  13;
  goto  EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Getting Occurrence from Reference</h3>
<pre class="code">...
spNavReference = pIPLMProduct;
if(!!spNavReference)
{
  CATIPrdOccurrenceMngt *piOccMgt = NULL;
  ::CATPrdGetOccurrenceMngt(piOccMgt);
  if(!!piOccMgt)
   {
     hr = piOccMgt-&gt;GetOrCreateRootOccurrence(spNavReference, spNavOccurrence);
     if ( NULL != piOccMgt )
      {
        piOccMgt-&gt;Release();
        piOccMgt = NULL;
      }
   }
}

CHK_SP_EQ(NULL_var, spNavOccurrence, retCode, 14);
hr = spNavOccurrence-&gt;QueryInterface (IID_CATIPLMProducts, (void**)&amp;pIPLMProducts);
if ( (FAILED(hr)) || (NULL == pIPLMProducts) )
{
  retCode = 15;
  goto EscapeWay;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Getting SDD Product Factory</h3>
<pre class="code">...
spSddUseProductFactory = pIPLMProducts;
CHK_SP_EQ(NULL_var, spSddUseProductFactory, retCode, 16);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Creating SDD Product Bracket</h3>
<pre class="code">...
hr = spSddUseProductFactory-&gt;<strong>CreateProductBracket</strong>(spSddUseProductBracket, 5);   // Mode 5 = Stiffener-Stiffener
CHK_SP_EQ(NULL_var, spSddUseProductBracket, retCode, 17);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Getting Bracket</h3>
<pre class="code">...
hr = spSddUseProductBracket-&gt;<strong>GetContourBased</strong>(spContourBased);
CHK_SP_EQ(NULL_var, spContourBased, retCode, 18);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Setting Category of SDD Bracket</h3>
<pre class="code">...
spStrCategoryMngt = spContourBased;
CHK_SP_EQ(NULL_var, spStrCategoryMngt, retCode, 19);

hr = spStrCategoryMngt-&gt;SetCategory("Panel"); 
CHK_FAILED_RC(hr, retCode, 20);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Setting Support of the Plate</h3>
<pre class="code">...
spStrPanelSurf = spContourBased;
CHK_SP_EQ(NULL_var, spStrPanelSurf, retCode, 21);

hr = GetReferencePlane(pPlatePart, "LONG.0", spPlane);
CHK_FAILED_RC(hr, retCode, 22);

hr = spStrPanelSurf-&gt;SetSupport(spPlane);
CHK_FAILED_RC(hr, retCode, 23);
  
hr = spStrPanelSurf-&gt;GetSupportOffset(spSupportOffset);
CHK_SP_EQ(NULL_var, spSupportOffset, retCode, 27);
spSupportOffset-&gt;Valuate(0.);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Setting Material</h3>
<pre class="code">...
spStrMaterialMngt = spSddUseProductBracket;
CHK_SP_EQ(NULL_var, spStrMaterialMngt, retCode, 24);

hr = spStrMaterialMngt-&gt;SetMaterial("Steel A42");
CHK_FAILED_RC(hr, retCode, 25);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>


<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step17"></a>Setting Thickness</h3>
<pre class="code">...
spStrPlateExtrusionMngt = spContourBased;
CHK_SP_EQ(NULL_var, spStrPlateExtrusionMngt, retCode, 26);

hr = spStrPlateExtrusionMngt-&gt;GetThickness(spThickness);
CHK_SP_EQ(NULL_var, spThickness, retCode, 27);
spThickness-&gt;Valuate(0.01);
  
hr = spStrPlateExtrusionMngt-&gt;GetOffset(spOffset);
CHK_SP_EQ(NULL_var, spOffset, retCode, 28);
spOffset-&gt;Valuate(0.);
  
hr = spStrPlateExtrusionMngt-&gt;SetThrowOrientation(ThrowOrientation);
CHK_FAILED_RC(hr, retCode, 29);
  
hr = spStrPlateExtrusionMngt-&gt;SetOffsetMode(OrientationMode);
CHK_FAILED_RC(hr, retCode, 30); 
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step18"></a>Setting Reference Sketch</h3>
<pre class="code">...
spSddPlate = spContourBased;
hr = spSddPlate-&gt;GetDelimitedSupport( spDMS );
if( FAILED(hr) || NULL_var == spDMS ){retCode = 31; goto EscapeWay;}
spStrSketchBasedDMSMngt = spDMS;
CHK_SP_EQ(NULL_var, spStrSketchBasedDMSMngt, retCode, 32);
  
spContourBasedFeat = spContourBased;
CHK_SP_EQ(NULL_var, spContourBasedFeat, retCode, 33);
 
hr = spStrSketchBasedDMSMngt-&gt;SetSketch( "SAMPLE_RCO_2LIMITS_CURVED" );
CHK_FAILED_RC(hr, retCode, 34);

hr = <strong>SetContourBasedPlateLimits</strong>( spContourBased, pIPLMProduct );
CHK_FAILED_RC(hr, retCode, 35);
...</pre>
<p>This <code>SetContourBasedPlateLimits</code> method is elaborated below.</p>
<pre class="code">...
 HRESULT <strong>SetContourBasedPlateLimits</strong>( const CATISddUseBracket_var &amp;ispContourBased, CATIPLMProducts *&amp;pIPLMProduct )
 {
   if( NULL_var == ispContourBased )
     return E_INVALIDARG;

   HRESULT hr = E_FAIL;

   CATIStrUsePanelLimitMngt_var spPanelLimitMngt = ispContourBased;
   if( !!spPanelLimitMngt )
   {
     CATISddUseProductStiffener_var spSddProductStiffener_1, spSddProductStiffener_2;
     CATIAPart *pPart = NULL ; 
    
     hr = GetProductStiffener(pIPLMProduct, 3, spSddProductStiffener_1, pPart);
     CATISddUseStiffener_var spStiffener_1;
     spSddProductStiffener_1-&gt;GetStiffener(spStiffener_1);
     CATIMmiMechanicalFeature_var spStiffenerFeat_1 = spStiffener_1;
     hr = spPanelLimitMngt-&gt;SetLimitingObject( spStiffenerFeat_1, 2, StrUnknownOrientation, catStrPlateLimitUndefined, "22" );

     hr = GetProductStiffener(pIPLMProduct, 4, spSddProductStiffener_2, pPart);
     CATISddUseStiffener_var spStiffener_2;
     spSddProductStiffener_2-&gt;GetStiffener(spStiffener_2);
     CATIMmiMechanicalFeature_var spStiffenerFeat_2 = spStiffener_2;
     hr = spPanelLimitMngt-&gt;SetLimitingObject( spStiffenerFeat_2, 3, StrUnknownOrientation, catStrPlateLimitUndefined, "22" );
    
     if(NULL != pPart)
     {
       pPart-&gt;Release();
       pPart=NULL;
     }
   }

   return hr;
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step19"></a>Updating Bracket</h3>
<pre class="code">...
hr = spContourBased-&gt;Update();
if(FAILED(hr))  
{  
  retCode = 36;  
  goto EscapeWay;  
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step20"></a>Saving Created Bracket</h3>
<pre class="code">...
 hr = adpSaver.Save();
 if(FAILED(hr))  
 {  
  retCode = 37;  
  goto EscapeWay;  
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step21"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
 hr = CATPLMSessionServices::ClosePLMSession();
 if (FAILED(hr)) 
 {
  cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
  retCode = 38;
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create bracket.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [June 2013]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
