<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Create a SDD stiffener</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Slots in SDD</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to create a Slot in SDD.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASddCreateSlot Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddCreateSlot Do</a></li>
				<li><a href="#How">How to Launch CAASddCreateSlot</a></li>
				<li><a href="#Where">Where to Find the CAASddCreateSlot 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>In this use case, you will learn how to create a slot on an already 
SDD plate through which a stiffener passes.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddCreateSlot Use Case</h2>
<p>CAASddCreateSlot.m is a use case of the CAAStructureDetDesignDoc.edu framework 
that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddCreateSlot Do</h3>
<p>This use case:</p>
<ul>
  <li>Illustrates how to create a Slot on a plate through which a stiffener passes.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddCreateSlot</h3>
<p>Please refer to <a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a>.</p>
<p>The executable name is <code>CAASddCreateSlot</code>.</p>
<pre class="code"><em>mktun -c &quot; CAASddCreateSlot Repository Server User Password SecutityCtx Environment PLM_ExternalID SaveORNot&quot;</em></pre>

<p>* The input model is retrieved by importing the following files:</p>
<p>
<code> InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddSR.3dxml</code><br />
<code> InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml</code><br />
<code> InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddSteel_A100.3dxml</code><br />
<code> InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddWT18x179.5.3dxml</code><br />
<code> InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddRECT_RAN_SNIPE_WT18x179.5.3dxml</code><br />
<code> InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddCreateSlot.3dxml</code>
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>The last 3D XML file contains the root Product&nbsp; Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>V_Name</strong></code></a>:
    <code>SddProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---.000</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddCreateSlot Code</h3>
<p>The CAASddCreateSlot sample is made of a single class named CAASddCreateSlot 
located in the CAASddCreateSlot.m module of the CAAStructureDetDesign.edu 
framework: <code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\CAASddCreateSlot.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATISddUseProductPlate</em></td>
		<td>Interface on product node of an SDD Plate.</td>
	</tr>
	<tr>
		<td><em>CATISddUseProductStiffener</em></td>
		<td>Interface used to access properties of SDD Stiffener.</td>
	</tr>
	<tr>
		<td><em>CATISddUsePlate</em></td>
		<td>Interface used to access properties of SDD Plate.</td>
	</tr>
	<tr>
		<td><em>CATISddUseStiffener</em></td>
		<td>Interface used to access properties of SDD Stiffener.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseSlotMngt</em></td>
		<td>Interface for creation, retrieval &amp; deletion of Slots on a profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseSlot</em></td>
		<td>Interface used to access properties of SDD Slot.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseDetailFeature</em></td>
		<td>Interface for instantiation &amp; modification of detail features(endcuts, slots &amp; openings).</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>In this use case there are 6 logical steps in Main:</p>
<table class="fill">
	<tr><th>#</th><th>Step</th>	</tr>
	<tr><td>1</td><td><a href="#Step1">Opening the Model</a></td>	</tr>
	<tr><td>2</td><td><a href="#Step2">Navigating to Desired Plate &amp; Stiffener Pair</a></td>	</tr>
	<tr><td>3</td><td><a href="#Step3">Creating a Slot on the Plate &amp; Setting the Penetrating Profile</a></td>	</tr>
	<tr><td>4</td><td><a href="#Step4">Setting the Detail Feature Parameters for the Slot</a></td>	</tr>
	<tr><td>5</td><td><a href="#Step5">Updating</a></td>	</tr>
	<tr><td>6</td><td><a href="#Step6">Disconnecting and Deleting the Session</a></td>	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the Model</h3>
<p>This step is detailed in steps 1 to 7 in the
<a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a> page. The only one line code we have in the use case is</p>
<pre class="code">...
rc = CAASddGeneralServices::OpenProduct( argv[7], "", spRootProductOccurrence, rootBag );
...</pre>
<p>
The above code opens a product name specified as PLM_ExternalID, the 7th input to CAASddCreateSlot.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Navigating to Desired Plate &amp; Stiffener Pair</h3>
<p>In the model, there are two Plates, one deck &amp; one transverse bulkhead, under the root node 'SddProduct'. There is also a Deck Longitudinal Stiffener on the Deck Plate such that it penetrates through the Transverse Bulkhead..
We navigate to the Transverse Bulhead &amp; the Stiffener. The pair will be used to create Slot.</p>
<pre class="code">...
// ---------------------------------------------
//  Find the required SDD products
// ---------------------------------------------
CATListPtrCATIPLMNavOccurrence ListOfChildOccurrences;
spRootProductOccurrence-&gt;ListChildren( ListOfChildOccurrences );
int nlistOfChildOccurrencesSize = ListOfChildOccurrences.Size();
if( nlistOfChildOccurrencesSize &lt; 3 )  {    cout &lt;&lt; "Unable to locate required SDD products under the root product " &lt;&lt; argv[7] &lt;&lt; endl; FAILURE; return 152;  }

// ---------------------------------------------
//  Obtain the Slot Management interface on stiffener
// ---------------------------------------------
CATISddUseProductPlate_var spPrdTBhd = ListOfChildOccurrences[ 2 ];
CATISddUseProductStiffener_var spPrdDLStiff = ListOfChildOccurrences[ 3 ];
CATISddUsePlate_var spTBhd;
CATISddUseStiffener_var spDLStiff;
if( !!spPrdTBhd )
  spPrdTBhd-&gt;GetPlate( spTBhd );
if( !!spPrdDLStiff )
  spPrdDLStiff-&gt;GetStiffener( spDLStiff );
if( ( spTBhd == NULL_var ) || ( spDLStiff == NULL_var ) ) { cout &lt;&lt; "Model error " &lt;&lt; endl; FAILURE; return 301; }
...</pre>
<p>By now we have the Transverse Bulkhead's &amp; the Stiffener's product &amp; feature pointers
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Slot on the Plate &amp; Setting the Penetrating Profile</h3>
<p>The <code>CATIStrUseSlotMngt</code> is available on all plates/profiles(stiffeners, stiffeners on free edge, members). This interface has methods for creation, retrieval and deletion of Slots.</p>
<pre class="code">...
// ---------------------------------------------
//  Add an empty slot
// ---------------------------------------------
CATIStrUseSlotMngt_var spSlotMngt = spTBhd;
if( spSlotMngt == NULL_var ) { cout &lt;&lt; "Unable to obtain slot management interface " &lt;&lt; endl; FAILURE; return 302; }

CATIMmiMechanicalFeature_var spSlotFeat;
spSlotMngt-&gt;AddSlot( spSlotFeat );
CATIStrUseSlot_var spSlot = spSlotFeat;
if( spSlot == NULL_var )  { cout &lt;&lt; "Unable to instantiate a slot " &lt;&lt; endl; FAILURE; return 303; }

// ---------------------------------------------
//  Set the stiffener as the penetrating profile
// ---------------------------------------------
if( !SUCCEEDED( spSlot-&gt;SetPenetratingProfile( spDLStiff ) ) )  { cout &lt;&lt; "Unable to set penetrating profile " &lt;&lt; endl; FAILURE; return 304; }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Setting the Detail Feature Parameters for the Slot</h3>
<p>Until now, a slot has been instantiated on the Transverse Bulkhead. But, its properties are not set except the penetrating profile as the Stiffener.</p>
<p>Below is the code which sets the rest of the parameters as well as the Link With Reference option for the slot. For this we use the <code>CATIStrUseDetailFeature</code> interface.</p>
<pre class="code">...
CATIStrUseDetailFeature_var spDetailFeature = spSlot;
if( spDetailFeature == NULL_var )  { cout &lt;&lt; "Unable to set detail feature properties " &lt;&lt; endl; FAILURE; return 305; }
CATUnicodeString ucType = "RECT_RAN_SNIPE", ucName = "RECT_RAN_SNIPE_WT18x179.5";

// ---------------------------------------------
//  Set the detail feature properties
// ---------------------------------------------
spDetailFeature-&gt;SetType( ucType );
spDetailFeature-&gt;SetName( ucName );

CATListValCATISpecObject_var ListOfSlotParamters;
int rcparms =  GetSlotParameters( spDetailFeature, ListOfSlotParamters );
if( rcparms )         return rcparms;
if( !SUCCEEDED( spDetailFeature-&gt;Update() ) ) { cout &lt;&lt; "Unable to update the slot " &lt;&lt; endl; FAILURE; return 310; }
...</pre>
<p><code>GetSlotParameters</code> is the method where we open the slot UDF &amp; obtain its parameters for edition. The method is shown below. 
The steps involved are:</p>
<ul>
<li>We open the Slot product</li>
<li>Obtain the representation's part container</li>
<li>Obtain the parameters available for edition.</li>
</ul>
<pre class="code">...
// ---------------------------------------------
//  Open the slot product
// ---------------------------------------------
CATOmbLifeCycleRootsBag rootBag2;
CATIPLMNavOccurrence_var spRootUDF;
char *pUDFName = "RECT_RAN_SNIPE_WT18x179.5";
int rc = CAASddGeneralServices::OpenProduct( pUDFName, "", spRootUDF, rootBag2 );
if( rc )  {    cout &lt;&lt; "Unable to open the slot UDF reference " &lt;&lt; pUDFName &lt;&lt; endl; FAILURE; return 306;  }

// ---------------------------------------------
//  Get the part container
// ---------------------------------------------
CATIMmiMechanicalFeature_var spMechPartCont;
CAASddNavigationServices::GetMechanicalPartFromProduct( spRootUDF, spMechPartCont );
CATIMmiPrtContainer_var spMmiPrtCont;
if( !!spMechPartCont )
  spMechPartCont-&gt;GetPrtContainer( spMmiPrtCont );
CATIPrtContainer_var spPrtCont = spMmiPrtCont ;
  
// ---------------------------------------------
//  Initialize the UDF
// ---------------------------------------------
CATListValCATIUdfInstantiate_var ListOfPowerCopyReferences;
CATTemplatesAccessServices::GetPowerCopyList( spPrtCont, ListOfPowerCopyReferences );
if( ( spPrtCont == NULL_var ) ||
    ( ListOfPowerCopyReferences.Size() &lt; 1 ) )  {    cout &lt;&lt; "Unable to obtain Slot Parameters " &lt;&lt; pUDFName &lt;&lt; endl; FAILURE; return 307;  }
int WithLink = 1;
if( !SUCCEEDED( ispDetatilFeature-&gt;InitFromUdf( ListOfPowerCopyReferences[ 1 ], WithLink ) ) ) {    cout &lt;&lt; "Unable to Initialize detail feature by UDF " &lt;&lt; pUDFName &lt;&lt; endl; FAILURE; return 308;  }

CATListValCATICkeParm_var ListOfSlotParamters;
if( !SUCCEEDED( ispDetatilFeature-&gt;GetParameters( ListOfSlotParamters ) ) ) {    cout &lt;&lt; "Unable to get the parameters of initialized UDF " &lt;&lt; pUDFName &lt;&lt; endl; FAILURE; return 309;  }

// ---------------------------------------------
//  Build parameter list
// ---------------------------------------------
int nListOfSlotParamtersSize = ListOfSlotParamters.Size();
for( int i = 1; i &lt;= nListOfSlotParamtersSize; i++ )
{
  CATISpecObject_var spParam = ListOfSlotParamters[ i ];
  if( !!spParam )
    oListOfSlotParamters.Append( spParam );
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Updating</h3>
<p>Update All is launched to update the model.</p>
<pre class="code">
if (FAILED(CAASddModelServices::UpdateAll(spRootProductOccurrence))) { FAILURE; return 175; }
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Disconnecting and Deleting the Session</h3>
<p>Refer to the last step in the <a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a> page.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create slot.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>

