<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating Opening</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Opening</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to create an Opening in SDD.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#BeforeStarting">Before Starting</a></li>
			<li><a href="#UseCase">The CAASddCreateOpening Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddCreateOpening Do</a></li>
				<li><a href="#How">How to Launch CAASddCreateOpening</a></li>
				<li><a href="#Where">Where to Find the CAASddCreateOpening Code</a></li>
			</ul>
			</li>
			<li><a href="#OpeningUcStructure">The Use Case structure</a></li>
			<li><a href="#ListOfFiles">List of files</a></li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>In this use case, you will learn how to create a openings in SDD using 
different strategies on plates &amp; profiles.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="BeforeStarting"></a>Before Starting</h2>
<p>The SDD Openings use case is slightly different from other use cases for SDD.
Be sure to know what the differences are and the course of learning will get simpler.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddCreateOpening Use Case</h2>
<p>CAASddCreateOpening.m is a use case of the CAAStructureDetDesignDoc.edu 
framework that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<p>The reason for a different style of use case is that, since, openings can be created in several different ways,
putting all use cases in a single file, though, would make the structure similar to all
other use cases in SDD, but it will also increase the complexity.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddCreateOpening Do</h3>
<p>This use case:</p>
<ul>
  <li>Illustrates how to create <strong>openings on profile</strong> using:
  	<ul>
  		<li>Spacing/Offset strategy</li>
  		<li>Offset/Offset strategy</li>
  		<li>MidDist/Offset strategy</li>
  		<li>3DObject</li>
  		<li>Output profile.</li>
  	</ul>
  </li>
  <li>Illustrates how to create <strong>openings on plate</strong> using:
  	<ul>
  		<li>Offset/Offset strategy</li>
  		<li>Half-Height/Offset strategy</li>
  		<li>3DObject</li>
  		<li>Output profile.</li>
  	</ul>
  </li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddCreateOpening</h3>
<p>Please refer to <a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a>.</p>
<p>The executable name is <code>CAASddCreateOpening</code>.</p>
<pre class="code"><em>mktun -c &quot; CAASddCreateOpening Repository Server User Password SecutityCtx Environment PLM_ExternalID SaveORNot&quot;</em></pre>

<p>* The input model is retrieved by importing the following files:</p>
<p>
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSteel_A100.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddWT18x179.5.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCreateOpening.3dxml</code><br />
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the 
folder where the API CD-ROM is installed.</p>

<p>The last 3D XML file contains the root Product Reference with the 
following attributes:</p>

<ul>
  <li><a><code><strong>V_Name</strong></code></a>:
    <code>SddProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>: ---.000</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddCreateOpening Code</h3>
<p>The CAASddCreateOpening sample is made of multiple classes named 
according to the kind of opening they create. Each class acts as a CAA component
with a common local interface. All these classes are located in the CAASddCreateOpening.m module of the 
CAAStructureDetDesign.edu framework: <code>
InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\CAASddCreateOpening.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the 
folder where the API CD-ROM is installed.</p>
<p>This sample, including all components, deals with the following CAA APIs:</p>
<table class="fill">
	<tr>
		<td><em>CATIStrUseOpeningStandard</em></td>
		<td>Interface on SDD opening created/to create as standard type opening.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningOutputProfile</em></td>
		<td>Interface on SDD opening created/to create using intersection/projection of output profile with SDD plate/profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpening3DObject</em></td>
		<td>Interface on SDD opening created/to create using intersection of 3DObject with SDD plate/profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningType</em></td>
		<td>Interface on SDD opening to set the proper type of opening intended.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningsMgr</em></td>
		<td>Interface on SDD plate/profile to retrieve standard contours/positioning strategies &amp; their repective parameters.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningMngt</em></td>
		<td>Interface on SDD plate/profile to manage creation, deletion and retrieval of SDD openings on the plates/profiles.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningExtrusionMngt</em></td>
		<td>Interface on SDD opening to manage the extrusion mode of opening.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseRefOffset</em></td>
		<td>Interface of positioning strategy to set reference &amp; its offset.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCategoryMngt</em></td>
		<td>Interfaces on SDD opening to set/get category.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseProfile</em></td>
		<td>Interface on SDD profile(member/stiffener/stiffener on free edge.</td>
	</tr>	
	<tr>
		<td><em>CATISddUseProductStiffener</em></td>
		<td>Interface on SDD stiffener product node.</td>
	</tr>
	<tr>
		<td><em>CATISddUseProductStiffenerOnFreeEdge</em></td>
		<td>Interface on SDD stiffener on free edge product node.</td>
	</tr>
	<tr>
		<td><em>CATISddUseProductPlate</em></td>
		<td>Interface on SDD plate product node.</td>
	</tr>
	<tr>
		<td><em>CATISddUseStiffener</em></td>
		<td>Interface on SDD stiffener node.</td>
	</tr>
	<tr>
		<td><em>CATISddUseStiffenerOnFreeEdge</em></td>
		<td>Interface on SDD stiffener on free edge node.</td>
	</tr>
	<tr>
		<td><em>CATISddUsePlate</em></td>
		<td>Interface on SDD plate node.</td>
	</tr>
</table>
<p>This sample, including all components, deals with the following enumerations:</p>
<table class="fill">
    <tr>
		<td><em>CATStrUseOpeningCreationMode</em></td>
		<td>catStrOpeningStandard<br />
		catStrOpeningOutputProfile<br />
		catStrOpening3DObject</td>
	</tr>
	<tr>
		<td><em>CATStrUseOpeningLimitsMode</em></td>
		<td>catStrOpeningLimitsUndefined<br />
		catStrOpeningLimitsThrough<br />
		catStrOpeningLimitsDimensions</td>
	</tr>
	<tr>
		<td><em>CATStrUseOpeningExtrusionMode</em></td>
		<td>catStrOpeningExtrusionUndefined<br />
		catStrOpeningExtrusionNormal<br />
		catStrOpeningExtrusionDirectional<br />
		catStrOpeningExtrusionRemoval<br />
		catStrOpeningExtrusionClashFree</td>
	</tr>
	<tr>
		<td><em>CATStrOrientation</em></td>
		<td>StrSameOrientation is the only value used in this UseCase.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="OpeningUcStructure"></a>The Use Case Structure</h2>
<p>The use case can be better understood by dividing according to function:</p>
<table class="fill">
	<tr>
		<td>The main executable</td>
		<td>CAASddCreateOpening.cpp forms the main executable. This file is responsible for creating &amp; executing code from each component.</td>
	</tr>
	<tr>
		<td>The individual components</td>
		<td>Each component deal with only one particular method of opening creation. These are individually executed from CAASddCreateOpening.</td>
	</tr>
	<tr>
		<td>The adaptor</td>
		<td>Each component derives from the adaptor. The adaptor takes care of all attributes common to all opening creation methods.</td>
	</tr>
	<tr>
		<td>The local interface</td>
		<td>CAAISddCreateOpening is the local interface which adheres to each component. The main executable executes individual components by accessing this interface. This makes the entire UseCase more modular &amp; allows for extensions.</td>
	</tr>
</table>
<p>Graphically the above description can be visualized as:</p>
<p><img alt="Use Case Structure" src="images/CAASddOpeningUCStructure.png" width="727" height="525"/></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="ListOfFiles"></a>List of files in the Use Case:</h2>
<p>With analogy to the above figure, the following files exist:</p>
<table class="fill">
	<tr>
		<td>CAASddCreateOpening</td>
		<td>The main executable file.</td>
	</tr>
	<tr>
		<td>CAASddCreateStdOpeningOnProfileSpacingOffset</td>
		<td>Opening on profile with Spacing/Offset strategy.</td>
	</tr>
	<tr>
		<td>CAASddCreateStdOpeningOnProfileOffsetOffset</td>
		<td>Opening on profile with Offset/Offset strategy.</td>
	</tr>
	<tr>
		<td>CAASddCreateStdOpeningOnProfileMiddistOffset</td>
		<td>Opening on profile with MidDist/Offset strategy.</td>
	</tr>
	<tr>
		<td>CAASddCreateSketchOpeningOnProfile</td>
		<td>Opening on profile with output profile.</td>
	</tr>
	<tr>
		<td>CAASddCreate3DObjectOpeningOnProfile</td>
		<td>Opening on profile with 3DObject.</td>
	</tr>
	<tr>
		<td>CAASddCreateStdOpeningOnPlateOffsetOffset</td>
		<td>Opening on plate with Offset/Offset strategy.</td>
	</tr>
	<tr>
		<td>CAASddCreateStdOpeningOnPlateHalfHtOffset</td>
		<td>Opening on plate with Half-Height/Offset strategy.</td>
	</tr>
	<tr>
		<td>CAASddCreateSketchOpeningOnPlate</td>
		<td>Opening on plate with output profile.</td>
	</tr>
	<tr>
		<td>CAASddCreate3DObjectOpeningOnPlate</td>
		<td>Opening on plate with 3DObject.</td>
	</tr>

	<tr>
		<td>CAASddCreateStdOpeningAdpt</td>
		<td>Adaptor to all above components except the main executable.</td>
	</tr>
	<tr>
		<td>CAAISddCreateOpening</td>
		<td>The interface to which all component adhere.</td>
	</tr>
</table>
<p></p>
<p>Graphically the above description can be visualised as:</p>
<p></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>In this use case there are 4 logical steps in Main:</p>
<table class="fill">
	<tr><th>#</th><th>Step</th>	</tr>
	<tr><td>1</td><td><a href="#Step1">Opening the Model</a></td>	</tr>
	<tr><td>2</td><td><a href="#Step2">Calling Each Component</a></td>	</tr>
	<tr><td>5</td><td><a href="#Step5">Updating</a></td>	</tr>
	<tr><td>6</td><td><a href="#Step6">Disconnecting and Deleting the Session</a></td>	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the Model</h3>
<p>This step is detailed in steps 1 to 7 in the
<a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a> 
page. The only one line code we have in the use case is</p>
<pre class="code">...
rc = CAASddGeneralServices::OpenProduct( argv[7], &quot;&quot;, spRootProductOccurrence, rootBag );
...</pre>
<p>
The above code opens a product name specified as PLM_ExternalID, the 7th input 
to CAASddCreateOpening.
</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Calling Each Component</h3>
<p>Since, each component adheres to the common interface <code>CAAISddCreateOpening</code>, here we have a list of
components. Using this list each component is created &amp; later the <code>Process</code> method is called. On call to this
<code>Process</code> method, the control is transferred to the component. An opening is then created either on a plate/profile
using any one strategy and the status of the operation is returned.</p>
<p>Once returned from the component, the return code is checked &amp; then a model update is performed.</p>
<pre class="code">...
// ---------------------------------------------
//  Define cases
// ---------------------------------------------
CAAISddCreateOpening *pSddCreateOpening = NULL;
const char *pListOfOpeningApps[ 9 ] = {    "CAASddCreateStdOpeningOnProfileSpacingOffset",        // OPENINGS ON PROFILE
                                            "CAASddCreateStdOpeningOnProfileOffsetOffset",
                                            "CAASddCreateStdOpeningOnProfileMiddistOffset",
                                            "CAASddCreateSketchOpeningOnProfile",
                                            "CAASddCreate3DObjectOpeningOnProfile",
                                            "CAASddCreateStdOpeningOnPlateOffsetOffset",          // OPENINGS ON PLATE
                                            "CAASddCreateStdOpeningOnPlateHalfHtOffset",
                                            "CAASddCreateSketchOpeningOnPlate",
                                            "CAASddCreate3DObjectOpeningOnPlate"  };

// ---------------------------------------------
//  Run the cases
// ---------------------------------------------
for( int i = 0; i &lt; 9; i++ )
{
  rc = (i + 1)*1000;
  HRESULT RC = CATInstantiateComponent( pListOfOpeningApps[ i ], IID_CAAISddCreateOpening, (void**)&amp;pSddCreateOpening );
  if( FAILED(RC) || ( NULL == pSddCreateOpening ) )          { FAILURE; return ( rc + 152 ); }

  rc = pSddCreateOpening-&gt;Process( spRootProductOccurrence );
  pSddCreateOpening-&gt;Release();
  pSddCreateOpening = NULL;
  if( rc )          { FAILURE; return rc; }

  rc = (i + 1)*10000;
  int rcupdate = Update( spRootProductOccurrence );
  if( rcupdate )          { FAILURE; return ( rc + rcupdate ); }
}
...</pre>
<p>To know the internals of each component, click here:</p>
<ul>
<li>CAASddCreateStdOpeningOnProfileSpacingOffset: <a href="CAASddUcCreateStdOpeningOnProfileSpacingOffset.htm">Creating a Standard Opening on a SDD Profile using the Spacing/Offset Strategy</a>.</li>
<li>CAASddCreateStdOpeningOnProfileOffsetOffset: <a href="CAASddUcCreateStdOpeningOnProfileOffsetOffset.htm">Creating a Standard Opening on an SDD Profile Using the Offset/Offset Strategy</a>.</li>
<li>CAASddCreateStdOpeningOnProfileMiddistOffset: <a href="CAASddUcCreateStdOpeningOnProfileMiddistOffset.htm">Creating a Standard Opening on an SDD Profile Using the MidDist/Offset Strategy</a>.</li>
<li>CAASddCreateSketchOpeningOnProfile: <a href="CAASddUcCreateSketchOpeningOnProfile.htm">Creating an Opening on a Stiffener Using an Output Profile</a>.</li>
<li>CAASddCreate3DObjectOpeningOnProfile: <a href="CAASddUcCreate3DObjectOpeningOnProfile.htm">Creating an Opening on an SDD Profile Using a 3D Object</a>.</li>
<li>CAASddCreateStdOpeningOnPlateOffsetOffset: <a href="CAASddUcCreateStdOpeningOnPlateOffsetOffset.htm">Creating a Standard Opening on an SDD Plate Using the Offset/Offset Strategy</a>.</li>
<li>CAASddCreateStdOpeningOnPlateHalfHtOffset: <a href="CAASddUcCreateStdOpeningOnPlateHalfHtOffset.htm">Creating a Standard Opening on an SDD Plate Using Half-Height/Offset Strategy</a>.</li>
<li>CAASddCreateSketchOpeningOnPlate: <a href="CAASddUcCreateSketchOpeningOnPlate.htm">Creating an Opening on an SDD Plate Using an Output Profile</a>.</li>
<li>CAASddCreate3DObjectOpeningOnPlate: <a href="CAASddUcCreate3DObjectOpeningOnPlate.htm">Creating an Opening on an SDD Profile Using a 3D Object</a>.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Updating</h3>
<p>Update All is launched on the newly created opening to update it.</p>
<pre class="code">
int Update( CATIPLMNavOccurrence_var &amp;ispOccurrence )
{
  CATBoolean bUpdateFail = CATFalse;
  CATTry
  {
    HRESULT RC = CAASddModelServices::UpdateAll( ispOccurrence );
    if (FAILED(RC)) { FAILURE; return 175; }
  }
  CATCatch( CATError, pError )
  {
    bUpdateFail = CATTrue;
    Flush( pError );
  }
  CATEndTry;
  if( bUpdateFail == CATTrue )          { FAILURE; return 175; }
  
  return 0;
}
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Disconnecting and Deleting the Session</h3>
<p>Refer to the last step in the <a href="CAASddGeneralities.htm">Structure Design Use Cases Overview</a> page.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create openings in SDD using 
various strategies.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
