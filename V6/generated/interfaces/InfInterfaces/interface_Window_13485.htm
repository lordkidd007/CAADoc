<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InfInterfaces Window (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../InfInterfaces.htm" href="../InfInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "InfInterfaces";	}
		function getCurrentObjectName() { 
 	return "Window"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Window<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Window_13485','Window','0');</script>
<b><i> Represents the window.</i></b><br>

 The window is the object that accommodates one or several viewers
 to display your objects,
 and which makes the link with the windowing system.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#ActiveViewer"><b>ActiveViewer</b></a>
<dd>  Returns the active viewer in the window.
 <dt>
    <a href="#Caption"><b>Caption</b></a>
<dd>  Returns or sets the window caption.
 <dt>
    <a href="#Height"><b>Height</b></a>
<dd>  Returns or sets the window height.
 <dt>
    <a href="#Left"><b>Left</b></a>
<dd>  Returns or sets the distance of the window with respect to the inner
 left side of the frame.
 <dt>
    <a href="#PageSetup"><b>PageSetup</b></a>
<dd>  Returns or sets the page setup of the window.
 <dt>
    <a href="#Top"><b>Top</b></a>
<dd>  Returns or sets the distance of the window with respect to the inner
 top side of the frame.
 <dt>
    <a href="#Viewers"><b>Viewers</b></a>
<dd>  Returns the collection of viewers attached to the window.
 <dt>
    <a href="#Width"><b>Width</b></a>
<dd>  Returns or sets the window width.
 <dt>
    <a href="#WindowState"><b>WindowState</b></a>
<dd>  Returns or sets the window state.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Activate"><b>Activate</b></a>
<dd>  Activates a window.
 <dt>
    <a href="#ActivateNext"><b>ActivateNext</b></a>
<dd>  Activates the window following the current active one in the window
 collection.
 <dt>
    <a href="#ActivatePrevious"><b>ActivatePrevious</b></a>
<dd>  Activates the window preceding the current active one in the window
 collection.
 <dt>
    <a href="#Close"><b>Close</b></a>
<dd>  Closes the window.
 <dt>
    <a href="#NewWindow"><b>NewWindow</b></a>
<dd>  Creates a new window.
 <dt>
    <a href="#PrintOut"><b>PrintOut</b></a>
<dd>  Prints the active viewer of the window according to the window's
 page setup on the default printer.
 <dt>
    <a href="#PrintToFile"><b>PrintToFile</b></a>
<dd>  Prints the active viewer of the window according to the window's
 page setup in a file instead of being sent to a printer.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="ActiveViewer"><dt>

<table><tr><td>o Property <b>ActiveViewer</b>(<td>) As <script type="text/javascript"> activateLink('Viewer','Viewer')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the active viewer in the window.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the active viewer in the
 <tt>CADWindow</tt> window in <tt>ViewerToWorkIn</tt>.
 <pre>
 Dim ViewerToWorkIn As Viewer
 Set ViewerToWorkIn = CADWindow.<font color="red">ActiveViewer</font>
 </pre>
 </dl>
</dl>
<a name="Caption"><dt>

<table><tr><td>o Property <b>Caption</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the window caption.
 The window caption is displayed in the title bar.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the window caption for the <tt>CADWindow</tt>
 window to: CAD 3D Window.
 <pre>
 CADWindow.<font color="red">Caption</font> = "CAD 3D Window"
 </pre>
 </dl>
</dl>
<a name="Height"><dt>

<table><tr><td>o Property <b>Height</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the window height.
 The window height is expressed in pixels.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the window height for the <tt>CADWindow</tt>
 window to 300 pixels.
 <pre>
 CADWindow.<font color="red">Width</font> = 300
 </pre>
 </dl>
</dl>
<a name="Left"><dt>

<table><tr><td>o Property <b>Left</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the distance of the window with respect to the inner
 left side of the frame.
 This distance is expressed in pixels.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the distance of the window with respect to the inner
 left side of the frame for the <tt>CADWindow</tt> window to 150 pixels.
 <pre>
 CADWindow.<font color="red">Left</font> = 150
 </pre>
 </dl>
</dl>
<a name="PageSetup"><dt>

<table><tr><td>o Property <b>PageSetup</b>(<td>) As <script type="text/javascript"> activateLink('PageSetup','PageSetup')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the page setup of the window.
 The page setup includes all parameters to print the window.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the page setup for the <tt>CADWindow</tt> window to
 an existing page setup for the A4 paper size <tt>A4PageSetup</tt>.
 <pre>
 CADWindow.<font color="red">PageSetup</font> = A4PageSetup
 </pre>
 </dl>
</dl>
<a name="Top"><dt>

<table><tr><td>o Property <b>Top</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the distance of the window with respect to the inner
 top side of the frame.
 This distance is expressed in pixels.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the distance of the window with respect to the inner
 top side of the frame for the <tt>CADWindow</tt> window to 50 pixels.
 <pre>
 CADWindow.<font color="red">Top</font> = 50
 </pre>
 </dl>
</dl>
<a name="Viewers"><dt>

<table><tr><td>o Property <b>Viewers</b>(<td>) As <script type="text/javascript"> activateLink('Viewers','Viewers')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection of viewers attached to the window.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the collection of viewers attached to the
 <tt>CADWindow</tt> window in <tt>ViewerCollection</tt>.
 <pre>
 Dim ViewerCollection As Viewers
 Set ViewerCollection = CADWindow.<font color="red">Viewers</font>
 </pre>
 </dl>
</dl>
<a name="Width"><dt>

<table><tr><td>o Property <b>Width</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the window width.
 The window width is expressed in pixels.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the window width for the <tt>CADWindow</tt>
 window to 450 pixels.
 <pre>
 CADWindow.<font color="red">Width</font> = 450
 </pre>
 </dl>
</dl>
<a name="WindowState"><dt>

<table><tr><td>o Property <b>WindowState</b>(<td>) As <script type="text/javascript"> activateLink('CatWindowState','CatWindowState')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the window state.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the window state for the <tt>CADWindow</tt>
 window to <tt>catWindowStateMaximized</tt>.
 <pre>
 CADWindow.<font color="red">WindowState</font> = catWindowStateMaximized
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Activate"><dt>

<table><tr><td>o Sub <b>Activate</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates a window.
 The active window is deactivated and the window to which the method
 applies is activated instead.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the <tt>CADWindow</tt> window.
 <pre>
 CADWindow.<font color="red">Activate</font>()
 </pre>
 </dl>
</dl>
<a name="ActivateNext"><dt>

<table><tr><td>o Sub <b>ActivateNext</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the window following the current active one in the window
 collection.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the window following the current <tt>CADWindow</tt> 
 window in the window collection.
 <pre>
 CADWindow.<font color="red">ActivateNext</font>()
 </pre>
 </dl>
</dl>
<a name="ActivatePrevious"><dt>

<table><tr><td>o Sub <b>ActivatePrevious</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the window preceding the current active one in the window
 collection.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the window preceding the current <tt>CADWindow</tt>
 window in the window collection.
 <pre>
 CADWindow.<font color="red">ActivatePrevious</font>()
 </pre>
 </dl>
</dl>
<a name="Close"><dt>

<table><tr><td>o Sub <b>Close</b>(<td>)</table></dt>
<dl>
  <dd>
 Closes the window.
 This method displays the dialog box requesting whether to save the file
 if the document was modified, except if
 the 
<script type="text/javascript"> activateLinkAnchor('CATIAApplication','DisplayFileAlerts','CATIAApplication.DisplayFileAlerts') </script> property was previously set to False.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example closes the <tt>CADWindow</tt> window.
 <pre>
 CADWindow.<font color="red">Close</font>()
 </pre>
 </dl>
</dl>
<a name="NewWindow"><dt>

<table><tr><td>o Func <b>NewWindow</b>(<td>) As <script type="text/javascript"> activateLink('Window','Window')</script> </table></dt>
<dl>
  <dd>
 Creates a new window.
 The new window displays the same document with the same viewers and viewpoints
 than the window to which the method applies, and becomes the active one.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example creates a new window named <tt>CADNewWindow</tt> from
 the <tt>CADWindow</tt> window.
 <pre>
 Dim CADNewWindow As Window
 Set CADNewWindow = CADWindow.<font color="red">NewWindow</font>()
 </pre>
 </dl>
</dl>
<a name="PrintOut"><dt>

<table><tr><td>o Sub <b>PrintOut</b>(<td>)</table></dt>
<dl>
  <dd>
 Prints the active viewer of the window according to the window's
 page setup on the default printer.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the <tt>CADWindow</tt> window's active viewer
 on the default printer.
 <pre>
 CADWindow.<font color="red">PrintOut</font>()
 </pre>
 </dl>
</dl>
<a name="PrintToFile"><dt>

<table><tr><td>o Sub <b>PrintToFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>fileName</tt>)</table></dt>
<dl>
  <dd>
 Prints the active viewer of the window according to the window's
 page setup in a file instead of being sent to a printer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> fileName</tt>
   <dd>   The full pathname of the file receiving the data.
 <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the <tt>CADWindow</tt> window's active viewer
 in a file.
 <pre>
 CADWindow.<font color="red">PrintToFile</font>("e:\temp\cadwin.prn")
 </pre></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

