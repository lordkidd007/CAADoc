<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InfInterfaces Move (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../InfInterfaces.htm" href="../InfInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "InfInterfaces";	}
		function getCurrentObjectName() { 
 	return "Move"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Move<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Move_12471','Move','0');</script>
<b><i> Represents an object associated with any kind of objects which
 retrieves the corresponding movable object.</i></b><br>

 An object can be moved only if it is independent from other objects.
 For example, a pad can be moved, and is as such a movable object,
 while an edge cannot be moved individually.
 It should be moved with all the objects making up the pad to which
 it belongs as a whole.
 In this case, the underlying edge's movable object is the pad.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#MovableObject"><b>MovableObject</b></a>
<dd>  Returns the movable object associated with the used object.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Apply"><b>Apply</b></a>
<dd>    Applies a move transformation to a movable object.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="MovableObject"><dt>

<table><tr><td>o Property <b>MovableObject</b>(<td>) As <script type="text/javascript"> activateLink('Move','Move')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the movable object associated with the used object.
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the <tt>myMovableObject</tt> from 
 <tt>Move</tt> object associated with <tt>MyObject</tt>.
 <pre>
 Dim myMovableObject As Move
 Set myMovableObject = MyObject.Move.<font color="red">MovableObject</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Apply"><dt>

<table><tr><td>o Sub <b>Apply</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iTransformationArray</tt>)</table></dt>
<dl>
  <dd>
   Applies a move transformation to a movable object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> TransformationArray</tt>
   <dd>   The linear transformation array initialized successively by the
   four columns of the transformation matrix.
   The first nine components represent the rotation matrix.
   The last three components represent the translation vector.
 </dd>
</dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example applies the transformation (45 degrees-rotation around
 the x axis and a translation) stored in <tt>TransformationArray</tt>
 to the <tt>Move</tt> object associated with <tt>myMovableObject</tt>:
 <pre>
 Dim TransformationArray( 11 )
 'Rotation( 45 degrees around the x axis) components
 TransformationArray( 0 )  = 1.000
 TransformationArray( 1 )  = 0
 TransformationArray( 2 )  = 0
 TransformationArray( 3 )  = 0
 TransformationArray( 4 )  = 0.707
 TransformationArray( 5 )  = 0.707
 TransformationArray( 6 )  = 0
 TransformationArray( 7 )  = -0.707
 TransformationArray( 8 )  = 0.707
 'Translation Vector (10,20,30)
 TransformationArray( 9 )  = 10.000
 TransformationArray( 10 ) = 20.000
 TransformationArray( 11 ) = 30.000
 MyMovableObject.Move.Apply TransformationArray
 </pre>
 </dl></pre></dd>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

