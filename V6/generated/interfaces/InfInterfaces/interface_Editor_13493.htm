<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InfInterfaces Editor (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../InfInterfaces.htm" href="../InfInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "InfInterfaces";	}
		function getCurrentObjectName() { 
 	return "Editor"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Editor<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Editor_13493','Editor','0');</script>
<b><i> Represents an editor.</i></b><br>

 In the Model View Controller paradigm, the editor plays the Controller role.
 The editor federates all the objects that can 
 be interactively edited in the same window. It holds the
 current workbench and thus maintains the list of all
 the commands that can be launched  from menus and toolbars when this window is active
 to edit the objects it controls according to the root object PLM type.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#ActiveObject"><b>ActiveObject</b></a>
<dd>  Returns the active object.
 <dt>
    <a href="#Selection"><b>Selection</b></a>
<dd>   Returns the selection object.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetService"><b>GetService</b></a>
<dd>  Returns the specified service.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="ActiveObject"><dt>

<table><tr><td>o Property <b>ActiveObject</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the active object.
 <br>The active object provides editing commands for itself or its content.
 There is only one active object at a time per editor.
</dl>
<a name="Selection"><dt>

<table><tr><td>o Property <b>Selection</b>(<td>) As <script type="text/javascript"> activateLink('Selection','Selection')</script>  (Read Only)</table></dt>
<dl>
  <dd>
  Returns the selection object.
 <br>The selection object contains the objects the end user selected, usually with the mouse, and which are
 candidates as subjects for the next action.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns in <tt>Select1</tt> the selection object of the active editor.
 <pre>
 Dim Select1 As Selection
 Set Select1 = CATIA.ActiveEditor.<font color="red">Selection</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetService"><dt>

<table><tr><td>o Func <b>GetService</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iService</tt>) As <script type="text/javascript"> activateLink('Service','Service')</script> </table></dt>
<dl>
  <dd>
 Returns the specified service.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iService</tt>
   <dd> The identifier of the service to be retrieved
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The specified service

<dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>Service1</tt> the <tt>VisuServices</tt>
 editor's visualization service from the active editor.
 <pre>
 Dim Service1 As Service
 Set Service1 = CATIA.ActiveEditor.<font color="red">GetService</font>("VisuServices")
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

