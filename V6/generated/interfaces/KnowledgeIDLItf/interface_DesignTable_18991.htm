<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeIDLItf DesignTable (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeIDLItf.htm" href="../KnowledgeIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeIDLItf";	}
		function getCurrentObjectName() { 
 	return "DesignTable"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DesignTable<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DesignTable_18991','DesignTable','0');</script>
<b><i>   Represents the DesignTable object.</i></b><br>
 
 A design table is a Knowledge relation that uses an external file to deduce the values of its parameters.

 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIARelationsFactory','CreateDesignTable','CATIARelationsFactory.CreateDesignTable') </script>, <script type="text/javascript"> activateLinkAnchor('CATIARelationsFactory','CreateHorizontalDesignTable','CATIARelationsFactory.CreateHorizontalDesignTable') </script>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#ColumnsNb"><b>ColumnsNb</b></a>
<dd>  Returns the nb of columns in the design table file.
 <dt>
    <a href="#Configuration"><b>Configuration</b></a>
<dd>  Returns or sets the current configuration.
 <dt>
    <a href="#ConfigurationsNb"><b>ConfigurationsNb</b></a>
<dd>  Returns the number of design table configurations.
 <dt>
    <a href="#CopyMode"><b>CopyMode</b></a>
<dd>  Returns or sets whether the data contained in the file must be included inside the CATIA model.
 <dt>
    <a href="#FilePath"><b>FilePath</b></a>
<dd>  Not to be used anymore.
 <dt>
    <a href="#SheetRepRef"><b>SheetRepRef</b></a>
<dd>  Gets or sets the representation reference wrapping the design table file.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddAssociation"><b>AddAssociation</b></a>
<dd>  Adds an association between a parameter iParameter and a column of the design table.
 <dt>
    <a href="#AddNewRow"><b>AddNewRow</b></a>
<dd>  Adds a row in the design table source file.
 <dt>
    <a href="#CellAsString"><b>CellAsString</b></a>
<dd>  Returns the content of a specific cell.
 <dt>
    <a href="#RemoveAssociation"><b>RemoveAssociation</b></a>
<dd>  Removes an existing association.
 <dt>
    <a href="#Synchronize"><b>Synchronize</b></a>
<dd>  Synchronizes the design table with its source file.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="ColumnsNb"><dt>

<table><tr><td>o Property <b>ColumnsNb</b>(<td>) As <script type="text/javascript"> activateLink('short','short')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the nb of columns in the design table file.
</dl>
<a name="Configuration"><dt>

<table><tr><td>o Property <b>Configuration</b>(<td>) As <script type="text/javascript"> activateLink('short','short')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the current configuration. 
 Legal values:  1 to ConfigurationsNb.
</dl>
<a name="ConfigurationsNb"><dt>

<table><tr><td>o Property <b>ConfigurationsNb</b>(<td>) As <script type="text/javascript"> activateLink('short','short')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the number of design table configurations.
</dl>
<a name="CopyMode"><dt>

<table><tr><td>o Property <b>CopyMode</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets whether the data contained in the file must be included inside the CATIA model.<br>
</dl>
<a name="FilePath"><dt>

<table><tr><td>o Property <b>FilePath</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Not to be used anymore.

 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIADesignTable','SheetRepRef','CATIADesignTable.SheetRepRef') </script>
</dl>
</dl>
<a name="SheetRepRef"><dt>

<table><tr><td>o Property <b>SheetRepRef</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> </table></dt>
<dl>
  <dd>
 Gets or sets the representation reference wrapping the design table file.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddAssociation"><dt>

<table><tr><td>o Sub <b>AddAssociation</b>(<td><script type="text/javascript"> activateLink('Parameter','Parameter')</script> <td><tt>iParameter</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iSheetColumn</tt>)</table></dt>
<dl>
  <dd>
 Adds an association between a parameter iParameter and a column of the design table.<br>
 This method does nothing if the column does not exist or if 
 the type of the parameter isn t compliant with the column type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameter</tt>
   <dd> The parameter.
 </dd>
    <dt><tt> iSheetColumn</tt>
   <dd> The name of the column to be associated with the parameter.
 The parameter must be in the same container as the design table. We will enforce this behavior in the future to avoid data model problems.</dd>
</dl>
</dl>
</dl>
<a name="AddNewRow"><dt>

<table><tr><td>o Sub <b>AddNewRow</b>(<td>)</table></dt>
<dl>
  <dd>
 Adds a row in the design table source file. 
 The new row is filled in with values of associated parameters.
 ##### Since V5R14 ##### 
 If the file contains at least one empty row between two not empty rows,
 the behavior of this method is the same for Excel and Text files :
 => the new row containing the current parameters values replaces the first
    empty row found from the beginning of the file.
 RQ : before R14, for text files, the new row was appended at the end of the file.
      The empty rows were never filed by this way, so that the new row was not
      visible in Design Table dialog.
 ######################
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL else.
</dl>
</dl>
<a name="CellAsString"><dt>

<table><tr><td>o Func <b>CellAsString</b>(<td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iRow</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iColumn</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns the content of a specific cell.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRow</tt>
   <dd> the index of the row where the cell is located. </dd>
    <dt><tt> iColumn</tt>
   <dd> the index of the column where the cell is located. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the content of the cell.
</dl>
</dl>
<a name="RemoveAssociation"><dt>

<table><tr><td>o Sub <b>RemoveAssociation</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iSheetColumn</tt>)</table></dt>
<dl>
  <dd>
 Removes an existing association.
 This method does nothing if the column isn t associated or 
 if it doesn t exist.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSheetColumn</tt>
   <dd> The name of an associated column.</dd>
</dl>
</dl>
</dl>
<a name="Synchronize"><dt>

<table><tr><td>o Sub <b>Synchronize</b>(<td>)</table></dt>
<dl>
  <dd>
 Synchronizes the design table with its source file. If the file is managed in Enovia LCA, copies this file on local disk, and synchronizes design table content
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

