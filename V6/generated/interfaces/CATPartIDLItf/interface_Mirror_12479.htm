<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPartIDLItf Mirror (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPartIDLItf.htm" href="../CATPartIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPartIDLItf";	}
		function getCurrentObjectName() { 
 	return "Mirror"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Mirror<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Mirror_12479','Mirror','0');</script>
<b><i> Represents the mirror shape.</i></b><br>

 It duplicates a shape with respect 
 to a planar mirroring element, such as a planar face or a plane.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#DesignIntent"><b>DesignIntent</b></a>
<dd>  Returns or sets the Design Intent attribute of the mirror feature.
 <dt>
    <a href="#MirroringObject"><b>MirroringObject</b></a>
<dd>  Returns the mirroring Object.
 <dt>
    <a href="#MirroringPlane"><b>MirroringPlane</b></a>
<dd>  Returns or sets the mirroring reference plane.
</dl>
<dl>
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="DesignIntent"><dt>

<table><tr><td>o Property <b>DesignIntent</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the Design Intent attribute of the mirror feature.
 Set is called when the value of Keep Specifications check button is changed
 or based on the type of object to mirror
 Parm oDsgInt - Returns the value in the model
 Parm iDsgInt - Input value of the Design Intent to be set. 
 Legal Values - 0 if mirror of currnt solid or as result
							- 1 if Mirror of list or with Keep Spec.
</dl>
<a name="MirroringObject"><dt>

<table><tr><td>o Property <b>MirroringObject</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the mirroring Object.
</dl>
<a name="MirroringPlane"><dt>

<table><tr><td>o Property <b>MirroringPlane</b>(<td>) As <script type="text/javascript"> activateLink('CATIAReference','CATIAReference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the mirroring reference plane. 
 It can be a plane, or a plane face.<br>
 To set the property, you can use the following 
<script type="text/javascript"> activateLinkAnchor('CATIABoundary','','CATIABoundary') </script> object:  
<script type="text/javascript"> activateLinkAnchor('CATIAPlanarFace','','CATIAPlanarFace') </script>. <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>ref</tt> the mirroring
 reference plane of the mirroring <tt>firstMirroring</tt>,
 and then sets it to the created <tt>MyRef</tt>:
 <pre>
 Set ref = firstMirroring.<font color="red">MirroringPlane</font>
 Set MyRef = part.CreateReferenceFromGeometry (plane)
 firstMirroring.<b>MirroringPlane</b> = MyRef
 </pre>
 </dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

