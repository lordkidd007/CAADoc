<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpTransform (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpTransform"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpTransform<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpTransform_21203','OlpTransform','0');</script>
<b><i>   Represents an interface that handles basic parameters of a transform.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<BR>
 A new transform can be created with <script type="text/javascript"> activateLinkAnchor('DELMIAOlpTranslatorHelper','CreateTransform','DELMIAOlpTranslatorHelper.CreateTransform') </script>.
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#IsIdentity"><b>IsIdentity</b></a>
<dd>  True if this transform is an identity transform.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetOAT"><b>GetOAT</b></a>
<dd>  Method returns orientation of the transform in form of Kawasaki OAT<BR> 
 <b>Role</b>: Used in robot programming languages such as 
 AS by Kawasaki.
 <dt>
    <a href="#GetQuaternions"><b>GetQuaternions</b></a>
<dd>  Method returns orientation of the transform in form of quaternions.
 <dt>
    <a href="#GetRPY"><b>GetRPY</b></a>
<dd>  Method returns Roll, Pitch and Yaw values of the transform.
 <dt>
    <a href="#GetXYZ"><b>GetXYZ</b></a>
<dd>  Method returns X, Y and Z values of the transform.
 <dt>
    <a href="#GetZYZ"><b>GetZYZ</b></a>
<dd>  Method returns orientation of the transform in form of ZYZ Euler angles<BR>
 <b>Role</b>: Used in robot programming languages such as 
 Daihen ASCII.
 <dt>
    <a href="#Inverse"><b>Inverse</b></a>
<dd>  Method returns an inverse of the current transform.
 <dt>
    <a href="#IsEqualTo"><b>IsEqualTo</b></a>
<dd>  Test if 2 transforms are equivalent.
 <dt>
    <a href="#Multiply"><b>Multiply</b></a>
<dd>  Method performs post-multiplication of the current transform with the 
 transform passed as an argument.
 <dt>
    <a href="#SetOAT"><b>SetOAT</b></a>
<dd>  Method sets orientation of the transform in form of Kawasaki OAT<BR> 
 <b>Role</b>: Used in robot programming languages such as 
 AS by Kawasaki.
 <dt>
    <a href="#SetQuaternions"><b>SetQuaternions</b></a>
<dd>  Method sets orientation of the transform in form of quaternions.
 <dt>
    <a href="#SetRPY"><b>SetRPY</b></a>
<dd>  Method sets orientation of the transform in RPY format
 
 <dt>
    <a href="#SetXYZ"><b>SetXYZ</b></a>
<dd>  Method set X, Y and Z values of the transform.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="IsIdentity"><dt>

<table><tr><td>o Property <b>IsIdentity</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 True if this transform is an identity transform.<BR>
 X, Y, Z, Yaw, Pitch, and Roll are all zero for an identity transform.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetOAT"><dt>

<table><tr><td>o Sub <b>GetOAT</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oO</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oA</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oT</tt>)</table></dt>
<dl>
  <dd>
 Method returns orientation of the transform in form of Kawasaki OAT<BR> 
 <b>Role</b>: Used in robot programming languages such as 
 AS by Kawasaki.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oO</tt>
   <dd>	O component of orientation in degrees
 </dd>
    <dt><tt> oA</tt>
   <dd>	A component of orientation in degrees
 </dd>
    <dt><tt> oT</tt>
   <dd> 	T component of orientation in degrees</dd>
</dl>
</dl>
</dl>
<a name="GetQuaternions"><dt>

<table><tr><td>o Sub <b>GetQuaternions</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oQX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oQY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oQZ</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oQW</tt>)</table></dt>
<dl>
  <dd>
 Method returns orientation of the transform in form of quaternions.<BR> 
 <b>Role</b>: Used in robot programming languages such as 
 Rapid by ABB.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oQX</tt>
   <dd>	X component of axis of rotation in meters
 </dd>
    <dt><tt> oQY</tt>
   <dd>	Y component of axis of rotation in meters
 </dd>
    <dt><tt> oQZ</tt>
   <dd>	X component of axis of rotation in meters
 </dd>
    <dt><tt> oQW</tt>
   <dd>	Rotation about axis in radians</dd>
</dl>
</dl>
</dl>
<a name="GetRPY"><dt>

<table><tr><td>o Sub <b>GetRPY</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oRoll</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oPitch</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oYaw</tt>)</table></dt>
<dl>
  <dd>
 Method returns Roll, Pitch and Yaw values of the transform.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRoll</tt>
   <dd>	Roll angle of the transform in radians
 </dd>
    <dt><tt> oPitch</tt>
   <dd>	Pitch angle of the transform in radians
 </dd>
    <dt><tt> oYaw</tt>
   <dd>	Yaw angle of the transform in radians</dd>
</dl>
</dl>
</dl>
<a name="GetXYZ"><dt>

<table><tr><td>o Sub <b>GetXYZ</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oZ</tt>)</table></dt>
<dl>
  <dd>
 Method returns X, Y and Z values of the transform.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oX</tt>
   <dd>	X coordinate of the transform in meters
 </dd>
    <dt><tt> oY</tt>
   <dd>	Y coordinate of the transform in meters
 </dd>
    <dt><tt> oZ</tt>
   <dd>	Z coordinate of the transform in meters</dd>
</dl>
</dl>
</dl>
<a name="GetZYZ"><dt>

<table><tr><td>o Sub <b>GetZYZ</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oZ1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oZ2</tt>)</table></dt>
<dl>
  <dd>
 Method returns orientation of the transform in form of ZYZ Euler angles<BR>
 <b>Role</b>: Used in robot programming languages such as 
 Daihen ASCII.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oZ1</tt>
   <dd>	Z component of orientation in degrees
 </dd>
    <dt><tt> oY</tt>
   <dd>	Y component of orientation in degrees
 </dd>
    <dt><tt> oZ2</tt>
   <dd>	Z component of orientation in degrees</dd>
</dl>
</dl>
</dl>
<a name="Inverse"><dt>

<table><tr><td>o Func <b>Inverse</b>(<td>) As <script type="text/javascript"> activateLink('OlpTransform','OlpTransform')</script> </table></dt>
<dl>
  <dd>
 Method returns an inverse of the current transform.<BR>
 <b>Role</b>: The method calculates and returns a transform that
 is the inverse of the current transform. 
 <b>Location parameters of the current transform will not be modified</b>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd> 	Transform that is the inverse of the current transform.
</dl>
</dl>
<a name="IsEqualTo"><dt>

<table><tr><td>o Func <b>IsEqualTo</b>(<td><script type="text/javascript"> activateLink('OlpTransform','OlpTransform')</script> <td><tt>iTransform</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Test if 2 transforms are equivalent.<BR>
 <b>Role</b>: 2 transforms are equivalent if the positions are 
 within 0.01mm and the rotation is within 0.01 radians.  Two transforms may 
 be equivalent even if the euler angles are not equal due to the problems of multiple 
 equivalent euler angle combinations.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd> 	TRUE if the transforms are equivalent.
</dl>
</dl>
<a name="Multiply"><dt>

<table><tr><td>o Func <b>Multiply</b>(<td><script type="text/javascript"> activateLink('OlpTransform','OlpTransform')</script> <td><tt>iTransform</tt>) As <script type="text/javascript"> activateLink('OlpTransform','OlpTransform')</script> </table></dt>
<dl>
  <dd>
 Method performs post-multiplication of the current transform with the 
 transform passed as an argument.<BR>
 <b>Role</b>: The method returns a result of multiplication of the 
 current transform with the transform passed as an argument. 
 <b>Location parameters of the current transform will not be modified</b>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTransform</tt>
   <dd>	Transform to use in post-multiplication
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	The result of the multiplication.
</dl>
</dl>
<a name="SetOAT"><dt>

<table><tr><td>o Sub <b>SetOAT</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iO</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iA</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iT</tt>)</table></dt>
<dl>
  <dd>
 Method sets orientation of the transform in form of Kawasaki OAT<BR> 
 <b>Role</b>: Used in robot programming languages such as 
 AS by Kawasaki.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iO</tt>
   <dd>	O component of orientation in degrees
 </dd>
    <dt><tt> iA</tt>
   <dd>	A component of orientation in degrees
 </dd>
    <dt><tt> iT</tt>
   <dd> 	T component of orientation in degrees</dd>
</dl>
</dl>
</dl>
<a name="SetQuaternions"><dt>

<table><tr><td>o Sub <b>SetQuaternions</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iQX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iQY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iQZ</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iQW</tt>)</table></dt>
<dl>
  <dd>
 Method sets orientation of the transform in form of quaternions.<BR> 
 <b>Role</b>: Used in robot programming languages such as 
 Rapid by ABB.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iQX</tt>
   <dd>	X component of axis of rotation in meters
 </dd>
    <dt><tt> iQY</tt>
   <dd>	Y component of axis of rotation in meters
 </dd>
    <dt><tt> iQZ</tt>
   <dd>	Z component of axis of rotation in meters
 </dd>
    <dt><tt> iQW</tt>
   <dd>	Rotation about axis in radians</dd>
</dl>
</dl>
</dl>
<a name="SetRPY"><dt>

<table><tr><td>o Sub <b>SetRPY</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRoll</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPitch</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iYaw</tt>)</table></dt>
<dl>
  <dd>
 Method sets orientation of the transform in RPY format
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRoll</tt>
   <dd>	Roll angle of the transform in radians
 </dd>
    <dt><tt> iPitch</tt>
   <dd>	Pitch angle of the transform in radians
 </dd>
    <dt><tt> iYaw</tt>
   <dd>	Yaw angle of the transform in radians</dd>
</dl>
</dl>
</dl>
<a name="SetXYZ"><dt>

<table><tr><td>o Sub <b>SetXYZ</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ</tt>)</table></dt>
<dl>
  <dd>
 Method set X, Y and Z values of the transform.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd>	X coordinate of the transform in meters
 </dd>
    <dt><tt> iY</tt>
   <dd>	Y coordinate of the transform in meters
 </dd>
    <dt><tt> iZ</tt>
   <dd>	Z coordinate of the transform in meters</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

