<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpProcedure (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpProcedure"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpProcedure<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpProcedure_21047','OlpProcedure','0');</script>
<b><i> Represents a robot task or other procedure.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Header"><b>Header</b></a>
<dd>  The task header.
 <dt>
    <a href="#Instructions"><b>Instructions</b></a>
<dd>  The instructions contained in the task.
 <dt>
    <a href="#LocalVariables"><b>LocalVariables</b></a>
<dd>  The variables, IO, and constants defined in this procedure.
 <dt>
    <a href="#MotionGroups"><b>MotionGroups</b></a>
<dd>  The motion groups that are controlled by this task.
 <dt>
    <a href="#Profiles"><b>Profiles</b></a>
<dd>  Get all applicative and user profiles used for this procedure.
 <dt>
    <a href="#TemplateFileName"><b>TemplateFileName</b></a>
<dd>  The template file name.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddProfile"><b>AddProfile</b></a>
<dd>  Add an applicative or user profile.
 <dt>
    <a href="#GetParameter"><b>GetParameter</b></a>
<dd>  Get applicative profile parameter value.
 <dt>
    <a href="#GetProfile"><b>GetProfile</b></a>
<dd>  Get the applicative or user profile of a specific type.
 <dt>
    <a href="#GetProfileName"><b>GetProfileName</b></a>
<dd>  Get applicative profile instance name.
 <dt>
    <a href="#IsProfileSet"><b>IsProfileSet</b></a>
<dd>  Identify if profile type is set.
 <dt>
    <a href="#SetParameter"><b>SetParameter</b></a>
<dd>  Set applicative profile parameter value.
 <dt>
    <a href="#SetProfileName"><b>SetProfileName</b></a>
<dd>  Get applicative profile instance name.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Header"><dt>

<table><tr><td>o Property <b>Header</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 The task header.<BR>
 This is used to store any header from an uploaded program.
</dl>
<a name="Instructions"><dt>

<table><tr><td>o Property <b>Instructions</b>(<td>) As <script type="text/javascript"> activateLink('OlpInstructions','OlpInstructions')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 The instructions contained in the task.<BR>
 The collection of instructions is in execution order.
 The logic of the task is represented as a tree.  For example
 an "IF" instruction contains 2 sub-lists of instructions: one 
 for the main branch and one for the else branch.
 
 In the following task, Instructions would contain 3 instructions:
 RobotMotion.1, the "if", and RobotMotion.4
 <ul>
   <li>Task
     <ul>
       <li>RobotMotion.1</li>
       <li>if (in1=TRUE)
         <ul>
           <li>RobotMotion.2</li>
           <li>out1=TRUE</li>
         </ul>
       </li>
       <li>else
         <ul>
           <li>RobotMotion.3</li>
         </ul>
       <li>RobotMotion.4</li>
    </ul>
  </li>
 </ul>
</dl>
<a name="LocalVariables"><dt>

<table><tr><td>o Property <b>LocalVariables</b>(<td>) As <script type="text/javascript"> activateLink('OlpVariables','OlpVariables')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 The variables, IO, and constants defined in this procedure.<BR>
</dl>
<a name="MotionGroups"><dt>

<table><tr><td>o Property <b>MotionGroups</b>(<td>) As <script type="text/javascript"> activateLink('OlpMotionGroups','OlpMotionGroups')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 The motion groups that are controlled by this task.<BR>
</dl>
<a name="Profiles"><dt>

<table><tr><td>o Property <b>Profiles</b>(<td>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Get all applicative and user profiles used for this procedure.<BR>
</dl>
<a name="TemplateFileName"><dt>

<table><tr><td>o Property <b>TemplateFileName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 The template file name.<BR>
 This is used to store the file name (without a path) to the file
 to be used for a template download.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddProfile"><dt>

<table><tr><td>o Sub <b>AddProfile</b>(<td><script type="text/javascript"> activateLink('DELMIARscApplicativeProfile','DELMIARscApplicativeProfile')</script> <td><tt>iProfile</tt>)</table></dt>
<dl>
  <dd>
 Add an applicative or user profile.<BR>
 <P>
 Any profile instances of this type already set on this procedure 
 are removed, so that only 1 instance of a given profile type is ever
 set on a procedure.
 </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfile</tt>
   <dd> The profile instance to add.</dd>
</dl>
</dl>
</dl>
<a name="GetParameter"><dt>

<table><tr><td>o Func <b>GetParameter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iParameterName</tt>) As <script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> </table></dt>
<dl>
  <dd>
 Get applicative profile parameter value.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iParameterName</tt>
   <dd> The parameter name
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter value.

</dl>
</dl>
<a name="GetProfile"><dt>

<table><tr><td>o Func <b>GetProfile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('DELMIARscApplicativeProfile','DELMIARscApplicativeProfile')</script> </table></dt>
<dl>
  <dd>
 Get the applicative or user profile of a specific type.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The profile group type as returned by </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('DELMIARscApplicativeProfilesGroup','ProfileType','DELMIARscApplicativeProfilesGroup.ProfileType') </script> 
  <dt> <b>Returns:</b> 
  <dd>  The profile.  If no profile of this type is set then this value is NULL (or Nothing) but function succeeds.
</dl>
</dl>
<a name="GetProfileName"><dt>

<table><tr><td>o Func <b>GetProfileName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Get applicative profile instance name.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The profile instance name

</dl>
</dl>
<a name="IsProfileSet"><dt>

<table><tr><td>o Func <b>IsProfileSet</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Identify if profile type is set.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if profile has be set.

</dl>
</dl>
<a name="SetParameter"><dt>

<table><tr><td>o Sub <b>SetParameter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iParameterName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 Set applicative profile parameter value.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iParameterName</tt>
   <dd> The parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd> The parameter value.
 </dd>
    <dt><tt> iMatch</tt>
   <dd> If TRUE use parameter to find existing applicative profile
</dd>
</dl>
</dl>
</dl>
<a name="SetProfileName"><dt>

<table><tr><td>o Sub <b>SetProfileName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 Get applicative profile instance name.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iProfileName</tt>
   <dd> The profile instance name
 </dd>
    <dt><tt> iMatch</tt>
   <dd> If TRUE use name to find existing applicative profile
</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

