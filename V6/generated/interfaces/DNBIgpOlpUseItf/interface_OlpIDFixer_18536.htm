<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpIDFixer (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpIDFixer"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpIDFixer<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpIDFixer_18536','OlpIDFixer','0');</script>
<b><i> Represents an interface that handles fixing object names to conform to the robot language requirements.</i></b><br>

 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<BR>
  This interface provides methods to set the requirements for the name, as well as to generate a correct
 name and returning the corrected name.
 <dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example code shows how to create and use the ID Fixer.<BR>
 The examples here are written in Visual Studio Tools for Applications (VSTA) VB.NET
 <pre>
 ' Create the Translator Helper and ID Fixer.
 Dim helper As OlpTranslatorHelper = CATIA.Application.GetSessionService("OlpTranslatorHelper")
 Dim idFixer As DELOlp.OlpIDFixer = helper.CreateIDFixer

 'Set the properties
 idFixer.ReplaceWhiteSpace = 0
 idFixer.Unique = 0
 idFixer.ReplaceWithChars = "aaa"
 idFixer.CharactersToRemove = "abc"
 idFixer.InvalidStartingChars = "R"
 idFixer.MaxLength = 20

 ' Loop through the tasks, correcting each name
 Dim tasks As Object() = helper.Tasks
    For Each task As OlpRobotTask In tasks
       Dim newName As String = idFixer.FixID(task)
       MsgBox(" Correcting task named: " & task.Name & " Corrected name is: " & newName)
   Next
 </pre></pre></dd>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#CharactersToRemove"><b>CharactersToRemove</b></a>
<dd>  Gets/sets the characters to remove from the ID.
 <dt>
    <a href="#InvalidNames"><b>InvalidNames</b></a>
<dd>  Gets/sets the list of invalid names.
 <dt>
    <a href="#InvalidPrefix"><b>InvalidPrefix</b></a>
<dd>  Gets/sets the prefix to use when an invalid name is found.
 <dt>
    <a href="#InvalidStartingChars"><b>InvalidStartingChars</b></a>
<dd>  Gets/sets the characters to remove from the first character of the ID.
 <dt>
    <a href="#MaxLength"><b>MaxLength</b></a>
<dd>  Gets/sets the maximum character length for an ID.
 <dt>
    <a href="#ReplaceWhiteSpace"><b>ReplaceWhiteSpace</b></a>
<dd>  Gets/sets the flag to replace white space in the ID with an underscore.
 <dt>
    <a href="#ReplaceWithChars"><b>ReplaceWithChars</b></a>
<dd>  Gets/sets the characters to remove from the ID.
 <dt>
    <a href="#Unique"><b>Unique</b></a>
<dd>  Gets/sets whether the ID should be unique.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#FixID"><b>FixID</b></a>
<dd>  Fixes the ID of the input object.
 <dt>
    <a href="#FixIDWithName"><b>FixIDWithName</b></a>
<dd>  Fixes the ID of the input object with a specified starting name.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="CharactersToRemove"><dt>

<table><tr><td>o Property <b>CharactersToRemove</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Gets/sets the characters to remove from the ID.<BR>
 The default is none.
 If this property is set, every character in the CharactersToRemove string will be removed
 from the ID.
 If the ID becomes empty because all the characters have been removed, an error is thrown.
 If there are any numbers in the characters to remove string, an error is thrown.
</dl>
<a name="InvalidNames"><dt>

<table><tr><td>o Property <b>InvalidNames</b>(<td>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> </table></dt>
<dl>
  <dd>
 Gets/sets the list of invalid names.<BR>
 For example, this could be a list of keywords.
</dl>
<a name="InvalidPrefix"><dt>

<table><tr><td>o Property <b>InvalidPrefix</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Gets/sets the prefix to use when an invalid name is found.<BR>
</dl>
<a name="InvalidStartingChars"><dt>

<table><tr><td>o Property <b>InvalidStartingChars</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Gets/sets the characters to remove from the first character of the ID.<BR>
 The default is none.  (No beginning characters will be removed.)
 If set and the first character of the ID is any one of the characters in the InvalidStartingChars
 string, the first character is replace with ReplaceWithChars.
 If this property is set, so must the ReplaceWithChars property.
</dl>
<a name="MaxLength"><dt>

<table><tr><td>o Property <b>MaxLength</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets/sets the maximum character length for an ID.<BR>
 The default value is 0, meaning no character limit for the ID.
 The value must be greater than 0.
 If set, the corrected ID can be no longer than the specified length.
 Characters are removed from the end of the ID.
</dl>
<a name="ReplaceWhiteSpace"><dt>

<table><tr><td>o Property <b>ReplaceWhiteSpace</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Gets/sets the flag to replace white space in the ID with an underscore.<BR>
 The default is TRUE, replace all white space with an underscore.
 Otherwise, nothing is done to the ID.
</dl>
<a name="ReplaceWithChars"><dt>

<table><tr><td>o Property <b>ReplaceWithChars</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Gets/sets the characters to remove from the ID.<BR>
 This must be used in conjuction with InvalidStartingChars, otherwise it is ignored.
 The default value is "x", and cannot be set to empty.
 Used to set the first character of an ID, if InvalidStartingChars is set.
</dl>
<a name="Unique"><dt>

<table><tr><td>o Property <b>Unique</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Gets/sets whether the ID should be unique.<BR>
 The default value is TRUE, the name should be unique and no two objects will have the same ID.
 Numbers will be appended to the end of the ID until a unique ID is found.
 If a unique name can't be found, a warning will be posted indicating this.
 If the value is FALSE, no test for uniqueness will be done.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="FixID"><dt>

<table><tr><td>o Func <b>FixID</b>(<td><script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> <td><tt>iObject</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Fixes the ID of the input object.<BR>
 The input object's name will be fetched and used as the starting point for generating a name.
 The name will be generated based on the properties specified.
 Once a name has been generated, none of the properties can be changed.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>    The object whose name will be fixed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The fixed name for the object.
</dl>
</dl>
<a name="FixIDWithName"><dt>

<table><tr><td>o Func <b>FixIDWithName</b>(<td><script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iStartingName</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Fixes the ID of the input object with a specified starting name.<BR>
 The starting point for generating a name will be iStartingName, not the name of the object.
 The name will be generated based on the properties specified.
 Once a name nas been generated, none of the properties can be changed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>    The object whose name will be fixed.
 </dd>
    <dt><tt> iStartingName</tt>
   <dd>    The name to be used to fix.  (Instead of the name of iObject.)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The fixed name for the object.
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

