<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpInstruction (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpInstruction"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpInstruction<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpInstruction_24023','OlpInstruction','0');</script>
<b><i> Represents a single instruction in a task.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<BR>
 <dl>
 <dt><b>Example: (VB.NET)</b>
 <pre>
 Dim Instructions As OlpInstructions
 Dim Instruction As OlpInstruction = Instructions.Item(1)
 </pre>
 </dl><hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#CustomNRLText"><b>CustomNRLText</b></a>
<dd>  The custom NRL text for the instruction.
 <dt>
    <a href="#CustomNRLTextForConvert"><b>CustomNRLTextForConvert</b></a>
<dd>  The custom NRL text to use if converted to a custom instruction.
 <dt>
    <a href="#Label"><b>Label</b></a>
<dd>  Add a label for the target of a goto instruction.
 <dt>
    <a href="#ParentProcedure"><b>ParentProcedure</b></a>
<dd>  The procedure this instruction is in.
 <dt>
    <a href="#Profiles"><b>Profiles</b></a>
<dd>  Get all applicative and user profiles used for this instruction.
 <dt>
    <a href="#Type"><b>Type</b></a>
<dd>  The type of the instruction.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddProfile"><b>AddProfile</b></a>
<dd>  Add an applicative or user profile.
 <dt>
    <a href="#FindVariable"><b>FindVariable</b></a>
<dd>  Retrieves a variable by name.
 <dt>
    <a href="#FindVariableByAddress"><b>FindVariableByAddress</b></a>
<dd>  Retrieves a variable by address.
 <dt>
    <a href="#GetParameter"><b>GetParameter</b></a>
<dd>  Get applicative profile parameter value.
 <dt>
    <a href="#GetProfile"><b>GetProfile</b></a>
<dd>  Get the applicative or user profile of a specific type.
 <dt>
    <a href="#GetProfileName"><b>GetProfileName</b></a>
<dd>  Get applicative profile instance name.
 <dt>
    <a href="#IsProfileSet"><b>IsProfileSet</b></a>
<dd>  Identify if profile type is set.
 <dt>
    <a href="#SetParameter"><b>SetParameter</b></a>
<dd>  Set applicative profile parameter value.
 <dt>
    <a href="#SetProfileName"><b>SetProfileName</b></a>
<dd>  Get applicative profile instance name.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="CustomNRLText"><dt>

<table><tr><td>o Property <b>CustomNRLText</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 The custom NRL text for the instruction.<BR>
 For custom activities and some other activity types, 
 this should be copied verbatim to the output
 program on download.
</dl>
<a name="CustomNRLTextForConvert"><dt>

<table><tr><td>o Property <b>CustomNRLTextForConvert</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iText</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 The custom NRL text to use if converted to a custom instruction.<BR>
 If the instruction is converted to a custom instruction, 
 (for example due to parameter CommentWaitSignal)
 this text will be set as the CustomNRLText.  Otherwise
 this text is ignored.
</dl>
<a name="Label"><dt>

<table><tr><td>o Property <b>Label</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Add a label for the target of a goto instruction.<BR>
 <P>
 This is NOT the name of the instruction, it is the target 
 of a goto instruction.  See 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpGoto','TargetInstruction','DELMIAOlpGoto.TargetInstruction') </script>. </P>
</dl>
<a name="ParentProcedure"><dt>

<table><tr><td>o Property <b>ParentProcedure</b>(<td>) As <script type="text/javascript"> activateLink('OlpProcedure','OlpProcedure')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 The procedure this instruction is in.<BR>
</dl>
<a name="Profiles"><dt>

<table><tr><td>o Property <b>Profiles</b>(<td>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Get all applicative and user profiles used for this instruction.<BR>
</dl>
<a name="Type"><dt>

<table><tr><td>o Property <b>Type</b>(<td>) As <script type="text/javascript"> activateLink('DELOlpInstructionType','DELOlpInstructionType')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 The type of the instruction.<BR>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddProfile"><dt>

<table><tr><td>o Sub <b>AddProfile</b>(<td><script type="text/javascript"> activateLink('DELMIARscApplicativeProfile','DELMIARscApplicativeProfile')</script> <td><tt>iProfile</tt>)</table></dt>
<dl>
  <dd>
 Add an applicative or user profile.<BR>
 <P>
 Any profile instances of this type already set on this instruction
 are removed, so that only 1 instance of a given profile type is ever
 set on a instruction.
 </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfile</tt>
   <dd> The profile instance to add.</dd>
</dl>
</dl>
</dl>
<a name="FindVariable"><dt>

<table><tr><td>o Func <b>FindVariable</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>) As <script type="text/javascript"> activateLink('OlpVariable','OlpVariable')</script> </table></dt>
<dl>
  <dd>
 Retrieves a variable by name.<BR>
 The variable must be visible from this instruction.
 The variable can be an IO, a local variable, or a constant.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> The name of the variable to find.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The variable or NULL if not found.
</dl>
</dl>
<a name="FindVariableByAddress"><dt>

<table><tr><td>o Func <b>FindVariableByAddress</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAddr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpVariableType','DELOlpVariableType')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpDataType','DELOlpDataType')</script> <td><tt>iDataType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpIODirection','DELOlpIODirection')</script> <td><tt>iDirection</tt>) As <script type="text/javascript"> activateLink('OlpVariable','OlpVariable')</script> </table></dt>
<dl>
  <dd>
 Retrieves a variable by address.<BR>
 The variable must be visible from this instruction.
 The variable can be an IO, a local variable, or a constant.
 If the variable type, data type or direction don't match, nothing is returned.
 This way, for example, an input and an output variable can have the same address.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> The name of the variable to find.
 </dd>
    <dt><tt> iType</tt>
   <dd> The type of variable to find.
 </dd>
    <dt><tt> iDataType</tt>
   <dd> The data type of the variable to find.
 </dd>
    <dt><tt> iDirection</tt>
   <dd> The direction (in, out) of the variable to find.
 This is only used if the variable type is external or procudure IO.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The variable or NULL if not found.
</dl>
</dl>
<a name="GetParameter"><dt>

<table><tr><td>o Func <b>GetParameter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iParameterName</tt>) As <script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> </table></dt>
<dl>
  <dd>
 Get applicative profile parameter value.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iParameterName</tt>
   <dd> The parameter name
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter value.

</dl>
</dl>
<a name="GetProfile"><dt>

<table><tr><td>o Func <b>GetProfile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('DELMIARscApplicativeProfile','DELMIARscApplicativeProfile')</script> </table></dt>
<dl>
  <dd>
 Get the applicative or user profile of a specific type.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The profile group type as returned by </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('DELMIARscApplicativeProfilesGroup','ProfileType','DELMIARscApplicativeProfilesGroup.ProfileType') </script> 
  <dt> <b>Returns:</b> 
  <dd>  The profile.  If no profile of this type is set then this value is NULL (or Nothing) but function succeeds.
</dl>
</dl>
<a name="GetProfileName"><dt>

<table><tr><td>o Func <b>GetProfileName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Get applicative profile instance name.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The profile instance name

</dl>
</dl>
<a name="IsProfileSet"><dt>

<table><tr><td>o Func <b>IsProfileSet</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Identify if profile type is set.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if profile has be set.

</dl>
</dl>
<a name="SetParameter"><dt>

<table><tr><td>o Sub <b>SetParameter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iParameterName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 Set applicative profile parameter value.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iParameterName</tt>
   <dd> The parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd> The parameter value.
 </dd>
    <dt><tt> iMatch</tt>
   <dd> If TRUE use parameter to find existing applicative profile
</dd>
</dl>
</dl>
</dl>
<a name="SetProfileName"><dt>

<table><tr><td>o Sub <b>SetProfileName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 Get applicative profile instance name.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iProfileName</tt>
   <dd> The profile instance name
 </dd>
    <dt><tt> iMatch</tt>
   <dd> If TRUE use name to find existing applicative profile
</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

