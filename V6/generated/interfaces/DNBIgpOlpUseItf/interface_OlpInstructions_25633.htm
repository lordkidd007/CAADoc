<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpInstructions (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpInstructions"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpInstructions<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpInstructions_25633','OlpInstructions','0');</script>
<b><i> Represents a list of instructions.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<BR>
 The instructions are in execution order.
 You must use the For Each instruction to loop 
 through this collection. Random access via an "Item"
 method is not available. "Count" is also not implemented
 since this would be a time consuming function.
 <dl>
 <dt><b>Example: (VB.NET)</b>
 <pre>
 Dim Task As OlpProcedure
 Dim Instructions As OlpInstructions = Task.Instructions
 For Each Instruction As OlpInstruction In Instructions
    'Do Something
 Next
 </pre>
 </dl><hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateInstruction"><b>CreateInstruction</b></a>
<dd>  Creates a new instruction in this list of instructions.
 <dt>
    <a href="#DeleteInstruction"><b>DeleteInstruction</b></a>
<dd>  Deletes an instruction from this instruction list.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Retrieves a instruction by its index.
 <dt>
    <a href="#Next"><b>Next</b></a>
<dd>  Returns the next instruction in the collection.
 <dt>
    <a href="#Previous"><b>Previous</b></a>
<dd>  Returns the previous instruction in the collection.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateInstruction"><dt>

<table><tr><td>o Func <b>CreateInstruction</b>(<td><script type="text/javascript"> activateLink('DELOlpInstructionType','DELOlpInstructionType')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('OlpInstruction','OlpInstruction')</script> <td><tt>iRelativeInstruction</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAfterInstruction</tt>) As <script type="text/javascript"> activateLink('OlpInstruction','OlpInstruction')</script> </table></dt>
<dl>
  <dd>
 Creates a new instruction in this list of instructions.<BR>
		<ul>
			<li>    If iRelativeInstruction is not NULL and iAfterInstruction is FALSE, the instruction is created before iRelativeInstruction.</li>
			<li>    If iRelativeInstruction is not NULL and iAfterInstruction is TRUE, the instruction is created after iRelativeInstruction.</li>
			<li>    If iRelativeInstruction is NULL and iAfterInstruction is FALSE, the instruction is created at the beginning.		</li>
			<li>    If iRelativeInstruction is NULL and iAfterInstruction is TRUE, the instruction is created at the end.</li>
		</ul>	
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type of instruction to create
 </dd>
    <dt><tt> iRelativeInstruction</tt>
   <dd> The new instruction will be created before or after this instruction.
 This input can be either NULL or an instruction in this list.
 </dd>
    <dt><tt> iAfterInstruction</tt>
   <dd> If true, the new instruction will be created after the iRelativeInstruction.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The new instruction
</dl>
</dl>
<a name="DeleteInstruction"><dt>

<table><tr><td>o Sub <b>DeleteInstruction</b>(<td><script type="text/javascript"> activateLink('OlpInstruction','OlpInstruction')</script> <td><tt>iInstruction</tt>)</table></dt>
<dl>
  <dd>
 Deletes an instruction from this instruction list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInstruction</tt>
   <dd> The instruction to delete.</dd>
</dl>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('OlpInstruction','OlpInstruction')</script> </table></dt>
<dl>
  <dd>
 Retrieves a instruction by its index.<BR>
 This method should be used sparingly as it is much faster to 
 loop through all instructions using a "For Each" loop than to 
 loop through them by calling Item.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index of the first instruction is 1, and the 
   index of the last instruction is Count.  If the 
   index is out of bounds, the function fails.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The instruction.
</dl>
</dl>
<a name="Next"><dt>

<table><tr><td>o Func <b>Next</b>(<td><script type="text/javascript"> activateLink('OlpInstruction','OlpInstruction')</script> <td><tt>iRelativeInstruction</tt>) As <script type="text/javascript"> activateLink('OlpInstruction','OlpInstruction')</script> </table></dt>
<dl>
  <dd>
 Returns the next instruction in the collection.<BR>
 This method should be used sparingly as it is much faster to 
 loop through all instructions using a "For Each" loop.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRelativeInstruction</tt>
   <dd>	The current instruction.  Cannot be NULL.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	The next instruction.<BR>
  This is NULL if iRelativeInstruction is the last instruction in the list.
</dl>
</dl>
<a name="Previous"><dt>

<table><tr><td>o Func <b>Previous</b>(<td><script type="text/javascript"> activateLink('OlpInstruction','OlpInstruction')</script> <td><tt>iRelativeInstruction</tt>) As <script type="text/javascript"> activateLink('OlpInstruction','OlpInstruction')</script> </table></dt>
<dl>
  <dd>
 Returns the previous instruction in the collection.<BR>
 This method should be used sparingly as it is much faster to 
 loop through all instructions using a "For Each" loop.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRelativeInstruction</tt>
   <dd>	The current instruction.  Cannot be NULL.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	The next instruction.<BR>
  This is NULL if iRelativeInstruction is the first instruction in the list.
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

