<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpRobotMotionTarget (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpRobotMotionTarget"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpRobotMotionTarget<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpRobotMotionTarget_33969','OlpRobotMotionTarget','0');</script>
<b><i> Represents a target position of a robot motion.</i></b><br>
<BR>
 <P>
 Each motion group has a target position.
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.
 </P>
 <P>
 The name of a robot motion target is the tag name.
 For targets which are not of type tag target, you should
 not get or set the name.
 </P>
 <dl>
 <dt><b>Example: (VB.NET)</b>
 <pre>
 Dim Motion As OlpRobotMotion
 Dim Group As OlpMotionGroup
 Dim Target As OlpRobotMotionTarget = Motion.GetTarget(Group)
 If Target.TargetType = delOlpTagTarget Then
    MsgBox Target.Name
 End If 
 </pre>
 </dl><hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#AccuracyProfile"><b>AccuracyProfile</b></a>
<dd>  Get/Set the accuracy profile used for this target.
 <dt>
    <a href="#AccuracyProfileOlp"><b>AccuracyProfileOlp</b></a>
<dd>  Get/Set the accuracy profile associated with the instruction.
 <dt>
    <a href="#ApplicativeProfiles"><b>ApplicativeProfiles</b></a>
<dd>  Get all applicative and user profiles used for this target.
 <dt>
    <a href="#GenericConfig"><b>GenericConfig</b></a>
<dd>  Get the config used for this target.
 <dt>
    <a href="#Home"><b>Home</b></a>
<dd>  Get/Set the home name used for the primary device in this target.
 <dt>
    <a href="#MotionProfile"><b>MotionProfile</b></a>
<dd>  
 <dt>
    <a href="#MotionProfileOlp"><b>MotionProfileOlp</b></a>
<dd>  Get/Set the motion profile associated with the instruction.
 <dt>
    <a href="#MotionType"><b>MotionType</b></a>
<dd>  Get/Set the motion type used for this target.
 <dt>
    <a href="#ObjectFrameProfile"><b>ObjectFrameProfile</b></a>
<dd>  Get/Set the object frame profile used for this target.
 <dt>
    <a href="#OrientationMode"><b>OrientationMode</b></a>
<dd>  Get/Set the orientation mode used for this target.
 <dt>
    <a href="#ProcessType"><b>ProcessType</b></a>
<dd>  Get/Set the type of process operation being done at this target.
 <dt>
    <a href="#SpotProfile"><b>SpotProfile</b></a>
<dd>  Get/Set the spot profile associated with the instruction.
 <dt>
    <a href="#Tag"><b>Tag</b></a>
<dd>  Get the tag.
 <dt>
    <a href="#TagGroupName"><b>TagGroupName</b></a>
<dd>  Get/Set the tag group name.
 <dt>
    <a href="#TargetType"><b>TargetType</b></a>
<dd>  Get/Set the target type used for this target.
 <dt>
    <a href="#ToolProfile"><b>ToolProfile</b></a>
<dd>  Get/Set the tool profile used for this target.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddApplicativeProfile"><b>AddApplicativeProfile</b></a>
<dd>  Add an applicative profile of a specific type.
 <dt>
    <a href="#GetApplicativeProfile"><b>GetApplicativeProfile</b></a>
<dd>  Get the applicative or user profile of a specific type.
 <dt>
    <a href="#GetDeviceJoints"><b>GetDeviceJoints</b></a>
<dd>  Get the joint values for a specific device.
 <dt>
    <a href="#GetParameter"><b>GetParameter</b></a>
<dd>  Get applicative profile parameter value.
 <dt>
    <a href="#GetProfileName"><b>GetProfileName</b></a>
<dd>  Get applicative profile instance name.
 <dt>
    <a href="#GetTransform"><b>GetTransform</b></a>
<dd>  Get the target location as a Cartesian position.
 <dt>
    <a href="#IsProfileSet"><b>IsProfileSet</b></a>
<dd>  Identify if profile type is set.
 <dt>
    <a href="#SetAccuracyParams"><b>SetAccuracyParams</b></a>
<dd>  Set the accuracy profile for this target using the parameters.
 <dt>
    <a href="#SetDeviceJoints"><b>SetDeviceJoints</b></a>
<dd>  Set the joint values for a specific device.
 <dt>
    <a href="#SetMotionParams"><b>SetMotionParams</b></a>
<dd>  
 <dt>
    <a href="#SetParameter"><b>SetParameter</b></a>
<dd>  Set applicative profile parameter value.
 <dt>
    <a href="#SetProfileName"><b>SetProfileName</b></a>
<dd>  Get applicative profile instance name.
 <dt>
    <a href="#SetTransform"><b>SetTransform</b></a>
<dd>  Set the target location as a Cartesian position.
 <dt>
    <a href="#TryGetDeviceJoints"><b>TryGetDeviceJoints</b></a>
<dd>  Try to get the joint values for a specific device.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="AccuracyProfile"><dt>

<table><tr><td>o Property <b>AccuracyProfile</b>(<td>) As <script type="text/javascript"> activateLink('DELMIARscAccuracyProfile','DELMIARscAccuracyProfile')</script> </table></dt>
<dl>
  <dd>
 Get/Set the accuracy profile used for this target.<BR>
 <P>This property is obsolete.  It is recommended that you 
 use 
<script type="text/javascript"> activateLinkAnchor('','AccuracyProfileOlp','AccuracyProfileOlp') </script> instead of this method.  It  may be deprecated in the future.</P>
 <P>
 The accuracy profile must be from the primary device's controller.
 </P>
</dl>
<a name="AccuracyProfileOlp"><dt>

<table><tr><td>o Property <b>AccuracyProfileOlp</b>(<td>) As <script type="text/javascript"> activateLink('OlpAccuracyProfile','OlpAccuracyProfile')</script> </table></dt>
<dl>
  <dd>
 Get/Set the accuracy profile associated with the instruction.<BR> 
 <P>This property will return a valid object even for new motions
 so it can be used to set accuracy values.</P>
 <P>This object is used to configure the accuracy properties of the motion.  
 The parameters specified with the iMatch input equal to TRUE will be used
 to find an existing profile to reuse for this motion.  If no matching profile 
 is found a new one will be created.  To modify a profile directly please use 
 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpController','AccuracyProfileList','DELMIAOlpController.AccuracyProfileList') </script>.</P>
</dl>
<a name="ApplicativeProfiles"><dt>

<table><tr><td>o Property <b>ApplicativeProfiles</b>(<td>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Get all applicative and user profiles used for this target.<BR>
</dl>
<a name="GenericConfig"><dt>

<table><tr><td>o Property <b>GenericConfig</b>(<td>) As <script type="text/javascript"> activateLink('OlpRobotConfigGeneric','OlpRobotConfigGeneric')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Get the config used for this target.<BR>
 <P>
 This is the generic DELMIA config which includes
 the posture and turn numbers/turn signs used
 for determining a unique inverse kinematics solution
 for a given Cartesian position.
 </P>
</dl>
<a name="Home"><dt>

<table><tr><td>o Property <b>Home</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Get/Set the home name used for the primary device in this target.<BR>
 <P>
 An empty string means that no home is used for this position.
 The target type will be assumed to be a home target if a home
 position is set.  See 
<script type="text/javascript"> activateLinkAnchor('','TargetType','TargetType') </script> for how to override this. </P>
 <P>
 Both device joint values and a home name can be specified.
 <UL>
   <LI>
      If the home name <B>exists</B> and device joints are <B>set</B> then the 
      joint values should match the existing home name or a warning 
      will be issued.
   </LI>
   <LI>
      If the home name <B>exists</B> and device joints are <B>not set</B>, then the
      home name is used as is.
   </LI>
   <LI>
      If the home name does <B>not exist</B> and device joints are <B>set</B> then
      the home name will be created using the specified joint values.
   </LI>
   <LI>
      If the home name does <B>not exist</B> and device joints are <B>not set</B>
      then the home name will be created with joint values of all zero and a warning
      will be issued.
   </LI>
 </UL>
 </P>
</dl>
<a name="MotionProfile"><dt>

<table><tr><td>o Property <b>MotionProfile</b>(<td>) As <script type="text/javascript"> activateLink('DELMIARscMotionProfile','DELMIARscMotionProfile')</script> </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R215 
<script type="text/javascript"> activateLinkAnchor('','MotionProfileOlp','MotionProfileOlp') </script>
</dl>
</dl>
<a name="MotionProfileOlp"><dt>

<table><tr><td>o Property <b>MotionProfileOlp</b>(<td>) As <script type="text/javascript"> activateLink('OlpMotionProfile','OlpMotionProfile')</script> </table></dt>
<dl>
  <dd>
 Get/Set the motion profile associated with the instruction.<BR> 
 <P>This property will return a valid object without being set even for new motions
 so it can be used to set speed values.</P>
 <P>This object is used to configure the speed properties of the motion.  
 The parameters specified with the iMatch input equal to TRUE will be used
 to find an existing profile to reuse for this motion.  If no matching profile 
 is found a new one will be created.  To modify a profile directly please use 
 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpController','MotionProfileList','DELMIAOlpController.MotionProfileList') </script>.</P>
</dl>
<a name="MotionType"><dt>

<table><tr><td>o Property <b>MotionType</b>(<td>) As <script type="text/javascript"> activateLink('DELOlpMotionType','DELOlpMotionType')</script> </table></dt>
<dl>
  <dd>
 Get/Set the motion type used for this target.<BR>
</dl>
<a name="ObjectFrameProfile"><dt>

<table><tr><td>o Property <b>ObjectFrameProfile</b>(<td>) As <script type="text/javascript"> activateLink('OlpObjectFrameProfile','OlpObjectFrameProfile')</script> </table></dt>
<dl>
  <dd>
 Get/Set the object frame profile used for this target.<BR>
 <P>
 The object frame profile must be from the primary device's controller.
 </P>
</dl>
<a name="OrientationMode"><dt>

<table><tr><td>o Property <b>OrientationMode</b>(<td>) As <script type="text/javascript"> activateLink('DELOlpOrientationMode','DELOlpOrientationMode')</script> </table></dt>
<dl>
  <dd>
 Get/Set the orientation mode used for this target.<BR>
 This is not available if 
<script type="text/javascript"> activateLinkAnchor('','MotionType','MotionType') </script> set to joint.
</dl>
<a name="ProcessType"><dt>

<table><tr><td>o Property <b>ProcessType</b>(<td>) As <script type="text/javascript"> activateLink('DELOlpProcessType','DELOlpProcessType')</script> </table></dt>
<dl>
  <dd>
 Get/Set the type of process operation being done at this target.<BR>
 <P>
 This is used with tags in specialized trajectories.
 On upload, the value can only be set to a limited 
 number of options based on the type of robot motion being created.
 <UL>
   <LI><B>Robot Motions</B>: only delOlpUndefinedProcess can be set.</LI>
   <LI><B>Spot Operations</B>: only delOlpUndefinedProcess can be set.</LI>
   <LI><B>Point Operations</B>: only delOlpUndefinedProcess can be set.</LI>
   <LI><B>Arc Operations</B>: can be set to delOlpStartWeld, delOlpWeld, or delOlpEndWeld.</LI>
   <LI><B>Sealant Operations</B>: can be set to delOlpStartProcess, delOlpMidProcess, or delOlpEndProcess.</LI>
   <LI><B>Path Adhesive Operations</B>: can be set to delOlpStartProcess, delOlpMidProcess, or delOlpEndProcess.</LI>
   <LI><B>Seam Search Operations</B>: can be set to delOlpViaPoint or delOlpTouchPoint.</LI>
 </UL>
 </P>
</dl>
<a name="SpotProfile"><dt>

<table><tr><td>o Property <b>SpotProfile</b>(<td>) As <script type="text/javascript"> activateLink('OlpSpotProfile','OlpSpotProfile')</script> </table></dt>
<dl>
  <dd>
 Get/Set the spot profile associated with the instruction.<BR> 
 <P>This property will return a valid object without being set even for new motions
 so it can be used to set spot parameters.  This property is only valid 
 for spot operations.</P>
 <P>This object is used to configure the spot parameters.  
 The parameters specified with the iMatch input equal to TRUE will be used
 to find an existing profile to reuse for this motion.  If no matching profile 
 is found, a new one will be created.  To modify a profile directly please use 
 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpController','SpotProfileList','DELMIAOlpController.SpotProfileList') </script>.</P>
</dl>
<a name="Tag"><dt>

<table><tr><td>o Property <b>Tag</b>(<td>) As <script type="text/javascript"> activateLink('OlpTag','OlpTag')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Get the tag.
 <P>
 Getting the tag will fail if the target is not a tag target.
 For a new motion target, getting the tag will fail until
 after the macro has finished.  The main purpose of this function
 is to get an object which can be used with ID fixer to generate
 a unique position name.
 </P>
</dl>
<a name="TagGroupName"><dt>

<table><tr><td>o Property <b>TagGroupName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Get/Set the tag group name.<BR>
 <P>
 Use the 
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property to get/set the tag name for this target. </P>
</dl>
<a name="TargetType"><dt>

<table><tr><td>o Property <b>TargetType</b>(<td>) As <script type="text/javascript"> activateLink('DELOlpTargetType','DELOlpTargetType')</script> </table></dt>
<dl>
  <dd>
 Get/Set the target type used for this target.<BR>
 <P>
 The target type does not need to be specified.  It will
 be automatically inferred from the type of robot motion 
 and how the target position has been set.
 </P>
 <P>
 This property can be set to override the inferred target type.
 For example if 
<script type="text/javascript"> activateLinkAnchor('','SetDeviceJoints','SetDeviceJoints') </script> has been called, you can have a tag target created by setting this property to delOlpTagTarget.
 <UL>
   <LI><B>Spot Operations</B>: a tag target will always be created and cannot be overridden.</LI>
   <LI><B>Point Operations</B>: a tag target will always be created and cannot be overridden.</LI>
   <LI><B>Arc Operations</B>: a tag target will always be created and cannot be overridden.</LI>
   <LI><B>Seam Search Operations</B>: a tag target will always be created and cannot be overridden.</LI>
   <LI>If 
<script type="text/javascript"> activateLinkAnchor('','SetTransform','SetTransform') </script> is called, a tag target will be created.  This can be overridden.</LI>   <LI>If 
<script type="text/javascript"> activateLinkAnchor('','SetDeviceJoints','SetDeviceJoints') </script> is called for the primary device and 
<script type="text/javascript"> activateLinkAnchor('','Home','Home') </script> is not set, a joint target will be created.  This can be overridden.</LI>   <LI>If 
<script type="text/javascript"> activateLinkAnchor('','Home','Home') </script> is set, a home target will be created.  This can be overridden.</LI> </UL>
 </P>
</dl>
<a name="ToolProfile"><dt>

<table><tr><td>o Property <b>ToolProfile</b>(<td>) As <script type="text/javascript"> activateLink('OlpToolProfile','OlpToolProfile')</script> </table></dt>
<dl>
  <dd>
 Get/Set the tool profile used for this target.<BR>
 <P>
 The tool profile must be from the primary device's controller.
 </P>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddApplicativeProfile"><dt>

<table><tr><td>o Sub <b>AddApplicativeProfile</b>(<td><script type="text/javascript"> activateLink('DELMIARscApplicativeProfile','DELMIARscApplicativeProfile')</script> <td><tt>iProfile</tt>)</table></dt>
<dl>
  <dd>
 Add an applicative profile of a specific type.<BR>
 <P>
 Any profile instances of this type already set on this target 
 are removed, so that only 1 instance of a given profile type is ever
 set on a target.
 </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfile</tt>
   <dd> The profile instance to add.</dd>
</dl>
</dl>
</dl>
<a name="GetApplicativeProfile"><dt>

<table><tr><td>o Func <b>GetApplicativeProfile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('DELMIARscApplicativeProfile','DELMIARscApplicativeProfile')</script> </table></dt>
<dl>
  <dd>
 Get the applicative or user profile of a specific type.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The profile group type as returned by </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('DELMIARscApplicativeProfilesGroup','ProfileType','DELMIARscApplicativeProfilesGroup.ProfileType') </script> 
  <dt> <b>Returns:</b> 
  <dd>  The profile.  If no profile of this type is set then this value is NULL (or Nothing) but function succeeds.
</dl>
</dl>
<a name="GetDeviceJoints"><dt>

<table><tr><td>o Func <b>GetDeviceJoints</b>(<td><script type="text/javascript"> activateLink('OlpController','OlpController')</script> <td><tt>iDevice</tt>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> </table></dt>
<dl>
  <dd>
 Get the joint values for a specific device.<BR>
 <P>
 The device must be part of the motion group used for
 this target. 
 </P>
 <P>
 <b>Example: (VB.NET)</b>
 <pre>
 Dim Group As OlpMotionGroup
 Dim Target As OlpRobotMotionTarget
 Dim Device As OlpController = Group.PrimaryDevice
 Dim AuxDeviceJointValues() As Object = Target.GetDeviceJoints(Device)
 
 ' get the 1st joint value - arrays in VB.NET are 0 based.
 Dim Joint1 As Double = AuxDeviceJointValues(0)
 
 ' display as a string with units - joint indexes are 1 based
 If Device.GetJointType(1) = DELOlpJointType.delOlpLinearJoint Then
     MsgBox("Joint 1 : " & Joint1.ToString & "mm")
 Else
     MsgBox("Joint 1 : " & Joint1.ToString & "rad")
 End If
 </pre>
 </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDevice</tt>
   <dd> The device to get the joint values for.
 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The array of joint values.  Each value in the array is a double. The joint values are in MKS units. The units depend on the joint type.
 <UL>
   <LI>Linear joints - units are in m.</LI>
   <LI>Rotational joints - units are in rad.</LI>
 </UL>
</dl>
</dl>
<a name="GetParameter"><dt>

<table><tr><td>o Func <b>GetParameter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iParameterName</tt>) As <script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> </table></dt>
<dl>
  <dd>
 Get applicative profile parameter value.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iParameterName</tt>
   <dd> The parameter name
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter value.

</dl>
</dl>
<a name="GetProfileName"><dt>

<table><tr><td>o Func <b>GetProfileName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Get applicative profile instance name.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The profile instance name

</dl>
</dl>
<a name="GetTransform"><dt>

<table><tr><td>o Func <b>GetTransform</b>(<td><script type="text/javascript"> activateLink('DELOlpPositionRef','DELOlpPositionRef')</script> <td><tt>iOrigin</tt>) As <script type="text/javascript"> activateLink('OlpTransform','OlpTransform')</script> </table></dt>
<dl>
  <dd>
 Get the target location as a Cartesian position.<BR>
 <P>
 Translators should always treat the Cartesian position 
 as being relative to the object frame.  The object frame 
 is relative to iOrigin (the origin of the coordinate 
 system used by the translator).
 </P>
 <P>
 The same origin reference must be used when getting the 
 object frame location and the Cartesian position.  See 
 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpObjectFrameProfile','GetTransform','DELMIAOlpObjectFrameProfile.GetTransform') </script>. </P>
 <P>
 If an object frame's position has not been set then the
 Cartesian position is relative to iOrigin.  This is
 because the object frame is assumed to be zero (an Identity 
 transform) relative to any specified origin.  The object frame 
 is not set if X, Y, Z, Yaw, Pitch, and Roll components 
 are internally stored as zero.  The object frame is stored
 relative to the station in most cases.
 </P>
 <P>
 For Fixed TCP motions, the origin must be delOlpMount.  The 
 object frame is always relative to the mount plate for
 fixed TCP motions.
 </P>
 <P>
 If the user has selected the part coordinates option, then 
 for tag targets which are attached (or owned by) a part other 
 than the station, the transform will be relative to the
 part's origin and the object frame is ignored.  Translators
 should not modify their behavior when the customer
 has selected part coordinates.
 </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrigin</tt>
   <dd> The origin of the coordinate system being used by the translator.
 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The target location.
</dl>
</dl>
<a name="IsProfileSet"><dt>

<table><tr><td>o Func <b>IsProfileSet</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Identify if profile type is set.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if profile has be set.

</dl>
</dl>
<a name="SetAccuracyParams"><dt>

<table><tr><td>o Sub <b>SetAccuracyParams</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iFlyBy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AccuracyType','AccuracyType')</script> <td><tt>iAccuracyType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAccuracyValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>)</table></dt>
<dl>
  <dd>
 Set the accuracy profile for this target using the parameters.<BR>
 <P>This method is obsolete.  It is recommended that you 
 use 
<script type="text/javascript"> activateLinkAnchor('','AccuracyProfileOlp','AccuracyProfileOlp') </script> instead of this method.  It  may be deprecated in the future.</P>
 <P>
 This function may use an existing profile or create a new
 one based on these rules:
 <OL>
	<LI>If profile with the name exists, its values will be changed to match these values.</LI>
   <LI>If a profile with these values exists, its name will be changed.  Note: The Default profile
       is ignored in this case because their name cannot be changed.</LI>
   <LI>If neither of the above, it will be created with these values.</LI>
 </OL>
 </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFlyBy</tt>
   <dd> If true, then fly by is on.
 </dd>
    <dt><tt> iAccuracyType</tt>
   <dd> The method used for calculating the accuracy.
 </dd>
    <dt><tt> iAccuracyValue</tt>
   <dd> The accuracy value: units are in MKS and depend upon the value of iAccuracyType.
 <UL>
   <LI>ACCURACY_TYPE_SPEED - units are a percentage.  1.0 is 100%.</LI>
   <LI>ACCURACY_TYPE_DISTANCE - units are in mm.</LI>
 </UL>
 </dd>
    <dt><tt> Name</tt>
   <dd> The name of the profile to find/create.</dd>
</dl>
</dl>
</dl>
<a name="SetDeviceJoints"><dt>

<table><tr><td>o Sub <b>SetDeviceJoints</b>(<td><script type="text/javascript"> activateLink('OlpController','OlpController')</script> <td><tt>iDevice</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iValues</tt>)</table></dt>
<dl>
  <dd>
 Set the joint values for a specific device.<BR>
 <P>
 The device must be part of the motion group used for
 this target. 
 </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDevice</tt>
   <dd> The device to set the joint values for.
 
 </dd>
    <dt><tt> iValues</tt>
   <dd> The array of joint values.  Each value in the array is a double.
 The joint values are in MKS units. The units depend on the joint type.
 The number of values must be the same as the number of joints for the
 device.
 
 <UL>
   <LI>Linear joints - units are in m.</LI>
   <LI>Rotational joints - units are in rad.</LI>
 </UL></dd>
</dl>
</dl>
</dl>
<a name="SetMotionParams"><dt>

<table><tr><td>o Sub <b>SetMotionParams</b>(<td><script type="text/javascript"> activateLink('MotionBasis','MotionBasis')</script> <td><tt>iBasis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSpeed</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAccelPercent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngularSpeedPercent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngularAccelPercent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>)</table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R215 
<script type="text/javascript"> activateLinkAnchor('','MotionProfileOlp','MotionProfileOlp') </script>
</dl>
</dl>
<a name="SetParameter"><dt>

<table><tr><td>o Sub <b>SetParameter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iParameterName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 Set applicative profile parameter value.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iParameterName</tt>
   <dd> The parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd> The parameter value.
 </dd>
    <dt><tt> iMatch</tt>
   <dd> If TRUE use parameter to find existing applicative profile
</dd>
</dl>
</dl>
</dl>
<a name="SetProfileName"><dt>

<table><tr><td>o Sub <b>SetProfileName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 Get applicative profile instance name.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iProfileName</tt>
   <dd> The profile instance name
 </dd>
    <dt><tt> iMatch</tt>
   <dd> If TRUE use name to find existing applicative profile
</dd>
</dl>
</dl>
</dl>
<a name="SetTransform"><dt>

<table><tr><td>o Sub <b>SetTransform</b>(<td><script type="text/javascript"> activateLink('DELOlpPositionRef','DELOlpPositionRef')</script> <td><tt>iOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('OlpTransform','OlpTransform')</script> <td><tt>iTarget</tt>)</table></dt>
<dl>
  <dd>
 Set the target location as a Cartesian position.<BR>
 <P>
 See 
<script type="text/javascript"> activateLinkAnchor('','GetTransform','GetTransform') </script> for details. </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrigin</tt>
   <dd> The origin of the coordinate system being used by the translator.
 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The target location.
</dl>
</dl>
<a name="TryGetDeviceJoints"><dt>

<table><tr><td>o Func <b>TryGetDeviceJoints</b>(<td><script type="text/javascript"> activateLink('OlpController','OlpController')</script> <td><tt>iDevice</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oValues</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Try to get the joint values for a specific device.<BR>
 <P>
 This works the same as 
<script type="text/javascript"> activateLinkAnchor('','GetDeviceJoints','GetDeviceJoints') </script>, but it  also returns the reachability status.  It does not log
 any errors if the position is not reachable.
 </P>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDevice</tt>
   <dd>	The device to get the joint values for.
 </dd>
    <dt><tt> oValues</tt>
   <dd>	The array of joint values.  Each value in the array is a double.
 The joint values are in MKS units. The units depend on the joint type.
 see </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('','GetDeviceJoints','GetDeviceJoints') </script> 
  <dt> <b>Returns:</b> 
  <dd>  	TRUE if the position is reachable, FALSE if not reachable.
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

