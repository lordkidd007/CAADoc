<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpCustomCommand (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpCustomCommand"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpCustomCommand<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpCustomCommand_26501','OlpCustomCommand','0');</script>
<b><i> Native Robot Language(NRL) Teach command.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 NRL Teach command</font>.<BR>
 This interface represents a command added to 
 NRL teach which is activate by a user to perform
 some customized action.  This interface is used
 to control what happens when they click on that command.
 <script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> is the label displayed in the UI for this command.  A new command is created with 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpTeachHelper','AddCustomCommand','DELMIAOlpTeachHelper.AddCustomCommand') </script>.
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#MainCommand"><b>MainCommand</b></a>
<dd>  The ID of the custom command for the macro.
 <dt>
    <a href="#PostCommand"><b>PostCommand</b></a>
<dd>  Built-in command that is executed after MacroRunCommand.
 <dt>
    <a href="#PreCommand"><b>PreCommand</b></a>
<dd>  Built-in command that is executed before MacroRunCommand.
</dl>
<dl>
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="MainCommand"><dt>

<table><tr><td>o Property <b>MainCommand</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 The ID of the custom command for the macro.<BR>
 If set to "" (empty string) then MacroRunCommand is not 
 called.  Any other value is for use in MacroRunCommand
 to identify which command is being executed.  There is nothing
 to prevent two commands from having the same value for MainCommand
 or to prevent two commands from having the same 
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script>.
</dl>
<a name="PostCommand"><dt>

<table><tr><td>o Property <b>PostCommand</b>(<td>) As <script type="text/javascript"> activateLink('DELOlpTeachCommand','DELOlpTeachCommand')</script> </table></dt>
<dl>
  <dd>
 Built-in command that is executed after MacroRunCommand.<BR>
 This can be changed during MacroRunCommand.  If MacroRunCommand
 fails (does not set 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpTranslatorHelper','CallSucceeded','DELMIAOlpTranslatorHelper.CallSucceeded') </script> to True), the this command will not be executed.  delOlpCmdModify cannot be
 set for the PostCommand.  This is because delOlpCmdModify will overwrite
 any changes to the current instruction which have been done in the
 MainCommand.
</dl>
<a name="PreCommand"><dt>

<table><tr><td>o Property <b>PreCommand</b>(<td>) As <script type="text/javascript"> activateLink('DELOlpTeachCommand','DELOlpTeachCommand')</script> </table></dt>
<dl>
  <dd>
 Built-in command that is executed before MacroRunCommand.<BR>
 If this command fails, then MacroRunCommand will not be executed.
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

