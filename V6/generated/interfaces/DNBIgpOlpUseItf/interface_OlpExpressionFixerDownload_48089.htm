<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpExpressionFixerDownload (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpExpressionFixerDownload"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpExpressionFixerDownload<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpExpressionFixerDownload_48089','OlpExpressionFixerDownload','0');</script>
<b><i> An object for translating expressions from DELMIA expressions in the native robot language.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<BR>
 A new expression fixer can be created with <script type="text/javascript"> activateLinkAnchor('DELMIAOlpTranslatorHelper','CreateExprFixerDownload','DELMIAOlpTranslatorHelper.CreateExprFixerDownload') </script>.<BR> You can find more information on the OLP Expression AST format in the documentation 
 under Automation | Robotics | Robotics Offline Programming | Offline Programming Expression Translation.
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#AllowBinaryNumbers"><b>AllowBinaryNumbers</b></a>
<dd>  Set whether integers can be expressed as binary numbers in the expression.
 <dt>
    <a href="#AllowConditionalExpr"><b>AllowConditionalExpr</b></a>
<dd>  Set whether conditional expressions (if.
 <dt>
    <a href="#AllowConstants"><b>AllowConstants</b></a>
<dd>  Set whether constants are allowed in the expression.
 <dt>
    <a href="#AllowFunctions"><b>AllowFunctions</b></a>
<dd>  Set whether function calls are allowed in the expression.
 <dt>
    <a href="#AllowHexNumbers"><b>AllowHexNumbers</b></a>
<dd>  Set whether integers can be expressed as hexadecimal numbers in the expression.
 <dt>
    <a href="#AllowParentheses"><b>AllowParentheses</b></a>
<dd>  Set whether parentheses are allowed in the expression.
 <dt>
    <a href="#AllowScientificNotation"><b>AllowScientificNotation</b></a>
<dd>  Set whether doubles can be expressed in scientific notation in the expression.
 <dt>
    <a href="#EnforceValidFunctions"><b>EnforceValidFunctions</b></a>
<dd>  Set whether all valid function calls must be added to the SubsituteFunctionName list.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#SubsituteVariable"><b>SubsituteVariable</b></a>
<dd>  Set the variable substitutions to make.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="AllowBinaryNumbers"><dt>

<table><tr><td>o Property <b>AllowBinaryNumbers</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAllowed</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 Set whether integers can be expressed as binary numbers in the expression.<BR>
 Only needs to be set once before the first call to set 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>   If a binary number is found and this is FALSE, then a warning will be added
 and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script> will return FALSE.   In this case you should skip downloading the instruction because 
 it will result in a compilation error in the program.
 Default value is TRUE.
</dl>
<a name="AllowConditionalExpr"><dt>

<table><tr><td>o Property <b>AllowConditionalExpr</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAllowed</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 Set whether conditional expressions (if...then...else...) are allowed in the expression.<BR>
 Only needs to be set once before the first call to set 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>   If a conditional expressions is found and this is FALSE, then a warning will be added
 and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script> will return FALSE.   In this case you should skip downloading the instruction because 
 it will result in a compilation error in the program.
 Default value is TRUE.
</dl>
<a name="AllowConstants"><dt>

<table><tr><td>o Property <b>AllowConstants</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAllowed</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 Set whether constants are allowed in the expression.<BR>
 Only needs to be set once before the first call to set 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>   If FALSE, then all constants in the expression are replaced by their literal values.
 Default value is TRUE.
</dl>
<a name="AllowFunctions"><dt>

<table><tr><td>o Property <b>AllowFunctions</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAllowed</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 Set whether function calls are allowed in the expression.<BR>
 Only needs to be set once before the first call to set 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>   If a function is found and this is FALSE, then a warning will be added
 and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script> will return FALSE.   In this case you should skip downloading the instruction because 
 it will result in a compilation error in the program.
 Default value is TRUE.
</dl>
<a name="AllowHexNumbers"><dt>

<table><tr><td>o Property <b>AllowHexNumbers</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAllowed</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 Set whether integers can be expressed as hexadecimal numbers in the expression.<BR>
 Only needs to be set once before the first call to set 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>   If a hexadecimal number is found and this is FALSE, then a warning will be added
 and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script> will return FALSE.   In this case you should skip downloading the instruction because 
 it will result in a compilation error in the program.
 Default value is TRUE.
</dl>
<a name="AllowParentheses"><dt>

<table><tr><td>o Property <b>AllowParentheses</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAllowed</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 Set whether parentheses are allowed in the expression.<BR>
 Only needs to be set once before the first call to set 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>   If parentheses are found and this is FALSE, then a warning will be added
 and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script> will return FALSE.   In this case you should skip downloading the instruction because 
 it will result in a compilation error in the program.
 Default value is TRUE.
</dl>
<a name="AllowScientificNotation"><dt>

<table><tr><td>o Property <b>AllowScientificNotation</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAllowed</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 Set whether doubles can be expressed in scientific notation in the expression.<BR>
 Only needs to be set once before the first call to set 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>   If a number in scientific notation is found and this is FALSE, then a warning will be added
 and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script> will return FALSE.   In this case you should skip downloading the instruction because 
 it will result in a compilation error in the program.
 Default value is TRUE.
</dl>
<a name="EnforceValidFunctions"><dt>

<table><tr><td>o Property <b>EnforceValidFunctions</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iEnforce</tt>) (Write Only)</table></dt>
<dl>
  <dd>
 Set whether all valid function calls must be added to the SubsituteFunctionName list.<BR>
 If TRUE and a function that is not in the list is encountered,
 then a warning will be added and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script> will return FALSE.  In this case you should skip downloading the instruction because 
 it will result in a compilation error in the program.
 Default value is TRUE.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="SubsituteVariable"><dt>

<table><tr><td>o Sub <b>SubsituteVariable</b>(<td><script type="text/javascript"> activateLink('OlpVariable','OlpVariable')</script> <td><tt>iBMVar</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('OlpAstNode','OlpAstNode')</script> <td><tt>iNRLVar</tt>)</table></dt>
<dl>
  <dd>
 Set the variable substitutions to make.<BR>
 You only need to set a variable substitution for a variable one time and all
 instances of the variable in the expression will be substituted. You can find
 all variables in the expression using 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Variables','DELMIAOlpExpressionFixer.Variables') </script>. This function must be called after setting 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>  but before and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script>.  Any variable substitutions are cleared after calling Fix.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBMVar</tt>
   <dd>  The DELMIA variable to replace.
 </dd>
    <dt><tt> iBMVar</tt>
   <dd>  The robot language variable to replace it with.<BR>
  This AST node will be cloned to replace all variables of this type.  The original 
  AST node will not be used, so you can use it over and over again.</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

