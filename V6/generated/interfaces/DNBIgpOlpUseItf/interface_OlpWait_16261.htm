<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpWait (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpWait"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpWait<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpWait_16261','OlpWait','0');</script>
<b><i>   A wait instruction.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<BR>
 This is an instruction that waits for the condition expression 
 to evaluate to true.  If the timeout is enabled and the specified 
 amount of time elapses before the the condition is satisfied, then 
 execution proceeds to the next instruction.  This instruction can 
 also be used as a pure delay.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Condition"><b>Condition</b></a>
<dd>  The expression that must evaluate to true before execution continues.
 <dt>
    <a href="#IsPureDelay"><b>IsPureDelay</b></a>
<dd>  Indicates if this instruction is used as a pure delay.
 <dt>
    <a href="#Timeout"><b>Timeout</b></a>
<dd>  Get/Set the timeout value in seconds.
 <dt>
    <a href="#UseTimeout"><b>UseTimeout</b></a>
<dd>  Get/Set whether the wait instruction uses a timeout.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#MakePureDelay"><b>MakePureDelay</b></a>
<dd>  Sets the condition such that this instruction is a pure delay.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Condition"><dt>

<table><tr><td>o Property <b>Condition</b>(<td>) As <script type="text/javascript"> activateLink('OlpAstBranch','OlpAstBranch')</script> </table></dt>
<dl>
  <dd>
 The expression that must evaluate to true before execution continues.<BR>
 When set, the 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpAstBranch','Value','DELMIAOlpAstBranch.Value') </script> of the AST tree is used  for the expression.  When retrieved, the DELMIA expression is parsed and
 is returned in the format expected by 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixerDownload','','DELMIAOlpExpressionFixerDownload') </script>. You can find more information on the OLP Expression AST format in the documentation 
 under Automation | Robotics | Robotics Offline Programming | Offline Programming Expression Translation.
</dl>
<a name="IsPureDelay"><dt>

<table><tr><td>o Property <b>IsPureDelay</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Indicates if this instruction is used as a pure delay.
</dl>
<a name="Timeout"><dt>

<table><tr><td>o Property <b>Timeout</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Get/Set the timeout value in seconds.<BR>
 Only get the timeout value if 
<script type="text/javascript"> activateLinkAnchor('','UseTimeout','UseTimeout') </script> is set to True.
</dl>
<a name="UseTimeout"><dt>

<table><tr><td>o Property <b>UseTimeout</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Get/Set whether the wait instruction uses a timeout.<BR>
 If False, then the timeout is effectively infinity and the 
<script type="text/javascript"> activateLinkAnchor('','Timeout','Timeout') </script> property should not be retrieved.  If True, then the Timeout value is used.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="MakePureDelay"><dt>

<table><tr><td>o Sub <b>MakePureDelay</b>(<td>)</table></dt>
<dl>
  <dd>
 Sets the condition such that this instruction is a pure delay.<BR>
 After calling this function you should set the delay time using
 
<script type="text/javascript"> activateLinkAnchor('','Timeout','Timeout') </script>.
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

