<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpVariables (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpVariables"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpVariables<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpVariables_20947','OlpVariables','0');</script>
<b><i>   A list of variables.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<BR>
 A variable can be an external IO, a procedure argument,
 a constant, or a regular variable.<BR>
 This can be retrieved from <script type="text/javascript"> activateLinkAnchor('DELMIAOlpProcedure','LocalVariables','DELMIAOlpProcedure.LocalVariables') </script>  or from 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpBehavior','GlobalVariables','DELMIAOlpBehavior.GlobalVariables') </script>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Filter"><b>Filter</b></a>
<dd>  Filter the collection to only contain variables of a specific type.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetOrCreateConst"><b>GetOrCreateConst</b></a>
<dd>  Create a constant.
 <dt>
    <a href="#GetOrCreateIO"><b>GetOrCreateIO</b></a>
<dd>  Create an IO variable.
 <dt>
    <a href="#GetOrCreateLocalVar"><b>GetOrCreateLocalVar</b></a>
<dd>  Create a local variable.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Retrieve a variable by its name or index.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Filter"><dt>

<table><tr><td>o Property <b>Filter</b>(<td>) As <script type="text/javascript"> activateLink('DELOlpVariableType','DELOlpVariableType')</script> </table></dt>
<dl>
  <dd>
 Filter the collection to only contain variables of a specific type.<BR>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetOrCreateConst"><dt>

<table><tr><td>o Func <b>GetOrCreateConst</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpDataType','DELOlpDataType')</script> <td><tt>iDataType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iValue</tt>) As <script type="text/javascript"> activateLink('OlpVariable','OlpVariable')</script> </table></dt>
<dl>
  <dd>
 Create a constant.<BR>
 If a variable with this name already exists at this scope, it will be used instead of creating
 a new variable.  If that variable does not match the other parameters specified,
 a warning will be issued, but the variable will still be returned.
</dl>
<a name="GetOrCreateIO"><dt>

<table><tr><td>o Func <b>GetOrCreateIO</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpDataType','DELOlpDataType')</script> <td><tt>iDataType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpIODirection','DELOlpIODirection')</script> <td><tt>iDirection</tt>) As <script type="text/javascript"> activateLink('OlpVariable','OlpVariable')</script> </table></dt>
<dl>
  <dd>
 Create an IO variable.<BR>
 If this is the variables collection for a 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpProcedure','','DELMIAOlpProcedure') </script>,  then the IO is a procedure argument.  The order the procedure arguments are
 created in must match the calling order in the 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpRun','','DELMIAOlpRun') </script> instruction.   If this is the variables collection
 for a 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpBehavior','','DELMIAOlpBehavior') </script> then the IO is an external IO.<BR> If a variable with this name already exists at this scope, it will be used instead of creating
 a new variable.  If that variable does not match the other parameters specified,
 a warning will be issued, but the variable will still be returned.
</dl>
<a name="GetOrCreateLocalVar"><dt>

<table><tr><td>o Func <b>GetOrCreateLocalVar</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpDataType','DELOlpDataType')</script> <td><tt>iDataType</tt>) As <script type="text/javascript"> activateLink('OlpVariable','OlpVariable')</script> </table></dt>
<dl>
  <dd>
 Create a local variable.<BR>
 If a variable with this name already exists at this scope, it will be used instead of creating
 a new variable.  If that variable does not match the other parameters specified,
 a warning will be issued, but the variable will still be returned.
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('OlpVariable','OlpVariable')</script> </table></dt>
<dl>
  <dd>
 Retrieve a variable by its name or index.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   If iIndex is a string, then a variable with that
   name is returned, regardless of the current filter.
   If the index is a number, it is the index of the 
   variable in the collection with the 
   current filter applied. The index of the first 
   parameter in the collection is 1, and the index of 
   the last parameter is Count.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The variable retrieved.  If the variable name 
    was not found, Nothing is returned but the function succeeds.
    If the index is out of bounds, the function fails.
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

