<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpProfile (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpProfile"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpProfile<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpProfile_18762','OlpProfile','0');</script>
<b><i> A profile.</i></b><br>
<BR>
 <P><font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.</P>
 
 <P>The behavior of this object depends on where it was retrieved from.
 If the object was retrieved from an <script type="text/javascript"> activateLinkAnchor('DELMIAOlpRobotMotion','','DELMIAOlpRobotMotion') </script> or  
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpRobotMotionTarget','','DELMIAOlpRobotMotionTarget') </script> then this object is used to configure the properties of that motion.  The parameters specified with 
 the iMatch input equal to TRUE will be used to find an existing profile 
 to reuse for this motion.  If no matching profile is found a new one will be created.  
 If the object was retrieved from 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpProfiles','','DELMIAOlpProfiles') </script> then any modifications to this object will change an existing or new
 profile's values directly.</P>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Index"><b>Index</b></a>
<dd>  Get/Set the profile index.
 <dt>
    <a href="#IndexSet"><b>IndexSet</b></a>
<dd>  Get/Set whether an index is set for the profile.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetParameter"><b>GetParameter</b></a>
<dd>  Get applicative profile parameter value.
 <dt>
    <a href="#IsProfileSet"><b>IsProfileSet</b></a>
<dd>  Identify if profile type is set as a child of this profile.
 <dt>
    <a href="#MatchingProfileExists"><b>MatchingProfileExists</b></a>
<dd>  Query if a profile already exists.
 <dt>
    <a href="#SetIndex"><b>SetIndex</b></a>
<dd>  SetIndex and match for a profile.
 <dt>
    <a href="#SetName"><b>SetName</b></a>
<dd>  SetName and match for a profile.
 <dt>
    <a href="#SetParameter"><b>SetParameter</b></a>
<dd>  Set applicative profile parameter value.
 <dt>
    <a href="#SetParametersToNothing"><b>SetParametersToNothing</b></a>
<dd>  Unset or remove all parameters from a child profile type.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Index"><dt>

<table><tr><td>o Property <b>Index</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Get/Set the profile index.<BR>
 In some robot languages an index is used to identify the profile. 
 If the Index property is not set (IndexIsSet returns FALSE), then getting the 
 Index will fail.  If you set the Index, IndexIsSet will automatically 
 return TRUE.
</dl>
<a name="IndexSet"><dt>

<table><tr><td>o Property <b>IndexSet</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Get/Set whether an index is set for the profile.<BR>
 If not set, then getting the Index property will fail.  
 If you set this property to TRUE, Index will be initialized
 to 0.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetParameter"><dt>

<table><tr><td>o Func <b>GetParameter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iParameterName</tt>) As <script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> </table></dt>
<dl>
  <dd>
 Get applicative profile parameter value.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iParameterName</tt>
   <dd> The parameter name
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter value.

</dl>
</dl>
<a name="IsProfileSet"><dt>

<table><tr><td>o Func <b>IsProfileSet</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Identify if profile type is set as a child of this profile.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if profile has be set.

</dl>
</dl>
<a name="MatchingProfileExists"><dt>

<table><tr><td>o Func <b>MatchingProfileExists</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Query if a profile already exists.<BR>
 Compares all parameters set with iMatch=TRUE against
 existing profiles.  Returns TRUE if a matching profile is found.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if a match is found.

</dl>
</dl>
<a name="SetIndex"><dt>

<table><tr><td>o Sub <b>SetIndex</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 SetIndex and match for a profile.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> the profile index value </dd>
    <dt><tt> iMatch</tt>
   <dd> determines if the index should be used in finding an existing profile</dd>
</dl>
</dl>
</dl>
<a name="SetName"><dt>

<table><tr><td>o Sub <b>SetName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 SetName and match for a profile.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> the profile name </dd>
    <dt><tt> iMatch</tt>
   <dd> determines if the name should be used in finding an existing profile</dd>
</dl>
</dl>
</dl>
<a name="SetParameter"><dt>

<table><tr><td>o Sub <b>SetParameter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iParameterName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 Set applicative profile parameter value.<BR>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iParameterName</tt>
   <dd> The parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd> The parameter value.
 </dd>
    <dt><tt> iMatch</tt>
   <dd> If TRUE use parameter to find existing applicative profile
</dd>
</dl>
</dl>
</dl>
<a name="SetParametersToNothing"><dt>

<table><tr><td>o Sub <b>SetParametersToNothing</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iProfileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iMatch</tt>)</table></dt>
<dl>
  <dd>
 Unset or remove all parameters from a child profile type.<BR>
 In some cases, having the parameters not set (set to Nothing) has a different
 meaning than set to a Default value.  In this case, you should set all parameters 
 to nothing for a profile type which should not be set.  If no parameters are set 
 and SetParametersToNothing is NOT called, then the profiles parameter values are 
 ignored for matching and any value is valid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfileType</tt>
   <dd> The applicative profile type
 </dd>
    <dt><tt> iMatch</tt>
   <dd> If TRUE then this profile type must not be linked to an existing profile for it to match. 
 However if the profile is mandatory or the default values of the profile have the same 
 meaning as having the profile unset, then a profile set with default values will also match. 
</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

