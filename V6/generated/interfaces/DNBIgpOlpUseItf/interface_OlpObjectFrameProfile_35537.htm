<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpObjectFrameProfile (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpObjectFrameProfile"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpObjectFrameProfile<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpObjectFrameProfile_35537','OlpObjectFrameProfile','0');</script>
<b><i> An object frame profile used for translating a robot program.</i></b><br>

 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetTransform"><b>GetTransform</b></a>
<dd>  Get the transform that represents the object frame location.
 <dt>
    <a href="#SetTransform"><b>SetTransform</b></a>
<dd>  Set the transform that represents the object frame location.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetTransform"><dt>

<table><tr><td>o Func <b>GetTransform</b>(<td><script type="text/javascript"> activateLink('DELOlpPositionRef','DELOlpPositionRef')</script> <td><tt>iOrigin</tt>) As <script type="text/javascript"> activateLink('OlpTransform','OlpTransform')</script> </table></dt>
<dl>
  <dd>
 Get the transform that represents the object frame location.<BR>
 For normal (fixed) object frames profiles, this is a transformation
 from the world, robot base, etc.  For object frames that are used
 in a fixed TCP motion, this offset is from the mount plate of the robot.
 An object frame should not be used with both a fixed TCP motion and
 a non-fixed TCP motion.<BR>
 If the object frame profile has not been set (the X,Y,Z,Yaw,Pitch, and 
 Roll values are a zero), then the object frame is assumed to be a the 
 origin of whatever coordinate system you specify.  This means that if the 
 translator downloads in delOlpRobotBase coordinates and the object profile
 has not been set, then all motion positions will be the transform from the 
 robot base to the target location.<BR>  
 The delOlpRobotBase reference origin can only be used with object frame
 profiles which are zero.  This is because delOlpRobotBase coordinates move
 with the robot if the robot is mounted on a rail.  DELMIA does not currently
 allow for object frames to be defined relative to a moving object for Cartesian
 targets.  Instead you should use delOlpRailOrigin or request that the user
 set the object frame profile to all zeros.
 As a result, you must use the same reference frame when getting/setting the
 position from 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpRobotMotionTarget','GetTransform','DELMIAOlpRobotMotionTarget.GetTransform') </script> as you do here. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrigin</tt>
   <dd>	The location that the transform is relative to.<BR>
  For profiles used in a fixed TCP motion this must be delOlpMount.
  For normal profiles, it can be any other value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	The object frame.
</dl>
</dl>
<a name="SetTransform"><dt>

<table><tr><td>o Sub <b>SetTransform</b>(<td><script type="text/javascript"> activateLink('DELOlpPositionRef','DELOlpPositionRef')</script> <td><tt>iOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('OlpTransform','OlpTransform')</script> <td><tt>iFrame</tt>)</table></dt>
<dl>
  <dd>
 Set the transform that represents the object frame location.<BR>
 See 
<script type="text/javascript"> activateLinkAnchor('','GetTransform','GetTransform') </script> for details. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrigin</tt>
   <dd>	The location that the transform is relative to.<BR>
  For profiles used in a fixed TCP motion this must be delOlpMount.
  For normal profiles, it can be any other value.
 </dd>
    <dt><tt> iFrame</tt>
   <dd>	The object frame.</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

