<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBIgpOlpUseItf OlpExpressionFixerUpload (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DNBIgpOlpUseItf.htm" href="../DNBIgpOlpUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DNBIgpOlpUseItf";	}
		function getCurrentObjectName() { 
 	return "OlpExpressionFixerUpload"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>OlpExpressionFixerUpload<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_OlpExpressionFixerUpload_42892','OlpExpressionFixerUpload','0');</script>
<b><i> An object for translating expressions from the native robot language into DELMIA expressions.</i></b><br>
<BR>
 <font color="red">This interface can only be used by a translator
 within the Robotics Off-line Programming (OLP)
 Download or Upload command</font>.<BR>
 A new transform can be created with <script type="text/javascript"> activateLinkAnchor('DELMIAOlpTranslatorHelper','CreateExprFixerUpload','DELMIAOlpTranslatorHelper.CreateExprFixerUpload') </script>.<BR> You can find more information on the OLP Expression AST format in the documentation 
 under Automation | Robotics | Robotics Offline Programming | Offline Programming Expression Translation.
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#SubsituteVariable"><b>SubsituteVariable</b></a>
<dd>  Set the variable substitutions to make.
 <dt>
    <a href="#SubsituteVariableGetOrCreate"><b>SubsituteVariableGetOrCreate</b></a>
<dd>  Set the variable substitutions to make.
 <dt>
    <a href="#SubsituteVariableNameOnly"><b>SubsituteVariableNameOnly</b></a>
<dd>  Set the variable substitutions to make.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="SubsituteVariable"><dt>

<table><tr><td>o Sub <b>SubsituteVariable</b>(<td><script type="text/javascript"> activateLink('OlpAstNode','OlpAstNode')</script> <td><tt>iNRLVar</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('OlpVariable','OlpVariable')</script> <td><tt>iBMVar</tt>)</table></dt>
<dl>
  <dd>
 Set the variable substitutions to make.<BR>
 You only need to set a variable substitution for a variable one time and all
 instances of the variable in the expression will be substituted. You can find
 all variables in the expression using 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Variables','DELMIAOlpExpressionFixer.Variables') </script>. This function must be called after setting 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','SetExpression','DELMIAOlpExpressionFixer.SetExpression') </script>  but before and 
<script type="text/javascript"> activateLinkAnchor('DELMIAOlpExpressionFixer','Fix','DELMIAOlpExpressionFixer.Fix') </script>.  Any variable substitutions are cleared after calling Fix.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNRLVar</tt>
   <dd>  The robot program variable to replace.
 </dd>
    <dt><tt> iBMVar</tt>
   <dd>  The DELMIA variable to replace it with.</dd>
</dl>
</dl>
</dl>
<a name="SubsituteVariableGetOrCreate"><dt>

<table><tr><td>o Sub <b>SubsituteVariableGetOrCreate</b>(<td><script type="text/javascript"> activateLink('OlpAstNode','OlpAstNode')</script> <td><tt>iNRLVar</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpVariableType','DELOlpVariableType')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpDataType','DELOlpDataType')</script> <td><tt>iDataType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELOlpIODirection','DELOlpIODirection')</script> <td><tt>iDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> <td><tt>iScope</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDefaultValue</tt>)</table></dt>
<dl>
  <dd>
 Set the variable substitutions to make.<BR>
 See 
<script type="text/javascript"> activateLinkAnchor('','SubsituteVariable','SubsituteVariable') </script> for details on variable substitution.   Everything from there applies here.<BR>
 Set all the variable parameters if the variable may not have been created yet.
 This is most common for languages that don't have explicit variable declarations.
 It will be created if it does not yet exist.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNRLVar</tt>
   <dd>  The robot program variable to replace.
 </dd>
    <dt><tt> iName</tt>
   <dd>  The new variable name.
 </dd>
    <dt><tt> iType</tt>
   <dd>  The variable type
 </dd>
    <dt><tt> iDataType</tt>
   <dd>  The variable data type.
 </dd>
    <dt><tt> iDirection</tt>
   <dd>  Whether the variable is "in" or "out".
 </dd>
    <dt><tt> iScope</tt>
   <dd>  The scope is either a DELMIAOlpProcedure or a DELMIAOlpBehavior.
 </dd>
    <dt><tt> iDefaultValue</tt>
   <dd>  Default value can be an empty string.</dd>
</dl>
</dl>
</dl>
<a name="SubsituteVariableNameOnly"><dt>

<table><tr><td>o Sub <b>SubsituteVariableNameOnly</b>(<td><script type="text/javascript"> activateLink('OlpAstNode','OlpAstNode')</script> <td><tt>iNRLVar</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>)</table></dt>
<dl>
  <dd>
 Set the variable substitutions to make.<BR>
 See 
<script type="text/javascript"> activateLinkAnchor('','SubsituteVariable','SubsituteVariable') </script> for details on variable substitution.   Everything from there applies here.<BR>
 This version of the function allows you to set the name if the variable 
 that has been already created.  This is most likely the case for 
 languages that have explicit variable declarations.  However, if the name 
 used in DELMIA is the same as the robot program, then you don't need 
 to call this function.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNRLVar</tt>
   <dd>  The robot program variable to replace.
 </dd>
    <dt><tt> iName</tt>
   <dd>  The new variable name.</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

