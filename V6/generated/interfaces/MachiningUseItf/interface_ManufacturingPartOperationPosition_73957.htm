<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningUseItf ManufacturingPartOperationPosition (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningUseItf.htm" href="../MachiningUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningUseItf";	}
		function getCurrentObjectName() { 
 	return "ManufacturingPartOperationPosition"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ManufacturingPartOperationPosition<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ManufacturingPartOperationPosition_73957','ManufacturingPartOperationPosition','0');</script>
<b><i> Interface representing Part Operation Position
</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetAlias"><b>GetAlias</b></a>
<dd>  Get the alias of the position
 <dt>
    <a href="#GetAttachStatus"><b>GetAttachStatus</b></a>
<dd>  Returns if the position is attached/detached on the machine
 
 <dt>
    <a href="#GetPartOperation"><b>GetPartOperation</b></a>
<dd>  Associates a product to the Part Operation.
 <dt>
    <a href="#GetProduct"><b>GetProduct</b></a>
<dd>  Retrieves the product associated to the Part Operation.
 <dt>
    <a href="#GetProductOccurrence"><b>GetProductOccurrence</b></a>
<dd>  Retrieves the product associated to the Part Operation.
 <dt>
    <a href="#GetRotaryPlanes"><b>GetRotaryPlanes</b></a>
<dd>  Retrieves the rotary planes associated to the Part Operation.
 <dt>
    <a href="#GetSafetyPlaneSO"><b>GetSafetyPlaneSO</b></a>
<dd>  Retrieves the safety plane associated to the Part Operation.
 <dt>
    <a href="#GetTopPlaneDirectionInversion"><b>GetTopPlaneDirectionInversion</b></a>
<dd>  Gets the top plane direction inversion value.
 <dt>
    <a href="#GetTransitionPlanes"><b>GetTransitionPlanes</b></a>
<dd>  Retrieves the transition planes associated to the Part Operation.
 <dt>
    <a href="#SetAlias"><b>SetAlias</b></a>
<dd>  Set the alias of the position
 
 <dt>
    <a href="#SetProduct"><b>SetProduct</b></a>
<dd>  Associates a product to the Part Operation.
 <dt>
    <a href="#SetSafetyPlaneSO"><b>SetSafetyPlaneSO</b></a>
<dd>  Set the safety plane associated to the Part Operation.
 <dt>
    <a href="#SetTopPlaneDirectionInversion"><b>SetTopPlaneDirectionInversion</b></a>
<dd>  Sets the top plane direction inversion value in order to determine the traverse box position
 relatively to the top plane.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetAlias"><dt>

<table><tr><td>o Func <b>GetAlias</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Get the alias of the position
</dl>
<a name="GetAttachStatus"><dt>

<table><tr><td>o Func <b>GetAttachStatus</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns if the position is attached/detached on the machine
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isAttached</tt>
   <dd>         <br><b>Legal values</b>: TRUE if the position is attached, FALSE else
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the position is not mounted
</dl>
</dl>
<a name="GetPartOperation"><dt>

<table><tr><td>o Func <b>GetPartOperation</b>(<td>) As <script type="text/javascript"> activateLink('ManufacturingPartOperation','ManufacturingPartOperation')</script> </table></dt>
<dl>
  <dd>
 Associates a product to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd> The product to be associated.                 If iProduct is NULL_var, the previously associated product is removed.</dd>
</dl>
</dl>
</dl>
<a name="GetProduct"><dt>

<table><tr><td>o Func <b>GetProduct</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> </table></dt>
<dl>
  <dd>
 Retrieves the product associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProduct</tt>
   <dd> The associated product.             If we are in File Based context, oProduct is a reference
             If we are in Manufacturing Hub context, oProduct is an instance</dd>
</dl>
</dl>
</dl>
<a name="GetProductOccurrence"><dt>

<table><tr><td>o Func <b>GetProductOccurrence</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> </table></dt>
<dl>
  <dd>
 Retrieves the product associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProduct</tt>
   <dd> The associated product. It is an Occurance</dd>
</dl>
</dl>
</dl>
<a name="GetRotaryPlanes"><dt>

<table><tr><td>o Func <b>GetRotaryPlanes</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> </table></dt>
<dl>
  <dd>
 Retrieves the rotary planes associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRotaryPlanes</tt>
   <dd> The rotary planes.        Use </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIMfgAgregate','','CATIMfgAgregate') </script> on oRotaryPlanes to access each plane. 
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the rotary planes is not defined.
</dl>
</dl>
<a name="GetSafetyPlaneSO"><dt>

<table><tr><td>o Func <b>GetSafetyPlaneSO</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> </table></dt>
<dl>
  <dd>
 Retrieves the safety plane associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSafetyPlane</tt>
   <dd> The safety plane. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the safety plane is not defined.
</dl>
</dl>
<a name="GetTopPlaneDirectionInversion"><dt>

<table><tr><td>o Sub <b>GetTopPlaneDirectionInversion</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>oMode</tt>)</table></dt>
<dl>
  <dd>
 Gets the top plane direction inversion value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>         <br><b>Legal values</b>: 1 if the top plane direction has been inverted, 0 otherwise</dd>
</dl>
</dl>
</dl>
<a name="GetTransitionPlanes"><dt>

<table><tr><td>o Func <b>GetTransitionPlanes</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> </table></dt>
<dl>
  <dd>
 Retrieves the transition planes associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTransitionPlanes</tt>
   <dd> The transition planes.        Use </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIMfgAgregate','','CATIMfgAgregate') </script> on oTransitionPlanes to access each plane. 
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the transition planes is not defined.
</dl>
</dl>
<a name="SetAlias"><dt>

<table><tr><td>o Sub <b>SetAlias</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iNewAlias</tt>)</table></dt>
<dl>
  <dd>
 Set the alias of the position
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewAlias</tt>
   <dd> Alias of the position</dd>
</dl>
</dl>
</dl>
<a name="SetProduct"><dt>

<table><tr><td>o Sub <b>SetProduct</b>(<td><script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Associates a product to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd> The product to be associated.                 If iProduct is NULL_var, the previously associated product is removed.</dd>
</dl>
</dl>
</dl>
<a name="SetSafetyPlaneSO"><dt>

<table><tr><td>o Sub <b>SetSafetyPlaneSO</b>(<td><script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> <td><tt>iSafetyPlane</tt>)</table></dt>
<dl>
  <dd>
 Set the safety plane associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSafetyPlane</tt>
   <dd> The safety plane. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the safety plane is not defined.
</dl>
</dl>
<a name="SetTopPlaneDirectionInversion"><dt>

<table><tr><td>o Sub <b>SetTopPlaneDirectionInversion</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iMode</tt>)</table></dt>
<dl>
  <dd>
 Sets the top plane direction inversion value in order to determine the traverse box position
 relatively to the top plane.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>         <br><b>Legal values</b>: 1 if the top plane direction is to be inverted, 0 otherwise
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_INVALIDARG if iMode is different from 0 or 1.
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

