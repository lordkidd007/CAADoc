<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningUseItf ManufacturingProgram (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningUseItf.htm" href="../MachiningUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningUseItf";	}
		function getCurrentObjectName() { 
 	return "ManufacturingProgram"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ManufacturingProgram<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ManufacturingProgram_34462','ManufacturingProgram','0');</script>
<b><i>    Interface dedicated to Program Object.</i></b><br>

 <b>Role</b>: This interface offers services to initialize the current compatible tool in Program for Activity object.
 It also allows to add and remove Manufacturing Operations.<br>
 It is implemented on ManufacturingProgram object.<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AppendOperation"><b>AppendOperation</b></a>
<dd>  Inserts a new Manufacturing Operation at the begining of the program.
 <dt>
    <a href="#GetOperations"><b>GetOperations</b></a>
<dd>  Retrieves Operations of Program
 
 <dt>
    <a href="#GetOutputNCRep"><b>GetOutputNCRep</b></a>
<dd>   Retrieve NC Representation
 
 <dt>
    <a href="#MoveOperation"><b>MoveOperation</b></a>
<dd>  Moves an existing Manufacturing Operation before a reference Operation.
 <dt>
    <a href="#SetCurrentAuthorizedTool"><b>SetCurrentAuthorizedTool</b></a>
<dd>  Writes the current authorized tool.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AppendOperation"><dt>

<table><tr><td>o Func <b>AppendOperation</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAutoSequence</tt>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> </table></dt>
<dl>
  <dd>
 Inserts a new Manufacturing Operation at the begining of the program. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   The type of Manufacturing Operation to create ("Drilling","Pocketing","ToolChange", ...)
 </dd>
    <dt><tt> iAutoSequence</tt>
   <dd>   To determine if thez created Operation is sequenced in the program or not.
   if AutoSequence is TRUE, the new operation will be sequenced in the Program, otherwise it will not.
 </dd>
    <dt><tt> oActivity</tt>
   <dd>   The created Manufacturing Operation.</dd>
</dl>
</dl>
</dl>
<a name="GetOperations"><dt>

<table><tr><td>o Func <b>GetOperations</b>(<td>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> </table></dt>
<dl>
  <dd>
 Retrieves Operations of Program
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOperations</tt>
   <dd> List of Operations</dd>
</dl>
</dl>
</dl>
<a name="GetOutputNCRep"><dt>

<table><tr><td>o Func <b>GetOutputNCRep</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> </table></dt>
<dl>
  <dd>
  Retrieve NC Representation
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospNCRep</tt>
   <dd> [out]   NC Representation (@see DELIMfgNCRep)</dd>
</dl>
</dl>
</dl>
<a name="MoveOperation"><dt>

<table><tr><td>o Sub <b>MoveOperation</b>(<td><script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> <td><tt>iReferenceOperation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> <td><tt>iOperationToMove</tt>)</table></dt>
<dl>
  <dd>
 Moves an existing Manufacturing Operation before a reference Operation.
 The operation to be moved must belong to the program, but not the reference operation. In this last case,
 the operation to move also changes its owner program.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReferenceActivity</tt>
   <dd>   The reference Manufacturing Operation before which the operation is moved. 
 </dd>
    <dt><tt> iActivityToMove</tt>
   <dd>   The Manufacturing Operation to move.</dd>
</dl>
</dl>
</dl>
<a name="SetCurrentAuthorizedTool"><dt>

<table><tr><td>o Sub <b>SetCurrentAuthorizedTool</b>(<td><script type="text/javascript"> activateLink('CATIABase','CATIABase')</script> <td><tt>iActivity</tt>)</table></dt>
<dl>
  <dd>
 Writes the current authorized tool. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActivity</tt>
   <dd>  The Activity</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

