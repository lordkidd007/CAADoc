<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System SystemService (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../System.htm" href="../System.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "System";	}
		function getCurrentObjectName() { 
 	return "SystemService"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SystemService<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SystemService_13520','SystemService','0');</script>
<b><i> Represents an object which provides system services.</i></b><br>

<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Environ"><b>Environ</b></a>
<dd>  Returns the value of an environment variable.
 <dt>
    <a href="#Evaluate"><b>Evaluate</b></a>
<dd>  Evaluates a scripted function.
 <dt>
    <a href="#ExecuteBackgroundProcessus"><b>ExecuteBackgroundProcessus</b></a>
<dd>  Executes an asynchronous process.
 <dt>
    <a href="#ExecuteProcessus"><b>ExecuteProcessus</b></a>
<dd>  Executes a synchronous process.
 <dt>
    <a href="#GetMessage"><b>GetMessage</b></a>
<dd>  Computes a alphanumeric string from a message from a message 
 catalog using the catalog name, the message key, the message 
 parameters and a default NLS message.
 <dt>
    <a href="#Print"><b>Print</b></a>
<dd>  
 <dt>
    <a href="#PrintToStdout"><b>PrintToStdout</b></a>
<dd>  Prints a string on stdout.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Environ"><dt>

<table><tr><td>o Func <b>Environ</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iEnvString</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns the value of an environment variable.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEnvString</tt>
   <dd>   The name of the environment variable
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the value of the <tt>PATH</tt> variable
 in the <tt>Value</tt> string.
 <pre>
 Value = CATIA.SystemService.<font color="red">Environ</font>("PATH")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Evaluate"><dt>

<table><tr><td>o Func <b>Evaluate</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iScriptText</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATScriptLanguage','CATScriptLanguage')</script> <td><tt>iLanguage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFunctionName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iParameters</tt>) As <script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> </table></dt>
<dl>
  <dd>
 Evaluates a scripted function.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iScriptText</tt>
   <dd> The program text
 </dd>
    <dt><tt> iLanguage</tt>
   <dd> The language the program is written in
 </dd>
    <dt><tt> iFunctionName</tt>
   <dd> The name of the function to invoke
 </dd>
    <dt><tt> iParameters</tt>
   <dd> An array of parameters for the function
 </dd>
    <dt><tt> oResult</tt>
   <dd> The value returned by the function (if any)
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example executes the function CATMain from the CodeToEvaluate string
 <pre>
 Dim params()
 Dim codeToEvaluate
 CodeToEvaluate = "Sub CATMain()" & vbNewLine & _
                  "MsgBox " & chr(34) & "Hello World" & chr(34) & vbNewLine & _
                  "End Sub"
 CATIA.SystemService.<font color="red">Evaluate</font> CodeToEvaluate, CATVBScriptLanguage, "CATMain", params
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="ExecuteBackgroundProcessus"><dt>

<table><tr><td>o Func <b>ExecuteBackgroundProcessus</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iExecutablePath</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Executes an asynchronous process. This process is launched in background and
 <tt>ExecuteBackgroundProcess</tt> doesn't wait for it to complete.
 If the executable to run needs a specific environment to works correctly (for example
 environment variables like PATH or LD_LIBRARY_PATH correctly set), this environment must
 have been set in order to make this method succeed. If this executable needs to be launched 
 from a window, this method will fail.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExecutablePath</tt>
   <dd>   The path of the executable to run and its arguments
		If the executable is not present in the PATH environment variable, you must specify its
 	complete absolute path. If this path contains blanks, you must enclose it with the simple
		quote character ''' : 
		for example CATIA.SystemService.ExecuteBackgroundProcess "'C:\Program Files\myApp\myApp.exe' myArg".
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Non significative return code. It's never the asynchronous process return code
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example executes the command located at 
 <pre><executable path></pre>
 and doesn't wait the end of its execution.
 <pre>
 CATIA.SystemService.<font color="red">ExecuteBackgroundProcessus</font> "<executable path>"
 </pre>
 </dl>
</dl>
</dl>
<a name="ExecuteProcessus"><dt>

<table><tr><td>o Func <b>ExecuteProcessus</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iExecutablePath</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Executes a synchronous process. If this process is succesfully launched,
 <tt>ExecuteProcessus</tt> waits for it to  terminate and returns the process return code.
 If the executable to run needs a specific environment to works correctly (for example
 environment variables like PATH or LD_LIBRARY_PATH correctly set), this environment must
 have been set in order to make this method succeed. If this executable needs to be launched 
 from a window, this method will fail.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExecutablePath</tt>
   <dd>   The path of the executable to run and its arguments.
       If the executable is not present in the PATH environment variable, you must specify its complete absolute path.
       If this executable path contains blanks, you must enclose it with the simple quote character ''' : 
            for example CATIA.SystemService.ExecuteProcessus "'C:\Program Files\myApp\myApp.exe' myArg".
       On Windows, to run a batch file you must execute the command interpreter :
            set the executable to cmd.exe 
            set the arguments to the following ones : /c plus the name of the batch file. 
            For example CATIA.SystemService.ExecuteProcessus "cmd.exe /c E:\MyBatchFile.bat"
       On Windows, an argument that contains a blank must be doubly enclosed ; first with the single quote character then,
            inside the single enclosing quote, with the double quote character.
            For example CATIA.SystemService.ExecuteProcessus "cmd.exe /c '" & Chr$(34) & "E:\My Bat File.bat" & Chr$(34) & "'" 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The synchronous process return code
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example executes the command located at 
 <pre><executable path></pre>
 waits for it to end, and returns its return code.
 <pre>
 ReturnCode = CATIA.SystemService.<font color="red">ExecuteProcessus</font>("<executable path>")
 </pre>
 </dl>
</dl>
</dl>
<a name="GetMessage"><dt>

<table><tr><td>o Func <b>GetMessage</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iCatalogName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iMessageKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iMsgParameters</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDefaultMsg</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Computes a alphanumeric string from a message from a message 
 catalog using the catalog name, the message key, the message 
 parameters and a default NLS message.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd>   Name of the catalog containing the message, without the .CATNls suffix.
   This catalog will be searched in the directories from the environment 
   variable CATMsgCatalogPath.
 </dd>
    <dt><tt> iMessageKey</tt>
   <dd>   Key of the message to be retrieved
 </dd>
    <dt><tt> iMsgParameters</tt>
   <dd>   Array giving to the method possible parameter values
   which the method will integrate into the parameterized
   message. 
   The parameter value count should correspond to the message 
   parameter highest index (this is not exactly the parameter count: 
   the software authorizes parameter indices that are not
   consecutive, which would distinguish the message 
   parameters highest index from the parameter count).
   If the input parameter value count is not sufficient, a default 
   behaviour is foreseen: "?" characters are introduced into the
   computed output resource string.      
 </dd>
    <dt><tt> iDefaultMsg</tt>
   <dd>   Message to be used if a problem occured while accessing the message 
   catalog file or the key. You may, for example, put in this message 
   an information about an access problem. 
 </dd>
    <dt><tt> oMessage</tt>
   <dd>   The built message.
 <dt><b>Example:</b>
 <dd>
 This example computes in MyErrorMessage the message associated to the couple 
 catalog CATSysCommunication / key CATSysComReentranceError_152005.Request
 <pre>
 Dim MsgParams()
 Dim MyErrorMessage
 MyErrorMessage = CATIA.SystemService.<font color="red">GetMessage</font>("CATSysCommunication", "CATSysComReentranceError_152005.Request", MsgParams, "MsgCatalogError")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Print"><dt>

<table><tr><td>o Sub <b>Print</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iString</tt>)</table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R213
 Use  
<script type="text/javascript"> activateLinkAnchor('CATIASystemService','PrintToStdout','CATIASystemService.PrintToStdout') </script> instead. <br><b>Precondition</b>: Print is a reserved keyword of VBA then this method cannot be used in a VBA macro.
 Prints a string on stdout.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iString</tt>
   <dd>   The string to print
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the string "Hello world!".
 <pre>
 CATIA.SystemService.<font color="red">Print</font>("Hello world!")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="PrintToStdout"><dt>

<table><tr><td>o Sub <b>PrintToStdout</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iString</tt>)</table></dt>
<dl>
  <dd>
 Prints a string on stdout.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iString</tt>
   <dd>   The string to print
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the string "Hello world!".
 <pre>
 CATIA.SystemService.<font color="red">PrintToStdout</font>("Hello world!")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

