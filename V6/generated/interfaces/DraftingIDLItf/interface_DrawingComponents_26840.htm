<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingIDLItf DrawingComponents (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingIDLItf.htm" href="../DraftingIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingIDLItf";	}
		function getCurrentObjectName() { 
 	return "DrawingComponents"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DrawingComponents<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingComponents_26840','DrawingComponents','0');</script>
<b><i>   A collection of all the drawing components (ditto) currently managed by a
 drawing view of drawing sheet in a drawing representation.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates a drawing component instance and adds it to the DrawingComponents collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a drawing component instance using its index or its name from the DrawingComponents collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a drawing component from the DrawingComponents collection.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('DrawingView','DrawingView')</script> <td><tt>iDrawingComponentRef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPositionX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPositionY</tt>) As <script type="text/javascript"> activateLink('DrawingComponent','DrawingComponent')</script> </table></dt>
<dl>
  <dd>
 Creates a drawing component instance and adds it to the DrawingComponents collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDrawingComponentRef</tt>
   <dd>   The view (i.e. the detail) that is the component reference .
   This view also called a detail MUST belong to a sheet of component references (i.e. details)
 </dd>
    <dt><tt> iPositionX,iPositionY</tt>
   <dd>   The drawing component x and y coordinates, expressed in millimeters,
   with respect to the drawing view coordinate system
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing component instance <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing component instance with a given component reference <tt>MyComponentRef</tt>
 coming from a Sheet of component references (i.e. details) <tt>SheetComponentRef</tt> 
 and retrieved in <tt>MyComponentInst</tt> in the drawing view collection
 of the <tt>MyView</tt> drawing view.
 This view belongs to the drawing view collection of the drawing sheet
 <pre>
 Dim MyComponentRef As DrawingView
 Set MyComponentRef = SheetComponentRef.Views.<font color="red">Item</font>(1)
 Dim MyView As DrawingView
 Set MyView = MySheet.Views.<font color="red">ActiveView</font>
 Dim MyComponentInst As DrawingComponent
 Set MyComponentInst = MyView.Components.<font color="red">Add</font>(MyComponentRef, 100., 50.)
 </pre>
 </dl>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('DrawingComponent','DrawingComponent')</script> </table></dt>
<dl>
  <dd>
 Returns a drawing component instance using its index or its name from the DrawingComponents collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the drawing component instance to retrieve from
   the collection of drawing components.
   As a numerics, this index is the rank of the drawing component instance
   in the collection.
   The index of the first drawing component instance in the collection is 1, and
   the index of the last drawing component instance is Count.
   As a string, it is the name you assigned to the drawing component instance using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property  
  <dt> <b>Returns:</b> 
  <dd>  The retrieved drawing component instance <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ThisDrawingComponent</tt> the second drawing component instance,
 <tt>MyView</tt> in the drawing view collection of the active sheet
 in the active representation, supposed to be a drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.Sheets.ActiveSheet
 Dim MyView  As DrawingView
 Set MyView  = MySheet.Views.ActiveView
 Dim ThisDrawingComponent As DrawingComponent
 Set ThisDrawingComponent = MyView.Components.<font color="red">Item</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a drawing component from the DrawingComponents collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index of the drawing component to remove from
   the collection of drawing components.
   As a numerics, this index is the rank of the drawing component
   in the collection.
   The index of the first drawing component instance in the collection is 1, and
   the index of the last drawing component instance is Count.
   As a string, it is the name you assigned to the drawing component using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property  <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example removes the third drawing component instance 
 in the drawing component collection of the active view
 of the active representation, supposed to be a drawing representation.
 <pre>
 Dim MyView As DrawingView
 Set MyView  = MySheet.Views.ActiveView
 MyView.Components.<font color="red">Remove</font>(3)
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

