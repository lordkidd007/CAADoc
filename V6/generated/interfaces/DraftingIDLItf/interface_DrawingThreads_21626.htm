<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingIDLItf DrawingThreads (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingIDLItf.htm" href="../DraftingIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingIDLItf";	}
		function getCurrentObjectName() { 
 	return "DrawingThreads"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DrawingThreads<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingThreads_21626','DrawingThreads','0');</script>
<b><i>   A collection of all the drawing threads currently managed by a
 drawing view of drawing sheet in a drawing representation.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates a drawing thread and adds it to the DrawingThreads collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a drawing thread using its index from the DrawingThreads collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a drawing thread from the DrawingThreads collection.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>iGeomElem</tt>) As <script type="text/javascript"> activateLink('DrawingThread','DrawingThread')</script> </table></dt>
<dl>
  <dd>
 Creates a drawing thread and adds it to the DrawingThreads collection.
 <dd> Notice that an authoring product licence is required.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeomElem</tt>
   <dd>   Geometry to create the thread on. Be careful, this geometry must be a 2D geometry
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing thread <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing thread
 and retrieved in <tt>MyThread</tt> in the drawing view collection
 of the <tt>MyView</tt> drawing view.
 This view belongs to the drawing view collection of the drawing sheet
 <pre>
 Dim MyView As DrawingView
 Set MyView = MySheet.Views.<font color="red">ActiveView</font>
 Dim MyThread As DrawingThread
 Set MyThread = MyView.Threads.<font color="red">Add</font>(iGeomElem)
 </pre>
 </dl>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('DrawingThread','DrawingThread')</script> </table></dt>
<dl>
  <dd>
 Returns a drawing thread using its index from the DrawingThreads collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index of the drawing thread to retrieve from the collection of drawing threads.
   As a numerics, this index is the rank of the drawing thread in the collection.
   The index of the first drawing thread in the collection is 1, and
   the index of the last drawing thread is Count.
   As a string, it is the name you assigned to the drawing thread using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property or when creating it using   the 
<script type="text/javascript"> activateLinkAnchor('','Add','Add') </script> method. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved drawing thread <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ThisDrawingThread</tt> the second drawing thread,
 in the drawing view collection of the active view
 in the active sheet, in the active representation supposed to be a drawing representation.
 <pre>
 Dim MyView  As DrawingView
 Set MyView  = MySheet.Views.ActiveView
 Dim ThisDrawingThread As DrawingThread
 Set ThisDrawingThread = MyView.Threads.<font color="red">Item</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a drawing thread from the DrawingThreads collection.
 <dd> Notice that an authoring product licence is required.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index of the drawing thread to remove from
   the collection of drawing threads.
   As a numerics, this index is the rank of the drawing thread
   in the collection.
   The index of the first drawing thread in the collection is 1, and
   the index of the last drawing thread is Count.
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example removes the third drawing thread 
 in the drawing thread collection of the active view
 of the active representation, supposed to be a drawing representation.
 <pre>
 Dim MyView As DrawingView
 Set MyView  = MySheet.Views.ActiveView
 MyView.DrawingThreads.<font color="red">Remove</font>(3)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

