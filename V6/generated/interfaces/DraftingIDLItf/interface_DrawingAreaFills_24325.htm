<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingIDLItf DrawingAreaFills (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingIDLItf.htm" href="../DraftingIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingIDLItf";	}
		function getCurrentObjectName() { 
 	return "DrawingAreaFills"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DrawingAreaFills<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingAreaFills_24325','DrawingAreaFills','0');</script>
<b><i> A collection of all the drawing area fills currently managed by a
 drawing view of drawing sheet in a drawing representation.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates an isolated DrawingAreaFill and adds it to the DrawingAreaFills collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a drawing area fill using its index from the DrawingAreaFills collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a DrawingAreaFill from the DrawingAreaFills collection.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iNumberOfPointsPerContour</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iPointsCoordinates</tt>) As <script type="text/javascript"> activateLink('DrawingAreaFill','DrawingAreaFill')</script> </table></dt>
<dl>
  <dd>
 Creates an isolated DrawingAreaFill and adds it to the DrawingAreaFills collection.
 <dd> Notice that an authoring product licence is required.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumberOfPointsPerContour</tt>
   <dd>   Number of points per contour
 </dd>
    <dt><tt> iPointsCoordinates</tt>
   <dd>   External and internal points coordinates of DrawingAreaFill
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created DrawingAreaFill <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates in <tt>myAreaFill</tt> a DrawingAreaFill with an external and internal contour.
 The external contour is a square and the internal one is a triangle
 <pre>
 NumberOfPtsPerContour = Array(4, 3)
 PtsCoordinates  = Array(10., 10., 50., 10., 50., 50., 10., 50., 20., 20., 40., 20., 30., 40.)
 Dim myAreaFill As DrawingAreaFill
 set myAreaFill = MyView.AreaFills.<font color="red">Add</font>(NumberOfPtsPerContour, PtsCoordinates)
 </pre>
 </dl>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('DrawingAreaFill','DrawingAreaFill')</script> </table></dt>
<dl>
  <dd>
 Returns a drawing area fill using its index from the DrawingAreaFills collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index of the drawing area fill to retrieve from the collection of drawing area fills.
   As a numerics, this index is the rank of the drawing area fill in the collection.
   The index of the first drawing area fill in the collection is 1, and the index of the last drawing area fill is Count.
   As a string, it is the name you assigned to the drawing area fill using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property or when creating it using   the 
<script type="text/javascript"> activateLinkAnchor('','Add','Add') </script> method. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved drawing area fill <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>myAreaFill</tt> the second drawing area fill,
 in the drawing view collection of the active view
 in the active sheet, in the active representation supposed to be a drawing representation.
 <pre>
 Dim MyView  As DrawingView
 Set MyView  = MySheet.Views.ActiveView
 Dim myAreaFill As DrawingAreaFill
 Set myAreaFill = MyView.AreaFills.<font color="red">Item</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a DrawingAreaFill from the DrawingAreaFills collection.
 <dd> Notice that an authoring product licence is required.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index of the drawing area fill to remove from the collection of drawing area fills.
   As a numerics, this index is the rank of the drawing area fill in the collection.
   The index of the first drawing area fill in the collection is 1, and the index of the last drawing area fill is Count.
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example removes the third drawing area fill 
 in the drawing area fill collection of the active view
 of the active representation, supposed to be a drawing representation.
 <pre>
 Dim MyView As DrawingView
 Set MyView  = MySheet.Views.ActiveView
 MyView.AreaFills.<font color="red">Remove</font>(3)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

