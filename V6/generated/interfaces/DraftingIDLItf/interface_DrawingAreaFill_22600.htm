<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingIDLItf DrawingAreaFill (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingIDLItf.htm" href="../DraftingIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingIDLItf";	}
		function getCurrentObjectName() { 
 	return "DrawingAreaFill"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DrawingAreaFill<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingAreaFill_22600','DrawingAreaFill','0');</script>
<b><i>  Represents a drawing area fill in a drawing view.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#AreaFillType"><b>AreaFillType</b></a>
<dd>  Returns area fill type.
 <dt>
    <a href="#DisplayAtTrueDepth"><b>DisplayAtTrueDepth</b></a>
<dd>  Checks if the Area Fill has its "Display at true depth" property valued to True or False.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetCharacteristics"><b>GetCharacteristics</b></a>
<dd>  Gets the number of contours and the number of points (external and internals contours) of a drawing area fill.
 <dt>
    <a href="#GetPoints"><b>GetPoints</b></a>
<dd>  Get points coordinates of external and internal contours of area fill.
 <dt>
    <a href="#Isolate"><b>Isolate</b></a>
<dd>  Isolates a drawing area fill from its geometry.
 <dt>
    <a href="#ModifyPoints"><b>ModifyPoints</b></a>
<dd>  Set points coordinates of external and internal contours of area fill.
 <dt>
    <a href="#SetPattern"><b>SetPattern</b></a>
<dd>  Sets a pattern from its name on an area fill.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="AreaFillType"><dt>

<table><tr><td>o Property <b>AreaFillType</b>(<td>) As <script type="text/javascript"> activateLink('CatAreaFillType','CatAreaFillType')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns area fill type.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the anchor position of the <tt>MyText</tt> drawing text to 
 top left position.
 <pre>
 MyText.<font color="red">AnchorPosition</font> = TopLeft
 </pre>
 </dl>
</dl>
<a name="DisplayAtTrueDepth"><dt>

<table><tr><td>o Property <b>DisplayAtTrueDepth</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Checks if the Area Fill has its "Display at true depth" property valued to True or False.
 Sets the "Display at true depth" property value to True or False.
 <b>Role</b>: The modification of this property to true does not necessarily means that the Area Fill
 will be "Displayed at true depth". The value is ignored if the Area Fill is created
 in a main view, a backgound view, in a 2D component reference, in drafting.
 However it can be usefull to modify its value in case of copy and paste in a 2DLayout view,
 in a 2D component reference for an instanciation in a 2DLayout view.
 <!-- @sample -->
 <dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the display at true depth of the <tt>myAreaFill</tt> Area Fill to True
 <pre>
 myAreaFill.<font color="red">DisplayAtTrueDepth</font> = True
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetCharacteristics"><dt>

<table><tr><td>o Sub <b>GetCharacteristics</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>oNumberOfContour</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>oNumberOfPoints</tt>)</table></dt>
<dl>
  <dd>
 Gets the number of contours and the number of points (external and internals contours) of a drawing area fill.
 This method can be used before calling GetPoints
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumberOfContour</tt>
   <dd>   Number of contours
 </dd>
    <dt><tt> oNumberOfPoints</tt>
   <dd>   Number of points
 <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example gets profil infomation of <tt>myAreaFill</tt>.
 <pre>
 Dim numberOfContours As Long
 Dim numberOfPoints As Long
 myAreaFill.<font color="red">GetCharacteristics</font> numberOfContours, numberOfPoints
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetPoints"><dt>

<table><tr><td>o Sub <b>GetPoints</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oNumberOfPointsPerContour</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oPointsCoordinates</tt>)</table></dt>
<dl>
  <dd>
 Get points coordinates of external and internal contours of area fill.
 This method can be used for isolated or not drawing area fills
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumberOfPointsPerContour</tt>
   <dd>   Number of points per contour
 </dd>
    <dt><tt> oPointsCoordinates</tt>
   <dd>   External and internal points coordinates of drawing area fill
 <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example gets geometrical infomation of <tt>myAreaFill</tt>.
 <pre>
 Dim numberOfContours As Long
 Dim numberOfPoints As Long
 Dim NumberOfPtsPerContour() as Variant
 Dim PtsCoordinates() as Variant
 myAreaFill.<font color="red">GetCharacteristics</font> numberOfContours, numberOfPoints
 Redim NumberOfPtsPerContour(numberOfContours)
 Redim PtsCoordinates(2*numberOfPoints)
 myAreaFill.<font color="red">GetPoints</font> NumberOfPtsPerContour, PtsCoordinates
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Isolate"><dt>

<table><tr><td>o Sub <b>Isolate</b>(<td>)</table></dt>
<dl>
  <dd>
 Isolates a drawing area fill from its geometry.
 <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example isolates <tt>myAreaFill</tt> from its geometry.
 <pre>
 myAreaFill.<font color="red">Isolate</font>
 </pre>
 </dl>
</dl>
<a name="ModifyPoints"><dt>

<table><tr><td>o Sub <b>ModifyPoints</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iNumberOfPointsPerContour</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iPointsCoordinates</tt>)</table></dt>
<dl>
  <dd>
 Set points coordinates of external and internal contours of area fill.
 This method can be used for isolated or not drawing area fills.
 If drawing area fill points curves, it is turned into a drawing area fill on points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumberOfPointsPerContour</tt>
   <dd>   Number of points per contour
 </dd>
    <dt><tt> iPointsCoordinates</tt>
   <dd>   External and internal points coordinates of drawing area fill
 <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example sets geometrical infomation of <tt>myAreaFill</tt>.
 <pre>
 NumberOfPtsPerContour = Array(4, 3)
 PtsCoordinates  = Array(10., 10., 50., 10., 50., 50., 10., 50., 20., 20., 40., 20., 30., 40.)
 myAreaFill.<font color="red">ModifyPoints</font>NumberOfPtsPerContour, PtsCoordinates
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetPattern"><dt>

<table><tr><td>o Sub <b>SetPattern</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPatternNameFromStandard</tt>)</table></dt>
<dl>
  <dd>
 Sets a pattern from its name on an area fill. Pattern name must exist on document area fill belong to.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPatternNameFromStandard</tt>
   <dd>   Pattern name to retrieve from embedded standard
 <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example sets a pattern on <tt>myAreaFill</tt>. Pattern names can be retrieved in "Tools/Standards..." command
 under "Patterns" node of drafting standards.
 <pre>
 myAreaFill.<font color="red">SetPattern</font> "alu 30"
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

