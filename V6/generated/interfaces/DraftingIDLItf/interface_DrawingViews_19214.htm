<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingIDLItf DrawingViews (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingIDLItf.htm" href="../DraftingIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingIDLItf";	}
		function getCurrentObjectName() { 
 	return "DrawingViews"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DrawingViews<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingViews_19214','DrawingViews','0');</script>
<b><i> A collection of all the drawing views currently managed by a
 drawing sheet in a drawing representation.</i></b><br>

 <br><b>Warning</b>: This interface is not available with 2D Layout for 3D Design.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#ActiveView"><b>ActiveView</b></a>
<dd>  Returns the active drawing view of the active drawing sheet.
 <dt>
    <a href="#DrawingDefineGenView"><b>DrawingDefineGenView</b></a>
<dd>  Returns the the factory of generated views.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates a drawing view and adds it to the drawing view collection.
 <dt>
    <a href="#AddFrontView"><b>AddFrontView</b></a>
<dd>  Creates a Front View and adds it to the drawing view collection.
 <dt>
    <a href="#AddIsometricView"><b>AddIsometricView</b></a>
<dd>  Creates an Isometric View and adds it to the drawing view collection.
 <dt>
    <a href="#AddProjectionView"><b>AddProjectionView</b></a>
<dd>  Creates a Projection View and adds it to the drawing view collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a drawing view using its index or its name from the DrawingViews collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a drawing view from the DrawingViews collection.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="ActiveView"><dt>

<table><tr><td>o Property <b>ActiveView</b>(<td>) As <script type="text/javascript"> activateLink('DrawingView','DrawingView')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the active drawing view of the active drawing sheet.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 The following example retrieves in <tt>ViewToWorkIn</tt>
 the active drawing view
 in the DrawingSheets collection of the active drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Dim ViewToWorkIn As DrawingView
 Set ViewToWorkIn = MyDrawing.Sheets.ActiveSheet.DrawingViews.<font color="red">ActiveView</font>
 </pre>
 </dl>
</dl>
<a name="DrawingDefineGenView"><dt>

<table><tr><td>o Property <b>DrawingDefineGenView</b>(<td>) As <script type="text/javascript"> activateLink('CATIABase','CATIABase')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the the factory of generated views.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>myDefGenView</tt> the factory to create generative views from 
 of the <tt>MyViews</tt> collection.
 <pre>
 Dim myDefGenView As DrawingDefineGenView
 Set myDefGenView = MyViews.<font color="red">DrawingDefineGenView</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDrawingViewName</tt>) As <script type="text/javascript"> activateLink('DrawingView','DrawingView')</script> </table></dt>
<dl>
  <dd>
 Creates a drawing view and adds it to the drawing view collection.
 This drawing view becomes the active one.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDrawingViewName</tt>
   <dd>   The name to assign to the created drawing view
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing view <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing view named <tt>LeftView</tt>
 and retrieved in <tt>MyView</tt>
 in the drawing view collection of the <tt>MySheet</tt> drawing sheet.
 This sheet belongs to 
 the drawing sheet collection of the active drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.Sheets.<font color="red">Item</font>("FirstSheet")
 Dim MyView As DrawingView
 Set MyView = MySheet.Views.<font color="red">Add</font>("LeftView")
 </pre>
 </dl>
</dl>
</dl>
<a name="AddFrontView"><dt>

<table><tr><td>o Func <b>AddFrontView</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iXPt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iYPt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDrawingViewName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ2</tt>) As <script type="text/javascript"> activateLink('DrawingView','DrawingView')</script> </table></dt>
<dl>
  <dd>
 Creates a Front View and adds it to the drawing view collection. <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iXPt1,iYPt1</tt>
   <dd>   The anchor point of the view.
 </dd>
    <dt><tt> iDrawingViewName</tt>
   <dd>   The name to assign to the created drawing view
 </dd>
    <dt><tt> iX1,iY1,iZ1</tt>
   <dd>   The components of the first vector with respect to the document 3D axis
   system 
 </dd>
    <dt><tt> iX2,iY2,iZ2</tt>
   <dd>   The components of the second vector with respect to the document 3D axis
   system 
 The projection plane is the plane to which the document's geometrical
 objects are projected and is used as the drawing view plane.
 This plane is defined in the document 3D space using the components of two
 of its vectors.
 The cross product of vector V1(<tt>X1</tt>, <tt>Y1</tt>, <tt>Z1</tt>) by
 vector V2(<tt>X2</tt>, <tt>Y2</tt>, <tt>Z2</tt>) defines the projection
 direction.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing view <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing view named <tt>LeftView</tt>
 and retrieved in <tt>MyView</tt>
 in the drawing view collection of the <tt>MySheet</tt> drawing sheet.
 This sheet belongs to 
 the drawing sheet collection of the active drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.Sheets.<font color="red">Item</font>("FirstSheet")
 Dim MyView As DrawingView
 Set MyView = MySheet.Views.<font color="red">AddFrontView</font>(10., 10., "MyFrontView",1., 0., 0., 0., 1., 0.)
 </pre>
 </dl>
</dl>
</dl>
<a name="AddIsometricView"><dt>

<table><tr><td>o Func <b>AddIsometricView</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iXPt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iYPt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDrawingViewName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ2</tt>) As <script type="text/javascript"> activateLink('DrawingView','DrawingView')</script> </table></dt>
<dl>
  <dd>
 Creates an Isometric View and adds it to the drawing view collection. <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iXPt1,iYPt1</tt>
   <dd>   The anchor point of the view.
 </dd>
    <dt><tt> iDrawingViewName</tt>
   <dd>   The name to assign to the created drawing view
 </dd>
    <dt><tt> iX1,iY1,iZ1</tt>
   <dd>   The components of the first vector with respect to the document 3D axis
   system 
 </dd>
    <dt><tt> iX2,iY2,iZ2</tt>
   <dd>   The components of the second vector with respect to the document 3D axis
   system 
 The projection plane is the plane to which the document's geometrical
 objects are projected and is used as the drawing view plane.
 This plane is defined in the document 3D space using the components of two
 of its vectors.
 The cross product of vector V1(<tt>X1</tt>, <tt>Y1</tt>, <tt>Z1</tt>) by
 vector V2(<tt>X2</tt>, <tt>Y2</tt>, <tt>Z2</tt>) defines the projection
 direction.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing view <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing view named <tt>LeftView</tt>
 and retrieved in <tt>MyView</tt>
 in the drawing view collection of the <tt>MySheet</tt> drawing sheet.
 This sheet belongs to 
 the drawing sheet collection of the active drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.Sheets.<font color="red">Item</font>("FirstSheet")
 Dim MyView As DrawingView
 Set MyView = MySheet.Views.<font color="red">AddIsometric</font>(10., 10., "MyIsometricView",1., 0., 0., 0., 1., 0.)
 </pre>
 </dl>
</dl>
</dl>
<a name="AddProjectionView"><dt>

<table><tr><td>o Func <b>AddProjectionView</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iXPt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iYPt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDrawingViewName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DrawingView','DrawingView')</script> <td><tt>iParentView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatProjViewType','CatProjViewType')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('DrawingView','DrawingView')</script> </table></dt>
<dl>
  <dd>
 Creates a Projection View and adds it to the drawing view collection. <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iXPt1,iYPt1</tt>
   <dd>   The anchor point of the projection view.
 </dd>
    <dt><tt> iDrawingViewName</tt>
   <dd>   The name to assign to the created drawing view
 </dd>
    <dt><tt> iParentView</tt>
   <dd>   The parent view.
 </dd>
    <dt><tt> iType</tt>
   <dd>   The type of the drawing view with respect to its parent view
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing view <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing view named <tt>LeftView</tt>
 and retrieved in <tt>MyView</tt>
 in the drawing view collection of the <tt>MySheet</tt> drawing sheet.
 This sheet belongs to 
 the drawing sheet collection of the active drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.Sheets.<font color="red">Item</font>("FirstSheet")
 Dim MyView As DrawingView
 Set MyView = MySheet.Views.<font color="red">AddProjectionView</font>(10., 10.0, "MyLeftView",myParentView,catLeftView)
 </pre>
 </dl>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('DrawingView','DrawingView')</script> </table></dt>
<dl>
  <dd>
 Returns a drawing view using its index or its name from the DrawingViews collection.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the drawing view to retrieve from
   the collection of drawing views.
   As a numerics, this index is the rank of the drawing view
   in the collection.
   The index of the first drawing view in the collection is 1, and
   the index of the last drawing view is Count.
   As a string, it is the name you assigned to the drawing view using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property or when creating it using   the 
<script type="text/javascript"> activateLinkAnchor('','Add','Add') </script> method. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved drawing view 
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example retrieves in <tt>ThisDrawingView</tt> the second drawing view,
 and in <tt>ThatDrawingView</tt> the drawing view named
 <tt>MyView</tt> in the drawing view collection of the active sheet
 in the active representation, supposed to be a drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.sheets.ActiveSheet
 Dim ThisDrawingView As DrawingView
 Set ThisDrawingView = MySheet.Views.ActiveView.<font color="red">Item</font>(2)
 Dim ThatDrawingView As DrawingView
 Set ThatDrawingView = MySheet.Views.ActiveView.<font color="red">Item</font>("MyView")
 </pre></pre></dd>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a drawing view from the DrawingViews collection.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design and 
 it's forbidden and not possible to delete main view and background view contained in this collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the drawing view to remove from
   the collection of drawing views.
   As a numerics, this index is the rank of the drawing view
   in the collection.
   The index of the first drawing view in the collection is 1, and
   the index of the last drawing view is Count.
   As a string, it is the name you assigned to the drawing view using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property or when creating it using   the 
<script type="text/javascript"> activateLinkAnchor('','Add','Add') </script> method. <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example removes the third drawing view and the drawing view
 named <tt>TopView</tt> in the drawing view collection of the active sheet
 of the active representation, supposed to be a drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.Sheets.ActiveSheet
 MySheet.ActiveViews.<font color="red">Remove</font>(3)
 MySheet.ActiveViews.<font color="red">Remove</font>("TopView")
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

