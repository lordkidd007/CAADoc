<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingIDLItf DrawingSheets (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingIDLItf.htm" href="../DraftingIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingIDLItf";	}
		function getCurrentObjectName() { 
 	return "DrawingSheets"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DrawingSheets<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingSheets_20396','DrawingSheets','0');</script>
<b><i> A collection of all the drawing sheets currently managed by the
 drawing representation.</i></b><br>

 <br><b>Warning</b>: This interface is not available with 2D Layout for 3D Design.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#ActiveSheet"><b>ActiveSheet</b></a>
<dd>  Returns the active drawing sheet of the drawing representation.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates a drawing sheet and adds it to the DrawingSheets collection.
 <dt>
    <a href="#AddDetail"><b>AddDetail</b></a>
<dd>  Creates a detail drawing sheet and adds it to the DrawingSheets collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a drawing sheet using its index or its name from the DrawingSheets collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a drawing sheet from the DrawingSheets collection.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="ActiveSheet"><dt>

<table><tr><td>o Property <b>ActiveSheet</b>(<td>) As <script type="text/javascript"> activateLink('DrawingSheet','DrawingSheet')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the active drawing sheet of the drawing representation.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 The following example retrieves in <tt>SheetToWorkIn</tt>
 the active drawing sheet of the active drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim SheetToWorkIn As DrawingSheet
 Set SheetToWorkIn =  MyDrawing.Sheets.<font color="red">ActiveSheet</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDrawingSheetName</tt>) As <script type="text/javascript"> activateLink('DrawingSheet','DrawingSheet')</script> </table></dt>
<dl>
  <dd>
 Creates a drawing sheet and adds it to the DrawingSheets collection.
 This drawing sheet becomes the active one.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDrawingSheetName</tt>
   <dd>   The name to assign to the created DrawingSheet object
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing sheet <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing sheet named <tt>FirstSheet</tt>
 and retrieved in <tt>MySheet</tt> 
 in the drawing sheet collection of the active draing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.Sheets.<font color="red">Add</font>("FirstSheet")
 </pre>
 </dl>
</dl>
</dl>
<a name="AddDetail"><dt>

<table><tr><td>o Func <b>AddDetail</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDrawingSheetName</tt>) As <script type="text/javascript"> activateLink('DrawingSheet','DrawingSheet')</script> </table></dt>
<dl>
  <dd>
 Creates a detail drawing sheet and adds it to the DrawingSheets collection.
 This detail drawing sheet becomes the active one.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDrawingSheetName</tt>
   <dd>   The name to assign to the created detail DrawingSheet object
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing sheet <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 The following example creates a detail drawing sheet named <tt>FirstSheet</tt>
 and retrieved in <tt>MySheet</tt> 
 in the drawing sheet collection of the active drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim MySheet As DrawingSheet
 Set MySheet = MyDrawing.Sheets.<font color="red">Add</font>("FirstSheet")
 </pre>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('DrawingSheet','DrawingSheet')</script> </table></dt>
<dl>
  <dd>
 Returns a drawing sheet using its index or its name from the DrawingSheets collection. 
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the drawing sheet to retrieve from
   the collection of drawing sheets.
   As a numerics, this index is the rank of the drawing sheet
   in the collection.
   The index of the first drawing sheet in the collection is 1, and
   the index of the last drawing sheet is Count.
   As a string, it is the name you assigned to the drawing sheet using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property or when creating it using   the 
<script type="text/javascript"> activateLinkAnchor('','Add','Add') </script> method. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved drawing sheet <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ThisDrawingSheet</tt> the third drawing sheet,
 and in <tt>ThatDrawingSheet</tt> the drawing sheet named
 <tt>MySheet</tt> in the drawing sheet collection of the active representation,
 supposed to be a drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 Dim ThisDrawingSheet As DrawingSheet
 Set ThisDrawingSheet = MyDrawing.Sheets.<font color="red">Item</font>(3)
 Dim ThatDrawingSheet As DrawingSheet
 Set ThatDrawingSheet = MyDrawing.Sheets.<font color="red">Item</font>("MySheet")
 </pre>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a drawing sheet from the DrawingSheets collection.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the drawing sheet to remove from
   the collection of drawing sheets.
   As a numerics, this index is the rank of the drawing sheet
   in the collection.
   The index of the first drawing sheet in the collection is 1, and
   the index of the last drawing sheet is Count.
   As a string, it is the name you assigned to the drawing sheet using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('CATIABase','Name','CATIABase.Name') </script> property or when creating it using   the 
<script type="text/javascript"> activateLinkAnchor('','Add','Add') </script> method. <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 The following example removes the second drawing sheet and the drawing sheet named
 <tt>SheetToBeRemoved</tt> in the drawing sheet collection
 of the active representation, supposed to be a drawing representation.
 <pre>
 Dim MyDrawing as DrawingDrawing
 Set MyDrawing = CATIA.ActiveEditor.ActiveObject
 MyDrawing.Sheets.<font color="red">Remove</font>(2)
 </pre>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

