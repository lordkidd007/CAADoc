<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DELResourceBuilderIDLItf RscApplicativeProfilesGroup (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DELResourceBuilderIDLItf.htm" href="../DELResourceBuilderIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DELResourceBuilderIDLItf";	}
		function getCurrentObjectName() { 
 	return "RscApplicativeProfilesGroup"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>RscApplicativeProfilesGroup<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_RscApplicativeProfilesGroup_67066','RscApplicativeProfilesGroup','0');</script>
<b><i> Interface to manage Applicative Profile Groups.</i></b><br>


 <strong>Role</strong>:
  This interface provides methods to get/set information related to an Applicative Profile Group.
 <dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">  This example code shows how to retrieve an applicative profile group.<br>
 The examples here are written in Visual Studio Tools for Applications (VSTA) VB.NET
 <pre>
 ' First select an applicative profile
 Dim selector As INFITF.Selection = CATIA.ActiveEditor.Selection
 Dim type(0) As Object
 type(0) = "RscApplicativeProfile"
 selector.SelectElement2(type, "Select AP", False)
 Dim applicativeProfile As DELResourceBuilderIDLTypeLib.RscApplicativeProfile = selector.Item(1).Value

 ' Retrieve the parent of the applicative object (the group)
 Dim applicativeProfileGroup As DELResourceBuilderIDLTypeLib.RscApplicativeProfilesGroup = applicativeProfile.Parent

 ' Get the name of the profile group and display it
 Dim name As String = "Name of Applicative Profile Group is " & applicativeProfileGroup.Name
 MsgBox(name)
 </pre></pre></dd>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#CurrentProfile"><b>CurrentProfile</b></a>
<dd>  Gets/sets the current profile.
 <dt>
    <a href="#ProfileType"><b>ProfileType</b></a>
<dd>  Retrieves the profile type for this applicative profile group.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#BuildProfileInstance"><b>BuildProfileInstance</b></a>
<dd>  Creates a new profile instance in this applicative profile group.
 <dt>
    <a href="#GetTemplateProfile"><b>GetTemplateProfile</b></a>
<dd>  Retrieves the template profile for this applicative profile group.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Retrieves a profile using its index or its name.
 <dt>
    <a href="#RemoveProfile"><b>RemoveProfile</b></a>
<dd>  Removes (and deletes) an existing profile from applicative profile group.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="CurrentProfile"><dt>

<table><tr><td>o Property <b>CurrentProfile</b>(<td>) As <script type="text/javascript"> activateLink('RscApplicativeProfile','RscApplicativeProfile')</script> </table></dt>
<dl>
  <dd>
 Gets/sets the current profile.<br>
 The current profile may not be set, in which case the returned values is NULL (or Nothing in VB).
 <dl>
 <dt><b>Example:</b>
 <pre>
 ' Retrieve the current profile and display its name
 Dim currentProfile As DELResourceBuilderIDLTypeLib.RscApplicativeProfile = applicativeProfileGroup.<font color="red">CurrentProfile</font>

 If currentProfile IsNot Nothing Then
    MsgBox(" The current profile is named " & currentProfile.Name
 Else
    MsgBox "There is no current profile"
 End If

 ' Set the current profile
 applicativeProfileGroup.<font color="red">CurrentProfile</font> = newCurrentProfile
 </pre>
 </dl>
</dl>
<a name="ProfileType"><dt>

<table><tr><td>o Property <b>ProfileType</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Retrieves the profile type for this applicative profile group.<br>
 A group has both a name and a type.  The Name is what is displayed 
 in the user interface. The type is what is used to create, remove, 
 or retrieve the group from the manager.
 <dl>
 <dt><b>Example:</b>
 <pre>
 ' Retrieve the profile group type and display it.
 Dim profileType As String = applicativeProfileGroup.<font color="red">ProfileType</font>

 MsgBox(" Profile Type is " & profileType)
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="BuildProfileInstance"><dt>

<table><tr><td>o Func <b>BuildProfileInstance</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>) As <script type="text/javascript"> activateLink('RscApplicativeProfile','RscApplicativeProfile')</script> </table></dt>
<dl>
  <dd>
 Creates a new profile instance in this applicative profile group.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>   The name of the new profile instance.  The name must be unique.
 <dl>
 <dt><b>Example:</b>
 <pre>
 ' Create a new applicative profile in this applicative profile group.
 Dim newProfileInstance As DELResourceBuilderIDLTypeLib.RscApplicativeProfile = applicativeProfileGroup.<font color="red">BuildProfileInstance</font>("MyNewProfile")

 If newProfileInstance IsNot Nothing Then
     Dim temp As String = newProfileInstance.Name
     MsgBox(" BuildProfileInstance OK and the name is " & temp)
 End If
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetTemplateProfile"><dt>

<table><tr><td>o Func <b>GetTemplateProfile</b>(<td>) As <script type="text/javascript"> activateLink('RscApplicativeProfile','RscApplicativeProfile')</script> </table></dt>
<dl>
  <dd>
 Retrieves the template profile for this applicative profile group.<br>
 The template profile contains user parameters and their default values.
 The user parameters on the template profile will be added to all new profile instances.
 <dl>
 <dt><b>Example:</b>
 <pre>
 ' Retrieve the template profile for this applicative profile group.
 Dim templateProfile As DELResourceBuilderIDLTypeLib.RscApplicativeProfile = applicativeProfileGroup.<font color="red">GetTemplateProfile</font>

 If templateProfile IsNot Nothing Then
     MsgBox(" Found the template profile" )
 End If
 </pre>
 </dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('RscApplicativeProfile','RscApplicativeProfile')</script> </table></dt>
<dl>
  <dd>
 Retrieves a profile using its index or its name.<br>
 Can also use CATIACollection::GetItem to get the profile by name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the profile to retrieve from
   the collection of profiles.
   As a number, this index is the index of the profile
   in the collection.
   The index of the first parameter in the collection is 1, and
   the index of the last parameter is Count.
   As a string, it is the name you assigned to the profile using
   the </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('DELMIARscApplicativeProfile','Name','DELMIARscApplicativeProfile.Name') </script> property or with   
<script type="text/javascript"> activateLinkAnchor('DELMIARscApplicativeProfile','BuildProfileInstance','DELMIARscApplicativeProfile.BuildProfileInstance') </script> when creating the profile.   
  <dt> <b>Returns:</b> 
  <dd>  profile retrieved
 <dl>
 <dt><b>Examples:</b>
 <pre>
 ' Retrieve an applicative profile using an index
 Dim foundProfile As DELResourceBuilderIDLTypeLib.RscApplicativeProfile = applicativeProfileGroup.<font color="red">Item</font>(1)

 If foundProfile IsNot Nothing Then
     Dim profileName As String = foundProfile.Name
     MsgBox(" Got the profile using index 1, and the name is " & profileName)
 End If

 ' Retrieve an applicative profile using a name
 Dim foundProfile As DELResourceBuilderIDLTypeLib.RscApplicativeProfile = applicativeProfileGroup.<font color="red">Item</font>("ApplicativeProfile.1")

 If foundProfile IsNot Nothing Then
     Dim profileName As String = foundProfile.Name
     MsgBox(" Got the profile using its name.  For a sanity check, the name is " & profileName)
 End If
 </pre>
 </dl>
</dl>
</dl>
<a name="RemoveProfile"><dt>

<table><tr><td>o Sub <b>RemoveProfile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>)</table></dt>
<dl>
  <dd>
 Removes (and deletes) an existing profile from applicative profile group.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>   The name of the profile instance to delete.
 <dl>
 <dt><b>Example:</b>
 <pre>
 ' Remove/delete an existing applicative profile from this applicative profile group.
 applicativeProfileGroup.<font color="red">Remove</font>("AnExistingApplicativeProfile")

 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

