<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InfOSIDLItf FileSystem (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../InfOSIDLItf.htm" href="../InfOSIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "InfOSIDLItf";	}
		function getCurrentObjectName() { 
 	return "FileSystem"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>FileSystem<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_FileSystem_13382','FileSystem','0');</script>
<b><i> Represents the file system object.</i></b><br>

 <b>Role</b>: The file system object allows you to access and manipulate
 folders and files.
 It can check the existence of, get, create, delete, or copy
 folders and files.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAFolder','','CATIAFolder') </script>, <script type="text/javascript"> activateLinkAnchor('CATIAFile','','CATIAFile') </script>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#FileSeparator"><b>FileSeparator</b></a>
<dd>  Returns the file separator string (usually,
 <tt>\\</tt> on Windows and <tt>/</tt> on UNIX)
 
 <dt>
    <a href="#PathSeparator"><b>PathSeparator</b></a>
<dd>  Returns the path separator string (usually,
 <tt>;</tt> on Windows and <tt>:</tt> on UNIX)
 
 <dt>
    <a href="#TemporaryDirectory"><b>TemporaryDirectory</b></a>
<dd>  Returns the temporary system directory (usually,
 <tt>C:\\temp</tt> on Windows and <tt>/tmp</tt> on UNIX)
 
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#ConcatenatePaths"><b>ConcatenatePaths</b></a>
<dd>  Concatenates two path chunks to make a new path.
 <dt>
    <a href="#CopyFile"><b>CopyFile</b></a>
<dd>  Copies a file from one location to another.
 <dt>
    <a href="#CopyFolder"><b>CopyFolder</b></a>
<dd>  Recursively copies a folder from one location to another.
 <dt>
    <a href="#CreateFile"><b>CreateFile</b></a>
<dd>  Creates a file and returns the associated file object.
 <dt>
    <a href="#CreateFolder"><b>CreateFolder</b></a>
<dd>  Creates a folder and returns the associated folder object.
 <dt>
    <a href="#DeleteFile"><b>DeleteFile</b></a>
<dd>  Deletes a file.
 <dt>
    <a href="#DeleteFolder"><b>DeleteFolder</b></a>
<dd>  Deletes a folder.
 <dt>
    <a href="#FileExists"><b>FileExists</b></a>
<dd>  Returns whether a given file exists.
 <dt>
    <a href="#FolderExists"><b>FolderExists</b></a>
<dd>  Returns whether a given folder exists.
 <dt>
    <a href="#GetFile"><b>GetFile</b></a>
<dd>  Returns a file using its full path.
 <dt>
    <a href="#GetFolder"><b>GetFolder</b></a>
<dd>  Returns a folder using its full path.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="FileSeparator"><dt>

<table><tr><td>o Property <b>FileSeparator</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the file separator string (usually,
 <tt>\\</tt> on Windows and <tt>/</tt> on UNIX)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTmpDirectory</tt>
   <dd> The file separator string.</dd>
</dl>
</dl>
</dl>
<a name="PathSeparator"><dt>

<table><tr><td>o Property <b>PathSeparator</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the path separator string (usually,
 <tt>;</tt> on Windows and <tt>:</tt> on UNIX)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTmpDirectory</tt>
   <dd> The path separator string.</dd>
</dl>
</dl>
</dl>
<a name="TemporaryDirectory"><dt>

<table><tr><td>o Property <b>TemporaryDirectory</b>(<td>) As <script type="text/javascript"> activateLink('Folder','Folder')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the temporary system directory (usually,
 <tt>C:\\temp</tt> on Windows and <tt>/tmp</tt> on UNIX)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTmpDirectory</tt>
   <dd> A folder which corresponds to the temporary system directory.</dd>
</dl>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="ConcatenatePaths"><dt>

<table><tr><td>o Func <b>ConcatenatePaths</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPathChunk1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPathChunk2</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Concatenates two path chunks to make a new path.
 Either path chunk can be empty. The resulting path
 does not have to exist. The method automatically corrects
 improper path separators (<tt>/</tt> Unix separators used on a Windows platform
 are automatically replaced by <tt>\\</tt> and vice versa).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathChunk1</tt>
   <dd> The first path chunk (for instance "E:\\tmp").
 </dd>
    <dt><tt> iPathChunk2</tt>
   <dd> The second path chunk (for instance "local\myfile.txt").
 </dd>
    <dt><tt> oPath</tt>
   <dd> The resulting path (for instance "E:\\tmp\\local\\myfile.txt").</dd>
</dl>
</dl>
</dl>
<a name="CopyFile"><dt>

<table><tr><td>o Sub <b>CopyFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPathSource</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPathDestination</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iOverwrite</tt>)</table></dt>
<dl>
  <dd>
 Copies a file from one location to another. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSourcePath</tt>
   <dd>   The full path of the source file. 
 </dd>
    <dt><tt> iDestinationPath</tt>
   <dd>   The full destination path where the source file is to be copied.  
 </dd>
    <dt><tt> iOverwrite</tt>
   <dd>   Boolean value that is <b>True</b> if an existing file with the same name 
   can be overwritten; <b>False</b> if it is not, and the copy doesn't take place.
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example copies the file <tt>C:\Tests\File1</tt> to <tt>C:\Tests\File2</tt>
 from the file system object <tt>FileSys</tt>, except if a file
 with the name <tt>C:\Tests\File2</tt> already exists.
 <pre>
 FileSys.<font color="red">CopyFile</font>("C:\Tests\File1", "C:\Tests\File2", False)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="CopyFolder"><dt>

<table><tr><td>o Sub <b>CopyFolder</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iSourcePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDestinationPath</tt>)</table></dt>
<dl>
  <dd>
 Recursively copies a folder from one location to another.
 <b>Role</b>: The folder is copied along with its files, and all its
 subfolders and their own files. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSourcePath</tt>
   <dd>   The full path of the source folder. 
 </dd>
    <dt><tt> iDestinationPath</tt>
   <dd>   The full destination path where the source folder, its files, and its subfolders 
   are to be copied.
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example copies the folder "C:\Tests\Fold1" to "C:\Tests\Fold2"
 of the file system object <tt>FileSys</tt>.
 <pre>
 FileSys.<font color="red">CopyFolder</font>("C:\Tests\Fold1", "C:\Tests\Fold2")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="CreateFile"><dt>

<table><tr><td>o Func <b>CreateFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iOverwrite</tt>) As <script type="text/javascript"> activateLink('File','File')</script> </table></dt>
<dl>
  <dd>
 Creates a file and returns the associated file object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>   The full path where the file is to be created. 
 </dd>
    <dt><tt> iOverwrite</tt>
   <dd>   Boolean value that is <b>True</b> if an existing file with the same name 
   can be overwritten; <b>False</b> if it is not, and the creation doesn't take place.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	 The created file
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example creates the file <tt>C:\Tests\File1</tt> and 
 retrieves it in the file object <tt>FileObj</tt>
 from the file system object <tt>FileSys</tt>, except if a file
 with the name  <tt>C:\Tests\File1</tt> already exists.
 <pre>
 Dim FileObj As File
 Set FileObj = FileSys.<font color="red">CreateFile</font>("C:\Tests\File1", False)
 </pre>
 </dl>
</dl>
</dl>
<a name="CreateFolder"><dt>

<table><tr><td>o Func <b>CreateFolder</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>) As <script type="text/javascript"> activateLink('Folder','Folder')</script> </table></dt>
<dl>
  <dd>
 Creates a folder and returns the associated folder object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>   The full path where the folder is to be created. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	 The created folder object. If the folder
   already exists, the method fails.
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example creates the folder "C:\Tests\Fold1" and 
 retrieves it in <tt>FoldObj</tt> from the FileSystem <tt>FileSys</tt>.
 <pre>
 Dim FoldObj As Folder
 Set FoldObj = FileSys.<font color="red">CreateFolder</font>("C:\Tests\Fold1")
 </pre>
 </dl>
</dl>
</dl>
<a name="DeleteFile"><dt>

<table><tr><td>o Sub <b>DeleteFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>)</table></dt>
<dl>
  <dd>
 Deletes a file.
 <br>The method fails if the folder doesn't exist.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>   The full path of the file to delete. 
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example deletes the file "C:\Tests\File"
 from the file system object <tt>FileSys</tt>.
 <pre>
 FileSys.<font color="red">DeleteFile</font>("C:\Tests\File1")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="DeleteFolder"><dt>

<table><tr><td>o Sub <b>DeleteFolder</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>)</table></dt>
<dl>
  <dd>
 Deletes a folder.
 <br>The method fails if the folder doesn't exist.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>   The full path of the folder to delete.
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example deletes the folder "C:\Tests\Fold1"
 from the FileSystem <tt>FileSys</tt>.
 <pre>
 FileSys.<font color="red">DeleteFolder</font>("C:\Tests\Fold1")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="FileExists"><dt>

<table><tr><td>o Func <b>FileExists</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns whether a given file exists.
 <br><b>True</b> if the file exists.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>   The full path of the file. 
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>Exists</tt> whether
 the file "C:\Tests\File1" exists in the file system object 
 <tt>FileSys</tt>.
 <pre>
 Dim Exists As Boolean
 Exists = FileSys.<font color="red">FileExists</font>("C:\Tests\File1")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="FolderExists"><dt>

<table><tr><td>o Func <b>FolderExists</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns whether a given folder exists.
 <br><b>True</b> if the folder exists.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>   The full path of the folder. 
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>Exists</tt> whether
 the folder "C:\Tests\Fold1" exists in the file system object 
 <tt>FileSys</tt>.
 <pre>
 Dim Exists As Boolean
 Exists=FileSys.<font color="red">FolderExists</font>("C:\Tests\Fold1")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetFile"><dt>

<table><tr><td>o Func <b>GetFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>) As <script type="text/javascript"> activateLink('File','File')</script> </table></dt>
<dl>
  <dd>
 Returns a file using its full path.
 <br>The method fails if the folder doesn't exist.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>   The full path of the file to retrieve. 
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the file <tt>C:\Tests</tt> in the <tt>FileObj</tt>
 from the file system object <tt>FileSys</tt>.
 <pre>
 Dim FileObj As File
 Set FileObj = FileSys.<font color="red">GetFile</font>("C:\Tests")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetFolder"><dt>

<table><tr><td>o Func <b>GetFolder</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>) As <script type="text/javascript"> activateLink('Folder','Folder')</script> </table></dt>
<dl>
  <dd>
 Returns a folder using its full path.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>   The full path of the folder to retrieve. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	 The retrieved folder. If the folder
   doesn't exist, the method fails.
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the <tt>C:Tests</tt> folder in <tt>FoldObj</tt>
 from the file system object <tt>FileSys</tt>.
 <pre>
 Dim FoldObj As Folder
 Set FoldObj = FileSys.<font color="red">GetFolder</font>("C:\Tests\")
 </pre>
 </dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

