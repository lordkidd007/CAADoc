<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSketcherIDLItf Factory2D (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSketcherIDLItf.htm" href="../CATSketcherIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSketcherIDLItf";	}
		function getCurrentObjectName() { 
 	return "Factory2D"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Factory2D<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Factory2D_19657','Factory2D','0');</script>
<b><i> Interface to the factory for 2D objects.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateCircle"><b>CreateCircle</b></a>
<dd>  Creates and returns a 2D circle arc.
 <dt>
    <a href="#CreateClosedCircle"><b>CreateClosedCircle</b></a>
<dd>  Creates and returns a closed 2D circle.
 <dt>
    <a href="#CreateClosedEllipse"><b>CreateClosedEllipse</b></a>
<dd>  Creates and returns a closed 2D ellipse.
 <dt>
    <a href="#CreateControlPoint"><b>CreateControlPoint</b></a>
<dd>  Creates and returns a 2D spline control point.
 <dt>
    <a href="#CreateEllipse"><b>CreateEllipse</b></a>
<dd>  Creates and returns a 2D ellipse arc.
 <dt>
    <a href="#CreateHyperbola"><b>CreateHyperbola</b></a>
<dd>  Creates and returns a hyperbola.
 <dt>
    <a href="#CreateIntersection"><b>CreateIntersection</b></a>
<dd>  Creates and returns the intersection of an object with the sketch.
 <dt>
    <a href="#CreateIntersections"><b>CreateIntersections</b></a>
<dd>  Creates and returns the possible intersections of an object with the sketch.
 <dt>
    <a href="#CreateLine"><b>CreateLine</b></a>
<dd>  Creates and returns a 2D line.
 <dt>
    <a href="#CreateLineFromVector"><b>CreateLineFromVector</b></a>
<dd>  Creates and returns a 2D line from vectors.
 <dt>
    <a href="#CreateParabola"><b>CreateParabola</b></a>
<dd>  Creates and returns a parabola.
 <dt>
    <a href="#CreatePoint"><b>CreatePoint</b></a>
<dd>  Creates and returns a 2D point.
 <dt>
    <a href="#CreateProjection"><b>CreateProjection</b></a>
<dd>  Creates and returns the projection of an object on the sketch.
 <dt>
    <a href="#CreateProjections"><b>CreateProjections</b></a>
<dd>  Creates and returns the possible projections of an object on the sketch.
 <dt>
    <a href="#CreateSpline"><b>CreateSpline</b></a>
<dd>  Creates and returns a 2D b-spline.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateCircle"><dt>

<table><tr><td>o Func <b>CreateCircle</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iStartParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iEndParam</tt>) As <script type="text/javascript"> activateLink('Circle2D','Circle2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a 2D circle arc.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenterX</tt>
   <dd> The X coordinate of the circle center
 </dd>
    <dt><tt> iCenterY</tt>
   <dd> The Y coordinate of the circle center
 </dd>
    <dt><tt> iRadius</tt>
   <dd> The radius of the circle
 </dd>
    <dt><tt> iStartParam</tt>
   <dd> The beginning parameter of the circle.
 <br>This parameter is an angle value between 0 included and 2PI excluded.
 Parameter values are computed from the axis horizontal direction in the
 trigonometrical direction.
 </dd>
    <dt><tt> iEndParam</tt>
   <dd> The end parameter of the circle.
 <br>This parameter may take any value between iStartParam excluded and 4PI 
 included.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created circle
</dl>
</dl>
<a name="CreateClosedCircle"><dt>

<table><tr><td>o Func <b>CreateClosedCircle</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRadius</tt>) As <script type="text/javascript"> activateLink('Circle2D','Circle2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a closed 2D circle.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenterX</tt>
   <dd> The X coordinate of the circle center
 </dd>
    <dt><tt> iCenterY</tt>
   <dd> The Y coordinate of the circle center
 </dd>
    <dt><tt> iRadius</tt>
   <dd> The radius of the circle
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created circle
</dl>
</dl>
<a name="CreateClosedEllipse"><dt>

<table><tr><td>o Func <b>CreateClosedEllipse</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMajorX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMajorY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMajorRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMinorRadius</tt>) As <script type="text/javascript"> activateLink('Ellipse2D','Ellipse2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a closed 2D ellipse.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenterX</tt>
   <dd> The X coordinate of the ellipse center
 </dd>
    <dt><tt> iCenterY</tt>
   <dd> The Y coordinate of the ellipse center
 </dd>
    <dt><tt> iMajorX</tt>
   <dd> The X component of the major axis direction
 </dd>
    <dt><tt> iMajorY</tt>
   <dd> The Y component of the Major axis direction
 </dd>
    <dt><tt> iMajorRadius</tt>
   <dd> The length of the major axis
 </dd>
    <dt><tt> iMinorRadius</tt>
   <dd> The length of the minor axis
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created ellipse
</dl>
</dl>
<a name="CreateControlPoint"><dt>

<table><tr><td>o Func <b>CreateControlPoint</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>) As <script type="text/javascript"> activateLink('ControlPoint2D','ControlPoint2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a 2D spline control point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The X coordinate of point to create
 </dd>
    <dt><tt> iY</tt>
   <dd> The Y coordinate of point to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created control point
</dl>
</dl>
<a name="CreateEllipse"><dt>

<table><tr><td>o Func <b>CreateEllipse</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMajorX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMajorY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMajorRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMinorRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iStartParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iEndParam</tt>) As <script type="text/javascript"> activateLink('Ellipse2D','Ellipse2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a 2D ellipse arc.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenterX</tt>
   <dd> The X coordinate of the ellipse center
 </dd>
    <dt><tt> iCenterY</tt>
   <dd> The Y coordinate of the ellipse center
 </dd>
    <dt><tt> iMajorX</tt>
   <dd> The X component of the major axis direction
 </dd>
    <dt><tt> iMajorY</tt>
   <dd> The Y component of the major axis direction
 </dd>
    <dt><tt> iMajorRadius</tt>
   <dd> The length of the major axis
 </dd>
    <dt><tt> iMinorRadius</tt>
   <dd> The length of the minor axis
 </dd>
    <dt><tt> iStartParam</tt>
   <dd> The beginning parameter of the ellipse.
 <br>This parameter is an angle value between 0 included and 2PI excluded.
 Parameter values are computed from the major axis direction in the
 trigonometrical direction.
 </dd>
    <dt><tt> iEndParam</tt>
   <dd> The end parameter of the ellipse.
 <br>This parameter may take any value between iStartParam excluded and 4PI 
 included.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created ellipse
</dl>
</dl>
<a name="CreateHyperbola"><dt>

<table><tr><td>o Func <b>CreateHyperbola</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAxisX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAxisY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMajorRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMinorRadius</tt>) As <script type="text/javascript"> activateLink('Hyperbola2D','Hyperbola2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a hyperbola.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenterX</tt>
   <dd> The X coordinate of the hyperbola center
 </dd>
    <dt><tt> iCenterY</tt>
   <dd> The Y coordinate of the hyperbola center
 </dd>
    <dt><tt> iAxisX</tt>
   <dd> The X coordinate of the major axis direction
 </dd>
    <dt><tt> iAxisY</tt>
   <dd> The Y coordinate of the major axis direction
 </dd>
    <dt><tt> iMajorRadius</tt>
   <dd> The length of the major axis
 </dd>
    <dt><tt> iMinorRadius</tt>
   <dd> The length of the minor axis
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oHyperbola The created Hyperbola
</dl>
</dl>
<a name="CreateIntersection"><dt>

<table><tr><td>o Func <b>CreateIntersection</b>(<td><script type="text/javascript"> activateLink('CATIAReference','CATIAReference')</script> <td><tt>iGeometry</tt>) As <script type="text/javascript"> activateLink('Geometry2D','Geometry2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns the intersection of an object with the sketch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometry</tt>
   <dd> The object to intersect with the sketch
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created geometric element
</dl>
</dl>
<a name="CreateIntersections"><dt>

<table><tr><td>o Func <b>CreateIntersections</b>(<td><script type="text/javascript"> activateLink('CATIAReference','CATIAReference')</script> <td><tt>iGeometry</tt>) As <script type="text/javascript"> activateLink('CATIAGeometricElements','CATIAGeometricElements')</script> </table></dt>
<dl>
  <dd>
 Creates and returns the possible intersections of an object with the sketch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometry</tt>
   <dd> The object to intersect with the sketch
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created geometric element
</dl>
</dl>
<a name="CreateLine"><dt>

<table><tr><td>o Func <b>CreateLine</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY2</tt>) As <script type="text/javascript"> activateLink('Line2D','Line2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a 2D line.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX1</tt>
   <dd> The X coordinate of line first extremity
 </dd>
    <dt><tt> iY1</tt>
   <dd> The Y coordinate of line first extremity
 </dd>
    <dt><tt> iX2</tt>
   <dd> The X coordinate of line second extremity
 </dd>
    <dt><tt> iY2</tt>
   <dd> The Y coordinate of line second extremity
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created line
</dl>
</dl>
<a name="CreateLineFromVector"><dt>

<table><tr><td>o Func <b>CreateLineFromVector</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iUX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iUY</tt>) As <script type="text/javascript"> activateLink('Line2D','Line2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a 2D line from vectors.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX1</tt>
   <dd> The X coordinate of the line origin
 </dd>
    <dt><tt> iY1</tt>
   <dd> The Y coordinate of the line origin
 </dd>
    <dt><tt> iUX</tt>
   <dd> The X component of the line vector
 </dd>
    <dt><tt> iUY</tt>
   <dd> The Y component of the line vector
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created line
</dl>
</dl>
<a name="CreateParabola"><dt>

<table><tr><td>o Func <b>CreateParabola</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCenterY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAxisX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAxisY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iFocalDistance</tt>) As <script type="text/javascript"> activateLink('Parabola2D','Parabola2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a parabola.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenterX</tt>
   <dd> The X coordinate of the parabola center
 </dd>
    <dt><tt> iCenterY</tt>
   <dd> The Y coordinate of the parabola center
 </dd>
    <dt><tt> iAxisX</tt>
   <dd> The X coordinate of the major axis direction
 </dd>
    <dt><tt> iAxisY</tt>
   <dd> The Y coordinate of the major axis direction
 </dd>
    <dt><tt> iFocalDistance</tt>
   <dd> The parabola focal distance
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oParabola The created parabola
</dl>
</dl>
<a name="CreatePoint"><dt>

<table><tr><td>o Func <b>CreatePoint</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>) As <script type="text/javascript"> activateLink('Point2D','Point2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a 2D point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> The X coordinate of point to create
 </dd>
    <dt><tt> iY</tt>
   <dd> The Y coordinate of point to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created point
</dl>
</dl>
<a name="CreateProjection"><dt>

<table><tr><td>o Func <b>CreateProjection</b>(<td><script type="text/javascript"> activateLink('CATIAReference','CATIAReference')</script> <td><tt>iGeometry</tt>) As <script type="text/javascript"> activateLink('Geometry2D','Geometry2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns the projection of an object on the sketch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometry</tt>
   <dd> The object to project on the sketch
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created geometric element
</dl>
</dl>
<a name="CreateProjections"><dt>

<table><tr><td>o Func <b>CreateProjections</b>(<td><script type="text/javascript"> activateLink('CATIAReference','CATIAReference')</script> <td><tt>iGeometry</tt>) As <script type="text/javascript"> activateLink('CATIAGeometricElements','CATIAGeometricElements')</script> </table></dt>
<dl>
  <dd>
 Creates and returns the possible projections of an object on the sketch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometry</tt>
   <dd> The object to project on the sketch
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created geometric element
</dl>
</dl>
<a name="CreateSpline"><dt>

<table><tr><td>o Func <b>CreateSpline</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iPoles</tt>) As <script type="text/javascript"> activateLink('Spline2D','Spline2D')</script> </table></dt>
<dl>
  <dd>
 Creates and returns a 2D b-spline.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoles</tt>
   <dd> An array of CATIAPoint2D forming the poles of the b-spline.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The created B-Spline
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

