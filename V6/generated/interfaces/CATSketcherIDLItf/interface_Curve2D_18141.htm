<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSketcherIDLItf Curve2D (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSketcherIDLItf.htm" href="../CATSketcherIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSketcherIDLItf";	}
		function getCurrentObjectName() { 
 	return "Curve2D"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Curve2D<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Curve2D_18141','Curve2D','0');</script>
<b><i>    Class defining a curve in 2D Space.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Continuity"><b>Continuity</b></a>
<dd>   Returns the highest level of geometric continuity the curve
  possesses.
 <dt>
    <a href="#EndPoint"><b>EndPoint</b></a>
<dd>   Returns or Sets the end point of the curve.
 <dt>
    <a href="#Period"><b>Period</b></a>
<dd>   Returns the period of a periodic curve.
 <dt>
    <a href="#StartPoint"><b>StartPoint</b></a>
<dd>   Returns or sets the start point of the curve.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetCurvature"><b>GetCurvature</b></a>
<dd>   Returns the curvature and curvature direction at the 
  parameter specified.
 <dt>
    <a href="#GetDerivatives"><b>GetDerivatives</b></a>
<dd>   Returns the first, second and third derivatives at the 
  parameter specified.
 <dt>
    <a href="#GetEndPoints"><b>GetEndPoints</b></a>
<dd>   Returns the end-points of the curve.
 <dt>
    <a href="#GetLengthAtParam"><b>GetLengthAtParam</b></a>
<dd>   Returns the length, measured along the curve, from a given
  parameter to a given parameter.
 <dt>
    <a href="#GetParamAtLength"><b>GetParamAtLength</b></a>
<dd>   Returns the parameter at a given length, measured along
  the curve, starting from a given parameter.
 <dt>
    <a href="#GetParamExtents"><b>GetParamExtents</b></a>
<dd>   Returns the parametric extents of the curve.
 <dt>
    <a href="#GetPointAtParam"><b>GetPointAtParam</b></a>
<dd>   Returns a point on the curve computed from an
  input parameter.
 <dt>
    <a href="#GetRangeBox"><b>GetRangeBox</b></a>
<dd>   Returns the range box (or bounding box) of the object
  <br>The box is axially aligned within the local coordinate
  system of the server.
 <dt>
    <a href="#GetTangent"><b>GetTangent</b></a>
<dd>   Returns the unit-vector tangent at the parameter specified.
 <dt>
    <a href="#IsPeriodic"><b>IsPeriodic</b></a>
<dd>   Specifies whether a curve is periodic or not.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Continuity"><dt>

<table><tr><td>o Property <b>Continuity</b>(<td>) As <script type="text/javascript"> activateLink('short','short')</script>  (Read Only)</table></dt>
<dl>
  <dd>
  Returns the highest level of geometric continuity the curve
  possesses.                         
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLevel</tt>
   <dd>  The maximum geometric continuity level</dd>
</dl>
</dl>
</dl>
<a name="EndPoint"><dt>

<table><tr><td>o Property <b>EndPoint</b>(<td>) As <script type="text/javascript"> activateLink('Point2D','Point2D')</script> </table></dt>
<dl>
  <dd>
  Returns or Sets the end point of the curve.  The end point is
  decided with respect to the logical flow      
  imposed on the curve by the object.
  
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">   The following example sets the end point of the curve.
  <pre>
  Dim myPoint2D As Point2D
  Set myPoint2D = ...
  Dim myCurve2D As Curve2D
  myCurve2D.<font color="red">EndPoint</font> = myPoint2D
  </pre></pre></dd>
</dl>
</dl>
<a name="Period"><dt>

<table><tr><td>o Property <b>Period</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script>  (Read Only)</table></dt>
<dl>
  <dd>
  Returns the period of a periodic curve.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPeriod</tt>
   <dd>     The period of the curve.</dd>
</dl>
</dl>
</dl>
<a name="StartPoint"><dt>

<table><tr><td>o Property <b>StartPoint</b>(<td>) As <script type="text/javascript"> activateLink('Point2D','Point2D')</script> </table></dt>
<dl>
  <dd>
  Returns or sets the start point of the curve.  The start point is
  decided with respect to the logical flow      
  imposed on the curve by the object.
  
<dl>
  <dt> Example: </dt> 
  <dd> <pre class="code">   The following example sets the start point of the curve.
  <pre>
  Dim myPoint2D As Point2D
  Set myPoint2D = ...
  Dim myCurve2D As Curve2D
  myCurve2D.<font color="red">StartPoint</font> = myPoint2D
  </pre></pre></dd>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetCurvature"><dt>

<table><tr><td>o Sub <b>GetCurvature</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oCurvature</tt>)</table></dt>
<dl>
  <dd>
  Returns the curvature and curvature direction at the 
  parameter specified.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParam</tt>
   <dd>   The parameter of the chosen point on the curve.
  </dd>
    <dt><tt> oCurvature</tt>
   <dd>  <pre>
  oCurvature[0]: The curvature at the specified parameter.
  oCurvature[1;2]: The unit-vector of curvature direction at the specified parameter.</dd>
</dl>
</dl>
</dl>
<a name="GetDerivatives"><dt>

<table><tr><td>o Sub <b>GetDerivatives</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oDerivative</tt>)</table></dt>
<dl>
  <dd>
  Returns the first, second and third derivatives at the 
  parameter specified.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParam</tt>
   <dd>   The parameter of the chosen point on the curve.
  </dd>
    <dt><tt> oDerivative[0]</tt>
   <dd>  <pre>
  oDerivative[0]: First degree derivative.
  oDerivative[1]: Second degree derivative.
  oDerivative[2]: Third degree derivative.
 </pre></dd>
</dl>
</dl>
</dl>
<a name="GetEndPoints"><dt>

<table><tr><td>o Sub <b>GetEndPoints</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oEndPoints</tt>)</table></dt>
<dl>
  <dd>
  Returns the end-points of the curve. The start point and the
  end point are decided with respect to the logical flow      
  imposed on the curve by the object.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEndPoints</tt>
   <dd>  <pre>
  oEndPoints[0]: The x coordinate of the start point
  oEndPoints[1]: The y coordinate of the start point
  oEndPoints[2]: The x coordinate of the end point
  oEndPoints[3]: The y coordinate of the end point
 </pre></dd>
</dl>
</dl>
</dl>
<a name="GetLengthAtParam"><dt>

<table><tr><td>o Func <b>GetLengthAtParam</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iFromParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iToParam</tt>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
  Returns the length, measured along the curve, from a given
  parameter to a given parameter.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFromParam</tt>
   <dd>  The parameter from which the length is to be measured.
  </dd>
    <dt><tt> iToParam</tt>
   <dd>    The parameter to which the length is to be measured.
  </dd>
    <dt><tt> oLength</tt>
   <dd>  The length between the parameters</dd>
</dl>
</dl>
</dl>
<a name="GetParamAtLength"><dt>

<table><tr><td>o Func <b>GetParamAtLength</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iFromParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLength</tt>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
  Returns the parameter at a given length, measured along
  the curve, starting from a given parameter.  The direction
  of measurement is always in the direction of the logical
  flow of the curve.  If no inherent logical flow can be  
  assigned the direction is the direction of increasing
  parameterization.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFromParam</tt>
   <dd>   The parameter from which the length needs to be measured.
  </dd>
    <dt><tt> iLength</tt>
   <dd>     The length of the curve to be measured from iFromParam in
  the logical flow direction of the curve.
  </dd>
    <dt><tt> oParam</tt>
   <dd>      The computed parameter.</dd>
</dl>
</dl>
</dl>
<a name="GetParamExtents"><dt>

<table><tr><td>o Sub <b>GetParamExtents</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oParams</tt>)</table></dt>
<dl>
  <dd>
  Returns the parametric extents of the curve. This is the
  parametric equivalent of the end-points.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oParams</tt>
   <dd> <pre>
  oParams[0]: The parameter associated with the start point of the curve
  oParams[1]: The parameter associated with the end point of the curve
 </pre></dd>
</dl>
</dl>
</dl>
<a name="GetPointAtParam"><dt>

<table><tr><td>o Sub <b>GetPointAtParam</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oPoint</tt>)</table></dt>
<dl>
  <dd>
  Returns a point on the curve computed from an
  input parameter.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParam</tt>
   <dd>      parameter
  </dd>
    <dt><tt> oPoint</tt>
   <dd>      The X and Y coordinates of the computed 2D space point.</dd>
</dl>
</dl>
</dl>
<a name="GetRangeBox"><dt>

<table><tr><td>o Sub <b>GetRangeBox</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oBoundPoint</tt>)</table></dt>
<dl>
  <dd>
  Returns the range box (or bounding box) of the object
  <br>The box is axially aligned within the local coordinate
  system of the server.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBoundPoint</tt>
   <dd> <pre>
  oBoundPoint[0]: The minimum x point of the box
  oBoundPoint[1]: The minimum y point of the box
  oBoundPoint[2]: The maximum x point of the box
  oBoundPoint[3]: The maximum y point of the box
 </pre></dd>
</dl>
</dl>
</dl>
<a name="GetTangent"><dt>

<table><tr><td>o Sub <b>GetTangent</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oTangency</tt>)</table></dt>
<dl>
  <dd>
  Returns the unit-vector tangent at the parameter specified.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParam</tt>
   <dd>   The parameter of the chosen point on the curve.
  </dd>
    <dt><tt> oTangency</tt>
   <dd>   The X and Y coordinates of the unit-vector tangent at the
  specified parameter.</dd>
</dl>
</dl>
</dl>
<a name="IsPeriodic"><dt>

<table><tr><td>o Func <b>IsPeriodic</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
  Specifies whether a curve is periodic or not.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPeriodic</tt>
   <dd>  Returns true if the curve is periodic.</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

