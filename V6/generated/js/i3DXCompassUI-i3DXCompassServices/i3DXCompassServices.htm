<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Language" content="en-us"> 
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
    <title>JSDoc: Module: DS/i3DXCompassServices/i3DXCompassServices</title>    
    <!--<script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    [if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]
    <link type="text/css" rel="stylesheet" href="../_data/styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="../_data/styles/jsdoc-default.css">   --> 
    <link rel="Stylesheet" type="text/css" href="../../../caav5.css" />
    <link href="../_index/cdg.css" rel="stylesheet" type="text/css" /> 
    <script type="text/javascript" src="../_index/cdg.js"></script> 
    <script type="text/javascript" src="../_index/xmkscript.js"></script>
       
</head>

<body>
<div id="indexView" class="menu1">	 
<a name="multiview" class="onglet"  href="../_index/index.htm">Index</a>  
<a name="multiview" class="onglet"  href="../_index/modulemwebidx.htm">Mweb Module Index</a>  
<a name="multiview" class="onglet"  href="../_index/frameworkidx.htm">Framework Index</a>  
<a name="multiview" class="onglet"   href="../_index/masterindex.htm">Master Index</a>  
 </div> 
<div id="main">   
    <h1>Module: DS/i3DXCompassServices/i3DXCompassServices</h1>
   <hr /> 

<table  style="float:right" >
<tr>
<th>Framework</th>
<th>Module</th>
<th>package</th>
</tr>
<tr>
<td><a href="../_index/i3DXCompassUI.htm">i3DXCompassUI</a></td>
<td><a href="../_index/indexi3DXCompassUI-i3DXCompassServices.htm">i3DXCompassServices</a></td>
<td></td>
</tr>
</table> 

    



<section>
    
<header>
    <h2>
    DS/i3DXCompassServices/i3DXCompassServices
    </h2>
    
</header>  

<article>
  
      
    <div >
     
      




      
      <div >
        <p>This module exposes APIs to all trusted widgets in 3DDashboard to have information regarding availability for one user of:
<ul>
    <li>Platform (Name and id)</li>
    <li>URLs of exposed services</li>
</ul></p>
<p>The exhaustive list of possible service names is:
<ul>
    <li>3DPassport</li>
    <li>3DSwym</li>
</ul></p>
<p>The exposed APIs return their output asynchronously as data may require a backend request to be retrieved.</p>
      </div>
      
      
<dl >
    
        
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
</dl>


      
      <h3>
        Example
      </h3>
      
    <pre ><code> // Load i3DXCompassServices, get all platform data and display it in the widget body.
 require(['DS/i3DXCompassServices/i3DXCompassServices'],

    function (i3DXCompassServices) {
        'use strict';

        var MyWidget = {

            onLoad: function () {
                widget.body.empty();

                i3DXCompassServices.getPlatformServices({

                    onComplete: function (data) {
                        widget.body.addContent('&lt;b&gt;Get all platforms&lt;/b&gt; &lt;br&gt;&lt;br&gt;');
 
                        data.forEach(function (platform) {

                            widget.body.addContent('platformId: ' + platform['platformId'] + '&lt;br&gt;');
                            widget.body.addContent('displayName: ' + platform['displayName'] + '&lt;br&gt;');
                            widget.body.addContent('3DPassport: ' + platform['3DPassport'] + '&lt;br&gt;');
                            widget.body.addContent('3DSwym: ' + platform['3DSwym'] + '&lt;br&gt;&lt;br&gt;');
                        });
                    }
                });
            }
        };
        widget.addEvents({
            onLoad: MyWidget.onLoad
        });
    }
);</code></pre>



      
      
    </div>

    

    

    


    <hr/>
    
    
    <h3 >Methods Index</h3>
    


<dl>  

  <dt>o<a href="i3DXCompassServices.htm#getPlatformServices">getPlatformServices</a></dt>
  <dd></dd>     


  <dt>o<a href="i3DXCompassServices.htm#getServiceUrl">getServiceUrl</a></dt>
  <dd></dd>     


</dl>



    

    

    

    

    
    <hr/>

  
  

    
  

  

      
    
    
    
    
        <h3 >Methods</h3>
        
        <dl>
            
<dt>
    <h4 id="getPlatformServices"><span class="type-signature">&lt;static> </span>getPlatformServices<span class="signature">(options)</span><span class="type-signature"></span></h4>

    
</dt>
<dd>
    
    
    <div>
        Returns for one or each platform available for the connected user the following information:
<ul>
    <li>The Id of the platform (platformId)</li>
    <li>The name of the platform (platformName)</li>
    <li>The list of the services having exposed webservices (See possible values in module abstract)</li>
</ul>
    </div>
    
    
    
    
    
    
    
        <h5>Parameters:</h5>
        

<table class="fill" >
    <thead>
	<tr>
		
		<th>Name</th>
		
		
		<th>Type</th>
		
		
		
		
		
		<th >Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            
                <td ><code>options</code></td>
            
            
            <td >
            
                
<span >Object</span>




            
            </td>
            
            
            
            
            
            <td >The available options.
                <h6>Properties</h6>
                

<table class="fill" >
    <thead>
	<tr>
		
		<th>Name</th>
		
		
		<th>Type</th>
		
		
		<th>Argument</th>
		
		
		
		
		<th >Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            
                <td ><code>platformId</code></td>
            
            
            <td >
            
                
<span >String</span>




            
            </td>
            
            
                <td >
                
                    &lt;optional><br/>
                
                    
                
                    
                
                </td>
            
            
            
            
            <td >An optional platform ID.</td>
        </tr>
	
	
	
        <tr>
            
                <td ><code>onComplete</code></td>
            
            
            <td >
            
                
<span >function</span>




            
            </td>
            
            
                <td >
                
                    
                
                    
                
                </td>
            
            
            
            
            <td >Callback triggered when data is available. It must have one parameter to receive data. The structure of this argument is detailed in the example section.</td>
        </tr>
	
	
	</tbody>
</table>


            </td>
        </tr>
	
	
	</tbody>
</table>


    
    
    
<dl >
    
        
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
</dl>

    
    

    

    
    
    
    
    
    
    
        <h5>Example</h5>
        
    <pre ><code> // No platformId
 i3DXCompassServices.getPlatformServices({
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // [{
         //     "platformId": "SamplePlatform0",
         //     "displayName": "Sample Platform 0",
         //     "3DSwym": "https://SamplePlatform0-3dswym.3dexperience.3ds.com",
         //     "3DPassport": "https://iam.3ds.com"
         // },
         // {
         //     "platformId": "SamplePlatform1",
         //     "displayName": "Sample Platform 1",
         //     "3DSwym": "https://SamplePlatform1-3dswym.3dexperience.3ds.com",
         //     "3DPassport": "https://iam.3ds.com"
         // }]
     }
 });

 // Valid platformId
 i3DXCompassServices.getPlatformServices({
     platformId: 'SamplePlatform0',
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // {
         //     "platformId": "SamplePlatform0",
         //     "displayName": "Sample Platform 0",
         //     "3DSwym": "https://SamplePlatform0-3dswym.3dexperience.3ds.com",
         //     "3DPassport": "https://iam.3ds.com"
         // }
     }
 });

 // Not valid platformId
 i3DXCompassServices.getPlatformServices({
     platformId: 'NotExistingPlatform',
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // undefined
     }
 });</code></pre>



    
</dd>

        
            
<dt>
    <h4 id="getServiceUrl"><span class="type-signature">&lt;static> </span>getServiceUrl<span class="signature">(options)</span><span class="type-signature"></span></h4>

    
</dt>
<dd>
    
    
    <div>
        Returns for the connected user the URLs of a service. It can be for one platform or all.
    </div>
    
    
    
    
    
    
    
        <h5>Parameters:</h5>
        

<table class="fill" >
    <thead>
	<tr>
		
		<th>Name</th>
		
		
		<th>Type</th>
		
		
		
		
		
		<th >Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            
                <td ><code>options</code></td>
            
            
            <td >
            
                
<span >Object</span>




            
            </td>
            
            
            
            
            
            <td >The available options.
                <h6>Properties</h6>
                

<table class="fill" >
    <thead>
	<tr>
		
		<th>Name</th>
		
		
		<th>Type</th>
		
		
		<th>Argument</th>
		
		
		
		
		<th >Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            
                <td ><code>serviceName</code></td>
            
            
            <td >
            
                
<span >String</span>




            
            </td>
            
            
                <td >
                
                    
                
                    
                
                </td>
            
            
            
            
            <td >Required service name (See possible values in module abstract).</td>
        </tr>
	
	
	
        <tr>
            
                <td ><code>platformId</code></td>
            
            
            <td >
            
                
<span >String</span>




            
            </td>
            
            
                <td >
                
                    &lt;optional><br/>
                
                    
                
                    
                
                </td>
            
            
            
            
            <td >An optional platform ID.</td>
        </tr>
	
	
	
        <tr>
            
                <td ><code>onComplete</code></td>
            
            
            <td >
            
                
<span >function</span>




            
            </td>
            
            
                <td >
                
                    
                
                    
                
                </td>
            
            
            
            
            <td >Callback triggered when data is available. It must have one parameter to receive data. The structure of this argument is detailed in the example section.</td>
        </tr>
	
	
	</tbody>
</table>


            </td>
        </tr>
	
	
	</tbody>
</table>


    
    
    
<dl >
    
        
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
</dl>

    
    

    

    
    
    
    
    
    
    
        <h5>Example</h5>
        
    <pre ><code> // Valid serviceName
 i3DXCompassServices.getServiceUrl({
     serviceName: '3DSwym',
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // [{
         //     'platformId': 'SamplePlatform0',
         //     'url': 'https://SamplePlatform0-3dswym.3dexperience.3ds.com'
         // },
         // {
         //     'platformId': 'SamplePlatform1',
         //     'url': 'https://SamplePlatform1-3dswym.3dexperience.3ds.com'
         // }]
     }
 });

 // Valid serviceName and valid platformId
 i3DXCompassServices.getServiceUrl({
     serviceName: '3DSwym',
     platformId: 'SamplePlatform0',
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // "https://SamplePlatform0-3dswym.3dexperience.3ds.com"
     }
 });

 // No serviceName
 i3DXCompassServices.getServiceUrl({
     platformId: 'SamplePlatform0',
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // undefined
     }
 });

 // Not valid platformId
 i3DXCompassServices.getServiceUrl({
     serviceName: '3DSwym',
     platformId: 'NotExistingPlatform',
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // undefined
     }
 });

 // Not valid serviceName
 i3DXCompassServices.getServiceUrl({
     serviceName: 'WrongService',
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // [{
         //     'platformId': 'SamplePlatform0',
                'url': undefined
         // },
         // {
         //     'platformId': 'SamplePlatform1',
                'url': undefined
         // }]
     }
 });

 // Not valid serviceName with valid platformId
 i3DXCompassServices.getServiceUrl({
     platformId: 'SamplePlatform0',
     onComplete: function (data) {
         console.log(data);
         // LOGS
         // undefined
     }
 });</code></pre>



    
</dd>

        </dl>
    
    
    
    
    
</article>

</section>  




</div>

<!-- <nav>
    
</nav> -->



<p>
    Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.

</p>   
    
   

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>