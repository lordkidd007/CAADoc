<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DELPPRProcessItf Interface DELIPPRProcessNav</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DELPPRProcessItf.htm" href="../DELPPRProcessItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DELPPRProcessItf";	}
		function getCurrentObjectName() { 
 	return "DELIPPRProcessNav"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DELPPRProcessItf Interface DELIPPRProcessNav</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIPPRProcessNav_29234','DELIPPRProcessNav','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIPPRProcessNav</b>
</p>
<p>
<b><i> Interface for navigation in the Functional Process model.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAllGroups(CATIPLMNavReference*,CATListPtrDELIPPRProcessGroup&amp;)"><b>GetAllGroups</b></a>(CATIPLMNavReference*,CATListPtrDELIPPRProcessGroup&amp;)
<dd>  Gets all the groups and sub-groups present under a given process reference.
 <dt> o 
    <a href="#GetListOfAssignedProcesses(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"><b>GetListOfAssignedProcesses</b></a>(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Gets the process occurrences that are assigned to a given product occurrence within a given scope.
 <dt> o 
    <a href="#GetListOfAssignedProducts(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"><b>GetListOfAssignedProducts</b></a>(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Gets the product occurrences that are assigned to a given process occurrence.
 <dt> o 
    <a href="#GetPredecessors(CATIPLMNavInstance*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"><b>GetPredecessors</b></a>(CATIPLMNavInstance*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Gets the predecessors (process occurrences) of a given process instance.
 <dt> o 
    <a href="#GetPredecessors(CATIPLMNavReference*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"><b>GetPredecessors</b></a>(CATIPLMNavReference*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Gets the predecessors (process occurrences) of a given process reference.
 <dt> o 
    <a href="#GetPredecessors(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"><b>GetPredecessors</b></a>(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Gets the predecessors (process occurrences) of a given process occurrence.
 <dt> o 
    <a href="#GetProcessOfEachScope(CATIPLMNavReference*,CATListPtrCATIPLMNavReference&amp;)"><b>GetProcessOfEachScope</b></a>(CATIPLMNavReference*,CATListPtrCATIPLMNavReference&amp;)
<dd>  Gets the process reference of each scope of a given product reference.
 <dt> o 
    <a href="#GetProductOfTheScope(CATIPLMNavReference*,void**,IID&amp;)"><b>GetProductOfTheScope</b></a>(CATIPLMNavReference*,void**,IID&amp;)
<dd>  Gets the product reference of the scope of a given process reference.
 <dt> o 
    <a href="#GetProductOfTheScope(CATIPLMNavReference*,int,CATIPLMNavReference*&amp;)"><b>GetProductOfTheScope</b></a>(CATIPLMNavReference*,int,CATIPLMNavReference*&amp;)
<dd>  Load the target (Product/EBOM) that are linked through scope to the process
	
 
 <dt> o 
    <a href="#GetSuccessors(CATIPLMNavInstance*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"><b>GetSuccessors</b></a>(CATIPLMNavInstance*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Gets the successors (process occurrences) of a given process instance.
 <dt> o 
    <a href="#GetSuccessors(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"><b>GetSuccessors</b></a>(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Gets the successors (process occurrences) of a given process occurrence.
 <dt> o 
    <a href="#GetWhereUsed(CATIAdpPLMIdentificator&amp;,CATLISTP(CATIAdpPLMIdentificator)&amp;)"><b>GetWhereUsed</b></a>(CATIAdpPLMIdentificator&amp;,CATLISTP(CATIAdpPLMIdentificator)&amp;)
<dd>  Retrieve all father Process References using a given Process Reference.
 <dt> o 
    <a href="#NavigateFromPartOrPrdToProcessThroughScopeLink(CATIPLMNavReference*,CATOmbLifeCycleRootsBag&amp;,CATListPtrCATBaseUnknown&amp;)"><b>NavigateFromPartOrPrdToProcessThroughScopeLink</b></a>(CATIPLMNavReference*,CATOmbLifeCycleRootsBag&amp;,CATListPtrCATBaseUnknown&amp;)
<dd> </dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAllGroups"></a><a name="GetAllGroups(CATIPLMNavReference*,CATListPtrDELIPPRProcessGroup&amp;)"></a> <dt> o <b>GetAllGroups</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllGroups</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessRef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrDELIPPRProcessGroup','CATListPtrDELIPPRProcessGroup&amp;')</script> <td><tt>oListOfGroups</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets all the groups and sub-groups present under a given process reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessRef</tt>
   <dd>   The process reference
 </dd>
    <dt><tt> oListOfGroups</tt>
   <dd>   the list of groups ans sub-groups
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>method successfully ended
   <dt><code>E_FAIL</code>        <dd>method failed
   </dl>
</dl>
</dl>
<a name="GetListOfAssignedProcesses"></a><a name="GetListOfAssignedProcesses(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>GetListOfAssignedProcesses</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfAssignedProcesses</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>ipiProductOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessScope</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessContextForOutputOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>oListProcessOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the process occurrences that are assigned to a given product occurrence within a given scope.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProductOcc</tt>
   <dd>   The product occurrence
 </dd>
    <dt><tt> ipiProcessScope</tt>
   <dd>   The process reference representing the scope for which the assigned process occurrences are requested
 </dd>
    <dt><tt> ipiProcessContextForOutputOcc</tt>
   <dd>   The context (process reference) for the resulting occurrences
 </dd>
    <dt><tt> oListProcessOcc</tt>
   <dd>   The list of process occurrences
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is at least one implement link
   <dt><code>S_FALSE</code>       <dd>if there is no implement link
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetListOfAssignedProducts"></a><a name="GetListOfAssignedProducts(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>GetListOfAssignedProducts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfAssignedProducts</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>ipiProcessOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProductContextForOutputOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>oListProductOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the product occurrences that are assigned to a given process occurrence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessOcc</tt>
   <dd>   The process occurrence
 </dd>
    <dt><tt> ipiProductContextForOutputOcc</tt>
   <dd>   The context (product reference) for the resulting occurrences
 </dd>
    <dt><tt> oListProductOcc</tt>
   <dd>   The list of product occurrences
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is at least one implement link
   <dt><code>S_FALSE</code>       <dd>if there is no implement link
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetPredecessors"></a><a name="GetPredecessors(CATIPLMNavInstance*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>GetPredecessors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPredecessors</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavInstance','CATIPLMNavInstance*')</script> <td><tt>ipiProcessInst</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessContextForOutputOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>oListProcessOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the predecessors (process occurrences) of a given process instance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessInst</tt>
   <dd>   The process instance
 </dd>
    <dt><tt> ipiProcessContextForOutputOcc</tt>
   <dd>   The context (process reference) for the resulting occurrences
 </dd>
    <dt><tt> oListProcessOcc</tt>
   <dd>   The list of predecessors (process occurrences)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is at least one predecessor
   <dt><code>S_FALSE</code>       <dd>if there is no predecessor
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetPredecessors"></a><a name="GetPredecessors(CATIPLMNavReference*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>GetPredecessors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPredecessors</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessRef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessContextForOutputOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>oListProcessOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the predecessors (process occurrences) of a given process reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessRef</tt>
   <dd>   The process reference
 </dd>
    <dt><tt> ipiProcessContextForOutputOcc</tt>
   <dd>   The context (process reference) for the resulting occurrences
 </dd>
    <dt><tt> oListProcessOcc</tt>
   <dd>   The list of predecessors (process occurrences)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is at least one predecessor
   <dt><code>S_FALSE</code>       <dd>if there is no predecessor
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetPredecessors"></a><a name="GetPredecessors(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>GetPredecessors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPredecessors</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>ipiProcessOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessContextForOutputOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>oListProcessOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the predecessors (process occurrences) of a given process occurrence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessOcc</tt>
   <dd>   The process occurrence
 </dd>
    <dt><tt> ipiProcessContextForOutputOcc</tt>
   <dd>   The context (process reference) for the resulting occurrences
 </dd>
    <dt><tt> oListProcessOcc</tt>
   <dd>   The list of predecessors (process occurrences)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is at least one predecessor
   <dt><code>S_FALSE</code>       <dd>if there is no predecessor
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetProcessOfEachScope"></a><a name="GetProcessOfEachScope(CATIPLMNavReference*,CATListPtrCATIPLMNavReference&amp;)"></a> <dt> o <b>GetProcessOfEachScope</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProcessOfEachScope</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProductReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavReference','CATListPtrCATIPLMNavReference&amp;')</script> <td><tt>oListProcessReferences</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the process reference of each scope of a given product reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProductReference</tt>
   <dd>   The product reference
 </dd>
    <dt><tt> oListProcessReferences</tt>
   <dd>   The list of process references
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is at least one scope
   <dt><code>S_FALSE</code>       <dd>if there is no scope
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetProductOfTheScope"></a><a name="GetProductOfTheScope(CATIPLMNavReference*,void**,IID&amp;)"></a> <dt> o <b>GetProductOfTheScope</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProductOfTheScope</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void**')</script> <td><tt>oppProductReference</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt><td><tt>= IID_CATIPLMNavReference</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the product reference of the scope of a given process reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessReference</tt>
   <dd>   The process reference
 </dd>
    <dt><tt> oppProductReference</tt>
   <dd>   The product reference of the scope
 </dd>
    <dt><tt> iIID</tt>
   <dd>   The IID of the interface representing the product reference
   <br><b>Legal values</b>: Any interface implemented on a product reference (IID_CATIPLMNavReference by default)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is a scope
   <dt><code>S_FALSE</code>       <dd>if there is no scope
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_NOINTERFACE</code> <dd>if the requested interface is not implemented on the resulting object
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetProductOfTheScope"></a><a name="GetProductOfTheScope(CATIPLMNavReference*,int,CATIPLMNavReference*&amp;)"></a> <dt> o <b>GetProductOfTheScope</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProductOfTheScope</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLoadMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*&amp;')</script> <td><tt>opProductOrPartReference</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Load the target (Product/EBOM) that are linked through scope to the process
	
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessReference</tt>
   <dd> 	Process reference on which the scoped targets are needed to be retrieved.
         
 </dd>
    <dt><tt> iLoadMode</tt>
   <dd>	Load Mode, this is to specify loading of the targets if they are not available in the session, already.
		Valid inputs: (default NO LOAD)
			0 = NoLoad
			1 = TargetOnly
			2 = WithChildren

 </dd>
    <dt><tt> opProductOrPartReference</tt>
   <dd>	Part or Product reference loaded in the session. 
 In case of iLoadMode = No Load, this will be NULL if the target is not available in the session. 

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd> On Success
   <dt><code>E_FAIL</code>        <dd> On Failure	
   </dl>
</dl>
</dl>
<a name="GetSuccessors"></a><a name="GetSuccessors(CATIPLMNavInstance*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>GetSuccessors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSuccessors</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavInstance','CATIPLMNavInstance*')</script> <td><tt>ipiProcessInst</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessContextForOutputOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>oListProcessOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the successors (process occurrences) of a given process instance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessInst</tt>
   <dd>   The process instance
 </dd>
    <dt><tt> ipiProcessContextForOutputOcc</tt>
   <dd>   The context (process reference) for the resulting occurrences
 </dd>
    <dt><tt> oListProcessOcc</tt>
   <dd>   The list of successors (process occurrences)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is at least one successor
   <dt><code>S_FALSE</code>       <dd>if there is no successor
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetSuccessors"></a><a name="GetSuccessors(CATIPLMNavOccurrence*,CATIPLMNavReference*,CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>GetSuccessors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSuccessors</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>ipiProcessOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>ipiProcessContextForOutputOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>oListProcessOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the successors (process occurrences) of a given process occurrence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiProcessOcc</tt>
   <dd>   The process occurrence
 </dd>
    <dt><tt> ipiProcessContextForOutputOcc</tt>
   <dd>   The context (process reference) for the resulting occurrences
 </dd>
    <dt><tt> oListProcessOcc</tt>
   <dd>   The list of successors (process occurrences)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <dl>
   <dt><code>S_OK</code>          <dd>if there is at least one successor
   <dt><code>S_FALSE</code>       <dd>if there is no successor
   <dt><code>E_INVALIDARG</code>  <dd>for an invalid argument
   <dt><code>E_FAIL</code>        <dd>if the method fails for any other reason
   </dl>
</dl>
</dl>
<a name="GetWhereUsed"></a><a name="GetWhereUsed(CATIAdpPLMIdentificator&amp;,CATLISTP(CATIAdpPLMIdentificator)&amp;)"></a> <dt> o <b>GetWhereUsed</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetWhereUsed</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator&amp;')</script> <td><tt>iProcessReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATIAdpPLMIdentificator)','CATLISTP(CATIAdpPLMIdentificator)&amp;')</script> <td><tt>oProcessUsingReference</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieve all father Process References using a given Process Reference. 
  <p>
  <b>Role:</b> Retrieve from the database the list of all accessible father Process References using another Process Reference.
  </p>
  <p>
  A father Process Reference is accessible if it meets the following conditions: 
  <ul>
  <li> It is an existing database object. 
  <li> It can be read under the current connection conditions (read security process granted). 
  </ul>
  </p>

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProcessReference</tt>
   <dd>  The Process Reference

  </dd>
    <dt><tt> oProcessUsingReference</tt>
   <dd>   The returned father Process References list. 
    <br>
  Must be provided as an empty List on the input; 
 <br>
    If any Identificator returned in the list, it has to be each released;
    The same parent reference will be returned MULTIPLE TIMES, if the iProcessReference is instanciated multiple times under the same parent.

  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      the returned value. 
    <ul>
     <li><tt>S_OK</tt>   : Returns a reference list (at least one Reference).
     <li><tt>S_FALSE</tt>: It does not exist any Process reference using it. Returned list is then empty.
     <li><tt>E_FAIL</tt> : There is some problem encountered in the API call.
     <li><tt>E_INVALIDARG</tt>: The input Identificator is not an existing Process Reference.
     </ul>

</dl>
</dl>
<a name="NavigateFromPartOrPrdToProcessThroughScopeLink"></a><a name="NavigateFromPartOrPrdToProcessThroughScopeLink(CATIPLMNavReference*,CATOmbLifeCycleRootsBag&amp;,CATListPtrCATBaseUnknown&amp;)"></a> <dt> o <b>NavigateFromPartOrPrdToProcessThroughScopeLink</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>NavigateFromPartOrPrdToProcessThroughScopeLink</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>iPartorProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbLifeCycleRootsBag','CATOmbLifeCycleRootsBag&amp;')</script> <td><tt>iSessionBag</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATBaseUnknown','CATListPtrCATBaseUnknown&amp;')</script> <td><tt>oListOfProcess</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
</dl>
<hr>
 This object is included in the file: <b>DELIPPRProcessNav.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DELPPRProcessItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

