<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GenKnowledgeInterfaces Interface CATIRuleSet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GenKnowledgeInterfaces.htm" href="../GenKnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GenKnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIRuleSet"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GenKnowledgeInterfaces Interface CATIRuleSet</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIRuleSet_33072','CATIRuleSet','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIRuleSet</b>
</p>
<p>
<b><i> Interface dedicated to elementary operations on an expert rule set.</i></b><br>


 <b>Role</b> Expert rule sets are used for the hierarchical organization of expert rules
 and expert checks. Under an expert rule base, one creates expert rule sets, and in expert rule sets,
 other expert rule sets, and so on ... The expert checks and expert rules can then be grouped in
 expert rule sets.
 <br>
 WARNING: the methods that modify the structure of an expert rule set are requiring the KWE license (Knowledge Expert product). 

 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIRuleBase','','CATIRuleBase') </script>, <script type="text/javascript"> activateLinkAnchor('CATIRule','','CATIRule') </script>, <script type="text/javascript"> activateLinkAnchor('CATICheck','','CATICheck') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRuleBaseComponent(CATIRuleBaseComponent_var&amp;)"><b>AddRuleBaseComponent</b></a>(CATIRuleBaseComponent_var&amp;)
<dd>  Adds a rulebase component under this expert rule set, if a rulebase component with the same name does not already exist.
 <dt> o 
    <a href="#AddRuleSet(CATIRuleSet_var&amp;)"><b>AddRuleSet</b></a>(CATIRuleSet_var&amp;)
<dd>  Adds an expert ruleset under this expert rule set, if an expert ruleset with the same name does not already exist.
 <dt> o 
    <a href="#CreateCheck(CATICheck_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"><b>CreateCheck</b></a>(CATICheck_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)
<dd>  Creates an expert check under the current expert ruleset.
 <dt> o 
    <a href="#CreateObjectFilter(CATIQccObjectFilter_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"><b>CreateObjectFilter</b></a>(CATIQccObjectFilter_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)
<dd>  Creates an object filter under the current expert ruleset.
 <dt> o 
    <a href="#CreatePrecondition(CATIQccPrecondition_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"><b>CreatePrecondition</b></a>(CATIQccPrecondition_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)
<dd>  Creates an object filter under the current expert ruleset.
 <dt> o 
    <a href="#CreateRule(CATIRule_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"><b>CreateRule</b></a>(CATIRule_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)
<dd>  Creates an expert rule under the current expert ruleset.
 <dt> o 
    <a href="#CreateRuleset(CATIRuleSet_var&amp;,CATUnicodeString&amp;)"><b>CreateRuleset</b></a>(CATIRuleSet_var&amp;,CATUnicodeString&amp;)
<dd>  Creates an expert rule set under the current expert ruleset.
 <dt> o 
    <a href="#FindAnyRuleBaseComponent(CATListValCATIRuleBaseComponent_var&amp;,boolean)"><b>FindAnyRuleBaseComponent</b></a>(CATListValCATIRuleBaseComponent_var&amp;,boolean)
<dd>  Returns all the rulebase components (rules and checks) under this expert rule set.
 <dt> o 
    <a href="#FindAnyRuleSet(CATListValCATIRuleSet_var&amp;,boolean)"><b>FindAnyRuleSet</b></a>(CATListValCATIRuleSet_var&amp;,boolean)
<dd>  Returns all the expert rulesets under this expert rule set.
 <dt> o 
    <a href="#FindRuleBaseComponent(CATUnicodeString,boolean)"><b>FindRuleBaseComponent</b></a>(CATUnicodeString,boolean)
<dd>  Returns the first rulebase component (rule or check), under this rule set, with the according name.
 <dt> o 
    <a href="#FindRuleSet(CATUnicodeString,boolean)"><b>FindRuleSet</b></a>(CATUnicodeString,boolean)
<dd>  Returns the first expert ruleset under this rule set, with the according name.
 <dt> o 
    <a href="#GetAllGenericRuleBaseComponents(CATListValCATIGenericRuleBaseComponent_var&amp;)"><b>GetAllGenericRuleBaseComponents</b></a>(CATListValCATIGenericRuleBaseComponent_var&amp;)
<dd>  Returns all rule base components under this expert rule set, recursively.
 <dt> o 
    <a href="#GetDirectGenericRuleBaseComponents(CATListValCATIGenericRuleBaseComponent_var&amp;)"><b>GetDirectGenericRuleBaseComponents</b></a>(CATListValCATIGenericRuleBaseComponent_var&amp;)
<dd>  Returns all rule base components right under this expert rule set.
 <dt> o 
    <a href="#GetSummaryStatus(CATExpertReportEnum::ValidityTypeEnum&amp;)"><b>GetSummaryStatus</b></a>(CATExpertReportEnum::ValidityTypeEnum&amp;)
<dd>  Returns the status of the expert ruleset.
 <dt> o 
    <a href="#GetWorkingMode()"><b>GetWorkingMode</b></a>()
<dd>  Gets the working mode of the expert rulebase.
 <dt> o 
    <a href="#GetWorkingModeString()"><b>GetWorkingModeString</b></a>()
<dd>  Gets the working mode of the expert rulebase.
 <dt> o 
    <a href="#ImportRuleBaseComponent(CATIRuleBaseComponent_var&amp;,conflictingImportFunctionPtr)"><b>ImportRuleBaseComponent</b></a>(CATIRuleBaseComponent_var&amp;,conflictingImportFunctionPtr)
<dd>  Import one rulebase component (check or rule) into the current expert ruleset.
 <dt> o 
    <a href="#ImportRuleSet(CATIRuleSet_var&amp;,conflictingImportFunctionPtr)"><b>ImportRuleSet</b></a>(CATIRuleSet_var&amp;,conflictingImportFunctionPtr)
<dd>  Imports the contents of an expert ruleset into the current one.
 <dt> o 
    <a href="#RemoveRuleBaseComponent(CATIRuleBaseComponent_var&amp;)"><b>RemoveRuleBaseComponent</b></a>(CATIRuleBaseComponent_var&amp;)
<dd>  Removes a rule base component under this expert rule set.
 <dt> o 
    <a href="#RemoveRuleSet(CATIRuleSet_var&amp;)"><b>RemoveRuleSet</b></a>(CATIRuleSet_var&amp;)
<dd>  Removes an expert ruleset under this expert rule set.
 <dt> o 
    <a href="#SetWorkingMode(CATExpertSolveModeEnum::WorkingModeEnum)"><b>SetWorkingMode</b></a>(CATExpertSolveModeEnum::WorkingModeEnum)
<dd>  Sets the working mode of the expert rulebase.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRuleBaseComponent"></a><a name="AddRuleBaseComponent(CATIRuleBaseComponent_var&amp;)"></a> <dt> o <b>AddRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIRuleBaseComponent','CATIRuleBaseComponent_var')</script>  <b>AddRuleBaseComponent</b>(<td> const <script type="text/javascript"> activateLink('CATIRuleBaseComponent_var','CATIRuleBaseComponent_var&amp;')</script> <td><tt>spRuleBaseComponent</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Adds a rulebase component under this expert rule set, if a rulebase component with the same name does not already exist.<br>

 Needs Knowledge Expert Buildtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> spRuleBaseComponent</tt>
   <dd> a rulebase component. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the component under the rule set (the previous one if one with same name already exists)
</dl>
</dl>
<a name="AddRuleSet"></a><a name="AddRuleSet(CATIRuleSet_var&amp;)"></a> <dt> o <b>AddRuleSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIRuleSet','CATIRuleSet_var')</script>  <b>AddRuleSet</b>(<td> const <script type="text/javascript"> activateLink('CATIRuleSet_var','CATIRuleSet_var&amp;')</script> <td><tt>spRuleSet</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Adds an expert ruleset under this expert rule set, if an expert ruleset with the same name does not already exist.<br>
 Needs Knowledge Expert Buildtime license to operate this method

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> spRuleSet</tt>
   <dd> a rulebase component. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the component under the rule set (the previous one if one with same name already exists)
</dl>
</dl>
<a name="CreateCheck"></a><a name="CreateCheck(CATICheck_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"></a> <dt> o <b>CreateCheck</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateCheck</b>(<td><script type="text/javascript"> activateLink('CATICheck_var','CATICheck_var&amp;')</script> <td><tt>oCreatedCheck</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iVariables</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIRuleBaseComponent::RuleBaseComponentLanguage','CATIRuleBaseComponent::RuleBaseComponentLanguage')</script> <td><tt>iLanguage</tt><td><tt>= CATIRuleBaseComponent::KWELanguage</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an expert check under the current expert ruleset.

 Needs Knowledge Expert Buildtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCreatedCheck</tt>
   <dd> The created expert check. </dd>
    <dt><tt> iName</tt>
   <dd>      Name of the expert check. </dd>
    <dt><tt> iVariables</tt>
   <dd> Variables of the expert check. </dd>
    <dt><tt> iBody</tt>
   <dd>      Body of the expert check. </dd>
    <dt><tt> iLanguage</tt>
   <dd>  Language of the expert check. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="CreateObjectFilter"></a><a name="CreateObjectFilter(CATIQccObjectFilter_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"></a> <dt> o <b>CreateObjectFilter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateObjectFilter</b>(<td><script type="text/javascript"> activateLink('CATIQccObjectFilter_var','CATIQccObjectFilter_var&amp;')</script> <td><tt>oCreatedFilter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iVariables</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIRuleBaseComponent::RuleBaseComponentLanguage','CATIRuleBaseComponent::RuleBaseComponentLanguage')</script> <td><tt>iLanguage</tt><td><tt>= CATIRuleBaseComponent::KWEComplexLanguage</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an object filter under the current expert ruleset.

 Needs Knowledge Expert Buildtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCreatedFilter</tt>
   <dd> The created expert check. </dd>
    <dt><tt> iName</tt>
   <dd>      Name of the expert check. </dd>
    <dt><tt> iVariables</tt>
   <dd> Variables of the expert check. </dd>
    <dt><tt> iBody</tt>
   <dd>      Body of the expert check. </dd>
    <dt><tt> iLanguage</tt>
   <dd>  Language of the expert check. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="CreatePrecondition"></a><a name="CreatePrecondition(CATIQccPrecondition_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"></a> <dt> o <b>CreatePrecondition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreatePrecondition</b>(<td><script type="text/javascript"> activateLink('CATIQccPrecondition_var','CATIQccPrecondition_var&amp;')</script> <td><tt>oCreatedPrecondition</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iVariables</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIRuleBaseComponent::RuleBaseComponentLanguage','CATIRuleBaseComponent::RuleBaseComponentLanguage')</script> <td><tt>iLanguage</tt><td><tt>= CATIRuleBaseComponent::KWEComplexLanguage</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an object filter under the current expert ruleset.

 Needs Knowledge Expert Buildtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCreatedPrecondition</tt>
   <dd> The created expert check. </dd>
    <dt><tt> iName</tt>
   <dd>      Name of the expert check. </dd>
    <dt><tt> iVariables</tt>
   <dd> Variables of the expert check. </dd>
    <dt><tt> iBody</tt>
   <dd>      Body of the expert check. </dd>
    <dt><tt> iLanguage</tt>
   <dd>  Language of the expert check. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="CreateRule"></a><a name="CreateRule(CATIRule_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIRuleBaseComponent::RuleBaseComponentLanguage)"></a> <dt> o <b>CreateRule</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateRule</b>(<td><script type="text/javascript"> activateLink('CATIRule_var','CATIRule_var&amp;')</script> <td><tt>oCreatedRule</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iVariables</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIRuleBaseComponent::RuleBaseComponentLanguage','CATIRuleBaseComponent::RuleBaseComponentLanguage')</script> <td><tt>iLanguage</tt><td><tt>= CATIRuleBaseComponent::KWELanguage</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an expert rule under the current expert ruleset.

 Needs Knowledge Expert Buildtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCreatedRule</tt>
   <dd> The created expert rule. </dd>
    <dt><tt> iName</tt>
   <dd>      Name of the expert rule. </dd>
    <dt><tt> iVariables</tt>
   <dd> Variables of the expert rule. </dd>
    <dt><tt> iBody</tt>
   <dd>      Body of the expert rule. </dd>
    <dt><tt> iLanguage</tt>
   <dd>  Language of the expert rule. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="CreateRuleset"></a><a name="CreateRuleset(CATIRuleSet_var&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CreateRuleset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateRuleset</b>(<td><script type="text/javascript"> activateLink('CATIRuleSet_var','CATIRuleSet_var&amp;')</script> <td><tt>oCreatedRuleSet</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an expert rule set under the current expert ruleset.

 Needs Knowledge Expert Buildtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCreatedRuleSet</tt>
   <dd> The created expert ruleset. </dd>
    <dt><tt> iName</tt>
   <dd> Name of the expert rule set. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="FindAnyRuleBaseComponent"></a><a name="FindAnyRuleBaseComponent(CATListValCATIRuleBaseComponent_var&amp;,boolean)"></a> <dt> o <b>FindAnyRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>FindAnyRuleBaseComponent</b>(<td><script type="text/javascript"> activateLink('CATListValCATIRuleBaseComponent_var','CATListValCATIRuleBaseComponent_var&amp;')</script> <td><tt>iolListToBeFilled</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iRecursive</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns all the rulebase components (rules and checks) under this expert rule set.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iolListToBeFilled</tt>
   <dd> list filled with the found rulebase components. </dd>
    <dt><tt> iRecursive</tt>
   <dd> TRUE for a recursive search, FALSE to a search limited at the current expert ruleset.</dd>
</dl>
</dl>
</dl>
<a name="FindAnyRuleSet"></a><a name="FindAnyRuleSet(CATListValCATIRuleSet_var&amp;,boolean)"></a> <dt> o <b>FindAnyRuleSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>FindAnyRuleSet</b>(<td><script type="text/javascript"> activateLink('CATListValCATIRuleSet_var','CATListValCATIRuleSet_var&amp;')</script> <td><tt>iolListToBeFilled</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iRecursive</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns all the expert rulesets under this expert rule set.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iolListToBeFilled</tt>
   <dd> list filled with the found rulesets. </dd>
    <dt><tt> iRecursive</tt>
   <dd> TRUE for a recursive search, FALSE to a search limited at the current ruleset.</dd>
</dl>
</dl>
</dl>
<a name="FindRuleBaseComponent"></a><a name="FindRuleBaseComponent(CATUnicodeString,boolean)"></a> <dt> o <b>FindRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIRuleBaseComponent','CATIRuleBaseComponent_var')</script>  <b>FindRuleBaseComponent</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iRecursive</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the first rulebase component (rule or check), under this rule set, with the according name.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> name of the component. </dd>
    <dt><tt> iRecursive</tt>
   <dd> TRUE for a recursive search, FALSE to a search limited at the current ruleset. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the found component or NULL_var if not found
</dl>
</dl>
<a name="FindRuleSet"></a><a name="FindRuleSet(CATUnicodeString,boolean)"></a> <dt> o <b>FindRuleSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIRuleSet','CATIRuleSet_var')</script>  <b>FindRuleSet</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iRecursive</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first expert ruleset under this rule set, with the according name.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> name of the expert ruleset. </dd>
    <dt><tt> iRecursive</tt>
   <dd> TRUE for a recursive search, FALSE to a search limited at the current expert ruleset. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the found component or NULL_var if not found
</dl>
</dl>
<a name="GetAllGenericRuleBaseComponents"></a><a name="GetAllGenericRuleBaseComponents(CATListValCATIGenericRuleBaseComponent_var&amp;)"></a> <dt> o <b>GetAllGenericRuleBaseComponents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetAllGenericRuleBaseComponents</b>(<td><script type="text/javascript"> activateLink('CATListValCATIGenericRuleBaseComponent_var','CATListValCATIGenericRuleBaseComponent_var&amp;')</script> <td><tt>iolListToBeFilled</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns all rule base components under this expert rule set, recursively.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iolListToBeFilled</tt>
   <dd> List filled with the components.</dd>
</dl>
</dl>
</dl>
<a name="GetDirectGenericRuleBaseComponents"></a><a name="GetDirectGenericRuleBaseComponents(CATListValCATIGenericRuleBaseComponent_var&amp;)"></a> <dt> o <b>GetDirectGenericRuleBaseComponents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetDirectGenericRuleBaseComponents</b>(<td><script type="text/javascript"> activateLink('CATListValCATIGenericRuleBaseComponent_var','CATListValCATIGenericRuleBaseComponent_var&amp;')</script> <td><tt>iolListToBeFilled</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns all rule base components right under this expert rule set.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iolListToBeFilled</tt>
   <dd> List filled with the components.</dd>
</dl>
</dl>
</dl>
<a name="GetSummaryStatus"></a><a name="GetSummaryStatus(CATExpertReportEnum::ValidityTypeEnum&amp;)"></a> <dt> o <b>GetSummaryStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSummaryStatus</b>(<td><script type="text/javascript"> activateLink('CATExpertReportEnum::ValidityTypeEnum','CATExpertReportEnum::ValidityTypeEnum&amp;')</script> <td><tt>ostatus</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the status of the expert ruleset.

 Needs Knowledge Expert Runtime license to operate this method
 For instance, if all objets under the expert ruleset are green, then the expert ruleset is green.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ostatus</tt>
   <dd> of the ruleset. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="GetWorkingMode"></a><a name="GetWorkingMode()"></a> <dt> o <b>GetWorkingMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATExpertSolveModeEnum::WorkingModeEnum','CATExpertSolveModeEnum::WorkingModeEnum')</script>  <b>GetWorkingMode</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the working mode of the expert rulebase.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  working mode (
<script type="text/javascript"> activateLinkAnchor('CATExpertSolveModeEnum','WorkingModeEnum','CATExpertSolveModeEnum.WorkingModeEnum') </script> ).
</dl>
</dl>
<a name="GetWorkingModeString"></a><a name="GetWorkingModeString()"></a> <dt> o <b>GetWorkingModeString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetWorkingModeString</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the working mode of the expert rulebase.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  working mode.
</dl>
</dl>
<a name="ImportRuleBaseComponent"></a><a name="ImportRuleBaseComponent(CATIRuleBaseComponent_var&amp;,conflictingImportFunctionPtr)"></a> <dt> o <b>ImportRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ImportRuleBaseComponent</b>(<td> const <script type="text/javascript"> activateLink('CATIRuleBaseComponent_var','CATIRuleBaseComponent_var&amp;')</script> <td><tt>iRuleBaseComponentToImport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('conflictingImportFunctionPtr','conflictingImportFunctionPtr')</script> <td><tt>iFct</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Import one rulebase component (check or rule) into the current expert ruleset.

 Needs Knowledge Expert Runtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRuleBaseComponentToImport</tt>
   <dd> A rulebase component (check or rule) to import. </dd>
    <dt><tt> iFct</tt>
   <dd> A function triggered on conflicting objects. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="ImportRuleSet"></a><a name="ImportRuleSet(CATIRuleSet_var&amp;,conflictingImportFunctionPtr)"></a> <dt> o <b>ImportRuleSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ImportRuleSet</b>(<td> const <script type="text/javascript"> activateLink('CATIRuleSet_var','CATIRuleSet_var&amp;')</script> <td><tt>iRuleSetToImport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('conflictingImportFunctionPtr','conflictingImportFunctionPtr')</script> <td><tt>iFct</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Imports the contents of an expert ruleset into the current one.

 Needs Knowledge Expert Runtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRuleSetToImport</tt>
   <dd> An expert ruleset to import the contents from. </dd>
    <dt><tt> iFct</tt>
   <dd> A function triggered on conflicting objects. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="RemoveRuleBaseComponent"></a><a name="RemoveRuleBaseComponent(CATIRuleBaseComponent_var&amp;)"></a> <dt> o <b>RemoveRuleBaseComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveRuleBaseComponent</b>(<td> const <script type="text/javascript"> activateLink('CATIRuleBaseComponent_var','CATIRuleBaseComponent_var&amp;')</script> <td><tt>spRuleBaseComponent</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Removes a rule base component under this expert rule set.

 Needs Knowledge Expert Buildtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> spRuleBaseComponent</tt>
   <dd> a rule base component. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="RemoveRuleSet"></a><a name="RemoveRuleSet(CATIRuleSet_var&amp;)"></a> <dt> o <b>RemoveRuleSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveRuleSet</b>(<td> const <script type="text/javascript"> activateLink('CATIRuleSet_var','CATIRuleSet_var&amp;')</script> <td><tt>spRuleSet</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes an expert ruleset under this expert rule set.

 Needs Knowledge Expert Buildtime license to operate this method
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> spRuleSet</tt>
   <dd> a rule base component. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK or E_FAIL
</dl>
</dl>
<a name="SetWorkingMode"></a><a name="SetWorkingMode(CATExpertSolveModeEnum::WorkingModeEnum)"></a> <dt> o <b>SetWorkingMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWorkingMode</b>(<td><script type="text/javascript"> activateLink('CATExpertSolveModeEnum::WorkingModeEnum','CATExpertSolveModeEnum::WorkingModeEnum')</script> <td><tt>iWorkingMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the working mode of the expert rulebase.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWorkingMode</tt>
   <dd> working mode (</dd>
<script type="text/javascript"> activateLinkAnchor('CATExpertSolveModeEnum','WorkingModeEnum','CATExpertSolveModeEnum.WorkingModeEnum') </script> ).
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIRuleSet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GenerativeKnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

