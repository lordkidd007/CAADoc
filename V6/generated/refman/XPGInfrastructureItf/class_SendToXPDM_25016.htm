<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>XPGInfrastructureItf Class SendToXPDM</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../XPGInfrastructureItf.htm" href="../XPGInfrastructureItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "XPGInfrastructureItf";	}
		function getCurrentObjectName() { 
 	return "SendToXPDM"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>XPGInfrastructureItf <script type="text/javascript" > writeClassCharacteristic(); </script> SendToXPDM</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_SendToXPDM_25016','SendToXPDM','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>SendToXPDM</b>
</p>
<p>
<b><i> Class to provide service for sending export event.</i></b><br>
 Should not be inherited.
 PLM Component and XPDM target site must be set before sending export event.
 <br><b>Role:</b> This class provides methods to set export options and a method to send export event.<br></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#SendToXPDM()"><b>SendToXPDM</b></a>()
<dd>  Constructs a SendToXPDM object.
 <dt> o 
    <a href="#~SendToXPDM()"><b>~SendToXPDM</b></a>()
<dd>  Destructs SendToXPDM object.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Send(CATString&amp;,CATError*&amp;)"><b>Send</b></a>(CATString&amp;,CATError*&amp;)
<dd>  Send the event to XPDM.
 <dt> o 
    <a href="#SetCustomParams(CATListOfCATUnicodeString)"><b>SetCustomParams</b></a>(CATListOfCATUnicodeString)
<dd>  Sets the list of custom name/values parameters that will be added to the resulting event.
 <dt> o 
    <a href="#SetDescription(CATUnicodeString&amp;)"><b>SetDescription</b></a>(CATUnicodeString&amp;)
<dd>  Sets the description of the resulting event.
 <dt> o 
    <a href="#SetQueueName(CATUnicodeString&amp;)"><b>SetQueueName</b></a>(CATUnicodeString&amp;)
<dd>  Sets the name of Queue in which resulting event will be sent.
 <dt> o 
    <a href="#SetSourceObjectID(CATIAdpPLMIdentificator*)"><b>SetSourceObjectID</b></a>(CATIAdpPLMIdentificator*)
<dd>  Sets the PLM Component to be exported to XPDM.
 <dt> o 
    <a href="#SetTargetSiteID(CATUnicodeString&amp;)"><b>SetTargetSiteID</b></a>(CATUnicodeString&amp;)
<dd>  Sets the XPDM target site.
 <dt> o 
    <a href="#SetTransferOption(CATUnicodeString&amp;)"><b>SetTransferOption</b></a>(CATUnicodeString&amp;)
<dd>  Sets the option string which enables selection of right connection parameter file.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="SendToXPDM"></a><a name="SendToXPDM()"></a> <dt> o <b>SendToXPDM</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>SendToXPDM</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a SendToXPDM object.
</dl>
<a name="~SendToXPDM"></a><a name="~SendToXPDM()"></a> <dt> o <b>~SendToXPDM</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~SendToXPDM</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructs SendToXPDM object.
</dl>
 <h2>Methods</h2> <br>
<a name="Send"></a><a name="Send(CATString&amp;,CATError*&amp;)"></a> <dt> o <b>Send</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Send</b>(<td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oEventUid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATError','CATError*&amp;')</script> <td><tt>opReturnError</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Send the event to XPDM.
 <br><br><b>Role:</b> This method will send the event with event parameters already set by the other set methods of this class.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEventUid</tt>
   <dd> [out]		Unique ID of resulting event. Returned if send event is successful. Can be used for monitoring.
 </dd>
    <dt><tt> opReturnError</tt>
   <dd> [out, CATBaseUnknown#Release]		Error ID and Message for failure reason. Returned if send event is not successful.
		If send event is successful for all the objects then opReturnError will be NULL.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
	<dt><tt>E_FAIL</tt> <dd> If Send Event has failed.
	<dt><tt>S_FALSE</tt> <dd> If selectec objects are not supported. Note that event is fired for some of the objects.
   <dt><tt>S_OK</tt>  <dd> If Send Event is successful.
  </dl>
</dl>
</dl>
<a name="SetCustomParams"></a><a name="SetCustomParams(CATListOfCATUnicodeString)"></a> <dt> o <b>SetCustomParams</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCustomParams</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString')</script> <td><tt>iCustomParams</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the list of custom name/values parameters that will be added to the resulting event.
 This is an optional method.
 <br><br><b>Role:</b> Set the description of resulting event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCustomParams</tt>
   <dd> [in]		list of custom name/values. example :
			List Index 1: Key 1
			List Index 2: Value 1
			List Index 3: Key 2
			List Index 4: Value 2
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
	<dt><tt>E_INVALIDARG</tt> <dd> If list size is odd.   
   <dt><tt>S_OK</tt>  <dd> If custom parameter is successfully set. 
  </dl>
</dl>
</dl>
<a name="SetDescription"></a><a name="SetDescription(CATUnicodeString&amp;)"></a> <dt> o <b>SetDescription</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDescription</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iDescription</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the description of the resulting event. 
 This is an optional method.
 <br><br><b>Role:</b> Set the description of resulting event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDescription</tt>
   <dd> [in]		string description of resulting event
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>  <dd> If description is successfully set. 
  </dl>
</dl>
</dl>
<a name="SetQueueName"></a><a name="SetQueueName(CATUnicodeString&amp;)"></a> <dt> o <b>SetQueueName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetQueueName</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iQueueName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the name of Queue in which resulting event will be sent. 
 This is an optional method. If not called, Queue name will be name of the user logged in to 3DEXPERIENCE session.
 <br><br><b>Role:</b> Set the Queue name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iQueueName</tt>
   <dd> [in]		Queue name
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>  <dd> If queue name is successfully set. 
  </dl>
</dl>
</dl>
<a name="SetSourceObjectID"></a><a name="SetSourceObjectID(CATIAdpPLMIdentificator*)"></a> <dt> o <b>SetSourceObjectID</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSourceObjectID</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>ipObjectId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the PLM Component to be exported to XPDM. 
 <br><br><b>Role:</b> Sets a single object to export.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipObjectId</tt>
   <dd> [in]		PLM Component to export. Object is replaced with previously set objects if any.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>E_INVALIDARG</tt> <dd> If ipObjectId is NULL.   
   <dt><tt>S_OK</tt>  <dd> if object identifier have been successfully set. 
  </dl>
</dl>
</dl>
<a name="SetTargetSiteID"></a><a name="SetTargetSiteID(CATUnicodeString&amp;)"></a> <dt> o <b>SetTargetSiteID</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTargetSiteID</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iTargetSiteID</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the XPDM target site. It must match site IDs defined during Event Bus deployment. 
 <br><br><b>Role:</b> Set the XPDM target site.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTargetSiteID</tt>
   <dd> [in]		XPDM target site 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>E_INVALIDARG</tt> <dd> If target site is empty.   
   <dt><tt>S_OK</tt>  <dd> If target site is successfully set. 
  </dl>
</dl>
</dl>
<a name="SetTransferOption"></a><a name="SetTransferOption(CATUnicodeString&amp;)"></a> <dt> o <b>SetTransferOption</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTransferOption</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iTransferoption</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the option string which enables selection of right connection parameter file. 
 Option string is defined by administrator during setup of Adapter for X-PDM.
 This is an optional method.
 <br><br><b>Role:</b> Set the option string. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTransferoption</tt>
   <dd> [in]		Option string
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>  <dd> If option string is successfully set. 
  </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>SendToXPDM.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SendToXPDMAPI</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

