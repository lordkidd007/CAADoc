<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMInterferenceUseItf Interface PLMIInterferenceGroupObjects</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMInterferenceUseItf.htm" href="../PLMInterferenceUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMInterferenceUseItf";	}
		function getCurrentObjectName() { 
 	return "PLMIInterferenceGroupObjects"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMInterferenceUseItf Interface PLMIInterferenceGroupObjects</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMIInterferenceGroupObjects_64093','PLMIInterferenceGroupObjects','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMIInterferenceGroupObjects</b>
</p>
<p>
<b><i> Interface to manage the content of groups of an Interference Simulation.</i></b><br>

 <br> To retrieve a pointer on interface <b>PLMIInterferenceGroupObjects</b>, see method <script type="text/javascript"> activateLinkAnchor('PLMIInterferenceSimulation','GetGroupObjects','PLMIInterferenceSimulation.GetGroupObjects') </script>.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Add(CATIPLMNavOccurrence*)"><b>Add</b></a>(CATIPLMNavOccurrence*)
<dd>  Adds an occurrence in the group.
 <dt> o 
    <a href="#AddPLMFilter(CATIAdpPLMIdentificator*,PLMIInterferenceSimulation*)"><b>AddPLMFilter</b></a>(CATIAdpPLMIdentificator*,PLMIInterferenceSimulation*)
<dd>  Adds a PLM Filter to the group.
 <dt> o 
    <a href="#GetOccurrences(CATListPtrCATIPLMNavOccurrence&amp;)"><b>GetOccurrences</b></a>(CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Gets the list of occurrences of a group of an Interference Simulation.
 <dt> o 
    <a href="#GetPLMFilter(CATIAdpPLMIdentificator*&amp;)"><b>GetPLMFilter</b></a>(CATIAdpPLMIdentificator*&amp;)
<dd>  Gets the PLM Filter of the group.
 <dt> o 
    <a href="#Remove(CATIPLMNavOccurrence*)"><b>Remove</b></a>(CATIPLMNavOccurrence*)
<dd>  Removes an occurrence in the group.
 <dt> o 
    <a href="#RemovePLMFilter()"><b>RemovePLMFilter</b></a>()
<dd>  Removes the PLM Filter to the group.
 <dt> o 
    <a href="#SetOccurrences(CATListPtrCATIPLMNavOccurrence&amp;)"><b>SetOccurrences</b></a>(CATListPtrCATIPLMNavOccurrence&amp;)
<dd>  Sets a list of occurrences to a group of an Interference Simulation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Add"></a><a name="Add(CATIPLMNavOccurrence*)"></a> <dt> o <b>Add</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Add</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Adds an occurrence in the group.
 
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOcc</tt>
   <dd> [in]    The occurrence to add.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
 
 <br>
 
  <dt> Example: </dt>
  <dd> <pre class="code">    The following example adds an occurrence to the current group.
   <pre>
   PLMIInterferenceGroupObjects   * piItfGroup = ... ;  // (retrieved from a PLMIInterferenceSimulation )
   CATIPLMNavOccurrence           * piOcc      = ... ;  // an occurrence
   
   HRESULT hr = piItfGroup->Add (piOcc) ;
   
   </pre></pre></dd>
</dl>
</dl>
<a name="AddPLMFilter"></a><a name="AddPLMFilter(CATIAdpPLMIdentificator*,PLMIInterferenceSimulation*)"></a> <dt> o <b>AddPLMFilter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddPLMFilter</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>ipiAdpIdentFilter</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMIInterferenceSimulation','PLMIInterferenceSimulation*')</script> <td><tt>ipiItfSimu</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Adds a PLM Filter to the group.
 
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiAdpIdentFilter</tt>
   <dd> [in]    The PLM Filter to add.
 <br> Use method </dd>
<script type="text/javascript"> activateLinkAnchor('CATPLMPersistentFilterServices','RetrievePersistentFilterFromStructure','CATPLMPersistentFilterServices.RetrievePersistentFilterFromStructure') </script> to retrieve a valid PLM Filter. <br> This PLM Filter must be the only element of the group. Group can only contain one Product Filter (and only one) or selected node or parts.
 
    <dt><tt> ipiItfSimu</tt>
   <dd> [in]    Simulation to which the group belongs.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   <dt><tt>E_INVALIDARG</tt> <dd> If input arguments are not valid or if the Root Product filtered by the PLM Filter is not the same than the Root Product referenced by the simulation (see method 
<script type="text/javascript"> activateLinkAnchor('PLMIInterferenceServices','CreateInterferenceSimulation)','PLMIInterferenceServices.CreateInterferenceSimulation)') </script>.   </dl>
 
 <br>
 
  <dt> Example: </dt>
  <dd> <pre class="code">    The following example adds a PLM Filter to the current group.
   <pre>
   PLMIInterferenceSimulation     * ipiItfSimu        = ... ;  // (created by PLMIInterferenceServices)
   PLMIInterferenceGroupObjects   * piItfGroup        = ... ;  // (retrieved from a PLMIInterferenceSimulation )
   CATIAdpPLMIdentificator        * piAdpIdentFilter  = ... ;  // one PLM Filter of the list returned by method RetrievePersistentFilterFromStructure
   
   HRESULT hr = piItfGroup->AddPLMFilter (piAdpIdentFilter, ipiItfSimu) ;
   
   </pre></pre></dd>
</dl>
</dl>
<a name="GetOccurrences"></a><a name="GetOccurrences(CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>GetOccurrences</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOccurrences</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>oListOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of occurrences of a group of an Interference Simulation.
 
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOcc</tt>
   <dd> [out]   The list of occurrences.
   The caller must release the elements of the list
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
 
 <br>
 
  <dt> Example: </dt>
  <dd> <pre class="code">   This example gets the list of occurrences of a group.
   <pre>
   PLMIInterferenceGroupObjects   * piItfGroup = ... ;  // (Group retrieved from PLMIInterferenceSimulation )
   CATListPtrCATIPLMNavOccurrence   ListOcc ;  // the list of occurrences
   
   HRESULT hr = piItfGroup->GetOccurrences (ListOcc) ;
   
   </pre></pre></dd>
</dl>
</dl>
<a name="GetPLMFilter"></a><a name="GetPLMFilter(CATIAdpPLMIdentificator*&amp;)"></a> <dt> o <b>GetPLMFilter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPLMFilter</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*&amp;')</script> <td><tt>opiAdpIdentFilter</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Gets the PLM Filter of the group.
 
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiAdpIdentFilter</tt>
   <dd> [out, CATBaseUnknown#Release]    The PLM Filter of the group.
 <br> A group can only contain one Product Filter (and only one) or selected node or parts.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
 
 <br>
 
  <dt> Example: </dt>
  <dd> <pre class="code">    The following example gets the PLM Filter of the current group.
   <pre>
   PLMIInterferenceGroupObjects   * piItfGroup        = ... ;  // (retrieved from a PLMIInterferenceSimulation )
   CATIAdpPLMIdentificator        * piAdpIdentFilter  = NULL ;
   
   HRESULT hr = piItfGroup->GetPLMFilter (piAdpIdentFilter) ;
   
   </pre></pre></dd>
</dl>
</dl>
<a name="Remove"></a><a name="Remove(CATIPLMNavOccurrence*)"></a> <dt> o <b>Remove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Removes an occurrence in the group.
 
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOcc</tt>
   <dd> [in]    The occurrence to remove.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
 
 <br>
 
  <dt> Example: </dt>
  <dd> <pre class="code">    The following example removes an occurrence to the current group.
   <pre>
   PLMIInterferenceGroupObjects   * piItfGroup = ... ;  // (retrieved from a PLMIInterferenceSimulation )
   CATIPLMNavOccurrence           * piOcc      = ... ;  // an occurrence
   
   HRESULT hr = piItfGroup->Remove (piOcc) ;
   
   </pre></pre></dd>
</dl>
</dl>
<a name="RemovePLMFilter"></a><a name="RemovePLMFilter()"></a> <dt> o <b>RemovePLMFilter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemovePLMFilter</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Removes the PLM Filter to the group.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
 
 <br>
 
  <dt> Example: </dt>
  <dd> <pre class="code">    The following example removes the PLM Filter of the current group.
   <pre>
   PLMIInterferenceGroupObjects   * piItfGroup        = ... ;  // (retrieved from a PLMIInterferenceSimulation )
   
   HRESULT hr = piItfGroup->RemovePLMFilter () ;
   
   </pre></pre></dd>
</dl>
</dl>
<a name="SetOccurrences"></a><a name="SetOccurrences(CATListPtrCATIPLMNavOccurrence&amp;)"></a> <dt> o <b>SetOccurrences</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOccurrences</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavOccurrence','CATListPtrCATIPLMNavOccurrence&amp;')</script> <td><tt>iListOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Sets a list of occurrences to a group of an Interference Simulation.
 
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOcc</tt>
   <dd> [in]   The list of occurrences to set to the group. These occurrences replace occurrences already present in the group
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
 
 <br>
 
  <dt> Example: </dt>
  <dd> <pre class="code">   This example sets a list of occurrences to the current group.
   <pre>
   PLMIInterferenceGroupObjects   * piItfGroup = ... ;  // (retrieved from a PLMIInterferenceSimulation )
   CATListPtrCATIPLMNavOccurrence   ListOcc    = ... ;  // the list of occurrences
   
   HRESULT hr = piItfGroup->SetOccurrences (ListOcc) ;
   
   </pre></pre></dd>
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMIInterferenceGroupObjects.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMInterferenceUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

