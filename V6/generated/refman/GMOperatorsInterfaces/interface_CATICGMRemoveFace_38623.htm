<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Interface CATICGMRemoveFace</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMRemoveFace"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces Interface CATICGMRemoveFace</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMRemoveFace_38623','CATICGMRemoveFace','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMRemoveFace</b>
</p>
<p>
<b><i> Class defining a topological operator which removes a set of faces from a volume or a skin.</i></b><br>
<br>
 This operator does not change the dimension of the body: a volume remains a volume,
 a skin remains a skin.<br>
 Unlike in the Part Design interactive command, the specified faces to be removed are 
 not propagated, so that in your application, you should either provide a consistent set of faces
 or propagate the faces. The operation completes when the body can be closed by extrapolation 
 of the faces which were adjacent to the ones removed but this extrapolation should not generate any 
 tangency configuration.<br>
 To use this operator, you must:
 <ul>
 <li>Create it with the CATCGMCreateRemoveFace global function
 <li>Tune it with appropriate options, using the <tt>SetXxx</tt> or <tt>Append</tt> methods.
 <li>Run it
 <li>Get the result with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometric factory, after the operator deletion.
 <li>Release the operator with the <tt>Release</tt> method after use.
 </ul>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Append(CATLISTP(CATFace)&amp;)"><b>Append</b></a>(CATLISTP(CATFace)&amp;)
<dd>  Appends a list of faces to be removed.
 <dt> o 
    <a href="#AppendLimiting(CATFace*,CATBody*,CATOrientation)"><b>AppendLimiting</b></a>(CATFace*,CATBody*,CATOrientation)
<dd>  Restricts the removal of a face to a portion delimited by a single-face skin.
 <dt> o 
    <a href="#GetAllTrickyFaces(CATLISTP(CATFace)&amp;,CATListOfInt&amp;)"><b>GetAllTrickyFaces</b></a>(CATLISTP(CATFace)&amp;,CATListOfInt&amp;)
<dd>  Returns the complete list of faces when the operation 
 cannot complete.
 <dt> o 
    <a href="#GetResult()"><b>GetResult</b></a>()
<dd>  Returns the pointer to the resulting body.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetFreezeMode(CATBodyFreezeMode)"><b>SetFreezeMode</b></a>(CATBodyFreezeMode)
<dd>  Defines the "Freeze" mode of the resulting body.
 <dt> o 
    <a href="#SetTwistDetection(short)"><b>SetTwistDetection</b></a>(short)
<dd>  Enables or disables twist detection.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Append"></a><a name="Append(CATLISTP(CATFace)&amp;)"></a> <dt> o <b>Append</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Append</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iFacesToRemove</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Appends a list of faces to be removed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFacesToRemove</tt>
   <dd> The list of pointers to faces to remove.</dd>
</dl>
</dl>
</dl>
<a name="AppendLimiting"></a><a name="AppendLimiting(CATFace*,CATBody*,CATOrientation)"></a> <dt> o <b>AppendLimiting</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AppendLimiting</b>(<td><script type="text/javascript"> activateLink('CATFace','CATFace*')</script> <td><tt>iFaceToRelimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iLimitingBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iOri</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Restricts the removal of a face to a portion delimited by a single-face skin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFaceToRemove</tt>
   <dd> The face to be removed.
 </dd>
    <dt><tt> iLimitingBody</tt>
   <dd> The limiting body.
 </dd>
    <dt><tt> iOri</tt>
   <dd> The orientation defining the portion of the face to be removed.</dd>
</dl>
</dl>
</dl>
<a name="GetAllTrickyFaces"></a><a name="GetAllTrickyFaces(CATLISTP(CATFace)&amp;,CATListOfInt&amp;)"></a> <dt> o <b>GetAllTrickyFaces</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetAllTrickyFaces</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>oAllTrickyFaces</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oAllDiag</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the complete list of faces when the operation 
 cannot complete. This method is mainly used by the interactive command to help the end-user
 determine why the operator cannot complete. When the operation completes, this list is empty.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAllTrickyFaces</tt>
   <dd> The list of faces intended to be removed, but not removed.
 </dd>
    <dt><tt> oAllDiag</tt>
   <dd> The list of diagnosis.</dd>
</dl>
</dl>
</dl>
<a name="GetResult"></a><a name="GetResult()"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetResult</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the pointer to the resulting body.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the resulting body, <tt>NULL</tt> if the operation failed. 
 If you do not want to keep the resulting body, 
 use the 
<script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometric factory, after the operator deletion.
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator.
</dl>
<a name="SetFreezeMode"></a><a name="SetFreezeMode(CATBodyFreezeMode)"></a> <dt> o <b>SetFreezeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFreezeMode</b>(<td><script type="text/javascript"> activateLink('CATBodyFreezeMode','CATBodyFreezeMode')</script> <td><tt>iOnOrOff</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the "Freeze" mode of the resulting body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnOrOff</tt>
   <dd> The "Freeze" mode of the resulting body. 
 <ul>
 <li>CATBodyFreezeOff: the resulting body can be modified. 
 <li>CATBodyFreezeOn: the resulting body cannot be modified. Any cell to be modified will have
 to be duplicated.
 </ul></dd>
</dl>
</dl>
</dl>
<a name="SetTwistDetection"></a><a name="SetTwistDetection(short)"></a> <dt> o <b>SetTwistDetection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTwistDetection</b>(<td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iTwistDetection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Enables or disables twist detection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTwistDetection</tt>
   <dd> <dl>
 <dt><tt>0</tt></dt><dd> Twist detection is disabled : result body may lie on twisted surfaces.
 This mode is used by default at the creation of the operator.</dd>
 <dt><tt>1</tt></dt><dd> Twist detection is enabled : face removal fails if at least one of the extrapolated surfaces is twisted.</dd>
 </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMRemoveFace.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

