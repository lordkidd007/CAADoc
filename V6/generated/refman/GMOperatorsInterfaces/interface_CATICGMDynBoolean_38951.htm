<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Interface CATICGMDynBoolean</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMDynBoolean"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces Interface CATICGMDynBoolean</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMDynBoolean_38951','CATICGMDynBoolean','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMDynBoolean</b>
</p>
<p>
<b><i> Class defining the boolean operations on skins and solids.</i></b><br>
 Boolean operations
 on wires are performed by using the CATICGMHybBoolean operator as well as its derived classes.
<br>
 The CATICGMDynBoolean operator follows the global frame of the topological operators and satisfies the smart mechanism: 
 the input bodies are not modified. A new resulting body is created, 
 possibly sharing data with the input bodies.
<ul>
 <li>A CATICGMDynBoolean operator is created with the <tt>CATCGMCreateDynBoolean</tt> global function:
 It must be directly released with the <tt>Release</tt> method. It is not streamable. 
<li>Options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. In particular, an optimized mode
 allows you to do some local operations in union mode.
<li>In both cases, the result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometric factory. 
</ul>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#NoSimplif()"><b>NoSimplif</b></a>()
<dd>  Defines a mode such that the resulting body is not simplified.
 <dt> o 
    <a href="#SetContactFacesForUnion(CATBody*,CATLISTP(CATFace)&amp;)"><b>SetContactFacesForUnion</b></a>(CATBody*,CATLISTP(CATFace)&amp;)
<dd>  Defines an upper set of faces that are touched by the operation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="NoSimplif"></a><a name="NoSimplif()"></a> <dt> o <b>NoSimplif</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>NoSimplif</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines a mode such that the resulting body is not simplified.
</dl>
<a name="SetContactFacesForUnion"></a><a name="SetContactFacesForUnion(CATBody*,CATLISTP(CATFace)&amp;)"></a> <dt> o <b>SetContactFacesForUnion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetContactFacesForUnion</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iBody</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iContactFaces</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines an upper set of faces that are touched by the operation.
 <br> This method must be called for both input bodies. This optimizes the boolean operation,
 that only processes the faces declared here, and can be used to stick
 bodies together when then share faces. It is important to give at least all
 the faces that are in (even partial) contact or that are intersecting, otherwise
 the Boolean operator cannot return a consistent result. In other words,
 the result of boolean operation should not be changed by using this optimisation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBody</tt>
   <dd> The pointer to the body for which the faces are given.
 </dd>
    <dt><tt> iContactFaces</tt>
   <dd> The list of the pointers to the faces of <tt>iBody</tt> that are touched in the operation (at least).</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMDynBoolean.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

