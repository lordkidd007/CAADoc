<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATDynDraftAngle</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATDynDraftAngle"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATDynDraftAngle</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDynDraftAngle_35079','CATDynDraftAngle','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDynDraftAngle</b>
</p>
<p>
<b><i> Class defining an elementary draft operation.</i></b><br>

 <br>An elementary draft operation defines the angle draft associated with faces to draft.<br>
 <b>ANGLES ARE TO BE SPECIFIED IN DEGREES.</b>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATDynDraftDomain','','CATDynDraftDomain') </script>, <script type="text/javascript"> activateLinkAnchor('CATDynDraftRibbon','','CATDynDraftRibbon') </script>, <script type="text/javascript"> activateLinkAnchor('CATICGMDynDraft','','CATICGMDynDraft') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDynDraftAngle(CATLISTP(CATFace)&amp;,CATAngle&amp;)"><b>CATDynDraftAngle</b></a>(CATLISTP(CATFace)&amp;,CATAngle&amp;)
<dd>  Constructs an elementary draft operation.
 <dt> o 
    <a href="#~CATDynDraftAngle()"><b>~CATDynDraftAngle</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAngle()"><b>GetAngle</b></a>()
<dd>  Returns the draft angle value.
 <dt> o 
    <a href="#GetFaces()"><b>GetFaces</b></a>()
<dd>  Returns the list of faces taken into account in <tt>this</tt> elementary draft operation.
 <dt> o 
    <a href="#SetAngle(CATAngle)"><b>SetAngle</b></a>(CATAngle)
<dd> VB7 - LiveOperators - multiRun
 
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDynDraftAngle"></a><a name="CATDynDraftAngle(CATLISTP(CATFace)&amp;,CATAngle&amp;)"></a> <dt> o <b>CATDynDraftAngle</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynDraftAngle</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iFacesToDraft</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAngle','CATAngle&amp;')</script> <td><tt>iDraftAngle</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an elementary draft operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFacesToDraft</tt>
   <dd> The list of pointers to the faces to draft.
 </dd>
    <dt><tt> iDraftAngle</tt>
   <dd> The common angle value in degrees to associate with <tt>iFacesToDraft</tt>.</dd>
</dl>
</dl>
</dl>
<a name="~CATDynDraftAngle"></a><a name="~CATDynDraftAngle()"></a> <dt> o <b>~CATDynDraftAngle</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATDynDraftAngle</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAngle"></a><a name="GetAngle()"></a> <dt> o <b>GetAngle</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAngle','CATAngle')</script>  <b>GetAngle</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the draft angle value.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The draft angle value in degrees.
</dl>
</dl>
<a name="GetFaces"></a><a name="GetFaces()"></a> <dt> o <b>GetFaces</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLISTP(CATFace)','const CATLISTP(CATFace) &')</script>  <b>GetFaces</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of faces taken into account in <tt>this</tt> elementary draft operation.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The list of pointers to the faces of <tt>this</tt>.
</dl>
</dl>
<a name="SetAngle"></a><a name="SetAngle(CATAngle)"></a> <dt> o <b>SetAngle</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAngle</b>(<td> const <script type="text/javascript"> activateLink('CATAngle','CATAngle')</script> <td><tt>iAngle</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
VB7 - LiveOperators - multiRun
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The draft angle value in degrees.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDynDraftAngle.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

