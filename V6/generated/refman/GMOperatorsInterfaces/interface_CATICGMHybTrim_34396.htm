<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Interface CATICGMHybTrim</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMHybTrim"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces Interface CATICGMHybTrim</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMHybTrim_34396','CATICGMHybTrim','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMHybTrim</b>
</p>
<p>
<b><i> Class defining the operator that trims two bodies.</i></b><br>

 The input bodies must intersect.
 The two bodies must have the same dimensionality and be wires or shells.
 Each body is split by the other one. The Trim operation cannot complete if the bodies do not intersect.
 It follows the general frame of all operators and satisfies to the smart mechanism: the
 input bodies are not modified. A new resulting body is created, 
 possibly sharing data with the input bodies.
 <ul>
 <li><tt>CATICGMHybTrim</tt> can be created by different global functions:
   <ul>
     <li><tt>CATCGMCreateTopTrim</tt></li>
     <li><tt>CATCGMCreateTopTrimOnSupport</tt> </li>
     <li><tt>CATCGMCreateTopTrimShell</tt> </li>
     <li><tt>CATCGMCreateTopTrimShellWithKeepRemove</tt></li>
     <li><tt>CATCGMCreateTopTrimWire</tt></li>
     <li><tt>CATCGMCreateTopTrimWireWithKeepRemove</tt></li>
   </ul>
 <li>It must be
 directly released with the <tt>Release</tt> method after use.
 It is not streamable. 
 <li>The result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometric factory.
</ul>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopTrim','','CATCGMCreateTopTrim') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopTrimOnSupport','','CATCGMCreateTopTrimOnSupport') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopTrimShell','','CATCGMCreateTopTrimShell') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopTrimShellWithKeepRemove','','CATCGMCreateTopTrimShellWithKeepRemove') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopTrimWire','','CATCGMCreateTopTrimWire') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopTrimWireWithKeepRemove','','CATCGMCreateTopTrimWireWithKeepRemove') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetSimplifyMode()"><b>GetSimplifyMode</b></a>()
<dd>  Retrieves the simplify mode.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  <dt> o 
    <a href="#SetSimplifyMode(int)"><b>SetSimplifyMode</b></a>(int)
<dd>  Activates or deactivates simplification of the result.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetSimplifyMode"></a><a name="GetSimplifyMode()"></a> <dt> o <b>GetSimplifyMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSimplifyMode</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the simplify mode.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
 <li>0: the "simplify" mode is not activated
 <li>1: the "simplify" mode is activated.
 </ul>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="SetSimplifyMode"></a><a name="SetSimplifyMode(int)"></a> <dt> o <b>SetSimplifyMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSimplifyMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>yes_or_no</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Activates or deactivates simplification of the result.
 Set the simplify mode before running the operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> yes_or_no</tt>
   <dd> <ul>
 <li>0: deactivates the "simplify" mode
 <li>1: activates the "simplify" mode.
 </ul></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMHybTrim.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

