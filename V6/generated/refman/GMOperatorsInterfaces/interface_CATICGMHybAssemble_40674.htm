<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Interface CATICGMHybAssemble</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMHybAssemble"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces Interface CATICGMHybAssemble</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMHybAssemble_40674','CATICGMHybAssemble','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMHybAssemble</b>
</p>
<p>
<b><i> Class defining the operator that assembles two bodies.</i></b><br>

<br>
 This operator operates on the 2D (CATShell), 1D (CATWire) and 0D (CATVertexInVolume)
 domains of a CATBody.
 It follows the general frame of all operator and satisfies to the smart mechanism: the
 input bodies are not modified. A new resulting body is created, 
 possibly sharing data with the input bodies.
<ul>
 <li>CATICGMHybAssemble is created with the CATCGMCreateTopAssemble global function. 
 It must be released with the <tt>Release</tt> method after use.
 It is not streamable. 
<li>The result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometric factory.
</ul>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopAssemble','','CATCGMCreateTopAssemble') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAllMergedEdges()"><b>GetAllMergedEdges</b></a>()
<dd>   Retrieves merged cells in a body (to use after run).
 <dt> o 
    <a href="#GetSimplifyMode()"><b>GetSimplifyMode</b></a>()
<dd>  Returns simplify mode.
 <dt> o 
    <a href="#GetSuppressBody()"><b>GetSuppressBody</b></a>()
<dd>  Retrieves the suppressed cells in a body.
 <dt> o 
    <a href="#GetSuppressMode()"><b>GetSuppressMode</b></a>()
<dd>  Returns the suppress mode.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  <dt> o 
    <a href="#SetCellsToMerge(CATLISTP(CATCell)&amp;)"><b>SetCellsToMerge</b></a>(CATLISTP(CATCell)&amp;)
<dd>  Specifies a list of cells to be merged in a local join.
 <dt> o 
    <a href="#SetMatchingCells(CATLISTP(CATCell)&amp;)"><b>SetMatchingCells</b></a>(CATLISTP(CATCell)&amp;)
<dd>  Specifies border cells of different skins to assemble to match up,
 in order to avoid unnecessary calculations.
 <dt> o 
    <a href="#SetReturnSeparateBodies(CATBoolean)"><b>SetReturnSeparateBodies</b></a>(CATBoolean)
<dd>  Activates SeparateBodies mode : in the case of more than one resulting domain,
 each domain is returned in a different body.
 <dt> o 
    <a href="#SetSimplifyMode(int)"><b>SetSimplifyMode</b></a>(int)
<dd>   Activates simplify mode: operator tries to simplify result.
 <dt> o 
    <a href="#SetSuppressMode(int)"><b>SetSuppressMode</b></a>(int)
<dd>  Activates suppress mode : in the case of invalid cells, 
 operator does a second pass after having removed them.
 <dt> o 
    <a href="#SetVolumeCreationMode(CATBoolean)"><b>SetVolumeCreationMode</b></a>(CATBoolean)
<dd>  Activates Volume creation mode: if the resulting skin is closed,
 operator creates and returns the volume bounded by this skin.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAllMergedEdges"></a><a name="GetAllMergedEdges()"></a> <dt> o <b>GetAllMergedEdges</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetAllMergedEdges</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves merged cells in a body (to use after run).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The body containing all merged edges.
</dl>
</dl>
<a name="GetSimplifyMode"></a><a name="GetSimplifyMode()"></a> <dt> o <b>GetSimplifyMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSimplifyMode</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns simplify mode.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
 <dl><dt><tt>0</tt><dd> No simplification of result.
     <dt><tt>1</tt><dd> Simplification of result.</dl>
</dl>
</dl>
<a name="GetSuppressBody"></a><a name="GetSuppressBody()"></a> <dt> o <b>GetSuppressBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetSuppressBody</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the suppressed cells in a body.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The suppressed body: the body contains all suppressed cells.
</dl>
</dl>
<a name="GetSuppressMode"></a><a name="GetSuppressMode()"></a> <dt> o <b>GetSuppressMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSuppressMode</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the suppress mode.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
 <dl><dt><tt>0</tt><dd> suppress mode not active.
     <dt><tt>1</tt><dd> suppress mode is active.</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="SetCellsToMerge"></a><a name="SetCellsToMerge(CATLISTP(CATCell)&amp;)"></a> <dt> o <b>SetCellsToMerge</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCellsToMerge</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)&amp;')</script> <td><tt>iListOfCells</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies a list of cells to be merged in a local join.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCellsToMerge</tt>
   <dd> The cells to be merged.</dd>
</dl>
</dl>
</dl>
<a name="SetMatchingCells"></a><a name="SetMatchingCells(CATLISTP(CATCell)&amp;)"></a> <dt> o <b>SetMatchingCells</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMatchingCells</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)&amp;')</script> <td><tt>iMatchingCells</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies border cells of different skins to assemble to match up,
 in order to avoid unnecessary calculations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMatchingCells</tt>
   <dd> The border cells of the skins that are matching together.</dd>
</dl>
</dl>
</dl>
<a name="SetReturnSeparateBodies"></a><a name="SetReturnSeparateBodies(CATBoolean)"></a> <dt> o <b>SetReturnSeparateBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetReturnSeparateBodies</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSeparateBodiesMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Activates SeparateBodies mode : in the case of more than one resulting domain,
 each domain is returned in a different body.
 Resulting bodies may be retrieved calling <tt>NextResult</tt> before each call to GetResult.
 <br> This option is not activated by default.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSeparateBodiesMode</tt>
   <dd> <br><b>Legal values</b>:
 <dl><dt><tt>FALSE</tt><dd> All domains will be in the same body.
     <dt><tt>TRUE</tt><dd> One body for each domain.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetSimplifyMode"></a><a name="SetSimplifyMode(int)"></a> <dt> o <b>SetSimplifyMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSimplifyMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>yes_or_no</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Activates simplify mode: operator tries to simplify result.
 <br> This option is not activated by default.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> yes_or_no</tt>
   <dd> <br><b>Legal values</b>:
 <dl><dt><tt>0</tt><dd> No simplification of result.
     <dt><tt>1</tt><dd> Simplification of result.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetSuppressMode"></a><a name="SetSuppressMode(int)"></a> <dt> o <b>SetSuppressMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSuppressMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>yes_or_no</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Activates suppress mode : in the case of invalid cells, 
 operator does a second pass after having removed them.
 Invalid cells may be retrieved with method GetSupressBody.
 <br> This option is not activated by default.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> yes_or_no</tt>
   <dd> <br><b>Legal values</b>:
 <dl><dt><tt>0</tt><dd> No assemble with invalid cells.
     <dt><tt>1</tt><dd> Force assemble with invalid cells.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetVolumeCreationMode"></a><a name="SetVolumeCreationMode(CATBoolean)"></a> <dt> o <b>SetVolumeCreationMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetVolumeCreationMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iVolumeCreation</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Activates Volume creation mode: if the resulting skin is closed,
 operator creates and returns the volume bounded by this skin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVolumeCreation</tt>
   <dd> <br><b>Legal values</b>:
 <dl><dt><tt>FALSE</tt><dd> No volume creation.
     <dt><tt>TRUE</tt><dd> Volume creation if result is closed.</dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMHybAssemble.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

