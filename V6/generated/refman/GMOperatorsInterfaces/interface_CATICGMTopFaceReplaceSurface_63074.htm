<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Interface CATICGMTopFaceReplaceSurface</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMTopFaceReplaceSurface"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces Interface CATICGMTopFaceReplaceSurface</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMTopFaceReplaceSurface_63074','CATICGMTopFaceReplaceSurface','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMTopFaceReplaceSurface</b>
</p>
<p>
<b><i> Class defining the operator which replaces the surfaces of faces in a body with the given surfaces.</i></b><br>

<br>
 The <tt>CATICGMTopFaceReplaceSurface</tt> operator follows the global frame of the topological operators 
 and satisfies the smart mechanism: the input bodies are not modified. A new resulting body 
 is created, possibly sharing data with the input body.
<ul>
 <li>A <tt>CATICGMTopFaceReplaceSurface</tt> operator is created with the <tt>CATCreateFaceReplaceSurfaceOperator</tt> global function:
 It must be directly released with the <tt>Release</tt> method after use. It is not streamable. 
<li>Options can be set with the <tt>SetXxx</tt> methods, before
 calling the operator's <tt>Run</tt> method. In particular, an optimized mode
 allows you to do some local operations in union mode.
<li>In both cases, the result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometry factory. 
</ul>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ReplaceWith(CATVertex*,CATMathPoint&amp;)"><b>ReplaceWith</b></a>(CATVertex*,CATMathPoint&amp;)
<dd>  Specifies a new target point for a given vertex in the input body.
 <dt> o 
    <a href="#ReplaceWith(CATFace*,CATSurface*,CATSurLimits&amp;,CATOrientation)"><b>ReplaceWith</b></a>(CATFace*,CATSurface*,CATSurLimits&amp;,CATOrientation)
<dd>  Specifies the face in the input body whose surface should be replaced in the result body.
 <dt> o 
    <a href="#ReplaceWith(CATEdge*,CATEdgeCurve*,CATCrvLimits&amp;,CATOrientation)"><b>ReplaceWith</b></a>(CATEdge*,CATEdgeCurve*,CATCrvLimits&amp;,CATOrientation)
<dd>  Specifies the edge in the input body whose edge curve should be replaced in the result body.
 <dt> o 
    <a href="#SetLaydownEdge(CATEdge*,CATCurve*,CATCrvLimits&amp;)"><b>SetLaydownEdge</b></a>(CATEdge*,CATCurve*,CATCrvLimits&amp;)
<dd>  Specifies the edge in the input body whose edge curve should be replaced in the result body.
 <dt> o 
    <a href="#TransformWith(CATLISTP(CATFace)&amp;,CATMathTransformation&amp;)"><b>TransformWith</b></a>(CATLISTP(CATFace)&amp;,CATMathTransformation&amp;)
<dd>  Method to call in order to specify the tansformation to apply to a list of faces
 in the input body.
 <dt> o 
    <a href="#TransformWith(CATLISTP(CATEdge)&amp;,CATMathTransformation&amp;)"><b>TransformWith</b></a>(CATLISTP(CATEdge)&amp;,CATMathTransformation&amp;)
<dd>  Method to call in order to specify the tansformation to apply to a list of edges in the input body.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ReplaceWith"></a><a name="ReplaceWith(CATVertex*,CATMathPoint&amp;)"></a> <dt> o <b>ReplaceWith</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ReplaceWith</b>(<td><script type="text/javascript"> activateLink('CATVertex','CATVertex*')</script> <td><tt>iOldVertex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iTargetPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies a new target point for a given vertex in the input body.
 This method is optionnal, but is required for some special cases where all adjacent
 new EdgeCurves are tangent, and so the new point location can't be computed without
 external information.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOldVertex</tt>
   <dd> The pointer of an existing vertex in the input body.
 </dd>
    <dt><tt> iNewTargetPoint</tt>
   <dd> The location of the new vertex in the result body. This MathPoint should
 be close enough (less than Tolerance) to all replacing surfaces of the 
 faces bordering iOldVertex.</dd>
</dl>
</dl>
</dl>
<a name="ReplaceWith"></a><a name="ReplaceWith(CATFace*,CATSurface*,CATSurLimits&amp;,CATOrientation)"></a> <dt> o <b>ReplaceWith</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ReplaceWith</b>(<td><script type="text/javascript"> activateLink('CATFace','CATFace*')</script> <td><tt>iOldFace</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>iNewSurf</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSurLimits','CATSurLimits&amp;')</script> <td><tt>iWorkingDomain</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies the face in the input body whose surface should be replaced in the result body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOldFace</tt>
   <dd> The pointer of an existing face in the input body.
 </dd>
    <dt><tt> iNewSurf</tt>
   <dd> The pointer to the replacing surface for iOldFace.
 If iNewSurf is a canonical surface, it may be replaced by an equivalent
 surface (for closure management purpose).
 </dd>
    <dt><tt> iWorkingDomain</tt>
   <dd> The limits of iNewSurf that are useful for the operation
 These limits have to correctly match with its use in the result body, but
 the operator may perform an extrapolation on the surface if necessary.
 </dd>
    <dt><tt> iOrientation</tt>
   <dd> The orientation of the face in the new Body with respect to the new surface.</dd>
</dl>
</dl>
</dl>
<a name="ReplaceWith"></a><a name="ReplaceWith(CATEdge*,CATEdgeCurve*,CATCrvLimits&amp;,CATOrientation)"></a> <dt> o <b>ReplaceWith</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ReplaceWith</b>(<td><script type="text/javascript"> activateLink('CATEdge','CATEdge*')</script> <td><tt>iOldEdge</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATEdgeCurve','CATEdgeCurve*')</script> <td><tt>iNewEdgeCurve</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>iWorkingDomain</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies the edge in the input body whose edge curve should be replaced in the result body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOldEdge</tt>
   <dd> The pointer of an existing edge in the input body.
 </dd>
    <dt><tt> iNewEdgeCurve</tt>
   <dd> The pointer to the replacing <tt>CATEdgeCurve</tt> for iOldEdge. This new curve will
 include only one PCurve on surfaces associated to the faces boundary.
 iOldEdge
 </dd>
    <dt><tt> iWorkingDomain</tt>
   <dd> The limits of iNewEdgeCurve that are useful for the operation.
 These limits have to correctly match with its use in the result body, but
 the operator may perform an extrapolation on the curve if necessary
 </dd>
    <dt><tt> iOrientation</tt>
   <dd> The orientation of the edge in the new Body with respect to the new edge curve.</dd>
</dl>
</dl>
</dl>
<a name="SetLaydownEdge"></a><a name="SetLaydownEdge(CATEdge*,CATCurve*,CATCrvLimits&amp;)"></a> <dt> o <b>SetLaydownEdge</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLaydownEdge</b>(<td><script type="text/javascript"> activateLink('CATEdge','CATEdge*')</script> <td><tt>iOldEdge</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>iNewCurve</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>iWorkingDomain</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies the edge in the input body whose edge curve should be replaced in the result body.
 This method works for isotopological configurations (when there is a bijection between the cells
 of input and result body). It will have no effect otherwise.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOldEdge</tt>
   <dd> The pointer of an existing edge in the input body. This edge must border a face with a new
 surface specfied by the ReplaceWith method. An error is thrown if not.
 </dd>
    <dt><tt> iCurve</tt>
   <dd> The pointer to the <tt>CATCurve</tt> to laydown in order to compute the new EdgeCurve
 for iOldEdge. 
 </dd>
    <dt><tt> iWorkingDomain</tt>
   <dd> The limits of iCurve that are useful for the operation.
 These limits have to correctly match with its use in the result body, but
 the operator may perform an extrapolation on the curve if necessary 
 This method is not compatible with the TransformWith, SetSameSurfacesParametrization
 and ReplaceWith(iNewEdgeCurve) methods.</dd>
</dl>
</dl>
</dl>
<a name="TransformWith"></a><a name="TransformWith(CATLISTP(CATFace)&amp;,CATMathTransformation&amp;)"></a> <dt> o <b>TransformWith</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>TransformWith</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iListFaces</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>iTransfo</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to call in order to specify the tansformation to apply to a list of faces
 in the input body. 
 An error is thrown if the same <tt>CATFace</tt> is given with several Transformations.
 An error is thrown if the following other methods are called with this one :
  - All ReplaceWith methods 
  - SetCanonicalTangentEdge
  - SetSameSurfacesParametrization
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListFaces</tt>
   <dd> The list of faces to be tranformed.
 </dd>
    <dt><tt> iTransfo</tt>
   <dd> The 3D trandformation to apply to theses faces.</dd>
</dl>
</dl>
</dl>
<a name="TransformWith"></a><a name="TransformWith(CATLISTP(CATEdge)&amp;,CATMathTransformation&amp;)"></a> <dt> o <b>TransformWith</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>TransformWith</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATEdge)','CATLISTP(CATEdge)&amp;')</script> <td><tt>iListEdges</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>iTransfo</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to call in order to specify the tansformation to apply to a list of edges in the input body.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListEdges</tt>
   <dd> The list of edges to be tranformed.
 </dd>
    <dt><tt> iTransfo</tt>
   <dd> The 3D trandformation to apply to theses edges.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMTopFaceReplaceSurface.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

