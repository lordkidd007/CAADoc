<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Interface CATICGMSurFittingToNurbsSur</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMSurFittingToNurbsSur"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces Interface CATICGMSurFittingToNurbsSur</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMSurFittingToNurbsSur_61661','CATICGMSurFittingToNurbsSur','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMSurFittingToNurbsSur</b>
</p>
<p>
<b><i> Class defining a geometric operator that computes a (possibly approximated) NURBS representation of a CATSurface.</i></b><br>

 <br>If a surface has no corresponding NURBS representation, the operator uses a fitting operation to
 compute the best approximating NURBS representation. Hence, a maximum deviation must be given as input of 
 the operator. 
 <ul>
 <li>An input CATNurbsSurface is directly output: 
 the <tt>GetResult</tt> method outputs the same pointer.
 <li>Some canonic surfaces will be transformed into rational 
 CATNurbsSurface. However, setting <tt>iRationalAllowed = 0</tt> at the operator creation 
 or using the <script type="text/javascript"> activateLinkAnchor('CATICGMCrvFittingToNurbsCrv','SetRationalAllowed','CATICGMCrvFittingToNurbsCrv.SetRationalAllowed') </script> method,  will force the fitting into a non rational surface (default is <tt>iRationalAllowed = 1</tt>).
 </ul>
 The CATICGMSurFittingToNurbsSur operator follows the global frame of the geometric operators: 
<ul>
 <li>A CATICGMSurFittingToNurbsSur operator is created with the <tt>CATCGMCreateSurFittingToNurbsSur</tt> global function 
 and must be directly released with the <tt>Release</tt> method after use.
 It is is not streamable. 
<li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. 
<li>In both cases, the result is accessed with the <tt>Getxxx</tt> methods. 
 If a surface does not need to be converted because it already is of the required type, the same pointer 
 is returned. In this case, using the 
<script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method on the result surface will remove the input surface, because they are the same.
</ul>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ComputeNewParameter(CATSurParam&amp;)"><b>ComputeNewParameter</b></a>(CATSurParam&amp;)
<dd>  Maps a parameter on the initial surface to the corresponding parameter on the computed NURBS representation.
 <dt> o 
    <a href="#ForbidPeriodicity()"><b>ForbidPeriodicity</b></a>()
<dd>  Declares that the result NURBS must not be periodic.
 <dt> o 
    <a href="#ForceFitting()"><b>ForceFitting</b></a>()
<dd>  Forces the computation of an approximation even if the input surface already match the fitting criteria.
 <dt> o 
    <a href="#GetDiagnosis()"><b>GetDiagnosis</b></a>()
<dd>  Returns a diagnosis about the fitting process.
 <dt> o 
    <a href="#GetMaxDeviation()"><b>GetMaxDeviation</b></a>()
<dd>  Returns the maximum deviation computed for the result surface.
 <dt> o 
    <a href="#GetNurbsSurface()"><b>GetNurbsSurface</b></a>()
<dd>  Returns the result CATNurbsSurface.
 <dt> o 
    <a href="#ImposeSameParametrization()"><b>ImposeSameParametrization</b></a>()
<dd>  Declares that the result surface must have the same parameterization than the input surface to fit.
 <dt> o 
    <a href="#IsExactTransformation()"><b>IsExactTransformation</b></a>()
<dd>  Returns whether the transformation between the input and output surfaces is exact.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>   Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetInternalMinLength(double)"><b>SetInternalMinLength</b></a>(double)
<dd>  Defines the minimal length of an internal arc of the result surface.
 <dt> o 
    <a href="#SetMaxDegreeU(CATLONG32)"><b>SetMaxDegreeU</b></a>(CATLONG32)
<dd>  Defines the maximum degree of the result NURBS representation in the first direction of the surface.
 <dt> o 
    <a href="#SetMaxDegreeV(CATLONG32)"><b>SetMaxDegreeV</b></a>(CATLONG32)
<dd>  Defines the maximum degree of the result NURBS representation in the second direction of the surface.
 <dt> o 
    <a href="#SetMaxSegmentsU(CATLONG32)"><b>SetMaxSegmentsU</b></a>(CATLONG32)
<dd>  Defines the maximum number of arcs of the result NURBS representation in the first direction of the surface.
 <dt> o 
    <a href="#SetMaxSegmentsV(CATLONG32)"><b>SetMaxSegmentsV</b></a>(CATLONG32)
<dd>  Defines the maximum number of arcs of the result NURBS representation in the second direction of the surface.
 <dt> o 
    <a href="#SetRationalAllowed(CATLONG32)"><b>SetRationalAllowed</b></a>(CATLONG32)
<dd>  Defines whether the result NURBS representation can be rational.
 <dt> o 
    <a href="#SetSideContinuity(int,int)"><b>SetSideContinuity</b></a>(int,int)
<dd>  Specifies a continuity constraint along the borders of the surface.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ComputeNewParameter"></a><a name="ComputeNewParameter(CATSurParam&amp;)"></a> <dt> o <b>ComputeNewParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATSurParam','CATSurParam')</script>  <b>ComputeNewParameter</b>(<td> const <script type="text/javascript"> activateLink('CATSurParam','CATSurParam&amp;')</script> <td><tt>iParamOnSurface</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Maps a parameter on the initial surface to the corresponding parameter on the computed NURBS representation.
 <br> To call after the operator ran.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParamOnSurface</tt>
   <dd> The parameter on the initial surface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter on the computed NURBS representation.
</dl>
</dl>
<a name="ForbidPeriodicity"></a><a name="ForbidPeriodicity()"></a> <dt> o <b>ForbidPeriodicity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ForbidPeriodicity</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Declares that the result NURBS must not be periodic.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
</dl>
<a name="ForceFitting"></a><a name="ForceFitting()"></a> <dt> o <b>ForceFitting</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ForceFitting</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Forces the computation of an approximation even if the input surface already match the fitting criteria.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
</dl>
<a name="GetDiagnosis"></a><a name="GetDiagnosis()"></a> <dt> o <b>GetDiagnosis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetDiagnosis</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a diagnosis about the fitting process.
 <br>To call after the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  1 if a correct result could not be computed because it would have produced small patches
 0 otherwise
</dl>
</dl>
<a name="GetMaxDeviation"></a><a name="GetMaxDeviation()"></a> <dt> o <b>GetMaxDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetMaxDeviation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the maximum deviation computed for the result surface.
 <br> To call after the operator ran.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The maximum deviation value.
</dl>
</dl>
<a name="GetNurbsSurface"></a><a name="GetNurbsSurface()"></a> <dt> o <b>GetNurbsSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsSurface','CATNurbsSurface *')</script>  <b>GetNurbsSurface</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the result CATNurbsSurface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created CATNurbsSurface. Use the 
<script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> if you do not want to keep it in the geometric factory.
</dl>
</dl>
<a name="ImposeSameParametrization"></a><a name="ImposeSameParametrization()"></a> <dt> o <b>ImposeSameParametrization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ImposeSameParametrization</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Declares that the result surface must have the same parameterization than the input surface to fit.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
</dl>
<a name="IsExactTransformation"></a><a name="IsExactTransformation()"></a> <dt> o <b>IsExactTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsExactTransformation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns whether the transformation between the input and output surfaces is exact.
 <br> To call after the operator ran.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>1</tt> if the transformation is exact, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Runs <tt>this</tt> operator.
 <br>To call in <tt>ADVANCED</tt> mode.
</dl>
<a name="SetInternalMinLength"></a><a name="SetInternalMinLength(double)"></a> <dt> o <b>SetInternalMinLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetInternalMinLength</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iInternalMinLength</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the minimal length of an internal arc of the result surface.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInternalMinLength</tt>
   <dd> The minimum length value.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxDegreeU"></a><a name="SetMaxDegreeU(CATLONG32)"></a> <dt> o <b>SetMaxDegreeU</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxDegreeU</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iMaxDegree</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum degree of the result NURBS representation in the first direction of the surface.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxDegree</tt>
   <dd> The degree maximum value.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxDegreeV"></a><a name="SetMaxDegreeV(CATLONG32)"></a> <dt> o <b>SetMaxDegreeV</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxDegreeV</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iMaxDegree</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum degree of the result NURBS representation in the second direction of the surface.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxDegree</tt>
   <dd> The degree maximum value.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxSegmentsU"></a><a name="SetMaxSegmentsU(CATLONG32)"></a> <dt> o <b>SetMaxSegmentsU</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxSegmentsU</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iMaxArcs</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum number of arcs of the result NURBS representation in the first direction of the surface. 
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxArcs</tt>
   <dd> The maximum number of arcs. If <tt>SetMaxDegreeU</tt> and <tt>SetMaxArcsV</tt> are both used, 
 the operator tries to get as few arcs as possible, even with a larger number of arcs with
 <tt>iMaxDegree</tt>.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxSegmentsV"></a><a name="SetMaxSegmentsV(CATLONG32)"></a> <dt> o <b>SetMaxSegmentsV</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxSegmentsV</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iMaxArcs</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum number of arcs of the result NURBS representation in the second direction of the surface. 
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxArcs</tt>
   <dd> The maximum number of arcs. If <tt>SetMaxDegreeV</tt> and <tt>SetMaxArcsV</tt> are both used, 
 the operator tries to get as few arcs as possible, even with a larger number of arcs with
 <tt>iMaxDegree</tt>.</dd>
</dl>
</dl>
</dl>
<a name="SetRationalAllowed"></a><a name="SetRationalAllowed(CATLONG32)"></a> <dt> o <b>SetRationalAllowed</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetRationalAllowed</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iAllowRational</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines whether the result NURBS representation can be rational.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAllowRational</tt>
   <dd> <tt>1</tt> if the result surface can be rational (default value when the method is not called), 
 <tt>0</tt> if the result surface must not be rational.</dd>
</dl>
</dl>
</dl>
<a name="SetSideContinuity"></a><a name="SetSideContinuity(int,int)"></a> <dt> o <b>SetSideContinuity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSideContinuity</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSideContinuityU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSideContinuityV</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies a continuity constraint along the borders of the surface.
 <ul>
 <li> 0 for C0 (default)
 <li> 1 for C1
 <li> 2 for C2
 </ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSideContinuityU</tt>
   <dd> The continuity along U. 
 </dd>
    <dt><tt> iSideContinuityV</tt>
   <dd> The continuity along V.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMSurFittingToNurbsSur.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

