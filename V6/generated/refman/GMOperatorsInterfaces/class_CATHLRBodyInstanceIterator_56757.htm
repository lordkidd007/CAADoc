<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATHLRBodyInstanceIterator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATHLRBodyInstanceIterator"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATHLRBodyInstanceIterator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATHLRBodyInstanceIterator_56757','CATHLRBodyInstanceIterator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATHLRBodyInstanceIterator</b>
</p>
<p>
<b><i> Class defining an iterator over the input body instances used by the <tt>CATICGMHLROperator</tt> operator.</i></b><br>

 This iterator can only be accessed via a <tt>CATHLRResult</tt> object.
 It provides result information for each body instance and gives access
 to the <tt>CATHLRBodySubEdgeIterator</tt> iterator.

 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICGMHLROperator','','CATICGMHLROperator') </script>, <script type="text/javascript"> activateLinkAnchor('CATHLRResult','','CATHLRResult') </script>, <script type="text/javascript"> activateLinkAnchor('CATHLRBodySubEdgeIterator','','CATHLRBodySubEdgeIterator') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Begin()"><b>Begin</b></a>()
<dd>  Sets the iterator to the beginning.
 <dt> o 
    <a href="#End()"><b>End</b></a>()
<dd>  Notifies if the iterator has reached the end.
 <dt> o 
    <a href="#GetBody()"><b>GetBody</b></a>()
<dd>  Returns the body pointer of the current body instance.
 <dt> o 
    <a href="#GetID()"><b>GetID</b></a>()
<dd>  Returns the ID of the current body instance.
 <dt> o 
    <a href="#GetSubEdgeIterator()"><b>GetSubEdgeIterator</b></a>()
<dd>  Returns the iterator to get the HLR subdivision applied on the edges of the current Body instance
 
 <dt> o 
    <a href="#GetTransformation()"><b>GetTransformation</b></a>()
<dd>  Returns the transformation associated with the current body instance.
 <dt> o 
    <a href="#HasFailed()"><b>HasFailed</b></a>()
<dd>  Notifies if the HLR calculation for the current body instance failed.
 <dt> o 
    <a href="#IsFullyOccluded(CATULONG32&amp;)"><b>IsFullyOccluded</b></a>(CATULONG32&amp;)
<dd>  Returns the full occlusion status for the current body instance.
 <dt> o 
    <a href="#operator++()"><b>operator++</b></a>()
<dd>  Increments the iterator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Begin"></a><a name="Begin()"></a> <dt> o <b>Begin</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Begin</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the iterator to the beginning.
</dl>
<a name="End"></a><a name="End()"></a> <dt> o <b>End</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>End</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Notifies if the iterator has reached the end.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>TRUE</tt> if the iterator has reached the end, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="GetBody"></a><a name="GetBody()"></a> <dt> o <b>GetBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetBody</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the body pointer of the current body instance.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A <tt>CATBody</tt> object.
</dl>
</dl>
<a name="GetID"></a><a name="GetID()"></a> <dt> o <b>GetID</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATULONG32','CATULONG32')</script>  <b>GetID</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the ID of the current body instance.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A <tt>CATULONG32</tt> integer ID.
</dl>
</dl>
<a name="GetSubEdgeIterator"></a><a name="GetSubEdgeIterator()"></a> <dt> o <b>GetSubEdgeIterator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATHLRBodySubEdgeIterator','CATHLRBodySubEdgeIterator &')</script>  <b>GetSubEdgeIterator</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the iterator to get the HLR subdivision applied on the edges of the current Body instance
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    a reference on the CATHLRBodySubEdgeIterator instance
 This iterator instance is owned by the CATHLRBodyInstanceIterator which will release it.
 This iterator can be get only once and its content depends automatically on the master CATHLRBodyInstanceIterator current status
</dl>
</dl>
<a name="GetTransformation"></a><a name="GetTransformation()"></a> <dt> o <b>GetTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation *')</script>  <b>GetTransformation</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the transformation associated with the current body instance.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A <tt>CATMathTransformation</tt> object.
</dl>
</dl>
<a name="HasFailed"></a><a name="HasFailed()"></a> <dt> o <b>HasFailed</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>HasFailed</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Notifies if the HLR calculation for the current body instance failed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>TRUE</tt> if the HLR calculation failed, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="IsFullyOccluded"></a><a name="IsFullyOccluded(CATULONG32&amp;)"></a> <dt> o <b>IsFullyOccluded</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsFullyOccluded</b>(<td><script type="text/javascript"> activateLink('CATULONG32','CATULONG32&amp;')</script> <td><tt>oOccludingInstanceID</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the full occlusion status for the current body instance.
 This situation might happen if two instances of the same body, each with a different transformation, are positioned 
 so that one is exactly placed in front of the other from the observer point of view.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>TRUE</tt> if the current body instance is fully occluded, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="operator++"></a><a name="operator++()"></a> <dt> o <b>operator++</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>operator++</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Increments the iterator.
</dl>
<hr>
 This object is included in the file: <b>CATHLRBodyInstanceIterator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

