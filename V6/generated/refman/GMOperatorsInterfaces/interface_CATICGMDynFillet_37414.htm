<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Interface CATICGMDynFillet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMDynFillet"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces Interface CATICGMDynFillet</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMDynFillet_37414','CATICGMDynFillet','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMDynFillet</b>
</p>
<p>
<b><i> Class defining the operator to fillet edges or faces of a 3D body or a skin body.</i></b><br>

 <br>Several filleting operations (called ribbons) can be defined in the same operator. A ribbon
 is either defined between two faces (<tt>CATDynFaceFaceFilletRibbon</tt>), or along an edge
 (<tt>CATDynEdgeFilletRibbon</tt>), or between three faces (<tt>CATDynRemoveFaceFilletRibbon</tt>)
 without specifying the radius (tri-tangent fillet).
 By default, a ribbon is automatically propagated by following the tangential
 continuity of its support, but this propagation can be switched off.
<br>
 A fillet is roughly generated by rolling a ball tangently to the two faces adjacent to the edge to be filleted.
 By doing this, the fillet creation is disrupted if the ball reaches the limits of the adjacent faces prior to 
 reaching the edge extremity. This happens especially when the shape around the edge to be filleted shows 
 accute angles. The fillet surface is then extrapolated in order to complete the fillet operation 
 up to the edge extremity. This extrapolation defines the maximum limits of the surface underlying the
 fillet. Updating a fillet can possibly modify these maximum limits. But undoing an operation in CATIA does not modify
 the previous computed maximum limits. 
<br>
 The <tt>CATICGMDynFillet</tt> operator follows the global frame of the topological operators and satisfies the smart mechanism: 
 the input bodies are not modified. A new resulting body is created, 
 possibly sharing data with the input bodies.
<ul>
 <li>A <tt>CATICGMDynFillet</tt> operator is created with the <tt>CATCGMCreateDynFillet</tt> global function:
 It must be directly released with the <tt>Release</tt> method after use. It is not streamable. 
<li>Options must be precised (such as the faces or edges to fillet) with the appropriate methods, before
 asking for the computation with the <tt>Run</tt> method. 
<li>In both cases, the result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometric factory.
</ul>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATDynFilletRibbon','','CATDynFilletRibbon') </script>, <script type="text/javascript"> activateLinkAnchor('CATDynFilletRadius','','CATDynFilletRadius') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddLimitingElement(CATBody*,CATDomain*,CATOrientation)"><b>AddLimitingElement</b></a>(CATBody*,CATDomain*,CATOrientation)
<dd>  Defines a face or plane to stop the fillet.
 <dt> o 
    <a href="#Append(CATDynEdgeFilletRibbon*)"><b>Append</b></a>(CATDynEdgeFilletRibbon*)
<dd>  Appends a ribbon along an edge.
 <dt> o 
    <a href="#Append(CATDynFaceFaceFilletRibbon*)"><b>Append</b></a>(CATDynFaceFaceFilletRibbon*)
<dd>  Appends a ribbon between two faces.
 <dt> o 
    <a href="#Append(CATDynRemoveFaceFilletRibbon*)"><b>Append</b></a>(CATDynRemoveFaceFilletRibbon*)
<dd>  Appends a tri-tangent ribbon.
 <dt> o 
    <a href="#SetHelpPoint(CATMathPoint&amp;)"><b>SetHelpPoint</b></a>(CATMathPoint&amp;)
<dd>  When several ribbons are possible in a FaceFace Fillet, 
 allows you to choose a help point to specify the edge where the ribbon must be computed.
 <dt> o 
    <a href="#SetPrevisualizationOnly()"><b>SetPrevisualizationOnly</b></a>()
<dd>  Asks for the computation of the construction paths of the fillet, even though the filleting operation
 cannot be completely run.
 <dt> o 
    <a href="#SetTrueMultiRibbonOnly()"><b>SetTrueMultiRibbonOnly</b></a>()
<dd>  Defines the type of computation in case of multi ribbons configurations.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddLimitingElement"></a><a name="AddLimitingElement(CATBody*,CATDomain*,CATOrientation)"></a> <dt> o <b>AddLimitingElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddLimitingElement</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iSkin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines a face or plane to stop the fillet. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBody</tt>
   <dd> The body which contains the shell used as a limiting element.
 </dd>
    <dt><tt> iSkin</tt>
   <dd> The shell to be used as a limiting element.
 </dd>
    <dt><tt> iOrientation</tt>
   <dd> The orientation of the edge with respect to the limiting element.</dd>
</dl>
</dl>
</dl>
<a name="Append"></a><a name="Append(CATDynEdgeFilletRibbon*)"></a> <dt> o <b>Append</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Append</b>(<td><script type="text/javascript"> activateLink('CATDynEdgeFilletRibbon','CATDynEdgeFilletRibbon*')</script> <td><tt>iRibbonToAppend</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Appends a ribbon along an edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRibbonToAppend</tt>
   <dd> The pointer to the ribbon to add to <tt>this</tt> operator.</dd>
</dl>
</dl>
</dl>
<a name="Append"></a><a name="Append(CATDynFaceFaceFilletRibbon*)"></a> <dt> o <b>Append</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Append</b>(<td><script type="text/javascript"> activateLink('CATDynFaceFaceFilletRibbon','CATDynFaceFaceFilletRibbon*')</script> <td><tt>iRibbonToAppend</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Appends a ribbon between two faces.
 <br>The face-face ribbon can be only used in a single ribbon filleting operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRibbonToAppend</tt>
   <dd> The pointer to the ribbon to add to <tt>this</tt> operator.</dd>
</dl>
</dl>
</dl>
<a name="Append"></a><a name="Append(CATDynRemoveFaceFilletRibbon*)"></a> <dt> o <b>Append</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Append</b>(<td><script type="text/javascript"> activateLink('CATDynRemoveFaceFilletRibbon','CATDynRemoveFaceFilletRibbon*')</script> <td><tt>iRibbonToRemove</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Appends a tri-tangent ribbon.
 <br>The tri-tangent ribbon can be only used in a single ribbon filleting operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRibbonToRemove</tt>
   <dd> The pointer to the ribbon to add to <tt>this</tt> operator.</dd>
</dl>
</dl>
</dl>
<a name="SetHelpPoint"></a><a name="SetHelpPoint(CATMathPoint&amp;)"></a> <dt> o <b>SetHelpPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetHelpPoint</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iHelpPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 When several ribbons are possible in a FaceFace Fillet, 
 allows you to choose a help point to specify the edge where the ribbon must be computed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHelpPoint</tt>
   <dd> The point to specify the edge where the ribbon must be computed.</dd>
</dl>
</dl>
</dl>
<a name="SetPrevisualizationOnly"></a><a name="SetPrevisualizationOnly()"></a> <dt> o <b>SetPrevisualizationOnly</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPrevisualizationOnly</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Asks for the computation of the construction paths of the fillet, even though the filleting operation
 cannot be completely run.
 <br>To use in debug purpose, in order to understand the configuration.
</dl>
<a name="SetTrueMultiRibbonOnly"></a><a name="SetTrueMultiRibbonOnly()"></a> <dt> o <b>SetTrueMultiRibbonOnly</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTrueMultiRibbonOnly</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the type of computation in case of multi ribbons configurations.
 By default, the <tt>Run</tt> method compute all the ribbons and then intersect them
 together. Moreover, if this computation failed, another computation is launched, taken one ribbon 
 after the other.
 If called, this method only allows the <tt>Run</tt> method to execute the first step.
</dl>
<hr>
 This object is included in the file: <b>CATICGMDynFillet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

