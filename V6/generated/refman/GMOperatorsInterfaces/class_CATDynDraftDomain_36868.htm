<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATDynDraftDomain</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMOperatorsInterfaces.htm" href="../GMOperatorsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMOperatorsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATDynDraftDomain"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMOperatorsInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATDynDraftDomain</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDynDraftDomain_36868','CATDynDraftDomain','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDynDraftDomain</b>
</p>
<p>
<b><i> Class defining a draft domain.</i></b><br>

 <br>A draft domain groups all the faces to draft with regards to the same pulling direction.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICGMDynDraft','','CATICGMDynDraft') </script>, <script type="text/javascript"> activateLinkAnchor('CATDynDraftRibbon','','CATDynDraftRibbon') </script>, <script type="text/javascript"> activateLinkAnchor('CATDynDraftAngle','','CATDynDraftAngle') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDynDraftDomain(CATMathDirection&amp;,CATDynDraftDomainType,CATFace*,CATLISTP(CATDynDraftRibbon)&amp;)"><b>CATDynDraftDomain</b></a>(CATMathDirection&amp;,CATDynDraftDomainType,CATFace*,CATLISTP(CATDynDraftRibbon)&amp;)
<dd>  Constructs a draft domain.
 <dt> o 
    <a href="#CATDynDraftDomain(CATMathDirection&amp;,CATDynDraftDomainType,CATBody*,CATLISTP(CATDynDraftRibbon)&amp;)"><b>CATDynDraftDomain</b></a>(CATMathDirection&amp;,CATDynDraftDomainType,CATBody*,CATLISTP(CATDynDraftRibbon)&amp;)
<dd>  Constructs a draft domain.
 <dt> o 
    <a href="#CATDynDraftDomain(CATMathDirection&amp;,CATLISTP(CATDynDraftRibbon)&amp;,CATDynDraftDomainType,CATGeometry*)"><b>CATDynDraftDomain</b></a>(CATMathDirection&amp;,CATLISTP(CATDynDraftRibbon)&amp;,CATDynDraftDomainType,CATGeometry*)
<dd>  
 <dt> o 
    <a href="#~CATDynDraftDomain()"><b>~CATDynDraftDomain</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDomainType()"><b>GetDomainType</b></a>()
<dd>  Returns the operation draft type.
 <dt> o 
    <a href="#GetNeutral()"><b>GetNeutral</b></a>()
<dd>  Returns the neutral element.
 <dt> o 
    <a href="#GetPullingDirection(CATMathDirection&amp;)"><b>GetPullingDirection</b></a>(CATMathDirection&amp;)
<dd>  Retrieves the pulling direction associated with <tt>this</tt> draft domain.
 <dt> o 
    <a href="#GetRibbons()"><b>GetRibbons</b></a>()
<dd>  Returns the ribbons associated with <tt>this</tt> draft domain.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDynDraftDomain"></a><a name="CATDynDraftDomain(CATMathDirection&amp;,CATDynDraftDomainType,CATFace*,CATLISTP(CATDynDraftRibbon)&amp;)"></a> <dt> o <b>CATDynDraftDomain</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynDraftDomain</b>(<td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iPullingDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATDynDraftDomainType','CATDynDraftDomainType')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFace','CATFace*')</script> <td><tt>iNeutral</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATDynDraftRibbon)','CATLISTP(CATDynDraftRibbon)&amp;')</script> <td><tt>iRibbons</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a draft domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPullingDirection</tt>
   <dd> The pulling direction.
 </dd>
    <dt><tt> iType</tt>
   <dd> The type of the draft operation.
 </dd>
    <dt><tt> iNeutral</tt>
   <dd> The pointer to the neutral face.
 To be provided when <tt>iType=CATDynDraftDomainNeutral</tt>.
 </dd>
    <dt><tt> iRibbons</tt>
   <dd> The list of pointers to the CATDynDraftRibbon objects that contain the faces to draft with <tt>iPullingDirection</tt>.</dd>
</dl>
</dl>
</dl>
<a name="CATDynDraftDomain"></a><a name="CATDynDraftDomain(CATMathDirection&amp;,CATDynDraftDomainType,CATBody*,CATLISTP(CATDynDraftRibbon)&amp;)"></a> <dt> o <b>CATDynDraftDomain</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynDraftDomain</b>(<td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iPullingDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATDynDraftDomainType','CATDynDraftDomainType')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iNeutral</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATDynDraftRibbon)','CATLISTP(CATDynDraftRibbon)&amp;')</script> <td><tt>iRibbons</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a draft domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPullingDirection</tt>
   <dd> The pulling direction.
 </dd>
    <dt><tt> iType</tt>
   <dd> The type of the draft operation.
 </dd>
    <dt><tt> iNeutral</tt>
   <dd> The pointer to the neutral body.
 To be provided when <tt>iType=CATDynDraftDomainNeutral</tt>.
 </dd>
    <dt><tt> iRibbons</tt>
   <dd> The list of pointers to the CATDynDraftRibbon objects that contain the faces to draft with <tt>iPullingDirection</tt>.</dd>
</dl>
</dl>
</dl>
<a name="CATDynDraftDomain"></a><a name="CATDynDraftDomain(CATMathDirection&amp;,CATLISTP(CATDynDraftRibbon)&amp;,CATDynDraftDomainType,CATGeometry*)"></a> <dt> o <b>CATDynDraftDomain</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynDraftDomain</b>(<td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iPullingDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATDynDraftRibbon)','CATLISTP(CATDynDraftRibbon)&amp;')</script> <td><tt>iFaces</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATDynDraftDomainType','CATDynDraftDomainType')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGeometry','CATGeometry*')</script> <td><tt>iNeutral</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15
 Use the constructor whose third argument is a neutral element of type CATFace or
 else use the constructor whose third argument is a neutral element of type CATBody.
 Constructs a draft domain.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPullingDirection</tt>
   <dd> The pulling direction.
 </dd>
    <dt><tt> iFaces</tt>
   <dd> The list of pointers to the faces to draft with <tt>iPullingDirection</tt>.
 </dd>
    <dt><tt> iType</tt>
   <dd> The type of the draft operation.
 </dd>
    <dt><tt> iNeutral</tt>
   <dd> The pointer to the neutral element. This element can be a CATSurface, a CATFace or a CATShell.
 To be provided when <tt>iType=CATDynDraftDomainNeutral</tt>.</dd>
</dl>
</dl>
</dl>
<a name="~CATDynDraftDomain"></a><a name="~CATDynDraftDomain()"></a> <dt> o <b>~CATDynDraftDomain</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATDynDraftDomain</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDomainType"></a><a name="GetDomainType()"></a> <dt> o <b>GetDomainType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDynDraftDomainType','CATDynDraftDomainType')</script>  <b>GetDomainType</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the operation draft type.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The operation draft type.
</dl>
</dl>
<a name="GetNeutral"></a><a name="GetNeutral()"></a> <dt> o <b>GetNeutral</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATGeometry','const CATGeometry *')</script>  <b>GetNeutral</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the neutral element.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the neutral element. This element can be a CATSurface, a CATFace or a CATShell.
</dl>
</dl>
<a name="GetPullingDirection"></a><a name="GetPullingDirection(CATMathDirection&amp;)"></a> <dt> o <b>GetPullingDirection</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GetPullingDirection</b>(<td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>ioPullingDirection</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the pulling direction associated with <tt>this</tt> draft domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioPullingDirection</tt>
   <dd> The pulling direction.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>TRUE</tt> if the pulling direction is defined in <tt>this</tt> CATDynDraftDomain , <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="GetRibbons"></a><a name="GetRibbons()"></a> <dt> o <b>GetRibbons</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLISTP(CATDynDraftRibbon)','const CATLISTP(CATDynDraftRibbon) &')</script>  <b>GetRibbons</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the ribbons associated with <tt>this</tt> draft domain.
 <br> A draft ribbon is a set of connected faces.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The list of pointers to draft ribbons.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDynDraftDomain.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

