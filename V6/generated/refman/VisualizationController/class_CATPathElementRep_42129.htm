<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationController Class CATPathElementRep</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationController.htm" href="../VisualizationController.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationController";	}
		function getCurrentObjectName() { 
 	return "CATPathElementRep"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationController <script type="text/javascript" > writeClassCharacteristic(); </script> CATPathElementRep</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPathElementRep_42129','CATPathElementRep','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPathElementRep</b>
</p>
<p>
<b><i> Class representing a path of 3D graphical representations associated to a path of objects.</i></b><br>

<b>Role</b>: this class is used to visualize objects that are (pre)highlighted and it is
 based on a path of 3D graphical representations ( <script type="text/javascript"> activateLinkAnchor('CATRepPath','','CATRepPath') </script> ), which is an input of the class, to draw the geometry. This class overrides attributs associated to graphical representations hold in
 the path.

</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATPathElementRep(CATPathElementRep&amp;)"><b>CATPathElementRep</b></a>(CATPathElementRep&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATPathElementRep(CATPathElement*,CATRepPath*)"><b>CATPathElementRep</b></a>(CATPathElement*,CATRepPath*)
<dd>   Constructs a rep from a path of objects and a path of graphical representations.
 <dt> o 
    <a href="#CATPathElementRep(CATPathElement&amp;,CATRepPath&amp;)"><b>CATPathElementRep</b></a>(CATPathElement&amp;,CATRepPath&amp;)
<dd>   Constructs a rep from a path of objects and a path of graphical representations.
 <dt> o 
    <a href="#~CATPathElementRep()"><b>~CATPathElementRep</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetElementPath(CATPathElement*&amp;)"><b>GetElementPath</b></a>(CATPathElement*&amp;)
<dd>  Returns a reference to the path of objects.
 <dt> o 
    <a href="#GetPathElement()"><b>GetPathElement</b></a>()
<dd>  Returns a reference to the path of objects.
 <dt> o 
    <a href="#IsCSOOperationRep(void)"><b>IsCSOOperationRep</b></a>(void)
<dd>  This function enables the user to know if the rep is set to be used in a highlight context.
 <dt> o 
    <a href="#SetCSOOperationRep(int)"><b>SetCSOOperationRep</b></a>(int)
<dd>  Enables the user to specify that the rep is used in a highlight context.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATPathElementRep"></a><a name="CATPathElementRep(CATPathElementRep&amp;)"></a> <dt> o <b>CATPathElementRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPathElementRep</b>(<td> const <script type="text/javascript"> activateLink('CATPathElementRep','CATPathElementRep&amp;')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATPathElementRep"></a><a name="CATPathElementRep(CATPathElement*,CATRepPath*)"></a> <dt> o <b>CATPathElementRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPathElementRep</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iPathOfObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRepPath','CATRepPath*')</script> <td><tt>iPathOfRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructs a rep from a path of objects and a path of graphical representations.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathOfObject</tt>
   <dd>   path of objects
</dd>
    <dt><tt> iPathOfRep</tt>
   <dd>    path of graphical representations.</dd>
</dl>
</dl>
</dl>
<a name="CATPathElementRep"></a><a name="CATPathElementRep(CATPathElement&amp;,CATRepPath&amp;)"></a> <dt> o <b>CATPathElementRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPathElementRep</b>(<td> const <script type="text/javascript"> activateLink('CATPathElement','CATPathElement&amp;')</script> <td><tt>iPathOfObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRepPath','CATRepPath&amp;')</script> <td><tt>iPathOfRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructs a rep from a path of objects and a path of graphical representations.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathOfObject</tt>
   <dd>   path of objects
</dd>
    <dt><tt> iPathOfRep</tt>
   <dd>    path of graphical representations.</dd>
</dl>
</dl>
</dl>
<a name="~CATPathElementRep"></a><a name="~CATPathElementRep()"></a> <dt> o <b>~CATPathElementRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATPathElementRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetElementPath"></a><a name="GetElementPath(CATPathElement*&amp;)"></a> <dt> o <b>GetElementPath</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetElementPath</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*&amp;')</script> <td><tt>oPath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns a reference to the path of objects.
</dl>
<a name="GetPathElement"></a><a name="GetPathElement()"></a> <dt> o <b>GetPathElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPathElement','CATPathElement &')</script>  <b>GetPathElement</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns a reference to the path of objects.
</dl>
<a name="IsCSOOperationRep"></a><a name="IsCSOOperationRep(void)"></a> <dt> o <b>IsCSOOperationRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsCSOOperationRep</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 This function enables the user to know if the rep is set to be used in a highlight context.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  An <tt>int</tt>
 <dl>
 <dt> <tt>1</tt>   <dd> The rep is set to be used in a highlight context.
 <dt> <tt>0</tt>   <dd> The rep is set to be used in a manipulation context.
 </dl>
</dl>
</dl>
<a name="SetCSOOperationRep"></a><a name="SetCSOOperationRep(int)"></a> <dt> o <b>SetCSOOperationRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCSOOperationRep</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iHighlightContext</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Enables the user to specify that the rep is used in a highlight context. The default context of the rep
 is the manipulation one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>int</tt>
   <dd> iHighlightContext = 1</tt> [in] The context: 1 means highlight context, 0 is for manipulation context.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPathElementRep.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisController</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

