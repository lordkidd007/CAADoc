<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMSRMExposedServices Class CATPLMExchangeChannelServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMSRMExposedServices.htm" href="../PLMSRMExposedServices.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMSRMExposedServices";	}
		function getCurrentObjectName() { 
 	return "CATPLMExchangeChannelServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMSRMExposedServices <script type="text/javascript" > writeClassCharacteristic(); </script> CATPLMExchangeChannelServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPLMExchangeChannelServices_64203','CATPLMExchangeChannelServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPLMExchangeChannelServices</b>
</p>
<p>
<b><i> Class representing services to manage a PLM Channel.</i></b><br>


 <br><b>Role</b>: A PLM Channel is an exchange context created between two specific
 repositories in order to allow optimized back and forth data exchange and ownership transfers.
 <p>
 Before exchanging data, the PLM Channel must be correctly initialized on both sides:
 <ol>
 <li>The distant site generates a business card with the <script type="text/javascript"> activateLinkAnchor('','GenerateBusinessCard','GenerateBusinessCard') </script> method and sends it to the local site     in order to ask it to initiate the PLM Channel.</li>
 <li>The local site initializes the PLM Channel from the received business card with the 
<script type="text/javascript"> activateLinkAnchor('','InitializeChannelCreation','InitializeChannelCreation') </script> method     and sends an exchange request file to the distant site to inform it that a PLM Channel is open and ready for use on the local site.</li>
 <li>The distant site finalizes the PLM Channel creation (by accepting or refusing it) with the 
<script type="text/javascript"> activateLinkAnchor('','FinalizeChannelCreation','FinalizeChannelCreation') </script> method      and sends a confirmation file to the local site to inform it of its decision. 
     This confirmation file contains the accept or refuse status.</li>
 <li>The local site acknowledges the confirmation file with the 
<script type="text/javascript"> activateLinkAnchor('','AcknowledgeChannelCreation','AcknowledgeChannelCreation') </script> method. If the distant site has     refused the PLM Channel creation then the local site can delete the initialized PLM Channel with the 
<script type="text/javascript"> activateLinkAnchor('','RemoveExchangeChannel','RemoveExchangeChannel') </script> method.</li> </ol>
 <p>
 Once the PLM Channel is created on both sides with an <tt>Active</tt> 
<script type="text/javascript"> activateLinkAnchor('','CATPLMChannelStatus','CATPLMChannelStatus') </script> data can be exchanged between the two sites using the 
<script type="text/javascript"> activateLinkAnchor('','PublishExchange','PublishExchange') </script> or 
<script type="text/javascript"> activateLinkAnchor('','PublishExchangeWithoutExpand','PublishExchangeWithoutExpand') </script>, 
<script type="text/javascript"> activateLinkAnchor('','SynchronizeExchange','SynchronizeExchange') </script> and 
<script type="text/javascript"> activateLinkAnchor('','AcknowledgeExchange','AcknowledgeExchange') </script> methods. <br> The status of a PLM Channel can be determined with the 
<script type="text/javascript"> activateLinkAnchor('','GetChannelStatus','GetChannelStatus') </script> method. <br> The site ownership information can be retrieved for a given list of <tt>PLM Entities</tt> with the 
<script type="text/javascript"> activateLinkAnchor('','GetSiteInformation','GetSiteInformation') </script> method.
 
<dl>
  <dt> Example: </dt>
  <dd> <pre class="code">  <pre>CATPLMExchangeChannelServices* exchangeChannelServices = new CATPLMExchangeChannelServices();
  if (exchangeChannelServices)
  {
     HRESULT Rc = exchangeChannelServices->xxx();
     .
     .
     .
     exchangeChannelServices->Release();
     exchangeChannelServices = NULL;
  }</pre>

 </pre></dd>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATPLMSiteStatus','','CATPLMSiteStatus') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATPLMExchangeChannelServices()"><b>CATPLMExchangeChannelServices</b></a>()
<dd>   Constructs an empty PLM Channel services class.
 <dt> o 
    <a href="#CATPLMExchangeChannelServices(CATPLMExchangeChannelServices&amp;)"><b>CATPLMExchangeChannelServices</b></a>(CATPLMExchangeChannelServices&amp;)
<dd>   Copy Constructor.
 <dt> o 
    <a href="#~CATPLMExchangeChannelServices()"><b>~CATPLMExchangeChannelServices</b></a>()
<dd>  Destructs a PLM Channel services class.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AcknowledgeChannelCreation(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;)"><b>AcknowledgeChannelCreation</b></a>(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;)
<dd>   Processes on local site the PLM Channel creation confirmation from distant site.
 <dt> o 
    <a href="#AcknowledgeExchange(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;)"><b>AcknowledgeExchange</b></a>(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;)
<dd>   Completes the exchange process.
 <dt> o 
    <a href="#FinalizeChannelCreation(CATUnicodeString&amp;,CATBoolean&amp;,CATUnicodeString&amp;,CATString&amp;)"><b>FinalizeChannelCreation</b></a>(CATUnicodeString&amp;,CATBoolean&amp;,CATUnicodeString&amp;,CATString&amp;)
<dd>   Creates the PLM Channel on distant site from the exchange request file generated by the local site.
 <dt> o 
    <a href="#GenerateBusinessCard(CATUnicodeString&amp;)"><b>GenerateBusinessCard</b></a>(CATUnicodeString&amp;)
<dd>   Generates a Business Card.
 <dt> o 
    <a href="#GetChannelStatus(CATString&amp;,CATPLMChannelStatus&amp;,CATPLMChannelStatus&amp;)"><b>GetChannelStatus</b></a>(CATString&amp;,CATPLMChannelStatus&amp;,CATPLMChannelStatus&amp;)
<dd>   Retrieves the current status of the PLM Channel on both sites.
 <dt> o 
    <a href="#GetSiteInformation(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATLISTP(CATPLMSiteStatus)&amp;)"><b>GetSiteInformation</b></a>(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATLISTP(CATPLMSiteStatus)&amp;)
<dd>  Retrieves the site ownership information for a given list of PLM Entities.
 <dt> o 
    <a href="#InitializeChannelCreation(CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;)"><b>InitializeChannelCreation</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;)
<dd>   Creates the PLM Channel on local site from the Business Card of the distant repository.
 <dt> o 
    <a href="#MergeAcknowledgementFile(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"><b>MergeAcknowledgementFile</b></a>(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)
<dd>   Merge acknowledgement files of a defined PLM Channel.
 <dt> o 
    <a href="#PublishExchange(CATString&amp;,CATListPtrCATIAdpPLMIdentificator&amp;,CATTime&amp;,CATBoolean&amp;,CATUnicodeString&amp;)"><b>PublishExchange</b></a>(CATString&amp;,CATListPtrCATIAdpPLMIdentificator&amp;,CATTime&amp;,CATBoolean&amp;,CATUnicodeString&amp;)
<dd>   Publishes data through a connected PLM Channel.
 <dt> o 
    <a href="#PublishExchangeWithoutExpand(CATString&amp;,CATListPtrCATIAdpPLMIdentificator&amp;,CATTime&amp;,CATBoolean&amp;,CATUnicodeString&amp;)"><b>PublishExchangeWithoutExpand</b></a>(CATString&amp;,CATListPtrCATIAdpPLMIdentificator&amp;,CATTime&amp;,CATBoolean&amp;,CATUnicodeString&amp;)
<dd>   Publishes data through a connected PLM Channel without expanding the structure.
 <dt> o 
    <a href="#RemoveExchangeChannel(CATString&amp;,CATUnicodeString&amp;)"><b>RemoveExchangeChannel</b></a>(CATString&amp;,CATUnicodeString&amp;)
<dd>   Removes the PLM Channel on a site.
 <dt> o 
    <a href="#SetAcknowledgementPathForPublishOptimization(CATUnicodeString&amp;)"><b>SetAcknowledgementPathForPublishOptimization</b></a>(CATUnicodeString&amp;)
<dd>   Set the path of an acknowledgement to be used for publish optimization.
 <dt> o 
    <a href="#SetMultipleBriefcaseDirectoryForSynchronize(CATUnicodeString&amp;)"><b>SetMultipleBriefcaseDirectoryForSynchronize</b></a>(CATUnicodeString&amp;)
<dd>  Set the directory where briefcases will be used for synchronization.
 <dt> o 
    <a href="#SetMultipleBriefcaseDirectoryForSynchronize(CATUnicodeString&amp;,CATPLMChannelMultipleBriefcaseOption)"><b>SetMultipleBriefcaseDirectoryForSynchronize</b></a>(CATUnicodeString&amp;,CATPLMChannelMultipleBriefcaseOption)
<dd>  Set the directory where briefcases will be used for synchronization.
 <dt> o 
    <a href="#SetMultipleBriefcaseParametersForPublish(int,CATUnicodeString&amp;)"><b>SetMultipleBriefcaseParametersForPublish</b></a>(int,CATUnicodeString&amp;)
<dd>   Set the parameters to enable the split of the published briefcase during publish operation.
 <dt> o 
    <a href="#SetOptionsForSynchronizeExchange(CATBoolean&amp;,CATPLMChannelOption&amp;)"><b>SetOptionsForSynchronizeExchange</b></a>(CATBoolean&amp;,CATPLMChannelOption&amp;)
<dd>  Sets the options to manage the synchronization of a PLM Channel.
 <dt> o 
    <a href="#SetReportFilePath(CATUnicodeString&amp;)"><b>SetReportFilePath</b></a>(CATUnicodeString&amp;)
<dd>   Set the file path to generate a report for publish or synchronize operation.
 <dt> o 
    <a href="#SynchronizeExchange(CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;,CATString&amp;)"><b>SynchronizeExchange</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;,CATString&amp;)
<dd>   Synchronizes data through a connected PLM Channel.
 <dt> o 
    <a href="#operator=(CATPLMExchangeChannelServices&amp;)"><b>operator=</b></a>(CATPLMExchangeChannelServices&amp;)
<dd>   Assignement operator from a CATPLMExchangeChannelServices instance.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CATPLMChannelMultipleBriefcaseOption"><b>CATPLMChannelMultipleBriefcaseOption</b></a>
<dd>   Options to manage at synchronization error in case of Multiple briefcases mode.
 <dt> o 
    <a href="#CATPLMChannelOption"><b>CATPLMChannelOption</b></a>
<dd>  Option to solve conflict during synchronization.
 <dt> o 
    <a href="#CATPLMChannelStatus"><b>CATPLMChannelStatus</b></a>
<dd>  Status of each PLM Channel site: local and distant.
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATPLMExchangeChannelServices"></a><a name="CATPLMExchangeChannelServices()"></a> <dt> o <b>CATPLMExchangeChannelServices</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPLMExchangeChannelServices</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructs an empty PLM Channel services class.
</dl>
<a name="CATPLMExchangeChannelServices"></a><a name="CATPLMExchangeChannelServices(CATPLMExchangeChannelServices&amp;)"></a> <dt> o <b>CATPLMExchangeChannelServices</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPLMExchangeChannelServices</b>(<td><script type="text/javascript"> activateLink('CATPLMExchangeChannelServices','CATPLMExchangeChannelServices&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Copy Constructor.
</dl>
<a name="~CATPLMExchangeChannelServices"></a><a name="~CATPLMExchangeChannelServices()"></a> <dt> o <b>~CATPLMExchangeChannelServices</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATPLMExchangeChannelServices</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructs a PLM Channel services class.
</dl>
 <h2>Methods</h2> <br>
<a name="AcknowledgeChannelCreation"></a><a name="AcknowledgeChannelCreation(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>AcknowledgeChannelCreation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AcknowledgeChannelCreation</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCreationConfirmFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oChannelId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oReport</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Processes on local site the PLM Channel creation confirmation from distant site.

 <br><b>Role</b>: This method processes the confirmation file sent by the distant site
 and activates or deprecates the PLM Channel accordingly. It generates a report.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCreationConfirmFilePath</tt>
   <dd> [in]   The path of the file containing the creation confirmation.
   The file must exist and have a <tt>PLMBriefcase</tt> extension.

 </dd>
    <dt><tt> oChannelId</tt>
   <dd> [out]   The PLM Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
    <dt><tt> oReport</tt>
   <dd> [out]   The report generated with the creation or refusal information from the distant site.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>
   <dd>if the creation of the PLM Channel succeeds on both sites.</dd>
   <dt>S_FALSE</dt>
   <dd>if the creation of the PLM Channel has been refused on distant site. In that case, the PLM Channel should be deleted
   on local site.</dd>
   <dt>E_INVALIDARG</dt>
   <dd>if any of the input paths is invalid.</dd>
   <dt>E_FAIL</dt>
   <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="AcknowledgeExchange"></a><a name="AcknowledgeExchange(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>AcknowledgeExchange</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AcknowledgeExchange</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAcknowledgementFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oChannelId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oReport</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Completes the exchange process.

 <br><b>Role</b>: This method completes the exchange process and returns the synchronization status from distant site.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAcknowledgementFilePath</tt>
   <dd> [in]   The path of the file containing the acknowledgement.
   The file must exist and have a <tt>PLMBriefcase</tt> extension.

 </dd>
    <dt><tt> oChannelId</tt>
   <dd> [out]   The PLM Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
    <dt><tt> oReport</tt>
   <dd> [out]   The report generated with the synchronization status from distant site.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>          <dd>if the synchronization was correctly done.</dd>
   <dt>E_INVALIDARG</dt>  <dd>if any of the input paths is invalid.</dd>
   <dt>E_FAIL</dt>        <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="FinalizeChannelCreation"></a><a name="FinalizeChannelCreation(CATUnicodeString&amp;,CATBoolean&amp;,CATUnicodeString&amp;,CATString&amp;)"></a> <dt> o <b>FinalizeChannelCreation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FinalizeChannelCreation</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iExchangeRequestFilePath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iForceRefuse</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCreationConfirmationFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oChannelId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Creates the PLM Channel on distant site from the exchange request file generated by the local site.

 <br><b>Role</b>: This method finalizes the PLM Channel creation on distant site
 and generates a confirmation file accepting or refusing the PLM Channel connexion.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExchangeRequestFilePath</tt>
   <dd> [in]   The path of the file containing the exchange request.
   The file must exist and have a <tt>PLMBriefcase</tt> extension.

 </dd>
    <dt><tt> iForceRefuse</tt>
   <dd> [in]   A parameter to refuse the creation of the PLM Channel.
   <br><b>Legal values</b>:
   <dl>
   <dt>TRUE</dt>  <dd>the PLM Channel creation is automatically refused.</dd>
   <dt>FALSE</dt> <dd>the PLM Channel creation is accepted.</dd>
   </dl>

 </dd>
    <dt><tt> iCreationConfirmationFilePath</tt>
   <dd> [in]   The path of the file where to generate the confirmation of the PLM Channel creation.
   It must correspond to an existing directory and the file must have a <tt>PLMBriefcase</tt> extension.

 </dd>
    <dt><tt> oChannelId</tt>
   <dd> [out]   The Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the creation of the PLM Channel succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the file where to write the confirmation already exists in Read Write mode.</dd>
   <dt>E_INVALIDARG</dt>    <dd>if any of the input paths is invalid.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="GenerateBusinessCard"></a><a name="GenerateBusinessCard(CATUnicodeString&amp;)"></a> <dt> o <b>GenerateBusinessCard</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GenerateBusinessCard</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBusinessCardPath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Generates a Business Card.

 <br><b>Role</b>: This method is used to generate a Business Card to share the site identification.
 It writes into the input file the site identification of the VPLM database to which the process is connected to.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBusinessCardPath</tt>
   <dd> [in]   The path of the file where to generate the Business Card.
   It must correspond to an existing directory and the file must have a <tt>xml</tt> extension.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the generation of the Business Card succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the file where to write the Business Card already exists in Read Write mode.</dd>
   <dt>E_INVALIDARG</dt>    <dd>if the file where to write the Business Card is invalid.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="GetChannelStatus"></a><a name="GetChannelStatus(CATString&amp;,CATPLMChannelStatus&amp;,CATPLMChannelStatus&amp;)"></a> <dt> o <b>GetChannelStatus</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetChannelStatus</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iChannelId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPLMChannelStatus','CATPLMChannelStatus&amp;')</script> <td><tt>oLocalSiteStatus</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPLMChannelStatus','CATPLMChannelStatus&amp;')</script> <td><tt>oDistantSiteStatus</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the current status of the PLM Channel on both sites.

 <br><b>Role</b>: For a specific PLM Channel identifier, it retrieves the status of each site.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChannelId</tt>
   <dd> [in]   The PLM Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
    <dt><tt> oLocalSiteStatus</tt>
   <dd> [out]   The status of the local site

 </dd>
    <dt><tt> oDistantSiteStatus</tt>
   <dd> [out]   The status of the distant site.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>   <dd>if the status for both sites is successfully retrieved.</dd>
   <dt>E_FAIL</dt> <dd>if there is any problem.</dd>
   </dl>
</dl>
</dl>
<a name="GetSiteInformation"></a><a name="GetSiteInformation(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATLISTP(CATPLMSiteStatus)&amp;)"></a> <dt> o <b>GetSiteInformation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSiteInformation</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATIAdpPLMIdentificator)','CATLISTP(CATIAdpPLMIdentificator)&amp;')</script> <td><tt>iPLMEntitiesIdsList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATPLMSiteStatus)','CATLISTP(CATPLMSiteStatus)&amp;')</script> <td><tt>oSiteStatusList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the site ownership information for a given list of PLM Entities.

 <br><b>Role</b>: This method returns a list of site ownership status corresponding to the input list of PLM Entities identifiers.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPLMEntitiesIdsList</tt>
   <dd> [in]     The list of identificators of the PLM Entities for which the site ownership information status is asked.

  </dd>
    <dt><tt> oSiteStatusList</tt>
   <dd> [out] 	   The list of site ownership information status corresponding to the input list.
     The output list has the same size as the input list.

  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      An HRESULT value:
     <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>          <dd>if the status are correctly retrieved.</dd>
   <dt>E_INVALIDARG</dt>  <dd>if any input arguments are invalid. In that case, the output list is null.</dd>
   <dt>E_FAIL</dt>        <dd>if information cannot be retrieved. In that case, the output list is null. A CATError is associated.</dd>
   </dl>
</dl>
</dl>
<a name="InitializeChannelCreation"></a><a name="InitializeChannelCreation(CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;)"></a> <dt> o <b>InitializeChannelCreation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InitializeChannelCreation</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBusinessCardPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iExchangeRequestFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oChannelId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Creates the PLM Channel on local site from the Business Card of the distant repository.

 <br><b>Role</b>: This method initializes the PLM Channel creation on the local site
 and generates an exchange request file to inform the distant site.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBusinessCardPath</tt>
   <dd> [in]   The path of the file containing the Business Card of the distant site.
   The file must exist and have a <tt>xml</tt> extension.

 </dd>
    <dt><tt> iExchangeRequestFilePath</tt>
   <dd> [in]   The path of the file where to generate the exchange request.
   It must correspond to an existing directory and the file must have a <tt>PLMBriefcase</tt> extension.

 </dd>
    <dt><tt> oChannelId</tt>
   <dd> [out]   The PLM Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>           <dd>if the initialization of the Channel succeeds.</dd>
   <dt>E_ACCESSDENIED</dt> <dd>if the file where to write the exchange request already exists in Read Write mode.</dd>
   <dt>E_INVALIDARG</dt>   <dd>if any of the input paths is invalid.</dd>
   <dt>E_FAIL</dt>         <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="MergeAcknowledgementFile"></a><a name="MergeAcknowledgementFile(CATUnicodeString&amp;,CATString&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>MergeAcknowledgementFile</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>MergeAcknowledgementFile</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iInputDirectoryPath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iChannelId</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAcknowledgementFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oMergedFileList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Merge acknowledgement files of a defined PLM Channel.

 <br><b>Role</b>: This method merges acknowledgement files located in one input directory and belonging to one specified PLM Channel.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInputDirectoryPath</tt>
   <dd> [in]   The path of the directory containing the acknowledgement file to be merged.

 </dd>
    <dt><tt> iChannelId</tt>
   <dd> [in]   The PLM Channel identification.

 </dd>
    <dt><tt> iAcknowledgementFilePath</tt>
   <dd> [in]   The path of the file containing the acknowledgement.
   The file must not exist and have a <tt>PLMBriefcase</tt> extension.

 </dd>
    <dt><tt> oMergedFileList</tt>
   <dd> [out]   List of acknoledgement files merged.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>          <dd>if the Acknowledgement File Merge was correctly done.</dd>
   <dt>S_FALSE</dt>       <dd>No acknowledgement file to merge found.</dd>
   <dt>E_INVALIDARG</dt>  <dd>if any of the input paths is invalid.</dd>
   <dt>E_FAIL</dt>        <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="PublishExchange"></a><a name="PublishExchange(CATString&amp;,CATListPtrCATIAdpPLMIdentificator&amp;,CATTime&amp;,CATBoolean&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>PublishExchange</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>PublishExchange</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iChannelId</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iObjectsIds</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTime','CATTime&amp;')</script> <td><tt>iDate</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iTransferOwnership</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBriefcaseFilePath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Publishes data through a connected PLM Channel.

 <br><b>Role</b>: This method generates a briefcase file containing the data to exchange with the distant site.
 It enables to transfer the ownership of the data to the distant site.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChannelId</tt>
   <dd> [in]   The PLM Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
    <dt><tt> iObjectsIds</tt>
   <dd> [in]   The optional list of PLM Components identificators to be exchanged.
   The whole structure is automatically added to the exchange scope.
   Applied materials, Design Tables and attached documents are exported along with the PLM Components of the input list.

 </dd>
    <dt><tt> iDate</tt>
   <dd> [in]   An optional parameter to filter data in order to reduce the size of the exchange.
   All <tt>Product</tt> representations with a modification date inferior to this date are excluded from the exchange file.

 </dd>
    <dt><tt> iTransferOwnership</tt>
   <dd> [in]   A parameter that allows to transfer or not the site ownership of the published data.
   If <code>TRUE</code>, the site ownership is transmitted to the distant site.

 </dd>
    <dt><tt> iBriefcaseFilePath</tt>
   <dd> [in]   The path of the file where to generate the briefcase.
   It must correspond to an existing directory and the file must have a <tt>PLMBriefcase</tt> extension.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the publication succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the file where to write the briefcase already exists in Read Write mode.</dd>
   <dt>E_INVALIDARG</dt>    <dd>if any of the input paths is invalid.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="PublishExchangeWithoutExpand"></a><a name="PublishExchangeWithoutExpand(CATString&amp;,CATListPtrCATIAdpPLMIdentificator&amp;,CATTime&amp;,CATBoolean&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>PublishExchangeWithoutExpand</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>PublishExchangeWithoutExpand</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iChannelId</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iObjectsIds</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTime','CATTime&amp;')</script> <td><tt>iDate</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iTransferOwnership</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBriefcaseFilePath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Publishes data through a connected PLM Channel without expanding the structure.

 <br><b>Role</b>: This method generates a briefcase file containing the data to exchange with the distant site.
 It enables to transfer the ownership of the data to the distant site.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChannelId</tt>
   <dd> [in]   The PLM Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
    <dt><tt> iObjectsIds</tt>
   <dd> [in]   The optional list of PLM Components identificators to be exchanged.
   No expand operation is performed on the selected Product structure.
   Applied materials, Design Tables and attached documents are exported along with the PLM Components of the input list.

 </dd>
    <dt><tt> iDate</tt>
   <dd> [in]   An optional parameter to filter data in order to reduce the size of the exchange.
   All <tt>Product</tt> representations with a modification date inferior to this date are excluded from the exchange file.

 </dd>
    <dt><tt> iTransferOwnership</tt>
   <dd> [in]   A parameter that allows to transfer or not the site ownership of the published data.
   If <code>TRUE</code>, the site ownership is transmitted to the distant site.

 </dd>
    <dt><tt> iBriefcaseFilePath</tt>
   <dd> [in]   The path of the file where to generate the briefcase.
   It must correspond to an existing directory and the file must have a <tt>PLMBriefcase</tt> extension.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the publication succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the file where to write the briefcase already exists in Read Write mode.</dd>
   <dt>E_INVALIDARG</dt>    <dd>if any of the input paths is invalid.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="RemoveExchangeChannel"></a><a name="RemoveExchangeChannel(CATString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>RemoveExchangeChannel</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveExchangeChannel</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iChannelId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iDeletionFilePath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Removes the PLM Channel on a site.

 <br><b>Role</b>: This method should be called on each site to remove the PLM Channel.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChannelId</tt>
   <dd> [in]   The PLM Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
    <dt><tt> iDeletionFilePath</tt>
   <dd> [in]   The path of the file where to generate the deletion information to be sent to distant site.
   The path must correspond to an existing directory and the file must have a <tt>PLMBriefcase</tt> extension.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the PLM Channel is correctly removed on the site with correct information in the deletion file.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the file where to write the deletion information already exists in Read Write mode.</dd>
   <dt>E_INVALIDARG</dt>    <dd>if the PLM Channel identification or the input path is invalid.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any problem.</dd>
   </dl>
</dl>
</dl>
<a name="SetAcknowledgementPathForPublishOptimization"></a><a name="SetAcknowledgementPathForPublishOptimization(CATUnicodeString&amp;)"></a> <dt> o <b>SetAcknowledgementPathForPublishOptimization</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAcknowledgementPathForPublishOptimization</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAcknowledgementFilePath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Set the path of an acknowledgement to be used for publish optimization.

 <br><b>Role</b>: This method changes the behaviour of the publish command. 
 The acknowledgement contains information regarding distant object allowing the publish method to perform optimization.
 This method should be used before publish to be effective.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilePath</tt>
   <dd> [in]  The path where the acknowledgement is located.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the operation succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the directory is not readable or is empty.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="SetMultipleBriefcaseDirectoryForSynchronize"></a><a name="SetMultipleBriefcaseDirectoryForSynchronize(CATUnicodeString&amp;)"></a> <dt> o <b>SetMultipleBriefcaseDirectoryForSynchronize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMultipleBriefcaseDirectoryForSynchronize</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iDirectory</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the directory where briefcases will be used for synchronization.

 <br><b>Role</b>: This method is used when the publication is done by calling the 
<script type="text/javascript"> activateLinkAnchor('','SetMultipleBriefcaseParametersForPublish','SetMultipleBriefcaseParametersForPublish') </script> This method should be used before synchronization to be effective.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDirectory</tt>
   <dd> [in]  The directory where briefcases to be synchronized are located.

 </dd>
    <dt><tt> iSynchronizationStrategy</tt>
   <dd> [in]  Enables to define what to do in case of error at synchronization.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the operation succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the directory is not readable or is empty.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="SetMultipleBriefcaseDirectoryForSynchronize"></a><a name="SetMultipleBriefcaseDirectoryForSynchronize(CATUnicodeString&amp;,CATPLMChannelMultipleBriefcaseOption)"></a> <dt> o <b>SetMultipleBriefcaseDirectoryForSynchronize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMultipleBriefcaseDirectoryForSynchronize</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iDirectory</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPLMChannelMultipleBriefcaseOption','CATPLMChannelMultipleBriefcaseOption')</script> <td><tt>iSynchronizationStrategy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the directory where briefcases will be used for synchronization.

 <br><b>Role</b>: This method is used when the publication is done by calling the 
<script type="text/javascript"> activateLinkAnchor('','SetMultipleBriefcaseParametersForPublish','SetMultipleBriefcaseParametersForPublish') </script> This method should be used before synchronization to be effective.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDirectory</tt>
   <dd> [in]  The directory where briefcases to be synchronized are located.

 </dd>
    <dt><tt> iSynchronizationStrategy</tt>
   <dd> [in]  Enables to define what to do in case of error at synchronization.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the operation succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the directory is not readable or is empty.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="SetMultipleBriefcaseParametersForPublish"></a><a name="SetMultipleBriefcaseParametersForPublish(int,CATUnicodeString&amp;)"></a> <dt> o <b>SetMultipleBriefcaseParametersForPublish</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMultipleBriefcaseParametersForPublish</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumberOfComponentPerBriefcase</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iDirectory</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Set the parameters to enable the split of the published briefcase during publish operation.
 
 <br><b>Role</b>: This method changes the behaviour of the publish method and generates a set of briefcase files
 instead of an unique briefcase file.
 The number of Component per briefcase is driven by an integer.
 Each briefcase has an automatically generated name.
 This method should be called before publish to be effective.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumberOfComponentPerBriefcase</tt>
   <dd> [in]   an positive integer that drives the number of PLMComponent per briefcase. 
   This is an approximative number: The number of elements per briefcase is increased for integrity purpose.
 
 </dd>
    <dt><tt> iDirectory</tt>
   <dd> [in]   The directory where briefcases will be published..
 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>the operation succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the directory where to write the briefcase already exists in Read Write mode.</dd>
   <dt>E_INVALIDARG</dt>    <dd>if iNumberOfComponentPerBriefcase is not a strictly positive integer or if the input path is not empty</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="SetOptionsForSynchronizeExchange"></a><a name="SetOptionsForSynchronizeExchange(CATBoolean&amp;,CATPLMChannelOption&amp;)"></a> <dt> o <b>SetOptionsForSynchronizeExchange</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOptionsForSynchronizeExchange</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iAllowWeakenedEntities</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPLMChannelOption','CATPLMChannelOption&amp;')</script> <td><tt>iOptionOnConflict</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the options to manage the synchronization of a PLM Channel.

 <br><b>Role</b>: This method allows the user to change the default behaviour of the 
<script type="text/javascript"> activateLinkAnchor('','SynchronizeExchange','SynchronizeExchange') </script> method. It is an optional method. 
 <p>It is useful when:
 <ul>
 <li> a PLM Channel is created between two repositories based on a different dictionary level (Multi Level Compatibility project),</li>
 <li>or when PLM entities have been repaired in one repository and their evolution is no longer compatible inside the other repository
 connected through the PLM Channel (Repair Site Ownership project).</li>
 </ul>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAllowWeakenedEntities</tt>
   <dd> [in]   The option to authorize or not the creation of weakened entities in the repository during the synchronization.
   When importing a PLM entity from a higher dictionary level, unknown attributes and unsupported extensions are ignored.
   This causes the degradation of the PLM entity which is called a weakened entity.
   By default the option is set to <code>FALSE</code>, meaning that the method fails if data degradation is
   detected during the synchronization. To force the creation of <tt>weakened</tt> entities, the option
   should be set to <code>TRUE</code>.

 </dd>
    <dt><tt> iOptionOnConflict</tt>
   <dd> [in]   The option to solve conflict when the briefcase to import contains data with a new history branch
   (due to the Repair Site Ownership tool).
   By default the option is set to </dd>
<script type="text/javascript"> activateLinkAnchor('','CATPLMChannelOption','CATPLMChannelOption') </script>  <tt>ErrorOnConflict</tt>, meaning that the   
<script type="text/javascript"> activateLinkAnchor('','SynchronizeExchange','SynchronizeExchange') </script> method fails if there is a conflict on data.   The other possible values are:
   <dl>
   <dt>KeepLocal</dt>    <dd>if the user wants to keep its local version of the data.</dd>
   <dt>TakeIncoming</dt> <dd>if the user wants to overwrite its data with the new incoming one.</dd>
   </dl>
   <br>By setting the option to <tt>KeepLocal</tt> or to <tt>TakeIncoming</tt>, the user ensures that
   the SynchronizeExchange method does not fail because of a conflict problem.

 
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>          <dd>if the method succeeds.</dd>
   <dt>E_INVALIDARG</dt>  <dd>if any of the input arguments is invalid.</dd>
   <dt>E_FAIL</dt>        <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
</dl>
<a name="SetReportFilePath"></a><a name="SetReportFilePath(CATUnicodeString&amp;)"></a> <dt> o <b>SetReportFilePath</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetReportFilePath</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFilePath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Set the file path to generate a report for publish or synchronize operation.

 <br><b>Role</b>: This method changes the behaviour of the publish or synchronize methods.
 It generates a report that can be read through 
<script type="text/javascript"> activateLinkAnchor('','CATIPLMChannelReportServices','CATIPLMChannelReportServices') </script> interfaces This method should be used before publish or synchronize to be effective.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilePath</tt>
   <dd> [in]  The path where the report will be generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the operation succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the directory is not readable or is empty.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="SynchronizeExchange"></a><a name="SynchronizeExchange(CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;,CATString&amp;)"></a> <dt> o <b>SynchronizeExchange</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SynchronizeExchange</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBriefcaseFilePath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAcknowledgementFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iPLMEnvironment</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oChannelId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Synchronizes data through a connected PLM Channel.

 <br><b>Role</b>: This method imports a briefcase file containing the data sent by the distant site.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBriefcaseFilePath</tt>
   <dd> [in]   The path of the file containing the briefcase to import.
   The file must exist and have a <tt>PLMBriefcase</tt> extension.

 </dd>
    <dt><tt> iAcknowledgementFilePath</tt>
   <dd> [in]   The path of the file where to generate the confirmation of synchronization.
   It must correspond to an existing directory and the file must have a <tt>PLMBriefcase</tt> extension.
   It captures operations done during the synchronization.

 </dd>
    <dt><tt> iPLMEnvironment</tt>
   <dd>   The optional PLM Environment. If not set, the current environment is taken.

 </dd>
    <dt><tt> oChannelId</tt>
   <dd> [out]   The PLM Channel identification (unique identification of the created PLM Channel between local and distant repositories).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
   <dt>S_OK</dt>            <dd>if the synchronization succeeds.</dd>
   <dt>E_ACCESSDENIED</dt>  <dd>if the file where to write the acknowledgement already exists in Read Write mode.</dd>
   <dt>E_INVALIDARG</dt>    <dd>if any of the input paths is invalid.</dd>
   <dt>E_FAIL</dt>          <dd>if there is any other problem.</dd>
   </dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATPLMExchangeChannelServices&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPLMExchangeChannelServices','CATPLMExchangeChannelServices&')</script>  <b>operator=</b>(<td><script type="text/javascript"> activateLink('CATPLMExchangeChannelServices','CATPLMExchangeChannelServices&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Assignement operator from a CATPLMExchangeChannelServices instance.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   An instance of a PLM Channel services class.
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CATPLMChannelMultipleBriefcaseOption"> <dt> o <b>CATPLMChannelMultipleBriefcaseOption</b>
<dl>
  <dd>
<pre>
enum <b>CATPLMChannelMultipleBriefcaseOption</b> {
  ExecuteAll,
  StopAtFirstError,
  SkipFirstError
}
</pre>
  Options to manage at synchronization error in case of Multiple briefcases mode.
 <b>NB:</b> Briefcases are executed in order and when briefcase at position <i>n+1</i> is synchronized, briefcase at position <i>n</i> will be skipped at next synchronization.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ExecuteAll</tt>
   <dd>     This is the default mode for </dd>
<script type="text/javascript"> activateLinkAnchor('','SynchronizeExchange','SynchronizeExchange') </script> method and we will try to synchronize all briefcases whatever the fact some briefcases could fail      in error.
 
    <dt><tt> StopAtFirstError</tt>
   <dd>     The </dd>
<script type="text/javascript"> activateLinkAnchor('','SynchronizeExchange','SynchronizeExchange') </script> method will stop briefcases synchronization when encounters the first briecase in error.     This mode enables to restart synchronization in case of environment issue such as disk full, server stop and administrator could iterate
     Synchronization till he solves all environment issues.
 
    <dt><tt> SkipFirstError</tt>
   <dd>     The </dd>
<script type="text/javascript"> activateLinkAnchor('','SynchronizeExchange','SynchronizeExchange') </script> method will by-pass first briefcase in error at synchronization and will continue synchronization of      other briefcases till we encounter another error.
     This mode enables to restart synchronization in case an error could not be repaired locally and need a new publish.
</dl>
</dl>
</dl>
<a name="CATPLMChannelOption"> <dt> o <b>CATPLMChannelOption</b>
<dl>
  <dd>
<pre>
enum <b>CATPLMChannelOption</b> {
  ErrorOnConflict,
  KeepLocal,
  TakeIncoming
}
</pre>
 Option to solve conflict during synchronization.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ErrorOnConflict</tt>
   <dd>     The </dd>
<script type="text/javascript"> activateLinkAnchor('','SynchronizeExchange','SynchronizeExchange') </script> method fails if there is a conflict on data during the synchronization. 
    <dt><tt> KeepLocal</tt>
   <dd>     The local version of the imported PLM entities is kept if there is a conflict on data during the synchronization.
 </dd>
    <dt><tt> TakeIncoming</tt>
   <dd>     The local version of the PLM entities is overwritten by the imported data if there is a conflict on data during the synchronization.</dd>
</dl>
</dl>
</dl>
<a name="CATPLMChannelStatus"> <dt> o <b>CATPLMChannelStatus</b>
<dl>
  <dd>
<pre>
enum <b>CATPLMChannelStatus</b> {
  Unknown,
  Active,
  Deleted,
  Refused
}
</pre>
 Status of each PLM Channel site: local and distant.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Unknown</tt>
   <dd>     The site is unknown for the PLM Channel identifier.

 </dd>
    <dt><tt> Active</tt>
   <dd>     The site is activated for the PLM Channel identifier.

 </dd>
    <dt><tt> Deleted</tt>
   <dd>     The site does not know the PLM Channel identifier anymore.

 </dd>
    <dt><tt> Refused</tt>
   <dd>     The site has refused the PLM Channel identifier.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPLMExchangeChannelServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMChannelAPI</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

