<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMSRMExposedServices Class CATPLMDetachServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMSRMExposedServices.htm" href="../PLMSRMExposedServices.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMSRMExposedServices";	}
		function getCurrentObjectName() { 
 	return "CATPLMDetachServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMSRMExposedServices <script type="text/javascript" > writeClassCharacteristic(); </script> CATPLMDetachServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPLMDetachServices_42039','CATPLMDetachServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPLMDetachServices</b>
</p>
<p>
<b><i> Class representing services to detach data from the database.</i></b><br>


 <br><b>Role</b>: OEM & supplier exchange 3dxml with authoring or PLMBriefcase files with authoring information, 
 thanks to Export and Import functionalities.
 When data is imported “as reference” in a database, the importing site does not have ownership on 
 the imported data (unless explicitly transferred).
 CATPLMDetachServices class provides an API to enable the user to remove from the database, the data not owned by the importing site.
 The data is not deleted. It is just removed. 
 It is always possible to import the data again into the database.

 <dl>
  <dt> Example: </dt>
  <dd> <pre class="code"> <pre> CATListPtrCATIAdpPLMIdentificator listOfDataToRemove;
 listOfDataToRemove.Append();… //add the elements to remove
 .
 .
 .
 HRESULT Rc = CATPLMDetachServices::Detach(listOfDataToRemove);
 </pre></pre></dd>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Detach(CATListPtrCATIAdpPLMIdentificator&amp;)"><b>Detach</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Detach data from the Database.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Detach"></a><a name="Detach(CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>Detach</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Detach</b>(<td> const <script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iRootRefIds</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Detach data from the Database.

 <br><b>Role</b>: Removes the list of product structures, not owned by the current site, from the database.
 Following rules are observed while detaching any component:
 <ol>
 <li> Detach operation is propagated to all aggregated objects, ie.
 aggregated instances (representation and product), aggregated representations,
 connections, ports.</li>
 <li> Detach of reference (representation and product) detaches all the instances of the reference.</li>
 </ol>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootRefIds</tt>
   <dd> [in]   List of identificators of the roots of the product structures to be detached.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
 <br><b>Legal values</b>:
 <dl>
 <dt>S_OK</dt>
 <dd> Operation succeeded.</dd>

 <dt>E_FAIL</dt> 
 <dd> Operation failed. 
 This could be because of following reasons:
 <ol>
 <li> At least one of the objects being detached is owned by the local site. </li>
 <li> At least one of the objects being detached is already open for edition in the session. </li>
 <li> User does not have rights to detach object. </li>
 <li> The input list contains an aggregated representation/mandatory representation.
 <br>Note: Aggregated representations and mandatory representations are detached 
 when the product aggregating them is detached.
 Aggregated representations should not be given as input to the API.</li>
 </ol>
 Use CATGetLastError() to retrieve error message.</dd>

 <dt>E_INVALIDARG</dt>
 <dd> The input list is empty or the objects in the list are not saved in the database.</dd>
 </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPLMDetachServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMDetachAPI</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

