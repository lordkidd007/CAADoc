<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Class CAT3DEdgeGP</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CAT3DEdgeGP"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CAT3DEdgeGP</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT3DEdgeGP_32667','CAT3DEdgeGP','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT3DEdgeGP</b>
</p>
<p>
<b><i> Class to create the graphic primitive of a 3D edge.</i></b><br>

 <b>Role</b>:
    Representation of an edge on an element, generally an exact solid.
    The edge shares the data of the two faces it belongs to (in fact, only
    the vertices of the first face are being used).
    The adresses of the faces are stored to complete the topological informa-
    tion on the element.
    It is designed to be used by the CATSurfacicRep.
    The edge is a 3d polyline, with chained vertices references.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT3DEdgeGP(void)"><b>CAT3DEdgeGP</b></a>(void)
<dd>  Default constructor.
 <dt> o 
    <a href="#CAT3DEdgeGP(CAT3DBoundingGP*,CAT3DBoundingGP*,int const*,int)"><b>CAT3DEdgeGP</b></a>(CAT3DBoundingGP*,CAT3DBoundingGP*,int const*,int)
<dd>  Constructs a 3D edge graphic primitive from the two faces it belongs to,
 its vertices indices and their number.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Draw(CATRender&amp;)"><b>Draw</b></a>(CATRender&amp;)
<dd>  Draws the 3D edge.
 <dt> o 
    <a href="#Get(CAT3DBoundingGP**,CAT3DBoundingGP**,float**,int**,int*)"><b>Get</b></a>(CAT3DBoundingGP**,CAT3DBoundingGP**,float**,int**,int*)
<dd>  
 <dt> o 
    <a href="#GetReadOnly(CAT3DBoundingGP**,CAT3DBoundingGP**,float const**,int const**,int*)"><b>GetReadOnly</b></a>(CAT3DBoundingGP**,CAT3DBoundingGP**,float const**,int const**,int*)
<dd>  Retrieves edge's vertices and faces informations.
 <dt> o 
    <a href="#GetSize(void)"><b>GetSize</b></a>(void)
<dd>  Gets the edge vertices number.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT3DEdgeGP"></a><a name="CAT3DEdgeGP(void)"></a> <dt> o <b>CAT3DEdgeGP</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT3DEdgeGP</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CAT3DEdgeGP"></a><a name="CAT3DEdgeGP(CAT3DBoundingGP*,CAT3DBoundingGP*,int const*,int)"></a> <dt> o <b>CAT3DEdgeGP</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT3DEdgeGP</b>(<td><script type="text/javascript"> activateLink('CAT3DBoundingGP','CAT3DBoundingGP*')</script> <td><tt>iFace1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CAT3DBoundingGP','CAT3DBoundingGP*')</script> <td><tt>iFace2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int const','int const*')</script> <td><tt>iVerticesIndices</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbVertices</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a 3D edge graphic primitive from the two faces it belongs to,
 its vertices indices and their number.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFace1</tt>
   <dd>    The first face the edge belongs to. This face shares vertices
    informations with the edge.
 </dd>
    <dt><tt> iFace2</tt>
   <dd>    The second face the edge belongs to. This face can be set to NULL if
    doesn't exist.
 </dd>
    <dt><tt> iVerticesIndices</tt>
   <dd>    Edge vertices indices array, taken from the first face. This means that these
    indices allow to access vertices coordinates only through first face data.
 </dd>
    <dt><tt> iNbVertices</tt>
   <dd>    The number of vertices in the edge.</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Draw"></a><a name="Draw(CATRender&amp;)"></a> <dt> o <b>Draw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Draw</b>(<td><script type="text/javascript"> activateLink('CATRender','CATRender&amp;')</script> <td><tt>iRender</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Draws the 3D edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRender</tt>
   <dd>   The render through which the edge is drawn.</dd>
</dl>
</dl>
</dl>
<a name="Get"></a><a name="Get(CAT3DBoundingGP**,CAT3DBoundingGP**,float**,int**,int*)"></a> <dt> o <b>Get</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Get</b>(<td><script type="text/javascript"> activateLink('CAT3DBoundingGP','CAT3DBoundingGP**')</script> <td><tt>oFref1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CAT3DBoundingGP','CAT3DBoundingGP**')</script> <td><tt>oFref2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oVerticesFref1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int**')</script> <td><tt>oIndices</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oIndicesSize</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R216
 see GetReadOnly for read access and CAT3DEdgeGPEditHelper for write access
</dl>
</dl>
<a name="GetReadOnly"></a><a name="GetReadOnly(CAT3DBoundingGP**,CAT3DBoundingGP**,float const**,int const**,int*)"></a> <dt> o <b>GetReadOnly</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetReadOnly</b>(<td><script type="text/javascript"> activateLink('CAT3DBoundingGP','CAT3DBoundingGP**')</script> <td><tt>oFref1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CAT3DBoundingGP','CAT3DBoundingGP**')</script> <td><tt>oFref2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float const','float const**')</script> <td><tt>oVerticesFref1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int const','int const**')</script> <td><tt>oIndices</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oIndicesSize</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves edge's vertices and faces informations.<br>
 <b>Role</b>: As this method is designed to return values on its
 parameters, it has to be called like this :<br>
 <tt><pre>
 CAT3DBoundingGP * fref1, *fref2;
 float const* verticesFref1;
 ...
 GetReadonly(&fref1, &fref2, &verticesFref1, ...);
 </pre></tt><br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFref1</tt>
   <dd>    Retrieves a pointer to the edge first face.
 </dd>
    <dt><tt> oFref2</tt>
   <dd>    Retrieves a pointer to the edge second face.
 </dd>
    <dt><tt> oVerticesFref1</tt>
   <dd>    Retrieves the first face vertices coordinates array: XYZXYZXYZ...
    The edge vertices can be retrieved from this array thanks to their
    indices stored in *oIndices.
 </dd>
    <dt><tt> oIndices</tt>
   <dd>    Retrieves the array of edge vertices indices. These indices allow the
    the access to vertices coordinates thanks to the *oVerticesFref1 array.
    For example, to get the edge first vertex coordinates, one must use
    the *oVerticesFref1 array combined with the *oIndices array, like this :
    v0.x = (*oVerticesFref1)[(*oIndices)[0]], v0.y = (*oVerticesFref1)[(*oIndices)[0]+1], v0.z = (*oVerticesFref1)[(*oIndices)[0]+2].
 </dd>
    <dt><tt> oIndicesSize</tt>
   <dd>    Retrieves the oIndices array size.</dd>
</dl>
</dl>
</dl>
<a name="GetSize"></a><a name="GetSize(void)"></a> <dt> o <b>GetSize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSize</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets the edge vertices number.
</dl>
<hr>
 This object is included in the file: <b>CAT3DEdgeGP.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

