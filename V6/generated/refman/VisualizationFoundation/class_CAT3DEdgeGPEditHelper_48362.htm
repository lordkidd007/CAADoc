<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Class CAT3DEdgeGPEditHelper</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CAT3DEdgeGPEditHelper"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CAT3DEdgeGPEditHelper</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT3DEdgeGPEditHelper_48362','CAT3DEdgeGPEditHelper','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT3DEdgeGPEditHelper</b>
</p>
<p>
<b><i> Class to edit CAT3DEdgeGP graphic primitive
 CATGraphicPrimitive must be edited in context, this class handles edition authorization.</i></b><br>

 NB : Do not keep EditHelper alive wore than necessary. Edition context notifcation is done on destruction. 
 That's why heap allocation is forbidden.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT3DEdgeGPEditHelper()"><b>CAT3DEdgeGPEditHelper</b></a>()
<dd>  Constructor.
 <dt> o 
    <a href="#~CAT3DEdgeGPEditHelper()"><b>~CAT3DEdgeGPEditHelper</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Get(CAT3DBoundingGP**,CAT3DBoundingGP**,float const**,int**,int*)"><b>Get</b></a>(CAT3DBoundingGP**,CAT3DBoundingGP**,float const**,int**,int*)
<dd>  Retrieves edge's vertices and faces informations.
 <dt> o 
    <a href="#GetEdge()"><b>GetEdge</b></a>()
<dd>  Return the currently edited CAT3DEdgeGP
 
 <dt> o 
    <a href="#IsEditionPossible(CAT3DEdgeGP*,CATRep*)"><b>IsEditionPossible</b></a>(CAT3DEdgeGP*,CATRep*)
<dd>  Get if the edition of the given graphic primitive is possible, and if not, why.
 <dt> o 
    <a href="#Reset(CAT3DEdgeGP*,CATRep*)"><b>Reset</b></a>(CAT3DEdgeGP*,CATRep*)
<dd>  Set the currenlty edited CAT3DEdgeGP with its edition context.
 <dt> o 
    <a href="#ResetExtended(CAT3DEdgeGP*,CATRep*,unsigned int)"><b>ResetExtended</b></a>(CAT3DEdgeGP*,CATRep*,unsigned int)
<dd>  Set the currenlty edited CAT3DEdgeGP with its edition context.
</dl>
<dl>
</dl>
<dl>
 <h2>Data Member Index</h2> <br>
 <dt> o 
    <a href="#ReplaceByDuplicateIfMultiAggreg"><b>ReplaceByDuplicateIfMultiAggreg</b></a>
<dd> </dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT3DEdgeGPEditHelper"></a><a name="CAT3DEdgeGPEditHelper()"></a> <dt> o <b>CAT3DEdgeGPEditHelper</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT3DEdgeGPEditHelper</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor.
</dl>
<a name="~CAT3DEdgeGPEditHelper"></a><a name="~CAT3DEdgeGPEditHelper()"></a> <dt> o <b>~CAT3DEdgeGPEditHelper</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CAT3DEdgeGPEditHelper</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
 If the EditHelper is not empty, the edition context is notified.
</dl>
 <h2>Methods</h2> <br>
<a name="Get"></a><a name="Get(CAT3DBoundingGP**,CAT3DBoundingGP**,float const**,int**,int*)"></a> <dt> o <b>Get</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Get</b>(<td><script type="text/javascript"> activateLink('CAT3DBoundingGP','CAT3DBoundingGP**')</script> <td><tt>oFref1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CAT3DBoundingGP','CAT3DBoundingGP**')</script> <td><tt>oFref2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float const','float const**')</script> <td><tt>oVerticesFref1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int**')</script> <td><tt>oIndices</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oIndicesSize</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves edge's vertices and faces informations.<br>
 <b>Role</b>: As this method is designed to return values on its
 parameters, it has to be called like this :<br>
 <tt><pre>
 CAT3DBoundingGP * fref1, *fref2;
 float * verticesFref1;
 ...
 Get(&fref1, &fref2, &verticesFref1, ...);
 </pre></tt><br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFref1</tt>
   <dd>    Retrieves a pointer to the edge first face.
 </dd>
    <dt><tt> oFref2</tt>
   <dd>    Retrieves a pointer to the edge second face.
 </dd>
    <dt><tt> oVerticesFref1</tt>
   <dd>    Retrieves the first face vertices coordinates array: XYZXYZXYZ...
    The edge vertices can be retrieved from this array thanks to their
    indices stored in *oIndices.
 </dd>
    <dt><tt> oIndices</tt>
   <dd>    Retrieves the array of edge vertices indices. These indices allow the
    the access to vertices coordinates thanks to the *oVerticesFref1 array.
    For example, to get the edge first vertex coordinates, one must use
    the *oVerticesFref1 array combined with the *oIndices array, like this :
    v0.x = (*oVerticesFref1)[(*oIndices)[0]], v0.y = (*oVerticesFref1)[(*oIndices)[0]+1], v0.z = (*oVerticesFref1)[(*oIndices)[0]+2].
 </dd>
    <dt><tt> oIndicesSize</tt>
   <dd>    Retrieves the oIndices array size.</dd>
</dl>
</dl>
</dl>
<a name="GetEdge"></a><a name="GetEdge()"></a> <dt> o <b>GetEdge</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT3DEdgeGP','CAT3DEdgeGP*')</script>  <b>GetEdge</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Return the currently edited CAT3DEdgeGP
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The currently edited CAT3DEdgeGP.
  If the EditHelper was empty, NULL is returned.
</dl>
</dl>
<a name="IsEditionPossible"></a><a name="IsEditionPossible(CAT3DEdgeGP*,CATRep*)"></a> <dt> o <b>IsEditionPossible</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('GPEditAuthorization','GPEditAuthorization')</script>  <b>IsEditionPossible</b>(<td><script type="text/javascript"> activateLink('CAT3DEdgeGP','CAT3DEdgeGP*')</script> <td><tt>iEdge</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRep','CATRep*')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get if the edition of the given graphic primitive is possible, and if not, why.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEdge</tt>
   <dd>   The edge to be edited
 </dd>
    <dt><tt> iRep</tt>
   <dd>   The Rep which should contain the edge
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   A CATGraphicPrimitiveEditHelper::EditAuthorization value, depending of the context.
</dl>
</dl>
<a name="Reset"></a><a name="Reset(CAT3DEdgeGP*,CATRep*)"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Reset</b>(<td><script type="text/javascript"> activateLink('CAT3DEdgeGP','CAT3DEdgeGP*')</script> <td><tt>iGP</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRep','CATRep*')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the currenlty edited CAT3DEdgeGP with its edition context.
 In case of success, if the EditHelper is not empty, the old edition context is notified.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFace</tt>
   <dd>   The CAT3DEdgeGP instance which will be edited.
 </dd>
    <dt><tt> iRep</tt>
   <dd>   The Rep containing the CAT3DEdgeGP. Currently supported rep are CATSurfacicRep and CAT3DCustomRep.
   If the edge is not contained in any Rep, this parameter can be NULL
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    If the edge can be edited in the provided context, S_OK, otherwise, E_FAIL
   It should be noted that if the edge is contained in more than one Rep, it will always fail.
   If the edge is contained in a Stripped SurfacicRep, it will fail.
</dl>
</dl>
<a name="ResetExtended"></a><a name="ResetExtended(CAT3DEdgeGP*,CATRep*,unsigned int)"></a> <dt> o <b>ResetExtended</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ResetExtended</b>(<td><script type="text/javascript"> activateLink('CAT3DEdgeGP','CAT3DEdgeGP*')</script> <td><tt>iGP</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRep','CATRep*')</script> <td><tt>iRep</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iFlags</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the currenlty edited CAT3DEdgeGP with its edition context. Compared to Reset, this methods supports additional flags
 which can perform operation to ensure that some edition features will be supported.
 In case of success, if the EditHelper is not empty, the old edition context is notified.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFace</tt>
   <dd>   The CAT3DEdgeGP instance which will be edited.
 </dd>
    <dt><tt> iRep</tt>
   <dd>   The Rep containing the CAT3DEdgeGP. Currently supported rep are CATSurfacicRep and CAT3DCustomRep.
   If the edge is not contained in any Rep, this parameter can be NULL
 </dd>
    <dt><tt> iFlags</tt>
   <dd>   Additional flags which will perform operation needed to access some edition features.
     -ReplaceByDuplicateIfMultiAggreg : If the edge is aggregated in more than one Rep, this flag will make a copy of the edge and replace the 
                                        original edge in the rep.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    If the edge can be edited in the provided context, S_OK, otherwise, E_FAIL
   If the edge is contained in a Stripped SurfacicRep, it will fail.
</dl>
</dl>
 <h2>Data Members</h2> <br>
<a name="ReplaceByDuplicateIfMultiAggreg"></a> <dt> o <b>ReplaceByDuplicateIfMultiAggreg</b>
<pre>
  public static const unsigned int ReplaceByDuplicateIfMultiAggreg</dt>
</pre>
<dl>
  <dd>
</dl>
<hr>
 This object is included in the file: <b>CAT3DEdgeGPEditHelper.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

