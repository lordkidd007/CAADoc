<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Class CATPickPathList</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CATPickPathList"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CATPickPathList</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPickPathList_38761','CATPickPathList','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPickPathList</b>
</p>
<p>
<b><i> 
 Class representing a list of CATPickPath .</i></b><br>

 <b>Role</b> : 
 <br>   This list is created empty, then elements are added or removed through
 <br>   the use of operators += or -=.
 <br>   To be properly used, the list may be sorted and the result is to follow
 <br>  the following rules:
 <br><ol>
     <li>Element type order: Overlay, non Z buffer, Z buffer. </li>
     <li>Visual mode order:
          <br>- Default: Sort by deep from the eye position, then by dimension,
          <br>- Wireframe (EDGE and no MESH): Sort by dimension, then by deep.  </li>
     </ol>
  <br>  The sorting configuration is to be specified to the sort method.
 <br>
 <br><b>Lifecycle rules deviation</b>:
 <br>  PickPaths stored inside the CATPickPath list are neither copied nor des-
 <br>  troyed at the object destruction. A call to the Reset method makes the
 <br>  destruction of stored paths efficient.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATPickPathList()"><b>CATPickPathList</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#~CATPickPathList()"><b>~CATPickPathList</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetPathCount()"><b>GetPathCount</b></a>()
<dd>  Returns the size of the list.
 <dt> o 
    <a href="#GetPickPathList()"><b>GetPickPathList</b></a>()
<dd>  Returns a copy of the internal list.
 <dt> o 
    <a href="#IsContained(CATPickPath*)"><b>IsContained</b></a>(CATPickPath*)
<dd>  Checks if a pickPath is in the list.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Destroyes the list.
 <dt> o 
    <a href="#SortGraphicAttributeSet(CATPickPriority)"><b>SortGraphicAttributeSet</b></a>(CATPickPriority)
<dd>  Sorts the list.
 <dt> o 
    <a href="#operator +=(CATPickPath&amp;)"><b>operator +=</b></a>(CATPickPath&amp;)
<dd>  Operator of assignment.
 <dt> o 
    <a href="#operator -=(CATPickPath&amp;)"><b>operator -=</b></a>(CATPickPath&amp;)
<dd>  Operator of subtraction.
 <dt> o 
    <a href="#operator =(CATPickPathList&amp;)"><b>operator =</b></a>(CATPickPathList&amp;)
<dd>  Operator of assignment.
 <dt> o 
    <a href="#operator =(CATPickPathList&amp;)"><b>operator =</b></a>(CATPickPathList&amp;)
<dd>  Operator of assignment.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATPickPathList"></a><a name="CATPickPathList()"></a> <dt> o <b>CATPickPathList</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPickPathList</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
 <br>Create an empty list of pickpaths.
</dl>
<a name="~CATPickPathList"></a><a name="~CATPickPathList()"></a> <dt> o <b>~CATPickPathList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATPickPathList</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetPathCount"></a><a name="GetPathCount()"></a> <dt> o <b>GetPathCount</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetPathCount</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the size of the list.
 <br><b>Role</b> : Gives the number of
 <br>
<script type="text/javascript"> activateLinkAnchor('CATPickPath','','CATPickPath') </script> elements in the list.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>         The size.
</dl>
</dl>
<a name="GetPickPathList"></a><a name="GetPickPathList()"></a> <dt> o <b>GetPickPathList</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('<CATPickPath>','list <CATPickPath> *')</script>  <b>GetPickPathList</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns a copy of the internal list.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>         A copy of the internal list.
</dl>
</dl>
<a name="IsContained"></a><a name="IsContained(CATPickPath*)"></a> <dt> o <b>IsContained</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsContained</b>(<td><script type="text/javascript"> activateLink('CATPickPath','CATPickPath*')</script> <td><tt>iPickPath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Checks if a pickPath is in the list.
 <br><b>Role</b> : Look for the 
<script type="text/javascript"> activateLinkAnchor('CATPickPath','','CATPickPath') </script> <br>in parameter in the internal list. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPickPath</tt>
   <dd>       The pickpath to look for.
        
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        The result of the search.
       <br><b>Legal values</b>:
       <ol>
       <li>0 if the parameter is not found</li>
       <li>A positif value is the pickpath is found</li>
       <ol>
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Reset</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destroyes the list.
 <br><b>Role</b> : Deletes all pickpaths in the list
 <br>and empty the list.
 <br>
 <br><b>Lifecycle rules deviation</b>: This class doesn't
 <br>manage the lifecycle of added and removed elements in it.
 <br>This method is the single that actually deletes elements
 <br>from memory.
</dl>
<a name="SortGraphicAttributeSet"></a><a name="SortGraphicAttributeSet(CATPickPriority)"></a> <dt> o <b>SortGraphicAttributeSet</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SortGraphicAttributeSet</b>(<td><script type="text/javascript"> activateLink('CATPickPriority','CATPickPriority')</script> <td><tt>iOrder</tt><td><tt>= PICK_DEFAULT</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sorts the list.
 <br><b>Role</b> : Sorts elements in the list.
 <br>Order is generated by element type first:
 <ol>
 <li>Overlay</li>
 <li>NonZBuffer</li>
 <li>ZBuffer</li>
 </ol>
 <br>Then sort is made relying on the order given in parameter :
 <ol>
 <li>PICK_DEFAULT   : Deep is used first, then dimension. </li>
 <li>PICK_WIREFRAME : Dimension is used first, then deep. </li>
 </ol>
 <br>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrder</tt>
   <dd>        The type of order to apply.</dd>
</dl>
</dl>
</dl>
<a name="operator +="></a><a name="operator +=(CATPickPath&amp;)"></a> <dt> o <b>operator +=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>operator +=</b>(<td><script type="text/javascript"> activateLink('CATPickPath','CATPickPath&amp;')</script> <td><tt>iPickPath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Operator of assignment.
 <br><b>Role</b> : Add a new 
<script type="text/javascript"> activateLinkAnchor('CATPickPath','','CATPickPath') </script> in the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPickPath</tt>
   <dd>        The new pickpath to add.</dd>
</dl>
</dl>
</dl>
<a name="operator -="></a><a name="operator -=(CATPickPath&amp;)"></a> <dt> o <b>operator -=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>operator -=</b>(<td><script type="text/javascript"> activateLink('CATPickPath','CATPickPath&amp;')</script> <td><tt>iPickPath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Operator of subtraction.
 <br><b>Role</b> : Remove a previously added
 <br>
<script type="text/javascript"> activateLinkAnchor('CATPickPath','','CATPickPath') </script> from the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPickPath</tt>
   <dd>        The pickpath to remove.</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATPickPathList&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPickPathList','CATPickPathList&')</script>  <b>operator =</b>(<td><script type="text/javascript"> activateLink('CATPickPathList','CATPickPathList&amp;')</script> <td><tt>iPickPathList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Operator of assignment.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPickPath</tt>
   <dd>        The pickPath use to create a new one identical.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         The new pickPath created by assignment.
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATPickPathList&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPickPathList','CATPickPathList&')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATPickPathList','CATPickPathList&amp;')</script> <td><tt>iPickPathList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Operator of assignment.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPickPath</tt>
   <dd>        The pickPath use to create a new one identical.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         The new pickPath created by assignment.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPickPathList.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

