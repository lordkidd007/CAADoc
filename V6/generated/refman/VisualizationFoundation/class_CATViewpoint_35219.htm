<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Class CATViewpoint</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CATViewpoint"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CATViewpoint</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATViewpoint_35219','CATViewpoint','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATViewpoint</b>
</p>
<p>
<b><i>  A viewpoint represents the scene to be seen and the position of the 
  observer.</i></b><br>

  This scene will be displayed in a window.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATViewpoint()"><b>CATViewpoint</b></a>()
<dd>  Create a non-initialized viewpoint.
 <dt> o 
    <a href="#CATViewpoint(CATViewpoint&amp;)"><b>CATViewpoint</b></a>(CATViewpoint&amp;)
<dd>  Create a viewpoint from another one.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeginModification()"><b>BeginModification</b></a>()
<dd>  Declares the begining of the transaction.
 <dt> o 
    <a href="#CATDeclareCBEvent(VIEWPOINT_MODIFIED)"><b>CATDeclareCBEvent</b></a>(VIEWPOINT_MODIFIED)
<dd>  Event sent when the viewpoint change.
 <dt> o 
    <a href="#ComputeModelFromPixel(float,float,CATMathPoint&amp;,CATMathPoint&amp;,float,float,float,float)"><b>ComputeModelFromPixel</b></a>(float,float,CATMathPoint&amp;,CATMathPoint&amp;,float,float,float,float)
<dd>  Computes the line going from the eye to a pixel position ( for insatnce the mouse position ) in model corrdinate system.
 <dt> o 
    <a href="#ComputeModelFromPixel(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)"><b>ComputeModelFromPixel</b></a>(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)
<dd>  Computes the line going from the eye to a pixel position ( for insatnce the mouse position ) in model corrdinate system.
 <dt> o 
    <a href="#ComputePixelFromModel(CATMathPointf&amp;,CATMathPoint2Df&amp;,float,float,float,float)"><b>ComputePixelFromModel</b></a>(CATMathPointf&amp;,CATMathPoint2Df&amp;,float,float,float,float)
<dd>  Computes the pixel position at wich a given point is displayed .
 <dt> o 
    <a href="#EndModification(int)"><b>EndModification</b></a>(int)
<dd>  Declares the end of the transaction.
 <dt> o 
    <a href="#GetViewer()"><b>GetViewer</b></a>()
<dd>  Gets the CATViewer associated to the viewpoint.
 <dt> o 
    <a href="#GetZoom()"><b>GetZoom</b></a>()
<dd>  Gets the zoom value.
 <dt> o 
    <a href="#Is3D()"><b>Is3D</b></a>()
<dd>  Retrieves whether viewpoint is a three dimensional one or not.
 <dt> o 
    <a href="#IsAnimated()"><b>IsAnimated</b></a>()
<dd>  Animation query.
 <dt> o 
    <a href="#IsShowSpace()"><b>IsShowSpace</b></a>()
<dd>  Returns 1 if we display the Show Space.
 <dt> o 
    <a href="#Reframe(float,float,float,float)"><b>Reframe</b></a>(float,float,float,float)
<dd>    Changes the viewpoint configuration so that all representation are visible.
 <dt> o 
    <a href="#SetShowSpace(int)"><b>SetShowSpace</b></a>(int)
<dd>  Specifies whether we display the show space or the noshow space.
 <dt> o 
    <a href="#StartAnimation(void*)"><b>StartAnimation</b></a>(void*)
<dd>  Declares the begining of the manipulation of the viewpoint.
 <dt> o 
    <a href="#StopAnimation(void*)"><b>StopAnimation</b></a>(void*)
<dd>  Declares the end of the manipulation of the viewpoint.
 <dt> o 
    <a href="#operator =(CATViewpoint&amp;)"><b>operator =</b></a>(CATViewpoint&amp;)
<dd>  Copy of zoom only.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#VisAAMode"><b>VisAAMode</b></a>
<dd> </dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATViewpoint"></a><a name="CATViewpoint()"></a> <dt> o <b>CATViewpoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATViewpoint</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Create a non-initialized viewpoint. At the first display, a reframe will automatically  been done.
</dl>
<a name="CATViewpoint"></a><a name="CATViewpoint(CATViewpoint&amp;)"></a> <dt> o <b>CATViewpoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATViewpoint</b>(<td> const <script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint&amp;')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Create a viewpoint from another one.
</dl>
 <h2>Methods</h2> <br>
<a name="BeginModification"></a><a name="BeginModification()"></a> <dt> o <b>BeginModification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeginModification</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Declares the begining of the transaction.
 <br>
 It is necessary the enclose with Begin and End
 if the viewpoint is modified with severals methods
</dl>
<a name="CATDeclareCBEvent"></a><a name="CATDeclareCBEvent(VIEWPOINT_MODIFIED)"></a> <dt> o <b>CATDeclareCBEvent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDeclareCBEvent</b>(<td><script type="text/javascript"> activateLink('VIEWPOINT_MODIFIED','VIEWPOINT_MODIFIED')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Event sent when the viewpoint change.
</dl>
<a name="ComputeModelFromPixel"></a><a name="ComputeModelFromPixel(float,float,CATMathPoint&amp;,CATMathPoint&amp;,float,float,float,float)"></a> <dt> o <b>ComputeModelFromPixel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputeModelFromPixel</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>x</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>y</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>neard</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>fard</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>width</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>height</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>ratioWH</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes the line going from the eye to a pixel position ( for insatnce the mouse position ) in model corrdinate system.
</dl>
<a name="ComputeModelFromPixel"></a><a name="ComputeModelFromPixel(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)"></a> <dt> o <b>ComputeModelFromPixel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputeModelFromPixel</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>x</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>y</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPointf','CATMathPointf&amp;')</script> <td><tt>neard</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPointf','CATMathPointf&amp;')</script> <td><tt>fard</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>width</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>height</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>ratioWH</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Computes the line going from the eye to a pixel position ( for insatnce the mouse position ) in model corrdinate system.
</dl>
<a name="ComputePixelFromModel"></a><a name="ComputePixelFromModel(CATMathPointf&amp;,CATMathPoint2Df&amp;,float,float,float,float)"></a> <dt> o <b>ComputePixelFromModel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputePixelFromModel</b>(<td> const <script type="text/javascript"> activateLink('CATMathPointf','CATMathPointf&amp;')</script> <td><tt>pt_model</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint2Df','CATMathPoint2Df&amp;')</script> <td><tt>pt_pixel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>width</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>height</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>ratioWH</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Computes the pixel position at wich a given point is displayed .
</dl>
<a name="EndModification"></a><a name="EndModification(int)"></a> <dt> o <b>EndModification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>EndModification</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNotify</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Declares the end of the transaction.
 <br>
 After the translation, an event 
 VIEWPOINT_MODIFIED is sent (by callbacks)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotify</tt>
   <dd> The notification is sent (default) or not (when we want a reframe at the first display of the viewer.</dd>
</dl>
</dl>
</dl>
<a name="GetViewer"></a><a name="GetViewer()"></a> <dt> o <b>GetViewer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATViewer','CATViewer *')</script>  <b>GetViewer</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Gets the CATViewer associated to the viewpoint.
</dl>
<a name="GetZoom"></a><a name="GetZoom()"></a> <dt> o <b>GetZoom</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('float','float')</script>  <b>GetZoom</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets the zoom value.
 <br>
 <b>role</b>:
 This method should be used only on a CAT2DViewpoint. <br>
 In order to zoom in or out on a CAT3DViewpoint, you should use
 something like:
 <pre>
  CATMathVectorf t = 0.1 * theViewpoint.GetFocusDistance() * theViewpoint.GetSightDirection();
  CATMathPointf Target = theViewpoint.GetTarget();
  theViewpoint.SetOrigin( theViewpoint.GetOrigin() + t);
  theViewpoint.SetFocus( theViewpoint.GetOrigin().DistanceTo(Target));
 
<script type="text/javascript"> activateLinkAnchor('CAT3DViewpoint','GetTarget','CAT3DViewpoint.GetTarget') </script> 
<script type="text/javascript"> activateLinkAnchor('CAT3DViewpoint','SetTarget','CAT3DViewpoint.SetTarget') </script> 
<script type="text/javascript"> activateLinkAnchor('CAT3DViewpoint','GetOrigin','CAT3DViewpoint.GetOrigin') </script> 
<script type="text/javascript"> activateLinkAnchor('CAT3DViewpoint','SetOrigin','CAT3DViewpoint.SetOrigin') </script> 
<script type="text/javascript"> activateLinkAnchor('CAT3DViewpoint','GetFocusDistance','CAT3DViewpoint.GetFocusDistance') </script> 
<script type="text/javascript"> activateLinkAnchor('CAT3DViewpoint','GetSightDirection','CAT3DViewpoint.GetSightDirection') </script> </pre>
 This code zooms in by a small factor. In fact, it moves the Viewpoint origin
 forward, so that you are 10% closer to the model. The reference distance is the
 distance to the Target.
 <br>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CAT3DViewpoint','','CAT3DViewpoint') </script>
</dl>
</dl>
<a name="Is3D"></a><a name="Is3D()"></a> <dt> o <b>Is3D</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>Is3D</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves whether viewpoint is a three dimensional one or not. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul>
  <li><tt>TRUE</tt>: the viewpoint is a 
<script type="text/javascript"> activateLinkAnchor('CAT3DViewpoint','','CAT3DViewpoint') </script> </li>  <li><tt>FALSE</tt>: The viewpoint is not a 3D viewpoint. </li>
 </ul>
</dl>
</dl>
<a name="IsAnimated"></a><a name="IsAnimated()"></a> <dt> o <b>IsAnimated</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>IsAnimated</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Animation query.
</dl>
<a name="IsShowSpace"></a><a name="IsShowSpace()"></a> <dt> o <b>IsShowSpace</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsShowSpace</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns 1 if we display the Show Space.
</dl>
<a name="Reframe"></a><a name="Reframe(float,float,float,float)"></a> <dt> o <b>Reframe</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Reframe</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>width</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>height</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>ratioWH</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Changes the viewpoint configuration so that all representation are visible.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> width</tt>
   <dd>            width in pixel  </dd>
    <dt><tt> height</tt>
   <dd>           height in pixel  </dd>
    <dt><tt> mmInSupportUnit</tt>
   <dd>  precision on wich you display, in mm per unit  </dd>
    <dt><tt> ratioWH</tt>
   <dd>          ratio of a pixel on the display ( width/hright )</dd>
</dl>
</dl>
</dl>
<a name="SetShowSpace"></a><a name="SetShowSpace(int)"></a> <dt> o <b>SetShowSpace</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetShowSpace</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iShowState</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Specifies whether we display the show space or the noshow space.
</dl>
<a name="StartAnimation"></a><a name="StartAnimation(void*)"></a> <dt> o <b>StartAnimation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>StartAnimation</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iFrom</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Declares the begining of the manipulation of the viewpoint. 
 <br>
 It is necessary the do begin/end animation when several steps are
 displayed consecutively.
 At the start, an event VIEWPOINT_ANIMATION_STARTED is sent
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iFrom</tt>
   <dd> Not used</dd>
</dl>
</dl>
</dl>
<a name="StopAnimation"></a><a name="StopAnimation(void*)"></a> <dt> o <b>StopAnimation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>StopAnimation</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iFrom</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Declares the end of the manipulation of the viewpoint. 
 <br>
 At the stop, an event VIEWPOINT_ANIMATION_STOPED is sent.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFrom</tt>
   <dd> Not used</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATViewpoint&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint &')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy of zoom only.
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="VisAAMode"> <dt> o <b>VisAAMode</b>
<dl>
  <dd>
<pre>
enum <b>VisAAMode</b> {
  VIS_USE_SETTINGS,
  VIS_FORCE_ON,
  VIS_FORCE_OFF
}
</pre>
</dl>
<hr>
 This object is included in the file: <b>CATViewpoint.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

