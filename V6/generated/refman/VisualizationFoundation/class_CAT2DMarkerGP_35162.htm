<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Class CAT2DMarkerGP</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CAT2DMarkerGP"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CAT2DMarkerGP</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT2DMarkerGP_35162','CAT2DMarkerGP','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT2DMarkerGP</b>
</p>
<p>
<b><i> Class to create a dynamic graphic primitive of a 2D Marker.</i></b><br>

 <b>Role</b>: 
 A 2D Marker has a fixed zoom. Its size in pixel does not change.
 It can be composed of various representations of a same symbol placed in diferents positions.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT2DMarkerGP()"><b>CAT2DMarkerGP</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#CAT2DMarkerGP(float[],int,CATSymbolType)"><b>CAT2DMarkerGP</b></a>(float[],int,CATSymbolType)
<dd>  Constructs a 2D Marker Graphic primitive.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Draw(CATRender&amp;)"><b>Draw</b></a>(CATRender&amp;)
<dd>  Draws the dynamic graphic primitive with a render.
 <dt> o 
    <a href="#Get(float**,int*,CATSymbolType*)"><b>Get</b></a>(float**,int*,CATSymbolType*)
<dd>  Retrieves data about the 2D Marker.
 <dt> o 
    <a href="#GetSymbol(CATSymbolType&amp;)"><b>GetSymbol</b></a>(CATSymbolType&amp;)
<dd>  Retrieves the 2D Marker type.
 <dt> o 
    <a href="#SetSymbol(CATSymbolType)"><b>SetSymbol</b></a>(CATSymbolType)
<dd>  Defines the 2D Marker type.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT2DMarkerGP"></a><a name="CAT2DMarkerGP()"></a> <dt> o <b>CAT2DMarkerGP</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT2DMarkerGP</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CAT2DMarkerGP"></a><a name="CAT2DMarkerGP(float[],int,CATSymbolType)"></a> <dt> o <b>CAT2DMarkerGP</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT2DMarkerGP</b>(<td> const <script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>iPoints</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNb_point</tt><td><tt>= 1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSymbolType','CATSymbolType')</script> <td><tt>iSymbol</tt><td><tt>= CROSS</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a 2D Marker Graphic primitive.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd>	array which describes positions of each symbol which compose the 2D Marker (XYXYXY...).
	Its size is <tt>iNb_point</tt>*2.
 </dd>
    <dt><tt> iNb_point</tt>
   <dd>	total number of symbol to create.
	<br><b>legal values</b>:
	The default value is 1. So by default a 2D marker contains just one symbol.
 </dd>
    <dt><tt> iSymbol</tt>
   <dd>	the type of 2D Marker.
	All symbols which compose the 2D marker have the same type.
	<br><b>legal values</b>:
	<ul>
	<li> CROSS : a cross which looks like a "X".</li>
	<li> PLUS : a cross which looks like a "+"</li>
	<li> CONCENTRIC : an unfilled circle</li>
	<li> COINCIDENT : two unfilled concentric circles</li>
	<li> FULLCIRCLE : a filled circle</li>
	<li> FULLSQUARE : a filled square</li>
	<li> STAR : a star which is the union of a 2D marker CROSS ,a 2D marker PLUS and a 2D marker DOT</li>
	<li> DOT : a dot </li>
	<li> SMALLDOT : a smalldot (one pixel)</li>
	<li> MISC1 : a kind of arrow which points to the bottom-left
	<pre>
	     /
	|  /
	|/__
	</pre>
	</li>
	<li> MISC2 : a kind of arrow which points to the top-rigth
	<pre>
	    ___ 	
	      /|
	    /  |
	  /
	</pre>
	</li>
	<li> FULLCIRCLE2 : a big FULLCIRCLE</li>
	<li> FULLSQUARE2 : a big FULLSQUARE</li>
	</ul>
	<br>By default, the 2D marker represents a CROSS.</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Draw"></a><a name="Draw(CATRender&amp;)"></a> <dt> o <b>Draw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Draw</b>(<td><script type="text/javascript"> activateLink('CATRender','CATRender&amp;')</script> <td><tt>iRender</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Draws the dynamic graphic primitive with a render.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRender</tt>
   <dd>	the render used to draw the dynamic graphic primitive.</dd>
</dl>
</dl>
</dl>
<a name="Get"></a><a name="Get(float**,int*,CATSymbolType*)"></a> <dt> o <b>Get</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>Get</b>(<td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oNb_point</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSymbolType','CATSymbolType*')</script> <td><tt>oSymbol</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves data about the 2D Marker.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPoints</tt>
   <dd>	array which describes positions of each symbol which compose the 2D Marker (XYXYXY...).
	Its size is <tt>iNb_point</tt>*2.
 </dd>
    <dt><tt> oNb_point</tt>
   <dd>	total number of symbols which composed the 2D marker.
 </dd>
    <dt><tt> oSymbol</tt>
   <dd>	the type of 2D Marker.
	All symbols which compose the 2D marker have the same type.
	<br><b>legal values</b>:
	<ul>
	<li> CROSS : a cross which looks like a "X".</li>
	<li> PLUS : a cross which looks like a "+"</li>
	<li> CONCENTRIC : an unfilled circle</li>
	<li> COINCIDENT : two unfilled concentric circles</li>
	<li> FULLCIRCLE : a filled circle</li>
	<li> FULLSQUARE : a filled square</li>
	<li> STAR : a star which is the union of a 2D marker CROSS ,a 2D marker PLUS and a 2D marker DOT</li>
	<li> DOT : a dot </li>
	<li> SMALLDOT : a smalldot (one pixel)</li>
	<li> MISC1 : a kind of arrow which points to the bottom-left
	<pre>
	     /
	|  /
	|/__
	</pre>
	</li>
	<li> MISC2 : a kind of arrow which points to the top-rigth
	<pre>
	    ___ 	
	       /|
	     /  |
	   /
	</pre>
	</li>
	<li> FULLCIRCLE2 : a big FULLCIRCLE</li>
	<li> FULLSQUARE2 : a big FULLSQUARE</li>
	</ul></dd>
</dl>
</dl>
</dl>
<a name="GetSymbol"></a><a name="GetSymbol(CATSymbolType&amp;)"></a> <dt> o <b>GetSymbol</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','inline HRESULT')</script>  <b>GetSymbol</b>(<td><script type="text/javascript"> activateLink('CATSymbolType','CATSymbolType&amp;')</script> <td><tt>oSymbol</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the 2D Marker type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSymbol</tt>
   <dd>	The type of the 2D Marker.</dd>
</dl>
</dl>
</dl>
<a name="SetSymbol"></a><a name="SetSymbol(CATSymbolType)"></a> <dt> o <b>SetSymbol</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','inline HRESULT')</script>  <b>SetSymbol</b>(<td><script type="text/javascript"> activateLink('CATSymbolType','CATSymbolType')</script> <td><tt>iSymbol</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the 2D Marker type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymbol</tt>
   <dd>	The type of the 2D Marker.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CAT2DMarkerGP.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

