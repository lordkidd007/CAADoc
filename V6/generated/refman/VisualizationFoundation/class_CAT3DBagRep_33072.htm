<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Class CAT3DBagRep</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CAT3DBagRep"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CAT3DBagRep</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT3DBagRep_33072','CAT3DBagRep','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT3DBagRep</b>
</p>
<p>
<b><i> Class to create a collection (bag) of representations.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT3DBagRep()"><b>CAT3DBagRep</b></a>()
<dd>  
 <dt> o 
    <a href="#~CAT3DBagRep()"><b>~CAT3DBagRep</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddChild(CATRep&amp;)"><b>AddChild</b></a>(CATRep&amp;)
<dd>  Adds a child representation to the bag.
 <dt> o 
    <a href="#AddChildren(CATRep&amp;)"><b>AddChildren</b></a>(CATRep&amp;)
<dd>  Adds a child graphic representation to the bag.
 <dt> o 
    <a href="#ComputeBoundingElement(int)"><b>ComputeBoundingElement</b></a>(int)
<dd>  Recalculates the bounding element.
 <dt> o 
    <a href="#CreateRep()"><b>CreateRep</b></a>()
<dd>  Constructs an empty 3D bag representation.
 <dt> o 
    <a href="#Destroy()"><b>Destroy</b></a>()
<dd>  Deletes the bag as well as children not referenced by other bags.
 <dt> o 
    <a href="#Empty()"><b>Empty</b></a>()
<dd>  Removes (not deletes) all the children of the bag.
 <dt> o 
    <a href="#GetChildren()"><b>GetChildren</b></a>()
<dd>  Returns the list of children representations.
 <dt> o 
    <a href="#GetMatrix()"><b>GetMatrix</b></a>()
<dd>  Get the position and orientation of the bag.
 <dt> o 
    <a href="#IsOkToDraw(CATRender&amp;,int)"><b>IsOkToDraw</b></a>(CATRender&amp;,int)
<dd>  Tests whether the representation will draw its graphic primitives.
 <dt> o 
    <a href="#RemoveChild(CATRep&amp;)"><b>RemoveChild</b></a>(CATRep&amp;)
<dd>  Removes a child representation from the bag.
 <dt> o 
    <a href="#RemoveChildren(CATRep&amp;)"><b>RemoveChildren</b></a>(CATRep&amp;)
<dd>  Removes a child representation from the bag.
 <dt> o 
    <a href="#ResetMatrix()"><b>ResetMatrix</b></a>()
<dd>  Sets the matrix of the bag to the identity matrix.
 <dt> o 
    <a href="#SetHighlightMode(int,int)"><b>SetHighlightMode</b></a>(int,int)
<dd>  Sets the highlight mode of the bag.
 <dt> o 
    <a href="#SetMatrix(CAT4x4Matrix&amp;)"><b>SetMatrix</b></a>(CAT4x4Matrix&amp;)
<dd>  Sets the position and orientation of the bag.
 <dt> o 
    <a href="#SetShowMode(int,int)"><b>SetShowMode</b></a>(int,int)
<dd>  Sets the show mode of the bag.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT3DBagRep"></a><a name="CAT3DBagRep()"></a> <dt> o <b>CAT3DBagRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('BEGIN_PROTECT_REP_CTOR','BEGIN_PROTECT_REP_CTOR')</script>  <b>CAT3DBagRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R417 : Use CreateRep instead.
</dl>
</dl>
<a name="~CAT3DBagRep"></a><a name="~CAT3DBagRep()"></a> <dt> o <b>~CAT3DBagRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CAT3DBagRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddChild"></a><a name="AddChild(CATRep&amp;)"></a> <dt> o <b>AddChild</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddChild</b>(<td><script type="text/javascript"> activateLink('CATRep','CATRep&amp;')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a child representation to the bag. The bounding element of the bag is updated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> Child representation to be added.</dd>
</dl>
</dl>
</dl>
<a name="AddChildren"></a><a name="AddChildren(CATRep&amp;)"></a> <dt> o <b>AddChildren</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddChildren</b>(<td><script type="text/javascript"> activateLink('CATRep','CATRep&amp;')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a child graphic representation to the bag.
 The bounding element of the bag is not updated. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> Child representation to be added.</dd>
</dl>
</dl>
</dl>
<a name="ComputeBoundingElement"></a><a name="ComputeBoundingElement(int)"></a> <dt> o <b>ComputeBoundingElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','END_PROTECT_REP_CTOR void')</script>  <b>ComputeBoundingElement</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iShowSpace</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Recalculates the bounding element. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShowSpace</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="CreateRep"></a><a name="CreateRep()"></a> <dt> o <b>CreateRep</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CAT3DBagRep','CAT3DBagRep*')</script>  <b>CreateRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty 3D bag representation.
</dl>
<a name="Destroy"></a><a name="Destroy()"></a> <dt> o <b>Destroy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Destroy</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deletes the bag as well as children not referenced by other bags.
</dl>
<a name="Empty"></a><a name="Empty()"></a> <dt> o <b>Empty</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Empty</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes (not deletes) all the children of the bag.
</dl>
<a name="GetChildren"></a><a name="GetChildren()"></a> <dt> o <b>GetChildren</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('list<CATRep>','list<CATRep> *')</script>  <b>GetChildren</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of children representations.
</dl>
<a name="GetMatrix"></a><a name="GetMatrix()"></a> <dt> o <b>GetMatrix</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT4x4Matrix','const CAT4x4Matrix *')</script>  <b>GetMatrix</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Get the position and orientation of the bag. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The orientation matrix of the bag.
</dl>
</dl>
<a name="IsOkToDraw"></a><a name="IsOkToDraw(CATRender&amp;,int)"></a> <dt> o <b>IsOkToDraw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsOkToDraw</b>(<td><script type="text/javascript"> activateLink('CATRender','CATRender&amp;')</script> <td><tt>ioRender</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>ioInside</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the representation will draw its graphic primitives. See CATRep::OkToDraw(CATRender & ioRender, int * ioInside)
</dl>
<a name="RemoveChild"></a><a name="RemoveChild(CATRep&amp;)"></a> <dt> o <b>RemoveChild</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveChild</b>(<td><script type="text/javascript"> activateLink('CATRep','CATRep&amp;')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a child representation from the bag. The bounding element of the bag is updated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> Child representation to be removed.</dd>
</dl>
</dl>
</dl>
<a name="RemoveChildren"></a><a name="RemoveChildren(CATRep&amp;)"></a> <dt> o <b>RemoveChildren</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveChildren</b>(<td><script type="text/javascript"> activateLink('CATRep','CATRep&amp;')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a child representation from the bag. The bounding element of the bag is not updated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> Child representation to be removed.</dd>
</dl>
</dl>
</dl>
<a name="ResetMatrix"></a><a name="ResetMatrix()"></a> <dt> o <b>ResetMatrix</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ResetMatrix</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the matrix of the bag to the identity matrix.
</dl>
<a name="SetHighlightMode"></a><a name="SetHighlightMode(int,int)"></a> <dt> o <b>SetHighlightMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetHighlightMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iHighlightMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPropagationMode</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the highlight mode of the bag. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHighlightMode</tt>
   <dd> <ul>
 0 : bag is not highlighted <li>
 1 : bag is highlighted <li>
 </ul>
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd> <ul>
 0 : highlight mode is not propagated to children representations <li>
 1 : highlight mode is propagated to children representations <li>
 </ul></dd>
</dl>
</dl>
</dl>
<a name="SetMatrix"></a><a name="SetMatrix(CAT4x4Matrix&amp;)"></a> <dt> o <b>SetMatrix</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMatrix</b>(<td> const <script type="text/javascript"> activateLink('CAT4x4Matrix','CAT4x4Matrix&amp;')</script> <td><tt>iMatrix</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the position and orientation of the bag. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMatrix</tt>
   <dd> Orientation matrix of the bag.</dd>
</dl>
</dl>
</dl>
<a name="SetShowMode"></a><a name="SetShowMode(int,int)"></a> <dt> o <b>SetShowMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetShowMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iShowMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPropagationMode</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the show mode of the bag. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShowMode</tt>
   <dd> <ul>
 0 : bag is not visible <li>
 1 : bag is visible <li>
 </ul>
 </dd>
    <dt><tt> iPropagationMode</tt>
   <dd> <ul>
 0 : show mode is not propagated to children representations <li>
 1 : show mode is propagated to children representations <li>
 </ul></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CAT3DBagRep.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

