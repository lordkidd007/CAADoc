<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Global Function CATWriteCgr</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CATWriteCgr"; } 
	function getCurrentType() { 
 	return "global function"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation Global Function CATWriteCgr</h1>

<br><dt><table><tr><td>  <script type="text/javascript"> activateLink('int','extern  int')</script>  <b>CATWriteCgr</b>(<td><script type="text/javascript"> activateLink('CATRep','CATRep*')</script> <td><tt>iRep</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>oBuffer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oLBuffer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSettingCgr','CATSettingCgr')</script> <td><tt>iSettingCgr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATColorMap','CATColorMap*')</script> <td><tt>iColMap</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iFileMarked</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Function to save, in the Cgr format, the representation of a graphic scene
 in a buffer.
 <b>Role:</b>This function writes a Cgr buffer.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
      <dt>0</dt>
        <dd>OK</dd>
      <dt>-1</dt>
        <dd>KO</dd>
   </dl>   
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>    A pointer to the root node of the 3D scene to save.
 </dd>
    <dt><tt> oBuffer</tt>
   <dd>    The buffer in which the Cgr data are stored. This buffer is allocated by <tt>CATWriteCgr</tt>,
    but its deletion is let to the caller and must be done by using the "free" function.
 </dd>
    <dt><tt> oLBuffer</tt>
   <dd>    The length of oBuffer.
 </dd>
    <dt><tt> iSettingCgr</tt>
   <dd>    The CATSettingCgr flag to specify the kind of graphic data you want to store in the cgr file.
 </dd>
    <dt><tt> iColMap</tt>
   <dd>    The color to use to convert color attribute in RGB composants.
 </dd>
    <dt><tt> iFileMarked</tt>
   <dd>    do not use.
    <br><b>Legal values</b>:
    <dl>
      <dt>TRUE</dt>
        <dd>The cgr file will be readable by only CATIA Demo version</dd>
      <dt>FALSE</dt>
        <dd>The cgr file will be readable by every CATIA versions</dd>
    </dl>
    The default value is set to <tt>FALSE</tt>.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATReadWriteCgr.h</b><br>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

