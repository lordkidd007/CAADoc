<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Class CATModelForRep</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CATModelForRep"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CATModelForRep</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATModelForRep_37135','CATModelForRep','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATModelForRep</b>
</p>
<p>
<b><i>  Base class for dialog help objects.</i></b><br>

  <b>Role:</b> 
  This class is a the main class (implementation) of a component that 
  implements a visualization interface.
  It is dedicated to hold a graphic representation of an object that is 
  not part of the document, but is used to ease the dialog. This
  representation is to be built outside and set to the component.
  <br><br>
  For example, it can hold the representation of a local 3D-axis system to 
  enable the end user to indicate an axis.
  Such a component it can be put into the <i>CATISO</i> to be displayed, and thus 
  selectable. Converted as a <script type="text/javascript"> activateLinkAnchor('CATPathElement','','CATPathElement') </script>, it can be put into the   
<script type="text/javascript"> activateLinkAnchor('CATHSO','','CATHSO') </script>,   and 
<script type="text/javascript"> activateLinkAnchor('CATPSO','','CATPSO') </script> objects to be highlighted, and prehighlighted respectively.  <br><br>
  Since this class is a base class, do not use it directly. Use its 
  derived classes instead:
  <ul>
  <li>
<script type="text/javascript"> activateLinkAnchor('CATModelForRep2D','','CATModelForRep2D') </script> that implements CATI2DGeoVisu</li>    <li>
<script type="text/javascript"> activateLinkAnchor('CATModelForRep3D','','CATModelForRep3D') </script> that implements CATI3DGeoVisu</li>  </ul>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATModelForRep()"><b>~CATModelForRep</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GiveRep()"><b>GiveRep</b></a>()
<dd>  Returns a pointer to the graphic representation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATModelForRep"></a><a name="~CATModelForRep()"></a> <dt> o <b>~CATModelForRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATModelForRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GiveRep"></a><a name="GiveRep()"></a> <dt> o <b>GiveRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATRep','CATRep *')</script>  <b>GiveRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns a pointer to the graphic representation.
</dl>
<hr>
 This object is included in the file: <b>CATModelForRep.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

