<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningResourceUseItf Interface DELIMfgToolAssembly</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningResourceUseItf.htm" href="../MachiningResourceUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningResourceUseItf";	}
		function getCurrentObjectName() { 
 	return "DELIMfgToolAssembly"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MachiningResourceUseItf Interface DELIMfgToolAssembly</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIMfgToolAssembly_47284','DELIMfgToolAssembly','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIMfgToolAssembly</b>
</p>
<p>
<b><i>     Interface  dedicated  to  Tool  Assembly  objects  management.</i></b><br>
  
  <b>Role</b>:  This  interface  offers  services  to  manage  mainly  the  associated  tool  and  holder.<br>  
  Common  attributes  are  declared  in  CATMfgToolAssemblyConstant.<br>  
  
  <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATBaseUnknown','','CATBaseUnknown') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('DELIMfgTool','','DELIMfgTool') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddComponent(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"><b>AddComponent</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Adds a new component to tool assembly.
 <dt> o 
    <a href="#GetAllComponents(CATListValCATBaseUnknown_var&amp;)"><b>GetAllComponents</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Returns the list of all components associated with the tool assembly.
 <dt> o 
    <a href="#GetAllStages(long&amp;,CATListOfDouble&amp;,CATListOfDouble&amp;,CATListOfDouble&amp;,CATBoolean)"><b>GetAllStages</b></a>(long&amp;,CATListOfDouble&amp;,CATListOfDouble&amp;,CATListOfDouble&amp;,CATBoolean)
<dd>  Returns Number of stages with the value of Gage between Tool and First Holder.
 <dt> o 
    <a href="#GetEditableStatus(CATBaseUnknown_var&amp;)"><b>GetEditableStatus</b></a>(CATBaseUnknown_var&amp;)
<dd>  Returns a boolean: if TRUE, it means that the Tool Assembly is editable for the given Activity
                    if FALSE, the Tool Assembly can not be modified on this entity
 
 <dt> o 
    <a href="#GetHolders(CATListValCATBaseUnknown_var&amp;)"><b>GetHolders</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Returns the list of holder associated with the tool assembly.
 <dt> o 
    <a href="#GetLengthOfToolAssembly(double&amp;,CATBoolean,int)"><b>GetLengthOfToolAssembly</b></a>(double&amp;,CATBoolean,int)
<dd>  Returns the value of the total length of the tool assembly.
 <dt> o 
    <a href="#GetListHolderGage(CATListOfCATBaseUnknown_var&amp;,CATListOfDouble&amp;,CATBoolean,int)"><b>GetListHolderGage</b></a>(CATListOfCATBaseUnknown_var&amp;,CATListOfDouble&amp;,CATBoolean,int)
<dd>  Returns the list of holder associated with the tool assembly and the list of Gage
 
 <dt> o 
    <a href="#GetToolGage(double&amp;,CATBoolean,int)"><b>GetToolGage</b></a>(double&amp;,CATBoolean,int)
<dd>  Returns the value of Gage between Tool and First Holder.
 <dt> o 
    <a href="#GetTools(CATListValCATBaseUnknown_var&amp;)"><b>GetTools</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Returns the list of tool associated with the tool assembly.
 <dt> o 
    <a href="#RemoveAllComponents()"><b>RemoveAllComponents</b></a>()
<dd>  Remove all the components of tool assembly.
 <dt> o 
    <a href="#RemoveComponent(CATBaseUnknown_var&amp;)"><b>RemoveComponent</b></a>(CATBaseUnknown_var&amp;)
<dd>  Removes a component of tool assembly.
 <dt> o 
    <a href="#SetListHolderGage(CATListOfDouble&amp;,CATBoolean,int)"><b>SetListHolderGage</b></a>(CATListOfDouble&amp;,CATBoolean,int)
<dd>  Sets the list of holder gage associated to the tool assembly
 
 <dt> o 
    <a href="#SetToolGage(double&amp;,CATBoolean,int)"><b>SetToolGage</b></a>(double&amp;,CATBoolean,int)
<dd>  Set the value of Gage between Tool and First Holder.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddComponent"></a><a name="AddComponent(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>AddComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddComponent</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iComponent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oInstance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a new component to tool assembly.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComponent</tt>
   <dd> : PLM object to add </dd>
    <dt><tt> oInstance</tt>
   <dd>  : return instance</dd>
</dl>
</dl>
</dl>
<a name="GetAllComponents"></a><a name="GetAllComponents(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetAllComponents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllComponents</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListofComponent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of all components associated with the tool assembly.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListofComponent</tt>
   <dd> List of PLM Object. First, all elements in list are removed.</dd>
</dl>
</dl>
</dl>
<a name="GetAllStages"></a><a name="GetAllStages(long&amp;,CATListOfDouble&amp;,CATListOfDouble&amp;,CATListOfDouble&amp;,CATBoolean)"></a> <dt> o <b>GetAllStages</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllStages</b>(<td><script type="text/javascript"> activateLink('long','long&amp;')</script> <td><tt>oNbStages</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble&amp;')</script> <td><tt>oListOfHeight</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble&amp;')</script> <td><tt>oListOfDiam1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble&amp;')</script> <td><tt>oListOfDiam2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>IsLocal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns Number of stages with the value of Gage between Tool and First Holder. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbStages</tt>
   <dd> : Number of stages </dd>
    <dt><tt> oListOfHeight:</tt>
   <dd> height definition </dd>
    <dt><tt> oListOfDiam1</tt>
   <dd> : diameter definition </dd>
    <dt><tt> oListOfDiam2</tt>
   <dd> : conical diameter definition</dd>
</dl>
</dl>
</dl>
<a name="GetEditableStatus"></a><a name="GetEditableStatus(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetEditableStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GetEditableStatus</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iActivity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a boolean: if TRUE, it means that the Tool Assembly is editable for the given Activity
                    if FALSE, the Tool Assembly can not be modified on this entity
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActivity</tt>
   <dd>     The activity for which you want to know the edit capability of the tool assembly</dd>
</dl>
</dl>
</dl>
<a name="GetHolders"></a><a name="GetHolders(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetHolders</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHolders</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListofHolder</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of holder associated with the tool assembly.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListofHolder</tt>
   <dd> List of Holder. First, all elements in list are removed.</dd>
</dl>
</dl>
</dl>
<a name="GetLengthOfToolAssembly"></a><a name="GetLengthOfToolAssembly(double&amp;,CATBoolean,int)"></a> <dt> o <b>GetLengthOfToolAssembly</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLengthOfToolAssembly</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oToolAssemblyLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Islocal</tt><td><tt>= FALSE</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iUnit</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the value of the total length of the tool assembly. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oToolAssemblyLength.</tt>
   <dd>  </dd>
    <dt><tt> Islocal:</tt>
   <dd> Local value save in Tool Configuration if is defined </dd>
    <dt><tt> iUnit</tt>
   <dd> :</dd>
</dl>
</dl>
</dl>
<a name="GetListHolderGage"></a><a name="GetListHolderGage(CATListOfCATBaseUnknown_var&amp;,CATListOfDouble&amp;,CATBoolean,int)"></a> <dt> o <b>GetListHolderGage</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListHolderGage</b>(<td><script type="text/javascript"> activateLink('CATListOfCATBaseUnknown_var','CATListOfCATBaseUnknown_var&amp;')</script> <td><tt>oListofHolder</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble&amp;')</script> <td><tt>oListHolderGage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Islocal</tt><td><tt>= FALSE</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iUnit</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of holder associated with the tool assembly and the list of Gage
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListofHolder</tt>
   <dd> List of Holder. First, all elements in list are removed.  </dd>
    <dt><tt> oListHolderGage</tt>
   <dd> List of Gage between each Holder. First, all elements in list are removed.  </dd>
    <dt><tt> Islocal:</tt>
   <dd> Local value save in Tool Configuration if is defined </dd>
    <dt><tt> iUnit</tt>
   <dd> :</dd>
</dl>
</dl>
</dl>
<a name="GetToolGage"></a><a name="GetToolGage(double&amp;,CATBoolean,int)"></a> <dt> o <b>GetToolGage</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetToolGage</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oToolGage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Islocal</tt><td><tt>= FALSE</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iUnit</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the value of Gage between Tool and First Holder. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oToolGage.</tt>
   <dd>  </dd>
    <dt><tt> Islocal:</tt>
   <dd> Local value save in Tool Configuration if is defined </dd>
    <dt><tt> iUnit</tt>
   <dd> :</dd>
</dl>
</dl>
</dl>
<a name="GetTools"></a><a name="GetTools(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetTools</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTools</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListofTool</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of tool associated with the tool assembly.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListofHolder</tt>
   <dd> List of Holders. First, all elements in list are removed.</dd>
</dl>
</dl>
</dl>
<a name="RemoveAllComponents"></a><a name="RemoveAllComponents()"></a> <dt> o <b>RemoveAllComponents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAllComponents</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Remove all the components of tool assembly.
</dl>
<a name="RemoveComponent"></a><a name="RemoveComponent(CATBaseUnknown_var&amp;)"></a> <dt> o <b>RemoveComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveComponent</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iComponent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a component of tool assembly.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComponent:</tt>
   <dd> PLM object to remove</dd>
</dl>
</dl>
</dl>
<a name="SetListHolderGage"></a><a name="SetListHolderGage(CATListOfDouble&amp;,CATBoolean,int)"></a> <dt> o <b>SetListHolderGage</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetListHolderGage</b>(<td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble&amp;')</script> <td><tt>iListHolderGage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Islocal</tt><td><tt>= FALSE</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iUnit</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the list of holder gage associated to the tool assembly
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListHolderGage</tt>
   <dd> List of Gage between each Holder. First, all elements in list are removed.  </dd>
    <dt><tt> Islocal:</tt>
   <dd> Local value save in Tool Configuration if is defined </dd>
    <dt><tt> iUnit</tt>
   <dd> :</dd>
</dl>
</dl>
</dl>
<a name="SetToolGage"></a><a name="SetToolGage(double&amp;,CATBoolean,int)"></a> <dt> o <b>SetToolGage</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetToolGage</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iToolGage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Islocal</tt><td><tt>= FALSE</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iUnit</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the value of Gage between Tool and First Holder. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToolGage</tt>
   <dd> :  Gage between Tool and First Holder </dd>
    <dt><tt> Islocal:</tt>
   <dd> Local value save in Tool Configuration if is defined </dd>
    <dt><tt> iUnit</tt>
   <dd> :</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>DELIMfgToolAssembly.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MachiningResourceUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

