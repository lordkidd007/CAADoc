<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMFastenerUseItf Interface CATIFmaAliasCtx</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMFastenerUseItf.htm" href="../CATPLMFastenerUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMFastenerUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIFmaAliasCtx"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMFastenerUseItf Interface CATIFmaAliasCtx</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIFmaAliasCtx_32981','CATIFmaAliasCtx','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../CATPLMFastenerUseItf/interface_CATIFmaAliasCtx_32981.htm">CATIFmaAliasCtx</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIFmaAliasCtx</b>
</p>
<p>
<b><i> Interface to provide the customized fastener connection name in given context.</i></b><br>


 <br><b>Role</b>: User has to implement the interface <script type="text/javascript"> activateLinkAnchor('CATIFmaAliasCtx','','CATIFmaAliasCtx') </script> on the component CAAFmaAliasImplementation.  <p> Default implementation for the interface method is provided by adapter.</p>
 The customer has the choice to implement. Example: In case of Fastener Report,
 <ul>
   <li>if the interface is not implemented, customized connection name won't be generated.</li>
   <li>if 
<script type="text/javascript"> activateLinkAnchor('','GetFastenerConnectionAlias','GetFastenerConnectionAlias') </script> is implemented, the alias of the fastener connection will be provided in the given context(FastenerUI, Report).</li> </ul>
 <p>
 

 <p><b>BOA information</b>: this interface CAN NOT be implemented
 using the BOA (Basic Object Adapter).

</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFastenerConnectionAlias(CATUnicodeString&amp;,CATBaseUnknown*,CATFmaConnectionContext)"><b>GetFastenerConnectionAlias</b></a>(CATUnicodeString&amp;,CATBaseUnknown*,CATFmaConnectionContext)
<dd>   Retrieves the user-defined alias of a fastener connection.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFastenerConnectionAlias"></a><a name="GetFastenerConnectionAlias(CATUnicodeString&amp;,CATBaseUnknown*,CATFmaConnectionContext)"></a> <dt> o <b>GetFastenerConnectionAlias</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFastenerConnectionAlias</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oStrAlias</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iFastenerMCX</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFmaConnectionContext','CATFmaConnectionContext')</script> <td><tt>iConnectionCtx</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the user-defined alias of a fastener connection.

 <br><b>Role</b>: This method aims to allow to customize the "alias" of 
 a given fastener connection in the downstream functions that handle
 them like the Fastener Report or FastenerUI for example. For more information on the
 list of the functions that support this protocol of openness please 
 refer to CATIA documentation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFastenerMCX</tt>
   <dd> [in]   The fastener connection.
 </dd>
    <dt><tt> iConnectionCtx</tt>
   <dd> [in]   The fastener connection Context.
   <br><b>Legal values</b>:
   <dl>
     <dt>CATFmaReport</dt>  
     <dd>if the alias required in context of Report.</dd>
     <dt>CATFmaFastenerUI</dt>  
     <dd>if the alias required in context of Fastener UI.</dd>
     <dt>CATFmaUndef</dt>  
     <dd>if No context defined.</dd>
   </dl>
 </dd>
    <dt><tt> ostrAlias</tt>
   <dd> [out]   The alias corresponding to the fastener connection occurrence.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <dl>
    <dt>S_OK  </dt>  
    <dd>if the alias was successfully retrieved.</dd>
    <dt>E_FAIL</dt>  
    <dd>a failure has been encountered while retrieving the alias.</dd>
  </dl>

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIFmaAliasCtx.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMFmaBrowseInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

