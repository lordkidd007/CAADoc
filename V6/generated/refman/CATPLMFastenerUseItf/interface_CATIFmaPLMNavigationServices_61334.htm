<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMFastenerUseItf Interface CATIFmaPLMNavigationServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMFastenerUseItf.htm" href="../CATPLMFastenerUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMFastenerUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIFmaPLMNavigationServices"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMFastenerUseItf Interface CATIFmaPLMNavigationServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIFmaPLMNavigationServices_61334','CATIFmaPLMNavigationServices','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIFmaPLMNavigationServices</b>
</p>
<p>
<b><i> This interface gives access to methods allowing navigating between all the elements that contribute to the fastener structure: the fastener instances, the fastener connections and the fasten instances of parts.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetComponentsFromFastenerInstance(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)"><b>GetComponentsFromFastenerInstance</b></a>(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)
<dd>    Gets the list of components of a given fastener instance.
 <dt> o 
    <a href="#GetFastenConnectionsFromFastenerInstance(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)"><b>GetFastenConnectionsFromFastenerInstance</b></a>(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)
<dd>    Gets all the fastener connections linked to a given instance of fastener.
 <dt> o 
    <a href="#GetFastenConnectionsFromPart(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)"><b>GetFastenConnectionsFromPart</b></a>(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)
<dd>    Gets all the fastener connections linked to a given instance of part.
 <dt> o 
    <a href="#GetFastenerFromFastenConnection(CATBaseUnknown**,CATBaseUnknown*)"><b>GetFastenerFromFastenConnection</b></a>(CATBaseUnknown**,CATBaseUnknown*)
<dd>    Gets the fastener instance that implements a given fastener connection.
 <dt> o 
    <a href="#GetFastenersFromAttributes(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATString&amp;,CATAdpAttributeSet&amp;,CATLISTP(CATIAdpPLMIdentificator)&amp;)"><b>GetFastenersFromAttributes</b></a>(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATString&amp;,CATAdpAttributeSet&amp;,CATLISTP(CATIAdpPLMIdentificator)&amp;)
<dd>    Gets fasteners plm identificators according to given fastener plm attributes values.
 <dt> o 
    <a href="#GetFirstCommonFatherProductReference(CATBaseUnknown**,CATLISTP(CATBaseUnknown)*)"><b>GetFirstCommonFatherProductReference</b></a>(CATBaseUnknown**,CATLISTP(CATBaseUnknown)*)
<dd>    Gets first common father product reference for given list of products.
 <dt> o 
    <a href="#GetPartsFromFastenConnection(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)"><b>GetPartsFromFastenConnection</b></a>(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)
<dd>    Gets the set of part instances associated to a fastener connection.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetComponentsFromFastenerInstance"></a><a name="GetComponentsFromFastenerInstance(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)"></a> <dt> o <b>GetComponentsFromFastenerInstance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetComponentsFromFastenerInstance</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)**')</script> <td><tt>opListOfComponents</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipFstInstance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Gets the list of components of a given fastener instance.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipFstInstance</tt>
   <dd>       the fastener instance.
   </dd>
    <dt><tt> opListOfComponents</tt>
   <dd>       the list of components parts of the fastener instance.
      After use, each element of the list must be released and the list must be deleted.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the retrieving operation has been fully successful.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if ipFstInstance is NULL, or if the ipFstInstance pointer does not correspond to a fastener instance, or if opListOfComponents is not initially NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="GetFastenConnectionsFromFastenerInstance"></a><a name="GetFastenConnectionsFromFastenerInstance(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)"></a> <dt> o <b>GetFastenConnectionsFromFastenerInstance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFastenConnectionsFromFastenerInstance</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)**')</script> <td><tt>opListOfConnections</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipFstInstance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Gets all the fastener connections linked to a given instance of fastener. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipFstInstance</tt>
   <dd>       the instance the instance of fastener.
   </dd>
    <dt><tt> opListOfConnections</tt>
   <dd>       the list of fastener connections that are implemented by the given fastener instance. 
      This list may:
      <ul>
          <li>be empty: then instance could be removed from the product structure depending on user’s need</li>
          <li>contain more than one object: for example, when a given fastener instance is re-used through different configurations</li>
      </ul>
     After use, each element of the list must be released and the list must be deleted.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the retrieving operation has been fully successful.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if ipFstInstance is NULL, or if the ipFstInstance pointer does not correspond to an instance of Fastener, or if opListOfConnections is not initially NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="GetFastenConnectionsFromPart"></a><a name="GetFastenConnectionsFromPart(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)"></a> <dt> o <b>GetFastenConnectionsFromPart</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFastenConnectionsFromPart</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)**')</script> <td><tt>opListOfConnections</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipPart</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Gets all the fastener connections linked to a given instance of part. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipPart</tt>
   <dd>       the instance of part
   </dd>
    <dt><tt> opListOfConnections</tt>
   <dd>       the list of fastener connections that defines the fasten link to the given instance of part. 
      This list may be empty.
      After use, each element of the list must be released and the list must be deleted.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the retrieving operation has been fully successful.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if ipPart is NULL, or if the ipPart pointer does not correspond to an instance of Part, or if opListOfConnections is not initially NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="GetFastenerFromFastenConnection"></a><a name="GetFastenerFromFastenConnection(CATBaseUnknown**,CATBaseUnknown*)"></a> <dt> o <b>GetFastenerFromFastenConnection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFastenerFromFastenConnection</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>opFstInstance</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipFstConnection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Gets the fastener instance that implements a given fastener connection. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipFstConnection</tt>
   <dd>       the fastener connection
   </dd>
    <dt><tt> opFstInstance</tt>
   <dd> [out, CATBaseUnknown#Release]      the fastener instance that implements the fastener connection.
      After use, the pointer must be released.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the retrieving operation has been fully successful.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if ipFstConnection is NULL, or if the ipFstConnection pointer does not correspond to a fastener connection, or if opFstInstance is not initially NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="GetFastenersFromAttributes"></a><a name="GetFastenersFromAttributes(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATString&amp;,CATAdpAttributeSet&amp;,CATLISTP(CATIAdpPLMIdentificator)&amp;)"></a> <dt> o <b>GetFastenersFromAttributes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFastenersFromAttributes</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATIAdpPLMIdentificator)','CATLISTP(CATIAdpPLMIdentificator)&amp;')</script> <td><tt>iInputs</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iFastenerType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAdpAttributeSet','CATAdpAttributeSet&amp;')</script> <td><tt>iAttributeSet</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATIAdpPLMIdentificator)','CATLISTP(CATIAdpPLMIdentificator)&amp;')</script> <td><tt>oResults</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
   Gets fasteners plm identificators according to given fastener plm attributes values.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInputs</tt>
   <dd> [in]      The list of inputs to treat. (Can be empty)
      If the list is empty, the results are retrieved from database.
      If the list is not empty, the results are retrieved among elements of this list.
   </dd>
    <dt><tt> iFastenerType</tt>
   <dd> [in]      The type of fastener.
         <br><b>Legal Values</b>:
         <ol><li> "SpotFastener"
             <li> "SpotAssyFastener"
             <li> "SpotFastenerSet"
             <li> "BeadFastener"
             <li> "BeadFastenerInstance"
             <li> "BeadBundleFastener" </ol>
   </dd>
    <dt><tt> iAttributeSet</tt>
   <dd> [in]      The set of attributes and their values.
   </dd>
    <dt><tt> oResults</tt>
   <dd> [out]      The list of results.
      After use, all pointers of the list must be released.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>If fasteners plm identificators have been successfully retrieved.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>If iFastenerType is unknown.</dd>
    <dt>E_FAIL</dt>
    <dd>Otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="GetFirstCommonFatherProductReference"></a><a name="GetFirstCommonFatherProductReference(CATBaseUnknown**,CATLISTP(CATBaseUnknown)*)"></a> <dt> o <b>GetFirstCommonFatherProductReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstCommonFatherProductReference</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>opFatherProd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)*')</script> <td><tt>ipListOfProductsToBeFastened</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Gets first common father product reference for given list of products.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipListOfProductsToBeFastened</tt>
   <dd>       the list of products to be fastened.
   </dd>
    <dt><tt> opFatherProd</tt>
   <dd>       first common father product reference.
      After use, the pointer must be released.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if common father product reference has been successfully retrieved.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if ipListOfProductsToBeFastened is NULL, or if the list ipListOfProductsToBeFastened is empty, or if opFatherProd is NULL, or *opFatherProd is not initially NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="GetPartsFromFastenConnection"></a><a name="GetPartsFromFastenConnection(CATLISTP(CATBaseUnknown)**,CATBaseUnknown*)"></a> <dt> o <b>GetPartsFromFastenConnection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPartsFromFastenConnection</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)**')</script> <td><tt>opListOfParts</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipFstConnection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Gets the set of part instances associated to a fastener connection. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipFstConnection</tt>
   <dd>       the fastener connection.
   </dd>
    <dt><tt> opListOfParts</tt>
   <dd>       the list of instances of parts. This list may be empty.
      After use, each element of the list must be released and the list must be deleted.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the retrieving operation has been fully successful.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if ipFstConnection is NULL, or if the ipFstConnection pointer does not correspond to a fastener connection, or if opListOfParts is not initially NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIFmaPLMNavigationServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMFmaBrowseInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

