<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATTPSBaseUseItf Interface CATITPSDatumTarget</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATTPSBaseUseItf.htm" href="../CATTPSBaseUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATTPSBaseUseItf";	}
		function getCurrentObjectName() { 
 	return "CATITPSDatumTarget"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATTPSBaseUseItf Interface CATITPSDatumTarget</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATITPSDatumTarget_30597','CATITPSDatumTarget','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATITPSDatumTarget</b>
</p>
<p>
<b><i> Interface for Datum Target TPS (datum entity).</i></b><br>

 TPS for Technological Product Specifications.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAreaForm(AreaForm&amp;)"><b>GetAreaForm</b></a>(AreaForm&amp;)
<dd>  Gets the form of the target area.
 <dt> o 
    <a href="#GetCircularAreaSize(double&amp;)"><b>GetCircularAreaSize</b></a>(double&amp;)
<dd>  Gets the size of the circular area.
 <dt> o 
    <a href="#GetDatum(CATITPSDatumSimple**)"><b>GetDatum</b></a>(CATITPSDatumSimple**)
<dd>  Retrieves simple datum, the target belongs to.
 <dt> o 
    <a href="#GetLabel(wchar_t**)"><b>GetLabel</b></a>(wchar_t**)
<dd>  Retrieves Label.
 <dt> o 
    <a href="#GetMovableDirectionTTRS(CATITTRS_var&amp;)"><b>GetMovableDirectionTTRS</b></a>(CATITTRS_var&amp;)
<dd>  Gets the movable Direction TTRS.
 <dt> o 
    <a href="#GetRectangularAreaSize(double&amp;,double&amp;)"><b>GetRectangularAreaSize</b></a>(double&amp;,double&amp;)
<dd>  Gets the size of the rectangular area.
 <dt> o 
    <a href="#IsMovable(CATBoolean&amp;)"><b>IsMovable</b></a>(CATBoolean&amp;)
<dd>  Get the Datum Target movable or not
 
 <dt> o 
    <a href="#SetAreaForm(AreaForm)"><b>SetAreaForm</b></a>(AreaForm)
<dd>  Sets the form of the target area.
 <dt> o 
    <a href="#SetCircularAreaSize(double)"><b>SetCircularAreaSize</b></a>(double)
<dd>  Sets the size of the circular area.
 <dt> o 
    <a href="#SetLabel(wchar_t*)"><b>SetLabel</b></a>(wchar_t*)
<dd>  Sets Label.
 <dt> o 
    <a href="#SetMovable(CATBoolean&amp;)"><b>SetMovable</b></a>(CATBoolean&amp;)
<dd>  Set the Datum Target movable or not
 
 <dt> o 
    <a href="#SetMovableDirectionTTRS(CATITTRS_var&amp;)"><b>SetMovableDirectionTTRS</b></a>(CATITTRS_var&amp;)
<dd>  Sets the movable Direction TTRS.
 <dt> o 
    <a href="#SetRectangularAreaSize(double,double)"><b>SetRectangularAreaSize</b></a>(double,double)
<dd>  Sets the size of the rectangular area.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#AreaForm"><b>AreaForm</b></a>
<dd>  Enum to describe the form of the target area .
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAreaForm"></a><a name="GetAreaForm(AreaForm&amp;)"></a> <dt> o <b>GetAreaForm</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAreaForm</b>(<td><script type="text/javascript"> activateLink('AreaForm','AreaForm&amp;')</script> <td><tt>oAreaForm</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the form of the target area.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAreaForm</tt>
   <dd>   Form of the target area.
  returns S_OK when the value has been correctly retrieved,</dd>
</dl>
</dl>
</dl>
<a name="GetCircularAreaSize"></a><a name="GetCircularAreaSize(double&amp;)"></a> <dt> o <b>GetCircularAreaSize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCircularAreaSize</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oAreaForm</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the size of the circular area.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAreaForm</tt>
   <dd>   Size of the Circular target area.
  returns S_OK when the value has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetDatum"></a><a name="GetDatum(CATITPSDatumSimple**)"></a> <dt> o <b>GetDatum</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDatum</b>(<td><script type="text/javascript"> activateLink('CATITPSDatumSimple','CATITPSDatumSimple**')</script> <td><tt>oDatum</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves simple datum, the target belongs to.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDatum</tt>
   <dd> [out, CATITPSDatumSimple#Release]     The Target list.</dd>
</dl>
</dl>
</dl>
<a name="GetLabel"></a><a name="GetLabel(wchar_t**)"></a> <dt> o <b>GetLabel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLabel</b>(<td><script type="text/javascript"> activateLink('wchar_t','wchar_t**')</script> <td><tt>oLabel</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves Label.
</dl>
<a name="GetMovableDirectionTTRS"></a><a name="GetMovableDirectionTTRS(CATITTRS_var&amp;)"></a> <dt> o <b>GetMovableDirectionTTRS</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMovableDirectionTTRS</b>(<td><script type="text/javascript"> activateLink('CATITTRS_var','CATITTRS_var&amp;')</script> <td><tt>ospDirectionTTRS</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the movable Direction TTRS.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospDirectionTTRS</tt>
   <dd>   Movable Direction TTRS
  returns S_OK when the TTRS has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetRectangularAreaSize"></a><a name="GetRectangularAreaSize(double&amp;,double&amp;)"></a> <dt> o <b>GetRectangularAreaSize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRectangularAreaSize</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oWidth</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the size of the rectangular area.     
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLength</tt>
   <dd>   Length of the Rectangular target area.
  </dd>
    <dt><tt> oWidth</tt>
   <dd>   Width of the Rectangular target area.
  returns S_OK when the values have been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="IsMovable"></a><a name="IsMovable(CATBoolean&amp;)"></a> <dt> o <b>IsMovable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsMovable</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>obMovable</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the Datum Target movable or not
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> obMovable</tt>
   <dd>   FALSE : Not movable
   TRUE  : Movable.
  returns S_OK when the value has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetAreaForm"></a><a name="SetAreaForm(AreaForm)"></a> <dt> o <b>SetAreaForm</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAreaForm</b>(<td> const <script type="text/javascript"> activateLink('AreaForm','AreaForm')</script> <td><tt>iAreaForm</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the form of the target area.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAreaForm</tt>
   <dd>   Form of the target area.
  returns S_OK when the value has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetCircularAreaSize"></a><a name="SetCircularAreaSize(double)"></a> <dt> o <b>SetCircularAreaSize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCircularAreaSize</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAreaSize</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the size of the circular area.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAreaSize</tt>
   <dd>   Size of the Circular target area.
  returns S_OK when the value has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetLabel"></a><a name="SetLabel(wchar_t*)"></a> <dt> o <b>SetLabel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLabel</b>(<td> const <script type="text/javascript"> activateLink('wchar_t','wchar_t*')</script> <td><tt>iLabel</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets Label.
</dl>
<a name="SetMovable"></a><a name="SetMovable(CATBoolean&amp;)"></a> <dt> o <b>SetMovable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMovable</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>ibMovable</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the Datum Target movable or not
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ibMovable</tt>
   <dd>   FALSE : Not movable
   TRUE  : Movable.
  returns S_OK when the value has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetMovableDirectionTTRS"></a><a name="SetMovableDirectionTTRS(CATITTRS_var&amp;)"></a> <dt> o <b>SetMovableDirectionTTRS</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMovableDirectionTTRS</b>(<td> const <script type="text/javascript"> activateLink('CATITTRS_var','CATITTRS_var&amp;')</script> <td><tt>ispDirectionTTRS</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the movable Direction TTRS.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispDirectionTTRS</tt>
   <dd>   Movable Direction TTRS
  If the ispDirectionTTRS is NULL_var, the 
   direction TTRS inside the model is removed.
  returns S_OK when the TTRS has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetRectangularAreaSize"></a><a name="SetRectangularAreaSize(double,double)"></a> <dt> o <b>SetRectangularAreaSize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRectangularAreaSize</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iWidth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the size of the rectangular area.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLength</tt>
   <dd>   Length of the Rectangular target area.
  </dd>
    <dt><tt> iWidth</tt>
   <dd>   Width of the Rectangular target area.
  returns S_OK when the values have been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="AreaForm"> <dt> o <b>AreaForm</b>
<dl>
  <dd>
<pre>
enum <b>AreaForm</b> {
  Point,
  Circular,
  Rectangular
}
</pre>
 Enum to describe the form of the target area .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Point</tt>
   <dd>     to show Point in visualization for target area.
 </dd>
    <dt><tt> Circular</tt>
   <dd>     to show Circle in visualization for target area.
 </dd>
    <dt><tt> Rectangular</tt>
   <dd>     to show Rectangle in visualization for target area.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATITPSDatumTarget.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTPSBaseUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

