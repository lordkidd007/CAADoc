<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATTPSBaseUseItf Interface CATITPSExtendedCylinder</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATTPSBaseUseItf.htm" href="../CATTPSBaseUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATTPSBaseUseItf";	}
		function getCurrentObjectName() { 
 	return "CATITPSExtendedCylinder"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATTPSBaseUseItf Interface CATITPSExtendedCylinder</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATITPSExtendedCylinder_40940','CATITPSExtendedCylinder','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATITPSExtendedCylinder</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDiameter(double&amp;)"><b>GetDiameter</b></a>(double&amp;)
<dd>  Gets the diameter of the extended cylinder.
 <dt> o 
    <a href="#GetEndPoint(CATMathPoint&amp;)"><b>GetEndPoint</b></a>(CATMathPoint&amp;)
<dd>  Gets the end point of the extended cylinder.
 <dt> o 
    <a href="#GetLength(double&amp;)"><b>GetLength</b></a>(double&amp;)
<dd>  Gets the length of the extended cylinder.
 <dt> o 
    <a href="#GetOffset(double&amp;)"><b>GetOffset</b></a>(double&amp;)
<dd>  Gets the offset of the extended cylinder.
 <dt> o 
    <a href="#GetPosition(CATMathPoint&amp;)"><b>GetPosition</b></a>(CATMathPoint&amp;)
<dd>  Gets the center point of the extended cylinder.
 <dt> o 
    <a href="#GetReferencePlaneTTRS(CATITTRS**)"><b>GetReferencePlaneTTRS</b></a>(CATITTRS**)
<dd>  Gets the reference plane TTRS of the extended cylinder.
 <dt> o 
    <a href="#GetRepresentedCylinderTTRS(CATITTRS**)"><b>GetRepresentedCylinderTTRS</b></a>(CATITTRS**)
<dd>  Gets the represented TTRS of the extended cylinder.
 <dt> o 
    <a href="#GetStartPoint(CATMathPoint&amp;)"><b>GetStartPoint</b></a>(CATMathPoint&amp;)
<dd>  Gets the start point of the extended cylinder.
 <dt> o 
    <a href="#SetDiameter(double&amp;)"><b>SetDiameter</b></a>(double&amp;)
<dd>  Sets the diameter of the extended cylinder.
 <dt> o 
    <a href="#SetEndPoint(CATMathPoint&amp;)"><b>SetEndPoint</b></a>(CATMathPoint&amp;)
<dd>  Sets the end point of the extended cylinder.
 <dt> o 
    <a href="#SetLength(double&amp;)"><b>SetLength</b></a>(double&amp;)
<dd>  Sets the length of the extended cylinder.
 <dt> o 
    <a href="#SetOffset(double&amp;)"><b>SetOffset</b></a>(double&amp;)
<dd>  Sets the offset of the extended cylinder.
 <dt> o 
    <a href="#SetPosition(CATMathPoint&amp;)"><b>SetPosition</b></a>(CATMathPoint&amp;)
<dd>  Sets the center point of the extended cylinder.
 <dt> o 
    <a href="#SetStartPoint(CATMathPoint&amp;)"><b>SetStartPoint</b></a>(CATMathPoint&amp;)
<dd>  Sets the start point of the extended cylinder.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDiameter"></a><a name="GetDiameter(double&amp;)"></a> <dt> o <b>GetDiameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDiameter</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oDiameter</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the diameter of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDiameter</tt>
   <dd>   diameter of the extended cylinder
  returns S_OK when the diameter has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetEndPoint"></a><a name="GetEndPoint(CATMathPoint&amp;)"></a> <dt> o <b>GetEndPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEndPoint</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>oEndPoint</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the end point of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEndPoint</tt>
   <dd>   end point of the extended cylinder
  returns S_OK when the point has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetLength"></a><a name="GetLength(double&amp;)"></a> <dt> o <b>GetLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLength</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oLength</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the length of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLength</tt>
   <dd>   length of the extended cylinder
  returns S_OK when the length has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetOffset"></a><a name="GetOffset(double&amp;)"></a> <dt> o <b>GetOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOffset</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oOffset</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the offset of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffset</tt>
   <dd>   offset of the extended cylinder
  returns S_OK when the offset has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetPosition"></a><a name="GetPosition(CATMathPoint&amp;)"></a> <dt> o <b>GetPosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPosition</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>oPoint</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the center point of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPoint</tt>
   <dd>   canter point of the extended cylinder
  returns S_OK when the point has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetReferencePlaneTTRS"></a><a name="GetReferencePlaneTTRS(CATITTRS**)"></a> <dt> o <b>GetReferencePlaneTTRS</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReferencePlaneTTRS</b>(<td><script type="text/javascript"> activateLink('CATITTRS','CATITTRS**')</script> <td><tt>opiReferencePlaneTTRS</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the reference plane TTRS of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiReferencePlaneTTRS</tt>
   <dd>   Reference plane TTRS of the extended cylinder
  returns S_OK when the TTRS has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetRepresentedCylinderTTRS"></a><a name="GetRepresentedCylinderTTRS(CATITTRS**)"></a> <dt> o <b>GetRepresentedCylinderTTRS</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRepresentedCylinderTTRS</b>(<td><script type="text/javascript"> activateLink('CATITTRS','CATITTRS**')</script> <td><tt>opiRepresentedCylinderTTRS</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the represented TTRS of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiRepresentedCylinderTTRS</tt>
   <dd>   Represented TTRS of the extended cylinder
  returns S_OK when the TTRS has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetStartPoint"></a><a name="GetStartPoint(CATMathPoint&amp;)"></a> <dt> o <b>GetStartPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStartPoint</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>oStartPoint</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the start point of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartPoint</tt>
   <dd>   start point of the extended cylinder
  returns S_OK when the point has been correctly retrieved, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetDiameter"></a><a name="SetDiameter(double&amp;)"></a> <dt> o <b>SetDiameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDiameter</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iDiameter</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the diameter of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDiameter</tt>
   <dd>   Diameter of the extended cylinder
  returns S_OK when the diameter has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetEndPoint"></a><a name="SetEndPoint(CATMathPoint&amp;)"></a> <dt> o <b>SetEndPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetEndPoint</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iEndPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the end point of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEndPoint</tt>
   <dd>   End point of the extended cylinder
  returns S_OK when the point has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetLength"></a><a name="SetLength(double&amp;)"></a> <dt> o <b>SetLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLength</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iLength</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the length of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLength</tt>
   <dd>   Length of the extended cylinder
  returns S_OK when the length has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetOffset"></a><a name="SetOffset(double&amp;)"></a> <dt> o <b>SetOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOffset</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iOffset</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the offset of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffset</tt>
   <dd>   offset of the extended cylinder
  returns S_OK when the offset has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetPosition"></a><a name="SetPosition(CATMathPoint&amp;)"></a> <dt> o <b>SetPosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPosition</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the center point of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd>   canter point of the extended cylinder
  returns S_OK when the point has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetStartPoint"></a><a name="SetStartPoint(CATMathPoint&amp;)"></a> <dt> o <b>SetStartPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetStartPoint</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iStartPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the start point of the extended cylinder.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartPoint</tt>
   <dd>   start point of the extended cylinder
  returns S_OK when the point has been correctly set, 
  returns E_FAIL otherwise.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATITPSExtendedCylinder.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTPSBaseUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

