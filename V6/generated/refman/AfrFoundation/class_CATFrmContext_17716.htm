<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AfrFoundation Class CATFrmContext</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AfrFoundation.htm" href="../AfrFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AfrFoundation";	}
		function getCurrentObjectName() { 
 	return "CATFrmContext"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AfrFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CATFrmContext</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFrmContext_17716','CATFrmContext','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFrmContext</b>
</p>
<p>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATFrmContext()"><b>CATFrmContext</b></a>()
<dd>  <dt> o 
    <a href="#~CATFrmContext()"><b>~CATFrmContext</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDeclareCBEvent(FrmContextModified)"><b>CATDeclareCBEvent</b></a>(FrmContextModified)
<dd>  This event is sent each time a transaction ends.
 <dt> o 
    <a href="#GetActiveEditorList()"><b>GetActiveEditorList</b></a>()
<dd>  Retrieves the list of open editors.
 <dt> o 
    <a href="#GetContext()"><b>GetContext</b></a>()
<dd>  Retrieves the pointer on the Application Frame context singleton.
 <dt> o 
    <a href="#GetEditor()"><b>GetEditor</b></a>()
<dd>  Retrieves the current editor pointer.
 <dt> o 
    <a href="#GetEditorList()"><b>GetEditorList</b></a>()
<dd>  Retrieves the list of open editors.
 <dt> o 
    <a href="#GetNextWorkbenchName()"><b>GetNextWorkbenchName</b></a>()
<dd>  Retrieves the next workbench name.
 <dt> o 
    <a href="#GetNextWorkshopName()"><b>GetNextWorkshopName</b></a>()
<dd>  Retrieves the next workshop name.
 <dt> o 
    <a href="#GetPreviousWorkbenchName()"><b>GetPreviousWorkbenchName</b></a>()
<dd>  Retrieves the previous workbench name.
 <dt> o 
    <a href="#GetPreviousWorkshopName()"><b>GetPreviousWorkshopName</b></a>()
<dd>  Retrieves the previous workshop name.
 <dt> o 
    <a href="#GetTransaction()"><b>GetTransaction</b></a>()
<dd>  Retrieves the current transaction status.
 <dt> o 
    <a href="#GetWindow()"><b>GetWindow</b></a>()
<dd>  Retrieves the current window pointer.
 <dt> o 
    <a href="#GetWorkbench()"><b>GetWorkbench</b></a>()
<dd>  Retrieves the current workbench pointer.
 <dt> o 
    <a href="#GetWorkbenchName()"><b>GetWorkbenchName</b></a>()
<dd>  Retrieves the current workbench name.
 <dt> o 
    <a href="#GetWorkshop()"><b>GetWorkshop</b></a>()
<dd>  Retrieves the current workshop pointer.
 <dt> o 
    <a href="#GetWorkshopName()"><b>GetWorkshopName</b></a>()
<dd>  Retrieves the current workshop name.
 <dt> o 
    <a href="#SetWindow(CATFrmWindow*)"><b>SetWindow</b></a>(CATFrmWindow*)
<dd>  Changes the current window.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATFrmContext"></a><a name="CATFrmContext()"></a> <dt> o <b>CATFrmContext</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFrmContext</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATFrmContext"></a><a name="~CATFrmContext()"></a> <dt> o <b>~CATFrmContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATFrmContext</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="CATDeclareCBEvent"></a><a name="CATDeclareCBEvent(FrmContextModified)"></a> <dt> o <b>CATDeclareCBEvent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDeclareCBEvent</b>(<td><script type="text/javascript"> activateLink('FrmContextModified','FrmContextModified')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 This event is sent each time a transaction ends.
</dl>
<a name="GetActiveEditorList"></a><a name="GetActiveEditorList()"></a> <dt> o <b>GetActiveEditorList</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATLISTP(CATFrmEditor)','CATLISTP(CATFrmEditor) *')</script>  <b>GetActiveEditorList</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of open editors. Please delete the list after use.  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the list of open editors
</dl>
</dl>
<a name="GetContext"></a><a name="GetContext()"></a> <dt> o <b>GetContext</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATFrmContext','CATFrmContext *')</script>  <b>GetContext</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the pointer on the Application Frame context singleton. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the pointer on the context
</dl>
</dl>
<a name="GetEditor"></a><a name="GetEditor()"></a> <dt> o <b>GetEditor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFrmEditor','const CATFrmEditor *')</script>  <b>GetEditor</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the current editor pointer. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the pointer on the editor
</dl>
</dl>
<a name="GetEditorList"></a><a name="GetEditorList()"></a> <dt> o <b>GetEditorList</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLISTP(CATFrmEditor)','CATLISTP(CATFrmEditor) *')</script>  <b>GetEditorList</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of open editors.
</dl>
<a name="GetNextWorkbenchName"></a><a name="GetNextWorkbenchName()"></a> <dt> o <b>GetNextWorkbenchName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','const CATString &')</script>  <b>GetNextWorkbenchName</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the next workbench name. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the next workbench name. Useful during a workbench transition.
</dl>
</dl>
<a name="GetNextWorkshopName"></a><a name="GetNextWorkshopName()"></a> <dt> o <b>GetNextWorkshopName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','const CATString &')</script>  <b>GetNextWorkshopName</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the next workshop name. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the next workshop name. Useful during a workshop transition.
</dl>
</dl>
<a name="GetPreviousWorkbenchName"></a><a name="GetPreviousWorkbenchName()"></a> <dt> o <b>GetPreviousWorkbenchName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','const CATString &')</script>  <b>GetPreviousWorkbenchName</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the previous workbench name. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the previous workbench name. Useful during a workbench transition
</dl>
</dl>
<a name="GetPreviousWorkshopName"></a><a name="GetPreviousWorkshopName()"></a> <dt> o <b>GetPreviousWorkshopName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','const CATString &')</script>  <b>GetPreviousWorkshopName</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the previous workshop name. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the previous workshop name. Useful during a workshop transition
</dl>
</dl>
<a name="GetTransaction"></a><a name="GetTransaction()"></a> <dt> o <b>GetTransaction</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','unsigned int')</script>  <b>GetTransaction</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the current transaction status. <b>Role</b>For example, GetTransaction() & CATFrmCtxWorkbench is TRUE whether a transaction is opened
 and the current workbench is being changed (and the change is not completely done).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the transaction status
</dl>
</dl>
<a name="GetWindow"></a><a name="GetWindow()"></a> <dt> o <b>GetWindow</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFrmWindow','const CATFrmWindow *')</script>  <b>GetWindow</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the current window pointer. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the pointer on the window
</dl>
</dl>
<a name="GetWorkbench"></a><a name="GetWorkbench()"></a> <dt> o <b>GetWorkbench</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCmdWorkbench','const CATCmdWorkbench *')</script>  <b>GetWorkbench</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the current workbench pointer. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the pointer on the context
</dl>
</dl>
<a name="GetWorkbenchName"></a><a name="GetWorkbenchName()"></a> <dt> o <b>GetWorkbenchName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','const CATString &')</script>  <b>GetWorkbenchName</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the current workbench name. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the current workbench name
</dl>
</dl>
<a name="GetWorkshop"></a><a name="GetWorkshop()"></a> <dt> o <b>GetWorkshop</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCmdWorkshop','const CATCmdWorkshop *')</script>  <b>GetWorkshop</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the current workshop pointer. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the pointer on the current workshop
</dl>
</dl>
<a name="GetWorkshopName"></a><a name="GetWorkshopName()"></a> <dt> o <b>GetWorkshopName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','const CATString &')</script>  <b>GetWorkshopName</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the current workshop name. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the workshop name
</dl>
</dl>
<a name="SetWindow"></a><a name="SetWindow(CATFrmWindow*)"></a> <dt> o <b>SetWindow</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWindow</b>(<td><script type="text/javascript"> activateLink('CATFrmWindow','CATFrmWindow*')</script> <td><tt>ipWindow</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Changes the current window. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipWindow</tt>
   <dd>   The window to set as current</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFrmContext.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAfrFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

