<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AfrFoundation Class CATAfrCheckHeaderAccessor</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AfrFoundation.htm" href="../AfrFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AfrFoundation";	}
		function getCurrentObjectName() { 
 	return "CATAfrCheckHeaderAccessor"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AfrFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CATAfrCheckHeaderAccessor</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAfrCheckHeaderAccessor_39778','CATAfrCheckHeaderAccessor','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAfrCheckHeaderAccessor</b>
</p>
<p>
<b><i> Class to handle a check header.</i></b><br>

 <b>Role</b>: A check header is a <script type="text/javascript"> activateLinkAnchor('CATCommandHeader','','CATCommandHeader') </script> which is represented  in a toolbar or in the menu bar as a check button. The <tt>CATAfrCheckHeaderAccessor</tt> class encapsulates
  the creation and the access to a check header instance. The class identifier (the argument of 
 the constructor) is also the check header identifier.
 <br><br><b>How to use this class ? </b>
 <p>A <tt>CATAfrCheckHeaderAccessor</tt> class instantiation creates a check header instance 
 only if the instance does not already exist in the command header list of the current 
 
<script type="text/javascript"> activateLinkAnchor('CATFrmEditor','','CATFrmEditor') </script>. <br>Each time you need an access on a check header instance, create an instance of the 
 <tt>CATAfrCheckHeaderAccessor</tt> class, 
 use its methods to modify or retrieve information on the check header instance, and then release
 the class instance.</p>
 <b>How to specify the check/uncheck behaviors ? </b> 
 <p>A check header has two states: check and uncheck. Specific behaviors are associated to its 
 two states by the means of two other 
<script type="text/javascript"> activateLinkAnchor('CATCommandHeader','','CATCommandHeader') </script> instances. One will be started  whether the check button turns to the "checked" state ( 
<script type="text/javascript"> activateLinkAnchor('','SetCheckCommand','SetCheckCommand') </script> ) and the other will  be started whether the check button turns to the "unchecked" state ( 
<script type="text/javascript"> activateLinkAnchor('','SetUncheckCommand','SetUncheckCommand') </script> ).  The behaviors are implemented in the commands called by these two command headers.</p>
 <p>However, the check/uncheck behaviors are not mandatory. You can create a check header only to have
 a header keeping a two position state. In this case, except the mandatory methods such 
 as the constructor and 
<script type="text/javascript"> activateLinkAnchor('','SetResourceFile','SetResourceFile') </script>, only  the 
<script type="text/javascript"> activateLinkAnchor('','IsChecked','IsChecked') </script> and the 
<script type="text/javascript"> activateLinkAnchor('','SetCheck','SetCheck') </script> methods are really important. </p>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAfrCheckHeaderAccessor(CATString&amp;)"><b>CATAfrCheckHeaderAccessor</b></a>(CATString&amp;)
<dd>   Constructs a CATAfrCheckHeaderAccessor.
 <dt> o 
    <a href="#~CATAfrCheckHeaderAccessor()"><b>~CATAfrCheckHeaderAccessor</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCheckCommand()"><b>GetCheckCommand</b></a>()
<dd>   Returns the command header identifier associated to the "check" state.
 <dt> o 
    <a href="#GetResourceFile()"><b>GetResourceFile</b></a>()
<dd>   Returns the resource file name associated to the check header.
 <dt> o 
    <a href="#GetUncheckCommand()"><b>GetUncheckCommand</b></a>()
<dd>   Returns the command header identifier associated to the "uncheck" state.
 <dt> o 
    <a href="#IsChecked()"><b>IsChecked</b></a>()
<dd>   Returns the check button state.
 <dt> o 
    <a href="#SetCheck(CATBoolean,CATBoolean)"><b>SetCheck</b></a>(CATBoolean,CATBoolean)
<dd>   Sets the state of the check button.
 <dt> o 
    <a href="#SetCheckCommand(CATString&amp;)"><b>SetCheckCommand</b></a>(CATString&amp;)
<dd>   Associates a command header to the "check" state.
 <dt> o 
    <a href="#SetResourceFile(CATString&amp;)"><b>SetResourceFile</b></a>(CATString&amp;)
<dd>   Associates a resource file name to the check header.
 <dt> o 
    <a href="#SetUncheckCommand(CATString&amp;)"><b>SetUncheckCommand</b></a>(CATString&amp;)
<dd>   Associates a command header to the "uncheck" state.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAfrCheckHeaderAccessor"></a><a name="CATAfrCheckHeaderAccessor(CATString&amp;)"></a> <dt> o <b>CATAfrCheckHeaderAccessor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAfrCheckHeaderAccessor</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iCheckHeaderIdentifier</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructs a CATAfrCheckHeaderAccessor.
 <br><b>Role</b>:This method creates, if it does not already exist, a check header instance 
 whose the name is iChechHeaderIdentifier. The check header instance pointer
 can be retrieved, as a @CATCommandHeader class instance, thanks to the 
 
<script type="text/javascript"> activateLinkAnchor('CATAfrGetCommandHeader','','CATAfrGetCommandHeader') </script> global function.  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCheckHeaderIdentifier</tt>
   <dd>  Identifier for the check header instance.</dd>
</dl>
</dl>
</dl>
<a name="~CATAfrCheckHeaderAccessor"></a><a name="~CATAfrCheckHeaderAccessor()"></a> <dt> o <b>~CATAfrCheckHeaderAccessor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAfrCheckHeaderAccessor</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCheckCommand"></a><a name="GetCheckCommand()"></a> <dt> o <b>GetCheckCommand</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','CATString &')</script>  <b>GetCheckCommand</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the command header identifier associated to the "check" state.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Identifier of the header.
</dl>
</dl>
<a name="GetResourceFile"></a><a name="GetResourceFile()"></a> <dt> o <b>GetResourceFile</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','CATString')</script>  <b>GetResourceFile</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the resource file name associated to the check header.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   Name of the resource file.
</dl>
</dl>
<a name="GetUncheckCommand"></a><a name="GetUncheckCommand()"></a> <dt> o <b>GetUncheckCommand</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','CATString &')</script>  <b>GetUncheckCommand</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the command header identifier associated to the "uncheck" state.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Identifier of the header.
</dl>
</dl>
<a name="IsChecked"></a><a name="IsChecked()"></a> <dt> o <b>IsChecked</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsChecked</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the check button state.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   FALSE for the unchecked state and TRUE for the checked state.
</dl>
</dl>
<a name="SetCheck"></a><a name="SetCheck(CATBoolean,CATBoolean)"></a> <dt> o <b>SetCheck</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCheck</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iChecked</tt><td><tt>=TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iStartCmd</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the state of the check button.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChecked</tt>
   <dd>  TRUE checks the buttons, FALSE unchecks it.
 </dd>
    <dt><tt> iStartCmd</tt>
   <dd>  TRUE starts the command corresponding to the new state, FALSE does not start the command.</dd>
</dl>
</dl>
</dl>
<a name="SetCheckCommand"></a><a name="SetCheckCommand(CATString&amp;)"></a> <dt> o <b>SetCheckCommand</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCheckCommand</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iChkCmdName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Associates a command header to the "check" state. 
 <br><b>Role</b>:The given command header will be started 
 each time the check button is checked.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChkCmdName</tt>
   <dd>  Identifier of the header.</dd>
</dl>
</dl>
</dl>
<a name="SetResourceFile"></a><a name="SetResourceFile(CATString&amp;)"></a> <dt> o <b>SetResourceFile</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetResourceFile</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iFileName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Associates a resource file name to the check header.
 <br><b>Role</b>: This method enables you to associate NLS resources to the check header
 instance. 
 <ul>
 <li>in <tt>iFileName</tt>.CATNls</li>
 <pre>
 iFileName.iCheckHeaderIdentifier.Help="Help text";
 iFileName.iCheckHeaderIdentifier.ShortHelp="Short help text";
 iFileName.iCheckHeaderIdentifier.LongHelp="Long help text";
 iFileName.iCheckHeaderIdentifier.Category="Categoty";
 </pre>
 <li>in <tt>iFileName</tt>.CATRsc</li>
 <pre>
 iFileName.iCheckHeaderIdentifier.Icon.Normal="Icon Name";
 iFileName.iCheckHeaderIdentifier.LongHelpId ="...";
 </pre>
 </ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFileName</tt>
   <dd>  Name of the resource file.</dd>
</dl>
</dl>
</dl>
<a name="SetUncheckCommand"></a><a name="SetUncheckCommand(CATString&amp;)"></a> <dt> o <b>SetUncheckCommand</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetUncheckCommand</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iUchkCmdName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Associates a command header to the "uncheck" state. 
 <br><b>Role</b>: The given command header will be started 
 each time the check button is unchecked.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUchkCmdName</tt>
   <dd>  Identifier of the header.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAfrCheckHeaderAccessor.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAfrFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

