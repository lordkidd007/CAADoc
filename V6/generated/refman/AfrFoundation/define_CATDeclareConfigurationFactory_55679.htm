<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AfrFoundation Macro CATDeclareConfigurationFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AfrFoundation.htm" href="../AfrFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AfrFoundation";	}
		function getCurrentObjectName() { 
 	return "CATDeclareConfigurationFactory"; } 
	function getCurrentType() { 
 	return "define"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AfrFoundation Macro CATDeclareConfigurationFactory</h1>
<pre>
Macro <b>CATDeclareConfigurationFactory</b> (Config)
</pre>
<b><i> Defines the header file of a workbench factory class.</i></b><br>

 <b>Role</b>: To create an instance of your workbench, you must define a factory 
 interface which derives from CATIGenericFactory.<br>
 This interface is implemented using a factory class as an extension of 
 the CATApplicationFrame class and is created by the two macros <tt>CATDeclareConfigurationFactory</tt> 
 and <script type="text/javascript"> activateLinkAnchor('CATImplementConfigurationFactory','','CATImplementConfigurationFactory') </script>.   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Config</tt>
   <dd>    The name of the workbench's class.This class must implement an interface which 
    derives from </dd>
<script type="text/javascript"> activateLinkAnchor('CATIWorkbench','','CATIWorkbench') </script>     <br>
    <br>
 <b>Example:</b> <tt>MyWorkbenchFactory</tt> is a class which implements the <tt>IMyWorkbenchFactory</tt> 
    factory interface, creates the <tt>MyWorkbench</tt> workbench and is defined in the
    shared library myModule.dll
 <pre> 
 1) The header file <tt>MyWorkbenchFactory.h</tt> must contain these two lines:

       #include "CATWorkshopConfigurationFactory.h"
       <b>CATDeclareConfigurationFactory</b>(MyWorkbench);

 2) The source file <tt>MyWorkbenchFactory.cpp</tt> must contain these lines:

       #include "MyWorkbench.h"
       #include "MyWorkbenchFactory.h"

       #include "TIE_IMyWorkbenchFactory.h"

       CATImplementConfigurationFactory(MyWorkbench, IMyWorkbenchFactory);

 3) To declare that CATApplicationFrame implements IMyWorkbenchFactory,  
       insert the following line in the <b>interface dictionary</b>:

       CATApplicationFrame    IMyWorkbenchFactory  myModule 

 4) To declare that the factory creates an instance of the MyWorkbench class, 
       insert the following line in the <b>factory dictionary</b>:
 
       MyWorkbench            IMyWorkbenchFactory      
 </pre>
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATImplementConfigurationFactory','','CATImplementConfigurationFactory') </script>, <script type="text/javascript"> activateLinkAnchor('CATIWorkbench','','CATIWorkbench') </script>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATWorkshopConfigurationFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAfrFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

