<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AfrFoundation Class CATAfrAccessFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AfrFoundation.htm" href="../AfrFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AfrFoundation";	}
		function getCurrentObjectName() { 
 	return "CATAfrAccessFactory"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AfrFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CATAfrAccessFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAfrAccessFactory_27171','CATAfrAccessFactory','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAfrAccessFactory</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AccessRelease(CATCmdAccess*)"><b>AccessRelease</b></a>(CATCmdAccess*)
<dd>  Releases an existing Access object.
 <dt> o 
    <a href="#AddAccessChild(CATCmdContainer*,CATCmdAccess*)"><b>AddAccessChild</b></a>(CATCmdContainer*,CATCmdAccess*)
<dd>  Adds a child to an access
 Use macro defined in CATCreateWorkshop.
 <dt> o 
    <a href="#AddToolbarView(CATCmdContainer*,int,enum ComponentPosition)"><b>AddToolbarView</b></a>(CATCmdContainer*,int,enum ComponentPosition)
<dd>  Adds a view to a CATCmdContainer object
 Use macro defined in CATCreateWorkshop.
 <dt> o 
    <a href="#CATAfrGetActiveSection()"><b>CATAfrGetActiveSection</b></a>()
<dd>  Get the name of the currently active section (the one displayed by the
 ActionBar).
 <dt> o 
    <a href="#CATAfrGetActiveSections(CATListOfCATString&amp;)"><b>CATAfrGetActiveSections</b></a>(CATListOfCATString&amp;)
<dd>  Get the name of the currently active sections (those displayed by the
 ActionBar).
 <dt> o 
    <a href="#CATAfrSetActiveSection(CATString&amp;)"><b>CATAfrSetActiveSection</b></a>(CATString&amp;)
<dd>  Set the given section by its name as active.
 <dt> o 
    <a href="#NewAccess(CATString,CATString)"><b>NewAccess</b></a>(CATString,CATString)
<dd>  Creates an access.
 <dt> o 
    <a href="#SetAccessAnchorName(CATCmdAccess*,CATString)"><b>SetAccessAnchorName</b></a>(CATCmdAccess*,CATString)
<dd>  Defines the anchor name for an access
 Use macro defined in CATCreateWorkshop.
 <dt> o 
    <a href="#SetAccessChild(CATCmdContainer*,CATCmdAccess*)"><b>SetAccessChild</b></a>(CATCmdContainer*,CATCmdAccess*)
<dd>  Defines the child of an access
 Use macro defined in CATCreateWorkshop.
 <dt> o 
    <a href="#SetAccessCommand(CATCmdStarter*,CATString)"><b>SetAccessCommand</b></a>(CATCmdStarter*,CATString)
<dd>  Defines the access command.
 <dt> o 
    <a href="#SetAccessNext(CATCmdAccess*,CATCmdAccess*)"><b>SetAccessNext</b></a>(CATCmdAccess*,CATCmdAccess*)
<dd>  Sets the following access.
 <dt> o 
    <a href="#SetAccessWeight(CATCmdAccess*,float)"><b>SetAccessWeight</b></a>(CATCmdAccess*,float)
<dd>  Set the access weight.
 <dt> o 
    <a href="#SetAddinMenu(CATCmdContainer*,CATCmdContainer*)"><b>SetAddinMenu</b></a>(CATCmdContainer*,CATCmdContainer*)
<dd>  Sets an addinmenu for the access
 Use macro defined in CATCreateWorkshop.
 <dt> o 
    <a href="#SetRepresentationType(CATCmdAccess*,CATString)"><b>SetRepresentationType</b></a>(CATCmdAccess*,CATString)
<dd>  Sets the representation type for an access.
 <dt> o 
    <a href="#SetWorkbenchHiddenToolbar(CATCmdWorkbench*,CATString)"><b>SetWorkbenchHiddenToolbar</b></a>(CATCmdWorkbench*,CATString)
<dd>  Hides a toolbar while in a workbench.
 <dt> o 
    <a href="#SetWorkbenchMenu(CATCmdContainer*,CATCmdContainer*)"><b>SetWorkbenchMenu</b></a>(CATCmdContainer*,CATCmdContainer*)
<dd>  Sets a menu for the workbench
 Use macro defined in CATCreateWorkshop.
 <dt> o 
    <a href="#SetWorkbenchToolbarStyle(CATCmdWorkbench*,CATAfrToolbarStyleDef)"><b>SetWorkbenchToolbarStyle</b></a>(CATCmdWorkbench*,CATAfrToolbarStyleDef)
<dd>  Defines toolbar's style for an access.
 <dt> o 
    <a href="#SetWorkbenchToolbarsExclusive(CATCmdWorkbench*)"><b>SetWorkbenchToolbarsExclusive</b></a>(CATCmdWorkbench*)
<dd>  Sets the toolbars for an access to be exclusive.
 <dt> o 
    <a href="#SetWorkbenchWithoutToolbar(CATCmdWorkbench*,CATString)"><b>SetWorkbenchWithoutToolbar</b></a>(CATCmdWorkbench*,CATString)
<dd>  Removes a toolbar while in a workbench.
 <dt> o 
    <a href="#SetWorkshopMenu(CATCmdContainer*,CATCmdContainer*)"><b>SetWorkshopMenu</b></a>(CATCmdContainer*,CATCmdContainer*)
<dd>  Sets a menu for the workshop
 Use macro defined in CATCreateWorkshop.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CATAfrToolbarStyleDef"><b>CATAfrToolbarStyleDef</b></a>
<dd>  Defines the button representation in the toolbars.
 <dt> o 
    <a href="#ComponentPosition"><b>ComponentPosition</b></a>
<dd>   Position of the toolbar in the application window.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AccessRelease"></a><a name="AccessRelease(CATCmdAccess*)"></a> <dt> o <b>AccessRelease</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>AccessRelease</b>(<td><script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script> <td><tt>variableName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Releases an existing Access object.
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="AddAccessChild"></a><a name="AddAccessChild(CATCmdContainer*,CATCmdAccess*)"></a> <dt> o <b>AddAccessChild</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>AddAccessChild</b>(<td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script> <td><tt>childName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a child to an access
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="AddToolbarView"></a><a name="AddToolbarView(CATCmdContainer*,int,enum ComponentPosition)"></a> <dt> o <b>AddToolbarView</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>AddToolbarView</b>(<td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>visibility</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('enum ComponentPosition','enum ComponentPosition')</script> <td><tt>position</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a view to a CATCmdContainer object
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="CATAfrGetActiveSection"></a><a name="CATAfrGetActiveSection()"></a> <dt> o <b>CATAfrGetActiveSection</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATString','CATString')</script>  <b>CATAfrGetActiveSection</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the name of the currently active section (the one displayed by the
 ActionBar).
 This function returns the name of the first section found that is active.

 To get all the active sections of the ActionBar, prefer using
 CATAfrGetActiveSections function.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    the name of the active section.
</dl>
</dl>
<a name="CATAfrGetActiveSections"></a><a name="CATAfrGetActiveSections(CATListOfCATString&amp;)"></a> <dt> o <b>CATAfrGetActiveSections</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>CATAfrGetActiveSections</b>(<td><script type="text/javascript"> activateLink('CATListOfCATString','CATListOfCATString&amp;')</script> <td><tt>o_activeSections</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the name of the currently active sections (those displayed by the
 ActionBar).

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> o_activeSections</tt>
   <dd>   the names of the active sections.</dd>
</dl>
</dl>
</dl>
<a name="CATAfrSetActiveSection"></a><a name="CATAfrSetActiveSection(CATString&amp;)"></a> <dt> o <b>CATAfrSetActiveSection</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>CATAfrSetActiveSection</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>i_name</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the given section by its name as active. The active section is the one
 displayed by the ActionBar.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> i_name</tt>
   <dd>   the name of the section to set active. If this name doesn't refer
   to a section, nothing happens.

 The fixed area can't be set as active as it's always displayed.</dd>
</dl>
</dl>
</dl>
<a name="NewAccess"></a><a name="NewAccess(CATString,CATString)"></a> <dt> o <b>NewAccess</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script>  <b>NewAccess</b>(<td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>className</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>objectName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates an access.
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetAccessAnchorName"></a><a name="SetAccessAnchorName(CATCmdAccess*,CATString)"></a> <dt> o <b>SetAccessAnchorName</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAccessAnchorName</b>(<td><script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>anchor</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the anchor name for an access
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetAccessChild"></a><a name="SetAccessChild(CATCmdContainer*,CATCmdAccess*)"></a> <dt> o <b>SetAccessChild</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAccessChild</b>(<td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script> <td><tt>childName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the child of an access
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetAccessCommand"></a><a name="SetAccessCommand(CATCmdStarter*,CATString)"></a> <dt> o <b>SetAccessCommand</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAccessCommand</b>(<td><script type="text/javascript"> activateLink('CATCmdStarter','CATCmdStarter*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>command</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the access command...
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetAccessNext"></a><a name="SetAccessNext(CATCmdAccess*,CATCmdAccess*)"></a> <dt> o <b>SetAccessNext</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAccessNext</b>(<td><script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script> <td><tt>nextName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the following access...
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetAccessWeight"></a><a name="SetAccessWeight(CATCmdAccess*,float)"></a> <dt> o <b>SetAccessWeight</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAccessWeight</b>(<td><script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script> <td><tt>i_pAccess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float')</script> <td><tt>i_weight</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the access weight.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> i_pAccess</tt>
   <dd>   the CATCmdAccess object on which to set the weight.

 </dd>
    <dt><tt> i_weight</tt>
   <dd>   the weight value to associate to the given CATCmdAccess object.</dd>
</dl>
</dl>
</dl>
<a name="SetAddinMenu"></a><a name="SetAddinMenu(CATCmdContainer*,CATCmdContainer*)"></a> <dt> o <b>SetAddinMenu</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAddinMenu</b>(<td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>menu</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets an addinmenu for the access
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetRepresentationType"></a><a name="SetRepresentationType(CATCmdAccess*,CATString)"></a> <dt> o <b>SetRepresentationType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetRepresentationType</b>(<td><script type="text/javascript"> activateLink('CATCmdAccess','CATCmdAccess*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>RepresentationType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the representation type for an access.
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetWorkbenchHiddenToolbar"></a><a name="SetWorkbenchHiddenToolbar(CATCmdWorkbench*,CATString)"></a> <dt> o <b>SetWorkbenchHiddenToolbar</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWorkbenchHiddenToolbar</b>(<td><script type="text/javascript"> activateLink('CATCmdWorkbench','CATCmdWorkbench*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>TbName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Hides a toolbar while in a workbench.
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetWorkbenchMenu"></a><a name="SetWorkbenchMenu(CATCmdContainer*,CATCmdContainer*)"></a> <dt> o <b>SetWorkbenchMenu</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWorkbenchMenu</b>(<td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>menu</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets a menu for the workbench
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetWorkbenchToolbarStyle"></a><a name="SetWorkbenchToolbarStyle(CATCmdWorkbench*,CATAfrToolbarStyleDef)"></a> <dt> o <b>SetWorkbenchToolbarStyle</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWorkbenchToolbarStyle</b>(<td><script type="text/javascript"> activateLink('CATCmdWorkbench','CATCmdWorkbench*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAfrToolbarStyleDef','CATAfrToolbarStyleDef')</script> <td><tt>style</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines toolbar's style for an access...
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetWorkbenchToolbarsExclusive"></a><a name="SetWorkbenchToolbarsExclusive(CATCmdWorkbench*)"></a> <dt> o <b>SetWorkbenchToolbarsExclusive</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWorkbenchToolbarsExclusive</b>(<td><script type="text/javascript"> activateLink('CATCmdWorkbench','CATCmdWorkbench*')</script> <td><tt>variableName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the toolbars for an access to be exclusive....
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetWorkbenchWithoutToolbar"></a><a name="SetWorkbenchWithoutToolbar(CATCmdWorkbench*,CATString)"></a> <dt> o <b>SetWorkbenchWithoutToolbar</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWorkbenchWithoutToolbar</b>(<td><script type="text/javascript"> activateLink('CATCmdWorkbench','CATCmdWorkbench*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>TbName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a toolbar while in a workbench.
 Use macro defined in CATCreateWorkshop.h
</dl>
<a name="SetWorkshopMenu"></a><a name="SetWorkshopMenu(CATCmdContainer*,CATCmdContainer*)"></a> <dt> o <b>SetWorkshopMenu</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWorkshopMenu</b>(<td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>variableName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*')</script> <td><tt>menu</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets a menu for the workshop
 Use macro defined in CATCreateWorkshop.h
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CATAfrToolbarStyleDef"> <dt> o <b>CATAfrToolbarStyleDef</b>
<dl>
  <dd>
<pre>
enum <b>CATAfrToolbarStyleDef</b> {
  Icons,
  Text
}
</pre>
 Defines the button representation in the toolbars.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Icons</tt>
   <dd>  Each button in all toolbars of the workbench are represented by an icon.
 <br>Icons are defined in the CATRsc file of the header.  
 </dd>
    <dt><tt> Text</tt>
   <dd>  Each button in all toolbars of the workbench are represented by a text. 
  <br>The text is the title of the button. See the CATNls file of the header.</dd>
</dl>
</dl>
</dl>
<a name="ComponentPosition"> <dt> o <b>ComponentPosition</b>
<dl>
  <dd>
<pre>
enum <b>ComponentPosition</b> {
  CATAfrTop,
  CATAfrBottom,
  CATAfrLeft,
  CATAfrRight,
  CATAfrUnDock,
  CATAfrCompassWest
}
</pre>
  Position of the toolbar in the application window.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATAfrUnDock</tt>
   <dd>    The toolbar is undocked. 
 </dd>
    <dt><tt> CATAfrBottom</tt>
   <dd>     The toolbar is docked at the bottom of the application window 
 </dd>
    <dt><tt> CATAfrTop</tt>
   <dd>    The toolbar is docked at the top of the application window
 </dd>
    <dt><tt> CATAfrLeft</tt>
   <dd>    The toolbar is docked at the left of the application window
 </dd>
    <dt><tt> CATAfrRight</tt>
   <dd>    The toolbar is docked at the right of the application window
 </dd>
    <dt><tt> CATAfrCompassWest</tt>
   <dd>    The toolbar is docked on the west side of the compass</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAfrAccessFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAfrFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

