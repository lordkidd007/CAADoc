<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AfrFoundation Class CATAfrCommandHeaderRep</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AfrFoundation.htm" href="../AfrFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AfrFoundation";	}
		function getCurrentObjectName() { 
 	return "CATAfrCommandHeaderRep"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AfrFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CATAfrCommandHeaderRep</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAfrCommandHeaderRep_32369','CATAfrCommandHeaderRep','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATAfrCommandHeaderRep</b>
</p>
<p>
<b><i> Base class to create a customized representation for a command header.</i></b><br>

 <b>Role:</b>This class is the base class to create a customized representation
 for a <script type="text/javascript"> activateLinkAnchor('CATCommandHeader','','CATCommandHeader') </script> class. This customized command header must  derive from the 
<script type="text/javascript"> activateLinkAnchor('CATAfrDialogCommandHeader','','CATAfrDialogCommandHeader') </script> class, and must implement the 
<script type="text/javascript"> activateLinkAnchor('CATIAfrCommandHeaderRep','','CATIAfrCommandHeaderRep') </script> interface. This interface contains three methods to overload the default representation of the command header into a toolbar, 
 the menubar or a contextual menu. In most cases, only one method creates an instance
 of a class deriving from <tt>CATAfrCommandHeaderRep</tt>, and the two others 
 create nothing. 
 <p>The 
<script type="text/javascript"> activateLinkAnchor('','Build','Build') </script> method is automatically called just after the instantiation of the class deriving from <tt>CATAfrCommandHeaderRep</tt>. This method generally 
 creates dialog object, whose the dialog parent is the first argument of the constructor, 
 and that you retrieve with the 
<script type="text/javascript"> activateLinkAnchor('','GetDialogParent','GetDialogParent') </script> method.</p> <p>It is strongly recommended to read User Interfaces articles about 
 command header into the CAA Encyclopedia before to creating such classes. You will learn
 how to manage the multi-representation, and more generally how to "refresh" all the 
 instances of the representations.</p>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAfrCommandHeaderRep(CATDialog*,CATString&amp;)"><b>CATAfrCommandHeaderRep</b></a>(CATDialog*,CATString&amp;)
<dd>  Constructs a customized representation for a command header.
 <dt> o 
    <a href="#~CATAfrCommandHeaderRep()"><b>~CATAfrCommandHeaderRep</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Build()"><b>Build</b></a>()
<dd>  Creates the customized representation.
 <dt> o 
    <a href="#GetDialogParent(CATDialog**)"><b>GetDialogParent</b></a>(CATDialog**)
<dd>  Retrieves the dialog parent.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAfrCommandHeaderRep"></a><a name="CATAfrCommandHeaderRep(CATDialog*,CATString&amp;)"></a> <dt> o <b>CATAfrCommandHeaderRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAfrCommandHeaderRep</b>(<td> const <script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iParent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iCommandName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a customized representation for a command header.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd> The Dialog parent of dialog objects created by the </dd>
<script type="text/javascript"> activateLinkAnchor('','Build','Build') </script> method.  
    <dt><tt> iCommandName</tt>
   <dd> The name of the command. It is the argument of the </dd>
<script type="text/javascript"> activateLinkAnchor('CATCommand','','CATCommand') </script> class constructor. This name can be the same for all instances of the current class.
</dl>
</dl>
</dl>
<a name="~CATAfrCommandHeaderRep"></a><a name="~CATAfrCommandHeaderRep()"></a> <dt> o <b>~CATAfrCommandHeaderRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAfrCommandHeaderRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Build"></a><a name="Build()"></a> <dt> o <b>Build</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Build</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the customized representation.
 <br><b>Role:</b>This method instantiates Dialog objects whose the dialog parent is
 the value returned by the 
<script type="text/javascript"> activateLinkAnchor('','GetDialogParent','GetDialogParent') </script> method.
</dl>
<a name="GetDialogParent"></a><a name="GetDialogParent(CATDialog**)"></a> <dt> o <b>GetDialogParent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDialogParent</b>(<td> const <script type="text/javascript"> activateLink('CATDialog','CATDialog**')</script> <td><tt>ioParent</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the dialog parent.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioParent</tt>
   <dd> The first argument of the </dd>
<script type="text/javascript"> activateLinkAnchor('','CATAfrCommandHeaderRep','CATAfrCommandHeaderRep') </script> constructor.
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAfrCommandHeaderRep.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAfrFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

