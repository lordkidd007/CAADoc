<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AfrFoundation Class CATAfrCommandHeader</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AfrFoundation.htm" href="../AfrFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AfrFoundation";	}
		function getCurrentObjectName() { 
 	return "CATAfrCommandHeader"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AfrFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CATAfrCommandHeader</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAfrCommandHeader_26439','CATAfrCommandHeader','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAfrCommandHeader</b>
</p>
<p>
<b><i> Class to create a command header.</i></b><br>

 <b>Role</b>: Each command you want to make available in your workshop or workbench 
 must have a command header. It holds the necessary information to load the command, 
 such as the name of the shared library in which the 
 command's executable code is located, the name of the command class, and the data to pass 
 to the command's code when this command becomes the current one. 
 <p>The command header has 
 resources for each command  to display, such as the command name shown to the end user, 
 its ToolTip displayed in a balloon, its help message, and its icon. This enables the 
 workshop or workbench to be  displayed, that is loaded in memory, without any of its 
 commands being itself loaded, except the default one, spares memory space, and improves 
 performance. The end user can  see the icons in the toolbars, the items in the menu bar, 
 can ask for help on a given command, without the command being loaded. It is only when 
 he/she clicks on the menu item or on the icon that the command code is actually loaded.</p></p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATCreateCommandHeader(CATString&amp;,CATString&amp;,CATString&amp;,void*,CATString&amp;,CATFrmState)"><b>CATCreateCommandHeader</b></a>(CATString&amp;,CATString&amp;,CATString&amp;,void*,CATString&amp;,CATFrmState)
<dd>  Constructs a command header.
 <dt> o 
    <a href="#CATCreateDE2CommandHeader(CATString&amp;,CATString&amp;,CATFrmState)"><b>CATCreateDE2CommandHeader</b></a>(CATString&amp;,CATString&amp;,CATFrmState)
<dd>  Constructs a command header for a DE² state command.
 <dt> o 
    <a href="#CATGetCommandHeader(CATString&amp;)"><b>CATGetCommandHeader</b></a>(CATString&amp;)
<dd>  Gets a pointer to a command header.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CATCreateCommandHeader"></a><a name="CATCreateCommandHeader(CATString&amp;,CATString&amp;,CATString&amp;,void*,CATString&amp;,CATFrmState)"></a> <dt> o <b>CATCreateCommandHeader</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown *')</script>  <b>CATCreateCommandHeader</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iHeaderID</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iLoadName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iClassName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iArgument</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iResourceFileName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFrmState','CATFrmState')</script> <td><tt>iState</tt><td><tt>= CATFrmAvailable</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a command header. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeaderID</tt>
   <dd>     The identifier of the header. It is the <tt>command</tt> argument of the <tt>
     SetAccessCommand </tt> macro.
 </dd>
    <dt><tt> iLoadName</tt>
   <dd>    The name of the shared library where <tt>iClassName</tt> is.
 </dd>
    <dt><tt> iClassName</tt>
   <dd>    The name of the <tt> CATCommand </tt> class.
 </dd>
    <dt><tt> iArgument</tt>
   <dd>    The argument of the <tt> CATCommand </tt> class.
 </dd>
    <dt><tt> iResourceFileName</tt>
   <dd>    The name of the resource file.
 </dd>
    <dt><tt> iState</tt>
   <dd>    The CATCommandHeader state.
    <br><b>Legal values</b>: 
       <li> CATFrmAvailable (The default value) </li>
       <li> CATFrmUnavailable </li>
 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCommand','','CATCommand') </script>, <script type="text/javascript"> activateLinkAnchor('SetAccessCommand','','SetAccessCommand') </script>, <script type="text/javascript"> activateLinkAnchor('CATFrmState','','CATFrmState') </script>
</dl>
</dl>
<a name="CATCreateDE2CommandHeader"></a><a name="CATCreateDE2CommandHeader(CATString&amp;,CATString&amp;,CATFrmState)"></a> <dt> o <b>CATCreateDE2CommandHeader</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown *')</script>  <b>CATCreateDE2CommandHeader</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iHeaderID</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iResourceFileName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFrmState','CATFrmState')</script> <td><tt>iState</tt><td><tt>= CATFrmAvailable</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a command header for a DE² state command. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeaderID</tt>
   <dd>     The identifier of the header. It is the <tt>command</tt> argument of the <tt>
     SetAccessCommand </tt> macro.
 </dd>
    <dt><tt> iResourceFileName</tt>
   <dd>    The name of the resource file.
 </dd>
    <dt><tt> iState</tt>
   <dd>    The CATCommandHeader state.
    <br><b>Legal values</b>: 
       <li> CATFrmAvailable (The default value) </li>
       <li> CATFrmUnavailable </li>
 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCommand','','CATCommand') </script>, <script type="text/javascript"> activateLinkAnchor('SetAccessCommand','','SetAccessCommand') </script>, <script type="text/javascript"> activateLinkAnchor('CATFrmState','','CATFrmState') </script>
</dl>
</dl>
<a name="CATGetCommandHeader"></a><a name="CATGetCommandHeader(CATString&amp;)"></a> <dt> o <b>CATGetCommandHeader</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown *')</script>  <b>CATGetCommandHeader</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iHeaderID</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets a pointer to a command header. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeaderID</tt>
   <dd>     The identifier of the command header.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 		Returns the command header if it exists or NULL if the identifier is not an existing command header identifier.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAfrCommandHeader.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAfrFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

