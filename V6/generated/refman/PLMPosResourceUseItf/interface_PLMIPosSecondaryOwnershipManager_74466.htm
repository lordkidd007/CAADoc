<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMPosResourceUseItf Interface PLMIPosSecondaryOwnershipManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMPosResourceUseItf.htm" href="../PLMPosResourceUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMPosResourceUseItf";	}
		function getCurrentObjectName() { 
 	return "PLMIPosSecondaryOwnershipManager"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMPosResourceUseItf Interface PLMIPosSecondaryOwnershipManager</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMIPosSecondaryOwnershipManager_74466','PLMIPosSecondaryOwnershipManager','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMIPosSecondaryOwnershipManager</b>
</p>
<p>
<b><i> The Interface to manage Secondary Ownership Vectors.</i></b><br>

 <br><b>Role</b>: This interface is used to manage the Secondary Ownership Vector of any Objects.
 <br>IMPORTANT NOTE about the implementation: each instance of this interface maintains its own cache.
 This means that all Secondary Ownership Vectors managed by a given instance of this interface are invalidated as soon as this instance is destroyed.
 As a consequence, Applications should maintain one instance of this interface during the entirety of their processing of Secondary Ownership Vectors (for example as a member of the main class).
 <br>A pointer to an instance of this interface can be retrieved using method <script type="text/javascript"> activateLinkAnchor('GetSecondaryOwnershipManager','','GetSecondaryOwnershipManager') </script>.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAllValidAccesses(CATIAdpPLMIdentificator*,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)"><b>GetAllValidAccesses</b></a>(CATIAdpPLMIdentificator*,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)
<dd>  Gets the list of all Accesses that can be granted on a given Object.
 <dt> o 
    <a href="#GetAllValidOrganizationCollabSpaceCouples(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)"><b>GetAllValidOrganizationCollabSpaceCouples</b></a>(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)
<dd>  Gets all {Organization, Collab Space} couples from all Security Contexts currently defined in the database.
 <dt> o 
    <a href="#LoadSecondaryOwnershipVector(CATIAdpPLMIdentificator*,PLMIPosSecondaryOwnershipVector_var&amp;)"><b>LoadSecondaryOwnershipVector</b></a>(CATIAdpPLMIdentificator*,PLMIPosSecondaryOwnershipVector_var&amp;)
<dd>  Gets the Secondary Ownership Vector of the given Object.
 <dt> o 
    <a href="#SaveSecondaryOwnershipVector(CATIAdpPLMIdentificator*,CATIAdpPLMErrorReviewer*&amp;)"><b>SaveSecondaryOwnershipVector</b></a>(CATIAdpPLMIdentificator*,CATIAdpPLMErrorReviewer*&amp;)
<dd>  Sets the Secondary Ownership Vector of the given Object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAllValidAccesses"></a><a name="GetAllValidAccesses(CATIAdpPLMIdentificator*,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>GetAllValidAccesses</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllValidAccesses</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>oAccessList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>oNLSAccessList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of all Accesses that can be granted on a given Object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>	the PLM identifier of the Object
 </dd>
    <dt><tt> oAccessList</tt>
   <dd>	the list of all Accesses usable to define the Secondary Ownership Vector on this object </dd>
<script type="text/javascript"> activateLinkAnchor('PLMIPosSecondaryOwnershipVector','','PLMIPosSecondaryOwnershipVector') </script>  <br>Implementation note: the first element in this list is the default Access i.e. the one that gives the lowest privileges. 
 
    <dt><tt> oNLSAccessList</tt>
   <dd>	the list of all Accesses as NLS strings for localized display
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 		S_OK	Accesses successfully retrieved
		<br>E_INVALIDARG Not a valid object
		<br>E_FAIL	An unexpected error occurred
</dl>
</dl>
<a name="GetAllValidOrganizationCollabSpaceCouples"></a><a name="GetAllValidOrganizationCollabSpaceCouples(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>GetAllValidOrganizationCollabSpaceCouples</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllValidOrganizationCollabSpaceCouples</b>(<td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>oOrganizations</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>oCollabSpaces</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets all {Organization, Collab Space} couples from all Security Contexts currently defined in the database.
 <br>In other words, {oOrganizations[1],oCollabSpaces[1]} represents any Security Contexts identified by the name pattern *.oOrganizations[1].oCollabSpaces[1], and so on.
 <br>Only such valid {Organization, Collab Space} couples can be used to define Secondary Ownership Vector of type Security Context 
<script type="text/javascript"> activateLinkAnchor('PLMIPosSecondaryOwnershipVector','','PLMIPosSecondaryOwnershipVector') </script> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrganizations</tt>
   <dd>  the list of Organizations given by their identifier (value of attribute V_id of PLM entity PLMPosOrganizationRef)
 </dd>
    <dt><tt> oCollabSpaces</tt>
   <dd>  the list of Collab Spaces given by their identifier (value of attribute V_id of PLM entity PLMPosProjectRef)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 		S_OK	{Organization, Collab Space} couples successfully retrieved
		<br>E_FAIL	An unexpected error occurred
</dl>
</dl>
<a name="LoadSecondaryOwnershipVector"></a><a name="LoadSecondaryOwnershipVector(CATIAdpPLMIdentificator*,PLMIPosSecondaryOwnershipVector_var&amp;)"></a> <dt> o <b>LoadSecondaryOwnershipVector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LoadSecondaryOwnershipVector</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMIPosSecondaryOwnershipVector_var','PLMIPosSecondaryOwnershipVector_var&amp;')</script> <td><tt>oSOV</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Secondary Ownership Vector of the given Object.
 <br>If not already loaded this method retrieves the Secondary Ownership Vector from the database.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>	the PLM identifier of the Object
 </dd>
    <dt><tt> oSOV</tt>
   <dd>	the Secondary Ownership Vector </dd>
<script type="text/javascript"> activateLinkAnchor('PLMIPosSecondaryOwnershipVector','','PLMIPosSecondaryOwnershipVector') </script> 
  <dt> <b>Returns:</b> 
  <dd> 		S_OK	Secondary Ownership Vector successfully retrieved
		<br>E_INVALIDARG Not a valid object
		<br>E_FAIL	An unexpected error occurred
</dl>
</dl>
</dl>
<a name="SaveSecondaryOwnershipVector"></a><a name="SaveSecondaryOwnershipVector(CATIAdpPLMIdentificator*,CATIAdpPLMErrorReviewer*&amp;)"></a> <dt> o <b>SaveSecondaryOwnershipVector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SaveSecondaryOwnershipVector</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*&amp;')</script> <td><tt>oErrors</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Secondary Ownership Vector of the given Object.
 <br>If changes have been done on the Secondary Ownership Vector of this object using 
<script type="text/javascript"> activateLinkAnchor('PLMIPosSecondaryOwnershipVector','UpdateSecondaryOwnershipItem','PLMIPosSecondaryOwnershipVector.UpdateSecondaryOwnershipItem') </script> then this method propagates them to the database. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>	the PLM identifier of the Object
 </dd>
    <dt><tt> oErrors</tt>
   <dd>	the Errors to be reviewed when E_FAIL is returned
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 		S_OK	Secondary Ownership Vector successfully saved
		<br>E_INVALIDARG Not a valid object
		<br>E_FAIL	An error occurred
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMIPosSecondaryOwnershipManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDPLMPosResourceUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

