<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMPosResourceUseItf Interface PLMIPosSecondaryOwnershipVector</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMPosResourceUseItf.htm" href="../PLMPosResourceUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMPosResourceUseItf";	}
		function getCurrentObjectName() { 
 	return "PLMIPosSecondaryOwnershipVector"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMPosResourceUseItf Interface PLMIPosSecondaryOwnershipVector</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMIPosSecondaryOwnershipVector_72118','PLMIPosSecondaryOwnershipVector','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMIPosSecondaryOwnershipVector</b>
</p>
<p>
<b><i> The Interface to scan and update the Secondary Ownership Vector of an Object.</i></b><br>

 <br><b>Role</b>: This interface is used to scan and update the Secondary Ownership Vector of an Object.
 <br>A pointer to this interface can be retrieved using method <script type="text/javascript"> activateLinkAnchor('PLMIPosSecondaryOwnershipManager','LoadSecondaryOwnershipVector','PLMIPosSecondaryOwnershipManager.LoadSecondaryOwnershipVector') </script>.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#NextSecondaryOwnershipItem(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>NextSecondaryOwnershipItem</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Gets the next Secondary Ownership Item in this Vector, that is, gets an Access granted on the object to a P&O entity.
 <dt> o 
    <a href="#UpdateSecondaryOwnershipItem(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIAdpPLMErrorReviewer*&amp;)"><b>UpdateSecondaryOwnershipItem</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIAdpPLMErrorReviewer*&amp;)
<dd>  Updates a Secondary Ownership Item in this Vector, that is, grants some Access to a given P&O entity.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="NextSecondaryOwnershipItem"></a><a name="NextSecondaryOwnershipItem(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>NextSecondaryOwnershipItem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>NextSecondaryOwnershipItem</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oUser</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oOrganization</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oCollabSpace</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oAccess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oComment</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the next Secondary Ownership Item in this Vector, that is, gets an Access granted on the object to a P&O entity.
 <br>The scan of the Vector ends when this method returns S_FALSE.
 <br>If the Access is granted to a User (User Ownership) only oUser is returned as the P&O entity.
 <br>If the Access is granted to an Organization (Organization Ownership) only oOrganization is returned as the P&O entity.
 <br>If the Access is granted to a Collab Space (Collab Space Ownership) only oCollabSpace is returned as the P&O entity.
 <br>If the Access is granted to a family of Security Contexts (Security Context Ownership) only {oOrganization,oCollabSpace} are returned as the P&O entity (meaning any Security Contexts like *.oOrganization.oCollabSpace).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUser</tt>
   <dd>        Attribute V_id of the User granted with the returned Access when applicable. Empty otherwise.
 </dd>
    <dt><tt> oOrganization</tt>
   <dd>        Attribute V_id of the Organization granted with the returned Access when applicable. Empty otherwise.
 </dd>
    <dt><tt> oCollabSpace</tt>
   <dd>        Attribute V_id of the Collab Space granted with the returned Access when applicable. Empty otherwise.
 </dd>
    <dt><tt> oAccess</tt>
   <dd>        The Access granted to the returned P&O entity.
 </dd>
    <dt><tt> oComment</tt>
   <dd>        An informative string about this Item.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	S_OK : iteration successful
 <br> S_FALSE : end of Vector reached (and all returned values are empty)
 <br> E_FAIL : iteration failed
</dl>
</dl>
<a name="UpdateSecondaryOwnershipItem"></a><a name="UpdateSecondaryOwnershipItem(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIAdpPLMErrorReviewer*&amp;)"></a> <dt> o <b>UpdateSecondaryOwnershipItem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UpdateSecondaryOwnershipItem</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iUser</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iOrganization</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCollabSpace</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAccess</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iComment</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*&amp;')</script> <td><tt>oErrors</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Updates a Secondary Ownership Item in this Vector, that is, grants some Access to a given P&O entity.
 <br>To grant Access to a User (User Ownership) only iUser should be given as the P&O entity.
 <br>To grant Access to an Organization (Organization Ownership) only iOrganization should be given as the P&O entity.
 <br>To grant Access to a Collab Space (Collab Space Ownership) only iCollabSpace should be given as the P&O entity.
 <br>To grant Access to a family of Security Contexts (Security Context Ownership) only {iOrganization, iCollabSpace} should be given as the P&O entity (meaning any Security Contexts like *.iOrganization.iCollabSpace). Valid couples can be retrieved using 
<script type="text/javascript"> activateLinkAnchor('PLMIPosSecondaryOwnershipManager','GetAllValidOrganizationCollabSpaceCouples','PLMIPosSecondaryOwnershipManager.GetAllValidOrganizationCollabSpaceCouples') </script>. <br>Any other combination of P&O entity will result in an E_INVALIDARG return code.
 <br>If the item does not exist then the item is added to this Vector.
 <br>If the item already exists and iAccess is not empty then the item's Access is updated if needed.
 <br>If the item already exists and iAccess is empty then the item is removed from this Vector.
 <br>Any successful operation results in the iterator on the Vector to be reset to its starting position.
 <br>To commit all the operations to the database method 
<script type="text/javascript"> activateLinkAnchor('PLMIPosSecondaryOwnershipManager','SaveSecondaryOwnershipVector','PLMIPosSecondaryOwnershipManager.SaveSecondaryOwnershipVector') </script> should be called. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUser</tt>
   <dd>        Attribute V_id of the User to be granted with the given Access.
 </dd>
    <dt><tt> iOrganization</tt>
   <dd>        Attribute V_id of the Organization to be granted with the given Access.
 </dd>
    <dt><tt> iCollabSpace</tt>
   <dd>        Attribute V_id of the Collab Space to be granted with the given Access.
 </dd>
    <dt><tt> iAccess</tt>
   <dd>        The Access to be granted to the given P&O entity. Valid Accesses can be retrieved using method </dd>
<script type="text/javascript"> activateLinkAnchor('PLMIPosSecondaryOwnershipManager','GetAllValidAccesses','PLMIPosSecondaryOwnershipManager.GetAllValidAccesses') </script>. 
    <dt><tt> iComment</tt>
   <dd>        An informative string about this Item.
 </dd>
    <dt><tt> oErrors</tt>
   <dd>	     Errors to be reviewed only when return code is different from S_OK. Ignore otherwise.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 	S_OK : update successful
 <br> S_FALSE : no update done
 <br> E_INVALIDARG : not a valid Item or Access
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMIPosSecondaryOwnershipVector.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDPLMPosResourceUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

