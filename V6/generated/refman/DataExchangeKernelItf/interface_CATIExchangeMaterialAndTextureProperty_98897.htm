<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DataExchangeKernelItf Interface CATIExchangeMaterialAndTextureProperty</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DataExchangeKernelItf.htm" href="../DataExchangeKernelItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DataExchangeKernelItf";	}
		function getCurrentObjectName() { 
 	return "CATIExchangeMaterialAndTextureProperty"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DataExchangeKernelItf Interface CATIExchangeMaterialAndTextureProperty</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIExchangeMaterialAndTextureProperty_98897','CATIExchangeMaterialAndTextureProperty','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIExchangeMaterialAndTextureProperty</b>
</p>
<p>
<b><i> Interface to exchange material and texture information.</i></b><br>

 <b>Role</b>: This interface provides an XCAD acces to material and texture information that may 
 be defined on an XCAD tessellated representation.
 If an implementer component of CATIExchangeTessellatedRepresentation wants to give access to
 material and texture information it must also implement this interface.
 <br>Available from CATIA V5R21.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIExchangeTessellatedRepresentation','','CATIExchangeTessellatedRepresentation') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFaceNbTextureCoordinates(void*,unsigned int&amp;)"><b>GetFaceNbTextureCoordinates</b></a>(void*,unsigned int&amp;)
<dd>  Retrieves the number of texture coordinates arrays defined on a node.
 <dt> o 
    <a href="#GetFaceTextureCoordinates(void*,unsigned int,int&amp;,float**)"><b>GetFaceTextureCoordinates</b></a>(void*,unsigned int,int&amp;,float**)
<dd>  Retrieves one texture coordinates array on a node.
 <dt> o 
    <a href="#GetGlobalMaterialAndTexture(unsigned int,CATIExchangeMaterialAndTexture_var&amp;)"><b>GetGlobalMaterialAndTexture</b></a>(unsigned int,CATIExchangeMaterialAndTexture_var&amp;)
<dd>  Retrieves one "global" material and texture description.
 <dt> o 
    <a href="#GetGlobalNbMaterialAndTextures(unsigned int&amp;)"><b>GetGlobalNbMaterialAndTextures</b></a>(unsigned int&amp;)
<dd>  Retrieves the number of material and texture defined globaly on the geometry.
 <dt> o 
    <a href="#GetNodeMaterialAndTexture(void*,unsigned int,CATIExchangeMaterialAndTexture_var&amp;)"><b>GetNodeMaterialAndTexture</b></a>(void*,unsigned int,CATIExchangeMaterialAndTexture_var&amp;)
<dd>  Retrieves one material and texture description on a node.
 <dt> o 
    <a href="#GetNodeNbMaterialAndTextures(void*,unsigned int&amp;)"><b>GetNodeNbMaterialAndTextures</b></a>(void*,unsigned int&amp;)
<dd>  Retrieves the number of material and texture defined on a node.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFaceNbTextureCoordinates"></a><a name="GetFaceNbTextureCoordinates(void*,unsigned int&amp;)"></a> <dt> o <b>GetFaceNbTextureCoordinates</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFaceNbTextureCoordinates</b>(<td> const <script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iNodeID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oNbTextureCoordinates</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of texture coordinates arrays defined on a node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNodeID</tt>
   <dd>				the node's ID .
              <b>Legal values</b>: A valid Node ID as returned by CATIExchangeTessellatedRepresentation::GetChild() method.<br>
                                   The node type must be NOD_GP and the GP_TYPE must be one of GP_Face, GP_Plane,	GP_Cylinder,
			                         GP_Cone or	GP_Sphere.
 </dd>
    <dt><tt> oNbTextureCoordinates</tt>
   <dd>				the number of texture coordinates defined on the node.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if everything is fine, E_INVALIDARG if the Node ID is invalid or it's type not NOD_GP or the GP type is not one expected, E_FAIL otherwise.
</dl>
</dl>
<a name="GetFaceTextureCoordinates"></a><a name="GetFaceTextureCoordinates(void*,unsigned int,int&amp;,float**)"></a> <dt> o <b>GetFaceTextureCoordinates</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFaceTextureCoordinates</b>(<td> const <script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iNodeID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iTextCoordIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oUVDim</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oUVs</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves one texture coordinates array on a node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNodeID</tt>
   <dd>				the node's ID .
              <b>Legal values</b>: A valid Node ID as returned by CATIExchangeTessellatedRepresentation::GetChild() method.<br>
                                   The node type must be NOD_GP and the GP_TYPE must be one of GP_Face, GP_Plane,	GP_Cylinder,
			                         GP_Cone or	GP_Sphere.
 </dd>
    <dt><tt> iTextCoordIndex</tt>
   <dd>				the index of the wanted texture coordinates array of the node.
              <b>Legal values</b>: From 0 to the number of texture coordinates array - 1.
 </dd>
    <dt><tt> oUVDim</tt>
   <dd>              The number of coordinates per vertex (1, 2 or 3)
 </dd>
    <dt><tt> oUVs</tt>
   <dd>				The array of texture coordinates.<br>
              It must NOT be deleted by the caller program.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if everything is fine, E_INVALIDARG if the Node ID is invalid or it's type not NOD_GP or the GP type is not one expected, E_FAIL otherwise.
</dl>
</dl>
<a name="GetGlobalMaterialAndTexture"></a><a name="GetGlobalMaterialAndTexture(unsigned int,CATIExchangeMaterialAndTexture_var&amp;)"></a> <dt> o <b>GetGlobalMaterialAndTexture</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGlobalMaterialAndTexture</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iMaterialIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIExchangeMaterialAndTexture_var','CATIExchangeMaterialAndTexture_var&amp;')</script> <td><tt>oMaterial</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves one "global" material and texture description.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaterialIndex</tt>
   <dd>				the index of the wanted "global" material.
              <b>Legal values</b>: From 0 to the number of "global" material - 1.
 </dd>
    <dt><tt> oMaterial</tt>
   <dd>				the material description.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if everything is fine, E_FAIL otherwise.
</dl>
</dl>
<a name="GetGlobalNbMaterialAndTextures"></a><a name="GetGlobalNbMaterialAndTextures(unsigned int&amp;)"></a> <dt> o <b>GetGlobalNbMaterialAndTextures</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGlobalNbMaterialAndTextures</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oNbMaterials</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of material and texture defined globaly on the geometry.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbMaterials</tt>
   <dd>				the number of "global" materials.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if everything is fine, E_FAIL otherwise.
</dl>
</dl>
<a name="GetNodeMaterialAndTexture"></a><a name="GetNodeMaterialAndTexture(void*,unsigned int,CATIExchangeMaterialAndTexture_var&amp;)"></a> <dt> o <b>GetNodeMaterialAndTexture</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNodeMaterialAndTexture</b>(<td> const <script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iNodeID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iMaterialIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIExchangeMaterialAndTexture_var','CATIExchangeMaterialAndTexture_var&amp;')</script> <td><tt>oMaterial</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves one material and texture description on a node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNodeID</tt>
   <dd>				the node's ID .
              <b>Legal values</b>: A valid Node ID as returned by CATIExchangeTessellatedRepresentation::GetChild() method.<br>
                                   The node type must be neither NOD_ContainerNode or NOD_GP nor NOD_CoordinateSystem.
 </dd>
    <dt><tt> iMaterialIndex</tt>
   <dd>				the index of the wanted material of the node.
              <b>Legal values</b>: From 0 to the number of node material - 1.
 </dd>
    <dt><tt> oNbMaterials</tt>
   <dd>				the material description.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if everything is fine, E_INVALIDARG if the Node ID is invalid or it's type is NOD_ContainerNode or NOD_GP or NOD_CoordinateSystem, E_FAIL otherwise.
</dl>
</dl>
<a name="GetNodeNbMaterialAndTextures"></a><a name="GetNodeNbMaterialAndTextures(void*,unsigned int&amp;)"></a> <dt> o <b>GetNodeNbMaterialAndTextures</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNodeNbMaterialAndTextures</b>(<td> const <script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iNodeID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oNbMaterials</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of material and texture defined on a node.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNodeID</tt>
   <dd>				the node's ID .
              <b>Legal values</b>: A valid Node ID as returned by CATIExchangeTessellatedRepresentation::GetChild() method.<br>
                                   The node type must be neither NOD_ContainerNode nor NOD_GP nor NOD_CoordinateSystem.
 </dd>
    <dt><tt> oNbMaterials</tt>
   <dd>				the number of materials defined on the node.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if everything is fine, E_INVALIDARG if the Node ID is invalid or it's type is NOD_ContainerNode or NOD_GP or NOD_CoordinateSystem ,E_FAIL otherwise.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIExchangeMaterialAndTextureProperty.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DataExchangeKernelItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

