<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecHarnessItf Interface CATIEhiBranch</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ElecHarnessItf.htm" href="../ElecHarnessItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ElecHarnessItf";	}
		function getCurrentObjectName() { 
 	return "CATIEhiBranch"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ElecHarnessItf Interface CATIEhiBranch</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIEhiBranch_20604','CATIEhiBranch','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIEhiBranch</b>
</p>
<p>
<b><i> Interface to manage a branch .</i></b><br>

 <b>Role<b/>:A branch is a group of segments.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBendRadius(double&amp;)"><b>GetBendRadius</b></a>(double&amp;)
<dd>  Method to get the Bend Radius of the Branch.
 <dt> o 
    <a href="#GetCreationMode(CATUnicodeString&amp;)"><b>GetCreationMode</b></a>(CATUnicodeString&amp;)
<dd>  Method to get build method used to compute the branch.
 <dt> o 
    <a href="#GetHarnessBundle(CATBaseUnknown**)"><b>GetHarnessBundle</b></a>(CATBaseUnknown**)
<dd>  Retrieves the harness bundle of the branch.
 <dt> o 
    <a href="#GetLength(double&amp;)"><b>GetLength</b></a>(double&amp;)
<dd>  Method to retreive the Branch length.
 <dt> o 
    <a href="#GetRouteGeometry(CATBody**)"><b>GetRouteGeometry</b></a>(CATBody**)
<dd>  Retrieves the topology of Branch geometry.
 <dt> o 
    <a href="#GetSlackValue(double&amp;)"><b>GetSlackValue</b></a>(double&amp;)
<dd>  Method to get the slack value on Branch (when branch is created in "Slack" mode).
 <dt> o 
    <a href="#IsLocalSlackApplied(CATBoolean&amp;)"><b>IsLocalSlackApplied</b></a>(CATBoolean&amp;)
<dd>  Method to identify whether Local Slack is applied at least on a single portion of the Branch.
 <dt> o 
    <a href="#ListLocalSlackValues(CATListValCATICkeParm_var&amp;)"><b>ListLocalSlackValues</b></a>(CATListValCATICkeParm_var&amp;)
<dd>  Method to retrieve the Local Slack values on a branch
 
 <dt> o 
    <a href="#ListProtectiveCovering(CATListValCATBaseUnknown_var**)"><b>ListProtectiveCovering</b></a>(CATListValCATBaseUnknown_var**)
<dd>  Retrieves the list of Protective Coverings on the branch.
 <dt> o 
    <a href="#ListSegments(CATListValCATBaseUnknown_var**)"><b>ListSegments</b></a>(CATListValCATBaseUnknown_var**)
<dd>  Lists the segments contained in the branch in an ordered list.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBendRadius"></a><a name="GetBendRadius(double&amp;)"></a> <dt> o <b>GetBendRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBendRadius</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oBendRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to get the Bend Radius of the Branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBendRadius</tt>
   <dd> (in MKS unit)   bend radius of the branch.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while retreiving bend radius.</dd>
     <dd>Branch may be routed on an external curve.</dd>
   </dl>
</dl>
</dl>
<a name="GetCreationMode"></a><a name="GetCreationMode(CATUnicodeString&amp;)"></a> <dt> o <b>GetCreationMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCreationMode</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>ostrCreationMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to get build method used to compute the branch.
 "Slack" , "Length", "Bend" , "StraightBend" , "ConstrainedLength" or "CorneredPolyline".

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ostrCreationMode</tt>
   <dd>   creation mode of the branch.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while retreiving creation mode.</dd>
   </dl>
</dl>
</dl>
<a name="GetHarnessBundle"></a><a name="GetHarnessBundle(CATBaseUnknown**)"></a> <dt> o <b>GetHarnessBundle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHarnessBundle</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>opHarnessBundle</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the harness bundle of the branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opHarnessBundle</tt>
   <dd>  the harness bundle.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>No error . </dd>
     <dt>E_FAIL </dt>
     <dd>Error.</dd>
   </dl>
</dl>
</dl>
<a name="GetLength"></a><a name="GetLength(double&amp;)"></a> <dt> o <b>GetLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLength</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oLengthValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to retreive the Branch length.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLengthValue</tt>
   <dd>   Length of the branch (in MKS unit).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while retreiving Branch Length.</dd>
   </dl>
</dl>
</dl>
<a name="GetRouteGeometry"></a><a name="GetRouteGeometry(CATBody**)"></a> <dt> o <b>GetRouteGeometry</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRouteGeometry</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody**')</script> <td><tt>opBodyRoute</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the topology of Branch geometry.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opBodyRoute</tt>
   <dd>  the Body of Branch Route geometry.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>No error . </dd>
     <dt>E_FAIL </dt>
     <dd>Error.</dd>
   </dl>
</dl>
</dl>
<a name="GetSlackValue"></a><a name="GetSlackValue(double&amp;)"></a> <dt> o <b>GetSlackValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSlackValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oSlackValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to get the slack value on Branch (when branch is created in "Slack" mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSlackValue</tt>
   <dd>   slack value on the branch (in percentage).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while retreiving slack value.</dd>
   </dl>
</dl>
</dl>
<a name="IsLocalSlackApplied"></a><a name="IsLocalSlackApplied(CATBoolean&amp;)"></a> <dt> o <b>IsLocalSlackApplied</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsLocalSlackApplied</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>obIfLocalSlackApplied</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to identify whether Local Slack is applied at least on a single portion of the Branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> obIfLocalSlackApplied</tt>
   <dd>   Output boolean to know if local slack applied or not.
   <dl>
     <dt>TRUE</dt>
     <dd>if local slack is applied on at least one portion between route points in branch. </dd>
     <dt>FALSE</dt>
     <dd>If there is no local slack applied on any portion of the branch.</dd>
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    A HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>if local slack is applied on at least one portion between route points in branch. </dd>
     <dt>E_FAIL</dt>
     <dd>If there is no local slack applied on any portion of the branch.</dd>
   </dl>
</dl>
</dl>
<a name="ListLocalSlackValues"></a><a name="ListLocalSlackValues(CATListValCATICkeParm_var&amp;)"></a> <dt> o <b>ListLocalSlackValues</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListLocalSlackValues</b>(<td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>ohListLocalSlackValues</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to retrieve the Local Slack values on a branch
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohListLocalSlack</tt>
   <dd>   returns the LocalSlack values at all route points of the branch
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    A HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>if local slack values are retrieved.</dd>
     <dt>E_FAIL</dt>
     <dd>Failure to retrieve local slack values. </dd>
   </dl>
</dl>
</dl>
<a name="ListProtectiveCovering"></a><a name="ListProtectiveCovering(CATListValCATBaseUnknown_var**)"></a> <dt> o <b>ListProtectiveCovering</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListProtectiveCovering</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var**')</script> <td><tt>oListOfProtectiveCoverings</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of Protective Coverings on the branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfProtectiveCoverings</tt>
   <dd>  the list of Protective Coverings on this Branch,NULL if NO coverings present..
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>No error . </dd>
     <dt>E_FAIL </dt>
     <dd>Error.</dd>
   </dl>
</dl>
</dl>
<a name="ListSegments"></a><a name="ListSegments(CATListValCATBaseUnknown_var**)"></a> <dt> o <b>ListSegments</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListSegments</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var**')</script> <td><tt>oListOfSegments</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Lists the segments contained in the branch in an ordered list. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfSegments</tt>
   <dd>  The list of segments in the branch
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>No error occured while searching segments. </dd>
     <dt>E_FAIL </dt>
     <dd>Error. </dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEhiBranch.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATEhiInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

