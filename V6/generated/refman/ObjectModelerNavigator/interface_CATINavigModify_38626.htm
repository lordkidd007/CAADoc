<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerNavigator Interface CATINavigModify</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ObjectModelerNavigator.htm" href="../ObjectModelerNavigator.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ObjectModelerNavigator";	}
		function getCurrentObjectName() { 
 	return "CATINavigModify"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ObjectModelerNavigator Interface CATINavigModify</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATINavigModify_38626','CATINavigModify','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../ObjectModelerNavigator/class_CATNodeExtension_38013.htm">CATNodeExtension</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATINavigModify</b>
</p>
<p>
<b><i> Interface to customize tree node visualization.</i></b><br>

 <br><b>Role:</b>This interface enables you to customize the visual aspect of nodes associated with
 your object. If to be visualized in object tree, an object must implement the <script type="text/javascript"> activateLinkAnchor('CATINavigateObject','','CATINavigateObject') </script>  interface, this interface implementation is not mandatory. Nodes associated with an object have a
 default implementation of this interface, such as the 
<script type="text/javascript"> activateLinkAnchor('CATINavigElement','','CATINavigElement') </script> and 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','','CATIGraphNode') </script> interfaces. <br><br>This implementation, full or partial, is not done on the object itself but on an object, named 
 <tt>MyObject<b>_node</b></tt>, where <tt>MyObject</tt> is the name of the object. 
 <br><br>To implement 
<script type="text/javascript"> activateLinkAnchor('','UpdateElem','UpdateElem') </script> or 
<script type="text/javascript"> activateLinkAnchor('','ModifyShortHelp','ModifyShortHelp') </script> ,  it can be useful to retrieve a pointer to the object implementing 
<script type="text/javascript"> activateLinkAnchor('CATINavigateObject','','CATINavigateObject') </script>.  From a node, there are two steps:
 <ol>
    <li> Call 
<script type="text/javascript"> activateLinkAnchor('CATINavigElement','GetAssociatedInstance','CATINavigElement.GetAssociatedInstance') </script> , to retrieve a 
<script type="text/javascript"> activateLinkAnchor('CATNavigInstance','','CATNavigInstance') </script>       pointer (It is already the 
<script type="text/javascript"> activateLinkAnchor('','UpdateElem','UpdateElem') </script> input) </li>    <li> Then, call 
<script type="text/javascript"> activateLinkAnchor('CATNavigInstance','GetReference','CATNavigInstance.GetReference') </script>  to retrieve a pointer on the         object associated with the node.</li>
 </ol>
 <p><b>BOA information</b>: this interface CANNOT be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#IsSelected()"><b>IsSelected</b></a>()
<dd>  Defines whether the node has ever been selected.
 <dt> o 
    <a href="#ModifyShortHelp(CATUnicodeString&amp;)"><b>ModifyShortHelp</b></a>(CATUnicodeString&amp;)
<dd>  Defines the node short help.
 <dt> o 
    <a href="#Select(int)"><b>Select</b></a>(int)
<dd>  Defines whether the node is selectable or not.
 <dt> o 
    <a href="#UpdateElem(CATNavigInstance*)"><b>UpdateElem</b></a>(CATNavigInstance*)
<dd>  Defines node graphic representation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="IsSelected"></a><a name="IsSelected()"></a> <dt> o <b>IsSelected</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsSelected</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines whether the node has ever been selected. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The selecting state.
    <br><b>Legal values</b>: 
     <ul>
      <li>0: The node is not selected</li>
      <li>Otherwise : selected</li>
     </ul>
</dl>
</dl>
<a name="ModifyShortHelp"></a><a name="ModifyShortHelp(CATUnicodeString&amp;)"></a> <dt> o <b>ModifyShortHelp</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ModifyShortHelp</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>ioText</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the node short help.
 <br><b>Role</b>: When you pass over a node a short help is
 displayed. The short help text is the text associated with the node. This text
 is either the name returned by the 
<script type="text/javascript"> activateLinkAnchor('CATINavigateObject','GetIdentificators','CATINavigateObject.GetIdentificators') </script> method, or if defined, the text set thanks to the 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','SetText','CATIGraphNode.SetText') </script> method. <br>This method enables you to modify this default behavior defined by
 
<script type="text/javascript"> activateLinkAnchor('CATNodeExtension','ModifyShortHelp','CATNodeExtension.ModifyShortHelp') </script>. You have three  possibilities:
   <ul>
    <li>do not overwrite this method: you have the
        default behavior: short help + text associated with the node, </li>.
    <li>Overwrite it and return <tt>E_FAIL</tt>: no short help will be displayed,</li>
    <li>Overwrite it and return <tt>S_OK</tt>: <tt>ioText</tt> will be the displayed text.</li>
   </ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioText</tt>
   <dd>   The short help of the node. 
   <br>In input <tt>ioText</tt> is the text associated with the node.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The displaying state.
    <br><b>Legal values</b>: 
     <ul>
      <li>E_FAIL: no short help will be displayed</li>
      <li>S_OK : <tt>ioText</tt> will be displayed</li>
     </ul>
</dl>
</dl>
<a name="Select"></a><a name="Select(int)"></a> <dt> o <b>Select</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Select</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines whether the node is selectable or not.
 <br><b>Note:</b> This method enables you to control 
  the node selection. The default behavior brings the node selectionnable.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>   The selectable mode.
</dd>
</dl>
</dl>
</dl>
<a name="UpdateElem"></a><a name="UpdateElem(CATNavigInstance*)"></a> <dt> o <b>UpdateElem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>UpdateElem</b>(<td><script type="text/javascript"> activateLink('CATNavigInstance','CATNavigInstance*')</script> <td><tt>iInst</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines node graphic representation.
 <br><b>Role</b>:This method enables you to modify the default visual aspect of a node. By using
 the 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','','CATIGraphNode') </script> interface you can: <ul>
   <li>Modify the text ( 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','SetText','CATIGraphNode.SetText') </script> ): the default one is those returned        by 
<script type="text/javascript"> activateLinkAnchor('CATINavigateObject','GetIdentificators','CATINavigateObject.GetIdentificators') </script> ,</li>   <li>Modify the box color ( 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','SetColor','CATIGraphNode.SetColor') </script> ): the default color is blue , </li>   <li>Add an icon ( 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','SetPixelImage','CATIGraphNode.SetPixelImage') </script> ) , </li>   <li>...</li>  
 </ul>
 The 
<script type="text/javascript"> activateLinkAnchor('CATIGraphNode','','CATIGraphNode') </script> interface is natively implemented on your node. You use it in the <tt>UpdateElem</tt> implementation such as:
 <pre>
      CATIGraphNode *pIGraphNode = NULL ;
      HRESULT rc = QueryInterface(IID_CATIGraphNode,
                        (void**)&pIGraphNode);
      if ( SUCCEEDED(rc) )
      {
          pIGraphNode->SetXXX(..);
      }
 </pre>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInst</tt>
   <dd>   The navig instance associated with the node.
   <br>This parameter enables you to retrieve the component associated with the node and then 
   to get specific information from the component.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATINavigModify.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectModelerNavigator</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

