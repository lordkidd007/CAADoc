<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMatInterfaces Interface CATIMaterialReferenceFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMatInterfaces.htm" href="../CATMatInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMatInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIMaterialReferenceFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMatInterfaces Interface CATIMaterialReferenceFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMaterialReferenceFactory_55019','CATIMaterialReferenceFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMaterialReferenceFactory</b>
</p>
<p>
<b><i> Interface representing the factory of Material References.</i></b><br>

 <dl>
  <dt> Example: </dt>
  <dd> <pre class="code"> How to use it. <br> <code> <br>
  CATIMaterialReferenceFactory * piMatFact  =  NULL;  <br>
  CATMaterialTools::GetMaterialFactory( piMatFact ) ;<br>
  piMatFact -> CreateMaterialReference( ... ) ; <br>
  piMatFact -> Release() ; piMatFact = NULL ; <br>
 </code><br>
 </pre></dd>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('','','') </script>
<script type="text/javascript"> activateLinkAnchor('CATIMaterialReference','','CATIMaterialReference') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateMaterialReference(CATIType_var&amp;,CATIMaterialReference*&amp;,CATLISTV(CATICkeParm_var)*,CATIAdpEnvironment*)"><b>CreateMaterialReference</b></a>(CATIType_var&amp;,CATIMaterialReference*&amp;,CATLISTV(CATICkeParm_var)*,CATIAdpEnvironment*)
<dd>  Creates and returns a new Material Reference.
 <dt> o 
    <a href="#ListReferences(CATListValCATBaseUnknown_var&amp;)"><b>ListReferences</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Returns the list of materials in session.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateMaterialReference"></a><a name="CreateMaterialReference(CATIType_var&amp;,CATIMaterialReference*&amp;,CATLISTV(CATICkeParm_var)*,CATIAdpEnvironment*)"></a> <dt> o <b>CreateMaterialReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateMaterialReference</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIMaterialReference','CATIMaterialReference*&amp;')</script> <td><tt>opiMaterialReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATICkeParm_var)','CATLISTV(CATICkeParm_var)*')</script> <td><tt>ipListAttributes</tt><td><tt>= NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIAdpEnvironment','CATIAdpEnvironment*')</script> <td><tt>ipiEnv</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Creates and returns a new Material Reference.  <br>
 During the creation the initilization Business Logic is called to ensure all necessary attributes are valuated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   Type of material reference to create. Can be Core, Covering or a customized type.
 </dd>
    <dt><tt> opiMaterialReference</tt>
   <dd> [out, CATBaseUnknow#Release]		The created material reference.
 </dd>
    <dt><tt> iListAttributes</tt>
   <dd>   List of attributes to valuate on the created material reference (may overide values computed by BL) 
 </dd>
    <dt><tt> ipiEnv</tt>
   <dd>		The environment (if NULL, the current one is used).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd> The reference was successfully created.
   <dt>E_FAIL</dt><dd>The operation failed. Nothing created.
   </dl>
 
  <dt> Example: </dt>
  <dd> <pre class="code"> To create a CATIType. <br> <code> <br>
 CATIType_var spiCoreType = NULL_var ; <br>
 CATMaterialTools::GetMaterialCoreType( spiCoreType ) ; <br>
 </code> <br>
 </pre></dd>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('','','') </script>
<script type="text/javascript"> activateLinkAnchor('CATMaterialTools','','CATMaterialTools') </script>
</dl>
</dl>
<a name="ListReferences"></a><a name="ListReferences(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>ListReferences</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListReferences</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>ioReferencesList</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of materials in session.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioReferenceList</tt>
   <dd>		The list of material references in session. <br>
		If the list is not given empty, materials are added at the end of the list
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd> The list of materials was successfully returned.
   <dt>E_FAIL</dt><dd>The operation failed. Nothing returned.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMaterialReferenceFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMatInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

