<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMecModExtendItf Interface CATIVisuChildren</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMecModExtendItf.htm" href="../CATMecModExtendItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMecModExtendItf";	}
		function getCurrentObjectName() { 
 	return "CATIVisuChildren"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMecModExtendItf Interface CATIVisuChildren</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIVisuChildren_31206','CATIVisuChildren','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../CATMecModExtendItf/class_CATExtIVisuChildren_33801.htm">CATExtIVisuChildren</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIVisuChildren</b>
</p>
<p>
<b><i>  Interface to manage tree visualization.</i></b><br>

  <b>Role :</b>
  For a given model architecture, defines the corresponding visualization tree, 
  how the visual representations have to be aggregated.
 <p><b>BOA information</b>: this interface can be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page. 
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetChildrenToVisualizeBeforeAndAfterMyRep(CATListValCATBaseUnknown_var**,CATListValCATBaseUnknown_var**,CATUnicodeString&amp;)"><b>GetChildrenToVisualizeBeforeAndAfterMyRep</b></a>(CATListValCATBaseUnknown_var**,CATListValCATBaseUnknown_var**,CATUnicodeString&amp;)
<dd>  Gives the model children whose representations have to be aggregated 
 under the same father rep as the representation of this in the visualization tree.
 <dt> o 
    <a href="#GetChildrenToVisualizeUnderMyRep(CATListValCATBaseUnknown_var**,CATUnicodeString&amp;)"><b>GetChildrenToVisualizeUnderMyRep</b></a>(CATListValCATBaseUnknown_var**,CATUnicodeString&amp;)
<dd>  Gives the model children whose representations have to be aggregated
 under the representation of this in the visualization tree.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetChildrenToVisualizeBeforeAndAfterMyRep"></a><a name="GetChildrenToVisualizeBeforeAndAfterMyRep(CATListValCATBaseUnknown_var**,CATListValCATBaseUnknown_var**,CATUnicodeString&amp;)"></a> <dt> o <b>GetChildrenToVisualizeBeforeAndAfterMyRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetChildrenToVisualizeBeforeAndAfterMyRep</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var**')</script> <td><tt>oBefore</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var**')</script> <td><tt>oAfter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iViewContext</tt><td><tt>= MfDefault3DView</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gives the model children whose representations have to be aggregated 
 under the same father rep as the representation of this in the visualization tree.
 <br><b>Role : </b>. Use this method for children that have to be visualized independantly 
 (eg. independant highlight, no show behavior).
 Refer to the 
 
<script type="text/javascript"> activateLinkAnchor('CATExtIVisuChildren','GetChildrenToVisualizeBeforeAndAfterMyRep','CATExtIVisuChildren.GetChildrenToVisualizeBeforeAndAfterMyRep') </script>  method for details.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBefore</tt>
   <dd> : list of children whose reps have to be aggregated before the rep of this  in the visualization tree (eg. input of this).
 </dd>
    <dt><tt> oAfter</tt>
   <dd> : list of children whose reps have to be aggregated after the rep of this in the visualization tree (eg. output of this).
 </dd>
    <dt><tt> iViewContext</tt>
   <dd>    The view context. 
   <br><b>Legal values</b>:
   <ul>
    <li><tt>MfDefault3DView</tt>: The default 3D view</li>
    <li><tt>MfUnfoldedView</tt>: An unfolded view</li>
   </ul></dd>
</dl>
</dl>
</dl>
<a name="GetChildrenToVisualizeUnderMyRep"></a><a name="GetChildrenToVisualizeUnderMyRep(CATListValCATBaseUnknown_var**,CATUnicodeString&amp;)"></a> <dt> o <b>GetChildrenToVisualizeUnderMyRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetChildrenToVisualizeUnderMyRep</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var**')</script> <td><tt>oUnder</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iViewContext</tt><td><tt>= MfDefault3DView</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gives the model children whose representations have to be aggregated
 under the representation of this in the visualization tree.
 <br><b>Role : </b>. Use this method for objects (ex : feature sons) whose visualization has
 to follow the representation of this (eg. simultaneous highlight, no show of a whole model branch).
 Refer to the 
 
<script type="text/javascript"> activateLinkAnchor('CATExtIVisuChildren','GetChildrenToVisualizeUnderMyRep','CATExtIVisuChildren.GetChildrenToVisualizeUnderMyRep') </script>  method for details.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUnder</tt>
   <dd> : list of children whose reps have to be aggregated under the rep of this  in the visualization tree.
 </dd>
    <dt><tt> iViewContext</tt>
   <dd>    The view context. 
   <br><b>Legal values</b>:
   <ul>
    <li><tt>MfDefault3DView</tt>: The default 3D view</li>
    <li><tt>MfUnfoldedView</tt>: An unfolded view</li>
   </ul></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIVisuChildren.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModExtendItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

