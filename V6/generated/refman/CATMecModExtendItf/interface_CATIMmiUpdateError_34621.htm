<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMecModExtendItf Interface CATIMmiUpdateError</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMecModExtendItf.htm" href="../CATMecModExtendItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMecModExtendItf";	}
		function getCurrentObjectName() { 
 	return "CATIMmiUpdateError"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMecModExtendItf Interface CATIMmiUpdateError</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMmiUpdateError_34621','CATIMmiUpdateError','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMmiUpdateError</b>
</p>
<p>
<b><i> Interface to manage update error associated with mechanical features.</i></b><br>

 <b>Role</b>: This interface allows users to retrieve an update error associated 
 with a mechanical feature. A feature has an update error when its build has failed. 
 <p>To know if the feature has an update error, the first method to use is the 
 <script type="text/javascript"> activateLinkAnchor('CATIMmiUseUpdateError','HasAnUpdateError','CATIMmiUseUpdateError.HasAnUpdateError') </script> method. This method is always available.  If there is an error, then you can use the 
<script type="text/javascript"> activateLinkAnchor('CATIMmiUseUpdateError','GetFullDiagnostic','CATIMmiUseUpdateError.GetFullDiagnostic') </script> method to get more details on the error. </p>
 See 
<script type="text/javascript"> activateLinkAnchor('CATIMmiErrUpdate','','CATIMmiErrUpdate') </script> to manage the Update Error associated with the feature.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetMmiUpdateError(CATError*&amp;)"><b>GetMmiUpdateError</b></a>(CATError*&amp;)
<dd>  Retrieves the update error associated with the feature.
 <dt> o 
    <a href="#SetMmiUpdateError(CATError*&amp;)"><b>SetMmiUpdateError</b></a>(CATError*&amp;)
<dd>  Interface to associate an update error with the current feature.
 <dt> o 
    <a href="#UnsetMmiUpdateError()"><b>UnsetMmiUpdateError</b></a>()
<dd>  Unsets the update error associated with the feature.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetMmiUpdateError"></a><a name="GetMmiUpdateError(CATError*&amp;)"></a> <dt> o <b>GetMmiUpdateError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMmiUpdateError</b>(<td><script type="text/javascript"> activateLink('CATError','CATError*&amp;')</script> <td><tt>oUpdateError</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the update error associated with the feature. 
 <br><b>Role:</b>This method returns the update error associated with the mechanical feature. It is
 important to check the existance of the error by the 
<script type="text/javascript"> activateLinkAnchor('CATIMmiUpdateError','HasAnUpdateError','CATIMmiUpdateError.HasAnUpdateError') </script> method.  The error is not a persistent data. It means that in batch mode, when the Part's document is opened, the
 error is not associated with the feature until an update has been explicitely done. 
 <br>
 <b>Lifecycle deviation rule</b>: do not release the returned pointer
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUpdateError</tt>
   <dd> The update error. See </dd>
<script type="text/javascript"> activateLinkAnchor('CATIMmiErrUpdate','','CATIMmiErrUpdate') </script> to manage the Update Error 
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> Error retrieved.
   <br><code>E_FAIL</code> otherwise.
 
  <dt> <b>Returns:</b> 
  <dd> 
</dl>
</dl>
</dl>
<a name="SetMmiUpdateError"></a><a name="SetMmiUpdateError(CATError*&amp;)"></a> <dt> o <b>SetMmiUpdateError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMmiUpdateError</b>(<td><script type="text/javascript"> activateLink('CATError','CATError*&amp;')</script> <td><tt>iUpdateError</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Interface to associate an update error with the current feature.
 <br><b>Role:</b>It enables to give an update error to the feature during its Build process.
 This method must only be used in a 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','Build','CATIFmFeatureBehaviorCustomization.Build') </script> method.  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUpdateError</tt>
   <dd> The update error to be associated with the current feature.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> Association succeeded.
   <br><code>E_FAIL</code> otherwise.
</dl>
</dl>
<a name="UnsetMmiUpdateError"></a><a name="UnsetMmiUpdateError()"></a> <dt> o <b>UnsetMmiUpdateError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnsetMmiUpdateError</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Unsets the update error associated with the feature.
 This method must be only used in a 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','Build','CATIFmFeatureBehaviorCustomization.Build') </script> method.  It should be called at the beginning of the Build method, it is useless to test if the feature has an error. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> Unset succeeded.
   <br><code>E_FAIL</code> otherwise.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMmiUpdateError.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModExtendItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

