<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATIAV4Interfaces Class CATV4iV4Spline</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATIAV4Interfaces.htm" href="../CATIAV4Interfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATIAV4Interfaces";	}
		function getCurrentObjectName() { 
 	return "CATV4iV4Spline"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATIAV4Interfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATV4iV4Spline</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATV4iV4Spline_23130','CATV4iV4Spline','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATV4iV4Spline</b>
</p>
<p>
<b><i> Class to construct objects that corresponds to V4 Spline.</i></b><br>

 <br><b>Role:</b> These objects are able to retrieve information about 
 the corresponding V4 Spline.
 This information concerns the mathematical definition and the description, of the V4 Spline</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATV4iV4Spline(CATBaseUnknown*)"><b>CATV4iV4Spline</b></a>(CATBaseUnknown*)
<dd>  Constructs a CATV4iV4Spline from a CATBaseUnknown.
 <dt> o 
    <a href="#CATV4iV4Spline(CATV4iV4Element*)"><b>CATV4iV4Spline</b></a>(CATV4iV4Element*)
<dd>  Constructs a CATV4iV4Spline from a CATV4iV4Element.
 <dt> o 
    <a href="#~CATV4iV4Spline()"><b>~CATV4iV4Spline</b></a>()
<dd>  Destructor of the CATV4iV4Spline.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetConstraintData(double*&amp;,int&amp;)"><b>GetConstraintData</b></a>(double*&amp;,int&amp;)
<dd>  Retrieves the address and the size of the V4 element's description.
 <dt> o 
    <a href="#GetMathematicalData(double*&amp;,int&amp;)"><b>GetMathematicalData</b></a>(double*&amp;,int&amp;)
<dd>  Retrieves the mathematic definition of an element.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATV4iV4Spline"></a><a name="CATV4iV4Spline(CATBaseUnknown*)"></a> <dt> o <b>CATV4iV4Spline</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATV4iV4Spline</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATV4iV4Spline from a CATBaseUnknown.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   the element that correspond to the v4 element</dd>
</dl>
</dl>
</dl>
<a name="CATV4iV4Spline"></a><a name="CATV4iV4Spline(CATV4iV4Element*)"></a> <dt> o <b>CATV4iV4Spline</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATV4iV4Spline</b>(<td> const <script type="text/javascript"> activateLink('CATV4iV4Element','CATV4iV4Element*')</script> <td><tt>iV4Element</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATV4iV4Spline from a CATV4iV4Element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iV4Element</tt>
   <dd>   the element that correspond to the v4 element</dd>
</dl>
</dl>
</dl>
<a name="~CATV4iV4Spline"></a><a name="~CATV4iV4Spline()"></a> <dt> o <b>~CATV4iV4Spline</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATV4iV4Spline</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor of the CATV4iV4Spline.
</dl>
 <h2>Methods</h2> <br>
<a name="GetConstraintData"></a><a name="GetConstraintData(double*&amp;,int&amp;)"></a> <dt> o <b>GetConstraintData</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetConstraintData</b>(<td><script type="text/javascript"> activateLink('double','double*&amp;')</script> <td><tt>oConstraintBlock</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oBlockLength</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the address and the size of the V4 element's description.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oConstraintBlock</tt>
   <dd> [out]   array 
 </dd>
    <dt><tt> oBlockLength</tt>
   <dd> [out]   The size of the V4 element description  having the type iDescriptionType
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <br><b>Legal values:</b>
   <ul><li>0 : no error </li>
       <li>1 : An error happened</li></ul>
</dl>
</dl>
<a name="GetMathematicalData"></a><a name="GetMathematicalData(double*&amp;,int&amp;)"></a> <dt> o <b>GetMathematicalData</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetMathematicalData</b>(<td><script type="text/javascript"> activateLink('double','double*&amp;')</script> <td><tt>oMathBlock</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oBlockLength</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the mathematic definition of an element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMathBlock</tt>
   <dd> [out]   The mathematical definition
 </dd>
    <dt><tt> oBlockLength</tt>
   <dd> [out]   The size of the mathematic block
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <br><b>Legal values:</b>
   <ul><li>0 : no error </li>
       <li>1 : An error occured</li></ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATV4iV4Spline.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATV4iV4Interfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

