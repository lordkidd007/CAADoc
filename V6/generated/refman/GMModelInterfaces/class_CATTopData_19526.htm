<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Class CATTopData</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATTopData"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATTopData</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATTopData_19526','CATTopData','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTopData</b>
</p>
<p>
<b><i> Class defining inputs of the topological operators.</i></b><br>

 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATSoftwareConfiguration','','CATSoftwareConfiguration') </script>, <script type="text/javascript"> activateLinkAnchor('CATCGMJournalList','','CATCGMJournalList') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATTopData()"><b>CATTopData</b></a>()
<dd>  Constructs a CATTopData.
 <dt> o 
    <a href="#CATTopData(CATTopData&amp;)"><b>CATTopData</b></a>(CATTopData&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATTopData(CATSoftwareConfiguration*,CATCGMJournalList*)"><b>CATTopData</b></a>(CATSoftwareConfiguration*,CATCGMJournalList*)
<dd>  Constructs a CATTopData.
 <dt> o 
    <a href="#~CATTopData()"><b>~CATTopData</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATCreateTopData(CATSoftwareConfiguration*)"><b>CATCreateTopData</b></a>(CATSoftwareConfiguration*)
<dd>  Constructs a CATTopData with a Software Configuration and a NULL Journal.
 <dt> o 
    <a href="#GetJournal()"><b>GetJournal</b></a>()
<dd>  Returns the pointer to the topological journal associated with <tt>this</tt> CATTopData.
 <dt> o 
    <a href="#GetSoftwareConfiguration()"><b>GetSoftwareConfiguration</b></a>()
<dd>   Returns the software configuration to be taken 
 into acccount by <tt>this</tt> data.
 <dt> o 
    <a href="#SetJournal(CATCGMJournalList*)"><b>SetJournal</b></a>(CATCGMJournalList*)
<dd>   Defines the topological journal to be taken 
 into acccount by <tt>this</tt> data.
 <dt> o 
    <a href="#SetSoftwareConfiguration(CATSoftwareConfiguration*)"><b>SetSoftwareConfiguration</b></a>(CATSoftwareConfiguration*)
<dd>   Defines the software configuration to be taken 
 into acccount by <tt>this</tt> data.
 <dt> o 
    <a href="#operator =(CATTopData&amp;)"><b>operator =</b></a>(CATTopData&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATTopData"></a><a name="CATTopData()"></a> <dt> o <b>CATTopData</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATTopData</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATTopData.
 <br>
 You must call the <tt>SetSoftwareConfiguration</tt> method afterwards, because a
 CATSoftwareConfiguration is mandatory for use.
</dl>
<a name="CATTopData"></a><a name="CATTopData(CATTopData&amp;)"></a> <dt> o <b>CATTopData</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATTopData</b>(<td> const <script type="text/javascript"> activateLink('CATTopData','CATTopData&amp;')</script> <td><tt>iToCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATTopData"></a><a name="CATTopData(CATSoftwareConfiguration*,CATCGMJournalList*)"></a> <dt> o <b>CATTopData</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATTopData</b>(<td><script type="text/javascript"> activateLink('CATSoftwareConfiguration','CATSoftwareConfiguration*')</script> <td><tt>iConfig</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMJournalList','CATCGMJournalList*')</script> <td><tt>iJournal</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATTopData.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iConfig</tt>
   <dd> The pointer to the configuration. Must not be <tt>NULL</tt>.
 </dd>
    <dt><tt> iJournal</tt>
   <dd> The pointer to the journal. If <tt>NULL</tt>, the journal is not filled by the operator.</dd>
</dl>
</dl>
</dl>
<a name="~CATTopData"></a><a name="~CATTopData()"></a> <dt> o <b>~CATTopData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATTopData</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="CATCreateTopData"></a><a name="CATCreateTopData(CATSoftwareConfiguration*)"></a> <dt> o <b>CATCreateTopData</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATTopData','CATTopData *')</script>  <b>CATCreateTopData</b>(<td><script type="text/javascript"> activateLink('CATSoftwareConfiguration','CATSoftwareConfiguration*')</script> <td><tt>iConfig</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATTopData with a Software Configuration and a NULL Journal.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iConfig</tt>
   <dd> The pointer to the configuration. Must not be <tt>NULL</tt>.

 USE WITH CAUTION
 -----------------
 This static creation method allows creation of specific TopData. It positions
 the flag _JournalMustBeCreatedByTopOperator to TRUE.
 The Topological Operator that recieves this TopData as input arg. will
 create a journal and manage its life cycle with AddRef and Release mechanism</dd>
</dl>
</dl>
</dl>
<a name="GetJournal"></a><a name="GetJournal()"></a> <dt> o <b>GetJournal</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCGMJournalList','inline CATCGMJournalList*')</script>  <b>GetJournal</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the pointer to the topological journal associated with <tt>this</tt> CATTopData.
 <br>Only available if a journal was given at the data creation.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the journal of the operation.
</dl>
</dl>
<a name="GetSoftwareConfiguration"></a><a name="GetSoftwareConfiguration()"></a> <dt> o <b>GetSoftwareConfiguration</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATSoftwareConfiguration','inline CATSoftwareConfiguration*')</script>  <b>GetSoftwareConfiguration</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Returns the software configuration to be taken 
 into acccount by <tt>this</tt> data.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The software configuration.
</dl>
</dl>
<a name="SetJournal"></a><a name="SetJournal(CATCGMJournalList*)"></a> <dt> o <b>SetJournal</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetJournal</b>(<td><script type="text/javascript"> activateLink('CATCGMJournalList','CATCGMJournalList*')</script> <td><tt>iJournal</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Defines the topological journal to be taken 
 into acccount by <tt>this</tt> data.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iJournal</tt>
   <dd> The topological journal.</dd>
</dl>
</dl>
</dl>
<a name="SetSoftwareConfiguration"></a><a name="SetSoftwareConfiguration(CATSoftwareConfiguration*)"></a> <dt> o <b>SetSoftwareConfiguration</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSoftwareConfiguration</b>(<td><script type="text/javascript"> activateLink('CATSoftwareConfiguration','CATSoftwareConfiguration*')</script> <td><tt>iConfig</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Defines the software configuration to be taken 
 into acccount by <tt>this</tt> data.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConfig</tt>
   <dd> The software configuration.</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATTopData&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATTopData','CATTopData&')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATTopData','CATTopData&amp;')</script> <td><tt>iToAssign</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
</dl>
<hr>
 This object is included in the file: <b>CATTopData.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

