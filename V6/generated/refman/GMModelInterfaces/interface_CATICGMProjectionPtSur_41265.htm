<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATICGMProjectionPtSur</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMProjectionPtSur"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces Interface CATICGMProjectionPtSur</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMProjectionPtSur_41265','CATICGMProjectionPtSur','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMProjectionPtSur</b>
</p>
<p>
<b><i> Class defining the operator of projection of a CATPoint onto a
 CATSurface.</i></b><br>

<br> The projection can be orthogonal or directional.
 The resulting objects are points. 
<ul>
<li>The CATICGMProjectionPtSur operator is created with the <tt>CATCGMCreateProjection</tt> method and 
 directly released with the <tt>Release</tt> method.
 It is is not streamable. 
 <li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. The advanced mode also allows you to
 run the same operator with different points.
 <li>In both cases, the result is accessed with a specific interator. Note
 that the resulting projection depends on the limitations specified. For example, 
 the operator may find no projection when using the current limitations while it may return
 a projection when using the maximum limitations.
</ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeginningPoint()"><b>BeginningPoint</b></a>()
<dd>  Initializes the iterator of the resulting points.
 <dt> o 
    <a href="#GetCartesianPoint()"><b>GetCartesianPoint</b></a>()
<dd>  Creates the next solution point of <tt>this</tt> CATICGMProjectionPtSur operator.
 <dt> o 
    <a href="#GetDistance()"><b>GetDistance</b></a>()
<dd>  Returns the distance between the CATPoint and its Projection on the CATSurface.
 <dt> o 
    <a href="#GetNumberOfPoints()"><b>GetNumberOfPoints</b></a>()
<dd>  Returns the number of solution points of <tt>this</tt> CATICGMProjectionPtSur operator.
 <dt> o 
    <a href="#GetParam()"><b>GetParam</b></a>()
<dd>  Returns the parameter on the surface of the next solution point of <tt>this</tt> CATICGMProjectionPtSur operator.
 <dt> o 
    <a href="#GetPointOnSurface()"><b>GetPointOnSurface</b></a>()
<dd>  Creates the next solution as a point on surface.
 <dt> o 
    <a href="#NextPoint()"><b>NextPoint</b></a>()
<dd>  Skips to the next solution point of <tt>this</tt> CATICGMProjectionPtSur operator.
 <dt> o 
    <a href="#SetPoint(CATMathPoint&amp;)"><b>SetPoint</b></a>(CATMathPoint&amp;)
<dd>  Defines a new point to project (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#UseLimits(CATSurLimits*)"><b>UseLimits</b></a>(CATSurLimits*)
<dd>  Modifies the surface domain to be taken into account for <tt>this</tt> CATICGMProjectionPtSur
 operator (<tt>ADVANCED</tt> mode).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BeginningPoint"></a><a name="BeginningPoint()"></a> <dt> o <b>BeginningPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeginningPoint</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Initializes the iterator of the resulting points.
 <br>By default, the initialization is performed once the operator runs, 
 and this is therefore only used to read the solutions again.
</dl>
<a name="GetCartesianPoint"></a><a name="GetCartesianPoint()"></a> <dt> o <b>GetCartesianPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCartesianPoint','CATCartesianPoint *')</script>  <b>GetCartesianPoint</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution point of <tt>this</tt> CATICGMProjectionPtSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method.
</dl>
</dl>
<a name="GetDistance"></a><a name="GetDistance()"></a> <dt> o <b>GetDistance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetDistance</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the distance between the CATPoint and its Projection on the CATSurface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The distance.
</dl>
</dl>
<a name="GetNumberOfPoints"></a><a name="GetNumberOfPoints()"></a> <dt> o <b>GetNumberOfPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetNumberOfPoints</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of solution points of <tt>this</tt> CATICGMProjectionPtSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of solution points.
 <br>WARNING: the operator may find no projection when using the current limitations while it may return
 a projection when using the maximum limitations. Therefore, when using the ADVANCED mode, it is recommended 
 to specify the max limits of the surface by using the UseLimits method.
</dl>
</dl>
<a name="GetParam"></a><a name="GetParam()"></a> <dt> o <b>GetParam</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATSurParam','CATSurParam')</script>  <b>GetParam</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the parameter on the surface of the next solution point of <tt>this</tt> CATICGMProjectionPtSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter.
</dl>
</dl>
<a name="GetPointOnSurface"></a><a name="GetPointOnSurface()"></a> <dt> o <b>GetPointOnSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPointOnSurface','CATPointOnSurface *')</script>  <b>GetPointOnSurface</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution as a point on surface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point on curve. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method.
</dl>
</dl>
<a name="NextPoint"></a><a name="NextPoint()"></a> <dt> o <b>NextPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>NextPoint</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next solution point of <tt>this</tt> CATICGMProjectionPtSur operator.
 <br>After <tt>BeginningPoint</tt>, it skips to the first point. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The existence of the next solution.
 <br><b>Legal values</b>:
<dl><dt><tt>TRUE</tt> <dd>if there is a solution point
    <dt><tt>FALSE</tt> <dd>no more solution point.</dl>
</dl>
</dl>
<a name="SetPoint"></a><a name="SetPoint(CATMathPoint&amp;)"></a> <dt> o <b>SetPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPoint</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines a new point to project (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The new point.</dd>
</dl>
</dl>
</dl>
<a name="UseLimits"></a><a name="UseLimits(CATSurLimits*)"></a> <dt> o <b>UseLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>UseLimits</b>(<td><script type="text/javascript"> activateLink('CATSurLimits','CATSurLimits*')</script> <td><tt>iLimitsToTakeForSurface</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the surface domain to be taken into account for <tt>this</tt> CATICGMProjectionPtSur
 operator (<tt>ADVANCED</tt> mode).
 <br>It does not change the current surface 
 limitations.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewLimits</tt>
   <dd> The new limitations of the surface, <tt>NULL</tt> to take the current limitations. Note
 that the resulting projection depends on the limitations specified. For example, 
 the operator may find no projection when using the current limitations while it may return
 a projection when using the maximum limitations.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMProjectionPtSur.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

