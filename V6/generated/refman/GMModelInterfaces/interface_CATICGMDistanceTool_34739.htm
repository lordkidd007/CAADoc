<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATICGMDistanceTool</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMDistanceTool"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces Interface CATICGMDistanceTool</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMDistanceTool_34739','CATICGMDistanceTool','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMDistanceTool</b>
</p>
<p>
<b><i> Class defining the type of parallel computation and is to be used when you want to 
 create a parallel curve onto a support.</i></b><br>
 This class does not create directly a curve onto 
 a support. To do this, you must:
 <ol>
 <li>Specify the parameters of the offset distance by using CATICGMDistanceTool: 
 <ul>
 <li> the parallelism mode: euclidian or geodesic 
 <li> the side on which the wire is offset, it is computed from the support normal and the wire tangent: Side = Normal^Tangent 
 <li> the law which defines the distance evolution along the wire.
 </ul>
 <li>Specify the type of relimitation: sharp or round and the support on which the wire is offset.
 This is done by creating the CATICGMExtrapolParallelTool object. 
 <li>Create and run the CATICGMTopParallel operator.
 </ol>
 The CATICGMDistanceTool class is created by :
 <ul> 
 <li> either <script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopEuclidianDistanceTool','','CATCGMCreateTopEuclidianDistanceTool') </script> that computes the parallel with an euclidian distance
 <li> or 
<script type="text/javascript"> activateLinkAnchor('CATCGMCreateTopGeodesicDistanceTool','','CATCGMCreateTopGeodesicDistanceTool') </script> that computes the parallel with a geodesic distance.
 </ul>
 This class is the base class for some supplied classes, but you must not derive it yourself.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCompositeLaw()"><b>GetCompositeLaw</b></a>()
<dd>  Returns the law used to compute the distance.
 <dt> o 
    <a href="#GetSide()"><b>GetSide</b></a>()
<dd>  Returns the side on which the parallel is computed.
 <dt> o 
    <a href="#GetType()"><b>GetType</b></a>()
<dd>  Returns the type of parallelism.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCompositeLaw"></a><a name="GetCompositeLaw()"></a> <dt> o <b>GetCompositeLaw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw *')</script>  <b>GetCompositeLaw</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the law used to compute the distance.
 <br>Note that this operator converts the law provided to CATCGMCreateTopEuclidianDistanceTool
 and CATCGMCreateTopGeodesicDistanceTool into a CATCompositeLaw (if it is not already one).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the law.
</dl>
</dl>
<a name="GetSide"></a><a name="GetSide()"></a> <dt> o <b>GetSide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('short','short')</script>  <b>GetSide</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the side on which the parallel is computed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The side value defined when standing along the face direction and watching in the wire direction.
 <ul>
 <li><tt>1</tt> for the left side
 <li><tt>-1</tt> for the right side.
 </ul>
</dl>
</dl>
<a name="GetType"></a><a name="GetType()"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('short','short')</script>  <b>GetType</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of parallelism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
 <li>1 = GeodesicDistanceToolType_Euclidian
 <li>or 2 = GeodesicDistanceToolType_Geodesic.
 </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMDistanceTool.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

