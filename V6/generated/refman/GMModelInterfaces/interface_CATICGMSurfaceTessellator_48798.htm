<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATICGMSurfaceTessellator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMSurfaceTessellator"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces Interface CATICGMSurfaceTessellator</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMSurfaceTessellator_48798','CATICGMSurfaceTessellator','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMSurfaceTessellator</b>
</p>
<p>
<b><i> Class defining a tessellation operator on surfaces.</i></b><br>

 <br> This operator computes a discretized geometry on the surfaces as triangles.
 The corner of the triangles are called points. Three parameters tune the tessellation result:
 <dl>
 <dt> Sag </dt><dd> Defines the maximum distance between a bar and the object to tessellate
 <dt> Step </dt><dd> Defines the maximum length of a bar. If not defined, the step is infinite 
 (this parameter is unused)
 <dt> Angle </dt><dd> Defines the maximum angle between the normals at each bar end. 
 </dl>
 The tessellation operator follows the scheme of all CGM operator:
 <ul>
 <li> Create an operator instance,
 <li> Run,
 <li> Optionally, adds other curves to tessellate in the same operation,
 <li> Recover the results by the means of iterators,
 <li> Delete the operator instance. The deletion of the operator leads to the deletion
 of the iterators and the arrays of results.
 </ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddSurface(CATSurface*,CATSurLimits&amp;)"><b>AddSurface</b></a>(CATSurface*,CATSurLimits&amp;)
<dd>  Adds an other surface to <tt>this</tt> CATICGMSurfaceTessellator.
 <dt> o 
    <a href="#GetSurface(CATSurface*,CATBoolean&amp;,CATCGMTessPointIter**,CATCGMTessStripeIter**,CATCGMTessFanIter**,CATCGMTessPolyIter**,CATCGMTessTrianIter**)"><b>GetSurface</b></a>(CATSurface*,CATBoolean&amp;,CATCGMTessPointIter**,CATCGMTessStripeIter**,CATCGMTessFanIter**,CATCGMTessPolyIter**,CATCGMTessTrianIter**)
<dd>  Retrieves the results associated with a surface.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> CATICGMSurfaceTessellator.
 <dt> o 
    <a href="#SetStep(double)"><b>SetStep</b></a>(double)
<dd>  Defines a finite step for <tt>this</tt> CATICGMCurveTessellator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddSurface"></a><a name="AddSurface(CATSurface*,CATSurLimits&amp;)"></a> <dt> o <b>AddSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddSurface</b>(<td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATSurLimits','CATSurLimits&amp;')</script> <td><tt>iSurfaceLimits</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds an other surface to <tt>this</tt> CATICGMSurfaceTessellator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd> The other surface to tessellate in the same operation.
 </dd>
    <dt><tt> iSurfaceLimits</tt>
   <dd> The part of the surface to take into account.</dd>
</dl>
</dl>
</dl>
<a name="GetSurface"></a><a name="GetSurface(CATSurface*,CATBoolean&amp;,CATCGMTessPointIter**,CATCGMTessStripeIter**,CATCGMTessFanIter**,CATCGMTessPolyIter**,CATCGMTessTrianIter**)"></a> <dt> o <b>GetSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetSurface</b>(<td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>iSurface</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>ioPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMTessPointIter','CATCGMTessPointIter**')</script> <td><tt>oPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMTessStripeIter','CATCGMTessStripeIter**')</script> <td><tt>oStrips</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMTessFanIter','CATCGMTessFanIter**')</script> <td><tt>oFans</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMTessPolyIter','CATCGMTessPolyIter**')</script> <td><tt>oPolygons</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMTessTrianIter','CATCGMTessTrianIter**')</script> <td><tt>oTriangles</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the results associated with a surface.
 <br> All the output iterators are allocated by the <tt>GetSurface</tt> method,
 and are deleted when the operator is deleted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd> A surface among the input surfaces.
 </dd>
    <dt><tt> ioPlane</tt>
   <dd> Retrieves <tt>1</tt> if the surface is planar, <tt>0</tt> otherwise.
 </dd>
    <dt><tt> oPoints</tt>
   <dd> A pointer to a CATCGMTessPointIter, to retrieve the computed points. 
 </dd>
    <dt><tt> oStrips</tt>
   <dd> A pointer to a CATCGMTessStripeIter, to retrieve the computed triangle strips. 
 </dd>
    <dt><tt> oStrips</tt>
   <dd> A pointer to a CATCGMTessFanIter, to retrieve the computed triangle fans. 
 </dd>
    <dt><tt> oStrips</tt>
   <dd> A pointer to a CATCGMTessPolygonIter, to retrieve the computed polygons.</dd>
</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> CATICGMSurfaceTessellator.
</dl>
<a name="SetStep"></a><a name="SetStep(double)"></a> <dt> o <b>SetStep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetStep</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iStep</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines a finite step for <tt>this</tt> CATICGMCurveTessellator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStep</tt>
   <dd> The Step value.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMSurfaceTessellator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

