<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Class CATBoundedCellsIterator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATBoundedCellsIterator"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATBoundedCellsIterator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATBoundedCellsIterator_41490','CATBoundedCellsIterator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATBoundedCellsIterator</b>
</p>
<p>
<b><i> Class defining an iterator that scans the cells bounded by a cell belonging to a specified Body.</i></b><br>

 <br>The input cell must belongs to the specified body. 
    The output bounded cells are also belonging to the specified body.

 For example, if the iterator is created for a vertex, 
  each call to the <tt>Next</tt> method returns a new cell (whatever its dimension) 
  that is bounded by the vertex (usually edges, but also faces and volumes
  when the vertex is immersed in such higher dimension cells).
 <br>This iterator is often created by scan methods on the cells.
 <br>When using a CATBoundedCellsIterator on a given body, do not create another one on another one body.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATBoundedCellsIterator()"><b>~CATBoundedCellsIterator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Duplicate()"><b>Duplicate</b></a>()
<dd>  Duplicates <tt>this</tt> iterator.
 <dt> o 
    <a href="#GetBody()"><b>GetBody</b></a>()
<dd>  Returns the body inside which the search is done.
 <dt> o 
    <a href="#GetElement()"><b>GetElement</b></a>()
<dd>  Returns the cell around which the search is done.
 <dt> o 
    <a href="#Next(CATSide*,CATDomain**)"><b>Next</b></a>(CATSide*,CATDomain**)
<dd>  Skips to the next bounded cell.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Initializes <tt>this</tt> iterator to the first cell.
 <dt> o 
    <a href="#SetElement(CATCell*,CATBody*)"><b>SetElement</b></a>(CATCell*,CATBody*)
<dd>  Defines the context of <tt>this</tt> iterator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATBoundedCellsIterator"></a><a name="~CATBoundedCellsIterator()"></a> <dt> o <b>~CATBoundedCellsIterator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATBoundedCellsIterator</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Duplicate"></a><a name="Duplicate()"></a> <dt> o <b>Duplicate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoundedCellsIterator','CATBoundedCellsIterator*')</script>  <b>Duplicate</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Duplicates <tt>this</tt> iterator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A pointer to the created iterator. To <tt>delete</tt> after use.
</dl>
</dl>
<a name="GetBody"></a><a name="GetBody()"></a> <dt> o <b>GetBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody*')</script>  <b>GetBody</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the body inside which the search is done.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the body.
</dl>
</dl>
<a name="GetElement"></a><a name="GetElement()"></a> <dt> o <b>GetElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCell','CATCell*')</script>  <b>GetElement</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the cell around which the search is done.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the cell.
</dl>
</dl>
<a name="Next"></a><a name="Next(CATSide*,CATDomain**)"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCell','CATCell *')</script>  <b>Next</b>(<td><script type="text/javascript"> activateLink('CATSide','CATSide*')</script> <td><tt>oSide</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDomain','CATDomain**')</script> <td><tt>oDomain</tt><td><tt>=NULL </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next bounded cell.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSide</tt>
   <dd> The pointer to the corresponding matter side. If <tt>NULL</tt> in input, this is not output.
 </dd>
    <dt><tt> oDomain</tt>
   <dd> The pointer to the corresponding domain. If <tt>NULL</tt> in input, this is not output.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the next cell bounded by <tt>this</tt>, <tt>NULL</tt> after the last one.
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Reset</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Initializes <tt>this</tt> iterator to the first cell.
 <br>This allows you to do multiple iterations around the same cell of the given body.
</dl>
<a name="SetElement"></a><a name="SetElement(CATCell*,CATBody*)"></a> <dt> o <b>SetElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetElement</b>(<td><script type="text/javascript"> activateLink('CATCell','CATCell*')</script> <td><tt>iBoundingCell</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iInBody</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the context of <tt>this</tt> iterator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBoundingCell</tt>
   <dd> The pointer to the bounding cell around which the iterator works. It must belong to <tt>iInBody</tt>.
 </dd>
    <dt><tt> iInBody</tt>
   <dd> The pointer to the body inside which the bounded cells are searched.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATBoundedCellsIterator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

