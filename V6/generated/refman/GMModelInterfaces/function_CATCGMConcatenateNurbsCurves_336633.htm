<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Global Function CATCGMConcatenateNurbsCurves</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATCGMConcatenateNurbsCurves"; } 
	function getCurrentType() { 
 	return "global function"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces Global Function CATCGMConcatenateNurbsCurves</h1>

<br><dt><table><tr><td>  <script type="text/javascript"> activateLink('CATBoolean',' CATBoolean')</script>  <b>CATCGMConcatenateNurbsCurves</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATCurve)','CATLISTP(CATCurve)*')</script> <td><tt>iCurveList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathSetOfPoints','CATMathSetOfPoints*&amp;')</script> <td><tt>ioControlPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*&amp;')</script> <td><tt>ioWeights</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATKnotVector','CATKnotVector*&amp;')</script> <td><tt>ioKnotVector</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes the data required for the C0-concatenation of a list of Nurbs curves. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurveList</tt>
   <dd> The list of Nurbs curves to be concatenated. The input curves must be of
 CATNurbsCurve type and C0 connected. In the input curve list, the curves must be
 sorted according to their parametrization,
 from the smallest to the biggest parameter.
 </dd>
    <dt><tt> ioControlPoints</tt>
   <dd> The output set of control points. 
 </dd>
    <dt><tt> ioWeights</tt>
   <dd> The output array of weights.
 </dd>
    <dt><tt> ioKnotVector</tt>
   <dd> The output knot vector.  
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The returned diagnosis.
 <br><b>Legal values</b>:
 <dl><dt><tt>TRUE</tt> <dd> Concatenation is OK
     <dt><tt>FALSE</tt> <dd> Concatenation failed</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCGMConcatenateNurbsTool.h</b><br>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

