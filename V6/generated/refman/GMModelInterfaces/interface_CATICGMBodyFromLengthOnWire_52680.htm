<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATICGMBodyFromLengthOnWire</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMBodyFromLengthOnWire"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces Interface CATICGMBodyFromLengthOnWire</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMBodyFromLengthOnWire_52680','CATICGMBodyFromLengthOnWire','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMBodyFromLengthOnWire</b>
</p>
<p>
<b><i> Class defining an operator to create a vertex at given distance on a Wire.</i></b><br>

 <br>
 <br>
 The <tt>CATICGMBodyFromLengthOnWire</tt> operator follows the global frame of the topological
 operators and satisfies the smart mechanism: 
 the input bodies are not modified. A new resulting body is created, 
 possibly sharing data with the input bodies.
<ul>
 <li>A <tt>CATICGMBodyFromLengthOnWire</tt> operator is created with the <tt>CATCGMCreateBodyFromLengthOnWire</tt> global method:
 It must be directly released with the <tt>Release</tt> method after use. It is not streamable. 
<li>If the vertex is not on the wire, then a point is computed
 from the input Vertex that is closest to the wire.
<li>The length can be positive or negative. The sign of the length
 indicates the direction to traverse on the wire.
<li>Options must be precised with the appropriate methods, before
 asking for the computation with the <tt>Run</tt> method. 
<li>The result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <script type="text/javascript"> activateLinkAnchor('CATICGMContainer','Remove','CATICGMContainer.Remove') </script> method to remove it from the  geometric factory.
</ul>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetLayDown(int&amp;)"><b>GetLayDown</b></a>(int&amp;)
<dd>  Returns the lay-down setting.
 <dt> o 
    <a href="#GetResult()"><b>GetResult</b></a>()
<dd>  Returns the point body computed by the run.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs the operator.
 <dt> o 
    <a href="#SetLayDown(CATBody*,int)"><b>SetLayDown</b></a>(CATBody*,int)
<dd>  Activates or deactivates the lay-down operation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetLayDown"></a><a name="GetLayDown(int&amp;)"></a> <dt> o <b>GetLayDown</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLayDown</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oLaid</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the lay-down setting.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLaid</tt>
   <dd> 0 if lay-down is turned off, 1 if it is turned on.</dd>
</dl>
</dl>
</dl>
<a name="GetResult"></a><a name="GetResult()"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetResult</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the point body computed by the run.  Call this method
 after the <tt>Run</tt> method has been called.
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Runs the operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: <tt>0</tt> if ok, <tt>1</tt> if failed
</dl>
</dl>
<a name="SetLayDown"></a><a name="SetLayDown(CATBody*,int)"></a> <dt> o <b>SetLayDown</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLayDown</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iWireBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>ilaid</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Activates or deactivates the lay-down operation.  If activated, the operator
 projects the resulting point body upon the specified wire body 
 if the distance between them is lower than the factory resolution.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWireBody</tt>
   <dd> The wire body that is the target of the lay-down operation.
 </dd>
    <dt><tt> ilaid</tt>
   <dd> 0 to turn off lay-down, 1 to turn it on.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMBodyFromLengthOnWire.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

