<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATICGMEdgeCurveComputation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICGMEdgeCurveComputation"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces Interface CATICGMEdgeCurveComputation</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMEdgeCurveComputation_54065','CATICGMEdgeCurveComputation','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMEdgeCurveComputation</b>
</p>
<p>
<b><i> Class defining the operator to create an edge curve.</i></b><br>
 This operator is to be preferred to
 the methods offered by CATGeoFactory as 
 it manages non linear parameterization of curves.
 <ul>
 <li>The CATICGMEdgeCurveComputation operator is created with the <tt>CATCGMCreateEdgeCurveComputation</tt> method and 
 directly released with the <tt>Release</tt> method. It is is not streamable. 
 <li>It can be used in two modes:
 <ul>
 <li>the <tt>BASIC</tt> mode, the operation is automatically performed at the operator creation. 
 <li>the <tt>ADVANCED</tt> mode, options can be specified with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. 
 </ul>
 </ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetEdgeCurve()"><b>GetEdgeCurve</b></a>()
<dd>  Returns the created edge curve.
 <dt> o 
    <a href="#SetLimits(CATCrvLimits&amp;,CATCrvLimits&amp;)"><b>SetLimits</b></a>(CATCrvLimits&amp;,CATCrvLimits&amp;)
<dd>  Defines the domains of the curves to take into account (<tt>ADVANCED mode</tt>).
 <dt> o 
    <a href="#SetMaxGap(double)"><b>SetMaxGap</b></a>(double)
<dd>  Defines the maximum gap between the initial curves above which the edge curve cannot be created
(<tt>ADVANCED mode</tt>).
 <dt> o 
    <a href="#SetParams(CATCrvParam&amp;,CATCrvParam&amp;,CATCrvParam&amp;,CATCrvParam&amp;)"><b>SetParams</b></a>(CATCrvParam&amp;,CATCrvParam&amp;,CATCrvParam&amp;,CATCrvParam&amp;)
<dd>  Defines the domains of the curves to be used for the edge curve computation (<tt>ADVANCED mode</tt>).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetEdgeCurve"></a><a name="GetEdgeCurve()"></a> <dt> o <b>GetEdgeCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATEdgeCurve','CATEdgeCurve *')</script>  <b>GetEdgeCurve</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the created edge curve. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The pointer to the created edge curve, <tt>NULL</tt> if the initial curves cannot be merged.
</dl>
</dl>
<a name="SetLimits"></a><a name="SetLimits(CATCrvLimits&amp;,CATCrvLimits&amp;)"></a> <dt> o <b>SetLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLimits</b>(<td> const <script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>iLimits1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>iLimits2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the domains of the curves to take into account (<tt>ADVANCED mode</tt>).
 <br>The relative orientation (start-end of each curve) is not specified.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimits1</tt>
   <dd> The limits of the first curve.
 </dd>
    <dt><tt> iLimits2</tt>
   <dd> The limits of the second curve.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxGap"></a><a name="SetMaxGap(double)"></a> <dt> o <b>SetMaxGap</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxGap</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMaxGap</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum gap between the initial curves above which the edge curve cannot be created
(<tt>ADVANCED mode</tt>).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxGap</tt>
   <dd> The maximum gap value. By default, a gap around 1mm is allowed.</dd>
</dl>
</dl>
</dl>
<a name="SetParams"></a><a name="SetParams(CATCrvParam&amp;,CATCrvParam&amp;,CATCrvParam&amp;,CATCrvParam&amp;)"></a> <dt> o <b>SetParams</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetParams</b>(<td> const <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iStartParam1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iEndParam1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iStartParam2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iEndParam2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the domains of the curves to be used for the edge curve computation (<tt>ADVANCED mode</tt>).
 <br>
 The start and end CATCrvParam for each curve specify a relative direction
 which do not affect the relative orientation of the input curves within the edge curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartParam1</tt>
   <dd> The parameter of the start limit of the first curve.
 </dd>
    <dt><tt> iEndParam1</tt>
   <dd> The parameter of the end limit of the first curve.
 </dd>
    <dt><tt> iStartParam2</tt>
   <dd> The parameter of the start limit of the second curve. 
 </dd>
    <dt><tt> iEndParam2</tt>
   <dd> The parameter of the end limit of the second curve.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMEdgeCurveComputation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

