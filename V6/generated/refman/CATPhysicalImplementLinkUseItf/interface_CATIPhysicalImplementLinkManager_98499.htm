<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPhysicalImplementLinkUseItf Interface CATIPhysicalImplementLinkManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPhysicalImplementLinkUseItf.htm" href="../CATPhysicalImplementLinkUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPhysicalImplementLinkUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIPhysicalImplementLinkManager"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPhysicalImplementLinkUseItf Interface CATIPhysicalImplementLinkManager</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPhysicalImplementLinkManager_98499','CATIPhysicalImplementLinkManager','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPhysicalImplementLinkManager</b>
</p>
<p>
<b><i> Interface representing the Physical to Logical Implement Link Manager.</i></b><br>

 <br><b>Role</b>: The Physical to Logical Implement Link Manager is dedicated to the manipulation of Implement Links.
 <p>
 It is a component instanciated thanks to the <script type="text/javascript"> activateLinkAnchor('CATPhysicalImplementLinkProvider','GetImplementLinkManager','CATPhysicalImplementLinkProvider.GetImplementLinkManager') </script> . <br><b> Code sample:</b><br>
 <pre>...
   CATIPhysicalImplementLinkManager* piImplementLinkManager = NULL;
   rc = CATPhysicalImplementLinkProvider::GetImplementLinkManager(piImplementLinkManager);
   if(SUCCEEDED(rc) && NULL != piImplementLinkManager)
   {
     ...
     piImplementLinkManager->Release(); piImplementLinkManager = NULL;
   }
   ...
 </pre>

 <br><b>Notes:</b><br>
 <ol type="a">
   <li> An Implement Link is a PLMConnection that links a Physical entity and a Logical entity.</li>
   <li> All the methods of this interface are working on the session which content, in term of loaded entities, is tuned by an option at Open. Refer to 
<script type="text/javascript"> activateLinkAnchor('CATAdpOpenSaveServices','ExpandAndOpen','CATAdpOpenSaveServices.ExpandAndOpen') </script> .</li> </ol>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateImplementRelation(CATOmbObjectInContext*,CATOmbObjectInContext*)"><b>CreateImplementRelation</b></a>(CATOmbObjectInContext*,CATOmbObjectInContext*)
<dd>  
 <dt> o 
    <a href="#CreateImplementRelation(CATIType_var&amp;,CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,CATOmbObjectInContext*,CATOmbObjectInContext*,CATIPhysicalImplementLink*&amp;)"><b>CreateImplementRelation</b></a>(CATIType_var&amp;,CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,CATOmbObjectInContext*,CATOmbObjectInContext*,CATIPhysicalImplementLink*&amp;)
<dd>  Creates an Implement Link Relation between a Physical entity and a Logical Entity.
 <dt> o 
    <a href="#DeleteImplementRelation(CATOmbObjectInContext*,CATOmbObjectInContext*)"><b>DeleteImplementRelation</b></a>(CATOmbObjectInContext*,CATOmbObjectInContext*)
<dd>  Deletes an Implement Link Relation between a Physical entity and a Logical Entity.
 <dt> o 
    <a href="#GetImplementRelationSources(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;)"><b>GetImplementRelationSources</b></a>(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;)
<dd>  
 <dt> o 
    <a href="#GetImplementRelationSources(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;,CATLISTP(CATIPhysicalImplementLink)&amp;)"><b>GetImplementRelationSources</b></a>(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;,CATLISTP(CATIPhysicalImplementLink)&amp;)
<dd>  Get the Physical entities (Sources) from a Logical entity.
 <dt> o 
    <a href="#GetImplementRelationTargets(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;)"><b>GetImplementRelationTargets</b></a>(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;)
<dd>  
 <dt> o 
    <a href="#GetImplementRelationTargets(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;,CATLISTP(CATIPhysicalImplementLink)&amp;)"><b>GetImplementRelationTargets</b></a>(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;,CATLISTP(CATIPhysicalImplementLink)&amp;)
<dd>  Get the Logical entities (Targets) from a Physical entity.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateImplementRelation"></a><a name="CreateImplementRelation(CATOmbObjectInContext*,CATOmbObjectInContext*)"></a> <dt> o <b>CreateImplementRelation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateImplementRelation</b>(<td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiSourcePhysical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiTargetLogical</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R211

 Creates an Implement Link Relation between a Physical entity and a Logical Entity.
 <br><b>Role:</b> This method creates an Implement Link Relation between a Physical entity and a Logical Entity.
 The current environment is used to create the Implement Link. Please refer to 
<script type="text/javascript"> activateLinkAnchor('PLMPSISessionHelpers','SetCurrentEnvironment','PLMPSISessionHelpers.SetCurrentEnvironment') </script> to set the environment. 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiSourcePhysical</tt>
   <dd>   Represents the Source entity.
   <br>Source entity can be a Physical Reference or a path of Physical Instances.
   <br>When <tt>ipiSourcePhysical</tt> is a Physical Reference, <tt>ipiTargetLogical</tt> must be a Logical Reference.
   <br>When <tt>ipiSourcePhysical</tt> is a Path of Physical Instances, <tt>ipiTargetLogical</tt> must be a Path of Logical Instances.

 </dd>
    <dt><tt> ipiTargetLogical</tt>
   <dd>   Represents the Target entity.
   <br>Target entity can be a Logical Reference or a path of Logical Instances.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
   <li><tt>S_OK</tt> if the Implement Link Relation has been created.</li>
   <li><tt>E_INVALIDARG</tt> if the input arguments are not valid.</li>
   <ul>
     <li><tt>ipiSourcePhysical</tt> is <tt>NULL</tt></li>
     <li><tt>ipiTargetLogical</tt> is <tt>NULL</tt></li>
     <li>Source is a Reference and Target is a path of Instances.</li>
     <li>Source is a path of Instances and Target is a Reference.</li>
   </ul>
   <li><tt>E_FAIL</tt> if an error occured.</li>
   <ul>
     <li>Licensing authorization not granted.</li>
     <li>Internal error.</li>
   </ul>
 </ul>
</dl>
</dl>
<a name="CreateImplementRelation"></a><a name="CreateImplementRelation(CATIType_var&amp;,CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,CATOmbObjectInContext*,CATOmbObjectInContext*,CATIPhysicalImplementLink*&amp;)"></a> <dt> o <b>CreateImplementRelation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateImplementRelation</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>ispType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIAdpEnvironment','CATIAdpEnvironment*')</script> <td><tt>ipEnvironment</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iLAttributesValues</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiSourcePhysical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiTargetLogical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPhysicalImplementLink','CATIPhysicalImplementLink*&amp;')</script> <td><tt>opImplementLinkConnection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an Implement Link Relation between a Physical entity and a Logical Entity.
 <br><b>Role:</b> This method creates an Implement Link Relation between a Physical entity and a Logical Entity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispType</tt>
   <dd>   The type of the Implement Link to create (optional).
   <br>It must be a subtype of the Implement Link type (RFLPLMImplementConnection).
   <br>If NULL, a standard Logical Implement Link will be created.

 </dd>
    <dt><tt> ipEnvironment</tt>
   <dd>   The PLM environment in which must be created the Implement Link.
   <br>If NULL, the current PLM environment will be used. Please refer to </dd>
<script type="text/javascript"> activateLinkAnchor('PLMPSISessionHelpers','SetCurrentEnvironment','PLMPSISessionHelpers.SetCurrentEnvironment') </script> to set the environment.
  
    <dt><tt>  iLAttributesValues</tt>
   <dd>   A list of functional attributes values (of the implement link to create).
   <br>The compliancy of attributes values will be checked relatively to their definition in metadata (mandatory, size, type).
   <br>This list must be empty.

 </dd>
    <dt><tt> ipiSourcePhysical</tt>
   <dd>   Represents the Source entity.
   <br>Source entity can be a Physical Reference or a path of Physical Instances.
   <br>When <tt>ipiSourcePhysical</tt> is a Physical Reference, <tt>ipiTargetLogical</tt> must be a Logical Reference.
   <br>When <tt>ipiSourcePhysical</tt> is a Path of Physical Instances, <tt>ipiTargetLogical</tt> must be a Path of Logical Instances.

 </dd>
    <dt><tt> ipiTargetLogical</tt>
   <dd>   Represents the Target entity.
   <br>Target entity can be a Logical Reference or a path of Logical Instances.

 </dd>
    <dt><tt> opImplementLinkConnection</tt>
   <dd>   Represents the created Implement Link connection.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
   <li><tt>S_OK</tt> if the Implement Link Relation has been created.</li>
   <li><tt>E_INVALIDARG</tt> if the input arguments are not valid.</li>
   <ul>
     <li><tt>ipiSourcePhysical</tt> is <tt>NULL</tt> or isn't a Physical entity</li>
     <li><tt>ipiTargetLogical</tt> is <tt>NULL</tt>or isn't a Logical entity</li>
     <li>Source is a Reference and Target is a path of Instances.</li>
     <li>Source is a path of Instances and Target is a Reference.</li>
   </ul>
   <li><tt>E_FAIL</tt> if an error occured. The possible returned errors (listed by their identifier) are:</li>
   <ul>
       <li><tt>ImplementLinkERR_01</tt>:</li>
         Creation of an Implement Link between these 2 objects failed because this is an unauthorized pattern.
       <li><tt>ImplementLinkERR_02</tt>:</li>
         Creation of an Implement Link between these 2 objects failed because its Master Implement Link is missing.
       <li><tt>ImplementLinkERR_03</tt>:</li>
         A similar Implement Link between these 2 entities already exist, the creation of an identical one is forbidden!
       <li>Otherwise : Internal error.</li>
   </ul>
 </ul>
</dl>
</dl>
<a name="DeleteImplementRelation"></a><a name="DeleteImplementRelation(CATOmbObjectInContext*,CATOmbObjectInContext*)"></a> <dt> o <b>DeleteImplementRelation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteImplementRelation</b>(<td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiSourcePhysical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiTargetLogical</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Deletes an Implement Link Relation between a Physical entity and a Logical Entity.
 <br><b>Role:</b> This method deletes an Implement Link Relation between a Physical entity and a Logical Entity.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiSourcePhysical</tt>
   <dd> Represents the Source entity.
 <br>Source entity can be a Physical Reference or a path of Physical Instances.
 <br>When <tt>ipiSourcePhysical</tt> is a Physical Reference, <tt>ipiTargetLogical</tt> must be a Logical Reference.
 <br>When <tt>ipiSourcePhysical</tt> is a Path of Physical Instances, <tt>ipiTargetLogical</tt> must be a Path of Logical Instances.

 </dd>
    <dt><tt> ipiTargetLogical</tt>
   <dd> Represents the Target entity.
 <br>Target entity can be a Logical Reference or a path of Logical Instances.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
   <li><tt>S_OK</tt> if the Implement Link Relation has been deleted.</li>
   <li><tt>E_INVALIDARG</tt> if the input arguments are not valid.</li>
   <ul>
     <li><tt>ipiSourcePhysical</tt> is <tt>NULL</tt></li>
     <li><tt>ipiTargetLogical</tt> is <tt>NULL</tt></li>
     <li>Source is a Reference and Target is a path of Instances.</li>
     <li>Source is a path of Instances and Target is a Reference.</li>
   </ul>
   <li><tt>E_FAIL</tt> if an error occured.</li>
   <ul>
     <li>Licensing authorization not granted.</li>
     <li>Internal error.</li>
   </ul>
 </ul>
</dl>
</dl>
<a name="GetImplementRelationSources"></a><a name="GetImplementRelationSources(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;)"></a> <dt> o <b>GetImplementRelationSources</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImplementRelationSources</b>(<td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiTargetLogical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATOmbObjectInContext)','CATLISTP(CATOmbObjectInContext)&amp;')</script> <td><tt>oListOfSourcesPhysical</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R211

 Get the Physical entities (Sources) from a Logical entity.
 <br><b>Role:</b> This method gets, from the current session, the Physical entities (Sources) from a Logical entity.
 <br>The session content depends on the option used during the open.Refer to the ExpandMode argument described in 
<script type="text/javascript"> activateLinkAnchor('CATAdpOpenSaveServices','ExpandAndOpen','CATAdpOpenSaveServices.ExpandAndOpen') </script> .
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiTargetLogical</tt>
   <dd> Represents the Target entity.
 <br>Target entity can be a Logical Reference or a path of Logical Instances.

 </dd>
    <dt><tt> oListOfSourcesPhysical</tt>
   <dd> Represents the Source entities.
 <br>Source entities can be a Physical Reference or a path of Physical Instances.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
   <li><tt>S_OK</tt> if the Source entities have been found</li>
   <li><tt>E_INVALIDARG</tt> if the input arguments are not valid.</li>
   <ul>
     <li><tt>ipiTargetLogical</tt> is <tt>NULL</tt>.</li>
     <li><tt>oListOfSourcesPhysical</tt> is not empty.</li>
   </ul>
   <li><tt>E_FAIL</tt> if an error occured.</li>
   <ul>
     <li>Licensing authorization not granted.</li>
     <li>Internal error.</li>
   </ul>
 </ul>
</dl>
</dl>
<a name="GetImplementRelationSources"></a><a name="GetImplementRelationSources(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;,CATLISTP(CATIPhysicalImplementLink)&amp;)"></a> <dt> o <b>GetImplementRelationSources</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImplementRelationSources</b>(<td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiTargetLogical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATOmbObjectInContext)','CATLISTP(CATOmbObjectInContext)&amp;')</script> <td><tt>oListOfSourcesPhysical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATIPhysicalImplementLink)','CATLISTP(CATIPhysicalImplementLink)&amp;')</script> <td><tt>oListOfImplementLinks</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the Physical entities (Sources) from a Logical entity.
 <br><b>Role:</b> This method gets, from the current session, the Physical entities (Sources) from a Logical entity.
 <br>The session content depends on the option used during the open.Refer to the ExpandMode argument described in 
<script type="text/javascript"> activateLinkAnchor('CATAdpOpenSaveServices','ExpandAndOpen','CATAdpOpenSaveServices.ExpandAndOpen') </script> .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiTargetLogical</tt>
   <dd> Represents the Target entity.
 <br>Target entity can be a Logical Reference or a path of Logical Instances.

 </dd>
    <dt><tt> oListOfSourcesPhysical</tt>
   <dd> Represents the Source entities.
 <br>Source entities can be a Physical Reference or a path of Physical Instances.

 </dd>
    <dt><tt> oListOfImplementLinks</tt>
   <dd>   Represents the list of the implement links

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
   <li><tt>S_OK</tt> if the Source entities have been found</li>
   <li><tt>E_INVALIDARG</tt> if the input arguments are not valid.</li>
   <ul>
     <li><tt>ipiTargetLogical</tt> is <tt>NULL</tt>.</li>
     <li><tt>oListOfSourcesPhysical</tt> is not empty.</li>
   </ul>
   <li><tt>E_FAIL</tt> if an error occured.</li>
   <ul>
     <li>Licensing authorization not granted.</li>
     <li>Internal error.</li>
   </ul>
 </ul>
</dl>
</dl>
<a name="GetImplementRelationTargets"></a><a name="GetImplementRelationTargets(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;)"></a> <dt> o <b>GetImplementRelationTargets</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImplementRelationTargets</b>(<td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiSourcePhysical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATOmbObjectInContext)','CATLISTP(CATOmbObjectInContext)&amp;')</script> <td><tt>oListOfTargetsLogical</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R211

 Get the Logical entities (Targets) from a Physical entity.
 <br><b>Role:</b> This method gets, from the current session, the Logical entities (Sources) from a Physical entity.
 <br>The session content depends on the option used during the open.Refer to the ExpandMode argument described in 
<script type="text/javascript"> activateLinkAnchor('CATAdpOpenSaveServices','ExpandAndOpen','CATAdpOpenSaveServices.ExpandAndOpen') </script> .
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiSourcePhysical</tt>
   <dd> Represents the Source entity.
 <br>Source entity can be a Physical Reference or a path of Physical Instances.

 </dd>
    <dt><tt> oListOfTargetsLogical</tt>
   <dd> Represents the Target entities.
 <br>Target entities can be a Logical Reference or a path of Logical Instances.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
   <li><tt>S_OK</tt> if the Source entities have been found</li>
   <li><tt>E_INVALIDARG</tt> if the input arguments are not valid.</li>
   <ul>
     <li><tt>ipiSourcePhysical</tt> is <tt>NULL</tt>.</li>
     <li><tt>oListOfTargetsLogical</tt> is not empty.</li>
   </ul>
   <li><tt>E_FAIL</tt> if an error occured.</li>
   <ul>
     <li>Licensing authorization not granted.</li>
     <li>Internal error.</li>
   </ul>
 </ul>
</dl>
</dl>
<a name="GetImplementRelationTargets"></a><a name="GetImplementRelationTargets(CATOmbObjectInContext*,CATLISTP(CATOmbObjectInContext)&amp;,CATLISTP(CATIPhysicalImplementLink)&amp;)"></a> <dt> o <b>GetImplementRelationTargets</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImplementRelationTargets</b>(<td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipiSourcePhysical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATOmbObjectInContext)','CATLISTP(CATOmbObjectInContext)&amp;')</script> <td><tt>oListOfTargetsLogical</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATIPhysicalImplementLink)','CATLISTP(CATIPhysicalImplementLink)&amp;')</script> <td><tt>oListOfImplementLinks</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the Logical entities (Targets) from a Physical entity.
 <br><b>Role:</b> This method gets, from the current session, the Logical entities (Sources) from a Physical entity.
 <br>The session content depends on the option used during the open.Refer to the ExpandMode argument described in 
<script type="text/javascript"> activateLinkAnchor('CATAdpOpenSaveServices','ExpandAndOpen','CATAdpOpenSaveServices.ExpandAndOpen') </script> .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiSourcePhysical</tt>
   <dd> Represents the Source entity.
 <br>Source entity can be a Physical Reference or a path of Physical Instances.

 </dd>
    <dt><tt> oListOfTargetsLogical</tt>
   <dd> Represents the Target entities.
 <br>Target entities can be a Logical Reference or a path of Logical Instances.

 </dd>
    <dt><tt> oListOfImplementLinks</tt>
   <dd>   Represents the list of the implement links

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
   <li><tt>S_OK</tt> if the Source entities have been found</li>
   <li><tt>E_INVALIDARG</tt> if the input arguments are not valid.</li>
   <ul>
     <li><tt>ipiSourcePhysical</tt> is <tt>NULL</tt>.</li>
     <li><tt>oListOfTargetsLogical</tt> is not empty.</li>
   </ul>
   <li><tt>E_FAIL</tt> if an error occured.</li>
   <ul>
     <li>Licensing authorization not granted.</li>
     <li>Internal error.</li>
   </ul>
 </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPhysicalImplementLinkManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPhysicalImplementLinkUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

