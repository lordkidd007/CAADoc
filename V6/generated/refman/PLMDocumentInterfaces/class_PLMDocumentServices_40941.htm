<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMDocumentInterfaces Class PLMDocumentServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMDocumentInterfaces.htm" href="../PLMDocumentInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMDocumentInterfaces";	}
		function getCurrentObjectName() { 
 	return "PLMDocumentServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMDocumentInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> PLMDocumentServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_PLMDocumentServices_40941','PLMDocumentServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>PLMDocumentServices</b>
</p>
<p>
<b><i> Class providing static methods to manipulate Documents.</i></b><br>
 You cannot use it in a RACE environment.</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AttachDocument(CATIPLMComponent*,CATIAdpPLMIdentificator*)"><b>AttachDocument</b></a>(CATIPLMComponent*,CATIAdpPLMIdentificator*)
<dd>  Attach a document to an existing object.
 <dt> o 
    <a href="#CreateDocument(CATIType_var&amp;,CATListValCATICkeParm_var&amp;,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,PLMIDocument*&amp;)"><b>CreateDocument</b></a>(CATIType_var&amp;,CATListValCATICkeParm_var&amp;,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,PLMIDocument*&amp;)
<dd>  Create a new Document.
 <dt> o 
    <a href="#DetachDocument(CATIPLMComponent*,CATIAdpPLMIdentificator*)"><b>DetachDocument</b></a>(CATIPLMComponent*,CATIAdpPLMIdentificator*)
<dd>  Detach a document to an existing object.
 <dt> o 
    <a href="#GetAttributeNamesAndValues(CATIAdpPLMIdentificator*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)"><b>GetAttributeNamesAndValues</b></a>(CATIAdpPLMIdentificator*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)
<dd> 
 Retrieves attribute names and values of a given object from its  Adp Id.
 <dt> o 
    <a href="#GetDocument(CATIAdpPLMIdentificator*,PLMIDocument*&amp;)"><b>GetDocument</b></a>(CATIAdpPLMIdentificator*,PLMIDocument*&amp;)
<dd>  Gets Document either from database, or from session.
 <dt> o 
    <a href="#ListDocuments(CATIPLMComponent*,CATListPtrCATIAdpPLMIdentificator&amp;)"><b>ListDocuments</b></a>(CATIPLMComponent*,CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Retrieves the list of documents attached to a given object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AttachDocument"></a><a name="AttachDocument(CATIPLMComponent*,CATIAdpPLMIdentificator*)"></a> <dt> o <b>AttachDocument</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AttachDocument</b>(<td><script type="text/javascript"> activateLink('CATIPLMComponent','CATIPLMComponent*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iDocumentIdentifier</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Attach a document to an existing object.
 <br><b>Role</b>:This method attach an existing document to the specified object. If document is already attached an error will be returned. If object does not support document attachment an error will be returned.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> [in]   The object component on which document will be attached(component must be loaded with connections). 
 </dd>
    <dt><tt> iDocumentIdentifier</tt>
   <dd> [in]   The document identifier to attach. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul>
    <li>S_OK if the operation was successfull.</li>
    <li>E_INVALIDARG one of the inputs does not exist.</li>
    <li>E_FAIL if an error occurs. In this case, more information can be retrieved using the CATError::CATGetLastError method.@see CATError.
        The possible <b>returned errors</b> are:</li>
        <ul>
          <li><tt>DD_ATTACH_NOTSUPPORTED</tt> : Object does not support document attachment.</li>
          <li><tt>DD_ATTACH_EXIST</tt> : Document already attached.</li>
          <li><tt>DD_DOESNOT_EXIST</tt> : Document does not exist.</li>
          <li><tt>DD_ERROR_CONDITION</tt> : Error occured during the operation.</li>
        </ul>
   </ul>
</dl>
</dl>
<a name="CreateDocument"></a><a name="CreateDocument(CATIType_var&amp;,CATListValCATICkeParm_var&amp;,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,PLMIDocument*&amp;)"></a> <dt> o <b>CreateDocument</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateDocument</b>(<td><script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iAttrList</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iFilePaths</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iFileComments</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMIDocument','PLMIDocument*&amp;')</script> <td><tt>oDocument</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Create a new Document.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   Document type to be created. 
 </dd>
    <dt><tt> iAttrList</tt>
   <dd>   All Public writable document attributes. This list must contain at least all mandatory attributes and one of the Identifier Set.
 </dd>
    <dt><tt> iFilePaths</tt>
   <dd>   The full paths from which the files will be uploaded. 
 </dd>
    <dt><tt> iFileComments</tt>
   <dd>   Comments associated with the files (optional).  
 </dd>
    <dt><tt> oDocument</tt>
   <dd>    The created Document. This object will need to be put into a bag </dd>
<script type="text/javascript"> activateLinkAnchor('CATOmbLifeCycleRootsBag','','CATOmbLifeCycleRootsBag') </script> for correct lifecycle management. 
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Document was successfully created.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
</dl>
<a name="DetachDocument"></a><a name="DetachDocument(CATIPLMComponent*,CATIAdpPLMIdentificator*)"></a> <dt> o <b>DetachDocument</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DetachDocument</b>(<td><script type="text/javascript"> activateLink('CATIPLMComponent','CATIPLMComponent*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iDocumentIdentifier</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Detach a document to an existing object.
 <br><b>Role</b>:This method detach a document from the specified object. If document is not attached an error will be returned.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> [in]   The object component from which document will be detached(component must be loaded with connections). 
 </dd>
    <dt><tt> iDocumentIdentifier</tt>
   <dd> [in]   The document identifier to detach. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul>
    <li>S_OK if the operation was successfull.</li>
    <li>E_INVALIDARG one of the inputs does not exist.</li>
    <li>E_FAIL if an error occurs. In this case, more information can be retrieved using the CATError::CATGetLastError method.@see CATError.
        The possible <b>returned errors</b> are:</li>
        <ul>
          <li><tt>DD_ATTACH_DOESNOTEXIST</tt> : Document is not attached.</li>
        </ul>
   </ul>
</dl>
</dl>
<a name="GetAttributeNamesAndValues"></a><a name="GetAttributeNamesAndValues(CATIAdpPLMIdentificator*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>GetAttributeNamesAndValues</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAttributeNamesAndValues</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iObjAdpId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATString','CATListValCATString&amp;')</script> <td><tt>oAttrNameList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>oAttrValueList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>

 Retrieves attribute names and values of a given object from its  Adp Id.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> *iObjAdpId</tt>
   <dd>   CATIAdpPLMIdentificator of the object of which the attributes are to be listed.
 </dd>
    <dt><tt> &oAttrNameList</tt>
   <dd>   List of attribute names.
 </dd>
    <dt><tt> &oAttrValueList</tt>
   <dd>   List of attribute values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><code>S_OK</code> <dd>
 <dt><code>E_FAIL</code> <dd>
 </dl>
</dl>
</dl>
<a name="GetDocument"></a><a name="GetDocument(CATIAdpPLMIdentificator*,PLMIDocument*&amp;)"></a> <dt> o <b>GetDocument</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDocument</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iDocumentIdentifier</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMIDocument','PLMIDocument*&amp;')</script> <td><tt>oDocument</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets Document either from database, or from session.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDocumentIdentifier</tt>
   <dd>   The identifier of Document to open or to fetch.
 </dd>
    <dt><tt> oDocument</tt>
   <dd>    The returned Document.  This object will need to be put into a bag </dd>
<script type="text/javascript"> activateLinkAnchor('CATOmbLifeCycleRootsBag','','CATOmbLifeCycleRootsBag') </script> for correct lifecycle management. 
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Document was successfully opened.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
</dl>
<a name="ListDocuments"></a><a name="ListDocuments(CATIPLMComponent*,CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>ListDocuments</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListDocuments</b>(<td><script type="text/javascript"> activateLink('CATIPLMComponent','CATIPLMComponent*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>oDocumentIdentifiers</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of documents attached to a given object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> [in]   The object component from which document will be detached(component must be loaded with connections).
 </dd>
    <dt><tt> oDocumentIdentifiers</tt>
   <dd> [out]   The list of documents identifiers.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the operation was successfull,</li>
    <li>E_INVALIDARG input does not exist.</li>
    <li>E_FAIL if an error occurs. In this case, more information can be retrieved using the CATError::CATGetLastError method.@see CATError.
        The possible <b>returned errors</b> are:</li>
        <ul>
          <li><tt>DD_ATTACH_NODOC</tt> : No document is attached to the parent object.</li>
        </ul>
   </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMDocumentServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMDocumentInterfacesItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

