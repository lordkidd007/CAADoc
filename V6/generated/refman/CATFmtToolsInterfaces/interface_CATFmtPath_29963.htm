<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFmtToolsInterfaces Interface CATFmtPath</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFmtToolsInterfaces.htm" href="../CATFmtToolsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFmtToolsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATFmtPath"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFmtToolsInterfaces Interface CATFmtPath</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATFmtPath_29963','CATFmtPath','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 interface <b>CATFmtPath</b>
</p>
<p>
<b><i> Interface to manage a <b>Path</b> in the product structure.</i></b><br>
 It it used to manage selections and model pointers to objects 
 located in other representations in the product structure.
 <b>Role</b>: This class is used to obtain all informations related to the pointed object
 and provide informations on the target of selection. 
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIPLOUnfold','','CATIPLOUnfold') </script>, <script type="text/javascript"> activateLinkAnchor('CATIPrdLinkableObjectMediator','','CATIPrdLinkableObjectMediator') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BuildPathElement(CATPathElement*)"><b>BuildPathElement</b></a>(CATPathElement*)
<dd>  Build a path element from a <b>Path</b>.
 <dt> o 
    <a href="#Clone(CATBaseUnknown*)"><b>Clone</b></a>(CATBaseUnknown*)
<dd>  Create a copy of the <b>Path</b>.
 <dt> o 
    <a href="#ConcatenateWith(CATFmtPath*)"><b>ConcatenateWith</b></a>(CATFmtPath*)
<dd>  Concatenates with another <b>Path</b>.
 <dt> o 
    <a href="#GetObjectInContext(int)"><b>GetObjectInContext</b></a>(int)
<dd>  Return the object in context corresponding the <b>Path</b>.
 <dt> o 
    <a href="#GetRepInstance()"><b>GetRepInstance</b></a>()
<dd>  Returns the Rep instance of the <b>Path</b>.
 <dt> o 
    <a href="#GetTarget()"><b>GetTarget</b></a>()
<dd>  
 <dt> o 
    <a href="#GetTransformation(CATMathTransformation&amp;)"><b>GetTransformation</b></a>(CATMathTransformation&amp;)
<dd>  Return the transformation corresponding to the <b>Path</b> to the target object
 
 <dt> o 
    <a href="#HasPathIncludedIn(CATFmtPath*)"><b>HasPathIncludedIn</b></a>(CATFmtPath*)
<dd>  Checks if current <b>Path</b> is included in another one.
 <dt> o 
    <a href="#IsEmpty(int)"><b>IsEmpty</b></a>(int)
<dd>  Test if the <b>Path</b> is valuated.
 <dt> o 
    <a href="#IsInSameRep(CATFmtPath*)"><b>IsInSameRep</b></a>(CATFmtPath*)
<dd>  Checks if both <b>Paths</b> are in the same representation 
 
 <dt> o 
    <a href="#IsSame(CATFmtPath*)"><b>IsSame</b></a>(CATFmtPath*)
<dd>  Checks if both <b>Paths</b> are identical 
 
 <dt> o 
    <a href="#SetAutoLoadingMode(int)"><b>SetAutoLoadingMode</b></a>(int)
<dd>  Manage the automatic loading of the target if necessary, see 
 <dt> o 
    <a href="#TruncateWith(CATFmtPath*)"><b>TruncateWith</b></a>(CATFmtPath*)
<dd>  Truncate the curent <b>Path</b> with another one.
 <dt> o 
    <a href="#UpdateTarget(CATBaseUnknown*)"><b>UpdateTarget</b></a>(CATBaseUnknown*)
<dd>  Update the target of the <b>Path</b>.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BuildPathElement"></a><a name="BuildPathElement(CATPathElement*)"></a> <dt> o <b>BuildPathElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPathElement','CATPathElement *')</script>  <b>BuildPathElement</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iHeader</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Build a path element from a <b>Path</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeader</tt>
   <dd>   Optional  path element to be concatened in front of the return path element.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An CATPathElement to the target object.
</dl>
</dl>
<a name="Clone"></a><a name="Clone(CATBaseUnknown*)"></a> <dt> o <b>Clone</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath *')</script>  <b>Clone</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iTarget</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Create a copy of the <b>Path</b>. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTarget</tt>
   <dd>  An optionnal new target of the copied <b>Path</b>.  
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The duplicated <b>Path</b>.
</dl>
</dl>
<a name="ConcatenateWith"></a><a name="ConcatenateWith(CATFmtPath*)"></a> <dt> o <b>ConcatenateWith</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ConcatenateWith</b>(<td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iHeader</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Concatenates with another <b>Path</b>.
 Concatenation takes into account only to the product path of the iHeader argument, i.e. representation and target are not taken into account.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeader</tt>
   <dd>   <b>Path</b> to be concatened in front of the current <b>Path</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <dl><dt>S_OK</dt><dd><b>Paths</b> have been succesfuly concatenated.
   <dt>E_FAIL</dt><dd><b>Paths</b> are not compatible and can not be concatenated.
   </dl>
</dl>
</dl>
<a name="GetObjectInContext"></a><a name="GetObjectInContext(int)"></a> <dt> o <b>GetObjectInContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISimObjectInContext','CATISimObjectInContext *')</script>  <b>GetObjectInContext</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iType</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Return the object in context corresponding the <b>Path</b>.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATISimObjectInContext','','CATISimObjectInContext') </script>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   Type of PLO to create:
   <dl>
   <dt>0</dt><dd>An object in context corresponding to the target will be created.
   <dt>1</dt><dd>An object in context corresponding to the representation will be created.
   <dt>2</dt><dd>An object in context corresponding to the the last product instance will be created.
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    A pointer to the object in context which has been created.
</dl>
</dl>
<a name="GetRepInstance"></a><a name="GetRepInstance()"></a> <dt> o <b>GetRepInstance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown *')</script>  <b>GetRepInstance</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Rep instance of the <b>Path</b>. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The Rep instance of the <b>Path</b>. <br><b>Lifecycle rules deviation</b>: No AddRef is done on returned value.
</dl>
</dl>
<a name="GetTarget"></a><a name="GetTarget()"></a> <dt> o <b>GetTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown *')</script>  <b>GetTarget</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The target of the <b>Path</b>. <br><b>Lifecycle rules deviation</b>: No AddRef is done on returned value.
</dl>
</dl>
<a name="GetTransformation"></a><a name="GetTransformation(CATMathTransformation&amp;)"></a> <dt> o <b>GetTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetTransformation</b>(<td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oTransfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Return the transformation corresponding to the <b>Path</b> to the target object
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTransfo</tt>
   <dd>  Positionning matrix of target through the <b>Path</b>.</dd>
</dl>
</dl>
</dl>
<a name="HasPathIncludedIn"></a><a name="HasPathIncludedIn(CATFmtPath*)"></a> <dt> o <b>HasPathIncludedIn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>HasPathIncludedIn</b>(<td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iPath</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Checks if current <b>Path</b> is included in another one.
 Comparison is limited only to the product path, i.e. representation and target are not taken into account.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>  <b>Path</b> for the check.  
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     A CATBoolean.
   <dl><dt>FALSE</dt><dd>Current <b>Path</b> is not included in the target one.
   <dt>TRUE</dt><dd>Current <b>Path</b> is included in the target one.
   </dl>
</dl>
</dl>
<a name="IsEmpty"></a><a name="IsEmpty(int)"></a> <dt> o <b>IsEmpty</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsEmpty</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iTestResult</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Test if the <b>Path</b> is valuated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTestResult</tt>
   <dd> :   <br><b>Legal values</b>:
   <dl><dt>0</dt><dd>Check only if the <b>Path</b> has a target.
   <dt>1</dt><dd>Check the target content.
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An integer.
   <dl><dt>0</dt><dd><b>Path</b> has a target.
   <dt>1</dt><dd><b>Path</b> has no target or an empty one.
   </dl>
</dl>
</dl>
<a name="IsInSameRep"></a><a name="IsInSameRep(CATFmtPath*)"></a> <dt> o <b>IsInSameRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsInSameRep</b>(<td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iSelection</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Checks if both <b>Paths</b> are in the same representation 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSelection</tt>
   <dd>  <b>Path</b> for the check. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     A CATBoolean.
   <br><b>Legal values</b>:
   <dl><dt>FALSE</dt><dd>The <b>Paths</b> are in different representations.
   <dt>TRUE</dt><dd>The <b>Paths</b> are in the same representation.
   </dl>
</dl>
</dl>
<a name="IsSame"></a><a name="IsSame(CATFmtPath*)"></a> <dt> o <b>IsSame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsSame</b>(<td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iSelection</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Checks if both <b>Paths</b> are identical 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Sielection</tt>
   <dd>  <b>Path</b> to compare whith.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     A CATBoolean.
   <br><b>Legal values</b>:
   <dl><dt>FALSE</dt><dd>The <b>Paths</b> are identical.
   <dt>TRUE</dt><dd>The <b>Paths</b> differ.
   </dl>
</dl>
</dl>
<a name="SetAutoLoadingMode"></a><a name="SetAutoLoadingMode(int)"></a> <dt> o <b>SetAutoLoadingMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAutoLoadingMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Manage the automatic loading of the target if necessary, see 
<script type="text/javascript"> activateLinkAnchor('','GetTarget','GetTarget') </script> method.  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> :   <br><b>Legal values</b>:
   <dl><dt>0</dt><dd>No opening nor loading will be performed.
   <dt>1</dt><dd>GetTarget method will trigger a load operation if necessary but not an open operation.
   <dt>2</dt><dd>GetTarget method will automatically trigger a both open and load operation if necessary.
   </dl></dd>
</dl>
</dl>
</dl>
<a name="TruncateWith"></a><a name="TruncateWith(CATFmtPath*)"></a> <dt> o <b>TruncateWith</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>TruncateWith</b>(<td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iPath</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Truncate the curent <b>Path</b> with another one. It removes from the current <b>Path</b> all the leading products 
 corresponding to the iPath argument. Representation and target of the iPath arguements are ignored.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd>  <b>Path</b> to truncate by.   
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <dl><dt>S_OK</dt><dd><b>Path</b> have been succesfuly truncated.
   <dt>E_FAIL</dt><dd><b>Paths</b> are not compatible and concatenation can not be performed.
   </dl>
</dl>
</dl>
<a name="UpdateTarget"></a><a name="UpdateTarget(CATBaseUnknown*)"></a> <dt> o <b>UpdateTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UpdateTarget</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iTarget</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Update the target of the <b>Path</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTarget</tt>
   <dd>  the new target of <b>Path</b>.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmtPath.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFmtToolsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

