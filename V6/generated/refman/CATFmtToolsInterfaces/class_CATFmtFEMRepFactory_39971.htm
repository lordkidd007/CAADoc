<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFmtToolsInterfaces Class CATFmtFEMRepFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFmtToolsInterfaces.htm" href="../CATFmtToolsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFmtToolsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATFmtFEMRepFactory"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFmtToolsInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmtFEMRepFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmtFEMRepFactory_39971','CATFmtFEMRepFactory','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmtFEMRepFactory</b>
</p>
<p>
<b><i> Class to manage creation of FEM representations</i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateRepresentation(CATIAdpEnvironment*,CATBaseUnknown*,CATIType*,CATICkeObject*,CATUnicodeString&amp;,CATBoolean,CATBaseUnknown**)"><b>CreateRepresentation</b></a>(CATIAdpEnvironment*,CATBaseUnknown*,CATIType*,CATICkeObject*,CATUnicodeString&amp;,CATBoolean,CATBaseUnknown**)
<dd>  Creates the representation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateRepresentation"></a><a name="CreateRepresentation(CATIAdpEnvironment*,CATBaseUnknown*,CATIType*,CATICkeObject*,CATUnicodeString&amp;,CATBoolean,CATBaseUnknown**)"></a> <dt> o <b>CreateRepresentation</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateRepresentation</b>(<td><script type="text/javascript"> activateLink('CATIAdpEnvironment','CATIAdpEnvironment*')</script> <td><tt>iEnvironment</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iOwner</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIType','CATIType*')</script> <td><tt>iRepType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeObject','CATICkeObject*')</script> <td><tt>iProxy</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iApplicativeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iInteractiveMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oCreatedRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates the representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Environment</tt>
   <dd>   The applicative environnement. If set to NULL, it will retreive the current environment.
 </dd>
    <dt><tt> iOwner</tt>
   <dd>   Product that will own the representation
 </dd>
    <dt><tt> iRepType</tt>
   <dd>   Reserved for future use (should be set to NULL)
 </dd>
    <dt><tt> iProxy</tt>
   <dd>   Reserved for future use (should be set to NULL)
 </dd>
    <dt><tt> iApplicativeName</tt>
   <dd>   Reserved for future use (should be left blank)
 </dd>
    <dt><tt> iInteractiveMode</tt>
   <dd>   A bolean.
   <br><b>Legal values</b>:
   <dl><dt>TRUE</dt><dd>PLM New user interface will be used.
   <dt>FALSE</dt><dd>Creation will be done without any user interface.
   </dl>
 </dd>
    <dt><tt> oCreatedRep</tt>
   <dd>   Pointer to the location where the pointer to the created representation will be stored.
   This argument could be NULL. If not, it has to be released by the caller.
   Note that the rep pointer will not be available on return of the method in case of interactive creation (PLM New). 
   Caller has to wait until the completion of the command which is started.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Representation have been succesfully created.
   <dt>E_FAIL</dt><dd>Otherwise.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmtFEMRepFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFmtToolsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

