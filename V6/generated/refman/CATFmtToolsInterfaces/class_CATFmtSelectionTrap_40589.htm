<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFmtToolsInterfaces Class CATFmtSelectionTrap</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFmtToolsInterfaces.htm" href="../CATFmtToolsInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFmtToolsInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATFmtSelectionTrap"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFmtToolsInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmtSelectionTrap</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmtSelectionTrap_40589','CATFmtSelectionTrap','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmtSelectionTrap</b>
</p>
<p>
<b><i> Object representing a selection trap.</i></b><br>

 <b>Role</b>: A selection trap is a closed polygonal planar contour which may be used to select objects at screen.
 The selection trap is used by the <script type="text/javascript"> activateLinkAnchor('CATIFmtTrapSelector','','CATIFmtTrapSelector') </script> interface to build the list of selected objects from the contour. <p>The selection trap can be be either explicitely built from a contour definition ( see 
<script type="text/javascript"> activateLinkAnchor('CATFmtSelectionTrap','','CATFmtSelectionTrap') </script> ),  or implicitely managed by a dialog agent.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATFmtSelectionTrap(CATFmtTrapMode,CATMathPlane*,int,CATMathPoint2D*)"><b>CATFmtSelectionTrap</b></a>(CATFmtTrapMode,CATMathPlane*,int,CATMathPoint2D*)
<dd>  Constructs a selection trap from contour definition.
 <dt> o 
    <a href="#~CATFmtSelectionTrap()"><b>~CATFmtSelectionTrap</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Contains(double[3])"><b>Contains</b></a>(double[3])
<dd>  Query if a given location is included within the trap.
 <dt> o 
    <a href="#GetMode()"><b>GetMode</b></a>()
<dd>  Returns the selection mode of the trap.
 <dt> o 
    <a href="#GetNbOfPoints()"><b>GetNbOfPoints</b></a>()
<dd>  Returns number of points defining the contour.
 <dt> o 
    <a href="#GetPlane()"><b>GetPlane</b></a>()
<dd>  Returns the plane on which the trap is defined.
 <dt> o 
    <a href="#GetPoints()"><b>GetPoints</b></a>()
<dd>  Returns the points defining the contour.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATFmtSelectionTrap"></a><a name="CATFmtSelectionTrap(CATFmtTrapMode,CATMathPlane*,int,CATMathPoint2D*)"></a> <dt> o <b>CATFmtSelectionTrap</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmtSelectionTrap</b>(<td><script type="text/javascript"> activateLink('CATFmtTrapMode','CATFmtTrapMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane*')</script> <td><tt>iPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D*')</script> <td><tt>iPoints</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a selection trap from contour definition. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>   Selection mode for trap (intersecting or inclusive).
 </dd>
    <dt><tt> iPlane</tt>
   <dd>   Plane on which the selection trap is defined.
 </dd>
    <dt><tt> iNbPoints</tt>
   <dd>   Number of points defining the trap contour.
 </dd>
    <dt><tt> iPoints</tt>
   <dd>   Array of points defining the trap contour. This array should contain iNbPoints points.
   <br>The contour is implicitely closed.</dd>
</dl>
</dl>
</dl>
<a name="~CATFmtSelectionTrap"></a><a name="~CATFmtSelectionTrap()"></a> <dt> o <b>~CATFmtSelectionTrap</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATFmtSelectionTrap</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="Contains"></a><a name="Contains(double[3])"></a> <dt> o <b>Contains</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>Contains</b>(<td> const <script type="text/javascript"> activateLink('double[3','double[3]')</script> <td><tt>iXYZ</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Query if a given location is included within the trap. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iXYZ</tt>
   <dd>   Coordinates of the location.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The result of the query.
   <br><b>Legal values</b>:
   <dl><dt>0</dt><dd>The location is outside the trap contour.
   <dt>1</dt><dd>The location is inside the trap contour.
   </dl>
</dl>
</dl>
<a name="GetMode"></a><a name="GetMode()"></a> <dt> o <b>GetMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmtTrapMode','inline CATFmtTrapMode')</script>  <b>GetMode</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the selection mode of the trap.
</dl>
<a name="GetNbOfPoints"></a><a name="GetNbOfPoints()"></a> <dt> o <b>GetNbOfPoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbOfPoints</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns number of points defining the contour.
</dl>
<a name="GetPlane"></a><a name="GetPlane()"></a> <dt> o <b>GetPlane</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathPlane','const CATMathPlane *')</script>  <b>GetPlane</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the plane on which the trap is defined.
</dl>
<a name="GetPoints"></a><a name="GetPoints()"></a> <dt> o <b>GetPoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathPoint2D','const CATMathPoint2D *')</script>  <b>GetPoints</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the points defining the contour.
</dl>
<hr>
 This object is included in the file: <b>CATFmtSelectionTrap.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFmtToolsInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

