<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATDraftingGenUseItf Class CATDftGenViewProperties</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATDraftingGenUseItf.htm" href="../CATDraftingGenUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATDraftingGenUseItf";	}
		function getCurrentObjectName() { 
 	return "CATDftGenViewProperties"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATDraftingGenUseItf <script type="text/javascript" > writeClassCharacteristic(); </script> CATDftGenViewProperties</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDftGenViewProperties_46608','CATDftGenViewProperties','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDftGenViewProperties</b>
</p>
<p>
<b><i> Class to manage generative view properties.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDftGenViewProperties()"><b>CATDftGenViewProperties</b></a>()
<dd>  <dt> o 
    <a href="#CATDftGenViewProperties(CATDftGenViewProperties&amp;)"><b>CATDftGenViewProperties</b></a>(CATDftGenViewProperties&amp;)
<dd>  <dt> o 
    <a href="#~CATDftGenViewProperties()"><b>~CATDftGenViewProperties</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Get2DLViewGenerationMode(CATBoolean&amp;)"><b>Get2DLViewGenerationMode</b></a>(CATBoolean&amp;)
<dd>   Gets generation mode for View From 3D (from 2D Layout View).
 <dt> o 
    <a href="#Get3DColorInheritance(CATBoolean&amp;)"><b>Get3DColorInheritance</b></a>(CATBoolean&amp;)
<dd>   Gets 3D color inheritance mode.
 <dt> o 
    <a href="#Get3DPointExtractionMode(CATBoolean&amp;)"><b>Get3DPointExtractionMode</b></a>(CATBoolean&amp;)
<dd>   Gets 3D point mode.
 <dt> o 
    <a href="#Get3DPointsSymbol(int&amp;)"><b>Get3DPointsSymbol</b></a>(int&amp;)
<dd>   Gets 3D point symbol.
 <dt> o 
    <a href="#GetApproximateParameters(int*)"><b>GetApproximateParameters</b></a>(int*)
<dd>   Gets approximate parameters.
 <dt> o 
    <a href="#GetAutoHiddenLinesMode(CATBoolean&amp;)"><b>GetAutoHiddenLinesMode</b></a>(CATBoolean&amp;)
<dd>   Gets Auto hidden lines mode.
 <dt> o 
    <a href="#GetAxisLineExtractionMode(CATBoolean&amp;)"><b>GetAxisLineExtractionMode</b></a>(CATBoolean&amp;)
<dd>   Gets axislines mode.
 <dt> o 
    <a href="#GetCenterlineExtractionMode(CATBoolean&amp;)"><b>GetCenterlineExtractionMode</b></a>(CATBoolean&amp;)
<dd>   Gets centerlines mode.
 <dt> o 
    <a href="#GetFilletRep(CATDftFilletRep*)"><b>GetFilletRep</b></a>(CATDftFilletRep*)
<dd>   Gets fillet mode.
 <dt> o 
    <a href="#GetHiddenLinesMode(CATBoolean&amp;)"><b>GetHiddenLinesMode</b></a>(CATBoolean&amp;)
<dd>   Gets hidden lines mode.
 <dt> o 
    <a href="#GetLimitRepSize(double&amp;)"><b>GetLimitRepSize</b></a>(double&amp;)
<dd>   Gets limit Representation size.
 <dt> o 
    <a href="#GetOcclusionCullingMode(CATBoolean*)"><b>GetOcclusionCullingMode</b></a>(CATBoolean*)
<dd>   Gets the Occlusion Culling mode.
 <dt> o 
    <a href="#GetPatternGenerationMode(CATBoolean&amp;)"><b>GetPatternGenerationMode</b></a>(CATBoolean&amp;)
<dd>   Gets the Pattern Generation mode for the View.
 <dt> o 
    <a href="#GetRasterParameters(int*,RasterLevelOfDetail*,RasterLevelOfDetail*,double*,double*,CATBoolean*)"><b>GetRasterParameters</b></a>(int*,RasterLevelOfDetail*,RasterLevelOfDetail*,double*,double*,CATBoolean*)
<dd>   Retrieves the generated raster parameters.
 <dt> o 
    <a href="#GetRepresentationMode(CatDftGenRepresentationMode*)"><b>GetRepresentationMode</b></a>(CatDftGenRepresentationMode*)
<dd>   Gets 2D representation mode.
 <dt> o 
    <a href="#GetScan3DRepsMode(catDftGenRepPolicy*)"><b>GetScan3DRepsMode</b></a>(catDftGenRepPolicy*)
<dd>   Gets the scan mode of 3D representations.
 <dt> o 
    <a href="#GetSmoothEdgesGenerationMode(CATBoolean&amp;)"><b>GetSmoothEdgesGenerationMode</b></a>(CATBoolean&amp;)
<dd>   Gets the Smooth Edges Generation mode for the View.
 <dt> o 
    <a href="#GetSpecificPropertiesForViewFrom3D(CATBoolean&amp;,CATBoolean&amp;)"><b>GetSpecificPropertiesForViewFrom3D</b></a>(CATBoolean&amp;,CATBoolean&amp;)
<dd>   Gets specific properties of View From 3D (from TPS View).
 <dt> o 
    <a href="#GetThreadExtractionMode(CATBoolean&amp;)"><b>GetThreadExtractionMode</b></a>(CATBoolean&amp;)
<dd>   Gets threads mode.
 <dt> o 
    <a href="#GetWireframeExtractionMode(CATBoolean&amp;,CATBoolean&amp;)"><b>GetWireframeExtractionMode</b></a>(CATBoolean&amp;,CATBoolean&amp;)
<dd>   Gets wireframe mode.
 <dt> o 
    <a href="#Set2DLViewGenerationMode(CATBoolean)"><b>Set2DLViewGenerationMode</b></a>(CATBoolean)
<dd>   Sets generation mode for View From 3D (from 2D Layout View).
 <dt> o 
    <a href="#Set3DColorInheritance(CATBoolean)"><b>Set3DColorInheritance</b></a>(CATBoolean)
<dd>   Sets 3D color inheritance mode.
 <dt> o 
    <a href="#Set3DPointExtractionMode(CATBoolean)"><b>Set3DPointExtractionMode</b></a>(CATBoolean)
<dd>   Sets 3D point mode.
 <dt> o 
    <a href="#Set3DPointsSymbol(int)"><b>Set3DPointsSymbol</b></a>(int)
<dd>   Sets 3D point symbol.
 <dt> o 
    <a href="#SetApproximateParameters(int)"><b>SetApproximateParameters</b></a>(int)
<dd>   Sets approximate parameters.
 <dt> o 
    <a href="#SetAutoHiddenLinesMode(CATBoolean)"><b>SetAutoHiddenLinesMode</b></a>(CATBoolean)
<dd>   Sets hidden lines mode.
 <dt> o 
    <a href="#SetAxisLineExtractionMode(CATBoolean)"><b>SetAxisLineExtractionMode</b></a>(CATBoolean)
<dd>   Sets axislines mode.
 <dt> o 
    <a href="#SetCenterlineExtractionMode(CATBoolean)"><b>SetCenterlineExtractionMode</b></a>(CATBoolean)
<dd>   Sets centerlines mode.
 <dt> o 
    <a href="#SetFilletRep(CATDftFilletRep)"><b>SetFilletRep</b></a>(CATDftFilletRep)
<dd>   Sets fillet mode.
 <dt> o 
    <a href="#SetHiddenLinesMode(CATBoolean)"><b>SetHiddenLinesMode</b></a>(CATBoolean)
<dd>   Sets hidden lines mode.
 <dt> o 
    <a href="#SetLimitRepSize(double)"><b>SetLimitRepSize</b></a>(double)
<dd>   Sets limit Representation size.
 <dt> o 
    <a href="#SetOcclusionCullingMode(CATBoolean)"><b>SetOcclusionCullingMode</b></a>(CATBoolean)
<dd>   Sets the Occlusion Culling mode.
 <dt> o 
    <a href="#SetPatternGenerationMode(CATBoolean)"><b>SetPatternGenerationMode</b></a>(CATBoolean)
<dd>   Sets the Pattern Generation mode for the View.
 <dt> o 
    <a href="#SetRasterParameters(int,RasterLevelOfDetail,RasterLevelOfDetail,double,double,CATBoolean)"><b>SetRasterParameters</b></a>(int,RasterLevelOfDetail,RasterLevelOfDetail,double,double,CATBoolean)
<dd>   Sets the generated raster parameters.
 <dt> o 
    <a href="#SetRepresentationMode(CatDftGenRepresentationMode)"><b>SetRepresentationMode</b></a>(CatDftGenRepresentationMode)
<dd>   Sets 2D representation mode.
 <dt> o 
    <a href="#SetScan3DRepsMode(catDftGenRepPolicy)"><b>SetScan3DRepsMode</b></a>(catDftGenRepPolicy)
<dd>   Sets the scan mode of 3D representations.
 <dt> o 
    <a href="#SetSmoothEdgesGenerationMode(CATBoolean)"><b>SetSmoothEdgesGenerationMode</b></a>(CATBoolean)
<dd>   Sets the Smooth Edges Generation mode for the View.
 <dt> o 
    <a href="#SetSpecificPropertiesForViewFrom3D(CATBoolean,CATBoolean)"><b>SetSpecificPropertiesForViewFrom3D</b></a>(CATBoolean,CATBoolean)
<dd>   Sets specific properties of View From 3D (from TPS View).
 <dt> o 
    <a href="#SetThreadExtractionMode(CATBoolean)"><b>SetThreadExtractionMode</b></a>(CATBoolean)
<dd>   Sets threads mode.
 <dt> o 
    <a href="#SetWireframeExtractionMode(CATBoolean,CATBoolean)"><b>SetWireframeExtractionMode</b></a>(CATBoolean,CATBoolean)
<dd>   Sets wireframe mode.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDftGenViewProperties"></a><a name="CATDftGenViewProperties()"></a> <dt> o <b>CATDftGenViewProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDftGenViewProperties</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="CATDftGenViewProperties"></a><a name="CATDftGenViewProperties(CATDftGenViewProperties&amp;)"></a> <dt> o <b>CATDftGenViewProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDftGenViewProperties</b>(<td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATDftGenViewProperties"></a><a name="~CATDftGenViewProperties()"></a> <dt> o <b>~CATDftGenViewProperties</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATDftGenViewProperties</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Get2DLViewGenerationMode"></a><a name="Get2DLViewGenerationMode(CATBoolean&amp;)"></a> <dt> o <b>Get2DLViewGenerationMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Get2DLViewGenerationMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oGen2DGeom</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Gets generation mode for View From 3D (from 2D Layout View).

 <br><b>Role</b>: Gets the generation mode for View From 2DL view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGen2DGeom</tt>
   <dd> [out]   TRUE if the 2D geometry of Layout view has to be extracted.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="Get3DColorInheritance"></a><a name="Get3DColorInheritance(CATBoolean&amp;)"></a> <dt> o <b>Get3DColorInheritance</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Get3DColorInheritance</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>o3ColorMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets 3D color inheritance mode.

 <br><b>Role</b>: Gets the 3D color inheritance mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> o3ColorMode</tt>
   <dd> [out]   TRUE if 3D color inheritance.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="Get3DPointExtractionMode"></a><a name="Get3DPointExtractionMode(CATBoolean&amp;)"></a> <dt> o <b>Get3DPointExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Get3DPointExtractionMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>o3DPointMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets 3D point mode.

 <br><b>Role</b>: Gets the 3D point mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> o3DPointMode</tt>
   <dd> [out]   TRUE if 3D points are projected.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="Get3DPointsSymbol"></a><a name="Get3DPointsSymbol(int&amp;)"></a> <dt> o <b>Get3DPointsSymbol</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Get3DPointsSymbol</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>o3DPointSymbol</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets 3D point symbol.

 <br><b>Role</b>: Gets the 3D point symbol applied when generating 2D points.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> o3DPointSymbol</tt>
   <dd> [out]   Integer corresponding to the point symbol.
    0: inheritance from 3D point
    other: the symbol number
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetApproximateParameters"></a><a name="GetApproximateParameters(int*)"></a> <dt> o <b>GetApproximateParameters</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApproximateParameters</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oLevelOfDetail</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets approximate parameters.

 <br><b>Role</b>: Gets the approximate level of detail used when computing an approximate view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLevelOfDetail</tt>
   <dd> [out]   level of detail used when computing an approximate view.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetAutoHiddenLinesMode"></a><a name="GetAutoHiddenLinesMode(CATBoolean&amp;)"></a> <dt> o <b>GetAutoHiddenLinesMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAutoHiddenLinesMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oAutoHiddenMode</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Gets Auto hidden lines mode.

 <br><b>Role</b>: Gets the Auto hidden lines mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAutoHiddenMode</tt>
   <dd> [out]   TRUE if hidden lines are visualized in Auto Hidden Mode.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetAxisLineExtractionMode"></a><a name="GetAxisLineExtractionMode(CATBoolean&amp;)"></a> <dt> o <b>GetAxisLineExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisLineExtractionMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oAxisLineMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets axislines mode.

 <br><b>Role</b>: Gets the axislines mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAxisLineMode</tt>
   <dd> [out]   TRUE if axislines are generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetCenterlineExtractionMode"></a><a name="GetCenterlineExtractionMode(CATBoolean&amp;)"></a> <dt> o <b>GetCenterlineExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCenterlineExtractionMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oCenterlineMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets centerlines mode.

 <br><b>Role</b>: Gets the centerlines mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCenterlineMode</tt>
   <dd> [out]   TRUE if centerlines are generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetFilletRep"></a><a name="GetFilletRep(CATDftFilletRep*)"></a> <dt> o <b>GetFilletRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFilletRep</b>(<td><script type="text/javascript"> activateLink('CATDftFilletRep','CATDftFilletRep*')</script> <td><tt>oFilletRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets fillet mode.

 <br><b>Role</b>: Gets the fillet representation mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFilletRep</tt>
   <dd> [out]   fillet representation mode (NoFillet, BoundaryFillet, FilletOriginalEdge...).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.
</dl>
</dl>
<a name="GetHiddenLinesMode"></a><a name="GetHiddenLinesMode(CATBoolean&amp;)"></a> <dt> o <b>GetHiddenLinesMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHiddenLinesMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oHiddenMode</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Gets hidden lines mode.

 <br><b>Role</b>: Gets the hidden lines mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHiddenMode</tt>
   <dd> [out]   TRUE if hidden lines are visualized.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetLimitRepSize"></a><a name="GetLimitRepSize(double&amp;)"></a> <dt> o <b>GetLimitRepSize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitRepSize</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oLimit</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets limit Representation size.

 <br><b>Role</b>: Retrieves the bounding box limits under which a part
 will not be taken into account during view generation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLimit</tt>
   <dd> [out]  The limit value 0. means that no part will be filtered.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetOcclusionCullingMode"></a><a name="GetOcclusionCullingMode(CATBoolean*)"></a> <dt> o <b>GetOcclusionCullingMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOcclusionCullingMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oOcclusionCullingMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets the Occlusion Culling mode.

 <br><b>Role</b>: Gets the Occlusion Culling mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOcclusionCullingMode</tt>
   <dd> [out]  TRUE if Occlusion Culling enables, FALSE if not.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetPatternGenerationMode"></a><a name="GetPatternGenerationMode(CATBoolean&amp;)"></a> <dt> o <b>GetPatternGenerationMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPatternGenerationMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>obPatternMode</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Gets the Pattern Generation mode for the View.

 <br><b>Role</b>: Gets the Pattern mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> obPatternMode</tt>
   <dd> [out]   TRUE if Patterns are generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetRasterParameters"></a><a name="GetRasterParameters(int*,RasterLevelOfDetail*,RasterLevelOfDetail*,double*,double*,CATBoolean*)"></a> <dt> o <b>GetRasterParameters</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRasterParameters</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('RasterLevelOfDetail','RasterLevelOfDetail*')</script> <td><tt>oVisuMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('RasterLevelOfDetail','RasterLevelOfDetail*')</script> <td><tt>oPrintMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oVisu</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oPrint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oLightSourceOn</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the generated raster parameters.

 <br><b>Role</b>: Retrieves the generated raster parameters, for visualization and print purposes.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd> [out]  The  mode used to generate the raster view.
  <br><b>Accepted values</b>: VIEW_NO_DISPLAY (no image generated), VIEW_HRD,
  VIEW_MESH or (VIEW_MESH | VIEW_EDGE)
 </dd>
    <dt><tt> oVisuMode</tt>
   <dd> [out]  The precision mode for visualization.
  <br><b>Accepted values</b>: LowQuality, NormalQuality, HighQuality, or Customize
  (if you want to define the dpi for visualization and print purposes yourself).
 </dd>
    <dt><tt>  oPrintMode</tt>
   <dd> [out]  The precision mode for print purposes.
  <br><b>Accepted values</b>: LowQuality, NormalQuality, HighQuality, or Customize
  (if you want to define the dpi for visualization and print purposes yourself).
 </dd>
    <dt><tt>  oVisu</tt>
   <dd> [out]  The definition in dpi for visualization (number of pixels per inch in the sheet).
 </dd>
    <dt><tt>  oPrint</tt>
   <dd> [out]  The definition in dpi for print purposes.
 </dd>
    <dt><tt> oLightSourceOn</tt>
   <dd> [out]  To get spot light source activation

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetRepresentationMode"></a><a name="GetRepresentationMode(CatDftGenRepresentationMode*)"></a> <dt> o <b>GetRepresentationMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRepresentationMode</b>(<td><script type="text/javascript"> activateLink('CatDftGenRepresentationMode','CatDftGenRepresentationMode*')</script> <td><tt>oRepMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets 2D representation mode.

 <br><b>Role</b>: Gets the 2D representation mode used when projecting.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRepMode</tt>
   <dd> [out]   Representation mode (catGenExactMode, catGenCGRMode, catGenApproximateMode, catGenRasterMode).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetScan3DRepsMode"></a><a name="GetScan3DRepsMode(catDftGenRepPolicy*)"></a> <dt> o <b>GetScan3DRepsMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScan3DRepsMode</b>(<td><script type="text/javascript"> activateLink('catDftGenRepPolicy','catDftGenRepPolicy*')</script> <td><tt>oRepMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets the scan mode of 3D representations.

 <br><b>Role</b>: Gets the scan mode of 3D representations.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRepMode</tt>
   <dd> [out]   The parameter role (catDftGenAllDesignRepsPolicy,	catDftGenFirstDesignRepsPolicy, ...).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetSmoothEdgesGenerationMode"></a><a name="GetSmoothEdgesGenerationMode(CATBoolean&amp;)"></a> <dt> o <b>GetSmoothEdgesGenerationMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSmoothEdgesGenerationMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>obSmoothEdgesMode</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Gets the Smooth Edges Generation mode for the View.

 <br><b>Role</b>: Gets the Smooth Edges mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> obSmoothEdgesMode</tt>
   <dd> [out]   TRUE if SmoothEdges are generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetSpecificPropertiesForViewFrom3D"></a><a name="GetSpecificPropertiesForViewFrom3D(CATBoolean&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetSpecificPropertiesForViewFrom3D</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSpecificPropertiesForViewFrom3D</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oUpdateMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oRedCross</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Gets specific properties of View From 3D (from TPS View).

 <br><b>Role</b>: Gets the specific properties of View From 3D.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUpdateMode</tt>
   <dd> [out]   TRUE if the layout and dress up of annotation extracted from 3d have to be kept.
 </dd>
    <dt><tt> oRedCross</tt>
   <dd> [out]   TRUE if a red cross has to be generated on annotations associated to unrepresented geometry.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the properties are not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetThreadExtractionMode"></a><a name="GetThreadExtractionMode(CATBoolean&amp;)"></a> <dt> o <b>GetThreadExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetThreadExtractionMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oThreadMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets threads mode.

 <br><b>Role</b>: Gets the threads mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oThreadMode</tt>
   <dd> [out]   TRUE if threads are generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="GetWireframeExtractionMode"></a><a name="GetWireframeExtractionMode(CATBoolean&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetWireframeExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetWireframeExtractionMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oWireFrameMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oAlwaysVisble</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets wireframe mode.

 <br><b>Role</b>: Gets the wireframe mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWireFrameMode</tt>
   <dd> [out]   TRUE if wireframe is generated.
 </dd>
    <dt><tt> oAlwaysVisble</tt>
   <dd> [out]   TRUE if wireframe is always visible.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>S_FALSE : if the property is not valuated.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="Set2DLViewGenerationMode"></a><a name="Set2DLViewGenerationMode(CATBoolean)"></a> <dt> o <b>Set2DLViewGenerationMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Set2DLViewGenerationMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iGen2DGeom</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets generation mode for View From 3D (from 2D Layout View).

 <br><b>Role</b>: Sets the generation mode for View From 2DL view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGen2DGeom</tt>
   <dd> [in]   TRUE if the 2D geometry of Layout view has to be extracted.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="Set3DColorInheritance"></a><a name="Set3DColorInheritance(CATBoolean)"></a> <dt> o <b>Set3DColorInheritance</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Set3DColorInheritance</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>i3DColorMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets 3D color inheritance mode.

 <br><b>Role</b>: Sets the 3D color inheritance mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> i3DColorMode</tt>
   <dd> [in]   TRUE if 3D color inheritance.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="Set3DPointExtractionMode"></a><a name="Set3DPointExtractionMode(CATBoolean)"></a> <dt> o <b>Set3DPointExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Set3DPointExtractionMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>i3DPointMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets 3D point mode.

 <br><b>Role</b>: Sets the 3D point mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> i3DPointMode</tt>
   <dd> [in]   TRUE if 3D point must be generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="Set3DPointsSymbol"></a><a name="Set3DPointsSymbol(int)"></a> <dt> o <b>Set3DPointsSymbol</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Set3DPointsSymbol</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>i3DPointSymbol</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets 3D point symbol.

 <br><b>Role</b>: Sets the 3D point symbol to apply when generating 2D points.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> i3DPointSymbol</tt>
   <dd> [in]   Integer corresponding to the point symbol.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetApproximateParameters"></a><a name="SetApproximateParameters(int)"></a> <dt> o <b>SetApproximateParameters</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetApproximateParameters</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLevelOfDetail</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets approximate parameters.

 <br><b>Role</b>: Sets the approximate level of detail used when computing an approximate view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLevelOfDetail</tt>
   <dd> [in]   level of detail used when computing an approximate view.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetAutoHiddenLinesMode"></a><a name="SetAutoHiddenLinesMode(CATBoolean)"></a> <dt> o <b>SetAutoHiddenLinesMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAutoHiddenLinesMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAutoHiddenMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets hidden lines mode.

 <br><b>Role</b>: Sets the Auto hidden lines mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAutoHiddenMode</tt>
   <dd> [in]   TRUE if hidden lines are visualized in Auto Hidden Mode.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetAxisLineExtractionMode"></a><a name="SetAxisLineExtractionMode(CATBoolean)"></a> <dt> o <b>SetAxisLineExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisLineExtractionMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAxisLineMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets axislines mode.

 <br><b>Role</b>: Sets the axislines mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisLineMode</tt>
   <dd> [in]   TRUE if axislines must be generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetCenterlineExtractionMode"></a><a name="SetCenterlineExtractionMode(CATBoolean)"></a> <dt> o <b>SetCenterlineExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCenterlineExtractionMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iCenterlineMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets centerlines mode.

 <br><b>Role</b>: Sets the centerlines mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenterlineMode</tt>
   <dd> [in]   TRUE if centerlines must be generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetFilletRep"></a><a name="SetFilletRep(CATDftFilletRep)"></a> <dt> o <b>SetFilletRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFilletRep</b>(<td> const <script type="text/javascript"> activateLink('CATDftFilletRep','CATDftFilletRep')</script> <td><tt>iFilletRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets fillet mode.

 <br><b>Role</b>: Sets the fillet representation mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilletRep</tt>
   <dd> [in]   fillet representation mode (NoFillet, BoundaryFillet, FilletOriginalEdge...).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetHiddenLinesMode"></a><a name="SetHiddenLinesMode(CATBoolean)"></a> <dt> o <b>SetHiddenLinesMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetHiddenLinesMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iHiddenMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets hidden lines mode.

 <br><b>Role</b>: Sets the hidden lines mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHiddenMode</tt>
   <dd> [in]   TRUE if hidden lines are visualized.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetLimitRepSize"></a><a name="SetLimitRepSize(double)"></a> <dt> o <b>SetLimitRepSize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLimitRepSize</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLimit</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets limit Representation size.

 <br><b>Role</b>: Sets the bounding box limits under which a part
 will not be taken into account during view generation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimit</tt>
   <dd> [in]  The limit value. Set it to 0. to disable this filter.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetOcclusionCullingMode"></a><a name="SetOcclusionCullingMode(CATBoolean)"></a> <dt> o <b>SetOcclusionCullingMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOcclusionCullingMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOcclusionCullingMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the Occlusion Culling mode.

 <br><b>Role</b>: Sets the Occlusion Culling mode for generating views.
  Occlusion Culling uses the graphic card to improve performance during view
  generation, by avoiding the loading of hidden bodies.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOcclusionCullingMode</tt>
   <dd> [in]  TRUE to enable Occlusion Culling, FALSE if not.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetPatternGenerationMode"></a><a name="SetPatternGenerationMode(CATBoolean)"></a> <dt> o <b>SetPatternGenerationMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPatternGenerationMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>ibPatternMode</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Sets the Pattern Generation mode for the View.

 <br><b>Role</b>: Sets the Pattern mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ibPatternMode</tt>
   <dd> [in]   TRUE if Pattern is to be generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetRasterParameters"></a><a name="SetRasterParameters(int,RasterLevelOfDetail,RasterLevelOfDetail,double,double,CATBoolean)"></a> <dt> o <b>SetRasterParameters</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRasterParameters</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('RasterLevelOfDetail','RasterLevelOfDetail')</script> <td><tt>iVisuMode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('RasterLevelOfDetail','RasterLevelOfDetail')</script> <td><tt>iPrintMode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iVisu</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPrint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iLightSourceOn</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the generated raster parameters.

 <br><b>Role</b>: Sets the generated raster parameters, for visualization and print purposes.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> [in]  The  mode used to generate the raster view.
  <br><b>Accepted values</b>: VIEW_NO_DISPLAY (no image generated), VIEW_HRD,
  VIEW_MESH or (VIEW_MESH | VIEW_EDGE)
 </dd>
    <dt><tt>  iVisuMode</tt>
   <dd> [in]  The precision mode for visualization.
  <br><b>Accepted values</b>: LowQuality, NormalQuality, HighQuality, or Customize
 (if you want to define the dpi for visualization and print purposes yourself).
 </dd>
    <dt><tt>  iPrintMode</tt>
   <dd> [in]  The precision mode for print purposes.
  <br><b>Accepted values</b>: LowQuality, NormalQuality, HighQuality, or Customize
 (if you want to define the dpi for visualization and print purposes yourself).    
 </dd>
    <dt><tt>  iVisu</tt>
   <dd>   The definition in dpi for visualization (number of pixels per inch in the sheet).
 </dd>
    <dt><tt>  iPrint</tt>
   <dd> [in]   The definition in dpi for print purposes.
 </dd>
    <dt><tt> iLightSourceOn</tt>
   <dd> [in]  To set spot light source activation (default value activated)

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetRepresentationMode"></a><a name="SetRepresentationMode(CatDftGenRepresentationMode)"></a> <dt> o <b>SetRepresentationMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRepresentationMode</b>(<td> const <script type="text/javascript"> activateLink('CatDftGenRepresentationMode','CatDftGenRepresentationMode')</script> <td><tt>iRepMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets 2D representation mode.

 <br><b>Role</b>: Sets the 2D representation mode used when projecting.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRepMode</tt>
   <dd> [in]   Representation mode (catGenExactMode, catGenCGRMode, catGenApproximateMode, catGenRasterMode).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetScan3DRepsMode"></a><a name="SetScan3DRepsMode(catDftGenRepPolicy)"></a> <dt> o <b>SetScan3DRepsMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetScan3DRepsMode</b>(<td> const <script type="text/javascript"> activateLink('catDftGenRepPolicy','catDftGenRepPolicy')</script> <td><tt>iRepMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the scan mode of 3D representations.

 <br><b>Role</b>: Sets the scan mode of 3D representations.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRepMode</tt>
   <dd> [in]   The parameter role (catDftGenAllDesignRepsPolicy,	catDftGenFirstDesignRepsPolicy, ...).

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetSmoothEdgesGenerationMode"></a><a name="SetSmoothEdgesGenerationMode(CATBoolean)"></a> <dt> o <b>SetSmoothEdgesGenerationMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSmoothEdgesGenerationMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>ibSmoothEdgesMode</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Sets the Smooth Edges Generation mode for the View.

 <br><b>Role</b>: Sets the Smooth Edges mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ibSmoothEdgesMode</tt>
   <dd> [in]   TRUE if Smooth Edges are to be generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetSpecificPropertiesForViewFrom3D"></a><a name="SetSpecificPropertiesForViewFrom3D(CATBoolean,CATBoolean)"></a> <dt> o <b>SetSpecificPropertiesForViewFrom3D</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSpecificPropertiesForViewFrom3D</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iUpdateMode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iRedCross</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets specific properties of View From 3D (from TPS View).

 <br><b>Role</b>: Sets the specific properties of View From 3D.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUpdateMode</tt>
   <dd> [in]   TRUE if the layout and dress up of annotation extracted from 3d have to be kept.
 </dd>
    <dt><tt> iRedCross</tt>
   <dd> [in]   TRUE if a red cross has to be generated on annotations associated to unrepresented geometry.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetThreadExtractionMode"></a><a name="SetThreadExtractionMode(CATBoolean)"></a> <dt> o <b>SetThreadExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetThreadExtractionMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iThreadMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets threads mode.

 <br><b>Role</b>: Sets the threads mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iThreadMode</tt>
   <dd> [in]   TRUE if threads must be generated.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="SetWireframeExtractionMode"></a><a name="SetWireframeExtractionMode(CATBoolean,CATBoolean)"></a> <dt> o <b>SetWireframeExtractionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetWireframeExtractionMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iWireFrameMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAlwaysVisible</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets wireframe mode.

 <br><b>Role</b>: Sets the wireframe mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisLineMode</tt>
   <dd> [in]   TRUE if wireframe must be generated.
 </dd>
    <dt><tt> iAlwaysVisible</tt>
   <dd> [in]   FALSE if wireframe can be hidden.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : if the operation succeeded.
   <br>E_INVALIDARG : if the arguments are incorrect.
   <br>E_FAIL : if the operation failed.

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDftGenViewProperties.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingGenUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

