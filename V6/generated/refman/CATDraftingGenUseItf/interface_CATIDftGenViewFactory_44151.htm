<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATDraftingGenUseItf Interface CATIDftGenViewFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATDraftingGenUseItf.htm" href="../CATDraftingGenUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATDraftingGenUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIDftGenViewFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATDraftingGenUseItf Interface CATIDftGenViewFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftGenViewFactory_44151','CATIDftGenViewFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftGenViewFactory</b>
</p>
<p>
<b><i> This interface contains methods to create generative drafting views.</i></b><br>

 <b>Role</b>: This interface is implemented by sheet object.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateAuxiliaryView(double*,CATMathDirection,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*,double*)"><b>CreateAuxiliaryView</b></a>(double*,CATMathDirection,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*,double*)
<dd>   CreateAuxiliaryView.
 <dt> o 
    <a href="#CreateAuxiliaryViewFrom3DFace(double*,CATOmbObjectInContext*,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*,double*)"><b>CreateAuxiliaryViewFrom3DFace</b></a>(double*,CATOmbObjectInContext*,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*,double*)
<dd>   CreateAuxiliaryViewFrom3DFace.
 <dt> o 
    <a href="#CreateDetailViewAlone(double*,CATDftDetailType,CATISktUseSketch*,CATMathDirection,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateDetailViewAlone</b></a>(double*,CATDftDetailType,CATISktUseSketch*,CATMathDirection,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateDetailViewAlone.
 <dt> o 
    <a href="#CreateDetailViewWithCircle(double*,CATDftDetailType,double*,double,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateDetailViewWithCircle</b></a>(double*,CATDftDetailType,double*,double,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateDetailViewWithCircle.
 <dt> o 
    <a href="#CreateDetailViewWithProfile(double*,CATDftDetailType,CATListPtrCATMathPoint2D,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateDetailViewWithProfile</b></a>(double*,CATDftDetailType,CATListPtrCATMathPoint2D,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateDetailViewWithProfile.
 <dt> o 
    <a href="#CreateFrontView(double*,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateFrontView</b></a>(double*,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateFrontView.
 <dt> o 
    <a href="#CreateIsometricView(double*,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateIsometricView</b></a>(double*,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateIsometricView.
 <dt> o 
    <a href="#CreateProjectionView(double*,CATDftViewType,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateProjectionView</b></a>(double*,CATDftViewType,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateProjectionView.
 <dt> o 
    <a href="#CreateProjectionViewAlone(double*,CATDftViewType,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateProjectionViewAlone</b></a>(double*,CATDftViewType,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateProjectionViewAlone.
 <dt> o 
    <a href="#CreateSectionView(double*,CATDftSectionType,CATListPtrCATMathPoint2D,CATMathDirection,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateSectionView</b></a>(double*,CATDftSectionType,CATListPtrCATMathPoint2D,CATMathDirection,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateSectionView.
 <dt> o 
    <a href="#CreateSectionViewAlone(double*,CATDftSectionType,CATMathPlane*,CATISktUseSketch*,CATMathDirection,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateSectionViewAlone</b></a>(double*,CATDftSectionType,CATMathPlane*,CATISktUseSketch*,CATMathDirection,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateSectionViewAlone.
 <dt> o 
    <a href="#CreateSectionViewFrom3DFace(double*,CATDftSectionType,CATOmbObjectInContext*,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView**,CATUnicodeString,CATMathPoint*,CATBoolean,CATDftGenViewProperties*)"><b>CreateSectionViewFrom3DFace</b></a>(double*,CATDftSectionType,CATOmbObjectInContext*,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView**,CATUnicodeString,CATMathPoint*,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateSectionViewFrom3DFace.
 <dt> o 
    <a href="#CreateSectionViewFrom3DSketch(double*,CATDftSectionType,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateSectionViewFrom3DSketch</b></a>(double*,CATDftSectionType,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateSectionViewFrom3DSketch.
 <dt> o 
    <a href="#CreateUnfoldedView(double*,CATMathPlane,CATOmbObjectInContext*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateUnfoldedView</b></a>(double*,CATMathPlane,CATOmbObjectInContext*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateUnfoldedView.
 <dt> o 
    <a href="#CreateViewFrom3D(double*,CATOmbObjectInContext*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"><b>CreateViewFrom3D</b></a>(double*,CATOmbObjectInContext*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)
<dd>   CreateViewFrom3D.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateAuxiliaryView"></a><a name="CreateAuxiliaryView(double*,CATMathDirection,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*,double*)"></a> <dt> o <b>CreateAuxiliaryView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateAuxiliaryView</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection')</script> <td><tt>iDir</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>ipiDftMotherView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptCallout</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateAuxiliaryView.

 <br><b>Role</b>: This method creates an auxiliary view from a reference view (DftAuxiliaryView type).

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin[2]</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iDir</tt>
   <dd> [in]  The direction of projection of the view:
  This direction must be contained in the plane of the reference view.
 </dd>
    <dt><tt> ipiDftMotherView</tt>
   <dd> [in]   Pointer on the reference view.
 </dd>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new projection view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.
 </dd>
    <dt><tt> iptCallout[2]</tt>
   <dd> [in]   Coordinates in the sheet of the middle of the callout.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateAuxiliaryViewFrom3DFace"></a><a name="CreateAuxiliaryViewFrom3DFace(double*,CATOmbObjectInContext*,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*,double*)"></a> <dt> o <b>CreateAuxiliaryViewFrom3DFace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateAuxiliaryViewFrom3DFace</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ip3DFace</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ip3DBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iDir</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>ipiDftMotherView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>oppiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>ipGenProperties</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptCallout</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateAuxiliaryViewFrom3DFace.

 <br><b>Role</b>: This method creates an auxiliary view using a 3D Face.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> ip3DFace</tt>
   <dd> [in]   The 3D pointed body element. 
 </dd>
    <dt><tt> ip3DBody</tt>
   <dd> [in]   The 3D pointed face element. 
 </dd>
    <dt><tt> iDir</tt>
   <dd> [in]  The direction of projection of the view:
  This direction must be perpendicular to the Face.
 </dd>
    <dt><tt> ipiDftMotherView</tt>
   <dd> [in]   Pointer on the reference view.
 </dd>
    <dt><tt> oppiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new auxiliary view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> ipGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
 </dd>
    <dt><tt> iptCallout[2]</tt>
   <dd> [in]   Coordinates in the sheet of the middle of the callout.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateDetailViewAlone"></a><a name="CreateDetailViewAlone(double*,CATDftDetailType,CATISktUseSketch*,CATMathDirection,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateDetailViewAlone</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateDetailViewAlone</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftDetailType','CATDftDetailType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISktUseSketch','CATISktUseSketch*')</script> <td><tt>iSketch</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection')</script> <td><tt>iDir</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList*')</script> <td><tt>iListLink</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateDetailViewAlone.

 <br><b>Role</b>: This method creates a standalone detail view without reference view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the section view (DftGenRelimit3D, DftGenQuick).
 </dd>
    <dt><tt> iSketch</tt>
   <dd> [in]   The cutting profile is defined by a sketch containing the geometry's description of the detail profile (lines or circle).
   This sketch is created by the user and will be agregated by the resulting section view.
   If the method succeeds, the skecth mustn't be deleted.
 </dd>
    <dt><tt> iDir</tt>
   <dd> [in]  The direction of projection of the view:
  This direction must be perpendicular to the skecth.
 </dd>
    <dt><tt> iListLink</tt>
   <dd> [in]   The list of 3D pointed elements. 
   </dd>
</dl>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new detail view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.

 </dd>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateDetailViewWithCircle"></a><a name="CreateDetailViewWithCircle(double*,CATDftDetailType,double*,double,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateDetailViewWithCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateDetailViewWithCircle</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftDetailType','CATDftDetailType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iCenter</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>ipiDftMotherView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateDetailViewWithCircle.

 <br><b>Role</b>: This method creates a detail view defined with a circle, from a reference view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the section view (DftGenRelimit3D, DftGenQuick).
 </dd>
    <dt><tt> iCenter</tt>
   <dd> [in]   Coordinates of the circle centre.
 </dd>
    <dt><tt> iRadius</tt>
   <dd> [in]   Radius of the circle centre.
 </dd>
    <dt><tt> iListOfPoints</tt>
   <dd> [in]   The parameter role...
 </dd>
    <dt><tt> ipiDftMotherView</tt>
   <dd> [in]   Pointer on the reference view.
 </dd>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new detail view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateDetailViewWithProfile"></a><a name="CreateDetailViewWithProfile(double*,CATDftDetailType,CATListPtrCATMathPoint2D,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateDetailViewWithProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateDetailViewWithProfile</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftDetailType','CATDftDetailType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATMathPoint2D','CATListPtrCATMathPoint2D')</script> <td><tt>iListOfPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>ipiDftMotherView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateDetailViewWithProfile.

 <br><b>Role</b>: This method creates a detail view defined with a profile, from a reference view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the section view (DftGenRelimit3D, DftGenQuick).
 </dd>
    <dt><tt> iListOfPoints</tt>
   <dd> [in]   List of 2D points defining the detail profile.
 </dd>
    <dt><tt> ipiDftMotherView</tt>
   <dd> [in]   Pointer on the reference view.
 </dd>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new detail view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateFrontView"></a><a name="CreateFrontView(double*,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateFrontView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateFrontView</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane')</script> <td><tt>iProjPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList*')</script> <td><tt>iListLink</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateFrontView.

 <br><b>Role</b>: This method creates a front view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin[2]</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iProjPlane</tt>
   <dd> [in]   The projection plane of the view.
 </dd>
    <dt><tt> iListLink</tt>
   <dd> [in]   The list of 3D pointed elements.
   </dd>
</dl>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new front view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateIsometricView"></a><a name="CreateIsometricView(double*,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateIsometricView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateIsometricView</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane')</script> <td><tt>iProjPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList*')</script> <td><tt>iListLink</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateIsometricView.

 <br><b>Role</b>: This method creates an isometric view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin[2]</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iProjPlane</tt>
   <dd> [in]   The projection plane of the view.
 </dd>
    <dt><tt> iListLink</tt>
   <dd> [in]   The list of 3D pointed elements.
   </dd>
</dl>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new isometric view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateProjectionView"></a><a name="CreateProjectionView(double*,CATDftViewType,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateProjectionView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateProjectionView</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftViewType','CATDftViewType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>ipiDftMotherView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateProjectionView.

 <br><b>Role</b>: This method creates a projection view from a reference view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin[2]</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the projection view (DftLeftView, DftRightView, DftTopView,...).
   Use CreateAuxiliaryView in order to create an auxiliary view.
 </dd>
    <dt><tt> ipiDftMotherView</tt>
   <dd> [in]   Pointer on the reference view.
 </dd>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new projection view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateProjectionViewAlone"></a><a name="CreateProjectionViewAlone(double*,CATDftViewType,CATMathPlane,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateProjectionViewAlone</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateProjectionViewAlone</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftViewType','CATDftViewType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane')</script> <td><tt>iProjPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList*')</script> <td><tt>iListLink</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateProjectionViewAlone.

 <br><b>Role</b>: This method creates a standalone projection view without reference view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin[2]</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the projection view (DftLeftView, DftRightView, DftTopView, DftAuxiliaryView,...).
 </dd>
    <dt><tt> iProjPlane</tt>
   <dd> [in]   The projection plane of the view.
 </dd>
    <dt><tt> iListLink</tt>
   <dd> [in]   The list of 3D pointed elements. 
   </dd>
</dl>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new projection view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateSectionView"></a><a name="CreateSectionView(double*,CATDftSectionType,CATListPtrCATMathPoint2D,CATMathDirection,CATIDftView*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateSectionView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateSectionView</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftSectionType','CATDftSectionType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATMathPoint2D','CATListPtrCATMathPoint2D')</script> <td><tt>iListOfPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection')</script> <td><tt>iDir</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>ipiDftMotherView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateSectionView.

 <br><b>Role</b>: This method creates a section view from a reference view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the section view (Section, Cut, SectionAligned,...).
 </dd>
    <dt><tt> iListOfPoints</tt>
   <dd> [in]   List of 2D points defining the section profile.
 </dd>
    <dt><tt> iDir</tt>
   <dd> [in]  The direction of projection of the view:
  This direction must be contained in the plane of the reference view and must be:
  Perpandicular to the first line of the profile.
 </dd>
    <dt><tt> ipiDftMotherView</tt>
   <dd> [in]   Pointer on the reference view.
 </dd>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new section view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateSectionViewAlone"></a><a name="CreateSectionViewAlone(double*,CATDftSectionType,CATMathPlane*,CATISktUseSketch*,CATMathDirection,CATIUnknownList*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateSectionViewAlone</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateSectionViewAlone</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftSectionType','CATDftSectionType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane*')</script> <td><tt>iCuttingPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISktUseSketch','CATISktUseSketch*')</script> <td><tt>iSketch</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection')</script> <td><tt>iDir</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList*')</script> <td><tt>iListLink</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateSectionViewAlone.

 <br><b>Role</b>: This method creates a standalone section view without reference view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the section view (Section, Cut, SectionAligned,...).
 </dd>
    <dt><tt> iCuttingPlane</tt>
   <dd> [in]   If NULL, the next parameter (iSketch) must be valuated.
   If not NULL, the created section view is defined according to the 3D plane.
 </dd>
    <dt><tt> iSketch</tt>
   <dd> [in]   If NULL, the previous parameter (iCuttingPlane) must be valuated.
   If not NULL, the cutting profile is defined by a sketch containing the geometry's description of the section profile (lines).
   This sketch is created by the user and will be agregated by the resulting section view.
   If the method succeeds, the skecth mustn't be deleted.
 </dd>
    <dt><tt> iDir</tt>
   <dd> [in]  The direction of projection of the view,
  If iSkecth valuated :
  This direction must be parallel to the skecth and must be:
  Perpandicular to the first line of the profile.
  If iCuttingPlane valuated :
  This direction is not taken into account. The projection direction is defined by the cutting plane normal.
 </dd>
    <dt><tt> iListLink</tt>
   <dd> [in]   The list of 3D pointed elements. 
   </dd>
</dl>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new section view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.

 </dd>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateSectionViewFrom3DFace"></a><a name="CreateSectionViewFrom3DFace(double*,CATDftSectionType,CATOmbObjectInContext*,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView**,CATUnicodeString,CATMathPoint*,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateSectionViewFrom3DFace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateSectionViewFrom3DFace</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftSectionType','CATDftSectionType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ip3DFace</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ip3DBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iDir</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>oppiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>ipLimitPoints</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>ipGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateSectionViewFrom3DFace.

 <br><b>Role</b>: This method creates a standalone Section view without reference view using 3D Face.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the section view .
 </dd>
    <dt><tt> ipi3DBody</tt>
   <dd> [in]   The 3D pointed face element. 
 </dd>
    <dt><tt> ipi3DFace</tt>
   <dd> [in]   The 3D pointed body element. 
 </dd>
    <dt><tt> iDir</tt>
   <dd> [in]  The direction of projection of the view:
  This direction must be perpendicular to the Face.
 </dd>
    <dt><tt> oppiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new section view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> *ipLimitPoints</tt>
   <dd> [in]   The Limit Points These 2 points allow to determine the extremities of the profile
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> ipGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateSectionViewFrom3DSketch"></a><a name="CreateSectionViewFrom3DSketch(double*,CATDftSectionType,CATOmbObjectInContext*,CATMathDirection&amp;,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateSectionViewFrom3DSketch</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateSectionViewFrom3DSketch</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftSectionType','CATDftSectionType')</script> <td><tt>iViewType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ip3DSketch</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iDir</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>oppiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>ipGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateSectionViewFrom3DSketch.

 <br><b>Role</b>: This method creates a standalone Section view without reference view using 3D Sketch.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iViewType</tt>
   <dd> [in]   The type of the section view .
 </dd>
    <dt><tt> ipi3DSketch</tt>
   <dd> [in]   The 3D pointed Sketch element. 
 </dd>
    <dt><tt> iDir</tt>
   <dd> [in]  The direction of projection of the view:
  This direction must be perpendicular to the skecth.
 </dd>
    <dt><tt> oppiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new section view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> ipGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateUnfoldedView"></a><a name="CreateUnfoldedView(double*,CATMathPlane,CATOmbObjectInContext*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateUnfoldedView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateUnfoldedView</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane')</script> <td><tt>iProjPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>iLink</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateUnfoldedView.

 <br><b>Role</b>: This method creates an unfolded view.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin[2]</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> iProjPlane</tt>
   <dd> [in]   The projection plane of the view.
 </dd>
    <dt><tt> iLink</tt>
   <dd> [in]   The 3D pointed elements. 
 </dd>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new unfolded view.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<a name="CreateViewFrom3D"></a><a name="CreateViewFrom3D(double*,CATOmbObjectInContext*,CATIDftView**,CATUnicodeString,CATBoolean,CATDftGenViewProperties*)"></a> <dt> o <b>CreateViewFrom3D</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateViewFrom3D</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iptOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>i3DTPSViewLink</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>opiDftView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iViewStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iComputeUpdate</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftGenViewProperties','CATDftGenViewProperties*')</script> <td><tt>iGenProperties</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  CreateViewFrom3D.

 <br><b>Role</b>: This method creates a view from 3D.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iptOrigin[2]</tt>
   <dd> [in]   Coordinates of anchor point of the created view.
 </dd>
    <dt><tt> i3DTPSViewLink</tt>
   <dd> [in]   The 3D pointed TPS View. 
 </dd>
    <dt><tt> opiDftView</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the new view from 3D.
 </dd>
    <dt><tt> iViewStyle</tt>
   <dd> [in]   The name of the view style to take into account if different from "".
 </dd>
    <dt><tt> iComputeUpdate</tt>
   <dd> [in]   TRUE : the view is updated.
   FALSE : the view is not updated. See CATIDftGenViewUpdate.
 </dd>
    <dt><tt> iGenProperties</tt>
   <dd> [in]   A pointer on a CATDftGenViewProperties class in order to specify properties.
   If NULL, default properties are used.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK : if the view has been correctly created. 
 <br>E_INVALIDARG : if the arguments are incorrect.
 <br>E_FAIL : if the operation failed.

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftGenViewFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingGenUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

