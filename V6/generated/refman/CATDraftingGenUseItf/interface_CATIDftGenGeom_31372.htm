<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATDraftingGenUseItf Interface CATIDftGenGeom</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATDraftingGenUseItf.htm" href="../CATDraftingGenUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATDraftingGenUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIDftGenGeom"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATDraftingGenUseItf Interface CATIDftGenGeom</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftGenGeom_31372','CATIDftGenGeom','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftGenGeom</b>
</p>
<p>
<b><i> Interface to manage generated geometry in a generative View.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBody(CATBody**,CATBoolean)"><b>GetBody</b></a>(CATBody**,CATBoolean)
<dd>   Gets the body of origin.
 <dt> o 
    <a href="#GetFeature(IID&amp;,IUnknown**,CATBoolean)"><b>GetFeature</b></a>(IID&amp;,IUnknown**,CATBoolean)
<dd>  Gets the feature associated.
 <dt> o 
    <a href="#GetGeometryOfOrigin(CATLISTP(CATCell)**,CATBoolean)"><b>GetGeometryOfOrigin</b></a>(CATLISTP(CATCell)**,CATBoolean)
<dd>  Gets the 3D geometry of origin.
 <dt> o 
    <a href="#GetRepInstance(CATOmbObjectInContext**)"><b>GetRepInstance</b></a>(CATOmbObjectInContext**)
<dd>   Gets the representation instance of origin.
 <dt> o 
    <a href="#GetShowMode(DftGenShowMode&amp;)"><b>GetShowMode</b></a>(DftGenShowMode&amp;)
<dd>   Gets the mode of visualisation.
 <dt> o 
    <a href="#GetTransformation(CATMathTransformation**)"><b>GetTransformation</b></a>(CATMathTransformation**)
<dd>  Gets the transformation of the generated geometry.
 <dt> o 
    <a href="#GetUnderlyingGeometry(CATCurve**)"><b>GetUnderlyingGeometry</b></a>(CATCurve**)
<dd>   Gets the underlying 2D geometry.
 <dt> o 
    <a href="#IsCut(CATBoolean*)"><b>IsCut</b></a>(CATBoolean*)
<dd>  Used to know if the generated geometry is cut by the section plane.
 <dt> o 
    <a href="#SetShowMode(DftGenShowMode)"><b>SetShowMode</b></a>(DftGenShowMode)
<dd>   Sets the mode of visualisation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBody"></a><a name="GetBody(CATBody**,CATBoolean)"></a> <dt> o <b>GetBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBody</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody**')</script> <td><tt>oBody</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iLoadIfNecessary</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the body of origin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBody[out,</tt>
   <dd> CATBaseUnknown#Release]    The "coming from" body in the part.
 </dd>
    <dt><tt> iLoadIfNecessary</tt>
   <dd>    TRUE : loads the pointed representation if it is not already loaded.</dd>
</dl>
</dl>
</dl>
<a name="GetFeature"></a><a name="GetFeature(IID&amp;,IUnknown**,CATBoolean)"></a> <dt> o <b>GetFeature</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFeature</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>oFeature</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iLoadIfNecessary</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the feature associated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIID</tt>
   <dd>     the IID of the returned interface
 </dd>
    <dt><tt> oFeature</tt>
   <dd>     the feature
 </dd>
    <dt><tt> iLoadIfNecessary</tt>
   <dd>    TRUE : loads the pointed representation if it is not already loaded.</dd>
</dl>
</dl>
</dl>
<a name="GetGeometryOfOrigin"></a><a name="GetGeometryOfOrigin(CATLISTP(CATCell)**,CATBoolean)"></a> <dt> o <b>GetGeometryOfOrigin</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGeometryOfOrigin</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)**')</script> <td><tt>oListPtrCATCell</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iLoadIfNecessary</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the 3D geometry of origin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListPtrCATCell</tt>
   <dd>    List of pointers on CATCells.
    After use, it must be DELETED and each cell RELEASED.
 </dd>
    <dt><tt> iLoadIfNecessary</tt>
   <dd>    TRUE : loads the pointed representation if it is not already loaded.</dd>
</dl>
</dl>
</dl>
<a name="GetRepInstance"></a><a name="GetRepInstance(CATOmbObjectInContext**)"></a> <dt> o <b>GetRepInstance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRepInstance</b>(<td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext**')</script> <td><tt>oRepInstance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the representation instance of origin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRepInstance</tt>
   <dd> [out, CATBaseUnknown#Release]		the "coming from" representation instance in the assembly.</dd>
</dl>
</dl>
</dl>
<a name="GetShowMode"></a><a name="GetShowMode(DftGenShowMode&amp;)"></a> <dt> o <b>GetShowMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetShowMode</b>(<td><script type="text/javascript"> activateLink('DftGenShowMode','DftGenShowMode&amp;')</script> <td><tt>oShowMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the mode of visualisation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oShowMode</tt>
   <dd>    see above for definition of ShowMode</dd>
</dl>
</dl>
</dl>
<a name="GetTransformation"></a><a name="GetTransformation(CATMathTransformation**)"></a> <dt> o <b>GetTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTransformation</b>(<td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation**')</script> <td><tt>oTransformation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the transformation of the generated geometry.
 It takes into account all the 3D transformations from the original geometry
 to the resulting geometry. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTransformation</tt>
   <dd>    Mathematical transformation made up of translations and rotations.
		After use, it must be DELETED.</dd>
</dl>
</dl>
</dl>
<a name="GetUnderlyingGeometry"></a><a name="GetUnderlyingGeometry(CATCurve**)"></a> <dt> o <b>GetUnderlyingGeometry</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUnderlyingGeometry</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve**')</script> <td><tt>oCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the underlying 2D geometry.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCurve[out,</tt>
   <dd> CATBaseUnknown#Release]</dd>
</dl>
</dl>
</dl>
<a name="IsCut"></a><a name="IsCut(CATBoolean*)"></a> <dt> o <b>IsCut</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsCut</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oCutInfo</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to know if the generated geometry is cut by the section plane.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCutInfo</tt>
   <dd>   <br>  TRUE = The genItem is cut by the section plane
   <br>  FALSE = The genItem is not cut by the section plane
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt><tt>S_OK</tt> <dd>if the operation succeeded,
 <dt><tt>E_INVALIDARG</tt> <dd>if argument pointer NULL,
 <dt><tt>E_FAIL</tt> <dd>if an unspecified failure occurred.
 </dl>
</dl>
</dl>
<a name="SetShowMode"></a><a name="SetShowMode(DftGenShowMode)"></a> <dt> o <b>SetShowMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetShowMode</b>(<td> const <script type="text/javascript"> activateLink('DftGenShowMode','DftGenShowMode')</script> <td><tt>iShowMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the mode of visualisation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShowMode</tt>
   <dd>    see above for definition of ShowMode</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftGenGeom.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingGenUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

