<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeUIItf Interface CATIKweTypesBrowser</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeUIItf.htm" href="../KnowledgeUIItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeUIItf";	}
		function getCurrentObjectName() { 
 	return "CATIKweTypesBrowser"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeUIItf Interface CATIKweTypesBrowser</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIKweTypesBrowser_30479','CATIKweTypesBrowser','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 interface <b>CATIKweTypesBrowser</b>
</p>
<p>
<b><i> Creates a dialog box to select a sub type</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateTypesBrowser(CATDialog*,CATBoolean)"><b>CreateTypesBrowser</b></a>(CATDialog*,CATBoolean)
<dd>  Creates the browser and fills it up with all the derivable types whose location is Representation.
 <dt> o 
    <a href="#CreateTypesBrowser(CATDialog*,CATLISTV(CATBaseUnknown_var),CATBoolean,CATBoolean)"><b>CreateTypesBrowser</b></a>(CATDialog*,CATLISTV(CATBaseUnknown_var),CATBoolean,CATBoolean)
<dd>  Creates the browser and fills it up with the root types (and all their children) given by iRootTypesList.
 <dt> o 
    <a href="#GetOnBrowserCANCELNotification()"><b>GetOnBrowserCANCELNotification</b></a>()
<dd>  Gets the callback sent when the CANCEL button is pressed or when the browser is closed.
 <dt> o 
    <a href="#GetOnBrowserOKNotification()"><b>GetOnBrowserOKNotification</b></a>()
<dd>  Gets the callback sent when the OK button is pressed.
 <dt> o 
    <a href="#GetSelectedType(CATIType**)"><b>GetSelectedType</b></a>(CATIType**)
<dd>  Gets the selected type.
 <dt> o 
    <a href="#GetSelectedType(CATUnicodeString&amp;)"><b>GetSelectedType</b></a>(CATUnicodeString&amp;)
<dd>  Gets the name of the selected type.
 <dt> o 
    <a href="#SetVisibility(CATULong)"><b>SetVisibility</b></a>(CATULong)
<dd>  Sets the visibility of the types browser.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateTypesBrowser"></a><a name="CreateTypesBrowser(CATDialog*,CATBoolean)"></a> <dt> o <b>CreateTypesBrowser</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateTypesBrowser</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iFather</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iIsRuntime</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the browser and fills it up with all the derivable types whose location is Representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFather</tt>
   <dd>   <br> the father command
 </dd>
    <dt><tt> iIsRuntime</tt>
   <dd>   <br> TRUE if the browser is instantiated in a context of execution, DPX (it enables to display the NLS name and the customized icon of an object)
   <br> FALSE if the browser is instantiated in a buildtime context, DPC (it enables to display the internal name and the standard icon of an object)</dd>
</dl>
</dl>
</dl>
<a name="CreateTypesBrowser"></a><a name="CreateTypesBrowser(CATDialog*,CATLISTV(CATBaseUnknown_var),CATBoolean,CATBoolean)"></a> <dt> o <b>CreateTypesBrowser</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateTypesBrowser</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iFather</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)')</script> <td><tt>iRootTypesList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iIsRuntime</tt><td><tt>= TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iTypeOnly</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the browser and fills it up with the root types (and all their children) given by iRootTypesList.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFather</tt>
   <dd>   <br> the father command
 </dd>
    <dt><tt> iRootTypesList</tt>
   <dd>   <br> the list of the root types to be displayed in the browser
   <br> NOTA BENE : this list must contain only root types, their children are computed afterwards
 </dd>
    <dt><tt> iIsRuntime</tt>
   <dd>   <br> TRUE if the browser is instantiated in a context of execution, DPX (it enables to display the NLS name and the customized icon of an object)
   <br> FALSE if the browser is instantiated in a buildtime context, DPC (it enables to display the internal name and the standard icon of an object)
 </dd>
    <dt><tt> iTypeOnly</tt>
   <dd>   <br> TRUE if the browser is used to present types only (as opposed to extensions: an extension is often inheriting from the type it extends)
   <br> FALSE if the browser can show types and extensions</dd>
</dl>
</dl>
</dl>
<a name="GetOnBrowserCANCELNotification"></a><a name="GetOnBrowserCANCELNotification()"></a> <dt> o <b>GetOnBrowserCANCELNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script>  <b>GetOnBrowserCANCELNotification</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the callback sent when the CANCEL button is pressed or when the browser is closed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATCallbackEvent   <br> the callback.
</dl>
</dl>
<a name="GetOnBrowserOKNotification"></a><a name="GetOnBrowserOKNotification()"></a> <dt> o <b>GetOnBrowserOKNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script>  <b>GetOnBrowserOKNotification</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the callback sent when the OK button is pressed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATCallbackEvent   <br> the callback.
</dl>
</dl>
<a name="GetSelectedType"></a><a name="GetSelectedType(CATIType**)"></a> <dt> o <b>GetSelectedType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSelectedType</b>(<td><script type="text/javascript"> activateLink('CATIType','CATIType**')</script> <td><tt>oSelectedType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the selected type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSelectedType</tt>
   <dd>   <br> The selected type [out, CATBaseUnknown#Release]</dd>
</dl>
</dl>
</dl>
<a name="GetSelectedType"></a><a name="GetSelectedType(CATUnicodeString&amp;)"></a> <dt> o <b>GetSelectedType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSelectedType</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oSelectedType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the name of the selected type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSelectedType</tt>
   <dd>   <br> Name of the selected type.</dd>
</dl>
</dl>
</dl>
<a name="SetVisibility"></a><a name="SetVisibility(CATULong)"></a> <dt> o <b>SetVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetVisibility</b>(<td><script type="text/javascript"> activateLink('CATULong','CATULong')</script> <td><tt>iVisibility</tt><td><tt>= CATDlgShow</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the visibility of the types browser.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVisibility</tt>
   <dd>   <br>
   <b>Legal values</b> : It can be set to either :
   <dl>
   <dt><tt>CATDlgShow</tt><dd> to show the browser,
   <dt><tt>CATDlgHide</tt><dd> to hide the browser.
   </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIKweTypesBrowser.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATKnowledgeUIItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

