<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMLibraryNavUseItf Interface PLMICLGItem</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMLibraryNavUseItf.htm" href="../PLMLibraryNavUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMLibraryNavUseItf";	}
		function getCurrentObjectName() { 
 	return "PLMICLGItem"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMLibraryNavUseItf Interface PLMICLGItem</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMICLGItem_25856','PLMICLGItem','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMICLGItem</b>
</p>
<p>
<b><i> Interface representing Item which is a component classified in a Library.</i></b><br>

 <b>Role:</b> A Library is a tree structure of class in which components
 are classified. 
 <pr>The <script type="text/javascript"> activateLinkAnchor('PLMICLGItem','','PLMICLGItem') </script> interface enables to get the properties  of a classified component.

 
<script type="text/javascript"> activateLinkAnchor('PLMICLGClass','','PLMICLGClass') </script>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFinalObject(CATBaseUnknown*&amp;)"><b>GetFinalObject</b></a>(CATBaseUnknown*&amp;)
<dd>  Returns the classified object pointed by the Item.
 <dt> o 
    <a href="#GetFinalObject(CATIAdpPLMIdentificator*&amp;)"><b>GetFinalObject</b></a>(CATIAdpPLMIdentificator*&amp;)
<dd>  Returns the classified PLMComponent pointed by the Item.
 <dt> o 
    <a href="#GetItemType(PLMICLGItem::ItemType&amp;)"><b>GetItemType</b></a>(PLMICLGItem::ItemType&amp;)
<dd>  Return the type of pointed item.
 <dt> o 
    <a href="#GetKeywordValue(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>GetKeywordValue</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Retrieves the value of a keyword of the current Item (string).
 <dt> o 
    <a href="#GetName(CATUnicodeString&amp;)"><b>GetName</b></a>(CATUnicodeString&amp;)
<dd>  Get the name of Item.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ItemType"><b>ItemType</b></a>
<dd>  Type of classified components.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFinalObject"></a><a name="GetFinalObject(CATBaseUnknown*&amp;)"></a> <dt> o <b>GetFinalObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFinalObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oObj</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the classified object pointed by the Item.
 <br><b>Role</b>This method also work for non PLM objects like features. 
 It is useful for application to get the object to use : some applications are classifying proxies. 
 It resolves the proxy and gives the proxified object. 
 If there is no proxy, it returns the classified object itself.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oObj</tt>
   <dd>   The linked object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the classified object was successfully retrieved.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="GetFinalObject"></a><a name="GetFinalObject(CATIAdpPLMIdentificator*&amp;)"></a> <dt> o <b>GetFinalObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFinalObject</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*&amp;')</script> <td><tt>oComponent</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the classified PLMComponent pointed by the Item.
 <br><b>Role</b>This method will only work for PLM objects. 
 It is useful for application to get the object to use : some applications are classifying proxies. 
 It resolves the proxy and gives the proxified object. 
 If there is no proxy, it returns the classified object itself.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oComponent</tt>
   <dd>   The linked object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the classified object was successfully retrieved.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="GetItemType"></a><a name="GetItemType(PLMICLGItem::ItemType&amp;)"></a> <dt> o <b>GetItemType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetItemType</b>(<td><script type="text/javascript"> activateLink('PLMICLGItem::ItemType','PLMICLGItem::ItemType&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Return the type of pointed item.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>   The type of pointed item
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the type of pointed item was successfully retrieved.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="GetKeywordValue"></a><a name="GetKeywordValue(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetKeywordValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetKeywordValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the value of a keyword of the current Item (string).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>   The name of the Keyword to retrieve.
 </dd>
    <dt><tt> oValue</tt>
   <dd>   The Value of the Keyword as a String.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the value of Keyword was successfully retrieved.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="GetName"></a><a name="GetName(CATUnicodeString&amp;)"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oName</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get the name of Item.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>   The name of Item.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the name of Item was successfully retrieved.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ItemType"> <dt> o <b>ItemType</b>
<dl>
  <dd>
<pre>
enum <b>ItemType</b> {
  Unset,
  Feature,
  Document,
  ComponentFamily,
  Reference,
  Representation,
  Others
}
</pre>
 Type of classified components.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Unset</tt>
   <dd>   Item is not set.
 </dd>
    <dt><tt> Feature</tt>
   <dd>     Feature object
 </dd>
    <dt><tt> Document</tt>
   <dd>   Document object
 </dd>
    <dt><tt> ComponentFamily</tt>
   <dd>   Component family
 </dd>
    <dt><tt> Reference</tt>
   <dd>   Reference
 </dd>
    <dt><tt> Representation</tt>
   <dd>   Representation
 </dd>
    <dt><tt> Others</tt>
   <dd>	All other types excepting the following enum types</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMICLGItem.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMLibraryNavUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

