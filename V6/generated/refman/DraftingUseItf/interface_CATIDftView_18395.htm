<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingUseItf Interface CATIDftView</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DraftingUseItf.htm" href="../DraftingUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DraftingUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIDftView"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DraftingUseItf Interface CATIDftView</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftView_18395','CATIDftView','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftView</b>
</p>
<p>
<b><i> Interface of the drawing view object.</i></b><br>

 <b>Role</b>: The view is a workspace containing geometries and annotations.
 The view may also contain the generative drafting results.
 The generative drafting specifications are available by using the CATIDftGenerSpec 
 interfaces.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('','GetGenerSpec','GetGenerSpec') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Activate()"><b>Activate</b></a>()
<dd>  Used to Activate the view.
 <dt> o 
    <a href="#AddApplicativeExtension(IID&amp;,IUnknown**)"><b>AddApplicativeExtension</b></a>(IID&amp;,IUnknown**)
<dd>  Adds an extension to the view to deal with a specific applicative behavior.
 <dt> o 
    <a href="#GetAngle(double*)"><b>GetAngle</b></a>(double*)
<dd>  Gets the view orientation in the sheet.
 <dt> o 
    <a href="#GetApplicativeExtension(IID&amp;,IUnknown**)"><b>GetApplicativeExtension</b></a>(IID&amp;,IUnknown**)
<dd>   Returns the extension of the view which deals with a specific applicative behavior.
 <dt> o 
    <a href="#GetAxisData(double*,double*)"><b>GetAxisData</b></a>(double*,double*)
<dd>  Returns the coordinates of the view coordinate system origin.
 <dt> o 
    <a href="#GetComponents(IID,CATIUnknownList**)"><b>GetComponents</b></a>(IID,CATIUnknownList**)
<dd>  Used to get the view components (annotations, geometry, callout, .
 <dt> o 
    <a href="#GetGenerSpec(CATIDftGenerSpec**)"><b>GetGenerSpec</b></a>(CATIDftGenerSpec**)
<dd>  
 <dt> o 
    <a href="#GetOleSiteList(CATIUnknownList**)"><b>GetOleSiteList</b></a>(CATIUnknownList**)
<dd>  Gets the list of OLE sites of the views.
 <dt> o 
    <a href="#GetScale(double*)"><b>GetScale</b></a>(double*)
<dd>  Gets the view scale.
 <dt> o 
    <a href="#GetScaleFactor(double*)"><b>GetScaleFactor</b></a>(double*)
<dd>  Enables the user to get the global scale factor between the scale of the view 
 and the global scaling applied by the sheet to the views.
 <dt> o 
    <a href="#GetSheet(CATIDftSheet**)"><b>GetSheet</b></a>(CATIDftSheet**)
<dd>  Gets the sheet containing the view representation.
 <dt> o 
    <a href="#GetViewLink(CATIDftView**,CATDftViewLinkType*,IUnknown**)"><b>GetViewLink</b></a>(CATIDftView**,CATDftViewLinkType*,IUnknown**)
<dd>  Gets the information concerning the view position rule.
 <dt> o 
    <a href="#GetViewName(wchar_t**)"><b>GetViewName</b></a>(wchar_t**)
<dd>  Gets the view name as a string.
 <dt> o 
    <a href="#GetViewNameFormula(IUnknown**)"><b>GetViewNameFormula</b></a>(IUnknown**)
<dd>  Gets the view name formula.
 <dt> o 
    <a href="#GetViewType(CATDftViewType*)"><b>GetViewType</b></a>(CATDftViewType*)
<dd>  Gets the view type.
 <dt> o 
    <a href="#IsActive(boolean*)"><b>IsActive</b></a>(boolean*)
<dd>  Used to know if this view is active.
 <dt> o 
    <a href="#IsAxisVisible(boolean*)"><b>IsAxisVisible</b></a>(boolean*)
<dd>  Used to know if the view axis is visible.
 <dt> o 
    <a href="#IsFrameVisible(boolean*)"><b>IsFrameVisible</b></a>(boolean*)
<dd>  Used to know if the dynamic frame showing the view bounding box is visible.
 <dt> o 
    <a href="#LinkWith(CATIDftView*,CATDftViewLinkType,IUnknown*)"><b>LinkWith</b></a>(CATIDftView*,CATDftViewLinkType,IUnknown*)
<dd>  Used to link the view in position with an other one.
 <dt> o 
    <a href="#RemoveViewLink()"><b>RemoveViewLink</b></a>()
<dd>  
 <dt> o 
    <a href="#SetAngle(double)"><b>SetAngle</b></a>(double)
<dd>  Sets the view orientation in the sheet.
 <dt> o 
    <a href="#SetAxisData(double,double)"><b>SetAxisData</b></a>(double,double)
<dd>  Sets the coordinates of the view coordinate system origin.
 <dt> o 
    <a href="#SetAxisVisibility(boolean)"><b>SetAxisVisibility</b></a>(boolean)
<dd>  Description : Sets the view axis visibility.
 <dt> o 
    <a href="#SetFrameVisibility(boolean)"><b>SetFrameVisibility</b></a>(boolean)
<dd>  Description : Sets the view frame visibility.
 <dt> o 
    <a href="#SetScale(double)"><b>SetScale</b></a>(double)
<dd>  Sets the view scale.
 <dt> o 
    <a href="#SetViewName(wchar_t*)"><b>SetViewName</b></a>(wchar_t*)
<dd>  Sets the view name as a string.
 <dt> o 
    <a href="#SetViewType(CATDftViewType&amp;)"><b>SetViewType</b></a>(CATDftViewType&amp;)
<dd>  Sets the view type.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Activate"></a><a name="Activate()"></a> <dt> o <b>Activate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Activate</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to Activate the view.
   The active view is the view in edition. 
   There is only one active view per sheet in a Drawing.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> View is activated.
 <dt> <tt>E_FAIL</tt>   <dd> View isn't activated.
 </dl>
</dl>
</dl>
<a name="AddApplicativeExtension"></a><a name="AddApplicativeExtension(IID&amp;,IUnknown**)"></a> <dt> o <b>AddApplicativeExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddApplicativeExtension</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>interfaceID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>iExtension</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds an extension to the view to deal with a specific applicative behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> interfaceID</tt>
   <dd>    The interface which describe the extension to be added
 </dd>
    <dt><tt> oExtension</tt>
   <dd>    The added extension. If the extension already exists, it is returned also
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Execution successfully.
 <dt> <tt>E_UNEXPECTED</tt>     <dd> f internal problem.
 <dt> <tt>E_INVALIDARG</tt>     <dd> if not recognize interfaceID.
 <dt> <tt>E_FAIL</tt>   <dd> Execution failed.
 </dl>
</dl>
</dl>
<a name="GetAngle"></a><a name="GetAngle(double*)"></a> <dt> o <b>GetAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngle</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oOrientation</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the view orientation in the sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd>   The view orientation.</dd>
</dl>
</dl>
</dl>
<a name="GetApplicativeExtension"></a><a name="GetApplicativeExtension(IID&amp;,IUnknown**)"></a> <dt> o <b>GetApplicativeExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApplicativeExtension</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>interfaceID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>oExtension</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Returns the extension of the view which deals with a specific applicative behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> interfaceID</tt>
   <dd>    The interface which describes the extension.
 </dd>
    <dt><tt> oExtension</tt>
   <dd> [out, CATBaseUnknown#Release]    The result of the query
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Execution successfully.
 <dt> <tt>E_UNEXPECTED</tt>     <dd> f internal problem.
 <dt> <tt>E_INVALIDARG</tt>     <dd> if not recognize interfaceID.
 <dt> <tt>E_FAIL</tt>   <dd> Execution failed.
 </dl>
</dl>
</dl>
<a name="GetAxisData"></a><a name="GetAxisData(double*,double*)"></a> <dt> o <b>GetAxisData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisData</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oY</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the coordinates of the view coordinate system origin.
 It is expressed with respect to the sheet coordinate system.
 These coordinates, like any length, are measured in millimeters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>double</tt>
   <dd> * oX</tt> [out] The x coordinate of the view.
 </dd>
    <dt><tt> <tt>double</tt>
   <dd> * oY</tt> [out] The y coordinate of the view.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Un <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>
 <dt> <tt>E_FAIL</tt>
 </dl>
</dl>
</dl>
<a name="GetComponents"></a><a name="GetComponents(IID,CATIUnknownList**)"></a> <dt> o <b>GetComponents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetComponents</b>(<td> const <script type="text/javascript"> activateLink('IID','IID')</script> <td><tt>interfaceID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList**')</script> <td><tt>oElems</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to get the view components (annotations, geometry, callout, ...).
 All geometries and annotations are retrieved if IID_CATBaseUnknown is specified.
 Pictures are retrieved only if IID_CATIDrwPicture is specified.
 Callouts are retrieved only if IID_CATIDrwCalloutAccess is specified.
 2D Component instances (aka Ditto) are not managed by this API.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> IID</tt>
   <dd>   The interface filter.
 </dd>
    <dt><tt> oElems</tt>
   <dd> [out, CATBaseUnknown#Release] List of elements found.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Elements found
 <dt> <tt>E_FAIL</tt>   <dd> Execution failed.
 </dl>
</dl>
</dl>
<a name="GetGenerSpec"></a><a name="GetGenerSpec(CATIDftGenerSpec**)"></a> <dt> o <b>GetGenerSpec</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGenerSpec</b>(<td><script type="text/javascript"> activateLink('CATIDftGenerSpec','CATIDftGenerSpec**')</script> <td><tt>opiDftGenerSpec</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R216
   For generative or 2DL views, use 
<script type="text/javascript"> activateLinkAnchor('','GetApplicativeExtension','GetApplicativeExtension') </script> instead.   For TPS views, use 
<script type="text/javascript"> activateLinkAnchor('CATITPSView#GetDraftingView','','CATITPSView#GetDraftingView') </script> and #GetApplicativeExtension instead.
</dl>
</dl>
<a name="GetOleSiteList"></a><a name="GetOleSiteList(CATIUnknownList**)"></a> <dt> o <b>GetOleSiteList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOleSiteList</b>(<td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList**')</script> <td><tt>oOleElemsList</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of OLE sites of the views.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oOleElemsList [out, CATBaseUnknown#Release]  The list of OleSite features
 
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Elements found
 <dt> <tt>E_FAIL</tt>   <dd> Execution failed.
 </dl>
</dl>
</dl>
<a name="GetScale"></a><a name="GetScale(double*)"></a> <dt> o <b>GetScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScale</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oScale</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the view scale.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oScale</tt>
   <dd>   The view scale.</dd>
</dl>
</dl>
</dl>
<a name="GetScaleFactor"></a><a name="GetScaleFactor(double*)"></a> <dt> o <b>GetScaleFactor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScaleFactor</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oScaleFactor</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Enables the user to get the global scale factor between the scale of the view 
 and the global scaling applied by the sheet to the views.
 The relation is viewscale = globalscaling * scalefactor.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>double</tt>
   <dd> * oScaleFactor</tt> [out] The scale factor of the view.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Un <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> SUCCESS
 <dt> <tt>E_FAIL</tt>   <dd> No attribute available.
 </dl>
</dl>
</dl>
<a name="GetSheet"></a><a name="GetSheet(CATIDftSheet**)"></a> <dt> o <b>GetSheet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSheet</b>(<td><script type="text/javascript"> activateLink('CATIDftSheet','CATIDftSheet**')</script> <td><tt>opiDftSheet</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the sheet containing the view representation.
 The returned sheet is the sheet containing the view make-up
 of the view.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiDftSheet</tt>
   <dd> [out, CATBaseUnknown#Release]   The sheet containing the view.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> The Sheet has been found
 <dt> <tt>E_FAIL</tt>   <dd> Execution failed.
 </dl>
</dl>
</dl>
<a name="GetViewLink"></a><a name="GetViewLink(CATIDftView**,CATDftViewLinkType*,IUnknown**)"></a> <dt> o <b>GetViewLink</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetViewLink</b>(<td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>oMother</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDftViewLinkType','CATDftViewLinkType*')</script> <td><tt>oLinkType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>oPosRelation</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the information concerning the view position rule.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CATIDftView</tt>
   <dd> **oMother</tt> [out] The mother view (concerning positionning)
 </dd>
    <dt><tt> <tt>CATDftViewLinkType</tt>
   <dd> *oLinkType</tt> [out] The link mode
 </dd>
    <dt><tt> <tt>IUnknown</tt>
   <dd> **oPosRelation</tt> [out] The Poitioning relation
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Un <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> if oMother is valuated
 <dt> <tt>E_FAIL</tt>   <dd> 
 </dl>
</dl>
</dl>
<a name="GetViewName"></a><a name="GetViewName(wchar_t**)"></a> <dt> o <b>GetViewName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetViewName</b>(<td><script type="text/javascript"> activateLink('wchar_t','wchar_t**')</script> <td><tt>oName</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the view name as a string.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>   The view name
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> View name has been found
 <dt> <tt>E_FAIL</tt>   <dd> No view name found.
 </dl>
</dl>
</dl>
<a name="GetViewNameFormula"></a><a name="GetViewNameFormula(IUnknown**)"></a> <dt> o <b>GetViewNameFormula</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetViewNameFormula</b>(<td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>oVNameFormula</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the view name formula. This object is a CKE formula computing the view name.
 from different inputs.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVNameFormula</tt>
   <dd> [out, CATBaseUnknown#Release]   The view name formula
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> View name formula has been modified
 <dt> <tt>E_FAIL</tt>   <dd> No view name formula found.
 </dl>
</dl>
</dl>
<a name="GetViewType"></a><a name="GetViewType(CATDftViewType*)"></a> <dt> o <b>GetViewType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetViewType</b>(<td><script type="text/javascript"> activateLink('CATDftViewType','CATDftViewType*')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the view type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>   The view type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> View type has been found
 <dt> <tt>E_FAIL</tt>   <dd> No view type found.
 </dl>
</dl>
</dl>
<a name="IsActive"></a><a name="IsActive(boolean*)"></a> <dt> o <b>IsActive</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsActive</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>oActive</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to know if this view is active.
   The active view is the view in edition. 
   There is only one active view int the drawing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oActive</tt>
   <dd>   TRUE if the view is active.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Execution successfully.
 <dt> <tt>E_FAIL</tt>   <dd> Execution failed.
 </dl>
</dl>
</dl>
<a name="IsAxisVisible"></a><a name="IsAxisVisible(boolean*)"></a> <dt> o <b>IsAxisVisible</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsAxisVisible</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>oAxisVisu</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to know if the view axis is visible.
 The axis is visible only when the view is in edition.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAxisVisu</tt>
   <dd>    The axis visibility.</dd>
</dl>
</dl>
</dl>
<a name="IsFrameVisible"></a><a name="IsFrameVisible(boolean*)"></a> <dt> o <b>IsFrameVisible</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsFrameVisible</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>oFVisu</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to know if the dynamic frame showing the view bounding box is visible.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFVisu</tt>
   <dd>    The frame visibility.</dd>
</dl>
</dl>
</dl>
<a name="LinkWith"></a><a name="LinkWith(CATIDftView*,CATDftViewLinkType,IUnknown*)"></a> <dt> o <b>LinkWith</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LinkWith</b>(<td> const <script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>iMotherView</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATDftViewLinkType','CATDftViewLinkType')</script> <td><tt>iLinkType</tt><td><tt>= AUTOMATIC</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IUnknown','IUnknown*')</script> <td><tt>iPosRelation</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to link the view in position with an other one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> MotherView</tt>
   <dd>   The mother view (concerning positionning).
 </dd>
    <dt><tt> iLinkType</tt>
   <dd>   The link mode.
 </dd>
    <dt><tt> iPosRelation</tt>
   <dd>   An user defined relation (not used yet).</dd>
</dl>
</dl>
</dl>
<a name="RemoveViewLink"></a><a name="RemoveViewLink()"></a> <dt> o <b>RemoveViewLink</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveViewLink</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R417
 Removes the view link.
</dl>
</dl>
<a name="SetAngle"></a><a name="SetAngle(double)"></a> <dt> o <b>SetAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngle</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the view orientation in the sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd>   The view orientation</dd>
</dl>
</dl>
</dl>
<a name="SetAxisData"></a><a name="SetAxisData(double,double)"></a> <dt> o <b>SetAxisData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisData</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the coordinates of the view coordinate system origin.
 It is expressed with respect to the sheet coordinate system.
 These coordinates, like any length, are measured in millimeters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>const</tt>
   <dd> double iX</tt> [in] The x coordinate of the view.
 </dd>
    <dt><tt> <tt>const</tt>
   <dd> double iY</tt> [in] The y coordinate of the view.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Un <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>
 <dt> <tt>E_FAIL</tt>
 </dl>
</dl>
</dl>
<a name="SetAxisVisibility"></a><a name="SetAxisVisibility(boolean)"></a> <dt> o <b>SetAxisVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisVisibility</b>(<td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAxisVisu</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Description : Sets the view axis visibility.
 The axis is visible only when the view is in edition.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisVisu</tt>
   <dd>   The axis visibility.</dd>
</dl>
</dl>
</dl>
<a name="SetFrameVisibility"></a><a name="SetFrameVisibility(boolean)"></a> <dt> o <b>SetFrameVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFrameVisibility</b>(<td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iFVisu</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Description : Sets the view frame visibility.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFVisu</tt>
   <dd>   The frame visibility.</dd>
</dl>
</dl>
</dl>
<a name="SetScale"></a><a name="SetScale(double)"></a> <dt> o <b>SetScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetScale</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iScale</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the view scale.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iScale</tt>
   <dd>   The view scale.
   <br><b>Legal Values</b>: The scale is greater than 0.</dd>
</dl>
</dl>
</dl>
<a name="SetViewName"></a><a name="SetViewName(wchar_t*)"></a> <dt> o <b>SetViewName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetViewName</b>(<td> const <script type="text/javascript"> activateLink('wchar_t','wchar_t*')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the view name as a string. This name can override an existing formula.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>   The view name
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> View name has been modified
 <dt> <tt>E_FAIL</tt>   <dd> No modification applied.
 </dl>
</dl>
</dl>
<a name="SetViewType"></a><a name="SetViewType(CATDftViewType&amp;)"></a> <dt> o <b>SetViewType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetViewType</b>(<td> const <script type="text/javascript"> activateLink('CATDftViewType','CATDftViewType&amp;')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the view type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   The view type
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> View type has been modified
 <dt> <tt>E_FAIL</tt>   <dd> Execution failed.
 </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftView.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

