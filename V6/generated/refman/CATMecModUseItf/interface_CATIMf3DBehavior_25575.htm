<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMecModUseItf Interface CATIMf3DBehavior</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMecModUseItf.htm" href="../CATMecModUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMecModUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIMf3DBehavior"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMecModUseItf Interface CATIMf3DBehavior</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMf3DBehavior_25575','CATIMf3DBehavior','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied CATMf3DBehaviorAdapter adapter class.</b></p>
<hr>
<p>
 interface <b>CATIMf3DBehavior</b>
</p>
<p>
<b><i> Interface characterizing the mechanical modeler behaviors of geometrical features.</i></b><br>

 
 <br><b>Role</b>: The geometrical features (i.e. the features derivating of
 <tt>GeometricalElement3D</tt> startup) can be distinguished by the topological
 dimension of their associated topology but, according to mechanical modeler,
 the differences between behaviors are not directly based on this topological
 dimension criterion. They are two categories, defining the way features are
 managed by generic commands (insertion, deletion, copy, ...), which are:
 <p><du><li><b>Solid features</b> (see <script type="text/javascript"> activateLinkAnchor('','IsASolid','IsASolid') </script> method) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 Geometric features generating volume topology (see 
<script type="text/javascript"> activateLinkAnchor('CATLump','','CATLump') </script> and 
<script type="text/javascript"> activateLinkAnchor('CATVolume','','CATVolume') </script> ). <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 Located only in solid sets and solid and surface sets.
 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 Inserted in the specification tree using specific process (see 
<script type="text/javascript"> activateLinkAnchor('CATIMmiUseSolidInsertion','','CATIMmiUseSolidInsertion') </script> ). <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 Implicit link to the preceding feature in the specification tree, modifying and hidding it.</li></p>
 <p><li><b>Surface features</b> (see 
<script type="text/javascript"> activateLinkAnchor('','IsAShape','IsAShape') </script> method) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 Geometric features generating any kind of topology (volume, surface or wireframe).
 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 Located (if no specific restriction) in surface sets (geometrical set and
 ordered geometrical sets) and solid and surface set.</li></du></p>

 <p>The surface feature category contains a sub-category, the volume features, 
 which is a restriction to features generating volume topology (see 
<script type="text/javascript"> activateLinkAnchor('','IsAVolume','IsAVolume') </script> method).</p>

 <p>A feature can not belong to both categories. Therefore the methods 
<script type="text/javascript"> activateLinkAnchor('','IsASolid','IsASolid') </script> and 
<script type="text/javascript"> activateLinkAnchor('','IsAShape','IsAShape') </script> must return different results.</p> 
 <p>Beyond these two categories, there's another category, not exclusive of the
 two preceding one, which is the category of <b>datum features</b> (see 
<script type="text/javascript"> activateLinkAnchor('','IsADatum','IsADatum') </script> method). The datum property applies to features without any link to
 other features, except internal or external references, affected by the
 "not up-to-date" mechanism. In other words datum features are not specification
 features but only copies, static or dynamic, of others geometrical features.</p>

 <p>The behavior of a feature may not be fixed by its late type. For instance,
 a same geometric feature (startup) may be used for both solid or surface designs
 and therefore the methods of this interface must return variable results depending
 on the using context of the feature instance.</p>

 <p><b>Implementation:</b> For every startup deriving from <tt>GeometricalElement3D</tt>,
 it is essential to reimplement this interface to avoid hazardous behaviors.</p>
 <p><b>BOA information</b>: this interface CAN be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#IsADatum()"><b>IsADatum</b></a>()
<dd>   Indicates whether a feature is a datum feature.
 <dt> o 
    <a href="#IsAShape()"><b>IsAShape</b></a>()
<dd>  Indicates whether a feature is a surface feature.
 <dt> o 
    <a href="#IsASolid()"><b>IsASolid</b></a>()
<dd>  Indicates whether a feature is a solid feature.
 <dt> o 
    <a href="#IsAVolume()"><b>IsAVolume</b></a>()
<dd>  Tells whether the feature is a volume feature.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="IsADatum"></a><a name="IsADatum()"></a> <dt> o <b>IsADatum</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsADatum</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
  Indicates whether a feature is a datum feature.
 <br><b>Role:</b> Determines whether datum property (see above) applies to the feature.
 There no link between this property and the fact that the feature is a solid
 feature or a surface feature.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values:</b>
   <dl><dt><tt>S_OK</tt></dt><dd>The feature is a datum feature.</dd>
   <dt><tt>E_FAIL</tt></dt><dd>The feature is not a datum feature.</dd></dl>
</dl>
</dl>
<a name="IsAShape"></a><a name="IsAShape()"></a> <dt> o <b>IsAShape</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsAShape</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates whether a feature is a surface feature.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values:</b>
   <dl><dt><tt>S_OK</tt></dt><dd>The feature is a surface feature.</dd>
   <dt><tt>E_FAIL</tt></dt><dd>The feature is not a surface feature.</dd></dl>
</dl>
</dl>
<a name="IsASolid"></a><a name="IsASolid()"></a> <dt> o <b>IsASolid</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsASolid</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates whether a feature is a solid feature.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values:</b>
   <dl><dt><tt>S_OK</tt></dt><dd>The feature is a solid feature.</dd>
   <dt><tt>E_FAIL</tt></dt><dd>The feature is not a solid feature.</dd></dl>
</dl>
</dl>
<a name="IsAVolume"></a><a name="IsAVolume()"></a> <dt> o <b>IsAVolume</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsAVolume</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Tells whether the feature is a volume feature.
 <br><b>Role:</b>  Tells whether the feature is a volume feature. A volume
 feature is a sub-kind of surface feature  and therefore if the method
 
<script type="text/javascript"> activateLinkAnchor('','IsAVolume','IsAVolume') </script> returns <tt>S_OK</tt>, the method 
<script type="text/javascript"> activateLinkAnchor('CATIMf3DBehavior','IsAShape','CATIMf3DBehavior.IsAShape') </script> invoked on the same feature must also
 return <tt>S_OK</tt>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values</b>:
   <dl><dt><tt>S_OK</tt></dt> <dd>The feature is a volume feature.</dd>
   <dt><tt>E_FAIL</tt></dt> <dd>The feature is not a volume feature. It can 
   nevertheless be a surface feature.</dd></dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMf3DBehavior.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

