<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMecModUseItf Interface CATIMmiUseStructureAnalyse</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMecModUseItf.htm" href="../CATMecModUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMecModUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIMmiUseStructureAnalyse"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMecModUseItf Interface CATIMmiUseStructureAnalyse</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMmiUseStructureAnalyse_47958','CATIMmiUseStructureAnalyse','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMmiUseStructureAnalyse</b>
</p>
<p>
<b><i>   Interface used to retrieve parents and children in the mechanical structure.</i></b><br>

 <b>Role</b>: it shows the relationships between the different elements, based on defined inputs and outputs.
 <p>Note : for dressup features, the parent of a feature is not necessarily the previous feature in the tree but the feature used initially to build
 the feature.
 If a feature is not visible in the tree, it is replaced by its closest visible feature.
 <p>The interface may be used to retrieve the impacts of deletion : if a feature is deleted, it may be becessary to delete its children 
 (otherwise, they may be broken). It is also possible to delete some of its parents (if they are no longer needed).</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAllStructuralChildren(CATClassId,CATListValCATBaseUnknown_var&amp;)"><b>GetAllStructuralChildren</b></a>(CATClassId,CATListValCATBaseUnknown_var&amp;)
<dd>    Retrieves recursively all the children of the current object.
 <dt> o 
    <a href="#GetAllStructuralParents(CATClassId,CATListValCATBaseUnknown_var&amp;)"><b>GetAllStructuralParents</b></a>(CATClassId,CATListValCATBaseUnknown_var&amp;)
<dd>    Retrieves recursively all the parents of the current object.
 <dt> o 
    <a href="#GetDirectStructuralChildren(CATClassId,CATListValCATBaseUnknown_var&amp;)"><b>GetDirectStructuralChildren</b></a>(CATClassId,CATListValCATBaseUnknown_var&amp;)
<dd>    Retrieves the direct children of the current object.
 <dt> o 
    <a href="#GetDirectStructuralParents(CATClassId,CATListValCATBaseUnknown_var&amp;)"><b>GetDirectStructuralParents</b></a>(CATClassId,CATListValCATBaseUnknown_var&amp;)
<dd>    Retrieves the direct parents of the current object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAllStructuralChildren"></a><a name="GetAllStructuralChildren(CATClassId,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetAllStructuralChildren</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllStructuralChildren</b>(<td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iIntfName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Retrieves recursively all the children of the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIntfName</tt>
   <dd>     Name of the interface filtering the kind of objects to be returned.
 </dd>
    <dt><tt> oList</tt>
   <dd>     The list of all children of the current object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   This method returns S_OK if the operation went through successfully and E_FAIL otherwise.
</dl>
</dl>
<a name="GetAllStructuralParents"></a><a name="GetAllStructuralParents(CATClassId,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetAllStructuralParents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllStructuralParents</b>(<td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iIntfName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Retrieves recursively all the parents of the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIntfName</tt>
   <dd>     Name of the interface filtering the kind of objects to be returned.
 </dd>
    <dt><tt> oList</tt>
   <dd>     The list of all parents of the current object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   This method returns S_OK if the operation went through successfully and E_FAIL otherwise.
</dl>
</dl>
<a name="GetDirectStructuralChildren"></a><a name="GetDirectStructuralChildren(CATClassId,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetDirectStructuralChildren</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirectStructuralChildren</b>(<td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iIntfName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Retrieves the direct children of the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIntfName</tt>
   <dd>     Name of the interface filtering the kind of objects to be returned.
 </dd>
    <dt><tt> oList</tt>
   <dd>     The list of direct children of the current object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   This method returns S_OK if the operation went through successfully and E_FAIL otherwise.
</dl>
</dl>
<a name="GetDirectStructuralParents"></a><a name="GetDirectStructuralParents(CATClassId,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetDirectStructuralParents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirectStructuralParents</b>(<td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iIntfName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Retrieves the direct parents of the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIntfName</tt>
   <dd>     Name of the interface filtering the kind of objects to be returned.
 </dd>
    <dt><tt> oList</tt>
   <dd>     The list of direct parents of the current object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   This method returns S_OK if the operation went through successfully and E_FAIL otherwise.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMmiUseStructureAnalyse.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

