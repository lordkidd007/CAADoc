<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMecModUseItf Interface CATIMmiInternalCopyWithLinkEdition</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMecModUseItf.htm" href="../CATMecModUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMecModUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIMmiInternalCopyWithLinkEdition"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMecModUseItf Interface CATIMmiInternalCopyWithLinkEdition</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMmiInternalCopyWithLinkEdition_71426','CATIMmiInternalCopyWithLinkEdition','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMmiInternalCopyWithLinkEdition</b>
</p>
<p>
<b><i> Interface used to change the reference of an internal copy with link.</i></b><br>

 <b>Role</b>: This interface is used to change the reference of objects created either by copy/paste as result with link inside a part 
 or by using <script type="text/javascript"> activateLinkAnchor('CATIMmiUseCreateImport','','CATIMmiUseCreateImport') </script> with the following options : <ul>
 <li>the source and target must be in the same part. 
 <li>the link mode must be set either by the setting "keep link" or by the method 
     
<script type="text/javascript"> activateLinkAnchor('CATIMmiUseCreateImport','SetLinkMode','CATIMmiUseCreateImport.SetLinkMode') </script> (mode TRUE). </ul>
 <p>Internal copies made without a link do not answer to this interface.</p>
 <p>The source of the copy is called the reference feature of the internal copy.</p>
 <p>The reference of an internal copy with link can only be changed on solid internal copies for now.</p>
 <br><p>This interface has two main usages :</p>
 <ol>
 <li>Identifying internal copies with link from other features.
 <li>Changing the reference feature.
 </ol></p>
 <p>Sub elements of the geometry of an internal copy may be referenced by other features. When the reference 
 of an internal copy is changed, its geometry also changes. </p>
 <p>The features that referenced sub elements of the old copied geometry need to be replugged on sub elements 
 of the new copied geometry via a replace operation.</p>
 <p>In order to do this, user intervention is needed to specify on which new sub elements the features need to be rerouted. 
 This has to be done interactively through the Replace Viewer.</p><br>
 <p>see 
<script type="text/javascript"> activateLinkAnchor('CATIMmiInternalCopyWithLink','','CATIMmiInternalCopyWithLink') </script> to retrieve the reference feature.</p> 
 <br><p>The main behaviours of an internal copy with link are the following :</p>
 <ul>
 <li>Updating the internal copy : it performs a synchronization of the geometry by copying the geometry of the 
     reference feature.
 <li>Breaking the link with 
<script type="text/javascript"> activateLinkAnchor('CATIIsolate','Isolate','CATIIsolate.Isolate') </script> . After this operation, the feature will no more answer      to this interface because the link is deleted.
 <li>Temporary isolation with 
<script type="text/javascript"> activateLinkAnchor('CATIMmiResultFreeze','Freeze','CATIMmiResultFreeze.Freeze') </script> (reversed with 
<script type="text/javascript"> activateLinkAnchor('CATIMmiResultFreeze','Unfreeze)','CATIMmiResultFreeze.Unfreeze)') </script>.      After this operation, the feature still answers to this interface.
 </ul></p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#SetSelectedElement(CATIMmiMechanicalFeature_var&amp;,CATBoolean)"><b>SetSelectedElement</b></a>(CATIMmiMechanicalFeature_var&amp;,CATBoolean)
<dd>  Sets the reference of the copy.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="SetSelectedElement"></a><a name="SetSelectedElement(CATIMmiMechanicalFeature_var&amp;,CATBoolean)"></a> <dt> o <b>SetSelectedElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSelectedElement</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ihReferenceFeature</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAuthorizeManualReplugging</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the reference of the copy.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihReferenceFeature</tt>
   <dd>      The reference of the copy.
 </dd>
    <dt><tt> iAuthorizeManualReplugging</tt>
   <dd>      Indicates whether the Replace Viewer should be launched when manual reroute is necessary in order to fully 
      complete the Replace operation.
   <br> Possible values:
   <p><ul><li><code>TRUE</code> means the Replace Viewer is launched if user intervention is needed to complete 
   the Replace operation.</li>
   <li><code>FALSE</code> means the Replace Viewer is never launched even if user intervention is needed to complete 
   the Replace operation.
   <br>In this case, if user intervention is needed, the Replace operation will lead to update errors, but will be 
   considered as a success.</li></ul></p>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <p><code>S_OK</code> the operation went through successfully according to the iAuthorizeManualReplugging argument. 
   <br>This garantees that the internal copy has changed reference, but does not garantee that the features that 
   take the internal copy as import will not have update errors.
   <br>Update errors can occur if manual reroute was necessary but either no Replace Viewer was wanted or 
   Replace Viewer was wanted, but manually reroute was not performed correctly by the user.
   <br><code>E_FAIL</code> if the operation failed or if the internal copy with link is frozen.
   <br>It is not possible to change the reference of a frozen internal copy with link. The internal copy must
   be unfrozen before this method can be called.
   <br><code>E_NOTIMPLEMENTED</code> if the internal copy is not a solid feature.</p>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMmiInternalCopyWithLinkEdition.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

