<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATMecModUseItf Interface CATIMmiUseCreateImport</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATMecModUseItf.htm" href="../CATMecModUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATMecModUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIMmiUseCreateImport"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATMecModUseItf Interface CATIMmiUseCreateImport</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMmiUseCreateImport_37691','CATIMmiUseCreateImport','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMmiUseCreateImport</b>
</p>
<p>
<b><i> Interface to create an import.</i></b><br>

 <b>Role:</b>This class allows to simulate a copy/paste special as result (with link or not) in a easier way than
 <script type="text/javascript"> activateLinkAnchor('CATICutAndPastable','','CATICutAndPastable') </script> .  <br><b>Usage:</b> Set the input object and target, then use the 
<script type="text/javascript"> activateLinkAnchor('','Run','Run') </script> method. Call 
<script type="text/javascript"> activateLinkAnchor('','Reset','Reset') </script> before making another copy. 
 
<dl>
  <dt> Example: </dt>
  <dd> <pre class="code"><pre>  CATIMmiUseCreateImport* pCreateImport = NULL;
  CATMmiUseServicesFactory::CreateMmiUseCreateImport(pCreateImport);
  
  pCreateImport->SetObject(..);
  pCreateImport->SetTarget(...);
  pCreateImport->Run(oResult);
 </pre></pre></dd>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Check()"><b>Check</b></a>()
<dd>  Checks if the copy is possible according to unicity, cyclicity, existing context.
 <dt> o 
    <a href="#GetCreationStatus()"><b>GetCreationStatus</b></a>()
<dd>  Returns creation status.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Resets all parameters and settings.
 <dt> o 
    <a href="#Run(CATIMmiMechanicalFeature_var&amp;)"><b>Run</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Computes the copy according to specified input.
 <dt> o 
    <a href="#SetAttributeMode(int)"><b>SetAttributeMode</b></a>(int)
<dd>  Sets the copy mode for attributes when copying without keeping a link.
 <dt> o 
    <a href="#SetImportApplicativeId(GUID&amp;)"><b>SetImportApplicativeId</b></a>(GUID&amp;)
<dd>  Sets an applicative identifier on the created Mechanical Import.
 <dt> o 
    <a href="#SetLinkMode(CATBoolean)"><b>SetLinkMode</b></a>(CATBoolean)
<dd>  Sets the link option (with or without link) to override default setting (keep link).
 <dt> o 
    <a href="#SetObject(CATBaseUnknown_var&amp;)"><b>SetObject</b></a>(CATBaseUnknown_var&amp;)
<dd>  Sets the source object or subelement.
 <dt> o 
    <a href="#SetPLMOccurrences(CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)"><b>SetPLMOccurrences</b></a>(CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)
<dd>  Selects the PLM occurrences of the source and the target.
 <dt> o 
    <a href="#SetPaths(CATPathElement*,CATPathElement*)"><b>SetPaths</b></a>(CATPathElement*,CATPathElement*)
<dd>  Sets the source path and the target path.
 <dt> o 
    <a href="#SetTarget(CATIMmiMechanicalFeature_var&amp;)"><b>SetTarget</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Sets the target for the copy.
 <dt> o 
    <a href="#SetTypeOfCreatedSolidSet(CATBoolean)"><b>SetTypeOfCreatedSolidSet</b></a>(CATBoolean)
<dd>  Sets the type of created solid set.
 <dt> o 
    <a href="#SetUnicityCheck()"><b>SetUnicityCheck</b></a>()
<dd>  Sets the unicity check.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Check"></a><a name="Check()"></a> <dt> o <b>Check</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Check</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Checks if the copy is possible according to unicity, cyclicity, existing context.
 <br><b>Role:</b> after setting the source and target, and other options
 call this method to know if the copy is possible without actually doing it.
 In case of failure, an error may be retrieved with 
<script type="text/javascript"> activateLinkAnchor('CATError','CATGetLastError','CATError.CATGetLastError') </script> 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if copy is possible, E_FAIL otherwise
</dl>
</dl>
<a name="GetCreationStatus"></a><a name="GetCreationStatus()"></a> <dt> o <b>GetCreationStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCreationStatus</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns creation status.
 <br><b>Role:</b> after computing the copy, this method will return S_FALSE 
 if the result already existed and so was not created (if unicity check is activated).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if an object was created, S_FALSE if result already existed, E_FAIL otherwise
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Reset</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Resets all parameters and settings.
 <br><b>Role:</b> mandatory before making a copy again with other parameters. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL otherwise
</dl>
</dl>
<a name="Run"></a><a name="Run(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Run</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oResult</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Computes the copy according to specified input.
 <br><b>Role:</b> after setting the source and target, and other options
 call Run to get the result.
 In case of failure, an error may be retrieved with 
<script type="text/javascript"> activateLinkAnchor('CATError','CATGetLastError','CATError.CATGetLastError') </script> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResult</tt>
   <dd>   The result of the copy (if ok).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if copy is done, E_FAIL otherwise
</dl>
</dl>
<a name="SetAttributeMode"></a><a name="SetAttributeMode(int)"></a> <dt> o <b>SetAttributeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAttributeMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the copy mode for attributes when copying without keeping a link.
 <br><b>Role:</b> Allows to specify which attributes are copied. By default, if this method is not called
 BRep-attributes and colors on sub-elements are not copied. This method allows to copy color and/or attributes.
 <br>This method has no effect on copies with link, for which colors and attributes are copied according to the setting
 in 3DShape Infrastructure/3DShape.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> 0 : color and BRep-attributes are not copied<br>
 1: color is copied, not BRep-attributes<br>
 2: BRep-attributes are copied, not color<br>
 3: BRep-attributes and colors are copied
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if mode is accepted, E_FAIL otherwise
</dl>
</dl>
<a name="SetImportApplicativeId"></a><a name="SetImportApplicativeId(GUID&amp;)"></a> <dt> o <b>SetImportApplicativeId</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetImportApplicativeId</b>(<td> const <script type="text/javascript"> activateLink('GUID','GUID&amp;')</script> <td><tt>iApplicativeId</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets an applicative identifier on the created Mechanical Import. 
 This method must be called before the Run method. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplicativeId</tt>
   <dd> a unique identifier generated by the application.
 (on Windows, use : <tt>uuidgen -s</tt>)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if id was successfully added, E_FAIL otherwise
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIMmiMechanicalImportApplicative','','CATIMmiMechanicalImportApplicative') </script>
</dl>
</dl>
<a name="SetLinkMode"></a><a name="SetLinkMode(CATBoolean)"></a> <dt> o <b>SetLinkMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLinkMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the link option (with or without link) to override default setting (keep link).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> TRUE to keep the link, FALSE to break the link
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if mode is accepted, E_FAIL otherwise
</dl>
</dl>
<a name="SetObject"></a><a name="SetObject(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetObject</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iObjectToCopy</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the source object or subelement.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectToCopy</tt>
   <dd> a curve, line, surface, plane, point, parameter, sketch, solid feature set
 or a rsur, redge, vertex obtained from selection of a subelement
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if object is allowed, E_FAIL otherwise
</dl>
</dl>
<a name="SetPLMOccurrences"></a><a name="SetPLMOccurrences(CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)"></a> <dt> o <b>SetPLMOccurrences</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPLMOccurrences</b>(<td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>iSourceOcc</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>iTargetOcc</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Selects the PLM occurrences of the source and the target.
 <br><b>Role:</b> for contextual link, both the source and the target occurrences are needed.
 Otherwise a rep-rep (non-contextual) link will be created.
 Both occurrences may also be specified with the 
<script type="text/javascript"> activateLinkAnchor('','SetPaths','SetPaths') </script> method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSourceOcc</tt>
   <dd> the selected occurrence will be used to determine the source context
 </dd>
    <dt><tt> iTargetOcc</tt>
   <dd> the selected occurrence used as a target for the contextual link
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if occurrences are acceptable, E_FAIL otherwise
</dl>
</dl>
<a name="SetPaths"></a><a name="SetPaths(CATPathElement*,CATPathElement*)"></a> <dt> o <b>SetPaths</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPaths</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iSource</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTarget</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the source path and the target path.
 <br><b>Role:</b> this method may be used to replace the 3 previous ones if you prefer
 to use path elements. If the path contains occurrences/instances, a contextual link will be created, 
 otherwise a rep-rep link will be created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSource</tt>
   <dd> path must contain a part + feature or subelement and may contain products and a rep instance (for context)
 </dd>
    <dt><tt> iTarget</tt>
   <dd> Target path must contain a part, a solid or surfacic feature set and may contain products and a rep instance (for context)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if paths are correct, E_FAIL otherwise

</dl>
</dl>
<a name="SetTarget"></a><a name="SetTarget(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>SetTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTarget</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iTarget</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the target for the copy.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTarget</tt>
   <dd> a mechanical part, solid or surfacic feature set
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if target is correct, E_FAIL otherwise
</dl>
</dl>
<a name="SetTypeOfCreatedSolidSet"></a><a name="SetTypeOfCreatedSolidSet(CATBoolean)"></a> <dt> o <b>SetTypeOfCreatedSolidSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTypeOfCreatedSolidSet</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iIsAnOrderedSet</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the type of created solid set.
 <br><b>Role:</b> Specifies the type of solid set, Solid Body (MechanicalTool startup) or Body
 (HybridBody startup), that will be created. This parameter is applicable only in case of solid import. 
 If the type is not specified, it will be based on "Hybrid Design" setting value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIsAnOrderedSet</tt>
   <dd>   TRUE, for a Body, FALSE, for a Solid Body.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if set is accepted, E_FAIL otherwise
</dl>
</dl>
<a name="SetUnicityCheck"></a><a name="SetUnicityCheck()"></a> <dt> o <b>SetUnicityCheck</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetUnicityCheck</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the unicity check.
 <br><b>Role:</b> if unicity check is set, the copy will not be done if a similar copy already exists
 (as in interactive import).
 The existing copy will be returned by 
<script type="text/javascript"> activateLinkAnchor('','GetResult','GetResult') </script>. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if unicity check is allowed, E_FAIL otherwise
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMmiUseCreateImport.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

