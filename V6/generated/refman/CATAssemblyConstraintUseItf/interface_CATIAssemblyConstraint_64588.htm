<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAssemblyConstraintUseItf Interface CATIAssemblyConstraint</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATAssemblyConstraintUseItf.htm" href="../CATAssemblyConstraintUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATAssemblyConstraintUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIAssemblyConstraint"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATAssemblyConstraintUseItf Interface CATIAssemblyConstraint</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIAssemblyConstraint_64588','CATIAssemblyConstraint','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIAssemblyConstraint</b>
</p>
<p>
<b><i> This interface is implemented by the Assembly Constraint.</i></b><br>

 <br><b>Role</b>: Contains API to manage the Assembly Constraint.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetActivity(CATBoolean&amp;)"><b>GetActivity</b></a>(CATBoolean&amp;)
<dd>  Gets the activity of the Constraint.
 <dt> o 
    <a href="#GetGeometry(int,CATOmbObjectInContext*&amp;)"><b>GetGeometry</b></a>(int,CATOmbObjectInContext*&amp;)
<dd>  Gets the geometry pointed by the constraint.
 <dt> o 
    <a href="#GetMaxValue(int,double&amp;)"><b>GetMaxValue</b></a>(int,double&amp;)
<dd>  Gets the maximal value of the constraint.
 <dt> o 
    <a href="#GetMinValue(int,double&amp;)"><b>GetMinValue</b></a>(int,double&amp;)
<dd>  Gets the minimal value of the constraint.
 <dt> o 
    <a href="#GetMode(CATIAssemblyConstraint::Mode&amp;)"><b>GetMode</b></a>(CATIAssemblyConstraint::Mode&amp;)
<dd>  Gets the mode of the constraint.
 <dt> o 
    <a href="#GetNbGeometries(int&amp;)"><b>GetNbGeometries</b></a>(int&amp;)
<dd>  Gets number of elements pointed by the constraint.
 <dt> o 
    <a href="#GetNbOptions(int&amp;)"><b>GetNbOptions</b></a>(int&amp;)
<dd>  Gets the options number of the constraint.
 <dt> o 
    <a href="#GetNbValues(int&amp;)"><b>GetNbValues</b></a>(int&amp;)
<dd>  Gets the values number of the constraint.
 <dt> o 
    <a href="#GetOption(int,CATIAssemblyConstraint::Option&amp;)"><b>GetOption</b></a>(int,CATIAssemblyConstraint::Option&amp;)
<dd>  Gets the options number of the constraint.
 <dt> o 
    <a href="#GetType(CATIAssemblyConstraint::Type&amp;)"><b>GetType</b></a>(CATIAssemblyConstraint::Type&amp;)
<dd>  <dt> o 
    <a href="#GetValue(int,double&amp;)"><b>GetValue</b></a>(int,double&amp;)
<dd>  Gets the value of the constraint.
 <dt> o 
    <a href="#SetActivity(CATBoolean)"><b>SetActivity</b></a>(CATBoolean)
<dd>  Sets the activity of the Constraint.
 <dt> o 
    <a href="#SetMaxValue(int,double)"><b>SetMaxValue</b></a>(int,double)
<dd>  Sets the maximal value of the constraint.
 <dt> o 
    <a href="#SetMinValue(int,double)"><b>SetMinValue</b></a>(int,double)
<dd>  Sets the minimal value of the constraint.
 <dt> o 
    <a href="#SetMode(CATIAssemblyConstraint::Mode)"><b>SetMode</b></a>(CATIAssemblyConstraint::Mode)
<dd>  Sets the mode of the constraint.
 <dt> o 
    <a href="#SetOption(int,CATIAssemblyConstraint::Option)"><b>SetOption</b></a>(int,CATIAssemblyConstraint::Option)
<dd>  Sets the options number of the constraint.
 <dt> o 
    <a href="#SetValue(int,double)"><b>SetValue</b></a>(int,double)
<dd>  Sets the value of the constraint.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#Mode"><b>Mode</b></a>
<dd>  Assembly Constraint mode.
 <dt> o 
    <a href="#Option"><b>Option</b></a>
<dd>  This Enum defines the constraint geometry option.
 <dt> o 
    <a href="#Type"><b>Type</b></a>
<dd>  Assembly Constraint type.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetActivity"></a><a name="GetActivity(CATBoolean&amp;)"></a> <dt> o <b>GetActivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetActivity</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oActive</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the activity of the Constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oActive</tt>
   <dd> [out] The activity. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetGeometry"></a><a name="GetGeometry(int,CATOmbObjectInContext*&amp;)"></a> <dt> o <b>GetGeometry</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGeometry</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbe</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*&amp;')</script> <td><tt>oGeometry</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the geometry pointed by the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inbe</tt>
   <dd>	 [in] The indice of impacted . 
 </dd>
    <dt><tt> oGeometry</tt>
   <dd> [out] The geometry.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetMaxValue"></a><a name="GetMaxValue(int,double&amp;)"></a> <dt> o <b>GetMaxValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaxValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oval</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the maximal value of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inumvalue</tt>
   <dd> [in] The value identifier. 
 </dd>
    <dt><tt> oval</tt>
   <dd> [out] The minimun value. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetMinValue"></a><a name="GetMinValue(int,double&amp;)"></a> <dt> o <b>GetMinValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMinValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oval</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the minimal value of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inumvalue</tt>
   <dd> [in] The value identifier. 
 </dd>
    <dt><tt> oval</tt>
   <dd> [out] The minimun value. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetMode"></a><a name="GetMode(CATIAssemblyConstraint::Mode&amp;)"></a> <dt> o <b>GetMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMode</b>(<td><script type="text/javascript"> activateLink('CATIAssemblyConstraint::Mode','CATIAssemblyConstraint::Mode&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the mode of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd> [out] The constraint mode. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetNbGeometries"></a><a name="GetNbGeometries(int&amp;)"></a> <dt> o <b>GetNbGeometries</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbGeometries</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onbElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets number of elements pointed by the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> onbElem</tt>
   <dd> [out] The number of elements. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd>If the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetNbOptions"></a><a name="GetNbOptions(int&amp;)"></a> <dt> o <b>GetNbOptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbOptions</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onboption</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the options number of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> onboption</tt>
   <dd> [out] The number of the options. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetNbValues"></a><a name="GetNbValues(int&amp;)"></a> <dt> o <b>GetNbValues</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbValues</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onbvalues</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the values number of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> onbvalues</tt>
   <dd> [out] The values number. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetOption"></a><a name="GetOption(int,CATIAssemblyConstraint::Option&amp;)"></a> <dt> o <b>GetOption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOption</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inumOption</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAssemblyConstraint::Option','CATIAssemblyConstraint::Option&amp;')</script> <td><tt>option</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the options number of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inumOption</tt>
   <dd> [in] The value identifier. 
 </dd>
    <dt><tt> oOption</tt>
   <dd> [out] The option. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetType"></a><a name="GetType(CATIAssemblyConstraint::Type&amp;)"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetType</b>(<td><script type="text/javascript"> activateLink('CATIAssemblyConstraint::Type','CATIAssemblyConstraint::Type&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="GetValue"></a><a name="GetValue(int,double&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oval</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the value of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inumvalue</tt>
   <dd> [in] The value identifier. 
 </dd>
    <dt><tt> oval</tt>
   <dd> [out] The value. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="SetActivity"></a><a name="SetActivity(CATBoolean)"></a> <dt> o <b>SetActivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetActivity</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iActive</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the activity of the Constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActive</tt>
   <dd> [in] The activity. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="SetMaxValue"></a><a name="SetMaxValue(int,double)"></a> <dt> o <b>SetMaxValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMaxValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>ival</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the maximal value of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inumvalue</tt>
   <dd> [in] The value identifier. 
 </dd>
    <dt><tt> ival</tt>
   <dd> [in] The minimun value. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="SetMinValue"></a><a name="SetMinValue(int,double)"></a> <dt> o <b>SetMinValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMinValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>ival</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the minimal value of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inumvalue</tt>
   <dd> [in] The value identifier. 
 </dd>
    <dt><tt> ival</tt>
   <dd> [in] The minimun value. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="SetMode"></a><a name="SetMode(CATIAssemblyConstraint::Mode)"></a> <dt> o <b>SetMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMode</b>(<td><script type="text/javascript"> activateLink('CATIAssemblyConstraint::Mode','CATIAssemblyConstraint::Mode')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the mode of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> [in] The constraint mode. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   <dt><tt>E_INVALIDARG</tt> <dd>The input value is not compatible with 
                                 the type of the constraint.
   </dl>
</dl>
</dl>
<a name="SetOption"></a><a name="SetOption(int,CATIAssemblyConstraint::Option)"></a> <dt> o <b>SetOption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOption</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inumOption</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAssemblyConstraint::Option','CATIAssemblyConstraint::Option')</script> <td><tt>ioption</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the options number of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inumOption</tt>
   <dd> [in] The value identifier. 
 </dd>
    <dt><tt> iOption</tt>
   <dd> [in] The option. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(int,double)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>ival</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inumvalue</tt>
   <dd> [in] The value identifier. 
 </dd>
    <dt><tt> ival</tt>
   <dd> [in] The value. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="Mode"> <dt> o <b>Mode</b>
<dl>
  <dd>
<pre>
enum <b>Mode</b> {
  Mode_Error,
  Mode_DrivingMode,
  Mode_MeasuredMode,
  Mode_ControlledMode
}
</pre>
 Assembly Constraint mode.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   Mode_Error,</tt>
   <dd>       Not used. May be return in case of error.
   </dd>
    <dt><tt>   Mode_DrivingMode,</tt>
   <dd>       The constraint definition is applied during the PLM update.
   </dd>
    <dt><tt>   Mode_MeasuredMode,</tt>
   <dd>       The constraint value is deducted, from its definition and other 
     constraints of the engineering connection, during the PLM update.
   </dd>
    <dt><tt>   Mode_ControlledMode,</tt>
   <dd>       Defines the constraint controlled by the user, in the kinematics
     relation. The constraint value is defined between bounds.</dd>
</dl>
</dl>
</dl>
<a name="Option"> <dt> o <b>Option</b>
<dl>
  <dd>
<pre>
enum <b>Option</b> {
  Option_Error,
  Option_UndefinedOrientation,
  Option_PlaneSameOrientation,
  Option_PlaneOppositeOrientation,
  Option_LineParallelism,
  Option_LineSameOrientation,
  Option_LineOppositeOrientation,
  Option_HingeDirectAngle,
  Option_HingeAnglePlus180,
  Option_HingeSupplementaryAngle,
  Option_HingeComplementaryTO360,
  Option_AxisSystemX,
  Option_AxisSystemY,
  Option_AxisSystemZ
}
</pre>
 This Enum defines the constraint geometry option. The option depends 
 of the Assembly Constraint type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   Option_Error</tt>
   <dd>    Not used. May be return in case of error.
   </dd>
    <dt><tt>   Option_Undefined</tt>
   <dd>       The plane orientations are undefined and can be modified during the PLM 
     update.
   </dd>
    <dt><tt>   Option_PlaneSameOrientation</tt>
   <dd>       The plane orientations are the same.
   </dd>
    <dt><tt>   Option_PlaneOppositeOrientation</tt>
   <dd>       The plane orientations are opposite.
   </dd>
    <dt><tt>   Option_PlaneOppositeOrientation</tt>
   <dd>       The plane orientations are opposite.
   </dd>
    <dt><tt>   Option_LineParallelism</tt>
   <dd>      The lines are parallel but not oriented. 
   </dd>
    <dt><tt>   Option_LineSameOrientation</tt>
   <dd>      The lines orientations are the same. 
   </dd>
    <dt><tt>   Option_LineOppositeOrientation</tt>
   <dd>      The lines orientations are opposite.
   </dd>
    <dt><tt>   Option_HingeDirectAngle</tt>
   <dd>      The angle is the direct angle.
   </dd>
    <dt><tt>   Option_HingeDirectAnglePlus180</tt>
   <dd>      The angle is equal to direct angle + 180deg.
   </dd>
    <dt><tt>   Option_HingeSupplementaryAngle</tt>
   <dd>      The angle is the supplementary of the direct angle.
   </dd>
    <dt><tt>   Option_HingeComplementaryTO360</tt>
   <dd>      The angle is the complementary angle to 360deg.
   </dd>
    <dt><tt>   Option_AxisSystemX</tt>
   <dd>      .
   </dd>
    <dt><tt>   Option_AxisSystemY</tt>
   <dd>      .
   </dd>
    <dt><tt>   Option_AxisSystemZ</tt>
   <dd>      .</dd>
</dl>
</dl>
</dl>
<a name="Type"> <dt> o <b>Type</b>
<dl>
  <dd>
<pre>
enum <b>Type</b> {
  Type_Error,
  Type_FixInstance,
  Type_FixAxisSystem,
  Type_FixInstanceInstance,
  Type_FixInstanceAxisSystem,
  Type_FixAxisSystemAxisSystem,
  Type_FixTransfoInstance,
  Type_FixTransfoAxisSystem,
  Type_FixTransfoInstanceInstance,
  Type_FixTransfoInstanceAxisSystem,
  Type_FixTransfoAxisSystemAxisSystem,
  Type_CoincidencePointPoint,
  Type_CoincidencePointLine,
  Type_CoincidencePointCurve,
  Type_CoincidencePointPlane,
  Type_CoincidencePointSurface,
  Type_CoincidenceLineLine,
  Type_CoincidenceLinePlane,
  Type_CoincidencePlanePlane,
  Type_CoincidenceAxisSystemAxisSystem,
  Type_ContactCircleSphere,
  Type_ContactCircleCone,
  Type_ContactPlanePlane,
  Type_ContactPlaneCylinder,
  Type_ContactPlaneSphere,
  Type_ContactCylinderCylinder,
  Type_ContactSphereSphere,
  Type_ContactSphereCone,
  Type_ContactConeCone,
  Type_DistancePointPoint,
  Type_DistancePointLine,
  Type_DistancePointPlane,
  Type_DistanceLineLine,
  Type_DistanceLinePlane,
  Type_DistancePlanePlane,
  Type_AngleLineLine,
  Type_AngleLinePlane,
  Type_AnglePlanePlane,
  Type_AnglePlanePlaneLine,
  Type_SymmetryPointPointPlane,
  Type_SymmetryLineLinePlane,
  Type_SymmetryPlanePlanePlane,
  Type_SymmetryAxisSystemAxisSystemPlane,
  Type_SymmetryInstanceInstancePlane,
  Type_CouplingLengthLength,
  Type_CouplingAngleAngle,
  Type_CouplingLengthAngle,
  Type_CouplingAngleLength,
  Type_LengthPointCurve,
  Type_ParallelismLineLine,
  Type_ParallelismLinePlane,
  Type_ParallelismPlanePlane,
  Type_PerpendicularityLineLine,
  Type_PerpendicularityLinePlane,
  Type_PerpendicularityPlanePlane,
  Type_RollCurveCurve,
  Type_SlideCurveCurve,
  Type_FixSymmetricallyNewRef,
  Type_FixSymmetricallySameExistingRef
}
</pre>
 Assembly Constraint type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   Type_Error</tt>
   <dd>    Not used. May be return in case of error.
   </dd>
    <dt><tt>   Type_FixInstance</tt>
   <dd>    FixInstance.
   </dd>
    <dt><tt>   Type_FixAxisSystem</tt>
   <dd>    FixAxisSystem.
   </dd>
    <dt><tt>   Type_FixInstanceInstance</tt>
   <dd>    FixInstanceInstance.
   </dd>
    <dt><tt>   Type_FixInstanceAxisSystem</tt>
   <dd>    FixInstanceAxisSystem.
   </dd>
    <dt><tt>   Type_FixAxisSystemAxisSystem</tt>
   <dd>    FixAxisSystemAxisSystem.
   </dd>
    <dt><tt>   Type_FixTransfoInstance</tt>
   <dd>    FixTransfoInstance.
   </dd>
    <dt><tt>   Type_FixTransfoAxisSystem</tt>
   <dd>    FixTransfoAxisSystem.
   </dd>
    <dt><tt>   Type_FixTransfoInstanceInstance</tt>
   <dd>    FixTransfoInstanceInstance.
   </dd>
    <dt><tt>   Type_FixTransfoInstanceAxisSystem</tt>
   <dd>    FixTransfoInstanceAxisSystem.
   </dd>
    <dt><tt>   Type_FixTransfoAxisSystemAxisSystem</tt>
   <dd>    FixTransfoAxisSystemAxisSystem.
   </dd>
    <dt><tt>   Type_CoincidencePointPoint</tt>
   <dd>    CoincidencePointPoint.
   </dd>
    <dt><tt>   Type_CoincidencePointLine</tt>
   <dd>    CoincidencePointLine.
   </dd>
    <dt><tt>   Type_CoincidencePointCurve</tt>
   <dd>    CoincidencePointCurve.
   </dd>
    <dt><tt>   Type_CoincidencePointPlane</tt>
   <dd>    CoincidencePointPlane.
   </dd>
    <dt><tt>   Type_CoincidencePointSurface</tt>
   <dd>    CoincidencePointSurface.
   </dd>
    <dt><tt>   Type_CoincidenceLineLine</tt>
   <dd>    CoincidenceLineLine.
   </dd>
    <dt><tt>   Type_CoincidenceLinePlane</tt>
   <dd>    CoincidenceLinePlane.
   </dd>
    <dt><tt>   Type_CoincidencePlanePlane</tt>
   <dd>    CoincidencePlanePlane.
   </dd>
    <dt><tt>   Type_CoincidenceAxisSystemAxisSystem</tt>
   <dd>    CoincidenceAxisSystemAxisSystem.
   </dd>
    <dt><tt>   Type_ContactCircleSphere</tt>
   <dd>    ContactCircleSphere.
   </dd>
    <dt><tt>   Type_ContactCircleCone</tt>
   <dd>    ContactCircleCone.
   </dd>
    <dt><tt>   Type_ContactPlanePlane</tt>
   <dd>    ContactPlanePlane.
   </dd>
    <dt><tt>   Type_ContactPlaneCylinder</tt>
   <dd>    ContactPlaneCylinder.
   </dd>
    <dt><tt>   Type_ContactPlaneSphere</tt>
   <dd>    ContactPlaneSphere.
   </dd>
    <dt><tt>   Type_ContactCylinderCylinder</tt>
   <dd>    ContactCylinderCylinder.
   </dd>
    <dt><tt>   Type_ContactSphereSphere</tt>
   <dd>    ContactSphereSphere.
   </dd>
    <dt><tt>   Type_ContactSphereCone</tt>
   <dd>    ContactSphereCone.
   </dd>
    <dt><tt>   Type_ContactConeCone</tt>
   <dd>    ContactConeCone.
   </dd>
    <dt><tt>   Type_DistancePointPoint</tt>
   <dd>    DistancePointPoint.
   </dd>
    <dt><tt>   Type_DistancePointLine</tt>
   <dd>    DistancePointLine.
   </dd>
    <dt><tt>   Type_DistancePointPlane</tt>
   <dd>    DistancePointPlane.
   </dd>
    <dt><tt>   Type_DistanceLineLine</tt>
   <dd>    DistanceLineLine.
   </dd>
    <dt><tt>   Type_DistanceLinePlane</tt>
   <dd>    DistanceLinePlane.
   </dd>
    <dt><tt>   Type_DistancePlanePlane</tt>
   <dd>    DistancePlanePlane.
   </dd>
    <dt><tt>   Type_AngleLineLine</tt>
   <dd>    AngleLineLine.
   </dd>
    <dt><tt>   Type_AngleLinePlane</tt>
   <dd>    AngleLinePlane.
   </dd>
    <dt><tt>   Type_AnglePlanePlane</tt>
   <dd>    AnglePlanePlane.
   </dd>
    <dt><tt>   Type_AnglePlanePlaneLine</tt>
   <dd>    AnglePlanePlaneLine.
   </dd>
    <dt><tt>   Type_SymmetryPointPointPlane</tt>
   <dd>    SymmetryPointPointPlane.
   </dd>
    <dt><tt>   Type_SymmetryLineLinePlane</tt>
   <dd>    SymmetryLineLinePlane.
   </dd>
    <dt><tt>   Type_SymmetryPlanePlanePlane</tt>
   <dd>    SymmetryPlanePlanePlane.
   </dd>
    <dt><tt>   Type_SymmetryAxisSystemAxisSystemPlane</tt>
   <dd>    SymmetryAxisSystemAxisSystemPlane.
   </dd>
    <dt><tt>   Type_SymmetryInstanceInstancePlane</tt>
   <dd>    SymmetryInstanceInstancePlane.
   </dd>
    <dt><tt>   Type_CouplingLengthLength</tt>
   <dd>    AssCouplingLengthLength.
   </dd>
    <dt><tt>   Type_CouplingAngleAngle</tt>
   <dd>    CouplingAngleAngle.
   </dd>
    <dt><tt>   Type_CouplingLengthAngle</tt>
   <dd>    CouplingLengthAngle.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIAssemblyConstraint.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAssemblyConstraintUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

