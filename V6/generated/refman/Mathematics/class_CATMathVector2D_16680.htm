<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathVector2D</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../Mathematics.htm" href="../Mathematics.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "Mathematics";	}
		function getCurrentObjectName() { 
 	return "CATMathVector2D"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Mathematics <script type="text/javascript" > writeClassCharacteristic(); </script> CATMathVector2D</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMathVector2D_16680','CATMathVector2D','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathVector2D</b>
</p>
<p>
<b><i> Class representing a mathematical vector in dimension 2.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathVector2D()"><b>CATMathVector2D</b></a>()
<dd>  Constructs a (0,0) vector.
 <dt> o 
    <a href="#CATMathVector2D(double[])"><b>CATMathVector2D</b></a>(double[])
<dd>  Constructs a CATMathVector2D from an array of two coordinates.
 <dt> o 
    <a href="#CATMathVector2D(double,double)"><b>CATMathVector2D</b></a>(double,double)
<dd>  Constructs a CATMathVector2D from coordinates.
 <dt> o 
    <a href="#CATMathVector2D(CATMathVector2D&amp;)"><b>CATMathVector2D</b></a>(CATMathVector2D&amp;)
<dd>  Copy constructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Dump(ostream*)"><b>Dump</b></a>(ostream*)
<dd>  Dumps the coordinates of <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#GetAngleTo(CATMathVector2D&amp;)"><b>GetAngleTo</b></a>(CATMathVector2D&amp;)
<dd>  Returns the angle (between - CATPI and CATPI radians) with another CATMathVector2D.
 <dt> o 
    <a href="#GetCoord(double[])"><b>GetCoord</b></a>(double[])
<dd>  Retrieves the coordinates of <tt>this</tt> CATMathVector2D in an array of 2 doubles.
 <dt> o 
    <a href="#GetCoord(double&amp;,double&amp;)"><b>GetCoord</b></a>(double&amp;,double&amp;)
<dd>  Retrieves the coordinates of <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#GetX()"><b>GetX</b></a>()
<dd>  Retrieves the X coordinate of <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#GetY()"><b>GetY</b></a>()
<dd>  Retrieves the Y coordinate of <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#IsOrthogonal(CATMathVector2D&amp;)"><b>IsOrthogonal</b></a>(CATMathVector2D&amp;)
<dd>  Returns the diagnosis of orthogonalism with another CATMathVector2D.
 <dt> o 
    <a href="#IsParallel(CATMathVector2D&amp;)"><b>IsParallel</b></a>(CATMathVector2D&amp;)
<dd>  Returns the diagnosis of parallelism with another CATMathVector2D.
 <dt> o 
    <a href="#Norm()"><b>Norm</b></a>()
<dd>  Returns the euclidean norm of <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#Normalize()"><b>Normalize</b></a>()
<dd>  Normalizes <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#SetCoord(double[])"><b>SetCoord</b></a>(double[])
<dd>  Modifies the coordinates of <tt>this</tt> CATMathVector2D from an array of 2 doubles.
 <dt> o 
    <a href="#SetCoord(double,double)"><b>SetCoord</b></a>(double,double)
<dd>  Modifies the coordinates of <tt>this</tt> CATMathVector2D from 2 doubles.
 <dt> o 
    <a href="#SetX(double)"><b>SetX</b></a>(double)
<dd>  Modifies the X coordinate of <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#SetY(double)"><b>SetY</b></a>(double)
<dd>  Modifies the Y coordinate of <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#SquareNorm()"><b>SquareNorm</b></a>()
<dd>  Returns the square of the euclidean norm of <tt>this</tt> CATMathVector2D.
 <dt> o 
    <a href="#operator *(double)"><b>operator *</b></a>(double)
<dd>  Defines the left side scalar muliplication.
 <dt> o 
    <a href="#operator *(CATMathVector2D&amp;)"><b>operator *</b></a>(CATMathVector2D&amp;)
<dd>  Defines the dot product.
 <dt> o 
    <a href="#operator +(CATMathVector2D&amp;)"><b>operator +</b></a>(CATMathVector2D&amp;)
<dd>  Defines the addition of two CATMathVector2D.
 <dt> o 
    <a href="#operator -()"><b>operator -</b></a>()
<dd>  Defines the opposite of a CATMathVector2D.
 <dt> o 
    <a href="#operator -(CATMathVector2D&amp;)"><b>operator -</b></a>(CATMathVector2D&amp;)
<dd>  Defines the subtraction of two CATMathVector2D.
 <dt> o 
    <a href="#operator /(double)"><b>operator /</b></a>(double)
<dd>  Defines the scalar division.
 <dt> o 
    <a href="#operator ^(CATMathVector2D&amp;)"><b>operator ^</b></a>(CATMathVector2D&amp;)
<dd>  Defines the determinant.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathVector2D"></a><a name="CATMathVector2D()"></a> <dt> o <b>CATMathVector2D</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('INLINE','INLINE')</script>  <b>CATMathVector2D</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a (0,0) vector.
</dl>
<a name="CATMathVector2D"></a><a name="CATMathVector2D(double[])"></a> <dt> o <b>CATMathVector2D</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathVector2D</b>(<td> const <script type="text/javascript"> activateLink('double','double[]')</script> <td><tt>Coord</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathVector2D from an array of two coordinates.
</dl>
<a name="CATMathVector2D"></a><a name="CATMathVector2D(double,double)"></a> <dt> o <b>CATMathVector2D</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('INLINE','INLINE')</script>  <b>CATMathVector2D</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathVector2D from coordinates.
</dl>
<a name="CATMathVector2D"></a><a name="CATMathVector2D(CATMathVector2D&amp;)"></a> <dt> o <b>CATMathVector2D</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('INLINE','INLINE')</script>  <b>CATMathVector2D</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iVectorToCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
 <h2>Methods</h2> <br>
<a name="Dump"></a><a name="Dump(ostream*)"></a> <dt> o <b>Dump</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Dump</b>(<td><script type="text/javascript"> activateLink('ostream','ostream*')</script> <td><tt>iStream</tt><td><tt>=0L</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Dumps the coordinates of <tt>this</tt> CATMathVector2D.
 <br>This writes the following line on the ostream:
 <br><tt>( FirstCoord , SecondCoord )</tt>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStream</tt>
   <dd> A pointer to the output. If <tt>0L</tt>, the method dumps the 
 coordinates on the <tt>cout</tt> output.</dd>
</dl>
</dl>
</dl>
<a name="GetAngleTo"></a><a name="GetAngleTo(CATMathVector2D&amp;)"></a> <dt> o <b>GetAngleTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAngle','CATAngle')</script>  <b>GetAngleTo</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iOtherVector</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the angle (between - CATPI and CATPI radians) with another CATMathVector2D.
 <br> Returns <tt>0</tt> if one vector is null.
</dl>
<a name="GetCoord"></a><a name="GetCoord(double[])"></a> <dt> o <b>GetCoord</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetCoord</b>(<td><script type="text/javascript"> activateLink('double','double[]')</script> <td><tt>iCoord</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the coordinates of <tt>this</tt> CATMathVector2D in an array of 2 doubles.
</dl>
<a name="GetCoord"></a><a name="GetCoord(double&amp;,double&amp;)"></a> <dt> o <b>GetCoord</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>GetCoord</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioY</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the coordinates of <tt>this</tt> CATMathVector2D.
</dl>
<a name="GetX"></a><a name="GetX()"></a> <dt> o <b>GetX</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>GetX</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the X coordinate of <tt>this</tt> CATMathVector2D.
</dl>
<a name="GetY"></a><a name="GetY()"></a> <dt> o <b>GetY</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>GetY</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Y coordinate of <tt>this</tt> CATMathVector2D.
</dl>
<a name="IsOrthogonal"></a><a name="IsOrthogonal(CATMathVector2D&amp;)"></a> <dt> o <b>IsOrthogonal</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsOrthogonal</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iOtherVector</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the diagnosis of orthogonalism with another CATMathVector2D.
 </br>The method uses the numerical
 tolerance. For a user tolerance, use the <tt>GetAngleTo</tt> method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <dl>
 <dt><tt>TRUE</tt>        <dd>if they are orthogonal or one vector is null.
 <dt><tt>FALSE</tt>        <dd>otherwise.
 </dl>
</dl>
</dl>
<a name="IsParallel"></a><a name="IsParallel(CATMathVector2D&amp;)"></a> <dt> o <b>IsParallel</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsParallel</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iOtherVector</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the diagnosis of parallelism with another CATMathVector2D.
 </br>The method uses the numerical
 tolerance. For a user tolerance, use the <tt>GetAngleTo</tt> method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <dl>
 <dt><tt>TRUE</tt>        <dd>if they are parallel.
 <dt><tt>FALSE</tt>        <dd>otherwise.
 </dl>
</dl>
</dl>
<a name="Norm"></a><a name="Norm()"></a> <dt> o <b>Norm</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>Norm</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the euclidean norm of <tt>this</tt> CATMathVector2D.
</dl>
<a name="Normalize"></a><a name="Normalize()"></a> <dt> o <b>Normalize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Normalize</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Normalizes <tt>this</tt> CATMathVector2D.
<br> Simply returns if the vector is null.
</dl>
<a name="SetCoord"></a><a name="SetCoord(double[])"></a> <dt> o <b>SetCoord</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCoord</b>(<td> const <script type="text/javascript"> activateLink('double','double[]')</script> <td><tt>iCoord</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies the coordinates of <tt>this</tt> CATMathVector2D from an array of 2 doubles.
</dl>
<a name="SetCoord"></a><a name="SetCoord(double,double)"></a> <dt> o <b>SetCoord</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetCoord</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies the coordinates of <tt>this</tt> CATMathVector2D from 2 doubles.
</dl>
<a name="SetX"></a><a name="SetX(double)"></a> <dt> o <b>SetX</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetX</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies the X coordinate of <tt>this</tt> CATMathVector2D.
</dl>
<a name="SetY"></a><a name="SetY(double)"></a> <dt> o <b>SetY</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetY</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies the Y coordinate of <tt>this</tt> CATMathVector2D.
</dl>
<a name="SquareNorm"></a><a name="SquareNorm()"></a> <dt> o <b>SquareNorm</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>SquareNorm</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the square of the euclidean norm of <tt>this</tt> CATMathVector2D.
</dl>
<a name="operator *"></a><a name="operator *(double)"></a> <dt> o <b>operator *</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2D','INLINE CATMathVector2D')</script>  <b>operator *</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Defines the left side scalar muliplication.
</dl>
<a name="operator *"></a><a name="operator *(CATMathVector2D&amp;)"></a> <dt> o <b>operator *</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>operator *</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iVector</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Defines the dot product.
</dl>
<a name="operator +"></a><a name="operator +(CATMathVector2D&amp;)"></a> <dt> o <b>operator +</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2D','INLINE CATMathVector2D')</script>  <b>operator +</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iAddedVector</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Defines the addition of two CATMathVector2D.
</dl>
<a name="operator -"></a><a name="operator -()"></a> <dt> o <b>operator -</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2D','INLINE CATMathVector2D')</script>  <b>operator -</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Defines the opposite of a CATMathVector2D.
</dl>
<a name="operator -"></a><a name="operator -(CATMathVector2D&amp;)"></a> <dt> o <b>operator -</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2D','INLINE CATMathVector2D')</script>  <b>operator -</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iVector</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Defines the subtraction of two CATMathVector2D.
</dl>
<a name="operator /"></a><a name="operator /(double)"></a> <dt> o <b>operator /</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2D','INLINE CATMathVector2D')</script>  <b>operator /</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Defines the scalar division.
</dl>
<a name="operator ^"></a><a name="operator ^(CATMathVector2D&amp;)"></a> <dt> o <b>operator ^</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>operator ^</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iVector</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Defines the determinant.
</dl>
<hr>
 This object is included in the file: <b>CATMathVector2D.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

