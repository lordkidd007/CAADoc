<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathVector2Df</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../Mathematics.htm" href="../Mathematics.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "Mathematics";	}
		function getCurrentObjectName() { 
 	return "CATMathVector2Df"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>Mathematics <script type="text/javascript" > writeClassCharacteristic(); </script> CATMathVector2Df</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMathVector2Df_18210','CATMathVector2Df','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathVector2Df</b>
</p>
<p>
<b><i> Class representing a temporary vector in dimension 2 in float precision.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathVector2Df(float[])"><b>CATMathVector2Df</b></a>(float[])
<dd>  Constructs from an array[2] of float coordinates.
 <dt> o 
    <a href="#CATMathVector2Df(float,float)"><b>CATMathVector2Df</b></a>(float,float)
<dd>  Constructs a (1,0) vector in float precision.
 <dt> o 
    <a href="#CATMathVector2Df(CATMathVector2D&amp;)"><b>CATMathVector2Df</b></a>(CATMathVector2D&amp;)
<dd>  Constructs from a CATMathVector.
 <dt> o 
    <a href="#CATMathVector2Df(CATMathVector2Df&amp;)"><b>CATMathVector2Df</b></a>(CATMathVector2Df&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATMathVector2Df(CATMathDirection2Df&amp;)"><b>CATMathVector2Df</b></a>(CATMathDirection2Df&amp;)
<dd>  Constructs from a CATMathDirection2Df.
 <dt> o 
    <a href="#CATMathVector2Df(CATMathPoint2Df&amp;,CATMathPoint2Df&amp;)"><b>CATMathVector2Df</b></a>(CATMathPoint2Df&amp;,CATMathPoint2Df&amp;)
<dd>  Constructs the CATMathVector2Df as the difference of two CATMathPoint2Dfs.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AngleTo(CATMathVector2Df&amp;)"><b>AngleTo</b></a>(CATMathVector2Df&amp;)
<dd>  Returns the angle (between -pi and pi radians) with another CATMathVector2Df.
 <dt> o 
    <a href="#Norm()"><b>Norm</b></a>()
<dd>  Returns the cartesian norm.
 <dt> o 
    <a href="#Normalize()"><b>Normalize</b></a>()
<dd>  Normalizes the CATMathVector2Df.
 <dt> o 
    <a href="#operator*(float)"><b>operator*</b></a>(float)
<dd>  Defines the right side scalar multiplication.
 <dt> o 
    <a href="#operator*(CATMathVector2Df&amp;)"><b>operator*</b></a>(CATMathVector2Df&amp;)
<dd>  Defines the dot product.
 <dt> o 
    <a href="#operator+(CATMathPoint2Df&amp;)"><b>operator+</b></a>(CATMathPoint2Df&amp;)
<dd>  Defines the translation of a  CATMathPoint2Df.
 <dt> o 
    <a href="#operator+(CATMathVector2Df&amp;)"><b>operator+</b></a>(CATMathVector2Df&amp;)
<dd>  Defines the addition of two CATMathVector2Dfs.
 <dt> o 
    <a href="#operator-(CATMathVector2Df&amp;)"><b>operator-</b></a>(CATMathVector2Df&amp;)
<dd>  Defines the substraction of CATMathVector2Dfs.
 <dt> o 
    <a href="#operator/(float)"><b>operator/</b></a>(float)
<dd>  Defines the division by a scalar.
 <dt> o 
    <a href="#operator^(CATMathVector2Df&amp;)"><b>operator^</b></a>(CATMathVector2Df&amp;)
<dd>  Defines the cross product.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(float[])"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathVector2Df</b>(<td> const <script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>iCoord</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs from an array[2] of float coordinates.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(float,float)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathVector2Df</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iFirstCoord</tt><td><tt>= 1.f </tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iSecondCoord</tt><td><tt>= 0.f </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a (1,0) vector in float precision.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(CATMathVector2D&amp;)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathVector2Df</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2D','CATMathVector2D&amp;')</script> <td><tt>iVectorInDouble</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs from a CATMathVector.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(CATMathVector2Df&amp;)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathVector2Df</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df&amp;')</script> <td><tt>iVectorToCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(CATMathDirection2Df&amp;)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathVector2Df</b>(<td> const <script type="text/javascript"> activateLink('CATMathDirection2Df','CATMathDirection2Df&amp;')</script> <td><tt>iDirectionToCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs from a CATMathDirection2Df.
</dl>
<a name="CATMathVector2Df"></a><a name="CATMathVector2Df(CATMathPoint2Df&amp;,CATMathPoint2Df&amp;)"></a> <dt> o <b>CATMathVector2Df</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathVector2Df</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint2Df','CATMathPoint2Df&amp;')</script> <td><tt>iPoint1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPoint2Df','CATMathPoint2Df&amp;')</script> <td><tt>iPoint2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs the CATMathVector2Df as the difference of two CATMathPoint2Dfs.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The CATMathVector2Df <tt>iPoint2 - iPoint1</tt>.
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AngleTo"></a><a name="AngleTo(CATMathVector2Df&amp;)"></a> <dt> o <b>AngleTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>AngleTo</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df&amp;')</script> <td><tt>iOtherVector</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the angle (between -pi and pi radians) with another CATMathVector2Df.
 <br> Returns <tt>0</tt> if the vector is null.
</dl>
<a name="Norm"></a><a name="Norm()"></a> <dt> o <b>Norm</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','float')</script>  <b>Norm</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the cartesian norm.
</dl>
<a name="Normalize"></a><a name="Normalize()"></a> <dt> o <b>Normalize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Normalize</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Normalizes the CATMathVector2Df.
<br>Sets to (1.,0.) if null vector.
</dl>
<a name="operator*"></a><a name="operator*(float)"></a> <dt> o <b>operator*</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df')</script>  <b>operator*</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Defines the right side scalar multiplication.
</dl>
<a name="operator*"></a><a name="operator*(CATMathVector2Df&amp;)"></a> <dt> o <b>operator*</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','float')</script>  <b>operator*</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df&amp;')</script> <td><tt>iVector2</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Defines the dot product.
</dl>
<a name="operator+"></a><a name="operator+(CATMathPoint2Df&amp;)"></a> <dt> o <b>operator+</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathPoint2Df','CATMathPoint2Df')</script>  <b>operator+</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint2Df','CATMathPoint2Df&amp;')</script> <td><tt>iPoint2</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Defines the translation of a  CATMathPoint2Df.
</dl>
<a name="operator+"></a><a name="operator+(CATMathVector2Df&amp;)"></a> <dt> o <b>operator+</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df')</script>  <b>operator+</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df&amp;')</script> <td><tt>iVectorToAdd</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Defines the addition of two CATMathVector2Dfs.
</dl>
<a name="operator-"></a><a name="operator-(CATMathVector2Df&amp;)"></a> <dt> o <b>operator-</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df')</script>  <b>operator-</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df&amp;')</script> <td><tt>iVectorToSubstract</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Defines the substraction of CATMathVector2Dfs.
</dl>
<a name="operator/"></a><a name="operator/(float)"></a> <dt> o <b>operator/</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df')</script>  <b>operator/</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Defines the division by a scalar.
</dl>
<a name="operator^"></a><a name="operator^(CATMathVector2Df&amp;)"></a> <dt> o <b>operator^</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','float')</script>  <b>operator^</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector2Df','CATMathVector2Df&amp;')</script> <td><tt>iVector2</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Defines the cross product.
</dl>
<hr>
 This object is included in the file: <b>CATMathVector2Df.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

