<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PrintBase Class CATPrintHPGL2Properties</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PrintBase.htm" href="../PrintBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PrintBase";	}
		function getCurrentObjectName() { 
 	return "CATPrintHPGL2Properties"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PrintBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATPrintHPGL2Properties</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPrintHPGL2Properties_29935','CATPrintHPGL2Properties','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPrintHPGL2Properties</b>
</p>
<p>
<b><i> Class wrapping HPGL2 generator properties
 <br>
 <b>Role</b>: The CAA user can define the parameters of the HPGL2 generator</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATPrintHPGL2Properties()"><b>CATPrintHPGL2Properties</b></a>()
<dd>  Constructor
 <dt> o 
    <a href="#CATPrintHPGL2Properties(CATPrintHPGL2Properties&amp;)"><b>CATPrintHPGL2Properties</b></a>(CATPrintHPGL2Properties&amp;)
<dd>  Copy constructor
 <dt> o 
    <a href="#~CATPrintHPGL2Properties()"><b>~CATPrintHPGL2Properties</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCutterState(void)"><b>GetCutterState</b></a>(void)
<dd>  Retrieves the cutter state 

 
 <dt> o 
    <a href="#GetHPGLDriver(void)"><b>GetHPGLDriver</b></a>(void)
<dd>  Tells if current driver is HPGL or HPGL2

 
 <dt> o 
    <a href="#GetHPGLProperties(void)"><b>GetHPGLProperties</b></a>(void)
<dd>  Retrieves the HPGL properties

 
 <dt> o 
    <a href="#GetMediaType(void)"><b>GetMediaType</b></a>(void)
<dd>  Retrieves the media type

 
 <dt> o 
    <a href="#GetQuality(void)"><b>GetQuality</b></a>(void)
<dd>  Retrieves the driver quality

 
 <dt> o 
    <a href="#SetCutterState(int)"><b>SetCutterState</b></a>(int)
<dd>  Sets the cutter state

 
 <dt> o 
    <a href="#SetHPGLDriver(int)"><b>SetHPGLDriver</b></a>(int)
<dd>  Sets the driver as HPGL or as HPGL2 

 
 <dt> o 
    <a href="#SetMediaType(int)"><b>SetMediaType</b></a>(int)
<dd>  Sets the media type

 
 <dt> o 
    <a href="#SetQuality(int)"><b>SetQuality</b></a>(int)
<dd>  Sets the driver quality 

 
 <dt> o 
    <a href="#operator=(CATPrintHPGL2Properties&amp;)"><b>operator=</b></a>(CATPrintHPGL2Properties&amp;)
<dd>  Operator=
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATPrintHPGL2Properties"></a><a name="CATPrintHPGL2Properties()"></a> <dt> o <b>CATPrintHPGL2Properties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPrintHPGL2Properties</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor
</dl>
<a name="CATPrintHPGL2Properties"></a><a name="CATPrintHPGL2Properties(CATPrintHPGL2Properties&amp;)"></a> <dt> o <b>CATPrintHPGL2Properties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPrintHPGL2Properties</b>(<td> const <script type="text/javascript"> activateLink('CATPrintHPGL2Properties','CATPrintHPGL2Properties&amp;')</script> <td><tt>iHPGL2Properties</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor
</dl>
<a name="~CATPrintHPGL2Properties"></a><a name="~CATPrintHPGL2Properties()"></a> <dt> o <b>~CATPrintHPGL2Properties</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATPrintHPGL2Properties</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="GetCutterState"></a><a name="GetCutterState(void)"></a> <dt> o <b>GetCutterState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetCutterState</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the cutter state 

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The cutter state
</dl>
</dl>
<a name="GetHPGLDriver"></a><a name="GetHPGLDriver(void)"></a> <dt> o <b>GetHPGLDriver</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetHPGLDriver</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Tells if current driver is HPGL or HPGL2

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The type of driver
</dl>
</dl>
<a name="GetHPGLProperties"></a><a name="GetHPGLProperties(void)"></a> <dt> o <b>GetHPGLProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPrintHPGLProperties','CATPrintHPGLProperties*')</script>  <b>GetHPGLProperties</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the HPGL properties

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The CATPrintHPGLProperties object
</dl>
</dl>
<a name="GetMediaType"></a><a name="GetMediaType(void)"></a> <dt> o <b>GetMediaType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetMediaType</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the media type

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The media type
</dl>
</dl>
<a name="GetQuality"></a><a name="GetQuality(void)"></a> <dt> o <b>GetQuality</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetQuality</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the driver quality

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The quality
</dl>
</dl>
<a name="SetCutterState"></a><a name="SetCutterState(int)"></a> <dt> o <b>SetCutterState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCutterState</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iState</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the cutter state

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iState</tt>
   <dd>  The cutter state</dd>
</dl>
</dl>
</dl>
<a name="SetHPGLDriver"></a><a name="SetHPGLDriver(int)"></a> <dt> o <b>SetHPGLDriver</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetHPGLDriver</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iHPGLDriver</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the driver as HPGL or as HPGL2 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHPGLdriver</tt>
   <dd>  The type of driver</dd>
</dl>
</dl>
</dl>
<a name="SetMediaType"></a><a name="SetMediaType(int)"></a> <dt> o <b>SetMediaType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMediaType</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the media type

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>  The media type</dd>
</dl>
</dl>
</dl>
<a name="SetQuality"></a><a name="SetQuality(int)"></a> <dt> o <b>SetQuality</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetQuality</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iQuality</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the driver quality 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iQuality</tt>
   <dd>   The quality</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATPrintHPGL2Properties&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPrintHPGL2Properties','CATPrintHPGL2Properties&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATPrintHPGL2Properties','CATPrintHPGL2Properties&amp;')</script> <td><tt>iHPGL2Properties</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Operator=
</dl>
<hr>
 This object is included in the file: <b>CATPrintHPGL2Properties.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPrintBase</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

