<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PrintBase Class CATPrintHPGLProperties</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PrintBase.htm" href="../PrintBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PrintBase";	}
		function getCurrentObjectName() { 
 	return "CATPrintHPGLProperties"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PrintBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATPrintHPGLProperties</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPrintHPGLProperties_28266','CATPrintHPGLProperties','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPrintHPGLProperties</b>
</p>
<p>
<b><i> Class wrapping HPGL generator properties
 <br>
 <b>Role</b>: The CAA user can define the parameters of the HPGL generator</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATPrintHPGLProperties()"><b>CATPrintHPGLProperties</b></a>()
<dd>  Constructor
 <dt> o 
    <a href="#CATPrintHPGLProperties(CATPrintHPGLProperties&amp;)"><b>CATPrintHPGLProperties</b></a>(CATPrintHPGLProperties&amp;)
<dd>  Copy constructor
 <dt> o 
    <a href="#~CATPrintHPGLProperties()"><b>~CATPrintHPGLProperties</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetNbPen(void)"><b>GetNbPen</b></a>(void)
<dd>  Retieves the number of pens

 
 <dt> o 
    <a href="#GetOriginLocation(void)"><b>GetOriginLocation</b></a>(void)
<dd>  Retrieves the origin location

 
 <dt> o 
    <a href="#GetPenActivation(int*)"><b>GetPenActivation</b></a>(int*)
<dd>  Retrieves the pens activation

 
 <dt> o 
    <a href="#GetPenColor(float*,float*,float*)"><b>GetPenColor</b></a>(float*,float*,float*)
<dd>  Retrieves the pens colors table 

 
 <dt> o 
    <a href="#GetPenWidth(float*)"><b>GetPenWidth</b></a>(float*)
<dd>  Retrieves the pens widths table 

 
 <dt> o 
    <a href="#GetPrintThicknessState(void)"><b>GetPrintThicknessState</b></a>(void)
<dd>  Retrieves the pen thickness state

 
 <dt> o 
    <a href="#GetRelativeMoveState(void)"><b>GetRelativeMoveState</b></a>(void)
<dd>  Retrieves the relative move state 

 
 <dt> o 
    <a href="#SetOriginLocation(int)"><b>SetOriginLocation</b></a>(int)
<dd>  Sets the origin location

 
 <dt> o 
    <a href="#SetPenProperties(int,float*,float*,float*,float*,int*)"><b>SetPenProperties</b></a>(int,float*,float*,float*,float*,int*)
<dd>  Sets the pen properties

 
 <dt> o 
    <a href="#SetPrintThicknessState(int)"><b>SetPrintThicknessState</b></a>(int)
<dd>  Sets the pen thickness state

 
 <dt> o 
    <a href="#SetRelativeMoveState(int)"><b>SetRelativeMoveState</b></a>(int)
<dd>  Sets the relative move state 

 
 <dt> o 
    <a href="#operator=(CATPrintHPGLProperties&amp;)"><b>operator=</b></a>(CATPrintHPGLProperties&amp;)
<dd>  Operator=
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATPrintHPGLProperties"></a><a name="CATPrintHPGLProperties()"></a> <dt> o <b>CATPrintHPGLProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPrintHPGLProperties</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor
</dl>
<a name="CATPrintHPGLProperties"></a><a name="CATPrintHPGLProperties(CATPrintHPGLProperties&amp;)"></a> <dt> o <b>CATPrintHPGLProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPrintHPGLProperties</b>(<td> const <script type="text/javascript"> activateLink('CATPrintHPGLProperties','CATPrintHPGLProperties&amp;')</script> <td><tt>iHPGLProperties</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor
</dl>
<a name="~CATPrintHPGLProperties"></a><a name="~CATPrintHPGLProperties()"></a> <dt> o <b>~CATPrintHPGLProperties</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATPrintHPGLProperties</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="GetNbPen"></a><a name="GetNbPen(void)"></a> <dt> o <b>GetNbPen</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNbPen</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retieves the number of pens

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The number of pens
</dl>
</dl>
<a name="GetOriginLocation"></a><a name="GetOriginLocation(void)"></a> <dt> o <b>GetOriginLocation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetOriginLocation</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the origin location

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The origin location

</dl>
</dl>
<a name="GetPenActivation"></a><a name="GetPenActivation(int*)"></a> <dt> o <b>GetPenActivation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPenActivation</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oActivPen</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the pens activation

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oActivPen</tt>
   <dd>  The pens activation</dd>
</dl>
</dl>
</dl>
<a name="GetPenColor"></a><a name="GetPenColor(float*,float*,float*)"></a> <dt> o <b>GetPenColor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPenColor</b>(<td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oRedPen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oGreenPen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oBluePen</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the pens colors table 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRedPen</tt>
   <dd>   The red components of the pens 
 </dd>
    <dt><tt> oGreenPen</tt>
   <dd>   The green components of the pens 
 </dd>
    <dt><tt> oBluePen</tt>
   <dd>   The blue components of the pens</dd>
</dl>
</dl>
</dl>
<a name="GetPenWidth"></a><a name="GetPenWidth(float*)"></a> <dt> o <b>GetPenWidth</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPenWidth</b>(<td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oWidthPen</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the pens widths table 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWitdhsPens</tt>
   <dd>  The pens widths</dd>
</dl>
</dl>
</dl>
<a name="GetPrintThicknessState"></a><a name="GetPrintThicknessState(void)"></a> <dt> o <b>GetPrintThicknessState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetPrintThicknessState</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the pen thickness state

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The pen thickness state
</dl>
</dl>
<a name="GetRelativeMoveState"></a><a name="GetRelativeMoveState(void)"></a> <dt> o <b>GetRelativeMoveState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetRelativeMoveState</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the relative move state 

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The relative move state
</dl>
</dl>
<a name="SetOriginLocation"></a><a name="SetOriginLocation(int)"></a> <dt> o <b>SetOriginLocation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetOriginLocation</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iOriginLocation</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the origin location

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOriginLocation</tt>
   <dd>      The origin location</dd>
</dl>
</dl>
</dl>
<a name="SetPenProperties"></a><a name="SetPenProperties(int,float*,float*,float*,float*,int*)"></a> <dt> o <b>SetPenProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPenProperties</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbPen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>iRedpen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>iGreenPen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>iBluePen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>iWidthPen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>iActivpen</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the pen properties

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbPen</tt>
   <dd>      The number of pens
 </dd>
    <dt><tt> iRedpen</tt>
   <dd>      The pens red components
 </dd>
    <dt><tt> iGreenPen</tt>
   <dd>      The pens green components
 </dd>
    <dt><tt> iBluePen</tt>
   <dd>      The pens blue components
 </dd>
    <dt><tt> iWidthPen</tt>
   <dd>      The pens width
 </dd>
    <dt><tt> iActivePen</tt>
   <dd>      The pens activation</dd>
</dl>
</dl>
</dl>
<a name="SetPrintThicknessState"></a><a name="SetPrintThicknessState(int)"></a> <dt> o <b>SetPrintThicknessState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPrintThicknessState</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPrintPenThickness</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the pen thickness state

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrintPenThickness</tt>
   <dd>  The pen thickness</dd>
</dl>
</dl>
</dl>
<a name="SetRelativeMoveState"></a><a name="SetRelativeMoveState(int)"></a> <dt> o <b>SetRelativeMoveState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetRelativeMoveState</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRelativeMove</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the relative move state 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRelativeMove</tt>
   <dd>      The relative move</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATPrintHPGLProperties&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPrintHPGLProperties','CATPrintHPGLProperties&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATPrintHPGLProperties','CATPrintHPGLProperties&amp;')</script> <td><tt>iHPGLProperties</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Operator=
</dl>
<hr>
 This object is included in the file: <b>CATPrintHPGLProperties.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPrintBase</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

