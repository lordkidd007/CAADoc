<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PrintBase Class CATPrintSVGProperties</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PrintBase.htm" href="../PrintBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PrintBase";	}
		function getCurrentObjectName() { 
 	return "CATPrintSVGProperties"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PrintBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATPrintSVGProperties</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPrintSVGProperties_26503','CATPrintSVGProperties','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPrintSVGProperties</b>
</p>
<p>
<b><i> Class wrapping SVG generator properties.</i></b><br>

 <br>
 <b>Role</b>: The CAA user can define the parameters of the SVG generator.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATPrintSVGProperties()"><b>CATPrintSVGProperties</b></a>()
<dd>  Constructor.
 <dt> o 
    <a href="#~CATPrintSVGProperties()"><b>~CATPrintSVGProperties</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetSVGBitmapCompressionMode()"><b>GetSVGBitmapCompressionMode</b></a>()
<dd>  Retrieves the bitmap compression mode.
 <dt> o 
    <a href="#GetSVGBitmapSaveMode()"><b>GetSVGBitmapSaveMode</b></a>()
<dd>  Retrieves the bitmap saving mode.
 <dt> o 
    <a href="#GetSVGDiscretizedText()"><b>GetSVGDiscretizedText</b></a>()
<dd>  Tells if the text is discretized.
 <dt> o 
    <a href="#GetSVGListOfAction(CATListOfCATUnicodeString*)"><b>GetSVGListOfAction</b></a>(CATListOfCATUnicodeString*)
<dd>  Retrieves the SVG font action list.
 <dt> o 
    <a href="#GetSVGListOfFont(CATListOfCATUnicodeString*)"><b>GetSVGListOfFont</b></a>(CATListOfCATUnicodeString*)
<dd>  Retrieves the SVG font list.
 <dt> o 
    <a href="#GetSVGListOfSubFont(CATListOfCATUnicodeString*)"><b>GetSVGListOfSubFont</b></a>(CATListOfCATUnicodeString*)
<dd>  Retrieves the SVG sub font list.
 <dt> o 
    <a href="#SetSVGBitmapCompressionMode(CATPrintSVGBitmapCompressionMode)"><b>SetSVGBitmapCompressionMode</b></a>(CATPrintSVGBitmapCompressionMode)
<dd>  Sets the bitmap compression mode.
 <dt> o 
    <a href="#SetSVGBitmapSaveMode(CATPrintSVGBitmapSaveMode)"><b>SetSVGBitmapSaveMode</b></a>(CATPrintSVGBitmapSaveMode)
<dd>  Sets the bitmap saving mode.
 <dt> o 
    <a href="#SetSVGDiscretizedText(int)"><b>SetSVGDiscretizedText</b></a>(int)
<dd>  Tells if the SVG text must be discretized (1 = yes, 0 = no).
 <dt> o 
    <a href="#SetSVGListOfAction(CATListOfCATUnicodeString*)"><b>SetSVGListOfAction</b></a>(CATListOfCATUnicodeString*)
<dd>  Sets the SVG action list.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATPrintSVGProperties"></a><a name="CATPrintSVGProperties()"></a> <dt> o <b>CATPrintSVGProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATPrintSVGProperties</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor.
</dl>
<a name="~CATPrintSVGProperties"></a><a name="~CATPrintSVGProperties()"></a> <dt> o <b>~CATPrintSVGProperties</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATPrintSVGProperties</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="GetSVGBitmapCompressionMode"></a><a name="GetSVGBitmapCompressionMode()"></a> <dt> o <b>GetSVGBitmapCompressionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPrintSVGBitmapCompressionMode','CATPrintSVGBitmapCompressionMode')</script>  <b>GetSVGBitmapCompressionMode</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the bitmap compression mode.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The bitmap compression mode.
</dl>
</dl>
<a name="GetSVGBitmapSaveMode"></a><a name="GetSVGBitmapSaveMode()"></a> <dt> o <b>GetSVGBitmapSaveMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPrintSVGBitmapSaveMode','CATPrintSVGBitmapSaveMode')</script>  <b>GetSVGBitmapSaveMode</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the bitmap saving mode.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The bitmap saving mode.
</dl>
</dl>
<a name="GetSVGDiscretizedText"></a><a name="GetSVGDiscretizedText()"></a> <dt> o <b>GetSVGDiscretizedText</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSVGDiscretizedText</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tells if the text is discretized.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Text discretization.
</dl>
</dl>
<a name="GetSVGListOfAction"></a><a name="GetSVGListOfAction(CATListOfCATUnicodeString*)"></a> <dt> o <b>GetSVGListOfAction</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetSVGListOfAction</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>oFontActionList</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the SVG font action list.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFontActionList</tt>
   <dd>   The font action list.</dd>
</dl>
</dl>
</dl>
<a name="GetSVGListOfFont"></a><a name="GetSVGListOfFont(CATListOfCATUnicodeString*)"></a> <dt> o <b>GetSVGListOfFont</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetSVGListOfFont</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>oFontList</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the SVG font list.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFontList</tt>
   <dd>   The font list.</dd>
</dl>
</dl>
</dl>
<a name="GetSVGListOfSubFont"></a><a name="GetSVGListOfSubFont(CATListOfCATUnicodeString*)"></a> <dt> o <b>GetSVGListOfSubFont</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetSVGListOfSubFont</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>oFontListSub</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the SVG sub font list.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFontListSub</tt>
   <dd>   The sub font list.</dd>
</dl>
</dl>
</dl>
<a name="SetSVGBitmapCompressionMode"></a><a name="SetSVGBitmapCompressionMode(CATPrintSVGBitmapCompressionMode)"></a> <dt> o <b>SetSVGBitmapCompressionMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSVGBitmapCompressionMode</b>(<td> const <script type="text/javascript"> activateLink('CATPrintSVGBitmapCompressionMode','CATPrintSVGBitmapCompressionMode')</script> <td><tt>iBitmapCompressionMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the bitmap compression mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   The</tt>
   <dd> bitmap compression mode.</dd>
</dl>
</dl>
</dl>
<a name="SetSVGBitmapSaveMode"></a><a name="SetSVGBitmapSaveMode(CATPrintSVGBitmapSaveMode)"></a> <dt> o <b>SetSVGBitmapSaveMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSVGBitmapSaveMode</b>(<td> const <script type="text/javascript"> activateLink('CATPrintSVGBitmapSaveMode','CATPrintSVGBitmapSaveMode')</script> <td><tt>iBitmapSaveMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the bitmap saving mode.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBitmapSaveMode</tt>
   <dd>   The bitmap saving mode.</dd>
</dl>
</dl>
</dl>
<a name="SetSVGDiscretizedText"></a><a name="SetSVGDiscretizedText(int)"></a> <dt> o <b>SetSVGDiscretizedText</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSVGDiscretizedText</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDiscretizedText</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tells if the SVG text must be discretized (1 = yes, 0 = no).

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDiscretisedText</tt>
   <dd>   Enable / Disable the text discretization.
</dd>
</dl>
</dl>
</dl>
<a name="SetSVGListOfAction"></a><a name="SetSVGListOfAction(CATListOfCATUnicodeString*)"></a> <dt> o <b>SetSVGListOfAction</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSVGListOfAction</b>(<td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>iFontActionList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the SVG action list.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFontActionList</tt>
   <dd>   The action list.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPrintSVGProperties.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPrintBase</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

