<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATHvacDesignUseItf Interface CATIHvaPartInstance</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATHvacDesignUseItf.htm" href="../CATHvacDesignUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATHvacDesignUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIHvaPartInstance"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATHvacDesignUseItf Interface CATIHvaPartInstance</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIHvaPartInstance_38114','CATIHvaPartInstance','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIHvaPartInstance</b>
</p>
<p>
<b><i> Interface to access Part Instance.</i></b><br>

 <br><b>Role</b>: Returns the PLM connected PLM Reference: Rigid Duct, Flexible Duct, Hvac Part, Insulation, Hvac Port.
 This interface is implemented by PLM Occurrence</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Connect(CATIHvaHvacPortRef*,CATBaseUnknown*,CATIHvaHvacPortRef*)"><b>Connect</b></a>(CATIHvaHvacPortRef*,CATBaseUnknown*,CATIHvaHvacPortRef*)
<dd>  Connects two objects together.
 <dt> o 
    <a href="#Disconnect(CATBaseUnknown*)"><b>Disconnect</b></a>(CATBaseUnknown*)
<dd>  Disconnects two objects connected together.
 <dt> o 
    <a href="#GetConnectedObject(CATBaseUnknown*&amp;,CATIHvaHvacPortRef*&amp;,CATIHvaHvacPortRef*)"><b>GetConnectedObject</b></a>(CATBaseUnknown*&amp;,CATIHvaHvacPortRef*&amp;,CATIHvaHvacPortRef*)
<dd>  Gets the other connected object through the port.
 <dt> o 
    <a href="#GetLogicalLine(CATIHvaLogicalLineInstance*&amp;)"><b>GetLogicalLine</b></a>(CATIHvaLogicalLineInstance*&amp;)
<dd>  Retrieves the Logical Line Instance if any.
 <dt> o 
    <a href="#GetReference(CATIHvaPartReference*&amp;)"><b>GetReference</b></a>(CATIHvaPartReference*&amp;)
<dd>  Gets the PLM reference of corresponding Hvac Part or Equipment Occurrence.
 <dt> o 
    <a href="#GetRelatedObject(CATLISTP(CATBaseUnknown)*&amp;)"><b>GetRelatedObject</b></a>(CATLISTP(CATBaseUnknown)*&amp;)
<dd>  Gets the related object in term of insulation.
 <dt> o 
    <a href="#GetSpool(CATIHvaSpoolInstance*&amp;)"><b>GetSpool</b></a>(CATIHvaSpoolInstance*&amp;)
<dd>  Finds the Spool of current part if any.
 <dt> o 
    <a href="#IsOKToConnect(CATBoolean&amp;,CATIHvaHvacPortRef*,CATBaseUnknown*,CATIHvaHvacPortRef*)"><b>IsOKToConnect</b></a>(CATBoolean&amp;,CATIHvaHvacPortRef*,CATBaseUnknown*,CATIHvaHvacPortRef*)
<dd>  Checks if it is valid to connect this Object/Port to the other Object/Port.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Connect"></a><a name="Connect(CATIHvaHvacPortRef*,CATBaseUnknown*,CATIHvaHvacPortRef*)"></a> <dt> o <b>Connect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Connect</b>(<td><script type="text/javascript"> activateLink('CATIHvaHvacPortRef','CATIHvaHvacPortRef*')</script> <td><tt>ipIThisPort</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipIOtherConnectable</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIHvaHvacPortRef','CATIHvaHvacPortRef*')</script> <td><tt>ipIOtherPort</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Connects two objects together.
 If the input other connectable is a part then this will be transformed to match correctly input port of this part to the input port of the other connectable part.
 If the input other connectable is a route, then the route will get modified to get routed upto the port of this part.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipIThisPort</tt>
   <dd>    A port of this object [in, CATIHvaHvacPortRef].
 </dd>
    <dt><tt> ipIOtherConnectable</tt>
   <dd>    A connected object [in, CATBaseUnknown].
 </dd>
    <dt><tt> ipIOtherPort</tt>
   <dd>    A port of the other connected object where is done the connection [in, CATIHvaHvacPortRef].
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_INVALIDARG</dt>
     <dd> one or more arguments are invalid</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Disconnect"></a><a name="Disconnect(CATBaseUnknown*)"></a> <dt> o <b>Disconnect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Disconnect</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipOtherConnectable</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Disconnects two objects connected together.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipOtherConnectable</tt>
   <dd>    A connected object [in, CATBaseUnknown].
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_INVALIDARG</dt>
     <dd> one or more arguments are invalid</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetConnectedObject"></a><a name="GetConnectedObject(CATBaseUnknown*&amp;,CATIHvaHvacPortRef*&amp;,CATIHvaHvacPortRef*)"></a> <dt> o <b>GetConnectedObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConnectedObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>opIOtherConnectable</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIHvaHvacPortRef','CATIHvaHvacPortRef*&amp;')</script> <td><tt>opIOtherPort</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIHvaHvacPortRef','CATIHvaHvacPortRef*')</script> <td><tt>ipIThisPort</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the other connected object through the port.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opIOtherConnectable</tt>
   <dd>   A connected object [out, CATBaseUnknown#Release].
 </dd>
    <dt><tt> opIOtherPort</tt>
   <dd>   The port of the other connected object [out, CATIHvaHvacPortRef #Release].
 </dd>
    <dt><tt> ipIThisPort</tt>
   <dd>   A port of this object [in, CATIHvaHvacPortRef].
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_INVALIDARG</dt>
     <dd> ipIThisPort arguments are invalid</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetLogicalLine"></a><a name="GetLogicalLine(CATIHvaLogicalLineInstance*&amp;)"></a> <dt> o <b>GetLogicalLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLogicalLine</b>(<td><script type="text/javascript"> activateLink('CATIHvaLogicalLineInstance','CATIHvaLogicalLineInstance*&amp;')</script> <td><tt>opiLogLine</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Logical Line Instance if any.<br>
 <strong>Role</strong>: Retrieves the Logical Line Instance if any.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiLogLine</tt>
   <dd> [out, CATIHvaLogicalLineInstance#Release]   Interface pointer on Logical Line Instance. Can be <tt>NULL</tt> if no Logical Line has been found.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><strong>Legal values</strong>:
 <dl>
   <dt>S_OK</dt><dd>Operation is successful</dd>
   <dt>S_FALSE</dt><dd>Operation is successful, but current Part is not in Logical Line.</dd>
   <dt>E_INVALIDARG</dt><dd>The input argument opiLogLine is not NULL</dd>
   <dt>E_FAIL</dt><dd>Otherwise</dd>
 </dl>
</dl>
</dl>
<a name="GetReference"></a><a name="GetReference(CATIHvaPartReference*&amp;)"></a> <dt> o <b>GetReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReference</b>(<td><script type="text/javascript"> activateLink('CATIHvaPartReference','CATIHvaPartReference*&amp;')</script> <td><tt>opIHvacPartRef</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the PLM reference of corresponding Hvac Part or Equipment Occurrence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opIHvacPartRef</tt>
   <dd>   return a pointer on reference [out, CATIHvaPartReference#Release].
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetRelatedObject"></a><a name="GetRelatedObject(CATLISTP(CATBaseUnknown)*&amp;)"></a> <dt> o <b>GetRelatedObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRelatedObject</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)*&amp;')</script> <td><tt>opListObject</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the related object in term of insulation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opListObject</tt>
   <dd>   A List of related object to Hvac part [out, CATLISTP(CATBaseUnknown) #Release].
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_INVALIDARG</dt>
     <dd> ipIThisPort arguments are invalid</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetSpool"></a><a name="GetSpool(CATIHvaSpoolInstance*&amp;)"></a> <dt> o <b>GetSpool</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSpool</b>(<td><script type="text/javascript"> activateLink('CATIHvaSpoolInstance','CATIHvaSpoolInstance*&amp;')</script> <td><tt>opISpoolInstance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Finds the Spool of current part if any.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opISpoolInstance[out,</tt>
   <dd> CATIHvaSpoolInstance#Release]. Interface pointer on spool occurence Can be <tt>NULL</tt> if current part is not in any spool .
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Operation is successful</dd>
     <dt>S_FALSE</dt>
     <dd>Operation is successful, but current part is not in any spool.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The input argument opISpoolInstance is not NULL </dd>
     <dt>E_FAIL</dt>
     <dd>Otherwise</dd>
   </dl>
</dl>
</dl>
<a name="IsOKToConnect"></a><a name="IsOKToConnect(CATBoolean&amp;,CATIHvaHvacPortRef*,CATBaseUnknown*,CATIHvaHvacPortRef*)"></a> <dt> o <b>IsOKToConnect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsOKToConnect</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>obStatus</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIHvaHvacPortRef','CATIHvaHvacPortRef*')</script> <td><tt>ipIThisPort</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipIOtherConnectable</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIHvaHvacPortRef','CATIHvaHvacPortRef*')</script> <td><tt>ipIOtherPort</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Checks if it is valid to connect this Object/Port to the other Object/Port.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> obStatus</tt>
   <dd>   The status if the connection is valid in term of compatibility [out, Boolean].
   <br><b>Legal values</b>: True, the two elements can be connected.
 </dd>
    <dt><tt> ipIThisPort</tt>
   <dd>   A port of this object [in, CATIHvaHvacPortRef].
 </dd>
    <dt><tt> ipIOtherConnectable</tt>
   <dd>   The other object [in, CATBaseUnknown].
 </dd>
    <dt><tt> ipIThisPort</tt>
   <dd>   A port of the other object [in, CATIHvaHvacPortRef].
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_INVALIDARG</dt>
     <dd> one or more arguments are invalid</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIHvaPartInstance.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATHvacDesignUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

