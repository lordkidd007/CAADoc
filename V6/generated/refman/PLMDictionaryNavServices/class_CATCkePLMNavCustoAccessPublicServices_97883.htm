<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMDictionaryNavServices Class CATCkePLMNavCustoAccessPublicServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMDictionaryNavServices.htm" href="../PLMDictionaryNavServices.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMDictionaryNavServices";	}
		function getCurrentObjectName() { 
 	return "CATCkePLMNavCustoAccessPublicServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMDictionaryNavServices <script type="text/javascript" > writeClassCharacteristic(); </script> CATCkePLMNavCustoAccessPublicServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATCkePLMNavCustoAccessPublicServices_97883','CATCkePLMNavCustoAccessPublicServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATCkePLMNavCustoAccessPublicServices</b>
</p>
<p>
<b><i> Services enabling the access to custo types that customers may have defined with DMC tool.</i></b><br>
<br> 
 These services make sense mainly if you're operating in Former Typing mode.<br>
 But in a transition phase (from Former typing to Unified typing) it also make sense in Unified Typing mode to access previously created objects.<br>
 
 Small introduction to the different kinds of PLM types.<br>
 - top modeler types: for instance VPMReference. It corresponds to types delivered by our software out of the box<br>
 - discipline types: for instance Drawing. They correspond to sub types of top modeler types for a given application.<br>
 - custo types: it is the types defined by the customers with DMC tool, in Former typing system.<br>
 - specialization types: it is the types defined by the customers with the new KWD tool. They are different from custo types.<br> 
 - extension types: An extension is put on an object by an application to extend its data model and its behaviors.<br>
 - specialization extension types: it correspond to a sub type of an extension defined by the customer with the new KWD tool.<br>
 - customer extension types: they correspond to an extension defined by a customer with the new KWD tool.<br>
 - deployment extension types: they are not available in CAA public APIs. A deployment extension is put on an object with a business rule to extend automatically its data model. Deployment extension are created with the DMA tool.<br>

 A PLM object has a primary type (modeler, discipline, specialization, custo) and potentially several secondary types (extension, and deployment extensions).<br>
 <br>
 The services of this CATCkePLMNavCustoAccessPublicServices header are aimed at manipulating custo types.<br>
 But they are also aimed at generic tools that want to retrieve list of attributes on a type whatever its nature.<br>
 If you want to access out of the box types, please use <script type="text/javascript"> activateLinkAnchor('CATCkePLMNavPublicServices','','CATCkePLMNavPublicServices') </script>.<br>  If you want to access specialization types, please use 
<script type="text/javascript"> activateLinkAnchor('CATCkePLMNavSpecializationAccessPublicServices','','CATCkePLMNavSpecializationAccessPublicServices') </script>.<br>  If you want to read attributes on an object, please use 
<script type="text/javascript"> activateLinkAnchor('CATCkeObjectAttrReadServices','','CATCkeObjectAttrReadServices') </script>.<br>  If you want to write attributes on an object, please use 
<script type="text/javascript"> activateLinkAnchor('CATCkeObjectAttrWriteServices','','CATCkeObjectAttrWriteServices') </script>.<br>  
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIType','','CATIType') </script>, <script type="text/javascript"> activateLinkAnchor('CATAttributeInfos','','CATAttributeInfos') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeObject','','CATICkeObject') </script>, <script type="text/javascript"> activateLinkAnchor('CATCkeObjectAttrReadServices','','CATCkeObjectAttrReadServices') </script>, <script type="text/javascript"> activateLinkAnchor('CATCkeObjectAttrWriteServices','','CATCkeObjectAttrWriteServices') </script>, <script type="text/javascript"> activateLinkAnchor('CATCkePLMNavPublicServices','','CATCkePLMNavPublicServices') </script>, <script type="text/javascript"> activateLinkAnchor('CATCkePLMNavSpecializationAccessPublicServices','','CATCkePLMNavSpecializationAccessPublicServices') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#FindAttributeFromCustoType(CATCkePLMTypeAttrServices::FilteringCriteria,CATIType_var&amp;,CATUnicodeString&amp;,CATAttributeInfos*&amp;,CATBoolean)"><b>FindAttributeFromCustoType</b></a>(CATCkePLMTypeAttrServices::FilteringCriteria,CATIType_var&amp;,CATUnicodeString&amp;,CATAttributeInfos*&amp;,CATBoolean)
<dd>  Retrieves if it exists, a PLM attribute of a given name, of a custo Type that matches the criteria in input.
 <dt> o 
    <a href="#GetAttributeNLSNameFromCustoType(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>GetAttributeNLSNameFromCustoType</b></a>(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  This service is used to translate in NLS the name of a PLM attribute of a custo type.
 <dt> o 
    <a href="#IsACustoType(CATIType_var&amp;)"><b>IsACustoType</b></a>(CATIType_var&amp;)
<dd>  Indicates if a type is a custo type.
 <dt> o 
    <a href="#ListAttributesFromCustoType(CATCkePLMTypeAttrServices::FilteringCriteria,CATIType_var&amp;,CATListValCATAttributeInfos&amp;,CATBoolean,CATBoolean)"><b>ListAttributesFromCustoType</b></a>(CATCkePLMTypeAttrServices::FilteringCriteria,CATIType_var&amp;,CATListValCATAttributeInfos&amp;,CATBoolean,CATBoolean)
<dd>  This service is used to get the list of PLM attributes from a Custo type filtered by a criteria.
 <dt> o 
    <a href="#ListFilteredAttributesFromMaskAndCustoType(CATIType_var&amp;,CATCkePLMTypeAttrServices::PLMMaskCriteria,CATListValCATAttributeInfos&amp;)"><b>ListFilteredAttributesFromMaskAndCustoType</b></a>(CATIType_var&amp;,CATCkePLMTypeAttrServices::PLMMaskCriteria,CATListValCATAttributeInfos&amp;)
<dd>  Retrieves the list of PLM attributes of a custo type that matches the PLM Mask criteria in input.
 <dt> o 
    <a href="#RetrieveCustoType(char*,CATIType_var&amp;)"><b>RetrieveCustoType</b></a>(char*,CATIType_var&amp;)
<dd>  Returns the Custo type from a type name, known by a customer through its customization done with DMC tool.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="FindAttributeFromCustoType"></a><a name="FindAttributeFromCustoType(CATCkePLMTypeAttrServices::FilteringCriteria,CATIType_var&amp;,CATUnicodeString&amp;,CATAttributeInfos*&amp;,CATBoolean)"></a> <dt> o <b>FindAttributeFromCustoType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FindAttributeFromCustoType</b>(<td> const <script type="text/javascript"> activateLink('CATCkePLMTypeAttrServices::FilteringCriteria','CATCkePLMTypeAttrServices::FilteringCriteria')</script> <td><tt>iFilteringCriteria</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos*&amp;')</script> <td><tt>opAttr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iReadWriteOnly</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves if it exists, a PLM attribute of a given name, of a custo Type that matches the criteria in input.<br>
 This method is introduced as a replacement of 
<script type="text/javascript"> activateLinkAnchor('CATCkePLMTypeAttrServices','FindAttribute','CATCkePLMTypeAttrServices.FindAttribute') </script>.<br> This method works on all primary types in fact.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilteringCriteria</tt>
   <dd>   Filtering criteria to apply
 </dd>
    <dt><tt> iType</tt>
   <dd>   The input PLM Type to be queried. It can be a modeler type, discipline type or specialization type or a custo type
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd>   The non-NLS name of the attribute.
 </dd>
    <dt><tt> opAttr</tt>
   <dd>   The attribute, if found. The service allocates the object, so the given pointer must be NULL, and must be deleted after use.
 </dd>
    <dt><tt> iReadWriteOnly</tt>
   <dd>   Specify if we want to apply an additional filter to access only Read/Write attributes
  <ol>
 	 <li> TRUE if we want to obtain a list of the Read/Write attributes only.
 	 <li> FALSE	(default value) if we do not want to apply this additional filter, and we want to obtain both Read Only attributes and Read/Write.
  </ol>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the input PLM type is NULL or if it is a custo type
 	 <li> S_OK	if calculation is ok, even if the attribute is not found (= NULL)
  </ol>
</dl>
</dl>
<a name="GetAttributeNLSNameFromCustoType"></a><a name="GetAttributeNLSNameFromCustoType(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetAttributeNLSNameFromCustoType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAttributeNLSNameFromCustoType</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oNLSName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 This service is used to translate in NLS the name of a PLM attribute of a custo type.<br>
 It works on custo type but in fact on any Primary type. So it can be used by all the toolkits that must be independent from typing system like advanced search.<br>
 If you're interested in accessing this information on a given object, please use 
<script type="text/javascript"> activateLinkAnchor('CATCkeObjectAttrReadServices','GetAttributeNLSNameFromObject','CATCkeObjectAttrReadServices.GetAttributeNLSNameFromObject') </script> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> Custo type in input or modeler type (a primary type)
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> oNLSName</tt>
   <dd> NLS Name of the attribute
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the type is NULL, or if the type is not a primary type.
 	 <li> S_OK	if the attribute has been found
 	 <li> E_FAIL if not found
  </ol>
</dl>
</dl>
<a name="IsACustoType"></a><a name="IsACustoType(CATIType_var&amp;)"></a> <dt> o <b>IsACustoType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsACustoType</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Indicates if a type is a custo type.<br>
 Usage: Only for CAA customers. Do not use it internally.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type in input
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the type is not found
 	 <li> S_FALSE if the type is not a custo type
 	 <li> S_OK	if the type has been found
  </ol>
</dl>
</dl>
<a name="ListAttributesFromCustoType"></a><a name="ListAttributesFromCustoType(CATCkePLMTypeAttrServices::FilteringCriteria,CATIType_var&amp;,CATListValCATAttributeInfos&amp;,CATBoolean,CATBoolean)"></a> <dt> o <b>ListAttributesFromCustoType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListAttributesFromCustoType</b>(<td> const <script type="text/javascript"> activateLink('CATCkePLMTypeAttrServices::FilteringCriteria','CATCkePLMTypeAttrServices::FilteringCriteria')</script> <td><tt>iFilteringCriteria</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATAttributeInfos','CATListValCATAttributeInfos&amp;')</script> <td><tt>oListAttr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iReadWriteOnly</tt><td><tt>= FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iInherited</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 This service is used to get the list of PLM attributes from a Custo type filtered by a criteria.<br>
 It works on custo type but in fact on any Primary type. So it can be used by all the toolkits that must be independent from typing system like advanced search.<br>
 If you're interested in the list of attributes on a particular object you must use @ref CATCkePLMNavPublicServices#ListAttributesFromObject instead of this method.<br>
 This method is introduced as an alternative to 
<script type="text/javascript"> activateLinkAnchor('CATCkePLMTypeAttrServices','ListAttributes','CATCkePLMTypeAttrServices.ListAttributes') </script>.<br> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilteringCriteria</tt>
   <dd> Filtering criteria to apply. Note that the Identifier criteria does not make sense on a type so it will return an error
 </dd>
    <dt><tt> iType</tt>
   <dd> The custo type or a modeler type (a primary type)
 </dd>
    <dt><tt> oListAttr</tt>
   <dd> The list of PLM attributes obtained. It is filled by the service. The service removes elements of the list in input first.
 </dd>
    <dt><tt> iReadWriteOnly</tt>
   <dd> Specify if we want to apply an additional filter to access only Read/Write attributes
  <ol>
 	 <li> TRUE if we want to obtain a list of the Read/Write attributes only.
 	 <li> FALSE	(default value) if we do not want to apply this additional filter, and we want to obtain both Read Only attributes and Read/Write.
  </ol>
 </dd>
    <dt><tt> iInherited</tt>
   <dd> Specify if we want to access only the attributes locally defined on the type or the full list of attributes taking inheritance into account.
  <ol>
 	 <li> TRUE if we want to obtain the full list of attributes including inherited attributes
 	 <li> FALSE	(default value) if we want to obtain only the attributes locally defined on the type
  </ol>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the input PLM type is NULL or the type is a not a primary type.
 	 <li> S_OK	if the list of attributes is valuated (even if empty)
 	 <li> E_FAIL otherwise
</dl>
</dl>
<a name="ListFilteredAttributesFromMaskAndCustoType"></a><a name="ListFilteredAttributesFromMaskAndCustoType(CATIType_var&amp;,CATCkePLMTypeAttrServices::PLMMaskCriteria,CATListValCATAttributeInfos&amp;)"></a> <dt> o <b>ListFilteredAttributesFromMaskAndCustoType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListFilteredAttributesFromMaskAndCustoType</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCkePLMTypeAttrServices::PLMMaskCriteria','CATCkePLMTypeAttrServices::PLMMaskCriteria')</script> <td><tt>iPLMMaskCriteria</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATAttributeInfos','CATListValCATAttributeInfos&amp;')</script> <td><tt>oListFilteredAttr</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of PLM attributes of a custo type that matches the PLM Mask criteria in input.<br>
 It works on custo type but in fact on any Primary type. So it can be used by all the toolkits that must be independent from typing system like advanced search.<br>
 If you're interested in the list of attributes on a particular object you must use 
<script type="text/javascript"> activateLinkAnchor('CATCkePLMNavPublicServices','ListFilteredAttributesFromMaskAndObject','CATCkePLMNavPublicServices.ListFilteredAttributesFromMaskAndObject') </script> instead of this method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type: custo type or modeler type. A primary type
 </dd>
    <dt><tt> iPLMMaskCriteria</tt>
   <dd>   Filtering PLM Mask criteria to apply
 </dd>
    <dt><tt> oListFilteredAttr</tt>
   <dd>   The list of PLM attributes obtained. It is filled by the service.
   The service removes elements of the list in input first.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the input PLM type is invalid, or if the type is not a primary type.
 	 <li> E_FAIL if failure
 	 <li> S_OK if the list of attributes is valuated (even if empty)
  </ol>
</dl>
</dl>
<a name="RetrieveCustoType"></a><a name="RetrieveCustoType(char*,CATIType_var&amp;)"></a> <dt> o <b>RetrieveCustoType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RetrieveCustoType</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iTypeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the Custo type from a type name, known by a customer through its customization done with DMC tool.<br>
 Usage: All contexts.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeName</tt>
   <dd> The type name in input. Only custo type are authorized.
 </dd>
    <dt><tt> oType</tt>
   <dd> the type found
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the type is not found or type name is a custo type.
 	 <li> S_OK	if the type has been found
  </ol>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCkePLMNavCustoAccessPublicServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMDictionaryNavServices</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

