<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFunctionalModelerUseItf Interface CATIFct2DPictures</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFunctionalModelerUseItf.htm" href="../CATFunctionalModelerUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFunctionalModelerUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIFct2DPictures"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFunctionalModelerUseItf Interface CATIFct2DPictures</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIFct2DPictures_50244','CATIFct2DPictures','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIFct2DPictures</b>
</p>
<p>
<b><i> Interface dedicated to Functional 2D Pictures collection management.</i></b><br>


 <br><b>Role</b>: This interface provides means to manage the collection of Functional 2D Pictures Representations associated to <tt>this</tt> Functional Reference.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Associate2DPicture(CATIFct2DPictureRepReference*)"><b>Associate2DPicture</b></a>(CATIFct2DPictureRepReference*)
<dd>  Associates a 2D Picture to a Functional Reference.
 <dt> o 
    <a href="#CountAssociated2DPictures(int&amp;)"><b>CountAssociated2DPictures</b></a>(int&amp;)
<dd>  Retrieves the number of 2D Pictures associated to this Functional Reference.
 <dt> o 
    <a href="#GetAssociated2DPictures(CATListValCATIFct2DPictureRepReference_var&amp;)"><b>GetAssociated2DPictures</b></a>(CATListValCATIFct2DPictureRepReference_var&amp;)
<dd>  Retrieves the collection of 2D Pictures associated to this Functional Reference.
 <dt> o 
    <a href="#RemoveAssociated2DPicture(CATIFct2DPictureRepReference*)"><b>RemoveAssociated2DPicture</b></a>(CATIFct2DPictureRepReference*)
<dd>  Removes a 2D Picture that is associated to this Functional Reference.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Associate2DPicture"></a><a name="Associate2DPicture(CATIFct2DPictureRepReference*)"></a> <dt> o <b>Associate2DPicture</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Associate2DPicture</b>(<td><script type="text/javascript"> activateLink('CATIFct2DPictureRepReference','CATIFct2DPictureRepReference*')</script> <td><tt>ip2DPictureRepReference</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Associates a 2D Picture to a Functional Reference.

 <b>Role</b>: This method associates a 2D Picture Representation Reference to a Functional Reference. <br>
 A given 2D Picture can only be associated once to a Functional Reference. <br>

 Associate a 2D Picture Representation Reference will instantiate it under a Functional Reference.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ip2DPictureRepReference</tt>
   <dd>      The 2D Picture Representation Reference to associate to this Functional Reference.
      Input Parameter. <br>
      This parameter MUST NOT be provided by caller as NULL. This method returns an error otherwise.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        <code>S_OK</code> if the method succeeds. <br>
      <code>S_FALSE</code> if the specified 2D Picture is already associated to the Functional Reference. <br>
      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="CountAssociated2DPictures"></a><a name="CountAssociated2DPictures(int&amp;)"></a> <dt> o <b>CountAssociated2DPictures</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CountAssociated2DPictures</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oSize</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of 2D Pictures associated to this Functional Reference.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oSize</tt>
   <dd>      The number of associated 2D Pictures.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> The method succeeds and the number of associated 2D Pictures is retrieved. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="GetAssociated2DPictures"></a><a name="GetAssociated2DPictures(CATListValCATIFct2DPictureRepReference_var&amp;)"></a> <dt> o <b>GetAssociated2DPictures</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAssociated2DPictures</b>(<td><script type="text/javascript"> activateLink('CATListValCATIFct2DPictureRepReference_var','CATListValCATIFct2DPictureRepReference_var&amp;')</script> <td><tt>oL2DPictureRepReferences</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the collection of 2D Pictures associated to this Functional Reference.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oL2DPictureRepReferences</tt>
   <dd>      A list of 2D Picture Representation References. <br>
      Output parameter. <br>
      This parameter MUST be provided by caller as empty. This method returns an error otherwise. <br>
      This parameter is valuated if method succeeds.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        <code>S_OK</code> if the method succeeds. <br>
      <code>S_FALSE</code> if the method succeeds but in session there is no 2D Pictures associated to this Functional Reference. <br>
      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="RemoveAssociated2DPicture"></a><a name="RemoveAssociated2DPicture(CATIFct2DPictureRepReference*)"></a> <dt> o <b>RemoveAssociated2DPicture</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAssociated2DPicture</b>(<td><script type="text/javascript"> activateLink('CATIFct2DPictureRepReference','CATIFct2DPictureRepReference*')</script> <td><tt>ip2DPictureRepReference</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a 2D Picture that is associated to this Functional Reference.

 <br><b>Role</b>: This method breaks the association of a 2D Picture Representation Reference with a Functional Reference. <br>
 It only breaks the association but does not delete the 2D Picture Representation Reference. <br>
 The given 2D Picture Representation Reference must be associated to this Functional Reference.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ip2DPictureRepReference</tt>
   <dd>      The 2D Picture to must not associated anymore to this Functional Reference. <br>
      Input Parameter. <br>
      This parameter MUST NOT be provided by caller as NULL. This method returns an error otherwise.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the method succeeds. <br>
      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIFct2DPictures.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFunctionalModelerUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

