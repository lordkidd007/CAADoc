<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ProductStructureInterfaces Interface CATIPLMRepInstances</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ProductStructureInterfaces.htm" href="../ProductStructureInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ProductStructureInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIPLMRepInstances"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ProductStructureInterfaces Interface CATIPLMRepInstances</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPLMRepInstances_55195','CATIPLMRepInstances','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPLMRepInstances</b>
</p>
<p>
<b><i> Interface managing the collection of Representation Instances aggregated to a given Product.</i></b><br>

 <b>Role</b>: This interface enables to add, remove, replace, browse or seek Representation Instances.<br>
 This interface is implemented on Products.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRepInstance(CATUnicodeString&amp;,CATIPsiRepresentationReference*,CATBaseUnknown*&amp;,IID&amp;)"><b>AddRepInstance</b></a>(CATUnicodeString&amp;,CATIPsiRepresentationReference*,CATBaseUnknown*&amp;,IID&amp;)
<dd>  Creates a Representation Instance and aggregates it to this Product.
 <dt> o 
    <a href="#Count(int&amp;)"><b>Count</b></a>(int&amp;)
<dd>  Retrieves the number of Representation Instances aggregated by this Product.
 <dt> o 
    <a href="#GetRepInstanceByName(CATUnicodeString&amp;,CATBaseUnknown*&amp;,IID&amp;)"><b>GetRepInstanceByName</b></a>(CATUnicodeString&amp;,CATBaseUnknown*&amp;,IID&amp;)
<dd>  Retrieves a Representation Instance from its name.
 <dt> o 
    <a href="#Iterator(CATIPrdIterator*&amp;)"><b>Iterator</b></a>(CATIPrdIterator*&amp;)
<dd>  Retrieves an iterator on all Representation Instances.
 <dt> o 
    <a href="#RemoveRepInstance(CATIPrdRepInstance*)"><b>RemoveRepInstance</b></a>(CATIPrdRepInstance*)
<dd>  Removes a Representation Instance.
 <dt> o 
    <a href="#ReplaceRepInstance(CATIPrdRepInstance*,CATIPsiRepresentationReference*,CATIPrdRepInstance*&amp;)"><b>ReplaceRepInstance</b></a>(CATIPrdRepInstance*,CATIPsiRepresentationReference*,CATIPrdRepInstance*&amp;)
<dd>  Replaces a Representation Instance with another one.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRepInstance"></a><a name="AddRepInstance(CATUnicodeString&amp;,CATIPsiRepresentationReference*,CATBaseUnknown*&amp;,IID&amp;)"></a> <dt> o <b>AddRepInstance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddRepInstance</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iRepInstName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPsiRepresentationReference','CATIPsiRepresentationReference*')</script> <td><tt>iRef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oRepInstance</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt><td><tt>= IID_CATIPrdObject </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Representation Instance and aggregates it to this Product.<br>
 Initializes PLM Attributes of created representation instance using Business Logic "IdentificationInitialization".   
 <b>Note</b>: This method must be called on a Product Reference.<br>
 The creation fails if the Representation Instance name is already used by another Representation Instance aggregated by this Product.<br>
 The creation fails if the Representation Reference is a Technological Representation that has already been instantiated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRepInstName</tt>
   <dd>     The name of the Representation Instance.
 </dd>
    <dt><tt> iRef</tt>
   <dd>     The pointer to the Representation Reference.
 </dd>
    <dt><tt> oRepInstance</tt>
   <dd> [out, CATBaseUnknown#Release]     The pointer to the newly created Representation Instance.<br>
     <b>Note</b>: The pointer should be <em>RELEASED</em>.
 </dd>
    <dt><tt> iIID</tt>
   <dd>     The IID of the interface to be queried on the returned object. </dd>
<script type="text/javascript"> activateLinkAnchor('CATIPrdObject','','CATIPrdObject') </script> is used by default  
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li>S_OK if the Representation Instance was successfully added.</li>
       <li>E_FAIL if:
              <ul>
              <li>this Product is not a Product Reference</li>
              <li>or the Representation Instance name is already used by another Representation Instance aggregated by this Product</li>
              <li>or the Representation Reference is a Technological Representation that has already been instantiated</li>
              <li>or the QueryInterface on <tt>iIID</tt> failed</li>
              <li>or the Representation Instance creation failed</li>
              </ul>
       </li>
      </ul>
</dl>
</dl>
</dl>
<a name="Count"></a><a name="Count(int&amp;)"></a> <dt> o <b>Count</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Count</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oCount</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of Representation Instances aggregated by this Product.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCount</tt>
   <dd>     The number of Representation Instances aggregated by this Product.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li>S_OK if this Product aggregates at least one Representation Instance.</li>
       <li>E_FAIL if this Product is not a Product Reference or has no Representation Instance.</li>
      </ul>
</dl>
</dl>
<a name="GetRepInstanceByName"></a><a name="GetRepInstanceByName(CATUnicodeString&amp;,CATBaseUnknown*&amp;,IID&amp;)"></a> <dt> o <b>GetRepInstanceByName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRepInstanceByName</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oRepInstance</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt><td><tt>= IID_CATIPrdObject </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a Representation Instance from its name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>     The name of the Representation Instance.<br>
     This name is the one used at the creation step, in other words
     the first argument of the </dd>
<script type="text/javascript"> activateLinkAnchor('','AddRepInstance','AddRepInstance') </script>  method.<br> 
    <dt><tt> oRepInstance</tt>
   <dd> [out, CATBaseUnknown#Release]     The pointer on the existing Representation Instance.<br>
     <b>Note</b>: The pointer should be <em>RELEASED</em>.
 </dd>
    <dt><tt> iIID</tt>
   <dd>     The IID of the interface to be queried on the returned object. </dd>
<script type="text/javascript"> activateLinkAnchor('CATIPrdObject','','CATIPrdObject') </script> is used by default  
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li>S_OK if the Representation Instance was successfully retrieved.</li>
       <li>E_FAIL if:
          <ul>
              <li>the Representation Instance based on its name does not exist</li>
              <li>or the QueryInterface on <tt>iIID</tt> failed</li>
          </ul>
       </li>
      </ul>
</dl>
</dl>
</dl>
<a name="Iterator"></a><a name="Iterator(CATIPrdIterator*&amp;)"></a> <dt> o <b>Iterator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Iterator</b>(<td><script type="text/javascript"> activateLink('CATIPrdIterator','CATIPrdIterator*&amp;')</script> <td><tt>oIterator</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves an iterator on all Representation Instances.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIterator</tt>
   <dd> [out, CATBaseUnknown#Release]     The iterator on all Representation Instances aggregated by this Product.<br>
     <b>Note</b>: The pointer should be <em>RELEASED</em>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li>S_OK if the iterator was successfully created.</li>
       <li>E_FAIL if this Product is not a Product Reference or if the iterator creation failed.</li>
      </ul>
</dl>
</dl>
<a name="RemoveRepInstance"></a><a name="RemoveRepInstance(CATIPrdRepInstance*)"></a> <dt> o <b>RemoveRepInstance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveRepInstance</b>(<td><script type="text/javascript"> activateLink('CATIPrdRepInstance','CATIPrdRepInstance*')</script> <td><tt>iRepInst</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a Representation Instance.<br>
 <b>Note</b>: This method must be called on a Product Reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRepInst</tt>
   <dd>     The Representation Instance to be removed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li>S_OK if the Representation Instance has been successfully removed.</li>
       <li>E_FAIL otherwise.</li>
      </ul>
</dl>
</dl>
<a name="ReplaceRepInstance"></a><a name="ReplaceRepInstance(CATIPrdRepInstance*,CATIPsiRepresentationReference*,CATIPrdRepInstance*&amp;)"></a> <dt> o <b>ReplaceRepInstance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReplaceRepInstance</b>(<td><script type="text/javascript"> activateLink('CATIPrdRepInstance','CATIPrdRepInstance*')</script> <td><tt>ipRepInst</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPsiRepresentationReference','CATIPsiRepresentationReference*')</script> <td><tt>ipNewRepRef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPrdRepInstance','CATIPrdRepInstance*&amp;')</script> <td><tt>opRepInst</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Replaces a Representation Instance with another one.<br>
 <b>Note</b>: This method must be called on a Product Reference.<br>
 The Replace operation fails if the new Representation Reference or the old one is a Technological Representation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipRepInst</tt>
   <dd>      The Representation Instance to be replaced.
   </dd>
    <dt><tt> ipNewRepRef</tt>
   <dd>      The Representation Reference of the replacing Representation Instance
   </dd>
    <dt><tt> opRepInst</tt>
   <dd> [out, CATBaseUnknown#Release]      The new Representation Instance that have replaced the old one.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        <ul>
       <li>S_OK if the Representation Instance was successfully replaced</li>
       <li>E_FAIL if:
              <ul>
              <li>this Product is not a Product Reference</li>
              <li>or if the new Representation or the old one is a Technological Representation</li>
              <li>or the Replace operation failed</li>
              </ul>
       </li>
      </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPLMRepInstances.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATProductStructureInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

