<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATInterfereSolverUseItf Interface CATIInterfSolverModel</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATInterfereSolverUseItf.htm" href="../CATInterfereSolverUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATInterfereSolverUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIInterfSolverModel"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATInterfereSolverUseItf Interface CATIInterfSolverModel</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIInterfSolverModel_53517','CATIInterfSolverModel','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIInterfSolverModel</b>
</p>
<p>
<b><i> This interface is implemented by CATInterfereSolverUseImpl.</i></b><br>

 <br><b>Role</b>: Contains API to manage Interference Solver.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddToFirstGroup(CAT3DRep*,int,CATMathTransformation*)"><b>AddToFirstGroup</b></a>(CAT3DRep*,int,CATMathTransformation*)
<dd>  Add to first group.
 <dt> o 
    <a href="#AddToSecondGroup(CAT3DRep*,int,CATMathTransformation*)"><b>AddToSecondGroup</b></a>(CAT3DRep*,int,CATMathTransformation*)
<dd>  Add to second group.
 <dt> o 
    <a href="#Compute()"><b>Compute</b></a>()
<dd>  Compute interference.
 <dt> o 
    <a href="#GetResult(CATLISTP(CATIInterfSolverResultITF)*&amp;)"><b>GetResult</b></a>(CATLISTP(CATIInterfSolverResultITF)*&amp;)
<dd>  Get Result of compute interference.
 <dt> o 
    <a href="#Init()"><b>Init</b></a>()
<dd>  Init interference solver before computing.
 <dt> o 
    <a href="#SetClearanceValue(double)"><b>SetClearanceValue</b></a>(double)
<dd>  Set the clearance value.
 <dt> o 
    <a href="#SetComputationLevel(CATIInterfSolverModel::InterfSolverComputationLevel)"><b>SetComputationLevel</b></a>(CATIInterfSolverModel::InterfSolverComputationLevel)
<dd>  Set the computation level.
 <dt> o 
    <a href="#SetComputationType(CATIInterfSolverModel::InterfSolverComputationType)"><b>SetComputationType</b></a>(CATIInterfSolverModel::InterfSolverComputationType)
<dd>  Set the computation type.
 <dt> o 
    <a href="#SetDetailResultLevel(CATIInterfSolverModel::InterfSolverDetailResult)"><b>SetDetailResultLevel</b></a>(CATIInterfSolverModel::InterfSolverDetailResult)
<dd>  Set detail level result.
 <dt> o 
    <a href="#SetGeometricalResultLevel(CATIInterfSolverModel::InterfSolverGeoResult)"><b>SetGeometricalResultLevel</b></a>(CATIInterfSolverModel::InterfSolverGeoResult)
<dd>  Set geometric level result.
 <dt> o 
    <a href="#SetNumericalResultLevel(CATIInterfSolverModel::InterfSolverNumericalResult)"><b>SetNumericalResultLevel</b></a>(CATIInterfSolverModel::InterfSolverNumericalResult)
<dd>  Set numerical level result.
 <dt> o 
    <a href="#UpdatePositionOfFirstGroup(int,CATMathTransformation&amp;)"><b>UpdatePositionOfFirstGroup</b></a>(int,CATMathTransformation&amp;)
<dd>  Update Position Of First Group.
 <dt> o 
    <a href="#UpdatePositionOfSecondGroup(int,CATMathTransformation&amp;)"><b>UpdatePositionOfSecondGroup</b></a>(int,CATMathTransformation&amp;)
<dd>  Update Position Of Second Group.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#InterfSolverComputationLevel"><b>InterfSolverComputationLevel</b></a>
<dd>  computation level of Interference Solver.
 <dt> o 
    <a href="#InterfSolverComputationType"><b>InterfSolverComputationType</b></a>
<dd>  computation type of Interference Solver.
 <dt> o 
    <a href="#InterfSolverDetailResult"><b>InterfSolverDetailResult</b></a>
<dd>  detail level result of Interference Solver.
 <dt> o 
    <a href="#InterfSolverGeoResult"><b>InterfSolverGeoResult</b></a>
<dd>  geometric level result of Interference Solver.
 <dt> o 
    <a href="#InterfSolverNumericalResult"><b>InterfSolverNumericalResult</b></a>
<dd>  numerical level result of Interference Solver.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddToFirstGroup"></a><a name="AddToFirstGroup(CAT3DRep*,int,CATMathTransformation*)"></a> <dt> o <b>AddToFirstGroup</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddToFirstGroup</b>(<td><script type="text/javascript"> activateLink('CAT3DRep','CAT3DRep*')</script> <td><tt>ipBagRep</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation*')</script> <td><tt>iPosition</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add to first group.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipRep</tt>
   <dd> [in] The visualization object to add of first group defined by </dd>
<script type="text/javascript"> activateLinkAnchor('CAT3DRep','','CAT3DRep') </script>.  
    <dt><tt> iId</tt>
   <dd>	[in] The integer Id to identify the object in the result interference. 
 </dd>
    <dt><tt> iPosition</tt>
   <dd>	[in] The transformation matrix to apply of object by </dd>
<script type="text/javascript"> activateLinkAnchor('CATMathTransformation','','CATMathTransformation') </script>.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd> If the operation is successful.
   <dt><tt>S_FALSE</tt> <dd> The 
<script type="text/javascript"> activateLinkAnchor('CAT3DRep','','CAT3DRep') </script> has no 3D visualization (ex: part in NoShow, part without 3D geometry). The visualization object is not added to the group.   <dt><tt>E_FAIL</tt>  <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="AddToSecondGroup"></a><a name="AddToSecondGroup(CAT3DRep*,int,CATMathTransformation*)"></a> <dt> o <b>AddToSecondGroup</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddToSecondGroup</b>(<td><script type="text/javascript"> activateLink('CAT3DRep','CAT3DRep*')</script> <td><tt>ipRep</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation*')</script> <td><tt>iPosition</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add to second group.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipRep</tt>
   <dd> [in] The visualization object to add of first group defined by </dd>
<script type="text/javascript"> activateLinkAnchor('CAT3DRep','','CAT3DRep') </script>.  
    <dt><tt> iId</tt>
   <dd>	[in] The integer Id to identify the object in the result interference. 
 </dd>
    <dt><tt> iPosition</tt>
   <dd>	[in] The transformation matrix to apply of object by </dd>
<script type="text/javascript"> activateLinkAnchor('CATMathTransformation','','CATMathTransformation') </script>.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd> If the operation is successful.
   <dt><tt>S_FALSE</tt> <dd> The 
<script type="text/javascript"> activateLinkAnchor('CAT3DRep','','CAT3DRep') </script> has no 3D visualization (ex: part in NoShow, part without 3D geometry). The visualization object is not added to the group.   <dt><tt>E_FAIL</tt>  <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="Compute"></a><a name="Compute()"></a> <dt> o <b>Compute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Compute</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Compute interference.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetResult"></a><a name="GetResult(CATLISTP(CATIInterfSolverResultITF)*&amp;)"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetResult</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATIInterfSolverResultITF)','CATLISTP(CATIInterfSolverResultITF)*&amp;')</script> <td><tt>oResult</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get Result of compute interference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResult</tt>
   <dd>	[out] The list of interference result by </dd>
<script type="text/javascript"> activateLinkAnchor('CATIInterfSolverResultITF','','CATIInterfSolverResultITF') </script>.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="Init"></a><a name="Init()"></a> <dt> o <b>Init</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Init</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Init interference solver before computing.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="SetClearanceValue"></a><a name="SetClearanceValue(double)"></a> <dt> o <b>SetClearanceValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetClearanceValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iClearance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the clearance value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClearance</tt>
   <dd> [in] The clearance value in MM in case of computation type with CATIInterfSolverModel::ITFSolverComputeCLEARANCE. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="SetComputationLevel"></a><a name="SetComputationLevel(CATIInterfSolverModel::InterfSolverComputationLevel)"></a> <dt> o <b>SetComputationLevel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetComputationLevel</b>(<td><script type="text/javascript"> activateLink('CATIInterfSolverModel::InterfSolverComputationLevel','CATIInterfSolverModel::InterfSolverComputationLevel')</script> <td><tt>iLevelOfComputation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the computation level.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLevelOfComputation</tt>
   <dd> [in] The level of computation defined by </dd>
<script type="text/javascript"> activateLinkAnchor('InterfSolverComputationLevel','','InterfSolverComputationLevel') </script> enum.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="SetComputationType"></a><a name="SetComputationType(CATIInterfSolverModel::InterfSolverComputationType)"></a> <dt> o <b>SetComputationType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetComputationType</b>(<td><script type="text/javascript"> activateLink('CATIInterfSolverModel::InterfSolverComputationType','CATIInterfSolverModel::InterfSolverComputationType')</script> <td><tt>iTypeOfComputation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the computation type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeOfComputation</tt>
   <dd> [in] The type of computation defined by </dd>
<script type="text/javascript"> activateLinkAnchor('InterfSolverComputationType','','InterfSolverComputationType') </script> enum.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="SetDetailResultLevel"></a><a name="SetDetailResultLevel(CATIInterfSolverModel::InterfSolverDetailResult)"></a> <dt> o <b>SetDetailResultLevel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDetailResultLevel</b>(<td><script type="text/javascript"> activateLink('CATIInterfSolverModel::InterfSolverDetailResult','CATIInterfSolverModel::InterfSolverDetailResult')</script> <td><tt>iLevelOfDetailResult</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set detail level result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLevelOfDetailResult</tt>
   <dd> [in] The detail level result of computation defined by </dd>
<script type="text/javascript"> activateLinkAnchor('InterfSolverDetailResult','','InterfSolverDetailResult') </script> enum.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="SetGeometricalResultLevel"></a><a name="SetGeometricalResultLevel(CATIInterfSolverModel::InterfSolverGeoResult)"></a> <dt> o <b>SetGeometricalResultLevel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGeometricalResultLevel</b>(<td><script type="text/javascript"> activateLink('CATIInterfSolverModel::InterfSolverGeoResult','CATIInterfSolverModel::InterfSolverGeoResult')</script> <td><tt>iGeometricalResultlevel</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set geometric level result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometricalResultlevel</tt>
   <dd> [in] The geometric level result of computation defined by </dd>
<script type="text/javascript"> activateLinkAnchor('InterfSolverGeoResult','','InterfSolverGeoResult') </script> enum.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="SetNumericalResultLevel"></a><a name="SetNumericalResultLevel(CATIInterfSolverModel::InterfSolverNumericalResult)"></a> <dt> o <b>SetNumericalResultLevel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetNumericalResultLevel</b>(<td><script type="text/javascript"> activateLink('CATIInterfSolverModel::InterfSolverNumericalResult','CATIInterfSolverModel::InterfSolverNumericalResult')</script> <td><tt>iNumericalResultlevel</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set numerical level result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumericalResultlevel</tt>
   <dd> [in] The numerical level result of computation defined by </dd>
<script type="text/javascript"> activateLinkAnchor('InterfSolverNumericalResult','','InterfSolverNumericalResult') </script> enum.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="UpdatePositionOfFirstGroup"></a><a name="UpdatePositionOfFirstGroup(int,CATMathTransformation&amp;)"></a> <dt> o <b>UpdatePositionOfFirstGroup</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UpdatePositionOfFirstGroup</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>iPosition</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Update Position Of First Group.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>	[in] The integer Id to identify the object in the result interference (same Id in AddToFirstGroup method).
 </dd>
    <dt><tt> iPosition</tt>
   <dd>	[in] The transformation matrix to apply of all object of group by </dd>
<script type="text/javascript"> activateLinkAnchor('CATMathTransformation','','CATMathTransformation') </script>.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
<a name="UpdatePositionOfSecondGroup"></a><a name="UpdatePositionOfSecondGroup(int,CATMathTransformation&amp;)"></a> <dt> o <b>UpdatePositionOfSecondGroup</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UpdatePositionOfSecondGroup</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>iPosition</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Update Position Of Second Group.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>	[in] The integer Id to identify the object in the result interference (same Id in AddToSecondGroup method).
 </dd>
    <dt><tt> iPosition</tt>
   <dd>	[in] The transformation matrix to apply of all object of group by </dd>
<script type="text/javascript"> activateLinkAnchor('CATMathTransformation','','CATMathTransformation') </script>.  
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>   <dd> If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="InterfSolverComputationLevel"> <dt> o <b>InterfSolverComputationLevel</b>
<dl>
  <dd>
<pre>
enum <b>InterfSolverComputationLevel</b> {
  ITFSolverComputationLevelLOW,
  ITFSolverComputationLevelHIGH
}
</pre>
 computation level of Interference Solver.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   ITFSolverComputationLevelLOW</tt>
   <dd>    stop at first interference.
   </dd>
    <dt><tt>   ITFSolverComputationLevelHIGH</tt>
   <dd>    compute all interferences (default).</dd>
</dl>
</dl>
</dl>
<a name="InterfSolverComputationType"> <dt> o <b>InterfSolverComputationType</b>
<dl>
  <dd>
<pre>
enum <b>InterfSolverComputationType</b> {
  ITFSolverComputeCLASH,
  ITFSolverComputeCONTACT,
  ITFSolverComputeCLEARANCE
}
</pre>
 computation type of Interference Solver.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   ITFSolverComputeCLASH</tt>
   <dd>    CLASH computation.
   </dd>
    <dt><tt>   ITFSolverComputeCONTACT</tt>
   <dd>    CLASH + CONTACT computation.
   </dd>
    <dt><tt>   ITFSolverComputeCLEARANCE</tt>
   <dd>    CLASH + CONTACT + CLEARANCEcomputation.</dd>
</dl>
</dl>
</dl>
<a name="InterfSolverDetailResult"> <dt> o <b>InterfSolverDetailResult</b>
<dl>
  <dd>
<pre>
enum <b>InterfSolverDetailResult</b> {
  ITFSolverDetaiResultPRODUCT,
  ITFSolverDetaiResultGEO
}
</pre>
 detail level result of Interference Solver.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   ITFSolverDetailResultPRODUCT</tt>
   <dd>     to compute result with granularity of representation object (default).
   </dd>
    <dt><tt>   ITFSolverDetailResultGEO</tt>
   <dd>    to compute result with granularity of geometry in representation object.</dd>
</dl>
</dl>
</dl>
<a name="InterfSolverGeoResult"> <dt> o <b>InterfSolverGeoResult</b>
<dl>
  <dd>
<pre>
enum <b>InterfSolverGeoResult</b> {
  ITFSolverGeoResultNO,
  ITFSolverGeoResultCLASH_CURVE,
  ITFSolverGeoResultCONTACT_TRIANGLE,
  ITFSolverGeoResultCLEARANCE_TRIANGLE
}
</pre>
 geometric level result of Interference Solver.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   ITFSolverGeoResultNO</tt>
   <dd>     no geometric result (default).
   </dd>
    <dt><tt>   ITFSolverGeoResultCLASH_CURVE</tt>
   <dd>    for intersection curve.
   </dd>
    <dt><tt>   ITFSolverGeoResultCONTACT_TRIANGLE</tt>
   <dd>    for contact triangles.
   </dd>
    <dt><tt>   ITFSolverGeoResultCLEARANCE_TRIANGLE</tt>
   <dd>    for clearance triangles.</dd>
</dl>
</dl>
</dl>
<a name="InterfSolverNumericalResult"> <dt> o <b>InterfSolverNumericalResult</b>
<dl>
  <dd>
<pre>
enum <b>InterfSolverNumericalResult</b> {
  ITFSolverNumResultNO,
  ITFSolverNumResultCLASH_PENETRATION_VECTOR,
  ITFSolverNumResultCONTACT_DISTANCE_MIN,
  ITFSolverNumResultCLEARANCE_DISTANCE_MIN
}
</pre>
 numerical level result of Interference Solver.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   ITFSolverNumResultNO</tt>
   <dd>     no numerical result (default).
   </dd>
    <dt><tt>   ITFSolverNumResultCLASH_PENETRATION_VECTOR</tt>
   <dd>    to compute the penetration vector.
   </dd>
    <dt><tt>   ITFSolverNumResultCONTACT_DISTANCE_MIN</tt>
   <dd>    to compute the 2 realized points about contact and minimum distance.
   </dd>
    <dt><tt>   ITFSolverNumResultCLEARANCE_DISTANCE_MIN</tt>
   <dd>    to compute the 2 realized points about clearance and minimum distance.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIInterfSolverModel.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATInterfereSolverUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

