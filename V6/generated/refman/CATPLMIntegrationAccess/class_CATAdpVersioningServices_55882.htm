<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationAccess Class CATAdpVersioningServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationAccess.htm" href="../CATPLMIntegrationAccess.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationAccess";	}
		function getCurrentObjectName() { 
 	return "CATAdpVersioningServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationAccess <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpVersioningServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpVersioningServices_55882','CATAdpVersioningServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpVersioningServices</b>
</p>
<p>
<b><i> Class of services enabling to manage versioning of components in the database.</i></b><br>


 <br><b>Role</b>: Provides a set of services enabling the user to manage versioning of components in the database.
 <ul>
 <li> To process such operations, you will need a <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','','CATIAdpPLMIdentificator') </script> . You can obtain it by using Query services  before using versioning services (
<script type="text/javascript"> activateLinkAnchor('CATAdpQueryServices','','CATAdpQueryServices') </script> ).</li>   </ul>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAllVersions(CATIAdpPLMIdentificator*,CATLISTP(CATAdpQueryResult)&amp;,CATIAdpPLMErrorReviewer*)"><b>GetAllVersions</b></a>(CATIAdpPLMIdentificator*,CATLISTP(CATAdpQueryResult)&amp;,CATIAdpPLMErrorReviewer*)
<dd>   Gets the available versions of a component.
 <dt> o 
    <a href="#NewVersion(CATIAdpPLMIdentificator*,CATTime&amp;,CATIAdpPLMIdentificator*&amp;,CATIAdpPLMErrorReviewer*)"><b>NewVersion</b></a>(CATIAdpPLMIdentificator*,CATTime&amp;,CATIAdpPLMIdentificator*&amp;,CATIAdpPLMErrorReviewer*)
<dd>   Creates a new version of a component.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAllVersions"></a><a name="GetAllVersions(CATIAdpPLMIdentificator*,CATLISTP(CATAdpQueryResult)&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>GetAllVersions</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllVersions</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iComponent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATAdpQueryResult)','CATLISTP(CATAdpQueryResult)&amp;')</script> <td><tt>oQueryResults</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets the available versions of a component.
 <br><b>Role:</b> Retrieves in the database all the available versions of a reference or a representation reference.
 <ul>
 <li>The database informations are imbedded in the identifier of the object itself.</li>
 <li>No order is guaranteed in return for the new versions of the component.</li>
 <li><code>ERR_02_NEWVERSION</code> error is available through 
<script type="text/javascript"> activateLinkAnchor('CATError','CATGetLastError','CATError.CATGetLastError') </script> if at least one version could not be retrieved for this component.</li> </ul>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComponent</tt>
   <dd> [in]   The identifier of the component which versions are required. The component must be a reference or a representation reference. 
   If not, result will be <code>E_INVALIDARG</code>.
 </dd>
    <dt><tt> oQueryResults</tt>
   <dd> [out]   Returned list with all retrieved objects given access through </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpQueryResult','','CATAdpQueryResult') </script> contract.    <ul>
   <li> The list is emptied by the beginning of the method.</li> 
   <li> You must delete the elements of the list when useless.</li> 
   <li> These objects are not loaded in a session. </li>
   <li> Objects are identified through 
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','','CATIAdpPLMIdentificator') </script> by using the 
<script type="text/javascript"> activateLinkAnchor('CATAdpQueryResult','GetIdentifier','CATAdpQueryResult.GetIdentifier') </script> method.</li>   <li> The attributes obtained through the 
<script type="text/javascript"> activateLinkAnchor('CATAdpQueryResult','GetAttributeSet','CATAdpQueryResult.GetAttributeSet') </script> method are <tt>PLM_ExternalID</tt> and <tt>V_Version</tt>.</li>   </ul>
 
    <dt><tt> iopErrorReviewer</tt>
   <dd> [inout]   The ErrorReviewer dedicated to store and handle all PLM Errors raised during the execution of this service.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><code>S_OK</code> if the all the versions of the component could be retrieved in the database.</li>
   <li><code>E_INVALIDARG</code> if <tt>iComponent</tt> is not a reference or is null.</li>
   <li><code>E_FAIL</code> if the operation failed. The returned list is empty. The blocking error can be accessed through 
<script type="text/javascript"> activateLinkAnchor('CATError','CATGetLastError','CATError.CATGetLastError') </script> method.</li>   </ul>
</dl>
</dl>
<a name="NewVersion"></a><a name="NewVersion(CATIAdpPLMIdentificator*,CATTime&amp;,CATIAdpPLMIdentificator*&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>NewVersion</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>NewVersion</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iObjectToTreat</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATTime','CATTime&amp;')</script> <td><tt>iApplicabilityDate</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*&amp;')</script> <td><tt>oVersioned</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Creates a new version of a component.
 <br><b>Role:</b> Creates a new version of a reference or representation reference in the database. 
 This operation is not available if the corresponding component is loaded in the session, nor if the component
 is not the last version of a version family.
 <ul>
 <li>The database informations are imbedded in the identifier of the object itself.</li>
 <li><code>ERR_01_NEWVERSION</code> error is available through 
<script type="text/javascript"> activateLinkAnchor('CATError','CATGetLastError','CATError.CATGetLastError') </script> if the provided component is in session.</li> </ul>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectToTreat</tt>
   <dd> [in]   The identifier of the component to version.
   <ul>
   <li>The component must not be loaded in a session. If so, result will be <code>E_FAIL</code>.</li>
   <li>The component must be a reference or a representation reference. If not, result will be <code>E_INVALIDARG</code>.</li>
   <li>The component must be the last version of a version family. If not, the call will result in a server error.</li>
   </ul>
 </dd>
    <dt><tt> iApplicabilityDate</tt>
   <dd> [in]   The applicability date of the new version of the component.
 </dd>
    <dt><tt> oVersioned</tt>
   <dd> [out]   The identifier of the new version of the component.
 </dd>
    <dt><tt> iopErrorReviewer</tt>
   <dd> [inout]   The ErrorReviewer dedicated to store and handle all PLM Errors raised during the execution of this service.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><code>S_OK</code> if the new version of the component was created in the database.</li>
   <li><code>E_INVALIDARG</code> if <tt>iObjectToTreat</tt> is not a reference or is null.</li>
   <li><code>E_FAIL</code> if the new version could not be created in the database. Nothing was done during the operation. 
   The blocking error can be accessed through 
<script type="text/javascript"> activateLinkAnchor('CATError','CATGetLastError','CATError.CATGetLastError') </script> method.</li>   </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAdpVersioningServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationAccess</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

