<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationAccess Class CATAdpLockServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationAccess.htm" href="../CATPLMIntegrationAccess.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationAccess";	}
		function getCurrentObjectName() { 
 	return "CATAdpLockServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationAccess <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpLockServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpLockServices_42643','CATAdpLockServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpLockServices</b>
</p>
<p>
<b><i> Class to manage Lock services  in CATIA session.</i></b><br>


 <br><b>Role</b>: Provides all basic functions to lock or unlock data.
 <ul>
 <li> To process a lock operation, you will need a PLM identificator, <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','','CATIAdpPLMIdentificator') </script> interface pointer.  You can use 
<script type="text/javascript"> activateLinkAnchor('CATAdpQueryServices','','CATAdpQueryServices') </script> to retrieve it, or use the 
<script type="text/javascript"> activateLinkAnchor('CATIPLMComponent','GetAdpID','CATIPLMComponent.GetAdpID') </script> method if  your component is already in session.</li>
 </ul>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#IsLocked(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATLISTP(CATAdpLockInformation)&amp;,CATIAdpPLMErrorReviewer*)"><b>IsLocked</b></a>(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATLISTP(CATAdpLockInformation)&amp;,CATIAdpPLMErrorReviewer*)
<dd>   Gets the lock status of components.
 <dt> o 
    <a href="#Lock(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)"><b>Lock</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)
<dd>  Performs a lock.
 <dt> o 
    <a href="#Unlock(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)"><b>Unlock</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)
<dd>  Performs a unlock.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="IsLocked"></a><a name="IsLocked(CATLISTP(CATIAdpPLMIdentificator)&amp;,CATLISTP(CATAdpLockInformation)&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>IsLocked</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsLocked</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATIAdpPLMIdentificator)','CATLISTP(CATIAdpPLMIdentificator)&amp;')</script> <td><tt>iComponents</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATAdpLockInformation)','CATLISTP(CATAdpLockInformation)&amp;')</script> <td><tt>oLockInformations</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Gets the lock status of components.

 <br><b>Role:</b>Queries the database to retrieve the lock status of a set of components.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComponents</tt>
   <dd> [in]   The identifiers of components which lock status is required.
 </dd>
    <dt><tt> oLockInformations</tt>
   <dd> [out]   Returned list with all provided components given access to its lock information through the </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpLockInformation','','CATAdpLockInformation') </script> contract.  <ul>
 <li> The list is emptied by the beginning of the method.</li> 
 <li> You must delete the elements of the list when useless.</li> 
 <li> Objects are identified through 
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','','CATIAdpPLMIdentificator') </script> by using the 
<script type="text/javascript"> activateLinkAnchor('CATAdpLockInformation','GetIdentifier','CATAdpLockInformation.GetIdentifier') </script> method.</li> </ul>
 
    <dt><tt> iopErrorReviewer</tt>
   <dd> [inout]   The ErrorReviewer dedicated to store and handle all PLM Errors raised during the execution of this service.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><code>S_OK</code> if the lock informations could be retrieved in the database.</li>
   <li><code>E_INVALIDARG</code> if an invalid set of components was provided (empty set).</li>
   <li><code>E_FAIL</code> if a fatal error occured during the operation. The blocking error can be accessed through 
<script type="text/javascript"> activateLinkAnchor('CATError','CATGetLastError','CATError.CATGetLastError') </script> method.</li>   </ul>
</dl>
</dl>
<a name="Lock"></a><a name="Lock(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>Lock</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Lock</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iToBeProceed</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Performs a lock.
 <br><b>Role:</b>This method locks a component. This method is not recursive.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToBeProceed</tt>
   <dd> [in]   The list of PLM identificator to lock.
 </dd>
    <dt><tt> iopErrorReviewer</tt>
   <dd> [inout]   The ErrorReviewer dedicated to store and handle all PLM Errors raised during the execution of this service.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt> The components have all been locked.</li> 
   <li><tt>S_FALSE</tt> At least one of the components holds a warning
   <li><tt>E_FAIL</tt> A fatal error happened during the lock operation. Nothing was done during the operation.</li>
   </ul>
</dl>
</dl>
<a name="Unlock"></a><a name="Unlock(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>Unlock</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Unlock</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iToBeProceed</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Performs a unlock.
 <br><b>Role:</b>This method unlocks a list of components. This method is not recursive.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToBeProceed</tt>
   <dd> [in]   The list of PLM identificator to unlock.
 </dd>
    <dt><tt> iopErrorReviewer</tt>
   <dd> [inout]   The ErrorReviewer dedicated to store and handle all PLM Errors raised during the execution of this service.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt> The components have all been unlocked.</li> 
   <li><tt>S_FALSE</tt> At least one of the components holds a warning
   <li><tt>E_FAIL</tt> A fatal error happened during the unlock operation. Nothing was done during the operation.</li>
   </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAdpLockServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationAccess</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

