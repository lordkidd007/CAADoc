<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationAccess Class CATAdpDictionaryServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationAccess.htm" href="../CATPLMIntegrationAccess.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationAccess";	}
		function getCurrentObjectName() { 
 	return "CATAdpDictionaryServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationAccess <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpDictionaryServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpDictionaryServices_55913','CATAdpDictionaryServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpDictionaryServices</b>
</p>
<p>
<b><i> Class to manage PLM dictionary.</i></b><br>


 <br><b>Role</b>: This class provides all basic functions to browse and navigate on PLM dictionaries
 A repository contains many environments.
 In a repository, can be declared differents modelers.
 The types of differents modelers are describe in metadata files.</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetEnvironment(char*,CATString&amp;,CATIAdpEnvironment**)"><b>GetEnvironment</b></a>(char*,CATString&amp;,CATIAdpEnvironment**)
<dd>  Retrieves an environment by its name.
 <dt> o 
    <a href="#GetModeler(char*,CATString&amp;,CATListPtrCATBaseUnknown&amp;)"><b>GetModeler</b></a>(char*,CATString&amp;,CATListPtrCATBaseUnknown&amp;)
<dd>  
 <dt> o 
    <a href="#ListEnvironments(char*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)"><b>ListEnvironments</b></a>(char*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)
<dd>  Gets the available environments.
 <dt> o 
    <a href="#ListModelers(char*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)"><b>ListModelers</b></a>(char*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)
<dd>  
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetEnvironment"></a><a name="GetEnvironment(char*,CATString&amp;,CATIAdpEnvironment**)"></a> <dt> o <b>GetEnvironment</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEnvironment</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iRepository</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iEnvId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpEnvironment','CATIAdpEnvironment**')</script> <td><tt>oEnvironment</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves an environment by its name. 

 <br><b>Role</b>: This will result in the loading of the corresponding modelers describe in the metadata file.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iRepository</tt>
   <dd> 			The repository name.
 </dd>
    <dt><tt> iEnvId</tt>
   <dd> [in]   The environment name.
 </dd>
    <dt><tt> oEnvironment</tt>
   <dd> [out, CATBaseUnknown#Release]   The loaded environment. Release the pointer when useless.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <dt><code>S_OK</code></dt>
      <dd> The provided environment was successfully loaded.</dd>
     <dt><code>E_FAIL</code> </dt>
     <dd>A problem occurs during the operation. 

</dl>
</dl>
<a name="GetModeler"></a><a name="GetModeler(char*,CATString&amp;,CATListPtrCATBaseUnknown&amp;)"></a> <dt> o <b>GetModeler</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetModeler</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iRepository</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iModId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATBaseUnknown','CATListPtrCATBaseUnknown&amp;')</script> <td><tt>oTypes</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R213 Use CATITypeDictionary#ListTypesForPackage instead  <br>
 Retrieves the modeler identified through the provided identifier. 
 <br><b>Role</b>: This will result in the loading of the corresponding modeler.

 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iRepository</tt>
   <dd> 			The repository which load the Modeler from.
 </dd>
    <dt><tt> iModId</tt>
   <dd> [in]   The modeler name.
 </dd>
    <dt><tt> oTypes</tt>
   <dd> [out]   The types of components that can be examined in this modeler. Release the returned objects when useless.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <dt><code>S_OK</code></dt>
     <dd> The provided modeler was successfully loaded.</dd>
     <dt><code>E_FAIL</code> </dt>
     <dd>Failure. A problem occurs during the operation.</dd>

</dl>
</dl>
<a name="ListEnvironments"></a><a name="ListEnvironments(char*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>ListEnvironments</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListEnvironments</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iRepository</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATString','CATListValCATString&amp;')</script> <td><tt>oEnvId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>oEnvAlias</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets the available environments.

 <br><b>Role</b>: This method provides the different available environments.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iRepository</tt>
   <dd> 			The repository name.
 </dd>
    <dt><tt> oEnvId</tt>
   <dd> [out]   The environment name list. When calling method, this list should be empty.
 </dd>
    <dt><tt> oEnvAlias</tt>
   <dd> [out]   The environment display name list.When calling method, this list should be empty.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt> <code>S_OK</code>     <dd> At least one environment is available.
 <dt> <code>S_FALSE</code>  <dd> No environment available.
 <dt> <code>E_FAIL</code>   <dd> Failure.

</dl>
</dl>
<a name="ListModelers"></a><a name="ListModelers(char*,CATListValCATString&amp;,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>ListModelers</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListModelers</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iRepository</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATString','CATListValCATString&amp;')</script> <td><tt>oModId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>oModAlias</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R213 Use CATITypeDictionary#ListTypesForPackage instead  <br>
 Gets the available modelers.

 <br><b>Role</b>: this method provides the different available modelers.

 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iRepository</tt>
   <dd> 			The repository which load the modeler from.
 </dd>
    <dt><tt> oModId</tt>
   <dd> [out]   The modeler name list. When calling method, this list should be empty.
 </dd>
    <dt><tt> oModAlias</tt>
   <dd> [out]   The modeler display name list.When calling method, this list should be empty.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt> <code>S_OK</code>     <dd> At least one modeler is available.
 <dt> <code>S_FALSE</code>  <dd> No modeler available.
 <dt> <code>E_FAIL</code>   <dd> Failure.

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAdpDictionaryServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationAccess</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

