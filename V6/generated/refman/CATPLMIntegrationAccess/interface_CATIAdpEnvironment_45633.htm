<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationAccess Interface CATIAdpEnvironment</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationAccess.htm" href="../CATPLMIntegrationAccess.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationAccess";	}
		function getCurrentObjectName() { 
 	return "CATIAdpEnvironment"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationAccess Interface CATIAdpEnvironment</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIAdpEnvironment_45633','CATIAdpEnvironment','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIAdpEnvironment</b>
</p>
<p>
<b><i> Interface representing PLM Environment.</i></b><br>


 <br><b>Role</b>: Components that implement this interface are PLM environment.
 You retrieves environment by using <script type="text/javascript"> activateLinkAnchor('CATAdpDictionaryServices','','CATAdpDictionaryServices') </script>. 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAdpDictionaryServices','','CATAdpDictionaryServices') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAlias(CATUnicodeString&amp;)"><b>GetAlias</b></a>(CATUnicodeString&amp;)
<dd>  Gets the environment name as NLS name.
 <dt> o 
    <a href="#GetAuthoringType(CATString&amp;,CATPLMCoreType&amp;,IID&amp;,void**)"><b>GetAuthoringType</b></a>(CATString&amp;,CATPLMCoreType&amp;,IID&amp;,void**)
<dd>  
 <dt> o 
    <a href="#GetUsableTypeFromTypeIdentification(CATString&amp;,CATString&amp;,CATString&amp;,CATIAdpType**)"><b>GetUsableTypeFromTypeIdentification</b></a>(CATString&amp;,CATString&amp;,CATString&amp;,CATIAdpType**)
<dd>  
 <dt> o 
    <a href="#GetUsableTypes(CATString&amp;,CATPLMCoreType&amp;,CATListPtrCATBaseUnknown&amp;)"><b>GetUsableTypes</b></a>(CATString&amp;,CATPLMCoreType&amp;,CATListPtrCATBaseUnknown&amp;)
<dd>  
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAlias"></a><a name="GetAlias(CATUnicodeString&amp;)"></a> <dt> o <b>GetAlias</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAlias</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oAlias</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the environment name as NLS name.

 <br><b>Role</b>: Allows the user to retrieve the environment NLS alias.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAlias</tt>
   <dd> [out]   The environment alias.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt> <code>S_OK</code>     <dd> an Alias was retrieved.
 <dt> <code>E_FAIL</code>   <dd> Failure

</dl>
</dl>
<a name="GetAuthoringType"></a><a name="GetAuthoringType(CATString&amp;,CATPLMCoreType&amp;,IID&amp;,void**)"></a> <dt> o <b>GetAuthoringType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAuthoringType</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iModeler</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATPLMCoreType','CATPLMCoreType&amp;')</script> <td><tt>iCoreType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void**')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R213 Use 
<script type="text/javascript"> activateLinkAnchor('CATCkePLMNavPublicServices','RetrieveKnowledgeType','CATCkePLMNavPublicServices.RetrieveKnowledgeType') </script>  <br> Gets the PLMType which is being authorized to use in creation in this environment.

 <br><b>Role</b>: Informs the user about the type of component that can be created in this environment.

 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModeler</tt>
   <dd> [in]   The modeler in which the user wants to known the authorized kind of -PLMCoreType- to be create.
 </dd>
    <dt><tt> iCoreType</tt>
   <dd> [in]   The PLMCoreType required (PLM_Reference, PLM_Instance ...).
 </dd>
    <dt><tt> iIID</tt>
   <dd> [in]   The iid of the interface expected as result.
 </dd>
    <dt><tt> oType</tt>
   <dd> [out, CATBaseUnknown#Release]   The type of component that can be created in this environment. Release the returned object when useless.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt> <code>S_OK</code>     <dd> A PLMType is an authoring type for the provided PLMCoreType in the provided modeler.
 <dt> <code>S_FALSE</code>  <dd> No authoring type available for this PLMCoreType in the modeler.
 <dt> <code>E_FAIL</code>   <dd> Failure

 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAdpType','','CATIAdpType') </script>
</dl>
</dl>
<a name="GetUsableTypeFromTypeIdentification"></a><a name="GetUsableTypeFromTypeIdentification(CATString&amp;,CATString&amp;,CATString&amp;,CATIAdpType**)"></a> <dt> o <b>GetUsableTypeFromTypeIdentification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUsableTypeFromTypeIdentification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iModelerName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iModelerTypeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iCustoName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpType','CATIAdpType**')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R213 Use 
<script type="text/javascript"> activateLinkAnchor('CATCkePLMNavPublicServices','RetrieveKnowledgeType','CATCkePLMNavPublicServices.RetrieveKnowledgeType') </script>  <br> Returns a type inside Usable list from Customisation / Modeler inputs.

 <br><b>Role</b>: Try to find a specific type from usable list.

 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModelerName</tt>
   <dd> [in]   The modeler in which the user wants to get the Type to be examined.
 </dd>
    <dt><tt> iModelerTypeName</tt>
   <dd> [in]   The metadata name of the base type in the modeler from which the type will be found.
 </dd>
    <dt><tt> iCustoName</tt>
   <dd> [in]   The name of the customisation to search in. This string can be empty if <tt> iModelerTypeName </tt> is a concrete type (instantiable type).
 </dd>
    <dt><tt> oType</tt>
   <dd> [out, CATBaseUnknown#Release]   The type found.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt> <code>S_OK</code>     <dd> A type is found.
 <dt> <code>E_FAIL</code>   <dd> Failure

 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAdpType','','CATIAdpType') </script>
</dl>
</dl>
<a name="GetUsableTypes"></a><a name="GetUsableTypes(CATString&amp;,CATPLMCoreType&amp;,CATListPtrCATBaseUnknown&amp;)"></a> <dt> o <b>GetUsableTypes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUsableTypes</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iModeler</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATPLMCoreType','CATPLMCoreType&amp;')</script> <td><tt>iCoreType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATBaseUnknown','CATListPtrCATBaseUnknown&amp;')</script> <td><tt>oTypes</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R213 Use 
<script type="text/javascript"> activateLinkAnchor('CATCkePLMNavPublicServices','RetrieveKnowledgeType','CATCkePLMNavPublicServices.RetrieveKnowledgeType') </script>  <br> Gets the PLMTypes which can be examined by the user in this environment.

 <br><b>Role</b>: Informs the user about the types of components that can be examined in this environment. 

 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModeler</tt>
   <dd> [in]   The modeler in which the user wants to known the authorized kind of -PLMCoreType- to be examined.
 </dd>
    <dt><tt> iCoreType</tt>
   <dd> [in]   The PLMCoreType required (PLM_Reference, PLM_Instance ...).
 </dd>
    <dt><tt> oTypes</tt>
   <dd> [out, CATBaseUnknown#Release]   The types of components that can be examined in this environment. Release the returned objects when useless.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt> <code>S_OK</code>     <dd> At least one CATIPLMType is a usable type for the provided PLMCoreType in the provided modeler.
 <dt> <code>S_FALSE</code>  <dd> No usable type available for this PLMCoreType in the modeler.
 <dt> <code>E_FAIL</code>   <dd> Failure

 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAdpType','','CATIAdpType') </script>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIAdpEnvironment.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationAccess</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

