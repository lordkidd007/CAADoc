<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationAccess Interface CATIAdpPLMErrorReviewer</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationAccess.htm" href="../CATPLMIntegrationAccess.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationAccess";	}
		function getCurrentObjectName() { 
 	return "CATIAdpPLMErrorReviewer"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationAccess Interface CATIAdpPLMErrorReviewer</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIAdpPLMErrorReviewer_55251','CATIAdpPLMErrorReviewer','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIAdpPLMErrorReviewer</b>
</p>
<p>
<b><i> Interface to handle a PLM Error reviewer object.</i></b><br>

 <br><b>Role</b>: This interface handles the PLM Error Reviewer object as the container for all PLM errors raised when 
 performing PLM server Access operations.
 <br>For example : 
 <ul>
 <li>QEOPS operation: <script type="text/javascript"> activateLinkAnchor('CATAdpOpenSaveServices','','CATAdpOpenSaveServices') </script> </li> <li>Components LifeCycle operation: 
<script type="text/javascript"> activateLinkAnchor('CATAdpMaturityServices','','CATAdpMaturityServices') </script> </li> </ul>
 
 <br>The ErrorReviewer creation is invoked by application, using  
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMErrorReviewerFactory','CreateErrorReviewer','CATAdpPLMErrorReviewerFactory.CreateErrorReviewer') </script> . <p>
 <br>Several ErrorReviewers may exist at the same time in the current session for distinct uses.
 <br>Any application using this decides wich PLM services are to be monitored by a given ErrorReviewer
 <br>and when errors have to be scanned and read on this reviewer for reporting and/or display.
 <p>
 <br>A same PLMError Reviewer can be used for while calling sequentially several PLM operations:
 <br>Eventual errors raised by each operation are added to the current set of errors contained by the Reviewer.
 <br>The set of error is only reset when deleting the Reviewer.
 <p>
 example:
 <pre>
 // Create a PLM Error Reviewer:
 CATIAdpPLMErrorReviewer* piErrorReviewer = NULL;
 HRESULT HRC = CATAdpPLMErrorReviewerFactory::CreateErrorReviewer(piErrorReviewer);
 if (SUCCEEDED(HRC) && piErrorReviewer)
 {
   // Use this PLM Error Reviewer calling service(s) that may fill it with PLMErrors
   HRC = CATAdpOpenSaveServices::Save(NULL, piErrorReviewer);
 </pre> 
 <br>// Analyse eventual errors raised using 
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMErrorIterator','','CATIAdpPLMErrorIterator') </script> and 
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMError','','CATIAdpPLMError') </script> <pre> 
   if (FAILED(HR))
   {
 	  CATIAdpPLMErrorIterator* piErrorIterator = NULL
 	  piErrorReviewer->GetPLMErrorIterator(piErrorIterator);
 	  ...
   }
   // delete the PLM Error Reviewer after use
   piErrorReviewer->Release();
   piErrorReviewer = NULL;
 }
 
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATAdpPLMErrorReviewerFactory','','CATAdpPLMErrorReviewerFactory') </script>, <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMErrorIterator','','CATIAdpPLMErrorIterator') </script>, <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMError','','CATIAdpPLMError') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetPLMErrorIterator(CATIAdpPLMErrorIterator*&amp;)"><b>GetPLMErrorIterator</b></a>(CATIAdpPLMErrorIterator*&amp;)
<dd>  Gets an Iterator on the set of PLM Errors stored by this ErrorReviewer.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetPLMErrorIterator"></a><a name="GetPLMErrorIterator(CATIAdpPLMErrorIterator*&amp;)"></a> <dt> o <b>GetPLMErrorIterator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPLMErrorIterator</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMErrorIterator','CATIAdpPLMErrorIterator*&amp;')</script> <td><tt>opErrorIterator</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets an Iterator on the set of PLM Errors stored by this ErrorReviewer.
 <br><b>Role:</b> This method gets an Iterator to scan the list of PLM Errors stored by this ErrorReviewer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opErrorIterator</tt>
   <dd>    An iterator on the set of PLM Errors <b>currently</b> stored by this PLMError Reviewer.
    When the same PLMError Reviewer is used later in another service raising errors,
    get another iterator to scan the updated set of errors.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 		 S_OK  : An error Iterator has been created from this ErrorReviewer.
 <br> E_FAIL  : Error Iterator creation failed. an unexpected NULL output pointer is given.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIAdpPLMErrorReviewer.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationAccess</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

