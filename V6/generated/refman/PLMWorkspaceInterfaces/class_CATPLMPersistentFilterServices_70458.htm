<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMWorkspaceInterfaces Class CATPLMPersistentFilterServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMWorkspaceInterfaces.htm" href="../PLMWorkspaceInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMWorkspaceInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATPLMPersistentFilterServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMWorkspaceInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATPLMPersistentFilterServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPLMPersistentFilterServices_70458','CATPLMPersistentFilterServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPLMPersistentFilterServices</b>
</p>
<p>
<b><i> Class to manage services on persistent PLM filters components.</i></b><br>

 PLM Filters are persistent PLM components representing a filtered view of a PLM structure.</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreatePersistentFilter(CATUnicodeString&amp;,CATAdpPLMExpandSpecification*,CATIAdpPLMIdentificator*&amp;)"><b>CreatePersistentFilter</b></a>(CATUnicodeString&amp;,CATAdpPLMExpandSpecification*,CATIAdpPLMIdentificator*&amp;)
<dd>  Create and save a PLM filer from a CATAdpPLMExpandSpecification component.
 <dt> o 
    <a href="#GetPersistentFilterDefinition(CATIAdpPLMIdentificator*,CATAdpPLMExpandSpecification*&amp;)"><b>GetPersistentFilterDefinition</b></a>(CATIAdpPLMIdentificator*,CATAdpPLMExpandSpecification*&amp;)
<dd>  Get the CATAdpPLMExpandSpecification component of a PLM filter.
 <dt> o 
    <a href="#ModifyPersistentFilter(CATIAdpPLMIdentificator*,CATAdpPLMExpandSpecification*)"><b>ModifyPersistentFilter</b></a>(CATIAdpPLMIdentificator*,CATAdpPLMExpandSpecification*)
<dd>  Modify and save a PLM filer from a CATIAdpPLMExpandSpecification component.
 <dt> o 
    <a href="#RetrievePersistentFilterFromStructure(CATIAdpPLMIdentificator*,CATListPtrCATIAdpPLMIdentificator&amp;)"><b>RetrievePersistentFilterFromStructure</b></a>(CATIAdpPLMIdentificator*,CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Retrive all the PLM filter components filtering a PLM Structure.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreatePersistentFilter"></a><a name="CreatePersistentFilter(CATUnicodeString&amp;,CATAdpPLMExpandSpecification*,CATIAdpPLMIdentificator*&amp;)"></a> <dt> o <b>CreatePersistentFilter</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreatePersistentFilter</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iUstrFilterName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMExpandSpecification','CATAdpPLMExpandSpecification*')</script> <td><tt>ipIAdpPLMExpandSpecification</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*&amp;')</script> <td><tt>opIFilterAdpId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Create and save a PLM filer from a CATAdpPLMExpandSpecification component. 

 <br><b>Role</b>: This method creates a persistent PLM filter capturing the filter definition
 describd by the provided CATAdpPLMExpandSpecification component,
 saves it into the database and returns its identifiers.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUstrFilterName</tt>
   <dd> [in]   The filter name to give to the persistent PLM filter object to be created.
  </dd>
    <dt><tt> ipIAdpPLMExpandSpecification</tt>
   <dd> [in]   The Expand Specification component representing the definition of the filtered expand to save in the PLM filter.
  </dd>
    <dt><tt> opIFilterAdpId</tt>
   <dd> [out, CATIAdpPLMIdentificator#Release]   The identifier of the PLM filter created from te provided Expand Specification component.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   The returned values can be:
     <ul>
     <li><b>S_OK</b> The function has being executed successfully.</li>
     <li><b>E_FAIL</b>  An error occurred during the execution of the function.</li>
     <li><b>E_INVALIDARG</b> The provided <tt>iAdpExpandSpecification </tt> is invalid.</li>
     </ul>

</dl>
</dl>
<a name="GetPersistentFilterDefinition"></a><a name="GetPersistentFilterDefinition(CATIAdpPLMIdentificator*,CATAdpPLMExpandSpecification*&amp;)"></a> <dt> o <b>GetPersistentFilterDefinition</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPersistentFilterDefinition</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>ipIFilterAdpId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMExpandSpecification','CATAdpPLMExpandSpecification*&amp;')</script> <td><tt>opIAdpPLMExpandSpecification</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the CATAdpPLMExpandSpecification component of a PLM filter.

 <br><b>Role</b>: This method returns the CATAdpPLMExpandSpecification component contained by the provided PLM filter.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipIFilerAdpId</tt>
   <dd> [in]  The identifier of the PLM filter from which the Expand Spcification component must be returned.
 </dd>
    <dt><tt> opIAdpPLMExpandSpecification</tt>
   <dd> [out, CATAdpPLMExpandSpecification#Release]  The Expand Spcification component representing the defintion of the filtered expand contained into the provided PLM filter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   The returned values can be:
     <ul>
     <li><b>S_OK</b> The function has being executed successfully.</li>
     <li><b>E_FAIL</b>  An error occurred during the execution of the function.</li>
     <li><b>E_INVALIDARG</b> The provided <tt>ipIFilterAdpId</tt> is invalid.</li>
     </ul>

</dl>
</dl>
<a name="ModifyPersistentFilter"></a><a name="ModifyPersistentFilter(CATIAdpPLMIdentificator*,CATAdpPLMExpandSpecification*)"></a> <dt> o <b>ModifyPersistentFilter</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ModifyPersistentFilter</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>ipIFilterAdpId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMExpandSpecification','CATAdpPLMExpandSpecification*')</script> <td><tt>ipIAdpPLMExpandSpecification</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modify and save a PLM filer from a CATIAdpPLMExpandSpecification component.
 
 <br><b>Role</b>: This method modifies the provided persistent PLM filter from the provided 
 CATAdpPLMExpandSpecification component and saves it into database.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipIFilterAdpId</tt>
   <dd> [in]  The identifier of the PLM filter to modify.
 </dd>
    <dt><tt> ipIAdpPLMExpandSpecification</tt>
   <dd> [in]  The Expand Specification component representing the definition of the filtered expand to add to 
  the provided PLM filter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   The returned values can be:
     <ul>
     <li><b>S_OK</b> The function has being executed successfully.</li>
     <li><b>E_FAIL</b>  An error occurred during the execution of the function.</li>
     <li><b>E_INVALIDARG</b> The provided <tt>ipIFilterAdpId</tt> or 
     <tt>iAdpExpandSpecification</tt> is invalid.</li>
     </ul>

</dl>
</dl>
<a name="RetrievePersistentFilterFromStructure"></a><a name="RetrievePersistentFilterFromStructure(CATIAdpPLMIdentificator*,CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>RetrievePersistentFilterFromStructure</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RetrievePersistentFilterFromStructure</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>ipIStructureRootAdpId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>oIFilersAdpIdsList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrive all the PLM filter components filtering a PLM Structure.

 <br><b>Role</b>: This method returns the indentifers of all the PLM filters filtering the root 
  of the structure corresponding to the provided identifer.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipIStructureRootAdpId</tt>
   <dd> [in]  The identifer of the root of the structure from which the PLM filter must be retrieved.
 </dd>
    <dt><tt> opIFiltersAdpIdsList</tt>
   <dd> [out]  The list of identifiers of PLM filters filtering the provided PLM Root.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   The returned values can be:
     <ul>
     <li><b>S_OK</b> The function has being executed successfully.</li>
     <li><b>E_FAIL</b>  An error occurred during the execution of the function.</li>
     <li><b>E_INVALIDARG</b> The provided <tt>ipIStructureRootAdpId</tt> is invalid.</li>
     </ul>

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPLMPersistentFilterServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CAAWSPInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

