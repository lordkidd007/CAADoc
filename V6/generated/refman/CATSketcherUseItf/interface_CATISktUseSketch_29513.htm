<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSketcherUseItf Interface CATISktUseSketch</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSketcherUseItf.htm" href="../CATSketcherUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSketcherUseItf";	}
		function getCurrentObjectName() { 
 	return "CATISktUseSketch"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATSketcherUseItf Interface CATISktUseSketch</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISktUseSketch_29513','CATISktUseSketch','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISktUseSketch</b>
</p>
<p>
<b><i> The methods of this interface provide the client with the functionality
 for handling a sketch.</i></b><br>

 <b>Role</b>:</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AttachToPlane(CATBaseUnknown_var&amp;,int,int)"><b>AttachToPlane</b></a>(CATBaseUnknown_var&amp;,int,int)
<dd>  Defines the planar support of the sketch (the sketch becomes Sliding).
 <dt> o 
    <a href="#GetAbsolute2DAxis(CATISktUse2DAxis_var&amp;)"><b>GetAbsolute2DAxis</b></a>(CATISktUse2DAxis_var&amp;)
<dd>  Returns the absolute axis of the sketch.
 <dt> o 
    <a href="#GetAxisData(double*,double*,double*)"><b>GetAxisData</b></a>(double*,double*,double*)
<dd>  Returns the position of the sketch in space.
 <dt> o 
    <a href="#GetComponents(CATIdent,CATLISTV(CATISktUse2DWFGeometry_var)&amp;)"><b>GetComponents</b></a>(CATIdent,CATLISTV(CATISktUse2DWFGeometry_var)&amp;)
<dd>  Retrieves all geometries.
 <dt> o 
    <a href="#GetCurrentCenterLine()"><b>GetCurrentCenterLine</b></a>()
<dd>  Returns the (unique) center line of the sketch.
 <dt> o 
    <a href="#GetPlanarSupport(CATIMmiMechanicalFeature_var&amp;)"><b>GetPlanarSupport</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Returns the planar support of the sketch.
 <dt> o 
    <a href="#GetProfile(CATLISTV(CATISktUse2DWFGeometry_var)&amp;,int&amp;,CATListOfInt*,int*)"><b>GetProfile</b></a>(CATLISTV(CATISktUse2DWFGeometry_var)&amp;,int&amp;,CATListOfInt*,int*)
<dd>  Returns the first profile found in the sketch.
 <dt> o 
    <a href="#GetSolvingStatus(int&amp;)"><b>GetSolvingStatus</b></a>(int&amp;)
<dd>  Returns the solving diagnostic of the sketch.
 <dt> o 
    <a href="#GetSupport()"><b>GetSupport</b></a>()
<dd>  Returns a handler on the absolute axis of the sketch.
 <dt> o 
    <a href="#IsEmpty()"><b>IsEmpty</b></a>()
<dd>  Tells if the sketch is empty.
 <dt> o 
    <a href="#Isolate()"><b>Isolate</b></a>()
<dd>  Isolates the projected and intersected Geometries.
 <dt> o 
    <a href="#ResetOrientation()"><b>ResetOrientation</b></a>()
<dd>  Unsets absolute axis orientation management for the next update.
 <dt> o 
    <a href="#SetAxisData(double*,double*,double*)"><b>SetAxisData</b></a>(double*,double*,double*)
<dd>  Defines the position of the sketch in space.
 <dt> o 
    <a href="#SetCurrentCenterLine(CATISktUse2DLine_var&amp;)"><b>SetCurrentCenterLine</b></a>(CATISktUse2DLine_var&amp;)
<dd>  Defines the (unique) center line of the sketch.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AttachToPlane"></a><a name="AttachToPlane(CATBaseUnknown_var&amp;,int,int)"></a> <dt> o <b>AttachToPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AttachToPlane</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iPlane</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKeepRelativOrientation</tt><td><tt>=0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSlidingMode</tt><td><tt>=-1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the planar support of the sketch (the sketch becomes Sliding).
</dl>
<a name="GetAbsolute2DAxis"></a><a name="GetAbsolute2DAxis(CATISktUse2DAxis_var&amp;)"></a> <dt> o <b>GetAbsolute2DAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAbsolute2DAxis</b>(<td><script type="text/javascript"> activateLink('CATISktUse2DAxis_var','CATISktUse2DAxis_var&amp;')</script> <td><tt>oAxis</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the absolute axis of the sketch.
</dl>
<a name="GetAxisData"></a><a name="GetAxisData(double*,double*,double*)"></a> <dt> o <b>GetAxisData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisData</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oRootPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oHAxis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oVAxis</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the position of the sketch in space.
</dl>
<a name="GetComponents"></a><a name="GetComponents(CATIdent,CATLISTV(CATISktUse2DWFGeometry_var)&amp;)"></a> <dt> o <b>GetComponents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetComponents</b>(<td> const <script type="text/javascript"> activateLink('CATIdent','CATIdent')</script> <td><tt>iIntfName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATISktUse2DWFGeometry_var)','CATLISTV(CATISktUse2DWFGeometry_var)&amp;')</script> <td><tt>ioGeomLst</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves all geometries.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>const</tt>
   <dd> CATIdent iIntfName</tt> [in] To get only geometries answering to iIntfName interface.
 </dd>
    <dt><tt> <tt>CATLISTV</tt>
   <dd> (CATISktUse2DWFGeometry_var)& ioGeomLst</tt> [inout] The list of geometries.</dd>
</dl>
</dl>
</dl>
<a name="GetCurrentCenterLine"></a><a name="GetCurrentCenterLine()"></a> <dt> o <b>GetCurrentCenterLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script>  <b>GetCurrentCenterLine</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the (unique) center line of the sketch.
</dl>
<a name="GetPlanarSupport"></a><a name="GetPlanarSupport(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetPlanarSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPlanarSupport</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oPlane_output</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the planar support of the sketch.
</dl>
<a name="GetProfile"></a><a name="GetProfile(CATLISTV(CATISktUse2DWFGeometry_var)&amp;,int&amp;,CATListOfInt*,int*)"></a> <dt> o <b>GetProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProfile</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISktUse2DWFGeometry_var)','CATLISTV(CATISktUse2DWFGeometry_var)&amp;')</script> <td><tt>oGeomList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>IsClosed</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt*')</script> <td><tt>oSenseList</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oDiagnostic</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first profile found in the sketch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>oGeomList</tt></tt>
   <dd> [out] Curves of the profile.
 </dd>
    <dt><tt> <tt>IsClosed</tt></tt>
   <dd> [out] > 0 in case of a closed profile.
 </dd>
    <dt><tt> <tt>oSenseList</tt></tt>
   <dd> [out] Gives the sense of each curves in the profile.
 </dd>
    <dt><tt> <tt>oDiagnostic</tt></tt>
   <dd> [out] Unused.</dd>
</dl>
</dl>
</dl>
<a name="GetSolvingStatus"></a><a name="GetSolvingStatus(int&amp;)"></a> <dt> o <b>GetSolvingStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSolvingStatus</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>ioStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the solving diagnostic of the sketch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>ioStatus</tt></tt>
   <dd> [in] Possible status is : 1 = OverDefined, 2 = Inconsistent, 3 = UnderDefined, 4 = WellDefined.</dd>
</dl>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport()"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script>  <b>GetSupport</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a handler on the absolute axis of the sketch.
 Note: Please use GetAbsolute2DAxis() method instead of this one.
</dl>
<a name="IsEmpty"></a><a name="IsEmpty()"></a> <dt> o <b>IsEmpty</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsEmpty</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Tells if the sketch is empty.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>int</tt> <dl>
 <dt> <tt>1</tt>  <dd> The shetch is empty.
 <dt> <tt>0</tt>  <dd> The sketch is not empty.
 </dl>
</dl>
</dl>
<a name="Isolate"></a><a name="Isolate()"></a> <dt> o <b>Isolate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Isolate</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Isolates the projected and intersected Geometries.
</dl>
<a name="ResetOrientation"></a><a name="ResetOrientation()"></a> <dt> o <b>ResetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ResetOrientation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Unsets absolute axis orientation management for the next update.
</dl>
<a name="SetAxisData"></a><a name="SetAxisData(double*,double*,double*)"></a> <dt> o <b>SetAxisData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisData</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iRootPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iHAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iVAxis</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the position of the sketch in space.
</dl>
<a name="SetCurrentCenterLine"></a><a name="SetCurrentCenterLine(CATISktUse2DLine_var&amp;)"></a> <dt> o <b>SetCurrentCenterLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCurrentCenterLine</b>(<td> const <script type="text/javascript"> activateLink('CATISktUse2DLine_var','CATISktUse2DLine_var&amp;')</script> <td><tt>iLine</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the (unique) center line of the sketch.
</dl>
<hr>
 This object is included in the file: <b>CATISktUseSketch.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSketcherUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

