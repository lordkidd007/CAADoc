<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSketcherUseItf Interface CATISktUse2DConstraintAnalysis</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSketcherUseItf.htm" href="../CATSketcherUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSketcherUseItf";	}
		function getCurrentObjectName() { 
 	return "CATISktUse2DConstraintAnalysis"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATSketcherUseItf Interface CATISktUse2DConstraintAnalysis</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISktUse2DConstraintAnalysis_62285','CATISktUse2DConstraintAnalysis','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISktUse2DConstraintAnalysis</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Analyse(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATRawCollint&amp;)"><b>Analyse</b></a>(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATRawCollint&amp;)
<dd>  Analyse given geometric elements (1, 2 or 3) and returns a list of POSSIBLE
 constraint types on these elements.
 <dt> o 
    <a href="#CheckDefinition(CATBaseUnknown*,CATBaseUnknown*,CATBaseUnknown*,CAT2DCstType,int*,CATISktUse2DConstraint**)"><b>CheckDefinition</b></a>(CATBaseUnknown*,CATBaseUnknown*,CATBaseUnknown*,CAT2DCstType,int*,CATISktUse2DConstraint**)
<dd>  Verify if a constraint creation is compatible with elements types.
 <dt> o 
    <a href="#CheckImport(CATBaseUnknown*,int*,int*,CAT2DImportMode*,CATLISTV(CATBaseUnknown_var)*,CATBody**,CATBaseUnknown*,double*)"><b>CheckImport</b></a>(CATBaseUnknown*,int*,int*,CAT2DImportMode*,CATLISTV(CATBaseUnknown_var)*,CATBody**,CATBaseUnknown*,double*)
<dd>  Verify if a geometry can be imported.
 <dt> o 
    <a href="#Find(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATRawCollint&amp;)"><b>Find</b></a>(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATRawCollint&amp;)
<dd>  Analyse given geometric elements (1, 2 or 3) and returns a list of EXISTING
 constraint types on these elements.
 <dt> o 
    <a href="#Find(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATLISTV(CATIMmiMechanicalFeature_var)&amp;)"><b>Find</b></a>(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATLISTV(CATIMmiMechanicalFeature_var)&amp;)
<dd>  Analyse given geometric elements (1, 2 or 3) and returns a list of EXISTING
 constraint on these elements.
 <dt> o 
    <a href="#Find(CATLISTV(CATISktUse2DWFGeometry_var)&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;)"><b>Find</b></a>(CATLISTV(CATISktUse2DWFGeometry_var)&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;)
<dd>  Analyse given geometric elements and returns
 the list of EXISTING constraints on these elements only
 and the list of EXISTING constraints pointing on one of these elements.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Analyse"></a><a name="Analyse(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATRawCollint&amp;)"></a> <dt> o <b>Analyse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Analyse</b>(<td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom3</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRawCollint','CATRawCollint&amp;')</script> <td><tt>oCstTypes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Analyse given geometric elements (1, 2 or 3) and returns a list of POSSIBLE
 constraint types on these elements.
 The returned types are defined into CAT2DCstType.h.

 Input:
  iGeom1      : Geometric Element
  iGeom2      : Geometric Element (or NULL)
  iGeom3      : Geometric Element (or NULL if iGeom2 is NULL)

 Output:
  oCstTypes   : List of possible 2D constraint types on (iGeom1,iGeom2,iGeom3)

</dl>
<a name="CheckDefinition"></a><a name="CheckDefinition(CATBaseUnknown*,CATBaseUnknown*,CATBaseUnknown*,CAT2DCstType,int*,CATISktUse2DConstraint**)"></a> <dt> o <b>CheckDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CheckDefinition</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iGeom1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iGeom2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iGeom3</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CAT2DCstType','CAT2DCstType')</script> <td><tt>iCstType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oCanBeCreated</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISktUse2DConstraint','CATISktUse2DConstraint**')</script> <td><tt>oExistingCst</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Verify if a constraint creation is compatible with elements types.

 Input:
  iGeom1        : Geometric Element
  iGeom2        : Geometric Element (or NULL)
  iGeom3        : Geometric Element (or NULL if iGeom2 is NULL)
  iCstType      : 2D constraint type

 Output:
  oCanBeCreated : Returns != 0 if the constraint can be created, 0 otherwise
  oExistingCst  : Returns the existing constraint when oCanBeCreated == 0 

</dl>
<a name="CheckImport"></a><a name="CheckImport(CATBaseUnknown*,int*,int*,CAT2DImportMode*,CATLISTV(CATBaseUnknown_var)*,CATBody**,CATBaseUnknown*,double*)"></a> <dt> o <b>CheckImport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CheckImport</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iExternalGeom</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oNbSolutions</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>iForConstraint</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CAT2DImportMode','CAT2DImportMode*')</script> <td><tt>iImportMode</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)*')</script> <td><tt>oResult</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody**')</script> <td><tt>oBody</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iNearGeom</tt><td><tt>=NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iSel2DPt</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Verify if a geometry can be imported.

 Input:
  iExternalGeom     : Geometric element to import
  iForConstraint    : address pointing a value <> 0 only to be constrained
  iImportMode       : mode of import see CAT2Dimport
  iNearExternalGeom : An optional external geometric element to keep the nearest solution
  iSel2DPt          : The optional 2D point coordinates to keep only the nearest solution of a canonical surface import.
 Output:
  oNbSolutions   : Number of solutions 
  oResult : List Of Geometrical result
  oBody   : Body of result
 Returns S_OK if the solution is associative, S_FALSE if not
</dl>
<a name="Find"></a><a name="Find(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATRawCollint&amp;)"></a> <dt> o <b>Find</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Find</b>(<td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom3</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRawCollint','CATRawCollint&amp;')</script> <td><tt>oCstTypes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Analyse given geometric elements (1, 2 or 3) and returns a list of EXISTING
 constraint types on these elements.
 The returned types are defined into CAT2DCstType.h.

 Input:
  iGeom1      : Geometric Element
  iGeom2      : Geometric Element (or NULL)
  iGeom3      : Geometric Element (or NULL if iGeom2 is NULL)

 Output:
  oCstTypes   : List of 2D constraint types of existing constraints on (iGeom1,iGeom2,iGeom3)

</dl>
<a name="Find"></a><a name="Find(CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATISktUse2DWFGeometry*,CATLISTV(CATIMmiMechanicalFeature_var)&amp;)"></a> <dt> o <b>Find</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Find</b>(<td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISktUse2DWFGeometry','CATISktUse2DWFGeometry*')</script> <td><tt>iGeom3</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATIMmiMechanicalFeature_var)','CATLISTV(CATIMmiMechanicalFeature_var)&amp;')</script> <td><tt>oCsts_output</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Analyse given geometric elements (1, 2 or 3) and returns a list of EXISTING
 constraint on these elements.

 Input:
  iGeom1      : Geometric Element
  iGeom2      : Geometric Element (or NULL)
  iGeom3      : Geometric Element (or NULL if iGeom2 is NULL)

 Output:
  oCsts       : List of existing constraints on (iGeom1,iGeom2,iGeom3)

</dl>
<a name="Find"></a><a name="Find(CATLISTV(CATISktUse2DWFGeometry_var)&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;)"></a> <dt> o <b>Find</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Find</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISktUse2DWFGeometry_var)','CATLISTV(CATISktUse2DWFGeometry_var)&amp;')</script> <td><tt>iGeoms</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATIMmiMechanicalFeature_var)','CATLISTV(CATIMmiMechanicalFeature_var)&amp;')</script> <td><tt>oInternalCsts_output</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATIMmiMechanicalFeature_var)','CATLISTV(CATIMmiMechanicalFeature_var)&amp;')</script> <td><tt>oExternalCsts_output</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Analyse given geometric elements and returns
 the list of EXISTING constraints on these elements only
 and the list of EXISTING constraints pointing on one of these elements.

 Input:
  iGeoms        : List of Geometric Elements.

 Output:
  oInternalCsts : List of existing constraints on these elements only.
  oExternalCsts : List of existing constraints pointing on one of these elements.

</dl>
<hr>
 This object is included in the file: <b>CATISktUse2DConstraintAnalysis.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSketcherUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

