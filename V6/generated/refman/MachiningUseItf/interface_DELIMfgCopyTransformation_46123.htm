<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningUseItf Interface DELIMfgCopyTransformation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningUseItf.htm" href="../MachiningUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningUseItf";	}
		function getCurrentObjectName() { 
 	return "DELIMfgCopyTransformation"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MachiningUseItf Interface DELIMfgCopyTransformation</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIMfgCopyTransformation_46123','DELIMfgCopyTransformation','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIMfgCopyTransformation</b>
</p>
<p>
<b><i>    Interface dedicated to manufacturing Copy Transformation data acces.</i></b><br>

 <b>Role</b>: This interface offers services mainly to read stored data in the Copy Transformation Manufacturing Activity <br></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ExtractTLPChain(CATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var*,CATListValCATBaseUnknown_var*)"><b>ExtractTLPChain</b></a>(CATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var*,CATListValCATBaseUnknown_var*)
<dd>  Extract Sub Tool Pathes and give a related MOs to find relative data for each.
 <dt> o 
    <a href="#GetCopyInfo(int&amp;,int&amp;)"><b>GetCopyInfo</b></a>(int&amp;,int&amp;)
<dd>  Read number of copies and strategy of copy
 
 <dt> o 
    <a href="#GetCopyTransformation(CATBoolean&amp;)"><b>GetCopyTransformation</b></a>(CATBoolean&amp;)
<dd>  Return the transformation matrix of the CopyTransformation.
 <dt> o 
    <a href="#GetListOfRefMOs()"><b>GetListOfRefMOs</b></a>()
<dd>  Return the list of reference MO pointed by the Copy Transformation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ExtractTLPChain"></a><a name="ExtractTLPChain(CATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var*,CATListValCATBaseUnknown_var*)"></a> <dt> o <b>ExtractTLPChain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ExtractTLPChain</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ihBU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*')</script> <td><tt>oBUListTLP</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*')</script> <td><tt>oBUListMO</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Extract Sub Tool Pathes and give a related MOs to find relative data for each.
 The two list must have the same size to be correctly managed.
 List are allocated/Deallocated by caller. List initial content is preserved.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihBU</tt>
   <dd>   the entry point
   <br><b>Legal values</b>:
   <ul>
   <li>NULL_var : Current Copy Transformation used</li>
   <li>Other : Element used as starting point to porceed </li>
   </ul>
 </dd>
    <dt><tt> oBUListTLP</tt>
   <dd>   the ordered list of sub tool path
 </dd>
    <dt><tt> oBUListMO</tt>
   <dd>   the ordered list of corresponding Machining Operations</dd>
</dl>
</dl>
</dl>
<a name="GetCopyInfo"></a><a name="GetCopyInfo(int&amp;,int&amp;)"></a> <dt> o <b>GetCopyInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCopyInfo</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbCopy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oPriority</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Read number of copies and strategy of copy
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbCopy</tt>
   <dd>   the number of copies
 </dd>
    <dt><tt> oPriority</tt>
   <dd>   the copy strategy
   <br><b>Legal values</b>:
   <ul>
   <li>0 : loop on MO List then on transformation occurence</li>
   <li>1 : loop on transformation occurence then on MO List</li>
   </ul></dd>
</dl>
</dl>
</dl>
<a name="GetCopyTransformation"></a><a name="GetCopyTransformation(CATBoolean&amp;)"></a> <dt> o <b>GetCopyTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation *')</script>  <b>GetCopyTransformation</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oToolAxisTransformationMode</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Return the transformation matrix of the CopyTransformation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oToolAxisTransformationMode</tt>
   <dd>   Tool axis transformation needed
   <br><b>Legal values</b>:
   <ul>
   <li>TRUE : The Tool Axis needs to be transformed</li>
   <li>FALSE : The Tool Axis does not need to be transformed</li>
   </ul></dd>
</dl>
</dl>
</dl>
<a name="GetListOfRefMOs"></a><a name="GetListOfRefMOs()"></a> <dt> o <b>GetListOfRefMOs</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATListValCATBaseUnknown','CATListValCATBaseUnknown_var *')</script>  <b>GetListOfRefMOs</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Return the list of reference MO pointed by the Copy Transformation.
 The returned list could be empty, if 
    reference have been destroyed
    or reference is a tool path.
 The retruned list have to be deleted by caller.
</dl>
<hr>
 This object is included in the file: <b>DELIMfgCopyTransformation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MachiningUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

