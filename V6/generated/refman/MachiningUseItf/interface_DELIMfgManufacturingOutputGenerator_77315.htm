<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningUseItf Interface DELIMfgManufacturingOutputGenerator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningUseItf.htm" href="../MachiningUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningUseItf";	}
		function getCurrentObjectName() { 
 	return "DELIMfgManufacturingOutputGenerator"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MachiningUseItf Interface DELIMfgManufacturingOutputGenerator</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIMfgManufacturingOutputGenerator_77315','DELIMfgManufacturingOutputGenerator','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIMfgManufacturingOutputGenerator</b>
</p>
<p>
<b><i>    Object that represents the output machining code.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddMeToBuffer(CATLONG&amp;)"><b>AddMeToBuffer</b></a>(CATLONG&amp;)
<dd>  Management of specific buffer for aligned points elimination.
 <dt> o 
    <a href="#GenerateOutputCode(DELIMfgManufacturingGeneratorData*)"><b>GenerateOutputCode</b></a>(DELIMfgManufacturingGeneratorData*)
<dd>  Return the Output Code for an object in the right CNC Machine.
 <dt> o 
    <a href="#GetAPTCode(DELIMfgManufacturingGeneratorData*,CATUnicodeString&amp;)"><b>GetAPTCode</b></a>(DELIMfgManufacturingGeneratorData*,CATUnicodeString&amp;)
<dd>  Retrieve generated APT code.
 <dt> o 
    <a href="#GetCurrentObject(CATLONG&amp;)"><b>GetCurrentObject</b></a>(CATLONG&amp;)
<dd>  Get current object from buffer.
 <dt> o 
    <a href="#HasToResetModalValues(CATLONG&amp;)"><b>HasToResetModalValues</b></a>(CATLONG&amp;)
<dd>  Return the characteristic of an object : 
 Reset or not Modal Values.
 <dt> o 
    <a href="#InitFileGenerator(CATUnicodeString&amp;,CATUnicodeString&amp;,DELIMfgManufacturingGeneratorData*&amp;)"><b>InitFileGenerator</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,DELIMfgManufacturingGeneratorData*&amp;)
<dd>  Init the Output Generator on the current Object and initialise all datas.
 <dt> o 
    <a href="#IsModal(CATLONG&amp;)"><b>IsModal</b></a>(CATLONG&amp;)
<dd>  Return the characteristic of an object : Modal or Not Modal.
 <dt> o 
    <a href="#IsSimilarTo(DELIMfgManufacturingOutputGenerator*,CATLONG&amp;)"><b>IsSimilarTo</b></a>(DELIMfgManufacturingOutputGenerator*,CATLONG&amp;)
<dd>  Implement a method to specify if two objects are same (when Modal Mode).
 <dt> o 
    <a href="#RunFileGenerator(DELIMfgManufacturingGeneratorData*)"><b>RunFileGenerator</b></a>(DELIMfgManufacturingGeneratorData*)
<dd>  Runs the Output Generator on the datas used for generation.
 <dt> o 
    <a href="#SetCurrentObject(CATLONG)"><b>SetCurrentObject</b></a>(CATLONG)
<dd>  Set current object to buffer.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddMeToBuffer"></a><a name="AddMeToBuffer(CATLONG&amp;)"></a> <dt> o <b>AddMeToBuffer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddMeToBuffer</b>(<td><script type="text/javascript"> activateLink('CATLONG','CATLONG&amp;')</script> <td><tt>oAddMe</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Management of specific buffer for aligned points elimination.

</dl>
<a name="GenerateOutputCode"></a><a name="GenerateOutputCode(DELIMfgManufacturingGeneratorData*)"></a> <dt> o <b>GenerateOutputCode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GenerateOutputCode</b>(<td><script type="text/javascript"> activateLink('DELIMfgManufacturingGeneratorData','DELIMfgManufacturingGeneratorData*')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Return the Output Code for an object in the right CNC Machine.
</dl>
<a name="GetAPTCode"></a><a name="GetAPTCode(DELIMfgManufacturingGeneratorData*,CATUnicodeString&amp;)"></a> <dt> o <b>GetAPTCode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAPTCode</b>(<td><script type="text/javascript"> activateLink('DELIMfgManufacturingGeneratorData','DELIMfgManufacturingGeneratorData*')</script> <td><tt>iData</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oCode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieve generated APT code.

</dl>
<a name="GetCurrentObject"></a><a name="GetCurrentObject(CATLONG&amp;)"></a> <dt> o <b>GetCurrentObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCurrentObject</b>(<td><script type="text/javascript"> activateLink('CATLONG','CATLONG&amp;')</script> <td><tt>oCurrentObject</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get current object from buffer.

</dl>
<a name="HasToResetModalValues"></a><a name="HasToResetModalValues(CATLONG&amp;)"></a> <dt> o <b>HasToResetModalValues</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>HasToResetModalValues</b>(<td><script type="text/javascript"> activateLink('CATLONG','CATLONG&amp;')</script> <td><tt>oIsModal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Return the characteristic of an object : 
 Reset or not Modal Values.
</dl>
<a name="InitFileGenerator"></a><a name="InitFileGenerator(CATUnicodeString&amp;,CATUnicodeString&amp;,DELIMfgManufacturingGeneratorData*&amp;)"></a> <dt> o <b>InitFileGenerator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InitFileGenerator</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFormat</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFileName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELIMfgManufacturingGeneratorData','DELIMfgManufacturingGeneratorData*&amp;')</script> <td><tt>oData</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Init the Output Generator on the current Object and initialise all datas.
 Generation of NC code can start from the Process, Setup, Program or an Activity. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFormat</tt>
   <dd>   Format of the output file : "APT", ...
 </dd>
    <dt><tt> iFileName</tt>
   <dd>   Output file name
 </dd>
    <dt><tt> oData</tt>
   <dd>   iData contains all the information about the generated NC code</dd>
</dl>
</dl>
</dl>
<a name="IsModal"></a><a name="IsModal(CATLONG&amp;)"></a> <dt> o <b>IsModal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsModal</b>(<td><script type="text/javascript"> activateLink('CATLONG','CATLONG&amp;')</script> <td><tt>oIsModal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Return the characteristic of an object : Modal or Not Modal.
</dl>
<a name="IsSimilarTo"></a><a name="IsSimilarTo(DELIMfgManufacturingOutputGenerator*,CATLONG&amp;)"></a> <dt> o <b>IsSimilarTo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsSimilarTo</b>(<td><script type="text/javascript"> activateLink('DELIMfgManufacturingOutputGenerator','DELIMfgManufacturingOutputGenerator*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG','CATLONG&amp;')</script> <td><tt>oIsSimilar</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Implement a method to specify if two objects are same (when Modal Mode).
 The result depends on the tolerance on the values (to points)
</dl>
<a name="RunFileGenerator"></a><a name="RunFileGenerator(DELIMfgManufacturingGeneratorData*)"></a> <dt> o <b>RunFileGenerator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RunFileGenerator</b>(<td><script type="text/javascript"> activateLink('DELIMfgManufacturingGeneratorData','DELIMfgManufacturingGeneratorData*')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Runs the Output Generator on the datas used for generation.
 Generation of NC code can start from the Process, Setup, Program or an Activity. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iData</tt>
   <dd>   iData contains all the information about the generated NC code</dd>
</dl>
</dl>
</dl>
<a name="SetCurrentObject"></a><a name="SetCurrentObject(CATLONG)"></a> <dt> o <b>SetCurrentObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCurrentObject</b>(<td><script type="text/javascript"> activateLink('CATLONG','CATLONG')</script> <td><tt>iCurrentObject</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set current object to buffer.

</dl>
<hr>
 This object is included in the file: <b>DELIMfgManufacturingOutputGenerator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MachiningUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

