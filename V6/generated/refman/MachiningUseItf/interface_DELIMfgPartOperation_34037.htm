<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningUseItf Interface DELIMfgPartOperation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningUseItf.htm" href="../MachiningUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningUseItf";	}
		function getCurrentObjectName() { 
 	return "DELIMfgPartOperation"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MachiningUseItf Interface DELIMfgPartOperation</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIMfgPartOperation_34037','DELIMfgPartOperation','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIMfgPartOperation</b>
</p>
<p>
<b><i> Interface to manage Part Operation (Setup).</i></b><br>

 <b>Role</b>: Manage the information related to the Part Operation object like associated
 resource, product and machining axis system.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetActualStockMode(int&amp;)"><b>GetActualStockMode</b></a>(int&amp;)
<dd>  Gets the actual stock computation mode.
 <dt> o 
    <a href="#GetContext(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"><b>GetContext</b></a>(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)
<dd>  Computes the mathematical transformations to switch from the machining axis system
 to the absolute axis sytem and vice versa.
 <dt> o 
    <a href="#GetHomePoint(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)"><b>GetHomePoint</b></a>(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)
<dd>  Gets the setup parameters defining the home point.
 <dt> o 
    <a href="#GetMachine(CATBaseUnknown_var&amp;)"><b>GetMachine</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the machine.
 <dt> o 
    <a href="#GetMachineLocalParameters(CATBaseUnknown_var&amp;)"><b>GetMachineLocalParameters</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the local parameters of machine.
 <dt> o 
    <a href="#GetMachiningAxis(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"><b>GetMachiningAxis</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Retrieves the Machining Axis System feature associated to the Part Operation.
 <dt> o 
    <a href="#GetMachiningAxisDefinition(CATMathAxis&amp;,CATBaseUnknown_var&amp;)"><b>GetMachiningAxisDefinition</b></a>(CATMathAxis&amp;,CATBaseUnknown_var&amp;)
<dd>  Retrieves the mathematical axis system associated to the Part Operation.
 <dt> o 
    <a href="#GetMachiningContext(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"><b>GetMachiningContext</b></a>(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)
<dd>  Computes the mathematical transformations to switch from the machining axis system
 to the absolute axis sytem and vice versa.
 <dt> o 
    <a href="#GetPrograms(CATListValCATBaseUnknown_var&amp;)"><b>GetPrograms</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves Programs of the Part Operation
 
 <dt> o 
    <a href="#GetToolChangeLocation(CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)"><b>GetToolChangeLocation</b></a>(CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)
<dd>  Gets the setup parameters defining the Tool Change point.
 <dt> o 
    <a href="#GetToolChangeLocation(CATMathPoint&amp;,CATMathVector&amp;,CATBoolean&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"><b>GetToolChangeLocation</b></a>(CATMathPoint&amp;,CATMathVector&amp;,CATBoolean&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)
<dd>  Gets the mathematical definition of the Tool Change point.
 <dt> o 
    <a href="#InsertNewProgram(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"><b>InsertNewProgram</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Creates and insert a Program in the Part Operation.
 <dt> o 
    <a href="#MoveProgramAfter(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"><b>MoveProgramAfter</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Moves a Program inside the Part Operation.
 <dt> o 
    <a href="#SetMachine(CATBaseUnknown_var&amp;)"><b>SetMachine</b></a>(CATBaseUnknown_var&amp;)
<dd>  Replace current machine.
 <dt> o 
    <a href="#SetMachiningAxis(CATBaseUnknown_var&amp;)"><b>SetMachiningAxis</b></a>(CATBaseUnknown_var&amp;)
<dd>  Associates a Machining Axis System feature to the Part Operation.
 <dt> o 
    <a href="#SetToolChangeLocation(double,double,double)"><b>SetToolChangeLocation</b></a>(double,double,double)
<dd>   Set the mathematical definition of the Tool Change point.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetActualStockMode"></a><a name="GetActualStockMode(int&amp;)"></a> <dt> o <b>GetActualStockMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetActualStockMode</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the actual stock computation mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd> the actual stock mode.        <br><b>Legal values</b>: 1 if the stock is recomputed automatically for each Machining Operation,
                                 0 otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetContext"></a><a name="GetContext(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContext</b>(<td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromAbsoluteToSetup</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromSetupToAbsolute</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Computes the mathematical transformations to switch from the machining axis system
 to the absolute axis sytem and vice versa.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFromAbsoluteToSetup</tt>
   <dd> The computed mathematical transformation to switch from                             the absolute axis system to the machining axis system
 </dd>
    <dt><tt> oFromSetupToAbsolute</tt>
   <dd> The computed mathematical transformation to switch from                             the machining axis system to the absolute axis system
 </dd>
    <dt><tt> iSpindle</tt>
   <dd> Do not use this parameter: keep the default value. </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMathTransformation','','CATMathTransformation') </script>
</dl>
</dl>
<a name="GetHomePoint"></a><a name="GetHomePoint(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetHomePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHomePoint</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oHomePointXYZListParms</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oHomePointIJKListParms</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oUseMachineHomePoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the setup parameters defining the home point.
 WARNING : The values of these parameters are defined in the Part Operation axis system.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHomePointXYZListParms</tt>
   <dd>            List of 3 </dd>
<script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script> refering to the X, Y, Z coordinates            of home point.     
 
    <dt><tt> oHomePointIJKListParms</tt>
   <dd>            List of 3 </dd>
<script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script> refering to the I, J, K coordinates            of tool axis vector on the home point.     
 
    <dt><tt> oUseMachineHomePoint</tt>
   <dd>            TRUE if the parameters have been copied from the machine, 
            FALSE otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetMachine"></a><a name="GetMachine(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachine</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMachine</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the machine.
 There can be only one machine.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMachine</tt>
   <dd> The instance of machine associated.</dd>
</dl>
</dl>
</dl>
<a name="GetMachineLocalParameters"></a><a name="GetMachineLocalParameters(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachineLocalParameters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachineLocalParameters</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMachineLocalParam</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the local parameters of machine.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMachine</tt>
   <dd> The instance of machine associated.</dd>
</dl>
</dl>
</dl>
<a name="GetMachiningAxis"></a><a name="GetMachiningAxis(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachiningAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachiningAxis</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMachiningAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Machining Axis System feature associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMachiningAxis</tt>
   <dd> The associated Machining Axis System </dd>
    <dt><tt> iSpindle</tt>
   <dd> Do not use this parameter: keep the default value.</dd>
</dl>
</dl>
</dl>
<a name="GetMachiningAxisDefinition"></a><a name="GetMachiningAxisDefinition(CATMathAxis&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachiningAxisDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachiningAxisDefinition</b>(<td><script type="text/javascript"> activateLink('CATMathAxis','CATMathAxis&amp;')</script> <td><tt>oMachiningAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the mathematical axis system associated to the Part Operation.
 This is the mathematical definition of the Machining Axis System.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMachiningAxis</tt>
   <dd> The associated mathematical axis system </dd>
    <dt><tt> iSpindle</tt>
   <dd> Do not use this parameter: keep the default value. </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMathAxis','','CATMathAxis') </script>
</dl>
</dl>
<a name="GetMachiningContext"></a><a name="GetMachiningContext(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachiningContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachiningContext</b>(<td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromAbsoluteToMachiningAxis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromMachiningAxisToAbsolute</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Computes the mathematical transformations to switch from the machining axis system
 to the absolute axis sytem and vice versa.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFromAbsoluteToMachiningAxis</tt>
   <dd> The computed mathematical transformation to switch from                                     the absolute axis system to the machining axis system
 </dd>
    <dt><tt> oFromMachiningAxisToAbsolute</tt>
   <dd> The computed mathematical transformation to switch from                                     the machining axis system to the absolute axis system
 </dd>
    <dt><tt> iSpindle</tt>
   <dd> Do not use this parameter: keep the default value. </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATMathTransformation','','CATMathTransformation') </script>
</dl>
</dl>
<a name="GetPrograms"></a><a name="GetPrograms(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetPrograms</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPrograms</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListPrograms</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves Programs of the Part Operation
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListPrograms</tt>
   <dd> List of Programs</dd>
</dl>
</dl>
</dl>
<a name="GetToolChangeLocation"></a><a name="GetToolChangeLocation(CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetToolChangeLocation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetToolChangeLocation</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oToolChangeXYZListParms</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oFromMachine</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the setup parameters defining the Tool Change point.
 <br><b>WARNING</b> : The values of these parameters are defined in the Part Operation axis system.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oToolChangeXYZListParms</tt>
   <dd>            List of 3 </dd>
<script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script> refering to the X, Y, Z coordinates            of tool change point.     
 
    <dt><tt> oFromMachine</tt>
   <dd>            TRUE if the parameters have been copied from the machine.
            In this case the tool length is NOT take into account in the point definition.
     <br>   FALSE otherwise, and the tool change point is the tip point.</dd>
</dl>
</dl>
</dl>
<a name="GetToolChangeLocation"></a><a name="GetToolChangeLocation(CATMathPoint&amp;,CATMathVector&amp;,CATBoolean&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetToolChangeLocation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetToolChangeLocation</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>oTCPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oTCAxis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oFromMachine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oTheLocXform</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iToolChangeOperation</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the mathematical definition of the Tool Change point.
 <br><b>WARNING</b> : The values of these parameters are defined in absolute axis system.
 Units are mm.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTCPoint</tt>
   <dd>            The mathematical tool change point. This is the tool mounting point if 
            oFromMachine is TRUE, the tool tip point otherwise.     
 </dd>
    <dt><tt> oTCAxis</tt>
   <dd>            The tool axis vector on the tool change point.
 </dd>
    <dt><tt> oFromMachine</tt>
   <dd>            TRUE if the parameters have been copied from the machine,
            The tool length is then NOT take into account in the point definition,
            and oTheLocXform is valuated.
     <br>   FALSE otherwise. The tool change point is then the tip point.
 </dd>
    <dt><tt> oTheLocXform</tt>
   <dd>            Transformation in order to compute the tip point with the tool length.
            This is the Identity if oFromMachine is FALSE.
 </dd>
    <dt><tt> iToolChangeOperation</tt>
   <dd>            Tool change operation defining the context (optional).
            Only used if oFromMachine is TRUE.
            If valued : the returned location takes the contextual position of the machine into account.</dd>
</dl>
</dl>
</dl>
<a name="InsertNewProgram"></a><a name="InsertNewProgram(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>InsertNewProgram</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertNewProgram</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oProgram</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iInsertionLevel</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates and insert a Program in the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProgram</tt>
   <dd> The new created Program </dd>
    <dt><tt> iInsertionLevel</tt>
   <dd> The Program after which the new program is inserted.                        If NULL_var, the Program is inserted at the beginning of the Part Operation
                        (default behaviour).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL If the insertion program does not belong to the Part Operation.<br>         S_OK, if the program has been correctly created.
</dl>
</dl>
<a name="MoveProgramAfter"></a><a name="MoveProgramAfter(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>MoveProgramAfter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>MoveProgramAfter</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iProgramToMove</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iInsertionLevel</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Moves a Program inside the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProgramToMove</tt>
   <dd> The Program to be moved </dd>
    <dt><tt> iInsertionLevel</tt>
   <dd> The Program after which the program is moved.                        If NULL_var, the Program is moved at the beginning of the Part Operation
                        (default behaviour).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL If the program to move or the insertion program do not belong to the Part Operation.<br>         S_OK, if the program has been correctly moved.
</dl>
</dl>
<a name="SetMachine"></a><a name="SetMachine(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetMachine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMachine</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iMachine</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Replace current machine.
 There can be only one machine.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMachine</tt>
   <dd> The instance of machine</dd>
</dl>
</dl>
</dl>
<a name="SetMachiningAxis"></a><a name="SetMachiningAxis(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetMachiningAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMachiningAxis</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iMachiningAxis</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Associates a Machining Axis System feature to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMachiningAxis</tt>
   <dd> The Machining Axis System to be associated</dd>
</dl>
</dl>
</dl>
<a name="SetToolChangeLocation"></a><a name="SetToolChangeLocation(double,double,double)"></a> <dt> o <b>SetToolChangeLocation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetToolChangeLocation</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Set the mathematical definition of the Tool Change point.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iX</tt>
   <dd> [in]   X coordonate
 </dd>
    <dt><tt> iY</tt>
   <dd> [in]   Y coordonate
 </dd>
    <dt><tt> iZ</tt>
   <dd> [in]   Z coordonate

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if succeeded

</dl>
</dl>
<hr>
 This object is included in the file: <b>DELIMfgPartOperation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MachiningUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

