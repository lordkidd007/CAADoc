<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningUseItf Interface DELIMfgGeometryDefinition</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningUseItf.htm" href="../MachiningUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningUseItf";	}
		function getCurrentObjectName() { 
 	return "DELIMfgGeometryDefinition"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MachiningUseItf Interface DELIMfgGeometryDefinition</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIMfgGeometryDefinition_45671','DELIMfgGeometryDefinition','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIMfgGeometryDefinition</b>
</p>
<p>
<b><i> Interface dedicated to geometry definition.</i></b><br>


 <br><b>Role</b>: This interface offers service to set or get the geometries.<br>
 <p>
 The methods are consider geometries from the given type.
 This iType parameter corresponds to a key word ending the wanted interface. (CATIM3xiType, CATIMfgiType or CATIiType)
 For example iType = "Parts" to consider the parts geometries (for CATIMfgParts)
 iType = "Checks" to consider the checks geometries (for CATIMfgChecks)
 iType = "MultiAxisPart" to consider the parts geometries for multi-axis operation
 iType = "FirstGuideLine"
 iType = "FirstStopLine"
 iType = "SecondGuideLine"
 iType = "SecondStopLine"
 iType = "AuxGuidingCurves"
 iType = "FirstRelimitingElement"
 iType = "SecondRelimitingElement"
 iType = "MultiAxisRefPoint"
 iType = "MultiAxisStartElement"
 iType = "MultiAxisEndElement"
 iType = "GuidingCurves"
 iType = "Drives"
 iType = "RoughStock"
 iType = "PartBottom"
 iType = "RelimitingFace"
 iType = "RelimitingPlane"
 iType = "EndingPoint"
 iType = "StartingPoint"
 iType = "Island"
 iType = "SetupStocks" to consider the stock of the PO
 iType = "SetupDesigns" to consider the design part of the PO</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddGeometry(CATString&amp;,CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;,int,int)"><b>AddGeometry</b></a>(CATString&amp;,CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;,int,int)
<dd>  Adds a geometry.
 <dt> o 
    <a href="#DefineFormula(CATString&amp;,CATUnicodeString&amp;)"><b>DefineFormula</b></a>(CATString&amp;,CATUnicodeString&amp;)
<dd>  Defines a geometrical expression
 
 <dt> o 
    <a href="#GetGeometricElements(CATString&amp;,CATLISTP(CATGeometry)&amp;,int,int)"><b>GetGeometricElements</b></a>(CATString&amp;,CATLISTP(CATGeometry)&amp;,int,int)
<dd>  Gets the list of geometric elements.
 <dt> o 
    <a href="#GetGeometricReferences(CATString&amp;,CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"><b>GetGeometricReferences</b></a>(CATString&amp;,CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Gets the list of geometric references.
 <dt> o 
    <a href="#RemoveGeometries(CATString&amp;)"><b>RemoveGeometries</b></a>(CATString&amp;)
<dd>  Remove geometries of the given type.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddGeometry"></a><a name="AddGeometry(CATString&amp;,CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;,int,int)"></a> <dt> o <b>AddGeometry</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddGeometry</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iReference</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iVerify</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPosition</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a geometry.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>				Type of the geometry to add.
 </dd>
    <dt><tt> iReference</tt>
   <dd>			Geometry to add.
 </dd>
    <dt><tt> iProduct</tt>
   <dd>				Product to whech belongs the geometry to add.
 </dd>
    <dt><tt> iVerify</tt>
   <dd>				<br><b>Legal values</b>: The parameter can be
		<dl>
     <dt><tt>0</tt>   <dd>Add the geometry without any checks. (default value)
     <dt><tt>1</tt>   <dd>Add the geometry only if it is not already in the geometries list.
     </dl>
 </dd>
    <dt><tt> iPostion</tt>
   <dd>				Position at which add the geometry in the geometries list. (default value = 0)</dd>
</dl>
</dl>
</dl>
<a name="DefineFormula"></a><a name="DefineFormula(CATString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>DefineFormula</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DefineFormula</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iGeomExp</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines a geometrical expression
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>				Type of geometry for which we define an geometrical expression.
 </dd>
    <dt><tt> iExpression</tt>
   <dd>			Geometrical Expression to define.</dd>
</dl>
</dl>
</dl>
<a name="GetGeometricElements"></a><a name="GetGeometricElements(CATString&amp;,CATLISTP(CATGeometry)&amp;,int,int)"></a> <dt> o <b>GetGeometricElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGeometricElements</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATGeometry)','CATLISTP(CATGeometry)&amp;')</script> <td><tt>oGeometricElements</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAllGeometricElements</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDuplicate</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of geometric elements.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>				Type of the geometries to get.
 </dd>
    <dt><tt> oGeometricElements</tt>
   <dd>			Returned geometric elements list.
 </dd>
    <dt><tt> iAllGeometricElements</tt>
   <dd>				Specifies if all geometric elements must be retrieved.
		<br><b>Legal values</b>: The parameter can be
		<dl>
		<dt><tt>0</tt>   <dd>Only geometric elements on the visible space are retrieved (default value)
		<dt><tt>1</tt>   <dd>All geometric elements are retrieved
		</dl>
 </dd>
    <dt><tt> iDuplicate</tt>
   <dd>		Specifies if the geometric elements must be duplicated
		<br><b>Legal values</b>: The parameter can be
		<dl>
     <dt><tt>0</tt>   <dd>Geometric elements are duplicated only if necessary in a product context (default value)
     <dt><tt>1</tt>   <dd>Geometric elements are duplicated
		</dl></dd>
</dl>
</dl>
</dl>
<a name="GetGeometricReferences"></a><a name="GetGeometricReferences(CATString&amp;,CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetGeometricReferences</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGeometricReferences</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListGeometries</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListProducts</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of geometric references.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>				Type of the geometries to get.
 </dd>
    <dt><tt> oListGeometries</tt>
   <dd>			Returned geometric references list.
 </dd>
    <dt><tt> oListProducts</tt>
   <dd>			Returned products list corresponding to geometric references.</dd>
</dl>
</dl>
</dl>
<a name="RemoveGeometries"></a><a name="RemoveGeometries(CATString&amp;)"></a> <dt> o <b>RemoveGeometries</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveGeometries</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Remove geometries of the given type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>				Type of the geometries to remove.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>DELIMfgGeometryDefinition.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MachiningUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

