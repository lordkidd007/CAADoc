<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningUseItf Interface DELIMfgMacroMotion</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningUseItf.htm" href="../MachiningUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningUseItf";	}
		function getCurrentObjectName() { 
 	return "DELIMfgMacroMotion"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MachiningUseItf Interface DELIMfgMacroMotion</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIMfgMacroMotion_29988','DELIMfgMacroMotion','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIMfgMacroMotion</b>
</p>
<p>
<b><i> Interface to manage the macro of an operation.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#DeleteElementaryMotion(int)"><b>DeleteElementaryMotion</b></a>(int)
<dd>   Deletes  an  elementary  motion  in  the  macro  motion.
 <dt> o 
    <a href="#DeleteElementaryMotion(CATBaseUnknown_var&amp;)"><b>DeleteElementaryMotion</b></a>(CATBaseUnknown_var&amp;)
<dd>   Deletes  an  elementary  motion  in  the  macro  motion.
 <dt> o 
    <a href="#GetClearanceMode(int&amp;)"><b>GetClearanceMode</b></a>(int&amp;)
<dd>   Read  the  type  of  Clearance.
 <dt> o 
    <a href="#GetCornerizedRadius(double&amp;)"><b>GetCornerizedRadius</b></a>(double&amp;)
<dd>   Returns  radius  if  the motion  is  cornerized.
 <dt> o 
    <a href="#GetElementaryMotion(int,CATBaseUnknown_var&amp;)"><b>GetElementaryMotion</b></a>(int,CATBaseUnknown_var&amp;)
<dd>   Access  to  an  elementary  macro  motion.
 <dt> o 
    <a href="#GetNumberOfElementaryMotions(int&amp;)"><b>GetNumberOfElementaryMotions</b></a>(int&amp;)
<dd>   Returns  the  number  of  elementary macro  motions.
 <dt> o 
    <a href="#InsertElementaryMotion(int,CATUnicodeString&amp;,int)"><b>InsertElementaryMotion</b></a>(int,CATUnicodeString&amp;,int)
<dd>   Inserts  an  elementary  motion  in  the  macro  motion.
 <dt> o 
    <a href="#InsertElementaryMotion(int,CATBaseUnknown_var&amp;,int)"><b>InsertElementaryMotion</b></a>(int,CATBaseUnknown_var&amp;,int)
<dd>   Inserts  an  elementary  motion  in  the  macro  motion.
 <dt> o 
    <a href="#IsComplete(int&amp;,int&amp;)"><b>IsComplete</b></a>(int&amp;,int&amp;)
<dd>   Returns  if  a  macromotion    is  complete  or  not  on  an  operation.
 <dt> o 
    <a href="#IsCornerized(int&amp;)"><b>IsCornerized</b></a>(int&amp;)
<dd>   Determines  wether  the  motion  is  cornerized  or  not.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="DeleteElementaryMotion"></a><a name="DeleteElementaryMotion(int)"></a> <dt> o <b>DeleteElementaryMotion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteElementaryMotion</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPosition</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Deletes  an  elementary  motion  in  the  macro  motion.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iPosition</tt>
   <dd>          The  position  of  the  motion  to  delete  in  the  aggregate</dd>
</dl>
</dl>
</dl>
<a name="DeleteElementaryMotion"></a><a name="DeleteElementaryMotion(CATBaseUnknown_var&amp;)"></a> <dt> o <b>DeleteElementaryMotion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteElementaryMotion</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iMotion</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Deletes  an  elementary  motion  in  the  macro  motion.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iMotion</tt>
   <dd>          The  motion  to  delete</dd>
</dl>
</dl>
</dl>
<a name="GetClearanceMode"></a><a name="GetClearanceMode(int&amp;)"></a> <dt> o <b>GetClearanceMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClearanceMode</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Read  the  type  of  Clearance.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oMode</tt>
   <dd>  <ul>
  <li>    1:Distance  (or  Optimized  in  clearance  of  3-axis  operations)        </li>  
  <li>    2:To  a  plane  (or  Perpendicular  to  safety  plane  in  clearance  of  3-axis  operations)    </li>
  <li>    3:To  safety  plane  </li>
  <li>    4:Along  tool  axis  in  clearance  of  3-axis  operations  </li>
  </ul></dd>
</dl>
</dl>
</dl>
<a name="GetCornerizedRadius"></a><a name="GetCornerizedRadius(double&amp;)"></a> <dt> o <b>GetCornerizedRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCornerizedRadius</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oRadius</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns  radius  if  the motion  is  cornerized.
</dl>
<a name="GetElementaryMotion"></a><a name="GetElementaryMotion(int,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetElementaryMotion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetElementaryMotion</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMacroMotion</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Access  to  an  elementary  macro  motion.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iPosition</tt>
   <dd>          The  position  of the motion to access.
  </dd>
    <dt><tt>  oMacroMotion</tt>
   <dd>          Corresponding motion found</dd>
</dl>
</dl>
</dl>
<a name="GetNumberOfElementaryMotions"></a><a name="GetNumberOfElementaryMotions(int&amp;)"></a> <dt> o <b>GetNumberOfElementaryMotions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNumberOfElementaryMotions</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumber</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns  the  number  of  elementary macro  motions.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oNumber</tt>
   <dd>			Number  of  elementary macro  motions</dd>
</dl>
</dl>
</dl>
<a name="InsertElementaryMotion"></a><a name="InsertElementaryMotion(int,CATUnicodeString&amp;,int)"></a> <dt> o <b>InsertElementaryMotion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertElementaryMotion</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iMotionType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNotify</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Inserts  an  elementary  motion  in  the  macro  motion.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iPosition</tt>
   <dd>          The  position  in  the  aggregate
  </dd>
    <dt><tt>  iMotionType</tt>
   <dd>          Type  of  the  motion  to  add
  Authorized values are : 
		- MfgMacroClearanceMotion				
		- MfgMacroElementaryAxialMotion     
		- MfgMacroElementaryHorizontalMotion  
		- MfgMacroElementaryCircularMotion   
		- MfgMacroPPWord					 
		- MfgMacroElementaryRampingMotion   
		- MfgMacroElementaryGoToAPlaneMotion 
		- MfgMacroElementaryGoToAPointMotion 
		- MfgMacroElementaryDeltaLnDistMotion 
		- MfgMacroElementaryToolAxisMotion    
		- MfgMacroElementaryHelixMotion		
		- MfgMacroElementaryGoToALineMotion 
		- MfgMacroElementarySimultaneousAxisMotion   
  </dd>
    <dt><tt>  iNotify</tt>
   <dd>                  The  flag  to  indicate  whether  an  event  is  sent.
    <br><b>Legal  values</b>:
    <ul>
    <li>  =  1  :  an  event  is  sent  to  notify  the  change</li>
    <li>  other  value  :  no  event  sent</li>
    </ul></dd>
</dl>
</dl>
</dl>
<a name="InsertElementaryMotion"></a><a name="InsertElementaryMotion(int,CATBaseUnknown_var&amp;,int)"></a> <dt> o <b>InsertElementaryMotion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertElementaryMotion</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iMotion</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNotify</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Inserts  an  elementary  motion  in  the  macro  motion.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iPosition</tt>
   <dd>          The  position  in  the  aggregate
  </dd>
    <dt><tt>  iMotion</tt>
   <dd>          The  motion  to  add
  </dd>
    <dt><tt>  iNotify</tt>
   <dd>                  The  flag  to  indicate  whether  an  event  is  sent.
    <br><b>Legal  values</b>:
    <ul>
    <li>  =  1  :  an  event  is  sent  to  notify  the  change</li>
    <li>  other  value  :  no  event  sent</li>
    </ul></dd>
</dl>
</dl>
</dl>
<a name="IsComplete"></a><a name="IsComplete(int&amp;,int&amp;)"></a> <dt> o <b>IsComplete</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsComplete</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iSfyPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oComplete</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns  if  a  macromotion    is  complete  or  not  on  an  operation.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iSfyPlane</tt>
   <dd>  <ul>
      <li>  0:no  safety  plane                  </li>
      <li>  1:  safety  plane  defined      </li>
  </ul>
  </dd>
    <dt><tt>  oComplete</tt>
   <dd>  <ul>
      <li>  0:not  complete  </li>
      <li>  1:complete          </li>
  </ul></dd>
</dl>
</dl>
</dl>
<a name="IsCornerized"></a><a name="IsCornerized(int&amp;)"></a> <dt> o <b>IsCornerized</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsCornerized</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oCornerized</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Determines  wether  the  motion  is  cornerized  or  not.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oCornerized</tt>
   <dd>  <dl>
      <li>  0:not  cornerized    </li>
      <li>  1:cornerized            </li>
  </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>DELIMfgMacroMotion.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MachiningUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

