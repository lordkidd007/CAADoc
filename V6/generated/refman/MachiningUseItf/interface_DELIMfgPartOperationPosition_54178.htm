<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MachiningUseItf Interface DELIMfgPartOperationPosition</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../MachiningUseItf.htm" href="../MachiningUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "MachiningUseItf";	}
		function getCurrentObjectName() { 
 	return "DELIMfgPartOperationPosition"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>MachiningUseItf Interface DELIMfgPartOperationPosition</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIMfgPartOperationPosition_54178','DELIMfgPartOperationPosition','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIMfgPartOperationPosition</b>
</p>
<p>
<b><i> Interface representing Part Operation Position
</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAlias()"><b>GetAlias</b></a>()
<dd>  Get the alias of the position
 <dt> o 
    <a href="#GetAttachStatus(CATBoolean&amp;)"><b>GetAttachStatus</b></a>(CATBoolean&amp;)
<dd>  Returns if the position is attached/detached on the machine
 
 <dt> o 
    <a href="#GetPartOperation(DELIMfgPartOperation_var&amp;)"><b>GetPartOperation</b></a>(DELIMfgPartOperation_var&amp;)
<dd>  Associates a product to the Part Operation.
 <dt> o 
    <a href="#GetProduct(CATBaseUnknown_var&amp;)"><b>GetProduct</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the product associated to the Part Operation.
 <dt> o 
    <a href="#GetProductOccurrence(CATBaseUnknown_var&amp;)"><b>GetProductOccurrence</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the product associated to the Part Operation.
 <dt> o 
    <a href="#GetRotaryPlanes(CATBaseUnknown_var&amp;)"><b>GetRotaryPlanes</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the rotary planes associated to the Part Operation.
 <dt> o 
    <a href="#GetSafetyPlaneSO(CATBaseUnknown_var&amp;)"><b>GetSafetyPlaneSO</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the safety plane associated to the Part Operation.
 <dt> o 
    <a href="#GetTopPlaneDirectionInversion(int&amp;)"><b>GetTopPlaneDirectionInversion</b></a>(int&amp;)
<dd>  Gets the top plane direction inversion value.
 <dt> o 
    <a href="#GetTransitionPlanes(CATBaseUnknown_var&amp;)"><b>GetTransitionPlanes</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the transition planes associated to the Part Operation.
 <dt> o 
    <a href="#SetAlias(CATUnicodeString&amp;)"><b>SetAlias</b></a>(CATUnicodeString&amp;)
<dd>  Set the alias of the position
 
 <dt> o 
    <a href="#SetProduct(CATBaseUnknown_var&amp;)"><b>SetProduct</b></a>(CATBaseUnknown_var&amp;)
<dd>  Associates a product to the Part Operation.
 <dt> o 
    <a href="#SetSafetyPlaneSO(CATBaseUnknown_var&amp;)"><b>SetSafetyPlaneSO</b></a>(CATBaseUnknown_var&amp;)
<dd>  Set the safety plane associated to the Part Operation.
 <dt> o 
    <a href="#SetTopPlaneDirectionInversion(int)"><b>SetTopPlaneDirectionInversion</b></a>(int)
<dd>  Sets the top plane direction inversion value in order to determine the traverse box position
 relatively to the top plane.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAlias"></a><a name="GetAlias()"></a> <dt> o <b>GetAlias</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetAlias</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the alias of the position
</dl>
<a name="GetAttachStatus"></a><a name="GetAttachStatus(CATBoolean&amp;)"></a> <dt> o <b>GetAttachStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAttachStatus</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>isAttached</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns if the position is attached/detached on the machine
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isAttached</tt>
   <dd>         <br><b>Legal values</b>: TRUE if the position is attached, FALSE else
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the position is not mounted
</dl>
</dl>
<a name="GetPartOperation"></a><a name="GetPartOperation(DELIMfgPartOperation_var&amp;)"></a> <dt> o <b>GetPartOperation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPartOperation</b>(<td><script type="text/javascript"> activateLink('DELIMfgPartOperation_var','DELIMfgPartOperation_var&amp;')</script> <td><tt>ospPartOperation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Associates a product to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd> The product to be associated.                 If iProduct is NULL_var, the previously associated product is removed.</dd>
</dl>
</dl>
</dl>
<a name="GetProduct"></a><a name="GetProduct(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetProduct</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProduct</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oProduct</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the product associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProduct</tt>
   <dd> The associated product.             If we are in File Based context, oProduct is a reference
             If we are in Manufacturing Hub context, oProduct is an instance</dd>
</dl>
</dl>
</dl>
<a name="GetProductOccurrence"></a><a name="GetProductOccurrence(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetProductOccurrence</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProductOccurrence</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oProduct</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the product associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProduct</tt>
   <dd> The associated product. It is an Occurance</dd>
</dl>
</dl>
</dl>
<a name="GetRotaryPlanes"></a><a name="GetRotaryPlanes(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetRotaryPlanes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRotaryPlanes</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oRotaryPlanes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the rotary planes associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRotaryPlanes</tt>
   <dd> The rotary planes.        Use </dd>
<script type="text/javascript"> activateLinkAnchor('CATIMfgAgregate','','CATIMfgAgregate') </script> on oRotaryPlanes to access each plane. 
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the rotary planes is not defined.
</dl>
</dl>
</dl>
<a name="GetSafetyPlaneSO"></a><a name="GetSafetyPlaneSO(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetSafetyPlaneSO</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSafetyPlaneSO</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oSafetyPlane</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the safety plane associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSafetyPlane</tt>
   <dd> The safety plane. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the safety plane is not defined.
</dl>
</dl>
<a name="GetTopPlaneDirectionInversion"></a><a name="GetTopPlaneDirectionInversion(int&amp;)"></a> <dt> o <b>GetTopPlaneDirectionInversion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTopPlaneDirectionInversion</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the top plane direction inversion value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>         <br><b>Legal values</b>: 1 if the top plane direction has been inverted, 0 otherwise</dd>
</dl>
</dl>
</dl>
<a name="GetTransitionPlanes"></a><a name="GetTransitionPlanes(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetTransitionPlanes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTransitionPlanes</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oTransitionPlanes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the transition planes associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTransitionPlanes</tt>
   <dd> The transition planes.        Use </dd>
<script type="text/javascript"> activateLinkAnchor('CATIMfgAgregate','','CATIMfgAgregate') </script> on oTransitionPlanes to access each plane. 
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the transition planes is not defined.
</dl>
</dl>
</dl>
<a name="SetAlias"></a><a name="SetAlias(CATUnicodeString&amp;)"></a> <dt> o <b>SetAlias</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAlias</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iNewAlias</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the alias of the position
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewAlias</tt>
   <dd> Alias of the position</dd>
</dl>
</dl>
</dl>
<a name="SetProduct"></a><a name="SetProduct(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetProduct</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetProduct</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iProduct</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Associates a product to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd> The product to be associated.                 If iProduct is NULL_var, the previously associated product is removed.</dd>
</dl>
</dl>
</dl>
<a name="SetSafetyPlaneSO"></a><a name="SetSafetyPlaneSO(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetSafetyPlaneSO</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSafetyPlaneSO</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSafetyPlane</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the safety plane associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSafetyPlane</tt>
   <dd> The safety plane. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the safety plane is not defined.
</dl>
</dl>
<a name="SetTopPlaneDirectionInversion"></a><a name="SetTopPlaneDirectionInversion(int)"></a> <dt> o <b>SetTopPlaneDirectionInversion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTopPlaneDirectionInversion</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the top plane direction inversion value in order to determine the traverse box position
 relatively to the top plane.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>         <br><b>Legal values</b>: 1 if the top plane direction is to be inverted, 0 otherwise
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_INVALIDARG if iMode is different from 0 or 1.
</dl>
</dl>
<hr>
 This object is included in the file: <b>DELIMfgPartOperationPosition.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MachiningUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

