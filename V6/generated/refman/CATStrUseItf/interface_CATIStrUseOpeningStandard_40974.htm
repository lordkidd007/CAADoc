<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrUseItf Interface CATIStrUseOpeningStandard</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrUseItf.htm" href="../CATStrUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIStrUseOpeningStandard"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATStrUseItf Interface CATIStrUseOpeningStandard</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIStrUseOpeningStandard_40974','CATIStrUseOpeningStandard','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIStrUseOpeningStandard</b>
</p>
<p>
<b><i> Interface representing a Standard Opening.</i></b><br>

 <b>Role</b>: The CATIStrUseOpeningStandard interface is conditionally 
 implemented for the Opening object, depending on
 whether the Opening has the Standard Opening CreationMode.
 This interface provides functions specific to Standard
 Openings.
 This interface allows access to the Standard Opening catalog
 to be encapsulated within the modeler, and combines the list
 of Standard Opening catalog contours with the built-in and 
 locally defined (in the design model) Standard Opening contours. 
 This also combines the list of positioning strategies in the 
 Standard Opening catalog with built-in and locally defined 
 positioning strategies.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAxisSystem(CATIMmiMechanicalFeature_var&amp;)"><b>GetAxisSystem</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the Axis System of this Opening.
 <dt> o 
    <a href="#GetContour(CATIMmiMechanicalFeature_var&amp;)"><b>GetContour</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the standard contour used by this Opening.
 <dt> o 
    <a href="#GetContour(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"><b>GetContour</b></a>(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>     
 <dt> o 
    <a href="#GetContour(CATUnicodeString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"><b>GetContour</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Gets the contour name and parameters of this Standard Opening.
 <dt> o 
    <a href="#GetDirection(CATIMmiMechanicalFeature_var&amp;)"><b>GetDirection</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the direction of extrusion of this Opening.
 <dt> o 
    <a href="#GetDirectionForOpeningOnProfile(CATBoolean&amp;)"><b>GetDirectionForOpeningOnProfile</b></a>(CATBoolean&amp;)
<dd>  Gets the Direction for Opening on Profile.
 <dt> o 
    <a href="#GetLimitMode(CATStrOpeningLimitsMode&amp;)"><b>GetLimitMode</b></a>(CATStrOpeningLimitsMode&amp;)
<dd>  Define the way an opening extrude the negative volume.
 <dt> o 
    <a href="#GetPositioningStrategy(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"><b>GetPositioningStrategy</b></a>(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Gets the positioning strategy type and parameters of this opening.
 <dt> o 
    <a href="#GetStandardModeType(CATStrOpeningSTDMode&amp;)"><b>GetStandardModeType</b></a>(CATStrOpeningSTDMode&amp;)
<dd>  Gets the Standard mode of this Opening.
 <dt> o 
    <a href="#SetAxisSystem(CATIMmiMechanicalFeature_var&amp;)"><b>SetAxisSystem</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Sets the Axis System of this Opening.
 <dt> o 
    <a href="#SetContourAndPosStrategy(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"><b>SetContourAndPosStrategy</b></a>(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>     
 <dt> o 
    <a href="#SetContourAndPosStrategy(CATUnicodeString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"><b>SetContourAndPosStrategy</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Sets the contour and positioning strategy names and parameters of this Standard Opening.
 <dt> o 
    <a href="#SetContourAndPosStrategyForProfile(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"><b>SetContourAndPosStrategyForProfile</b></a>(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Sets the contour and positioning strategy names and parameters of this Standard Opening on Profile.
 <dt> o 
    <a href="#SetDirection(CATIMmiMechanicalFeature_var&amp;)"><b>SetDirection</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Sets the direction of extrusion of this Opening.
 <dt> o 
    <a href="#SetDirectionForOpeningOnProfile(CATBoolean)"><b>SetDirectionForOpeningOnProfile</b></a>(CATBoolean)
<dd>  Sets the Direction for Opening on Profile.
 <dt> o 
    <a href="#SetLimitMode(CATStrOpeningLimitsMode)"><b>SetLimitMode</b></a>(CATStrOpeningLimitsMode)
<dd>  Define the way an opening extrude the negative volume.
 <dt> o 
    <a href="#SetMidDistOffsetPosStratParms(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>SetMidDistOffsetPosStratParms</b></a>(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Sets the parameters for mid dist offset position strategy.
 <dt> o 
    <a href="#SetOffsetOffsetPosStratParms(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>SetOffsetOffsetPosStratParms</b></a>(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Sets the parameters for offset offset position strategy.
 <dt> o 
    <a href="#SetSpacingOffsetPosStratParms(CATIMmiMechanicalFeature_var&amp;,CATBoolean,CATUnicodeString&amp;,CATBoolean,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>SetSpacingOffsetPosStratParms</b></a>(CATIMmiMechanicalFeature_var&amp;,CATBoolean,CATUnicodeString&amp;,CATBoolean,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Sets the parameters for spacing offset position strategy.
 <dt> o 
    <a href="#SetStandardModeType(CATStrOpeningSTDMode)"><b>SetStandardModeType</b></a>(CATStrOpeningSTDMode)
<dd>  Sets the Standard mode of this Opening.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAxisSystem"></a><a name="GetAxisSystem(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetAxisSystem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisSystem</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ospAxisSystem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Axis System of this Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospAxisSystem</tt>
   <dd>   It is CATIMf3DAxisSystem.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="GetContour"></a><a name="GetContour(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetContour</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContour</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ospContour</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the standard contour used by this Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospContour</tt>
   <dd>   Contour.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="GetContour"></a><a name="GetContour(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetContour</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContour</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oContourName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListContourParams</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>   V6R2013  use  <b>GetContour(CATUnicodeString &oContourType,CATUnicodeString &oContourName,CATListValCATBaseUnknown_var &oListContourParams)</b>
</dl>
</dl>
<a name="GetContour"></a><a name="GetContour(CATUnicodeString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetContour</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContour</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oContourType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oContourName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListContourParams</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the contour name and parameters of this Standard Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oContourName</tt>
   <dd>   The name of the Standard Opening contour for this opening.
 </dd>
    <dt><tt> oListContourParams</tt>
   <dd>   A list of volatile objects (accessed through CATIStrUseParameter)
   specifying Cke parameters controlling the size of this contour.
   The Cke parameters and their roles are retrieved using the CATIStrUseParameter interface.
   These Cke parameters are normally persistent parameter objects in the model (if they have been stored),
   but in some cases, these may be volatile parameters. 
   The parameters are locked if they cannot be modified.
   Do not release the smart pointers in this list - it is done automatically.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="GetDirection"></a><a name="GetDirection(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirection</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ospDirection</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the direction of extrusion of this Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospDirection</tt>
   <dd>   It can be a line or a plane.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="GetDirectionForOpeningOnProfile"></a><a name="GetDirectionForOpeningOnProfile(CATBoolean&amp;)"></a> <dt> o <b>GetDirectionForOpeningOnProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirectionForOpeningOnProfile</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oDirection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Direction for Opening on Profile.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oDirection</tt>
   <dd>   It is either CATTrue or CATFalse. CATTrue if opening is on web and CATFalse if it is on flange of profile.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="GetLimitMode"></a><a name="GetLimitMode(CATStrOpeningLimitsMode&amp;)"></a> <dt> o <b>GetLimitMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitMode</b>(<td><script type="text/javascript"> activateLink('CATStrOpeningLimitsMode','CATStrOpeningLimitsMode&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Define the way an opening extrude the negative volume.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>   It can be UpToLast or Dimensions.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="GetPositioningStrategy"></a><a name="GetPositioningStrategy(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetPositioningStrategy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPositioningStrategy</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oPosStrategyName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListPosParams</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the positioning strategy type and parameters of this opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPosStrategyName</tt>
   <dd>   The name of the positioning strategy.
 </dd>
    <dt><tt> oListPosParams</tt>
   <dd>   A list of the parameter group objects defining the Positioning Specification.
   The number and types of objects in this list depend on the Positioning Strategy name.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParms for the list of   available positioning strategies and the parameter groups for each positioning strategy.
   Each parameter group object is identified and accessed by one of the following interfaces.
   <DL>
     <DT> CATIStrUsePosSupportFace </DT> <DD> Specifies the face of the reference element (if solid) to use. </DD>
     <DT> CATIStrUsePosAxisAdjustment </DT> <DD> Specifies a CKE parameter defining the contour rotation','','CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParms for the list of   available positioning strategies and the parameter groups for each positioning strategy.
   Each parameter group object is identified and accessed by one of the following interfaces.
   <DL>
     <DT> CATIStrUsePosSupportFace </DT> <DD> Specifies the face of the reference element (if solid) to use. </DD>
     <DT> CATIStrUsePosAxisAdjustment </DT> <DD> Specifies a CKE parameter defining the contour rotation') </script>, <script type="text/javascript"> activateLinkAnchor('and U','','and U') </script>, <script type="text/javascript"> activateLinkAnchor('V shift. </DD>
     <DT> CATIStrUseParameter </DT>   <DD> Specifies one CKE parameter. </DD>
     <DT> CATIStrUseReference </DT>   <DD> Specifies one reference element. </DD>
     <DT> CATIStrUseRefOffset </DT>   <DD> Specifies a reference element with a direction and an offset distance (CKE parameter). </DD>
     <DT> CATIStrUsePosDualRef </DT>  <DD> Specifies a pair of reference elements. </DD>
   </DL>
   <P> NOTE: The volatile parameter group objects in this list are deleted automatically when
             all pointers to the objects are released. You should not release or delete these objects directly.
','','V shift. </DD>
     <DT> CATIStrUseParameter </DT>   <DD> Specifies one CKE parameter. </DD>
     <DT> CATIStrUseReference </DT>   <DD> Specifies one reference element. </DD>
     <DT> CATIStrUseRefOffset </DT>   <DD> Specifies a reference element with a direction and an offset distance (CKE parameter). </DD>
     <DT> CATIStrUsePosDualRef </DT>  <DD> Specifies a pair of reference elements. </DD>
   </DL>
   <P> NOTE: The volatile parameter group objects in this list are deleted automatically when
             all pointers to the objects are released. You should not release or delete these objects directly.
') </script>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="GetStandardModeType"></a><a name="GetStandardModeType(CATStrOpeningSTDMode&amp;)"></a> <dt> o <b>GetStandardModeType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStandardModeType</b>(<td><script type="text/javascript"> activateLink('CATStrOpeningSTDMode','CATStrOpeningSTDMode&amp;')</script> <td><tt>oSTDOpeningCreationMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Standard mode of this Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSTDOpeningCreationMode</tt>
   <dd>   It is type of standard opening as Str_Round/Str_Rect/Str_Oblong/Catalog.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetAxisSystem"></a><a name="SetAxisSystem(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>SetAxisSystem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisSystem</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ispAxisSystem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Axis System of this Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispAxisSystem</tt>
   <dd>   It is CATIMf3DAxisSystem.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetContourAndPosStrategy"></a><a name="SetContourAndPosStrategy(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>SetContourAndPosStrategy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetContourAndPosStrategy</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iContourName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iListContourParams</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPosStrategyName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iListPosParams</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
    
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>   V6R2013  use  <b>SetContourAndPosStrategy(const CATUnicodeString &iContourType,const CATUnicodeString &iContourName,const CATListValCATBaseUnknown_var &iListContourParams,const CATUnicodeString &iPosStrategyName,const CATListValCATBaseUnknown_var &iListPosParams)</b>
</dl>
</dl>
<a name="SetContourAndPosStrategy"></a><a name="SetContourAndPosStrategy(CATUnicodeString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>SetContourAndPosStrategy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetContourAndPosStrategy</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iContourType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iContourName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iListContourParams</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPosStrategyName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iListPosParams</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the contour and positioning strategy names and parameters of this Standard Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContourType</tt>
   <dd>   The Type of the Standard Opening contour for this opening. 
   Ex. Str_Round\Str_Rect\Str_Oblong\Catalog.
 </dd>
    <dt><tt> iContourName</tt>
   <dd>   The name of the Standard Opening contour for this opening.
   Ex. for Round type: "Round D1600".
 </dd>
    <dt><tt> iListContourParams</tt>
   <dd>   A list of volatile objects (accessed through CATICkeParameter)
   specifying Cke parameters controlling the size of this contour.
   These volatile objects are created using the GetContour method here
   or CATIStrUseOpeningsMgr::GetStandardContourParms.
   The Cke parameters specified by the volatile objects in this list
   may be persistent or volatile Cke parameters. The values (and formulas) 
   of these Cke parameters will be copied to the Cke parameters in the model
   (if the model parameter is not locked), using the parameter role to
   correlate these parameters with the model parameters.
 </dd>
    <dt><tt> iPosStrategyName</tt>
   <dd>   The internal name of the positioning strategy.
 </dd>
    <dt><tt> iListPosParams</tt>
   <dd>   A list of volatile parameter group objects defining the Positioning Specification.
   The number and types of objects in this list depend on the Positioning Strategy name.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParms for the list of   available positioning strategies and the parameter groups for each positioning strategy.
   For complete explanations','','CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParms for the list of   available positioning strategies and the parameter groups for each positioning strategy.
   For complete explanations') </script>, <script type="text/javascript"> activateLinkAnchor('
','','
') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParms   Each parameter group object is identified and accessed by one of the following interfaces.
   <DL>
     <DT> CATIStrUsePosSupportFace </DT> <DD> Specifies the face of the reference element (if solid) to use. </DD>
     <DT> CATIStrUsePosAxisAdjustment </DT> <DD> Specifies a CKE parameter defining the contour rotation','','CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParms   Each parameter group object is identified and accessed by one of the following interfaces.
   <DL>
     <DT> CATIStrUsePosSupportFace </DT> <DD> Specifies the face of the reference element (if solid) to use. </DD>
     <DT> CATIStrUsePosAxisAdjustment </DT> <DD> Specifies a CKE parameter defining the contour rotation') </script>, <script type="text/javascript"> activateLinkAnchor('and U','','and U') </script>, <script type="text/javascript"> activateLinkAnchor('V shift. </DD>
     <DT> CATIStrUseParameter </DT>   <DD> Specifies one CKE parameter. </DD>
     <DT> CATIStrUseReference </DT>   <DD> Specifies one reference element. </DD>
     <DT> CATIStrUseRefOffset </DT>   <DD> Specifies a reference element with a direction and an offset distance (CKE parameter). </DD>
     <DT> CATIStrUsePosDualRef </DT>  <DD> Specifies a pair of reference elements. </DD>
     <DT> CATIMf3DAxisSystem </DT> <DD> Specified a 3D axis','','V shift. </DD>
     <DT> CATIStrUseParameter </DT>   <DD> Specifies one CKE parameter. </DD>
     <DT> CATIStrUseReference </DT>   <DD> Specifies one reference element. </DD>
     <DT> CATIStrUseRefOffset </DT>   <DD> Specifies a reference element with a direction and an offset distance (CKE parameter). </DD>
     <DT> CATIStrUsePosDualRef </DT>  <DD> Specifies a pair of reference elements. </DD>
     <DT> CATIMf3DAxisSystem </DT> <DD> Specified a 3D axis') </script>, <script type="text/javascript"> activateLinkAnchor('this will be useful for 3DAxis mode strategy. </DD>
   </DL>
','','this will be useful for 3DAxis mode strategy. </DD>
   </DL>
') </script>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetContourAndPosStrategyForProfile"></a><a name="SetContourAndPosStrategyForProfile(CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>SetContourAndPosStrategyForProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetContourAndPosStrategyForProfile</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iContourName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iListContourParams</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPosStrategyName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iListPosParams</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the contour and positioning strategy names and parameters of this Standard Opening on Profile.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContourName</tt>
   <dd>   The name of the Standard Opening contour for this opening.
   Ex. for Round type: "Round D1600".
 </dd>
    <dt><tt> iListContourParams</tt>
   <dd>   A list of volatile objects (accessed through CATICkeParameter)
   specifying Cke parameters controlling the size of this contour.
   These volatile objects are created using the GetContour method here
   or CATIStrUseOpeningsMgr::GetStandardContourParms.
   The Cke parameters specified by the volatile objects in this list
   may be persistent or volatile Cke parameters. The values (and formulas) 
   of these Cke parameters will be copied to the Cke parameters in the model
   (if the model parameter is not locked), using the parameter role to
   correlate these parameters with the model parameters.
 </dd>
    <dt><tt> iPosStrategyName</tt>
   <dd>   The internal name of the positioning strategy.
   Get the list of internal names of the available positioning strategies.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIStrUseOpeningsMgr::GetAvailableStandardPositioningStrategiesForProfile','','CATIStrUseOpeningsMgr::GetAvailableStandardPositioningStrategiesForProfile') </script>
    <dt><tt> iListPosParams</tt>
   <dd>   A list of volatile parameter group objects defining the Positioning Specification.
   The number and types of objects in this list depend on the Positioning Strategy name.
   </dd>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParmsForProfile for the list of   available positioning strategies and the parameter groups for each positioning strategy.
   For complete explanations','','CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParmsForProfile for the list of   available positioning strategies and the parameter groups for each positioning strategy.
   For complete explanations') </script>, <script type="text/javascript"> activateLinkAnchor('
','','
') </script>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParmsForProfile','','CATIStrUseOpeningsMgr::GetStandardPositioningStrategyParmsForProfile') </script>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetDirection"></a><a name="SetDirection(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>SetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDirection</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ispDirection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the direction of extrusion of this Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispDirection</tt>
   <dd>   It can be a line or a plane.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetDirectionForOpeningOnProfile"></a><a name="SetDirectionForOpeningOnProfile(CATBoolean)"></a> <dt> o <b>SetDirectionForOpeningOnProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDirectionForOpeningOnProfile</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iDirection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Direction for Opening on Profile.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iDirection</tt>
   <dd>   It is either CATTrue or CATFalse. CATTrue if opening is to be on web and CATFalse if it is to be on flange of a profile.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetLimitMode"></a><a name="SetLimitMode(CATStrOpeningLimitsMode)"></a> <dt> o <b>SetLimitMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLimitMode</b>(<td> const <script type="text/javascript"> activateLink('CATStrOpeningLimitsMode','CATStrOpeningLimitsMode')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Define the way an opening extrude the negative volume.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   It can be UpToLast or Dimensions.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetMidDistOffsetPosStratParms"></a><a name="SetMidDistOffsetPosStratParms(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetMidDistOffsetPosStratParms</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMidDistOffsetPosStratParms</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iRefProfile</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iRefElement_1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iRefElement_2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iVOffsetCkeParm</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAnchorPointName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCkeParmAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the parameters for mid dist offset position strategy. There are in all 6 parameters to be set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iRefProfile</tt>
   <dd>   The reference of the profile.
 </dd>
    <dt><tt>  iRefElement_1</tt>
   <dd>   The first reference element used.
 </dd>
    <dt><tt>  iRefElement_2</tt>
   <dd>   The second reference element used.
 </dd>
    <dt><tt>  iVOffsetCkeParm</tt>
   <dd>   The vertical offset distance from anchor point.
 </dd>
    <dt><tt>  iAnchorPointName</tt>
   <dd>   The anchor point type.
 </dd>
    <dt><tt>  iCkeParmAngle</tt>
   <dd>   The axis angle.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetOffsetOffsetPosStratParms"></a><a name="SetOffsetOffsetPosStratParms(CATIMmiMechanicalFeature_var&amp;,CATIMmiMechanicalFeature_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetOffsetOffsetPosStratParms</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOffsetOffsetPosStratParms</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iRefProfile</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iRefElement</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iRefOffsetCkeParm</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iVOffsetCkeParm</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAnchorPointName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCkeParmAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the parameters for offset offset position strategy. There are in all 6 parameters to be set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iRefProfile</tt>
   <dd>   The reference of the profile.
 </dd>
    <dt><tt>  iRefElement</tt>
   <dd>   The reference element used.
 </dd>
    <dt><tt>  iRefOffsetCkeParm</tt>
   <dd>   The horizontal offset distance from reference element.
 </dd>
    <dt><tt>  iVOffsetCkeParm</tt>
   <dd>   The vertical offset distance from anchor point.
 </dd>
    <dt><tt>  iAnchorPointName</tt>
   <dd>   The anchor point type.
 </dd>
    <dt><tt>  iCkeParmAngle</tt>
   <dd>   The axis angle.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetSpacingOffsetPosStratParms"></a><a name="SetSpacingOffsetPosStratParms(CATIMmiMechanicalFeature_var&amp;,CATBoolean,CATUnicodeString&amp;,CATBoolean,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetSpacingOffsetPosStratParms</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSpacingOffsetPosStratParms</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iRefProfile</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iHOffsetCkeParm</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iRepetitionMode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iVOffsetCkeParm</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAnchorPointName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCkeParmAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the parameters for spacing offset position strategy. There are in all 7 parameters to be set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iRefProfile</tt>
   <dd>   The reference of the profile.
 </dd>
    <dt><tt>  iOrientation</tt>
   <dd>   Whether reference point is from start or end. CATTrue for Start and CATFalse for End.
 </dd>
    <dt><tt>  iHOffsetCkeParm</tt>
   <dd>   The horizontal offset distance.
 </dd>
    <dt><tt>  iRepetitionMode</tt>
   <dd>   Whether mode is absolute or relative. CATTrue for Absolute and CATFalse for Relative.
 </dd>
    <dt><tt>  iVOffsetCkeParm</tt>
   <dd>   The vertical offset distance from anchor point.
 </dd>
    <dt><tt>  iAnchorPointName</tt>
   <dd>   The anchor point type.
 </dd>
    <dt><tt>  iCkeParmAngle</tt>
   <dd>   The axis angle.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<a name="SetStandardModeType"></a><a name="SetStandardModeType(CATStrOpeningSTDMode)"></a> <dt> o <b>SetStandardModeType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetStandardModeType</b>(<td><script type="text/javascript"> activateLink('CATStrOpeningSTDMode','CATStrOpeningSTDMode')</script> <td><tt>iSTDOpeningCreationMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Standard mode of this Opening.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSTDOpeningCreationMode</tt>
   <dd>   It is type of standard opening as Str_Round/Str_Rect/Str_Oblong/Catalog.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT   Return code of function. 
   S_OK if everything ran ok.
   E_FAIL if something went wrong.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIStrUseOpeningStandard.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATStrUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

