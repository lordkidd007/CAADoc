<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrUseItf Interface CATIStrUseFlange</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrUseItf.htm" href="../CATStrUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIStrUseFlange"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATStrUseItf Interface CATIStrUseFlange</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIStrUseFlange_22183','CATIStrUseFlange','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIStrUseFlange</b>
</p>
<p>
<b><i> Interface representing Flange object.</i></b><br>

 The Structure flange is implemented for the Structure Functional Design 
 and Structure Detail Design models. A flange is applied to a Plate for either
 of these models. An flange is created and accessed by the CATIStrUseFlangeMngt 
 interfaces, which is implemented for the Plate object.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIStrUseFlangeMngt','','CATIStrUseFlangeMngt') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBendingAngle(CATICkeParm_var&amp;)"><b>GetBendingAngle</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the Bending angle.
 <dt> o 
    <a href="#GetBendingRadius(CATICkeParm_var&amp;)"><b>GetBendingRadius</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the Bending radius.
 <dt> o 
    <a href="#GetEdge(CATIMmiMechanicalFeature_var&amp;)"><b>GetEdge</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>   Gets the Edge of the plate.
 <dt> o 
    <a href="#GetEndEndCutAngle(CATICkeParm_var&amp;)"><b>GetEndEndCutAngle</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the End EndCut Angle.
 <dt> o 
    <a href="#GetEndEndCutDistance(CATICkeParm_var&amp;)"><b>GetEndEndCutDistance</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the End EndCut Distance.
 <dt> o 
    <a href="#GetEndEndCutOffset(CATICkeParm_var&amp;)"><b>GetEndEndCutOffset</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the End EndCut Offset.
 <dt> o 
    <a href="#GetEndEndCutRadius(CATICkeParm_var&amp;)"><b>GetEndEndCutRadius</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the End EndCut Radius.
 <dt> o 
    <a href="#GetFlangeEndLimit(CATIMmiMechanicalFeature_var&amp;)"><b>GetFlangeEndLimit</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>   Gets the Flange End Limit.
 <dt> o 
    <a href="#GetFlangeStartLimit(CATIMmiMechanicalFeature_var&amp;)"><b>GetFlangeStartLimit</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>   Gets the Flange Start Limit.
 <dt> o 
    <a href="#GetFlangeWidth(CATICkeParm_var&amp;)"><b>GetFlangeWidth</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the Flange Width.
 <dt> o 
    <a href="#GetOperatedPlate(CATIMmiMechanicalFeature_var&amp;)"><b>GetOperatedPlate</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>   Gets the operated plate on which flange is created.
 <dt> o 
    <a href="#GetStartEndCutAngle(CATICkeParm_var&amp;)"><b>GetStartEndCutAngle</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the Start EndCut Angle.
 <dt> o 
    <a href="#GetStartEndCutDistance(CATICkeParm_var&amp;)"><b>GetStartEndCutDistance</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the Start EndCut Distance.
 <dt> o 
    <a href="#GetStartEndCutOffset(CATICkeParm_var&amp;)"><b>GetStartEndCutOffset</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the Start EndCut Offset.
 <dt> o 
    <a href="#GetStartEndCutRadius(CATICkeParm_var&amp;)"><b>GetStartEndCutRadius</b></a>(CATICkeParm_var&amp;)
<dd>   Gets the Start EndCut Radius.
 <dt> o 
    <a href="#GetType(CATStrFlangeType&amp;)"><b>GetType</b></a>(CATStrFlangeType&amp;)
<dd>   Gets the Type of flange.
 <dt> o 
    <a href="#GetWidthMeasurementType(CATStrFlangeWidthMeasurementType&amp;)"><b>GetWidthMeasurementType</b></a>(CATStrFlangeWidthMeasurementType&amp;)
<dd>   Gets the Width Measurement Type.
 <dt> o 
    <a href="#SetEdges(CATLISTV(CATIMmiMechanicalFeature_var)&amp;)"><b>SetEdges</b></a>(CATLISTV(CATIMmiMechanicalFeature_var)&amp;)
<dd>   Sets the Edges for Flange creation.
 <dt> o 
    <a href="#SetFlangeEndLimit(CATIMmiMechanicalFeature_var&amp;)"><b>SetFlangeEndLimit</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>   Sets the Flange End Limit.
 <dt> o 
    <a href="#SetFlangeStartLimit(CATIMmiMechanicalFeature_var&amp;)"><b>SetFlangeStartLimit</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>   Sets the Flange Start Limit.
 <dt> o 
    <a href="#SetType(CATStrFlangeType)"><b>SetType</b></a>(CATStrFlangeType)
<dd>   Sets the Type of flange.
 <dt> o 
    <a href="#SetWidthMeasurementType(CATStrFlangeWidthMeasurementType)"><b>SetWidthMeasurementType</b></a>(CATStrFlangeWidthMeasurementType)
<dd>   Sets the Width Measurement Type.
 <dt> o 
    <a href="#Update()"><b>Update</b></a>()
<dd>   Updates the Flanges Created.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBendingAngle"></a><a name="GetBendingAngle(CATICkeParm_var&amp;)"></a> <dt> o <b>GetBendingAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBendingAngle</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Bending angle. This angle is aligned to plane of plate. (@see CATICkeParm)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAngle</tt>
   <dd>     Angle
 Valuate the Bending Angle as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetBendingRadius"></a><a name="GetBendingRadius(CATICkeParm_var&amp;)"></a> <dt> o <b>GetBendingRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBendingRadius</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Bending radius. This is the radius of arc between planes of plate and flange. 
 The bending radius is computed on the interior side of the Flange. (@see CATICkeParm)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRadius</tt>
   <dd>     Radius
 Valuate the Bending Radius as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetEdge"></a><a name="GetEdge(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetEdge</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEdge</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oEdgeIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Edge of the plate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEdgeIndex</tt>
   <dd>     EdgeIndex
 Gets the Edge of plate.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetEndEndCutAngle"></a><a name="GetEndEndCutAngle(CATICkeParm_var&amp;)"></a> <dt> o <b>GetEndEndCutAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEndEndCutAngle</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oEndEndCutAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the End EndCut Angle. (@see CATICkeParm)
 Always counted from the vertical edge of the flange.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEndEndCutAngle</tt>
   <dd>     EndEndCutAngle
 Valuate the End EndCut Angle as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetEndEndCutDistance"></a><a name="GetEndEndCutDistance(CATICkeParm_var&amp;)"></a> <dt> o <b>GetEndEndCutDistance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEndEndCutDistance</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oEndEndCutDistance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the End EndCut Distance. (@see CATICkeParm)
 Distance from the free edge to position the end cut. Distance should not be greater than flange width.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEndEndCutDistance</tt>
   <dd>     EndEndCutDistance
 Valuate the End EndCut Distance as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetEndEndCutOffset"></a><a name="GetEndEndCutOffset(CATICkeParm_var&amp;)"></a> <dt> o <b>GetEndEndCutOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEndEndCutOffset</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oEndEndCutOffset</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the End EndCut Offset. (@see CATICkeParm)
 Offset to apply from the extremity of the edge.
 Positive offset stretches the flange and negative offset shrinks the flange.
 A flange can not extended beyond the limit of the selected edge.
 If a user has not applied a limit, then a positive offset would not have impact of the flange result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEndEndCutOffset</tt>
   <dd>     EndEndCutOffset
 Valuate the End EndCut Offset as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetEndEndCutRadius"></a><a name="GetEndEndCutRadius(CATICkeParm_var&amp;)"></a> <dt> o <b>GetEndEndCutRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEndEndCutRadius</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oEndEndCutRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the End EndCut Radius. (@see CATICkeParm)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEndEndCutRadius</tt>
   <dd>     EndEndCutRadius
 Valuate the End EndCut Radius as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetFlangeEndLimit"></a><a name="GetFlangeEndLimit(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetFlangeEndLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFlangeEndLimit</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oEndLimit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Flange End Limit.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEndLimit</tt>
   <dd>     EndLimit
 Gets the Flange End Limit.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetFlangeStartLimit"></a><a name="GetFlangeStartLimit(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetFlangeStartLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFlangeStartLimit</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oStartLimit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Flange Start Limit. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartLimit</tt>
   <dd>     StartLimit
 Gets the Flange Start Limit.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetFlangeWidth"></a><a name="GetFlangeWidth(CATICkeParm_var&amp;)"></a> <dt> o <b>GetFlangeWidth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFlangeWidth</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oWidth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Flange Width. (@see CATICkeParm)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWidth</tt>
   <dd>     Width
 Valuate the Flange Width as per required. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetOperatedPlate"></a><a name="GetOperatedPlate(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetOperatedPlate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOperatedPlate</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ospOperatedPlate</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the operated plate on which flange is created. Either SfdPlate or SddPlate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOperatedPlate</tt>
   <dd>     Operated Plate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetStartEndCutAngle"></a><a name="GetStartEndCutAngle(CATICkeParm_var&amp;)"></a> <dt> o <b>GetStartEndCutAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStartEndCutAngle</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oStartEndCutAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Start EndCut Angle. (@see CATICkeParm) 
 Always counted from the vertical edge of the flange.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartEndCutAngle</tt>
   <dd>     StartEndCutAngle
 Valuate the Start EndCut Angle as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetStartEndCutDistance"></a><a name="GetStartEndCutDistance(CATICkeParm_var&amp;)"></a> <dt> o <b>GetStartEndCutDistance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStartEndCutDistance</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oStartEndCutDistance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Start EndCut Distance. (@see CATICkeParm)
 Distance from the free edge to position the end cut. Distance should not be greater than flange width.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartEndCutDistance</tt>
   <dd>     StartEndCutDistance
 Valuate the Start EndCut Distance as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetStartEndCutOffset"></a><a name="GetStartEndCutOffset(CATICkeParm_var&amp;)"></a> <dt> o <b>GetStartEndCutOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStartEndCutOffset</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oStartEndCutOffset</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Start EndCut Offset. (@see CATICkeParm)
 Offset to apply from the extremity of the edge.
 Positive offset stretches the flange and negative offset shrinks the flange.
 A flange can not extended beyond the limit of the selected edge.
 If a user has not applied a limit, then a positive offset would not have impact of the flange result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartEndCutOffset</tt>
   <dd>     StartEndCutOffset
 Valuate the Start EndCut Offset as per required. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetStartEndCutRadius"></a><a name="GetStartEndCutRadius(CATICkeParm_var&amp;)"></a> <dt> o <b>GetStartEndCutRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStartEndCutRadius</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oStartEndCutRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Start EndCut Radius. (@see CATICkeParm)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartEndCutRadius</tt>
   <dd>     StartEndCutRadius
 Valuate the Start EndCut Radius as per required.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetType"></a><a name="GetType(CATStrFlangeType&amp;)"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetType</b>(<td><script type="text/javascript"> activateLink('CATStrFlangeType','CATStrFlangeType&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Type of flange. (@see CATStrFlangeType)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>     Type
 Gets the Flange Type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="GetWidthMeasurementType"></a><a name="GetWidthMeasurementType(CATStrFlangeWidthMeasurementType&amp;)"></a> <dt> o <b>GetWidthMeasurementType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetWidthMeasurementType</b>(<td><script type="text/javascript"> activateLink('CATStrFlangeWidthMeasurementType','CATStrFlangeWidthMeasurementType&amp;')</script> <td><tt>oWidthMeasurementType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the Width Measurement Type. (@see CATStrFlangeWidthMeasurementType)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWidthMeasurementType</tt>
   <dd>     WidthMeasurementType
 Gets Flange Width Measurement Type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="SetEdges"></a><a name="SetEdges(CATLISTV(CATIMmiMechanicalFeature_var)&amp;)"></a> <dt> o <b>SetEdges</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetEdges</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATIMmiMechanicalFeature_var)','CATLISTV(CATIMmiMechanicalFeature_var)&amp;')</script> <td><tt>iListOfLimits</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the Edges for Flange creation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfLimits</tt>
   <dd>     iListOfLimits
 Sets the Edges.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="SetFlangeEndLimit"></a><a name="SetFlangeEndLimit(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>SetFlangeEndLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFlangeEndLimit</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iEndLimit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the Flange End Limit. This section is optional. The user may or may not define limits.
 The user can select planes or surfaces to limit the flange. 
 Those limits should intersect the edge selected to become a limit.
 The limits could be Member, Stiffener, StiffenerOnFreeEdge, Plane, Edge or Sketch.
 For SfdFlange, limit could be SfdPlate.
 For SddFlange, limit could be SddPlate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEndLimit</tt>
   <dd>     EndLimit
 Sets the Flange End Limit.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="SetFlangeStartLimit"></a><a name="SetFlangeStartLimit(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>SetFlangeStartLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFlangeStartLimit</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iStartLimit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the Flange Start Limit. This section is optional. The user may or may not define limits.
 The user can select planes or surfaces to limit the flange.
 Those limits should intersect the edge selected to become a limit.
 The limits could be Member, Stiffener, StiffenerOnFreeEdge, Plane, Edge or Sketch.
 For SfdFlange, limit could be SfdPlate.
 For SddFlange, limit could be SddPlate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartLimit</tt>
   <dd>     StartLimit
 Sets the Flange Start Limit.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="SetType"></a><a name="SetType(CATStrFlangeType)"></a> <dt> o <b>SetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetType</b>(<td><script type="text/javascript"> activateLink('CATStrFlangeType','CATStrFlangeType')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the Type of flange. (@see CATStrFlangeType)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>     Type
 iType - 1 - Centered
 iType - 2 - Tangent
 Sets the Flange Type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="SetWidthMeasurementType"></a><a name="SetWidthMeasurementType(CATStrFlangeWidthMeasurementType)"></a> <dt> o <b>SetWidthMeasurementType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetWidthMeasurementType</b>(<td><script type="text/javascript"> activateLink('CATStrFlangeWidthMeasurementType','CATStrFlangeWidthMeasurementType')</script> <td><tt>iWidthMeasurementType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the Width Measurement Type. (@see CATStrFlangeWidthMeasurementType)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWidthMeasurementType</tt>
   <dd>     WidthMeasurementType
 iWidthMeasurementType - 1 - FlangeWidthToInnerFace 
 iWidthMeasurementType - 2 - FlangeWidthToOuterFace
 iWidthMeasurementType - 3 - FlangeWidthToNeutralFibre (Not implemented)
 Sets Flange Width Measurement Type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<a name="Update"></a><a name="Update()"></a> <dt> o <b>Update</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Update</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Updates the Flanges Created.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    Returns code of function. S_OK if everything ran ok.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIStrUseFlange.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATStrUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

