<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrUseItf Interface CATIStrUseProfileLimitMngt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrUseItf.htm" href="../CATStrUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIStrUseProfileLimitMngt"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATStrUseItf Interface CATIStrUseProfileLimitMngt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIStrUseProfileLimitMngt_43547','CATIStrUseProfileLimitMngt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIStrUseProfileLimitMngt</b>
</p>
<p>
<b><i> Interface to manage limits of the SFD/SDD Profile.</i></b><br>

 <b>Role</b>: Interface to manage SFD/SDD limits for Profile. When a limit is
 specified with SetLimitingObject(), a default ShortPoint endcut is created at the
 elected extremity. when a limit is removed, the endcut is removed as well. However,
 you can specify a non-contextual endcut, ie, an endcut before applying a limit.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ExplicitLimits(CATStrProfileExtremity)"><b>ExplicitLimits</b></a>(CATStrProfileExtremity)
<dd>  In case the profile support is a Panel/Plate(s), it will set the limit ancestor of the DelimitedMoldedSurface edge stopping the CanonicTrace as a limit.
 <dt> o 
    <a href="#GetLimitType(CATStrProfileExtremity,CATStrProfileLimitType&amp;)"><b>GetLimitType</b></a>(CATStrProfileExtremity,CATStrProfileLimitType&amp;)
<dd> 		Get the type of the limit applied on the Profile.
 <dt> o 
    <a href="#GetLimitingObject(CATStrProfileExtremity,CATIMmiMechanicalFeature_var&amp;)"><b>GetLimitingObject</b></a>(CATStrProfileExtremity,CATIMmiMechanicalFeature_var&amp;)
<dd>  Set a feature selected by the user on the extremity
 
 <dt> o 
    <a href="#GetOffset(CATStrProfileExtremity,CATICkeParm_var&amp;)"><b>GetOffset</b></a>(CATStrProfileExtremity,CATICkeParm_var&amp;)
<dd> 		Get the limit offset
   
 <dt> o 
    <a href="#InvertProfile()"><b>InvertProfile</b></a>()
<dd> 		Invert the definition of the start and end for the selected profile.
 <dt> o 
    <a href="#RemoveLimit(CATStrProfileExtremity)"><b>RemoveLimit</b></a>(CATStrProfileExtremity)
<dd> 		Remove the limit associated to the extremity.
 <dt> o 
    <a href="#SetLimitType(CATStrProfileExtremity,CATStrProfileLimitType)"><b>SetLimitType</b></a>(CATStrProfileExtremity,CATStrProfileLimitType)
<dd> 		Set the type of the limit applied on the Profile.
 <dt> o 
    <a href="#SetLimitingObject(CATStrProfileExtremity,CATIMmiMechanicalFeature_var&amp;)"><b>SetLimitingObject</b></a>(CATStrProfileExtremity,CATIMmiMechanicalFeature_var&amp;)
<dd>  Set a feature selected by the user on the extremity
 
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ExplicitLimits"></a><a name="ExplicitLimits(CATStrProfileExtremity)"></a> <dt> o <b>ExplicitLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ExplicitLimits</b>(<td> const <script type="text/javascript"> activateLink('CATStrProfileExtremity','CATStrProfileExtremity')</script> <td><tt>iExtr</tt><td><tt>= catStrProfileExtremityUndefined</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 In case the profile support is a Panel/Plate(s), it will set the limit ancestor of the DelimitedMoldedSurface edge stopping the CanonicTrace as a limit.
 It sets the extremum limits only, so let's imagine the supporting Plate is concave with a U shape and the Stiffener crosses the concavity, the explicited limits are the two
 vertical Plate limits at both extremes. So the Stiffener can cross the "hole" in SDD.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtr</tt>
   <dd>   Extremity of the Profile that will be set with the Plate limit. If iExtr=catStrProfileExtremityUndefined, we reset both extremities.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitType"></a><a name="GetLimitType(CATStrProfileExtremity,CATStrProfileLimitType&amp;)"></a> <dt> o <b>GetLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitType</b>(<td> const <script type="text/javascript"> activateLink('CATStrProfileExtremity','CATStrProfileExtremity')</script> <td><tt>iExtr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATStrProfileLimitType','CATStrProfileLimitType&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
		Get the type of the limit applied on the Profile.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtr</tt>
   <dd>      Extremity of the Profile.
			If iExtr == 1 : Start extremity.
			If iExtr == 2 : End extremity.
   </dd>
    <dt><tt> oType</tt>
   <dd>      the Cke Parameter associated to the offset</dd>
</dl>
</dl>
</dl>
<a name="GetLimitingObject"></a><a name="GetLimitingObject(CATStrProfileExtremity,CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetLimitingObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitingObject</b>(<td> const <script type="text/javascript"> activateLink('CATStrProfileExtremity','CATStrProfileExtremity')</script> <td><tt>iExtr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oLimitingObject</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Set a feature selected by the user on the extremity
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtr</tt>
   <dd>      Extremity of the Profile where to Set the Limiting Object.
			If iExtr == 1 : Start extremity.
			If iExtr == 2 : End extremity.
 </dd>
    <dt><tt> oLimitingObject</tt>
   <dd>      the feature to be set on the extremity.
     Can be a geometric curves, surfaces or a SFD Profile, or a SFD Panel.
			The exported feature is retrieved if possible, otherwise the import.</dd>
</dl>
</dl>
</dl>
<a name="GetOffset"></a><a name="GetOffset(CATStrProfileExtremity,CATICkeParm_var&amp;)"></a> <dt> o <b>GetOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOffset</b>(<td> const <script type="text/javascript"> activateLink('CATStrProfileExtremity','CATStrProfileExtremity')</script> <td><tt>iExtr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ospOffset</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
		Get the limit offset
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtr</tt>
   <dd>       Extremity of the Profile.
			If iExtr == 1 : Start extremity.
			If iExtr == 2 : End extremity.
   </dd>
    <dt><tt> ospOffset</tt>
   <dd>      the Cke Parameter associated to the offset</dd>
</dl>
</dl>
</dl>
<a name="InvertProfile"></a><a name="InvertProfile()"></a> <dt> o <b>InvertProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InvertProfile</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
		Invert the definition of the start and end for the selected profile.
</dl>
<a name="RemoveLimit"></a><a name="RemoveLimit(CATStrProfileExtremity)"></a> <dt> o <b>RemoveLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveLimit</b>(<td> const <script type="text/javascript"> activateLink('CATStrProfileExtremity','CATStrProfileExtremity')</script> <td><tt>iExtr</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
		Remove the limit associated to the extremity.
		Remove the Limit + EndCut.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtr</tt>
   <dd>      Extremity of the Profile.
			If iExtr == 1 : Start extremity.
			If iExtr == 2 : End extremity.</dd>
</dl>
</dl>
</dl>
<a name="SetLimitType"></a><a name="SetLimitType(CATStrProfileExtremity,CATStrProfileLimitType)"></a> <dt> o <b>SetLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLimitType</b>(<td> const <script type="text/javascript"> activateLink('CATStrProfileExtremity','CATStrProfileExtremity')</script> <td><tt>iExtr</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATStrProfileLimitType','CATStrProfileLimitType')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
		Set the type of the limit applied on the Profile. This info is just captured
   at the support level and then realized at the Profile level in SDD.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtr</tt>
   <dd>      Extremity of the Profile.
			If iExtr == 1 : Start extremity.
			If iExtr == 2 : End extremity.
   </dd>
    <dt><tt> iType</tt>
   <dd>      </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATStrProfileLimitType','','CATStrProfileLimitType') </script>
</dl>
</dl>
<a name="SetLimitingObject"></a><a name="SetLimitingObject(CATStrProfileExtremity,CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>SetLimitingObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLimitingObject</b>(<td> const <script type="text/javascript"> activateLink('CATStrProfileExtremity','CATStrProfileExtremity')</script> <td><tt>iExtr</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iLimitingObject</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set a feature selected by the user on the extremity
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtr</tt>
   <dd>    Extremity of the Profile where to Set the Limiting Object .
			If iExtr == 1 : Start extremity.
			If iExtr == 2 : End extremity.
 </dd>
    <dt><tt> iLimitingObject</tt>
   <dd>    The feature to be set on the extremity.
			Cannot be used to unset or remove the limit. iLimitingObject can not be null.
     Can be a geometric curves, surfaces or a SFD Profile, or a SFD Panel.
			The import is managed by the implementation.
			Cannot be used to unset or remove the limit. ispLimit can not be null.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIStrUseProfileLimitMngt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATStrUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

