<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrUseItf Interface CATISddUseSupportPlateMngt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrUseItf.htm" href="../CATStrUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrUseItf";	}
		function getCurrentObjectName() { 
 	return "CATISddUseSupportPlateMngt"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATStrUseItf Interface CATISddUseSupportPlateMngt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISddUseSupportPlateMngt_43801','CATISddUseSupportPlateMngt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISddUseSupportPlateMngt</b>
</p>
<p>
<b><i> This interface, for use in SDD only, allows the definition of
 additional plates (not the reference plate) as support of a
 stiffener or stiffener on free edge.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddOtherSupportPlate(CATISddUsePlate_var&amp;,CATISddUseProductPlate_var&amp;,CATISddUseProductFunction_var&amp;)"><b>AddOtherSupportPlate</b></a>(CATISddUsePlate_var&amp;,CATISddUseProductPlate_var&amp;,CATISddUseProductFunction_var&amp;)
<dd>  Adds an secondary support plate.
 <dt> o 
    <a href="#GetOtherSupportPlates(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"><b>GetOtherSupportPlates</b></a>(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Gets the secondary support plates.
 <dt> o 
    <a href="#GetReferenceSupportPlate(CATISddUsePlate_var&amp;,CATISddUseProductPlate_var&amp;)"><b>GetReferenceSupportPlate</b></a>(CATISddUsePlate_var&amp;,CATISddUseProductPlate_var&amp;)
<dd>  Gets the reference plate import on which the stiffener is attached to.
 <dt> o 
    <a href="#PromoteToReferencePlate(int)"><b>PromoteToReferencePlate</b></a>(int)
<dd>  Promotes a secondary support plate to reference and moves the previous reference plate to the list of secondary support plates.
 <dt> o 
    <a href="#RemoveOtherSupportPlate(int)"><b>RemoveOtherSupportPlate</b></a>(int)
<dd>  Removes an secondary support Plate.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddOtherSupportPlate"></a><a name="AddOtherSupportPlate(CATISddUsePlate_var&amp;,CATISddUseProductPlate_var&amp;,CATISddUseProductFunction_var&amp;)"></a> <dt> o <b>AddOtherSupportPlate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddOtherSupportPlate</b>(<td> const <script type="text/javascript"> activateLink('CATISddUsePlate_var','CATISddUsePlate_var&amp;')</script> <td><tt>ispPlate</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISddUseProductPlate_var','CATISddUseProductPlate_var&amp;')</script> <td><tt>ispPlateProduct</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISddUseProductFunction_var','CATISddUseProductFunction_var&amp;')</script> <td><tt>ispContextProduct</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds an secondary support plate.
 The secondary plate's delimited support must be included in the reference plate's unlimited support, but it is not checked.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispPlate</tt>
   <dd> [in]   The additional plate feature.
 </dd>
    <dt><tt> ispPlateProduct</tt>
   <dd> [in]   The additional plate product (occurrence).
 </dd>
    <dt><tt> ispContextProduct</tt>
   <dd> [in]   The stiffener product in which the current stiffener is.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.
</dl>
</dl>
<a name="GetOtherSupportPlates"></a><a name="GetOtherSupportPlates(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetOtherSupportPlates</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOtherSupportPlates</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListOfOtherPlates</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListOfOtherPlateProducts</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the secondary support plates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfOtherPlates</tt>
   <dd> [out]   List of other plate features.
 </dd>
    <dt><tt> oListOfOtherPlateProducts</tt>
   <dd> [out]   List of other plate products (occurrences).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.
</dl>
</dl>
<a name="GetReferenceSupportPlate"></a><a name="GetReferenceSupportPlate(CATISddUsePlate_var&amp;,CATISddUseProductPlate_var&amp;)"></a> <dt> o <b>GetReferenceSupportPlate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReferenceSupportPlate</b>(<td><script type="text/javascript"> activateLink('CATISddUsePlate_var','CATISddUsePlate_var&amp;')</script> <td><tt>ospPlate</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISddUseProductPlate_var','CATISddUseProductPlate_var&amp;')</script> <td><tt>ospPlateProduct</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the reference plate import on which the stiffener is attached to.
 In the case where a stiffener has multiple plates as support, its section is positioned
 with respect to the reference plate. Other plates should have their delimited support
 included in the reference plate's unlimited support, but it is not checked by the system.
 Note that there is no SetReferenceSupportPlate as it is defined when setting the stiffener's support.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospPlate</tt>
   <dd> [out]   The reference plate feature.
 </dd>
    <dt><tt> ospPlateProduct</tt>
   <dd> [out]   The reference plate product (occurrence).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.
</dl>
</dl>
<a name="PromoteToReferencePlate"></a><a name="PromoteToReferencePlate(int)"></a> <dt> o <b>PromoteToReferencePlate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>PromoteToReferencePlate</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Promotes a secondary support plate to reference and moves the previous reference plate to the list of secondary support plates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> [in]   The index of the secondary plate to promote, starting from 1, in the order given by #GetOtherSupportPlates.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.
</dl>
</dl>
<a name="RemoveOtherSupportPlate"></a><a name="RemoveOtherSupportPlate(int)"></a> <dt> o <b>RemoveOtherSupportPlate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveOtherSupportPlate</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes an secondary support Plate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> [in]   The index of the secondary plate to remove, starting from 1, in the order given by #GetOtherSupportPlates.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISddUseSupportPlateMngt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATStrUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

