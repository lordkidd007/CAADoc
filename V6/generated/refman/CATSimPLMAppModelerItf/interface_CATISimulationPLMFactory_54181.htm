<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSimPLMAppModelerItf Interface CATISimulationPLMFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATSimPLMAppModelerItf.htm" href="../CATSimPLMAppModelerItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATSimPLMAppModelerItf";	}
		function getCurrentObjectName() { 
 	return "CATISimulationPLMFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATSimPLMAppModelerItf Interface CATISimulationPLMFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISimulationPLMFactory_54181','CATISimulationPLMFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISimulationPLMFactory</b>
</p>
<p>
<b><i> Returns a pointer on the Simulation Factory by using CATGetSimulationFactory() method
 of CATGetSimulationFactory interface.</i></b><br>

</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateApplicativeSimulation(CATUnicodeString&amp;,CATUnicodeString&amp;,CATIAdpEnvironment*,CATBaseUnknown*,CATISimulationPLMManager*&amp;)"><b>CreateApplicativeSimulation</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATIAdpEnvironment*,CATBaseUnknown*,CATISimulationPLMManager*&amp;)
<dd>  Allows application to create Simulation Object Reference with attached Categories and Representations.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateApplicativeSimulation"></a><a name="CreateApplicativeSimulation(CATUnicodeString&amp;,CATUnicodeString&amp;,CATIAdpEnvironment*,CATBaseUnknown*,CATISimulationPLMManager*&amp;)"></a> <dt> o <b>CreateApplicativeSimulation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateApplicativeSimulation</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSimulationName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSimulationAppKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpEnvironment','CATIAdpEnvironment*')</script> <td><tt>ipiEnv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iContext</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISimulationPLMManager','CATISimulationPLMManager*&amp;')</script> <td><tt>opiSimulation</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Allows application to create Simulation Object Reference with attached Categories and Representations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSimulationName</tt>
   <dd>    Identifier to be set on the simulation. 
 </dd>
    <dt><tt> iSimulationAppKey</tt>
   <dd>    The keyword of the simulation you want to create :	
     For Design simulation, use SMAFeaPLMNewSimu.
     For Multiphysic simulation, use SMAFeaPLMNewSimuEx.
     For Manufacturing simulation, use DELPLMSimulation.
     For Production simulation, use DELPSSSimulation.
     For Kinematics simulation, use CATKinPLMNew.
     For  Logical simulation, use CATELogicalSimulationPLMNew.
     For  Functional simulation, use CATEFunctionalSimulationPLMNew.
     For  Behavior simulation, use CATESysBehaviorLibSimulationPLMNew.
     For  Life Sciences simulation, use CATBioSysPLMNew_SimuDeterministic.
 </dd>
    <dt><tt> ipiEnv</tt>
   <dd>	   The environment set for the current simulation.This argument can be NULL, in which case the the current environement will be used.
 </dd>
    <dt><tt> iContext</tt>
   <dd>	   The list of Products to be aggregated in the Context category.
 </dd>
    <dt><tt> opiSimulation</tt>
   <dd>  [out , CATBaseUnknown#Release]    The pointer on the new created simulation.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISimulationPLMFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSimPLMAppModelerItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

