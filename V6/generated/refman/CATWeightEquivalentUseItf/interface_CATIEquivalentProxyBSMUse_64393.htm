<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATWeightEquivalentUseItf Interface CATIEquivalentProxyBSMUse</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATWeightEquivalentUseItf.htm" href="../CATWeightEquivalentUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATWeightEquivalentUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIEquivalentProxyBSMUse"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATWeightEquivalentUseItf Interface CATIEquivalentProxyBSMUse</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIEquivalentProxyBSMUse_64393','CATIEquivalentProxyBSMUse','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIEquivalentProxyBSMUse</b>
</p>
<p>
<b><i> Interface representing a bridge from the product reference to weight values.</i></b><br>

 Components that implement CATIEquivalentProxyBSMUse are PCCMemVPMReference and BSMReference
 <p>

 <dl>
  <dt> Example: </dt>
  <dd> <pre class="code">  // example that retrieves a mass previously declared on a product reference
  consider a (CATIPLMNavReference*):  myReference
  CATIEquivalentProxyBSMUse * myBridge = NULL;
  HRESULT hRC = myReference-&gt;QueryInterface(IID_CATIEquivalentProxyBSMUse,
                                     (void**) &amp;myBridge);
  if (SUCCEEDED(hRC))
  {
     CATIDeclaredEquivalent * declaredEquivalent = NULL ;
     hRC = myBSMExt-&gt;RetrieveDeclaredExt(declaredEquivalent) ;
     if (SUCCEEDED(hRC))
     {
         double myMasse = 0. ;
         declaredEquivalent-&gt;GetMass(myMasse) ;

         declaredEquivalent-&gt;Release() ;
         declaredEquivalent = NULL ;
     }
     myBSMExt-&gt;Release() ;
     myBSMExt = NULL ;
  }
</pre></dd>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateOrRetrieveDeclaredInertiaExtension(CATIDeclaredEquivalentUse*&amp;,int)"><b>CreateOrRetrieveDeclaredInertiaExtension</b></a>(CATIDeclaredEquivalentUse*&amp;,int)
<dd>   Permits to create/get a pointer on the declared inertia values associated to itself.
 <dt> o 
    <a href="#CreateOrRetrieveDeclaredWeightExtension(CATIPLMNavOccurrence*,CATIDeclaredWeightEquivalentUse*&amp;,int)"><b>CreateOrRetrieveDeclaredWeightExtension</b></a>(CATIPLMNavOccurrence*,CATIDeclaredWeightEquivalentUse*&amp;,int)
<dd>   Permits to get a pointer on the declared weight values associated to itself.
 <dt> o 
    <a href="#RetrieveComputedExtension(CATIComputedEquivalentUse*&amp;,int)"><b>RetrieveComputedExtension</b></a>(CATIComputedEquivalentUse*&amp;,int)
<dd>   Permits to get a pointer on the computed weight and inertia values associated to itself.
 <dt> o 
    <a href="#RetrieveDeclaredInertiaExtension(CATIDeclaredEquivalentUse*&amp;)"><b>RetrieveDeclaredInertiaExtension</b></a>(CATIDeclaredEquivalentUse*&amp;)
<dd>   Permits to get a pointer on the declared inertia values associated to itself.
 <dt> o 
    <a href="#RetrieveDeclaredWeightExtension(CATIPLMNavOccurrence*,CATIDeclaredWeightEquivalentUse*&amp;)"><b>RetrieveDeclaredWeightExtension</b></a>(CATIPLMNavOccurrence*,CATIDeclaredWeightEquivalentUse*&amp;)
<dd>   
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateOrRetrieveDeclaredInertiaExtension"></a><a name="CreateOrRetrieveDeclaredInertiaExtension(CATIDeclaredEquivalentUse*&amp;,int)"></a> <dt> o <b>CreateOrRetrieveDeclaredInertiaExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateOrRetrieveDeclaredInertiaExtension</b>(<td><script type="text/javascript"> activateLink('CATIDeclaredEquivalentUse','CATIDeclaredEquivalentUse*&amp;')</script> <td><tt>oDeclaredEquivalent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iForceCreation</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  Permits to create/get a pointer on the declared inertia values associated to itself.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDeclaredEquivalent</tt>
   <dd> [out, CATBaseUnknown#Release]    The declared inertia values (CoG, inertia matrix)
  </dd>
    <dt><tt> iForceCreation</tt>
   <dd>  [in] iForceCreation equal to 0 - the declared equivalent given is the one that already exist; if nothing exist, we do not force any creation
  [in] iForceCreation equal to 1 - if no declared equivalent prealably exists, we force the creation of a declared inertia equivalent
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="CreateOrRetrieveDeclaredWeightExtension"></a><a name="CreateOrRetrieveDeclaredWeightExtension(CATIPLMNavOccurrence*,CATIDeclaredWeightEquivalentUse*&amp;,int)"></a> <dt> o <b>CreateOrRetrieveDeclaredWeightExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateOrRetrieveDeclaredWeightExtension</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iMyContext</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDeclaredWeightEquivalentUse','CATIDeclaredWeightEquivalentUse*&amp;')</script> <td><tt>oDeclaredEquivalent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iForceCreation</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  Permits to get a pointer on the declared weight values associated to itself.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMyContext</tt>
   <dd>  [in] The occurrence on which we retrieve the declared weight extension
  </dd>
    <dt><tt> oDeclaredEquivalent</tt>
   <dd> [out, CATBaseUnknown#Release]  The declared weight values
  </dd>
    <dt><tt> iForceCreation</tt>
   <dd>  [in] iForceCreation equal to 0 - the declared equivalent given is the one that already exist; if nothing exist, we do not force any creation
  [in] iForceCreation equal to 1 - if no declared equivalent prealably exists, we force the creation of a declared weight equivalent
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="RetrieveComputedExtension"></a><a name="RetrieveComputedExtension(CATIComputedEquivalentUse*&amp;,int)"></a> <dt> o <b>RetrieveComputedExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RetrieveComputedExtension</b>(<td><script type="text/javascript"> activateLink('CATIComputedEquivalentUse','CATIComputedEquivalentUse*&amp;')</script> <td><tt>oComputedEquivalent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iTryAnUpdate</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  Permits to get a pointer on the computed weight and inertia values associated to itself.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oComputedEquivalent</tt>
   <dd> [out, CATBaseUnknown#Release]    The computed weight values
  </dd>
    <dt><tt> iTryAnUpdate</tt>
   <dd>  [in] iTryAnUpdate=0 will give the weight value without relaunching a computation
  [in] iTryAnUpdate=1 will relaunch a weight synthesis without computing the values on terminal nodes
  [in] iTryAnUpdate=2 will relaunch a weight synthesis with prealably computing the values on terminal nodes
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="RetrieveDeclaredInertiaExtension"></a><a name="RetrieveDeclaredInertiaExtension(CATIDeclaredEquivalentUse*&amp;)"></a> <dt> o <b>RetrieveDeclaredInertiaExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RetrieveDeclaredInertiaExtension</b>(<td><script type="text/javascript"> activateLink('CATIDeclaredEquivalentUse','CATIDeclaredEquivalentUse*&amp;')</script> <td><tt>oDeclaredEquivalent</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  Permits to get a pointer on the declared inertia values associated to itself.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDeclaredEquivalent</tt>
   <dd> [out, CATBaseUnknown#Release]    The declared inertia values (CoG, inertia matrix)
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<a name="RetrieveDeclaredWeightExtension"></a><a name="RetrieveDeclaredWeightExtension(CATIPLMNavOccurrence*,CATIDeclaredWeightEquivalentUse*&amp;)"></a> <dt> o <b>RetrieveDeclaredWeightExtension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RetrieveDeclaredWeightExtension</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iMyContext</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDeclaredWeightEquivalentUse','CATIDeclaredWeightEquivalentUse*&amp;')</script> <td><tt>oDeclaredEquivalent</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V6R2013x
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMyContext</tt>
   <dd>  [in] The occurrence on which we retrieve the declared weight extension
  </dd>
    <dt><tt> oDeclaredEquivalent</tt>
   <dd> [out, CATBaseUnknown#Release]   The declared weight values
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> If the operation is failed.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEquivalentProxyBSMUse.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATWeightEquivalentUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

