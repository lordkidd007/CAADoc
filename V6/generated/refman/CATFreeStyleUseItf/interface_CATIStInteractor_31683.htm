<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFreeStyleUseItf Interface CATIStInteractor</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFreeStyleUseItf.htm" href="../CATFreeStyleUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFreeStyleUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIStInteractor"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFreeStyleUseItf Interface CATIStInteractor</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIStInteractor_31683','CATIStInteractor','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIStInteractor</b>
</p>
<p>
<b><i> Class defining basic behaviors for a control points mesh.</i></b><br>

 <br><b>Role</b>:  Create the factory with the global function <tt>CATCreateStInteractiveFactory</tt>
 <li> Use it to create a dedicated <tt>CATCommand</tt>
 <li> When it is not needed anymore:
 <li> Call CATIStInteractor#CleanDependencies() method,
 <li> then call CATCommand#RequestDelayedDestruction() method.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CleanDependencies()"><b>CleanDependencies</b></a>()
<dd>   Method to clean this interactor synchronously.
 <dt> o 
    <a href="#Disable(CATCommand*,CATNotification*)"><b>Disable</b></a>(CATCommand*,CATNotification*)
<dd>  Deactivates a command.
 <dt> o 
    <a href="#Enable(CATCommand*,CATNotification*)"><b>Enable</b></a>(CATCommand*,CATNotification*)
<dd>  Activates a command.
 <dt> o 
    <a href="#SetRefreshMethod(CATBaseUnknown_var&amp;,CATIStRefresh_var&amp;)"><b>SetRefreshMethod</b></a>(CATBaseUnknown_var&amp;,CATIStRefresh_var&amp;)
<dd>   Method to complete refresh after a model change.
 <dt> o 
    <a href="#SetShowMode(CATBoolean)"><b>SetShowMode</b></a>(CATBoolean)
<dd>   Method to set the visibility of the interactor.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CleanDependencies"></a><a name="CleanDependencies()"></a> <dt> o <b>CleanDependencies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CleanDependencies</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Method to clean this interactor synchronously.
 <li> This method must be used before calling CATCommand#RequestDelayedDestruction() method.
</dl>
<a name="Disable"></a><a name="Disable(CATCommand*,CATNotification*)"></a> <dt> o <b>Disable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Disable</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iFromClient</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotification</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Deactivates a command.
 <li> Called by the command owner to temporarily withdraw the focus from the command.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFromClient</tt>
   <dd>   The command that requests to deactivate the current one.
 </dd>
    <dt><tt> iNotification</tt>
   <dd>   The notification sent.</dd>
</dl>
</dl>
</dl>
<a name="Enable"></a><a name="Enable(CATCommand*,CATNotification*)"></a> <dt> o <b>Enable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Enable</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iFromClient</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotification</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Activates a command.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFromClient</tt>
   <dd>   The command that requests to activate the current one.
 </dd>
    <dt><tt> iNotification</tt>
   <dd>   The notification sent.</dd>
</dl>
</dl>
</dl>
<a name="SetRefreshMethod"></a><a name="SetRefreshMethod(CATBaseUnknown_var&amp;,CATIStRefresh_var&amp;)"></a> <dt> o <b>SetRefreshMethod</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRefreshMethod</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpecModel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIStRefresh_var','CATIStRefresh_var&amp;')</script> <td><tt>iRefreshMethod</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Method to complete refresh after a model change.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpecModel</tt>
   <dd>   A CATISpecObject_var object representing the model.
 </dd>
    <dt><tt> iSpecModel</tt>
   <dd>   A CATISpecObject_var object representing the model.</dd>
</dl>
</dl>
</dl>
<a name="SetShowMode"></a><a name="SetShowMode(CATBoolean)"></a> <dt> o <b>SetShowMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetShowMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iShowMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Method to set the visibility of the interactor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShowMode</tt>
   <dd>   A CATBoolean representing the show status (CATTrue: visible, CATFalse: hiden).</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIStInteractor.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFreeStyleUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

