<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DELPPRSystemItf Interface DELIPPRSystemOccAuth</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DELPPRSystemItf.htm" href="../DELPPRSystemItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DELPPRSystemItf";	}
		function getCurrentObjectName() { 
 	return "DELIPPRSystemOccAuth"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DELPPRSystemItf Interface DELIPPRSystemOccAuth</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIPPRSystemOccAuth_33021','DELIPPRSystemOccAuth','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>DELIPPRSystemOccAuth</b>
</p>
<p>
<b><i> Interface to manage System Occurrences.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#FromOccurrenceToPathOfInstances(CATIPLMNavOccurrence*,CATListPtrCATIPLMNavInstance&amp;)"><b>FromOccurrenceToPathOfInstances</b></a>(CATIPLMNavOccurrence*,CATListPtrCATIPLMNavInstance&amp;)
<dd>  Computes the path of instances corresponding to a given occurrence.
 <dt> o 
    <a href="#GetOccurrence(CATIPLMNavOccurrence*,CATListPtrCATIPLMNavInstance&amp;,CATIPLMNavOccurrence*&amp;)"><b>GetOccurrence</b></a>(CATIPLMNavOccurrence*,CATListPtrCATIPLMNavInstance&amp;,CATIPLMNavOccurrence*&amp;)
<dd>  Computes an occurrence corresponding to a given path of instances in a given context.
 <dt> o 
    <a href="#GetOrCreateRootOccurrence(CATIPLMNavReference*,CATIPLMNavOccurrence*&amp;)"><b>GetOrCreateRootOccurrence</b></a>(CATIPLMNavReference*,CATIPLMNavOccurrence*&amp;)
<dd>  Computes the root occurrence corresponding to a given root reference.
 <dt> o 
    <a href="#Synchronize(CATIPLMNavOccurrence*)"><b>Synchronize</b></a>(CATIPLMNavOccurrence*)
<dd>  Synchronizes an occurrence tree with respect to the model events stored in the current transaction.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="FromOccurrenceToPathOfInstances"></a><a name="FromOccurrenceToPathOfInstances(CATIPLMNavOccurrence*,CATListPtrCATIPLMNavInstance&amp;)"></a> <dt> o <b>FromOccurrenceToPathOfInstances</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FromOccurrenceToPathOfInstances</b>(<td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iOccurrence</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATIPLMNavInstance','CATListPtrCATIPLMNavInstance&amp;')</script> <td><tt>oPathOfInstances</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Computes the path of instances corresponding to a given occurrence.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOccurrence</tt>
   <dd>      The occurrence.
  </dd>
    <dt><tt> oPathOfInstances</tt>
   <dd>      The computed path of instances.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the methods succeeds and the occurrence has been retrieved. <br>
      <code>E_INVALIDARG</code> if provided arguments are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="GetOccurrence"></a><a name="GetOccurrence(CATIPLMNavOccurrence*,CATListPtrCATIPLMNavInstance&amp;,CATIPLMNavOccurrence*&amp;)"></a> <dt> o <b>GetOccurrence</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOccurrence</b>(<td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iRootOccurrence</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListPtrCATIPLMNavInstance','CATListPtrCATIPLMNavInstance&amp;')</script> <td><tt>iPathOfInstances</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*&amp;')</script> <td><tt>oOccurrence</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Computes an occurrence corresponding to a given path of instances in a given context.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootOccurrence</tt>
   <dd>      The context : a root occurrence.
  </dd>
    <dt><tt> iPathOfInstances</tt>
   <dd>      The path of instances.
  </dd>
    <dt><tt> oOccurrence</tt>
   <dd>      The computed occurrence.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the methods succeeds and the occurrence has been retrieved. <br>
      <code>E_INVALIDARG</code> if provided arguments are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="GetOrCreateRootOccurrence"></a><a name="GetOrCreateRootOccurrence(CATIPLMNavReference*,CATIPLMNavOccurrence*&amp;)"></a> <dt> o <b>GetOrCreateRootOccurrence</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOrCreateRootOccurrence</b>(<td> const <script type="text/javascript"> activateLink('CATIPLMNavReference','CATIPLMNavReference*')</script> <td><tt>iRootReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*&amp;')</script> <td><tt>oRootOccurrence</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Computes the root occurrence corresponding to a given root reference.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootReference</tt>
   <dd>      A root reference.
  </dd>
    <dt><tt> oRootOccurrence</tt>
   <dd>      The computed root occurrence
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the methods succeeds and the root occurrence has been retrieved. <br>
      <code>E_INVALIDARG</code> if provided arguments are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="Synchronize"></a><a name="Synchronize(CATIPLMNavOccurrence*)"></a> <dt> o <b>Synchronize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Synchronize</b>(<td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iRootOccurrence</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Synchronizes an occurrence tree with respect to the model events stored in the current transaction.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootOccurrence</tt>
   <dd>      The root occurrence.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the synchronization succeeds. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<hr>
 This object is included in the file: <b>DELIPPRSystemOccAuth.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DELPPRSystemItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

