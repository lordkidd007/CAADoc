<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DELPPRSystemItf Interface DELIPPRSystemTimeConstrAuth</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DELPPRSystemItf.htm" href="../DELPPRSystemItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DELPPRSystemItf";	}
		function getCurrentObjectName() { 
 	return "DELIPPRSystemTimeConstrAuth"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DELPPRSystemItf Interface DELIPPRSystemTimeConstrAuth</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIPPRSystemTimeConstrAuth_50221','DELIPPRSystemTimeConstrAuth','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 interface <b>DELIPPRSystemTimeConstrAuth</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateOrModifyTimeConstraint(CATIPLMNavOccurrence*,CATIPLMNavOccurrence*,double,DELIPPRSystemTimeConstrAuth::ConstraintType)"><b>CreateOrModifyTimeConstraint</b></a>(CATIPLMNavOccurrence*,CATIPLMNavOccurrence*,double,DELIPPRSystemTimeConstrAuth::ConstraintType)
<dd>  Creates or retrieve for modification a time constraint between 2 
 brother occurrences of Operations.
 <dt> o 
    <a href="#RemoveTimeConstraint(CATIPLMNavOccurrence*,CATIPLMNavOccurrence*)"><b>RemoveTimeConstraint</b></a>(CATIPLMNavOccurrence*,CATIPLMNavOccurrence*)
<dd>  Removes a time constraint between 2 brother occurrences of Operations.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ConstraintType"><b>ConstraintType</b></a>
<dd>     Definition  the  available  constraint  types.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateOrModifyTimeConstraint"></a><a name="CreateOrModifyTimeConstraint(CATIPLMNavOccurrence*,CATIPLMNavOccurrence*,double,DELIPPRSystemTimeConstrAuth::ConstraintType)"></a> <dt> o <b>CreateOrModifyTimeConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateOrModifyTimeConstraint</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iOperationSourceOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>iOperationTargetOcc</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDelay</tt><td><tt>= 0.</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DELIPPRSystemTimeConstrAuth::ConstraintType','DELIPPRSystemTimeConstrAuth::ConstraintType')</script> <td><tt>iConstraintType</tt><td><tt>= DELIPPRSystemTimeConstrAuth::FinishToStart </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates or retrieve for modification a time constraint between 2 
 brother occurrences of Operations. 
 If both occurences are not child of the same parent, the   
 method will return E_FAIL.
  The Production System hierarchy is not captured 
 in the Time Constraint 
  -> it must not appear in the given universal links 
 of the Constrained/Constraining Entities.

 The current Production System or Operation Reference will 
 be the owner & the context of the constraint.
  (the choice of this context is left to the user and no check 
 is performed but it should be the Least 
  Common Context of both constrained entities or the production system 
 that has a Ref-Ref link toward 
  Process Function DAG ). 

 If the constraint already existed, the type and delay 
 will be modified with the new values. 
 If an inverse constraint already existed, it will be deleted 
 and the new one will be created. 

   If startSideSynchronized or endSideSynchronized is true, 
 any iDelay value will be reset to 0.0

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> OperationSourceOcc</tt>
   <dd>      The list of instances to the Source Operation of the constraint 
 AVOIDING instances of Production System.
   </dd>
    <dt><tt> OperationTargetOcc</tt>
   <dd> 
   The list of instances to the Target Operation of the constraint 
 AVOIDING instances of Production System.
   </dd>
    <dt><tt> iDelay</tt>
   <dd>      The Constraint Delay (positive or negative).
   </dd>
    <dt><tt> iConstraintType</tt>
   <dd>      Set the type of Time Constraint to create.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values</b>:
      <ul>
      <li>S_OK         : The method successfully ended. </li> 
      <li>E_FAIL       : An error occurred. </li>
      </ul>
</dl>
</dl>
<a name="RemoveTimeConstraint"></a><a name="RemoveTimeConstraint(CATIPLMNavOccurrence*,CATIPLMNavOccurrence*)"></a> <dt> o <b>RemoveTimeConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveTimeConstraint</b>(<td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>ipiOperationFromOcc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence','CATIPLMNavOccurrence*')</script> <td><tt>ipiOperationToOcc</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a time constraint between 2 brother occurrences of Operations. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiOperationFromOcc</tt>
   <dd>      Source Operation Occurence.
   </dd>
    <dt><tt> ipiOperationToOcc</tt>
   <dd>		Target Operation Occurence.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values</b>:
      <ul>
      <li>S_OK         : The method successfully ended. </li> 
      <li>E_FAIL       : An error occurred. </li>
      </ul>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ConstraintType"> <dt> o <b>ConstraintType</b>
<dl>
  <dd>
<pre>
enum <b>ConstraintType</b> {
  FinishToStart,
  StartToStart,
  FinishToFinish,
  MaterialNeed
}
</pre>
    Definition  the  available  constraint  types.    
    
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>    FinishToStart</tt>
   <dd>                    Finish  To  Start.  Classic  Precedence  
    </dd>
    <dt><tt>    StartToStart</tt>
   <dd>                    Start  To  Start.  Start  Together  
    </dd>
    <dt><tt>    FinishToFinish</tt>
   <dd>                    Finish  To  Finish.  Finish  Together
    </dd>
    <dt><tt>    MaterialNeed</tt>
   <dd>                    MaterialNeed is a FinishToStart constraint seen also as a material flow</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>DELIPPRSystemTimeConstrAuth.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DELPPRSystemItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

