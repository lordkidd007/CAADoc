<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AfrInterfaces Interface CATIWorkbenchAddin</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AfrInterfaces.htm" href="../AfrInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AfrInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIWorkbenchAddin"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AfrInterfaces Interface CATIWorkbenchAddin</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIWorkbenchAddin_27050','CATIWorkbenchAddin','0');</script>
<p><b>Usage: you cannot implement this base interface directly. You must first derive it and then implement the derived interface. </b></p>
<hr>
<p>
 interface <b>CATIWorkbenchAddin</b>
</p>
<p>
<b><i> Interface to derive to create an addin.</i></b><br>

 <b>Role</b>: Existing workshops or workbenches can be customized by the client 
 application programmer. This customization consists in putting commands into one or 
 several new toolbars, and add these toolbars to the appropriate workshop or workbench. 
 Note that an add-in cannot customize the menu bar. 
 <br>
 The workshop or the workbench 
 should feature an add-in interface that you will implement to provide the toolbars 
 using a class extending a late type. This add-in interface derives from the <tt>CATIWorkbenchAddin</tt> 
 interface and it's valid for workshops as well as workbenches. 
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIWorkbench','','CATIWorkbench') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateCommands()"><b>CreateCommands</b></a>()
<dd>  Instantiates the command headers.
 <dt> o 
    <a href="#CreateToolbars()"><b>CreateToolbars</b></a>()
<dd>  Creates toolbars containers.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateCommands"></a><a name="CreateCommands()"></a> <dt> o <b>CreateCommands</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CreateCommands</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Instantiates the command headers.  
 <br><b>Role</b>: Each command you want to make available in your workshop or 
 workbench must have a command header. The command header holds the necessary 
 information to load the command, such as the name of the 
 shared library in which the command's executable code is located, the name of the 
 command class, and the data to pass to the command's code when this command 
 becomes the current one. The command header has resources for each command to display 
 such as the command name shown to the end user, its ToolTip displayed in a balloon, 
 its help message, and its icon.
 <br>Each instance of header is deleted by CATIA.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATCommandHeader','','CATCommandHeader') </script>
</dl>
</dl>
<a name="CreateToolbars"></a><a name="CreateToolbars()"></a> <dt> o <b>CreateToolbars</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer *')</script>  <b>CreateToolbars</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates toolbars containers.
 <br><b>Role</b>: Creates toolbars's container with the 
<script type="text/javascript"> activateLinkAnchor('NewAccess','','NewAccess') </script> macro, and arranges  commands in the toolbars. Toolbars are chained together.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The first toolbar of the chain.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIWorkbenchAddin.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAfrItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

