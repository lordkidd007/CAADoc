<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATEngConnectionUseItf Interface CATIEngConnectionManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATEngConnectionUseItf.htm" href="../CATEngConnectionUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATEngConnectionUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIEngConnectionManager"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATEngConnectionUseItf Interface CATIEngConnectionManager</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIEngConnectionManager_55317','CATIEngConnectionManager','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIEngConnectionManager</b>
</p>
<p>
<b><i> Interface dedicated to manage the lifecycle of an Engineering Connection 
 object.</i></b><br>

 <b>Role</b>: This interface allows to create, retrieve or delete 
 Engineering Connections. This interface is implemented by the product.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateEngConnection(CATIEngConnection::Type,CATListValCATBaseUnknown_var*,CATIEngConnection*&amp;,CATOmbObjectInContext*)"><b>CreateEngConnection</b></a>(CATIEngConnection::Type,CATListValCATBaseUnknown_var*,CATIEngConnection*&amp;,CATOmbObjectInContext*)
<dd>  Creates an Engineering Connection.
 <dt> o 
    <a href="#ListEngConnection(CATListValCATBaseUnknown_var&amp;)"><b>ListEngConnection</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves all Engineering connections from a product.
 <dt> o 
    <a href="#RemoveEngConnection(CATIEngConnection*)"><b>RemoveEngConnection</b></a>(CATIEngConnection*)
<dd>  Removes an Engineering Connection from a product.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateEngConnection"></a><a name="CreateEngConnection(CATIEngConnection::Type,CATListValCATBaseUnknown_var*,CATIEngConnection*&amp;,CATOmbObjectInContext*)"></a> <dt> o <b>CreateEngConnection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateEngConnection</b>(<td><script type="text/javascript"> activateLink('CATIEngConnection::Type','CATIEngConnection::Type')</script> <td><tt>iEngCntType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*')</script> <td><tt>iListOfImpacted</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIEngConnection','CATIEngConnection*&amp;')</script> <td><tt>oEngCnt</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>iContext</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an Engineering Connection.
 <br><b>Role</b>: The Engineering Connection may aggregate Assembly 
 Constraints.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEngCntType</tt>
   <dd>   [in] The Engineering Connection type.
 </dd>
    <dt><tt> iListOfImpacted</tt>
   <dd>   [in] List of Impacted. An Engineering Connection references
         - One Impacted (For example: Fix Constraint case).
         - Two Impacteds (For example: Coincidence Constraint case)
         - three Impacteds (For example: Hinge Constraint case)
 <br> If iContext is not NULL, the MCX is called contextual and one and only one impacted must be contextual.
 <br> A contextual impacted is characterized by the fact that the impacted's Path of First Instances must end with an instance of the MCX's father.
 <br> A non contextual impacted is characterized by the fact that the impacted's Path of First Instances must start with a child instance of the MCX's father.
 </dd>
    <dt><tt> oEngCnt</tt>
   <dd>   [out] The created Engineering Connection.
 </dd>
    <dt><tt> iContext</tt>
   <dd>   [in] To Create contextual Engineering Connection.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>E_INVALIDARG</tt>  <dd>if the number of impacted is incorrect. 
   <dt><tt>E_FAIL</tt>  <dd>if the operation is failed. 
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   </dl>
</dl>
</dl>
<a name="ListEngConnection"></a><a name="ListEngConnection(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>ListEngConnection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListEngConnection</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListEngConnection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves all Engineering connections from a product.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListEngConnection</tt>
   <dd>   [out] The list of Engineering Connections. The returned items contained 
 in the list adhere to CATIEngConnection. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the engineering connection exists
   <dt><tt>E_FAIL</tt>  <dd>elsewhere
   </dl>
</dl>
</dl>
<a name="RemoveEngConnection"></a><a name="RemoveEngConnection(CATIEngConnection*)"></a> <dt> o <b>RemoveEngConnection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveEngConnection</b>(<td> const <script type="text/javascript"> activateLink('CATIEngConnection','CATIEngConnection*')</script> <td><tt>iEngCnt</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes an Engineering Connection from a product.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEngCnt</tt>
   <dd>   [in] the Engineering Connection to remove.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>E_INVALIDARG</tt> <dd>The input Engineering Connection is not 
   an applicative Engineering Connection contained by the product.
   <dt><tt>S_OK</tt> <dd>if the engineering connection is correctly 
                            removed.
   <dt><tt>E_FAIL</tt> <dd>if the operation is failed.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEngConnectionManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATEngConnectionUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

