<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATEngConnectionUseItf Interface CATIEngConnection</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATEngConnectionUseItf.htm" href="../CATEngConnectionUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATEngConnectionUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIEngConnection"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATEngConnectionUseItf Interface CATIEngConnection</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIEngConnection_41225','CATIEngConnection','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 interface <b>CATIEngConnection</b>
</p>
<p>
<b><i> This interface is implemented by the Engineering Connection.</i></b><br>

 <br><b>Role</b>: Contains API to manage the Engineering Connection.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDirection(int,CATIEngConnection::Direction&amp;)"><b>GetDirection</b></a>(int,CATIEngConnection::Direction&amp;)
<dd>  Returns the direction in the Engineering Connection.
 <dt> o 
    <a href="#GetImpacted(int,CATOmbObjectInContext*&amp;,CATOmbObjectInContext*&amp;)"><b>GetImpacted</b></a>(int,CATOmbObjectInContext*&amp;,CATOmbObjectInContext*&amp;)
<dd>  Returns the impacted instances.
 <dt> o 
    <a href="#GetNbImpacted(int&amp;)"><b>GetNbImpacted</b></a>(int&amp;)
<dd>  Returns the number of impacted.
 <dt> o 
    <a href="#GetParent(CATIPLMProducts*&amp;)"><b>GetParent</b></a>(CATIPLMProducts*&amp;)
<dd>  Returns the PLM product aggregating the Engineering Connection
 
 <dt> o 
    <a href="#SetDirection(int,CATIEngConnection::Direction)"><b>SetDirection</b></a>(int,CATIEngConnection::Direction)
<dd>  Sets the direction in the Engineering Connection.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#Direction"><b>Direction</b></a>
<dd>  Engineering Connection direction.
 <dt> o 
    <a href="#Type"><b>Type</b></a>
<dd>  Engineering Connection type.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDirection"></a><a name="GetDirection(int,CATIEngConnection::Direction&amp;)"></a> <dt> o <b>GetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirection</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIEngConnection::Direction','CATIEngConnection::Direction&amp;')</script> <td><tt>odir</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the direction in the Engineering Connection.
  <br><b>Role</b>:  The direction specifies how impacted instances are 
 moving.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inbp</tt>
   <dd> [in] Impacted instance identifier.
 </dd>
    <dt><tt> odir</tt>
   <dd> [out] the direction. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
<a name="GetImpacted"></a><a name="GetImpacted(int,CATOmbObjectInContext*&amp;,CATOmbObjectInContext*&amp;)"></a> <dt> o <b>GetImpacted</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImpacted</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbe</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*&amp;')</script> <td><tt>oImpacted</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*&amp;')</script> <td><tt>oContext</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the impacted instances.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inbe</tt>
   <dd>	 [in] The indice of impacted . 
 </dd>
    <dt><tt> oImpacted</tt>
   <dd> [out] The impacted instance. 
 </dd>
    <dt><tt> oContext</tt>
   <dd> [out] The link to the instance for contextual Engineering Connection. 
  If the pointer is NULL, the Engineering Connection is not contextual.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>E_FAIL</tt>  <dd>if the operation is failed. 
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   </dl>
</dl>
</dl>
<a name="GetNbImpacted"></a><a name="GetNbImpacted(int&amp;)"></a> <dt> o <b>GetNbImpacted</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbImpacted</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbImpacted</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of impacted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbImpacted</tt>
   <dd> [out] The  number of impacted. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>E_FAIL</tt>  <dd>if the operation is failed. 
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   </dl>
</dl>
</dl>
<a name="GetParent"></a><a name="GetParent(CATIPLMProducts*&amp;)"></a> <dt> o <b>GetParent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetParent</b>(<td><script type="text/javascript"> activateLink('CATIPLMProducts','CATIPLMProducts*&amp;')</script> <td><tt>oparent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the PLM product aggregating the Engineering Connection
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oparent</tt>
   <dd> [out] The parent PLM product. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>E_FAIL</tt>  <dd>If the operation is failed. 
   <dt><tt>S_OK</tt>    <dd>If the operation is successful.
   </dl>
</dl>
</dl>
<a name="SetDirection"></a><a name="SetDirection(int,CATIEngConnection::Direction)"></a> <dt> o <b>SetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDirection</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inbp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIEngConnection::Direction','CATIEngConnection::Direction')</script> <td><tt>idir</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the direction in the Engineering Connection.
  <br><b>Role</b>:  The direction specifies how impacted instances are 
 moving.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inbp</tt>
   <dd> [in] Impacted instance identifier. 
 </dd>
    <dt><tt> odir</tt>
   <dd> [out] the direction. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>if the operation is successful.
   <dt><tt>E_FAIL</tt> <dd> if the operation is failed.
   </dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="Direction"> <dt> o <b>Direction</b>
<dl>
  <dd>
<pre>
enum <b>Direction</b> {
  Direction_Error,
  Direction_In,
  Direction_Out
}
</pre>
 Engineering Connection direction.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   Direction_Error</tt>
   <dd>     Not used. Can be returned in case of error.
   </dd>
    <dt><tt>   Direction_In</tt>
   <dd>     The element cannot move.
   </dd>
    <dt><tt>   Direction_Out</tt>
   <dd>      The element can move.</dd>
</dl>
</dl>
</dl>
<a name="Type"> <dt> o <b>Type</b>
<dl>
  <dd>
<pre>
enum <b>Type</b> {
  Type_UserDefined,
  Type_Rigid,
  Type_Spherical,
  Type_Cylindrical,
  Type_Planar,
  Type_Prismatic,
  Type_Revolute,
  Type_PointCurve,
  Type_PointSurface,
  Type_Gear,
  Type_Rack,
  Type_Cable,
  Type_Universal,
  Type_RollCurve
}
</pre>
 Engineering Connection type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   Type_UserDefined,</tt>
   <dd>       .
   </dd>
    <dt><tt>   Type_Rigid,</tt>
   <dd>       .
   </dd>
    <dt><tt>   Type_Spherical,</tt>
   <dd>       .
   </dd>
    <dt><tt>   Type_Cylindrical,</tt>
   <dd>       .
   </dd>
    <dt><tt>   Type_Planar,</tt>
   <dd>       .
   </dd>
    <dt><tt>   Type_Prismatic,</tt>
   <dd>       .
   </dd>
    <dt><tt>   Type_Revolute</tt>
   <dd>     .
   </dd>
    <dt><tt>   Type_PointCurve</tt>
   <dd>     .
   </dd>
    <dt><tt>   Type_PointSurface</tt>
   <dd>     .
   </dd>
    <dt><tt>   Type_Gear</tt>
   <dd>     .
   </dd>
    <dt><tt>   Type_Rack</tt>
   <dd>     .
   </dd>
    <dt><tt>   Type_Cable</tt>
   <dd>     .
   </dd>
    <dt><tt>   Type_Universal</tt>
   <dd>     .
   </dd>
    <dt><tt>   Type_RollCurve</tt>
   <dd>     .</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEngConnection.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATEngConnectionUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

