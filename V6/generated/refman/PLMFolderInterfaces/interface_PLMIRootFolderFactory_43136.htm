<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMFolderInterfaces Interface PLMIRootFolderFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMFolderInterfaces.htm" href="../PLMFolderInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMFolderInterfaces";	}
		function getCurrentObjectName() { 
 	return "PLMIRootFolderFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMFolderInterfaces Interface PLMIRootFolderFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMIRootFolderFactory_43136','PLMIRootFolderFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMIRootFolderFactory</b>
</p>
<p>
<b><i> Interface representing Root Folder Factory.</i></b><br>

 <b>Role:</b>This interface is used to create or delete root folders. 
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateRootFolder(CATIType_var,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)"><b>CreateRootFolder</b></a>(CATIType_var,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)
<dd>  Creates a Root Folder.
 <dt> o 
    <a href="#CreateRootFolder(CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)"><b>CreateRootFolder</b></a>(CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)
<dd>  
 <dt> o 
    <a href="#DeleteRootFolder(PLMIFolder*)"><b>DeleteRootFolder</b></a>(PLMIFolder*)
<dd>  Deletes a Root Folder.
 <dt> o 
    <a href="#RootFolderCreation(CATIType_var,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)"><b>RootFolderCreation</b></a>(CATIType_var,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)
<dd>  Creates a Root Folder.
 <dt> o 
    <a href="#RootFolderCreation(CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)"><b>RootFolderCreation</b></a>(CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)
<dd>  Creates a Root Folder.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateRootFolder"></a><a name="CreateRootFolder(CATIType_var,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)"></a> <dt> o <b>CreateRootFolder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateRootFolder</b>(<td><script type="text/javascript"> activateLink('CATIType','CATIType_var')</script> <td><tt>lType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iAttrList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMIFolder','PLMIFolder*&amp;')</script> <td><tt>oRootFolder</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Root Folder.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> lType</tt>
   <dd>  Type to provide for new Folder.
 </dd>
    <dt><tt> iAttrList</tt>
   <dd>   All Public writable root folder attributes. This list must contain at least all mandatory attributes and one of the Identifier Set. 
 </dd>
    <dt><tt> oRootFolder</tt>
   <dd>    The newly created Root Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Root Folder was successfully created.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="CreateRootFolder"></a><a name="CreateRootFolder(CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)"></a> <dt> o <b>CreateRootFolder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateRootFolder</b>(<td><script type="text/javascript"> activateLink('CATIAdpEnvironment','CATIAdpEnvironment*')</script> <td><tt>iEnv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iAttrList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMIFolder','PLMIFolder*&amp;')</script> <td><tt>oRootFolder</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R211 Use the 
<script type="text/javascript"> activateLinkAnchor('RootFolderCreation','','RootFolderCreation') </script> method Creates a Root Folder.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEnv</tt>
   <dd>   The customization of the new root folder will be the authoring customisation defined for the Root Folder inside the input PLM environment. 
   The future sub folders will all be created with the same Environment.
 </dd>
    <dt><tt> iAttrList</tt>
   <dd>   All Public writable root folder attributes. This list must contain at least all mandatory attributes and one of the Identifier Set. 
 </dd>
    <dt><tt> oRootFolder</tt>
   <dd>    The newly created Root Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Root Folder was successfully created.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="DeleteRootFolder"></a><a name="DeleteRootFolder(PLMIFolder*)"></a> <dt> o <b>DeleteRootFolder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteRootFolder</b>(<td><script type="text/javascript"> activateLink('PLMIFolder','PLMIFolder*')</script> <td><tt>iRootFolder</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Deletes a Root Folder.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootFolder</tt>
   <dd>    The Root Folder to delete.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Root Folder was successfully deleted.</li>
    <li>E_INVALIDARG : <tt>iRootFolder<tt> is not a Root Folder.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="RootFolderCreation"></a><a name="RootFolderCreation(CATIType_var,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)"></a> <dt> o <b>RootFolderCreation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RootFolderCreation</b>(<td><script type="text/javascript"> activateLink('CATIType','CATIType_var')</script> <td><tt>lType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iAttrList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMIFolder','PLMIFolder*&amp;')</script> <td><tt>oRootFolder</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Root Folder.
 <p>This API invokes the PLMIdentificationInitialization Business Logic to initialize attributes on the created Root Folder, then attribute values are set with <tt>iAttrList</tt>. </p>  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> lType</tt>
   <dd>   Folder will be created with this Type.
 </dd>
    <dt><tt> iAttrList</tt>
   <dd>   List of attributes to set. Optional (can be NULL).
   This list should not contain any attributes relative to customization.
 </dd>
    <dt><tt> oRootFolder</tt>
   <dd>   The newly created Root Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Root Folder was successfully created.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="RootFolderCreation"></a><a name="RootFolderCreation(CATIAdpEnvironment*,CATListValCATICkeParm_var&amp;,PLMIFolder*&amp;)"></a> <dt> o <b>RootFolderCreation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RootFolderCreation</b>(<td><script type="text/javascript"> activateLink('CATIAdpEnvironment','CATIAdpEnvironment*')</script> <td><tt>iEnv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iAttrList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMIFolder','PLMIFolder*&amp;')</script> <td><tt>oRootFolder</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Root Folder.
 <p>This API invokes the PLMIdentificationInitialization Business Logic to initialize attributes on the created Root Folder, then attribute values are set with <tt>iAttrList</tt>. </p>  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEnv</tt>
   <dd>   The customization of the new root folder will be the authoring customization defined for the Root Folder inside the input PLM environment. 
   The future sub folders will all be created with the same Environment.
   <br>If the argument is NULL, the current environment is  used.  
 </dd>
    <dt><tt> iAttrList</tt>
   <dd>   List of attributes to set. Optional (can be NULL).
   This list should not contain any attributes relative to customization.
 </dd>
    <dt><tt> oRootFolder</tt>
   <dd>   The newly created Root Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Root Folder was successfully created.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMIRootFolderFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMFolderItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

