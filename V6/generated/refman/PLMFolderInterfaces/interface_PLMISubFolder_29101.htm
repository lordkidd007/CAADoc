<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMFolderInterfaces Interface PLMISubFolder</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMFolderInterfaces.htm" href="../PLMFolderInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMFolderInterfaces";	}
		function getCurrentObjectName() { 
 	return "PLMISubFolder"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMFolderInterfaces Interface PLMISubFolder</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMISubFolder_29101','PLMISubFolder','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMISubFolder</b>
</p>
<p>
<b><i> Interface managing sub-folders.</i></b><br>


 <br><b>Role</b>: This interface is available for sub Folders only.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AttachObject(CATIAdpPLMIdentificator*)"><b>AttachObject</b></a>(CATIAdpPLMIdentificator*)
<dd>  Attachs an object to current Folder.
 <dt> o 
    <a href="#AttachObject(CATListPtrCATIAdpPLMIdentificator&amp;)"><b>AttachObject</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Attachs a list of objects to current Folder.
 <dt> o 
    <a href="#DetachObject(CATIAdpPLMIdentificator*)"><b>DetachObject</b></a>(CATIAdpPLMIdentificator*)
<dd>  Detaches a PLM Object attached to current Folder.
 <dt> o 
    <a href="#DetachObject(CATListPtrCATIAdpPLMIdentificator&amp;)"><b>DetachObject</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Detaches a list of PLM Objects attached to current Folder.
 <dt> o 
    <a href="#GetParentFolder(PLMIFolder*&amp;,CATOmbLifeCycleRootsBag&amp;)"><b>GetParentFolder</b></a>(PLMIFolder*&amp;,CATOmbLifeCycleRootsBag&amp;)
<dd>  Gets Parent Folder of current Folder.
 <dt> o 
    <a href="#ListObjects(CATListPtrCATIAdpPLMIdentificator&amp;)"><b>ListObjects</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Retrieves the list of Objects attached to current Folder.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AttachObject"></a><a name="AttachObject(CATIAdpPLMIdentificator*)"></a> <dt> o <b>AttachObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AttachObject</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iRefToAttach</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Attachs an object to current Folder.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRefToAttach</tt>
   <dd>   The identifier of a PLM Reference or PLM Representation Reference Object to attach.
   The interactive documentation lists all the PLM References and PLM Representations which can be attached ot folders

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the PLM Object is successfully attached.</li>
    <li>E_INVALIDARG : Type of Object to attach is not authorized in Folder application.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="AttachObject"></a><a name="AttachObject(CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>AttachObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AttachObject</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iRefListToAttach</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Attachs a list of objects to current Folder.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRefListToAttach</tt>
   <dd>   The list of identifiers of PLM Reference or PLM Representation Reference Object to attach.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if all PLM Objects are successfully attached.</li>
    <li>E_INVALIDARG : The type of one PLM Object to attach is not authorized in Folder application.</li>
    <li>E_FAIL otherwise. If one fail, the entire list fails.</li>
   </ul>
</dl>
</dl>
<a name="DetachObject"></a><a name="DetachObject(CATIAdpPLMIdentificator*)"></a> <dt> o <b>DetachObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DetachObject</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iRefToDetach</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Detaches a PLM Object attached to current Folder.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRefToDetach</tt>
   <dd>   The identifier of PLM Object to detach.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the PLM Object is successfully detached.</li>
    <li>E_INVALIDARG : Object is not attached to current Folder.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="DetachObject"></a><a name="DetachObject(CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>DetachObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DetachObject</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iRefListToDetach</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Detaches a list of PLM Objects attached to current Folder.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRefListToDetach</tt>
   <dd>   The identifiers of PLM Objects to detach.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Object is successfully detached.</li>
    <li>E_INVALIDARG : one PLM Object is not attached to current Folder.</li>
    <li>E_FAIL otherwise. If one fails, the whole list fails.</li>
   </ul>
</dl>
</dl>
<a name="GetParentFolder"></a><a name="GetParentFolder(PLMIFolder*&amp;,CATOmbLifeCycleRootsBag&amp;)"></a> <dt> o <b>GetParentFolder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetParentFolder</b>(<td><script type="text/javascript"> activateLink('PLMIFolder','PLMIFolder*&amp;')</script> <td><tt>oParentFolder</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbLifeCycleRootsBag','CATOmbLifeCycleRootsBag&amp;')</script> <td><tt>ioBag</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets Parent Folder of current Folder.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oParentFolder</tt>
   <dd>   The Parent Folder of current Folder. It can be a folder or a root folder).
 </dd>
    <dt><tt> ioBag</tt>
   <dd>   The Bag. Do not forget to RemoveAll()
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the parent Folder is successfully retrieved.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="ListObjects"></a><a name="ListObjects(CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>ListObjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListObjects</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>oReferenceIdList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of Objects attached to current Folder.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oReferenceIdList</tt>
   <dd>   The list of Identifiers of pointed PLM Objects.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the list of PLM Objects is successfully retrieved.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMISubFolder.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMFolderItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

