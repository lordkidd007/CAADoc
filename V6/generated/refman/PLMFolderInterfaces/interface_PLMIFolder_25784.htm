<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMFolderInterfaces Interface PLMIFolder</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMFolderInterfaces.htm" href="../PLMFolderInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMFolderInterfaces";	}
		function getCurrentObjectName() { 
 	return "PLMIFolder"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMFolderInterfaces Interface PLMIFolder</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMIFolder_25784','PLMIFolder','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMIFolder</b>
</p>
<p>
<b><i> Interface managing Folders.</i></b><br>


 <br><b>Role</b>: This interface is implemented by Root Folders and sub Folders.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#DeleteFolderTree(PLMISubFolder*)"><b>DeleteFolderTree</b></a>(PLMISubFolder*)
<dd>  Deletes Folder Tree.
 <dt> o 
    <a href="#DeleteFolderTree(CATListPtrPLMISubFolder&amp;)"><b>DeleteFolderTree</b></a>(CATListPtrPLMISubFolder&amp;)
<dd>  Deletes Folder Tree.
 <dt> o 
    <a href="#InsertCopiedFolderTree(PLMISubFolder*,FolderCopyMode,PLMISubFolder*&amp;,CATOmbLifeCycleRootsBag&amp;)"><b>InsertCopiedFolderTree</b></a>(PLMISubFolder*,FolderCopyMode,PLMISubFolder*&amp;,CATOmbLifeCycleRootsBag&amp;)
<dd>  Creates a new folder from a folder to copy and inserts it under this folder.
 <dt> o 
    <a href="#InsertCopiedFolderTree(CATListPtrPLMISubFolder&amp;,FolderCopyMode,CATListPtrPLMISubFolder&amp;,CATOmbLifeCycleRootsBag&amp;)"><b>InsertCopiedFolderTree</b></a>(CATListPtrPLMISubFolder&amp;,FolderCopyMode,CATListPtrPLMISubFolder&amp;,CATOmbLifeCycleRootsBag&amp;)
<dd>  Creates new folders from a list of folders to copy and inserts it under this.
 <dt> o 
    <a href="#InsertMovedFolderTree(PLMISubFolder*)"><b>InsertMovedFolderTree</b></a>(PLMISubFolder*)
<dd>  Moves a Folder tree and insert under current Folder.
 <dt> o 
    <a href="#InsertMovedFolderTree(CATListPtrPLMISubFolder&amp;)"><b>InsertMovedFolderTree</b></a>(CATListPtrPLMISubFolder&amp;)
<dd>  Moves a list of Folder trees and insert under current Folder.
 <dt> o 
    <a href="#InsertNewFolder(CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)"><b>InsertNewFolder</b></a>(CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)
<dd>  
 <dt> o 
    <a href="#InsertNewFolder(CATIType_var,CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)"><b>InsertNewFolder</b></a>(CATIType_var,CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)
<dd>  Creates and inserts a new Folder.
 <dt> o 
    <a href="#IsRootFolder()"><b>IsRootFolder</b></a>()
<dd>  Checks if Folder is a Root Folder or not.
 <dt> o 
    <a href="#ListFolders(CATListPtrPLMISubFolder&amp;,CATOmbLifeCycleRootsBag&amp;)"><b>ListFolders</b></a>(CATListPtrPLMISubFolder&amp;,CATOmbLifeCycleRootsBag&amp;)
<dd>  Retrieves the aggregated Folders.
 <dt> o 
    <a href="#NewFolderInsertion(CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)"><b>NewFolderInsertion</b></a>(CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)
<dd>  Creates and inserts a new Folder.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="DeleteFolderTree"></a><a name="DeleteFolderTree(PLMISubFolder*)"></a> <dt> o <b>DeleteFolderTree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteFolderTree</b>(<td><script type="text/javascript"> activateLink('PLMISubFolder','PLMISubFolder*')</script> <td><tt>iFolderToDelete</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Deletes Folder Tree.
   This method expands full tree under Folder to delete.  All folders in the expanded tree will be deleted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFolderToDelete</tt>
   <dd>   The Folder to Delete under current Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully deleted.</li>
    <li>E_INVALIDARG : invalid argument (null pointer)</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="DeleteFolderTree"></a><a name="DeleteFolderTree(CATListPtrPLMISubFolder&amp;)"></a> <dt> o <b>DeleteFolderTree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteFolderTree</b>(<td><script type="text/javascript"> activateLink('CATListPtrPLMISubFolder','CATListPtrPLMISubFolder&amp;')</script> <td><tt>iListFolderToDelete</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Deletes Folder Tree.
   This method expands full tree under Folder to delete.  All folders in the expanded tree will be deleted.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListFolderToDelete</tt>
   <dd>   The list of folder to delete under current Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully deleted.</li>
    <li>E_INVALIDARG : invalid argument (empty list or null pointer inside)</li>
    <li>E_FAIL otherwise. If one fails, the whole list fails.</li>
   </ul>
</dl>
</dl>
<a name="InsertCopiedFolderTree"></a><a name="InsertCopiedFolderTree(PLMISubFolder*,FolderCopyMode,PLMISubFolder*&amp;,CATOmbLifeCycleRootsBag&amp;)"></a> <dt> o <b>InsertCopiedFolderTree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertCopiedFolderTree</b>(<td><script type="text/javascript"> activateLink('PLMISubFolder','PLMISubFolder*')</script> <td><tt>iFolderToCopy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('FolderCopyMode','FolderCopyMode')</script> <td><tt>iCopyMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMISubFolder','PLMISubFolder*&amp;')</script> <td><tt>oFolder</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbLifeCycleRootsBag','CATOmbLifeCycleRootsBag&amp;')</script> <td><tt>ioBag</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a new folder from a folder to copy and inserts it under this folder.
 <br><b>Role:</b>This methods creates a new folder from the input folder <tt>iFolderToCopy</tt> according to <tt>iCopyMode</tt>. The new folder <tt>oFolder</tt> is inserted
 beneath the current one.
 <p>The new folder is created using the same environment as the one used for the root folder. In other words, all folders beneath a root folder, will be created
 with the same folder's customization find in the root's environment. </p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFolderToCopy</tt>
   <dd>   The Folder to copy .
 </dd>
    <dt><tt> iCopyMode</tt>
   <dd>   The level of duplication concerning pointed objects.
 </dd>
    <dt><tt> oFolder</tt>
   <dd>   The created sub Folder.
 </dd>
    <dt><tt> ioBag</tt>
   <dd>   The Bag. Do not forget to RemoveAll()
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully created.</li>
    <li>E_INVALIDARG : iFolderToCopy is not correct.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="InsertCopiedFolderTree"></a><a name="InsertCopiedFolderTree(CATListPtrPLMISubFolder&amp;,FolderCopyMode,CATListPtrPLMISubFolder&amp;,CATOmbLifeCycleRootsBag&amp;)"></a> <dt> o <b>InsertCopiedFolderTree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertCopiedFolderTree</b>(<td><script type="text/javascript"> activateLink('CATListPtrPLMISubFolder','CATListPtrPLMISubFolder&amp;')</script> <td><tt>iListFoldersToCopy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('FolderCopyMode','FolderCopyMode')</script> <td><tt>iCopyMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrPLMISubFolder','CATListPtrPLMISubFolder&amp;')</script> <td><tt>oListFolders</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbLifeCycleRootsBag','CATOmbLifeCycleRootsBag&amp;')</script> <td><tt>ioBag</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates new folders from a list of folders to copy and inserts it under this.
<br><b>Role:</b>This methods creates a new folder from each folder of the input list <tt>iListFoldersToCopy</tt> according to <tt>iCopyMode</tt>. Each new folders is inserted
	beneath the current one.
 <p>The new folders are created using the same environment as the one used for the root folder. In other words, all folders beneath a root folder, will be created
 with the same folder's customization find in the root's environment. </p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListFoldersToCopy</tt>
   <dd>   The Folders to copy.
 </dd>
    <dt><tt> iCopyMode</tt>
   <dd>   The level of duplication concerning pointed objects.
 </dd>
    <dt><tt> oListFolders</tt>
   <dd>   The created sub Folders.
 </dd>
    <dt><tt> ioBag</tt>
   <dd>   The Bag. Do not forget to RemoveAll()
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully created.</li>
    <li>E_INVALIDARG invalid arguments (empty list or null pointer inside). </li>
    <li>E_FAIL otherwise. If one fails, the whole list fails.</li>
   </ul>
</dl>
</dl>
<a name="InsertMovedFolderTree"></a><a name="InsertMovedFolderTree(PLMISubFolder*)"></a> <dt> o <b>InsertMovedFolderTree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertMovedFolderTree</b>(<td><script type="text/javascript"> activateLink('PLMISubFolder','PLMISubFolder*')</script> <td><tt>iFolderToMove</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Moves a Folder tree and insert under current Folder.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFolderToMove</tt>
   <dd>   The Folder to insert under current Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully moved.</li>
    <li>E_INVALIDARG : invalid argument (null pointer).<li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="InsertMovedFolderTree"></a><a name="InsertMovedFolderTree(CATListPtrPLMISubFolder&amp;)"></a> <dt> o <b>InsertMovedFolderTree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertMovedFolderTree</b>(<td><script type="text/javascript"> activateLink('CATListPtrPLMISubFolder','CATListPtrPLMISubFolder&amp;')</script> <td><tt>iListFolderToMove</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Moves a list of Folder trees and insert under current Folder.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListFolderToMove</tt>
   <dd>   The Folders to insert under current Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully moved.</li>
    <li>E_INVALIDARG : invalid argument (empty list or null pointer inside).</li>
    <li>E_FAIL otherwise. If one fails, the whole list fails.</li>
   </ul>
</dl>
</dl>
<a name="InsertNewFolder"></a><a name="InsertNewFolder(CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)"></a> <dt> o <b>InsertNewFolder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertNewFolder</b>(<td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iAttrList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMISubFolder','PLMISubFolder*&amp;')</script> <td><tt>oSubFolder</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R211 Use the 
<script type="text/javascript"> activateLinkAnchor('NewFolderInsertion','','NewFolderInsertion') </script> method Creates and inserts a new Folder.
  <br><b>Role:</b>This method creates a new folder, and inserts it beneath the current folder (this).
 <p>The new folder is created using the same environment as the one used for the root folder. In other words, all folders beneath a root folder, will be created
 with the same folder's customization find in the root's environment. </p>
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAttrList</tt>
   <dd>   All Public writable folder attributes. This list must contain at least all mandatory attributes and one of the Identifier Set.
 </dd>
    <dt><tt> oSubFolder</tt>
   <dd>   The created Sub Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully created.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="InsertNewFolder"></a><a name="InsertNewFolder(CATIType_var,CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)"></a> <dt> o <b>InsertNewFolder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertNewFolder</b>(<td><script type="text/javascript"> activateLink('CATIType','CATIType_var')</script> <td><tt>lType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iAttrList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMISubFolder','PLMISubFolder*&amp;')</script> <td><tt>oSubFolder</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates and inserts a new Folder.
  <br><b>Role:</b>This method creates a new folder, and inserts it beneath the current folder (this).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> lType</tt>
   <dd>   Type to provide for new Folder.
 </dd>
    <dt><tt> iAttrList</tt>
   <dd>   All Public writable folder attributes. This list must contain at least all mandatory attributes and one of the Identifier Set.
 </dd>
    <dt><tt> oSubFolder</tt>
   <dd>   The created Sub Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully created.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="IsRootFolder"></a><a name="IsRootFolder()"></a> <dt> o <b>IsRootFolder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsRootFolder</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Checks if Folder is a Root Folder or not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>TRUE if Folder is a Root Folder.</li>
    <li>FALSE otherwise.</li>
   </ul>
</dl>
</dl>
<a name="ListFolders"></a><a name="ListFolders(CATListPtrPLMISubFolder&amp;,CATOmbLifeCycleRootsBag&amp;)"></a> <dt> o <b>ListFolders</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListFolders</b>(<td><script type="text/javascript"> activateLink('CATListPtrPLMISubFolder','CATListPtrPLMISubFolder&amp;')</script> <td><tt>oFolderList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbLifeCycleRootsBag','CATOmbLifeCycleRootsBag&amp;')</script> <td><tt>ioBag</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the aggregated Folders.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFolderList</tt>
   <dd>   The list of aggregated Folders.  This objects will need to be put into a bag </dd>
<script type="text/javascript"> activateLinkAnchor('CATOmbLifeCycleRootsBag','','CATOmbLifeCycleRootsBag') </script> for correct lifecycle management. 
    <dt><tt> ioBag</tt>
   <dd>   The Bag. Do not forget to RemoveAll()
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the List of Folders was successfully retrieved.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<a name="NewFolderInsertion"></a><a name="NewFolderInsertion(CATListValCATICkeParm_var&amp;,PLMISubFolder*&amp;)"></a> <dt> o <b>NewFolderInsertion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>NewFolderInsertion</b>(<td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>iAttrList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMISubFolder','PLMISubFolder*&amp;')</script> <td><tt>oSubFolder</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates and inserts a new Folder.
  <br><b>Role:</b>This method creates a new folder, and inserts it beneath the current folder (this).
 <p>The new folder is created using the same environment as the one used for the root folder. In other words, all folders beneath a root folder, will be created
 with the same folder's customization find in the root's environment. </p>
 <p>This API invokes the PLMIdentificationInitialization Business Logic to initialize attributes on the created Sub Folder, then attribute values are set with <tt>iAttrList</tt>. </p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAttrList</tt>
   <dd>   List of attributes to set. Optional (can be NULL).
   This list should not contain any attributes relative to customization.
 </dd>
    <dt><tt> oSubFolder</tt>
   <dd>   The created Sub Folder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
    <li>S_OK if the Folder was successfully created.</li>
    <li>E_FAIL otherwise.</li>
   </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMIFolder.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMFolderItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

