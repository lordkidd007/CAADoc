<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMFmaModelerInterfaces Class CATFmaServicesAccess</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMFmaModelerInterfaces.htm" href="../CATPLMFmaModelerInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMFmaModelerInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATFmaServicesAccess"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMFmaModelerInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmaServicesAccess</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmaServicesAccess_53388','CATFmaServicesAccess','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmaServicesAccess</b>
</p>
<p>
<b><i> Class to access fastener services
 <br><b>Role</b>: this class give access to additional fastener services .</i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateFmaConnectionInterferenceServices(CATIFmaConnectionInterferenceServices**)"><b>CreateFmaConnectionInterferenceServices</b></a>(CATIFmaConnectionInterferenceServices**)
<dd>    Retrieves a pointer to the interface that allows to set the interferance related properties for a Fastener Connection.
 <dt> o 
    <a href="#CreateFmaFactoryServices(CATIFmaPLMFactoryServices**)"><b>CreateFmaFactoryServices</b></a>(CATIFmaPLMFactoryServices**)
<dd>    Retrieves a pointer to the interface that manages the factory of PLM fastener components.
 <dt> o 
    <a href="#CreateFmaPositioningServices(CATIFmaPositioningServices**)"><b>CreateFmaPositioningServices</b></a>(CATIFmaPositioningServices**)
<dd>    Retrieves a pointer to the interface that manages the associative positioning of fastener objects.
 <dt> o 
    <a href="#CreateFmaReferenceReplaceServices(CATIFmaReferenceReplaceServices**)"><b>CreateFmaReferenceReplaceServices</b></a>(CATIFmaReferenceReplaceServices**)
<dd>    Retrieves a pointer to the interface that allows to check if fastener reference can be replaced by another reference
   
 <dt> o 
    <a href="#CreateFmaReferenceUpdateServices(CATIFmaReferenceUpdateServices**)"><b>CreateFmaReferenceUpdateServices</b></a>(CATIFmaReferenceUpdateServices**)
<dd>    Retrieves a pointer to the interface that allows to update a fastener reference
   
 <dt> o 
    <a href="#CreateFmaStandardServices(CATIFmaStandardServices**)"><b>CreateFmaStandardServices</b></a>(CATIFmaStandardServices**)
<dd>    Retrieves a pointer to the interface that manages the access to the Fastener Standard and the Fastener type Standard.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateFmaConnectionInterferenceServices"></a><a name="CreateFmaConnectionInterferenceServices(CATIFmaConnectionInterferenceServices**)"></a> <dt> o <b>CreateFmaConnectionInterferenceServices</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateFmaConnectionInterferenceServices</b>(<td><script type="text/javascript"> activateLink('CATIFmaConnectionInterferenceServices','CATIFmaConnectionInterferenceServices**')</script> <td><tt>opFmaConnectionInterferenceServices</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Retrieves a pointer to the interface that allows to set the interferance related properties for a Fastener Connection.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opFmaConnectionInterferenceServices</tt>
   <dd> [out, CATIFmaConnectionInterferenceServices#Release]      the pointer of the service.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the service was successfully retrieved.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if opFmaConnectionInterferenceServices was not initially set to NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="CreateFmaFactoryServices"></a><a name="CreateFmaFactoryServices(CATIFmaPLMFactoryServices**)"></a> <dt> o <b>CreateFmaFactoryServices</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateFmaFactoryServices</b>(<td><script type="text/javascript"> activateLink('CATIFmaPLMFactoryServices','CATIFmaPLMFactoryServices**')</script> <td><tt>opFmaFactoryServices</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Retrieves a pointer to the interface that manages the factory of PLM fastener components.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opFmaFactoryServices</tt>
   <dd> [out, CATIFmaPLMFactoryServices#Release]      the pointer of the service.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the service was successfully retrieved.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if opFmaFactoryServices was not initially set to NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="CreateFmaPositioningServices"></a><a name="CreateFmaPositioningServices(CATIFmaPositioningServices**)"></a> <dt> o <b>CreateFmaPositioningServices</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateFmaPositioningServices</b>(<td><script type="text/javascript"> activateLink('CATIFmaPositioningServices','CATIFmaPositioningServices**')</script> <td><tt>opFmaPositioningServices</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Retrieves a pointer to the interface that manages the associative positioning of fastener objects.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opFmaPositioningServices</tt>
   <dd> [out, CATIFmaPositioningServices#Release]      the pointer of the service.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the service was successfully retrieved.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if opFmaPositioningServices was not initially set to NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="CreateFmaReferenceReplaceServices"></a><a name="CreateFmaReferenceReplaceServices(CATIFmaReferenceReplaceServices**)"></a> <dt> o <b>CreateFmaReferenceReplaceServices</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateFmaReferenceReplaceServices</b>(<td><script type="text/javascript"> activateLink('CATIFmaReferenceReplaceServices','CATIFmaReferenceReplaceServices**')</script> <td><tt>opFmaReferenceReplaceServices</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Retrieves a pointer to the interface that allows to check if fastener reference can be replaced by another reference
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opFmaReferenceReplaceServices</tt>
   <dd> [out, CATIFmaReferenceReplaceServices#Release]      the pointer of the service.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the service was successfully retrieved.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if opFmaReferenceReplaceServices was not initially set to NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="CreateFmaReferenceUpdateServices"></a><a name="CreateFmaReferenceUpdateServices(CATIFmaReferenceUpdateServices**)"></a> <dt> o <b>CreateFmaReferenceUpdateServices</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateFmaReferenceUpdateServices</b>(<td><script type="text/javascript"> activateLink('CATIFmaReferenceUpdateServices','CATIFmaReferenceUpdateServices**')</script> <td><tt>opFmaReferenceUpdateServices</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Retrieves a pointer to the interface that allows to update a fastener reference
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opFmaReferenceUpdateServices</tt>
   <dd> [out, CATIFmaReferenceUpdateServices#Release]      the pointer of the service.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the service was successfully retrieved.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if opFmaReferenceUpdateServices was not initially set to NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<a name="CreateFmaStandardServices"></a><a name="CreateFmaStandardServices(CATIFmaStandardServices**)"></a> <dt> o <b>CreateFmaStandardServices</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateFmaStandardServices</b>(<td><script type="text/javascript"> activateLink('CATIFmaStandardServices','CATIFmaStandardServices**')</script> <td><tt>opFmaStandServices</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Retrieves a pointer to the interface that manages the access to the Fastener Standard and the Fastener type Standard.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opFstStandServices</tt>
   <dd> [out, CATIFstStandardServices#Release]      the pointer of the service.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>if the service was successfully retrieved.</dd>
    <dt>E_INVALIDARG</dt>
    <dd>if opFmaNavServices was not initially set to NULL.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmaServicesAccess.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMFmaModelerInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

