<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMFmaModelerInterfaces Interface CATIFmaTypeReplace</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMFmaModelerInterfaces.htm" href="../CATPLMFmaModelerInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMFmaModelerInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIFmaTypeReplace"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMFmaModelerInterfaces Interface CATIFmaTypeReplace</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIFmaTypeReplace_51906','CATIFmaTypeReplace','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIFmaTypeReplace</b>
</p>
<p>
<b><i> Interface to Give the capability to replace the reference Fastener type of an existing Spot Assembly Fastener by another.</i></b><br>
 
It is important to note that only the modification of the primary / secondary process type is possible

 <br><b>Role</b>: Components that implement
 CATIFmaTypeReplace are Fastener Reference Products
 <p></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ReplaceReferenceFastenerType(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>ReplaceReferenceFastenerType</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>    Replaces the associated reference Fastener Type to another, by specifying a new secondary feature type (can be empty string), primary process type and/or new secondary process type.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ReplaceReferenceFastenerType"></a><a name="ReplaceReferenceFastenerType(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>ReplaceReferenceFastenerType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReplaceReferenceFastenerType</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iNewFTyp2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iNewPTyp1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iNewPTyp2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatalogID</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iClientID</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Replaces the associated reference Fastener Type to another, by specifying a new secondary feature type (can be empty string), primary process type and/or new secondary process type.
   This service manages:
   <ul>
      <li>The update of the Fastener type descriptor attribute.</li>
      <li>The update of the Fastener attributes by:</li>
      <ul>
         <li>Removing the unnecessary attributes (the attribute was applicable for the previous reference fastener type, not for the new one).</li>
         <li>Adding if necessary the new attributes and set them to the default values (an attribute was not applicable for the previous reference fastener type, but is applicable for the new one).</li>
         <li>Changing the attribute value if necessary (the attribute value was valid for the previous reference fastener type, not for the new one).</li>
      </ul>
      <li>The removal of the previous components</li>
      <li>The update of the CAA feature if necessary by:</li>
      <ul>
         <li>removing the old CAA feature if existing (that was created by the CAA application for the previous reference fastener type)</li>
         <li>Creating a new CAA fastener feature if necessary</li>
      </ul>
   </ul>
   Note that this method doesn’t modify the fastener joined parts.
	
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewFTyp2</tt>
   <dd>      the new secondary feature type (can be an empty string “”).
   </dd>
    <dt><tt> iNewPTyp1</tt>
   <dd>      the new primary process type.
   </dd>
    <dt><tt> iNewPTyp2</tt>
   <dd>      the new secondary process type.
   </dd>
    <dt><tt> iCatalogID</tt>
   <dd>      the catalog name containing the iFTyp2 CAA feature.
   </dd>
    <dt><tt> iClientID</tt>
   <dd>      the client id related to catalog iCatalogID.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
    <dt>S_OK</dt>
    <dd>the new reference Fastener Type of the Spot Assembly fastener has been  successfully replaced.</dd>
    <dt>S_FALSE</dt>
    <dd>if new Fastener Type Descriptor is the same as an old one.</dd>
    <dt>E_FAIL</dt>
    <dd>otherwise.</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIFmaTypeReplace.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMFmaModelerInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

