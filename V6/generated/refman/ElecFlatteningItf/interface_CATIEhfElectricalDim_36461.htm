<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecFlatteningItf Interface CATIEhfElectricalDim</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ElecFlatteningItf.htm" href="../ElecFlatteningItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ElecFlatteningItf";	}
		function getCurrentObjectName() { 
 	return "CATIEhfElectricalDim"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ElecFlatteningItf Interface CATIEhfElectricalDim</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIEhfElectricalDim_36461','CATIEhfElectricalDim','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIEhfElectricalDim</b>
</p>
<p>
<b><i> This Interface CATIEhfElectricalDim allows to manage the Electrical Dimension object.</i></b><br>

 Interface CATIEhfElectricalDim is implemented on the Electrical Dimension feature and should be used by user.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFirstComponent(CATIPrdObject*,CATPathElement*&amp;)"><b>GetFirstComponent</b></a>(CATIPrdObject*,CATPathElement*&amp;)
<dd>  Gives the First End Component of the Electrical Dimension feature.
 <dt> o 
    <a href="#GetFirstEnd(CATBaseUnknown*&amp;)"><b>GetFirstEnd</b></a>(CATBaseUnknown*&amp;)
<dd>  Gives the FirstEnd of the Electrical Dimension feature.
 <dt> o 
    <a href="#GetLength(CATICkeInst*&amp;)"><b>GetLength</b></a>(CATICkeInst*&amp;)
<dd>  Gives the curvilinear distance between the two ends of the electrical dimension.
 <dt> o 
    <a href="#GetSecondComponent(CATIPrdObject*,CATPathElement*&amp;)"><b>GetSecondComponent</b></a>(CATIPrdObject*,CATPathElement*&amp;)
<dd>  Gives the Second End Component of the Electrical Dimension feature.
 <dt> o 
    <a href="#GetSecondEnd(CATBaseUnknown*&amp;)"><b>GetSecondEnd</b></a>(CATBaseUnknown*&amp;)
<dd>  Gives the SecondEnd of the Electrical Dimension feature.
 <dt> o 
    <a href="#GetSegmentList(CATIPrdObject*,CATListValCATBaseUnknown_var*&amp;)"><b>GetSegmentList</b></a>(CATIPrdObject*,CATListValCATBaseUnknown_var*&amp;)
<dd>  Retrieve list of dimensioned segments by Electrical Dim Path.
 <dt> o 
    <a href="#SetAndLinkLengthToText(CATIDrwSubString*)"><b>SetAndLinkLengthToText</b></a>(CATIDrwSubString*)
<dd>  Sets the param link between electrical dimension length and the text sub string which is a part of customized dimension.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFirstComponent"></a><a name="GetFirstComponent(CATIPrdObject*,CATPathElement*&amp;)"></a> <dt> o <b>GetFirstComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstComponent</b>(<td><script type="text/javascript"> activateLink('CATIPrdObject','CATIPrdObject*')</script> <td><tt>ipIPrdRootContext</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*&amp;')</script> <td><tt>opPathElement</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Gives the First End Component of the Electrical Dimension feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipIPrdRootContext</tt>
   <dd>     (Input): Pointer on the "Root" Product of the document.
 </dd>
    <dt><tt> opPathElement</tt>
   <dd>     (Output): First End Component of the Electrical Dimension feature's Path Element , if First End was valuated.
 <br>Method returns NULL value if End is Branch Point or Segment Extreimity or no component is present at that end.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>First end Component of Electrical Dimension is successfully retrieved</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while retrieving the First End Component from Electrical Dim Path.</dd>
   </dl>
</dl>
</dl>
<a name="GetFirstEnd"></a><a name="GetFirstEnd(CATBaseUnknown*&amp;)"></a> <dt> o <b>GetFirstEnd</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstEnd</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>opIFirstEndObject</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Gives the FirstEnd of the Electrical Dimension feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opIFirstEndObject</tt>
   <dd>     (Output): First End of the Electrical Dimension feature, if it was valuated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>First end of Electrical Dimension is successfully retrieved</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while retrieving the Electrical Dim Path.</dd>
   </dl>
</dl>
</dl>
<a name="GetLength"></a><a name="GetLength(CATICkeInst*&amp;)"></a> <dt> o <b>GetLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLength</b>(<td><script type="text/javascript"> activateLink('CATICkeInst','CATICkeInst*&amp;')</script> <td><tt>opICkeInstLength</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Gives the curvilinear distance between the two ends of the electrical dimension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opICkeInstLength</tt>
   <dd>     (Output): CkeInst containing Length between the two electrical dimension ends.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>the length is successfully retrieved</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while retrieving the length.</dd>
   </dl>
</dl>
</dl>
<a name="GetSecondComponent"></a><a name="GetSecondComponent(CATIPrdObject*,CATPathElement*&amp;)"></a> <dt> o <b>GetSecondComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondComponent</b>(<td><script type="text/javascript"> activateLink('CATIPrdObject','CATIPrdObject*')</script> <td><tt>ipIPrdRootContext</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*&amp;')</script> <td><tt>opPathElement</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Gives the Second End Component of the Electrical Dimension feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipIPrdRootContext</tt>
   <dd>     (Input): Pointer on the "Root" Product of the document.
 </dd>
    <dt><tt> opPathElement</tt>
   <dd>     (Output): Second End Component of the Electrical Dimension feature's Path Element , if Second End was valuated.
 <br>Method returns NULL value if End is Branch Point or Segment Extreimity or no component is present at that end.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Second end Component of Electrical Dimension is successfully retrieved</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while retrieving the Second End Component from Electrical Dim Path.</dd>
   </dl>
</dl>
</dl>
<a name="GetSecondEnd"></a><a name="GetSecondEnd(CATBaseUnknown*&amp;)"></a> <dt> o <b>GetSecondEnd</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondEnd</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>opISecondEndObject</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Gives the SecondEnd of the Electrical Dimension feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opISecondEndObject</tt>
   <dd>     (Output): Second End of the Electrical Dimension feature, if it was valuated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Second end of Electrical Dimension is successfully retrieved</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while retrieving the Electrical Dim Path.</dd>
   </dl>
</dl>
</dl>
<a name="GetSegmentList"></a><a name="GetSegmentList(CATIPrdObject*,CATListValCATBaseUnknown_var*&amp;)"></a> <dt> o <b>GetSegmentList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSegmentList</b>(<td><script type="text/javascript"> activateLink('CATIPrdObject','CATIPrdObject*')</script> <td><tt>ipIPrdRootContext</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*&amp;')</script> <td><tt>opListSegments</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieve list of dimensioned segments by Electrical Dim Path. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipIPrdRootContext</tt>
   <dd>     (Input): Pointer on the "Root" Product of the document.
 </dd>
    <dt><tt> oListSegments</tt>
   <dd>     (Output): List of segments covered by dimension.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while searching covered segments.</dd>
   </dl>
</dl>
</dl>
<a name="SetAndLinkLengthToText"></a><a name="SetAndLinkLengthToText(CATIDrwSubString*)"></a> <dt> o <b>SetAndLinkLengthToText</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAndLinkLengthToText</b>(<td><script type="text/javascript"> activateLink('CATIDrwSubString','CATIDrwSubString*')</script> <td><tt>ipIDrwTextString</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Sets the param link between electrical dimension length and the text sub string which is a part of customized dimension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipIDrwTextString</tt>
   <dd>     (input): ipIDrwTextString :text string which will be linked to point to length of electrical dimension.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>the length is successfully set</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while setting the length.</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEhfElectricalDim.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATEhfInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

