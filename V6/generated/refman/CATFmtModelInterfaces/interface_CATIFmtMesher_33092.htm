<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFmtModelInterfaces Interface CATIFmtMesher</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFmtModelInterfaces.htm" href="../CATFmtModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFmtModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIFmtMesher"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFmtModelInterfaces Interface CATIFmtMesher</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIFmtMesher_33092','CATIFmtMesher','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../CATFmtModelInterfaces/class_CATFmtExtIMesher_34666.htm">CATFmtExtIMesher</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIFmtMesher</b>
</p>
<p>
<b><i> Interface representing the <b>Mesher</b>.</i></b><br>

 <b>Role</b>: The <b>Mesher</b> is the object which generates the mesh
 from all the mesh specifications stored within its associated <b>Mesh Part</b>,
 see <script type="text/javascript"> activateLinkAnchor('CATIFmtMeshPart','','CATIFmtMeshPart') </script>. <p><b>BOA information</b>: this interface CANNOT be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AfterUpdating(CATIFmtMeshPart*)"><b>AfterUpdating</b></a>(CATIFmtMeshPart*)
<dd>  Performs cleaning operations after updating a <b>Mesh Part</b>.
 <dt> o 
    <a href="#BeforeUpdating(CATIFmtMeshPart*)"><b>BeforeUpdating</b></a>(CATIFmtMeshPart*)
<dd>  Performs cleaning operations before updating a <b>Mesh Part</b>.
 <dt> o 
    <a href="#Check(CATIFmtMeshPart*)"><b>Check</b></a>(CATIFmtMeshPart*)
<dd>  Checks the supports of the <b>Mesh Part</b>.
 <dt> o 
    <a href="#CloseEdition()"><b>CloseEdition</b></a>()
<dd>  Performs mesher-specific operations before exiting edition mode for a <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetMeshedBodies(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"><b>GetMeshedBodies</b></a>(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)
<dd>  
 <dt> o 
    <a href="#GetMeshedShapes(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"><b>GetMeshedShapes</b></a>(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)
<dd>  
 <dt> o 
    <a href="#GetParentMeshParts(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"><b>GetParentMeshParts</b></a>(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)
<dd>  Retrieves the parent <b>Mesh Part</b>.
 <dt> o 
    <a href="#Invalidate(CATIFmtMeshPart*)"><b>Invalidate</b></a>(CATIFmtMeshPart*)
<dd>  Invalidates the mesh and the topology corresponding to the <b>Mesh Part</b>.
 <dt> o 
    <a href="#IsATypeOf(CATIFmtMeshPart*,CATUnicodeString&amp;)"><b>IsATypeOf</b></a>(CATIFmtMeshPart*,CATUnicodeString&amp;)
<dd>  Queries the mesher about the type of the <b>Mesh Part</b>.
 <dt> o 
    <a href="#IsMeshingBodies(CATIFmtMeshPart*,CATBoolean&amp;)"><b>IsMeshingBodies</b></a>(CATIFmtMeshPart*,CATBoolean&amp;)
<dd>  Queries the mesher to know if the <b>Mesh Part</b> is meshing 3D bodies or not.
 <dt> o 
    <a href="#IsMeshingShapes(CATIFmtMeshPart*,CATBoolean&amp;)"><b>IsMeshingShapes</b></a>(CATIFmtMeshPart*,CATBoolean&amp;)
<dd>  Queries the mesher to know if the <b>Mesh Part</b> is meshing 3D shapes or not.
 <dt> o 
    <a href="#Mesh(CATIFmtMeshPart*)"><b>Mesh</b></a>(CATIFmtMeshPart*)
<dd>  Builds the mesh corresponding to the <b>Mesh Part</b>.
 <dt> o 
    <a href="#OnMeshPartRemove(CATIFmtMeshPart*)"><b>OnMeshPartRemove</b></a>(CATIFmtMeshPart*)
<dd>  Performs cleaning operations before removing a <b>Mesh Part</b>.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AfterUpdating"></a><a name="AfterUpdating(CATIFmtMeshPart*)"></a> <dt> o <b>AfterUpdating</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AfterUpdating</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Performs cleaning operations after updating a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called after updating a <b>Mesh Part</b> and 
 should perform necessary cleaning operations.
 <br>Default implementation does nothing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Cleaning operations successful.
   <dt>E_FAIL</dt><dd>Cleaning operations failed.
   </dl>
</dl>
</dl>
<a name="BeforeUpdating"></a><a name="BeforeUpdating(CATIFmtMeshPart*)"></a> <dt> o <b>BeforeUpdating</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeforeUpdating</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Performs cleaning operations before updating a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called before updating a <b>Mesh Part</b> and 
 performs necessary cleaning operations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Cleaning operations successful.
   <dt>E_FAIL</dt><dd>Cleaning operations failed.
   </dl>
</dl>
</dl>
<a name="Check"></a><a name="Check(CATIFmtMeshPart*)"></a> <dt> o <b>Check</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Check</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Checks the supports of the <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called whenever a support is defined on its
 <b>Mesh Part</b> to check if it can be meshed. 
 <br>It also retreives the parents <b>Mesh Parts</b> if any. A parent <b>Mesh Parts</b>
 is a <b>Mesh Parts</b> that should updated before the actual mesh. For example, in
 the case of a mesher connecting to geometric parts, the parents <b>Mesh Parts</b> are the one corresponding
 to these two parts.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b> to check.
 </dd>
    <dt><tt> oParentMeshParts</tt>
   <dd>   The list of parents <b>Mesh Parts</b>. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The support are valid and can be meshed.
   <dt>E_FAIL</dt><dd>The support are not valid or the parent <b>Mesh Parts</b> can not be found.
   </dl>
</dl>
</dl>
<a name="CloseEdition"></a><a name="CloseEdition()"></a> <dt> o <b>CloseEdition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CloseEdition</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Performs mesher-specific operations before exiting edition mode for a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called before exiting edition mode for a <b>Mesh Part</b> and 
 can be used to perform mesher-specific operations ( see 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMeshPart','CloseEdition','CATIFmtMeshPart.CloseEdition') </script> ). 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Operations successful.
   <dt>E_FAIL</dt><dd>Operations failed.
   </dl>
</dl>
</dl>
<a name="GetMeshedBodies"></a><a name="GetMeshedBodies(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"></a> <dt> o <b>GetMeshedBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMeshedBodies</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtListOfPath','CATFmtListOfPath*&amp;')</script> <td><tt>oMeshedBodies</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R417
 This method is replaced with 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','IsMeshingBodies','CATIFmtMesher.IsMeshingBodies') </script> Retrieves the 3D Bodies meshed by the <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called to retrieve the 3D Bodies meshed by the <b>Mesh Part</b>.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
    <dt><tt> oMeshedBodies</tt>
   <dd>   The 3D Bodies meshed by the <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The meshed 3D Bodies has been successfully retrieved.
   <dt>E_FAIL</dt><dd>The retrieval of the meshed 3D Bodies failed.
   </dl>
</dl>
</dl>
<a name="GetMeshedShapes"></a><a name="GetMeshedShapes(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"></a> <dt> o <b>GetMeshedShapes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMeshedShapes</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtListOfPath','CATFmtListOfPath*&amp;')</script> <td><tt>oMeshedShapes</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R417
 This method is replaced with 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','IsMeshingShapes','CATIFmtMesher.IsMeshingShapes') </script> Retrieves the 3D Shapes meshed by the <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called to retrieve the 3D Shapes meshed by the <b>Mesh Part</b>.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
    <dt><tt> oMeshedShapes</tt>
   <dd>   The 3D Shapes meshed by the <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The meshed 3D Shapes has been successfully retrieved.
   <dt>E_FAIL</dt><dd>The retrieval of the meshed 3D Shapes failed.
   </dl>
</dl>
</dl>
<a name="GetParentMeshParts"></a><a name="GetParentMeshParts(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"></a> <dt> o <b>GetParentMeshParts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetParentMeshParts</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtListOfPath','CATFmtListOfPath*&amp;')</script> <td><tt>oParentMeshParts</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the parent <b>Mesh Part</b>.
 the parent <b>Mesh Part</b> must be updated before the mesh of <b>Mesh Part</b>.
 <br><b>Role</b>: This method  retreives the parents <b>Mesh Parts</b> if any. A parent <b>Mesh Parts</b>
 is a <b>Mesh Parts</b> that should updated before the actual mesh. For example, in
 the case of a mesher connecting to geometric parts, the parents <b>Mesh Parts</b> are the one corresponding
 to these two parts.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b> to retrieve his parent.
 </dd>
    <dt><tt> oParentMeshParts</tt>
   <dd>   The list <b>Paths</b> to the parents <b>Mesh Parts</b>. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd> the parent <b>Mesh Parts</b> are found.
   <dt>E_FAIL</dt><dd>the parent <b>Mesh Parts</b> can not be found.
   </dl>
</dl>
</dl>
<a name="Invalidate"></a><a name="Invalidate(CATIFmtMeshPart*)"></a> <dt> o <b>Invalidate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Invalidate</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Invalidates the mesh and the topology corresponding to the <b>Mesh Part</b>.
 The mesh and the topology will have to be regenerated.
 <br><b>Role</b>: This method is called to regenerate the mesh and the topology from scratch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Mesh and topology successfully invalidated.
   <dt>E_FAIL</dt><dd>Invalidation failed.
   </dl>
</dl>
</dl>
<a name="IsATypeOf"></a><a name="IsATypeOf(CATIFmtMeshPart*,CATUnicodeString&amp;)"></a> <dt> o <b>IsATypeOf</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsATypeOf</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Queries the mesher about the type of the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b> to check.
 </dd>
    <dt><tt> iType</tt>
   <dd>   String representing the query made to the mesher.
   <br><b>Legal values</b>: 
   <dl><dt>"1D"</dt><dd>Is the mesher generating 1D finite elements?
   <dt>"2D"</dt><dd>Is the mesher generating 2D finite elements?
   <dt>"3D"</dt><dd>Is the mesher generating 3D finite elements?
   <dt>"Connection"</dt><dd>Is the mesher generating connecting elements between meshes?</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The result of the query.
   <br><b>Legal values</b>:
   <dl><dt>1</dt><dd>The answer is yes.
   <dt>0</dt><dd>The answer is no.
   </dl>
</dl>
</dl>
<a name="IsMeshingBodies"></a><a name="IsMeshingBodies(CATIFmtMeshPart*,CATBoolean&amp;)"></a> <dt> o <b>IsMeshingBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsMeshingBodies</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oIsMeshingBodies</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Queries the mesher to know if the <b>Mesh Part</b> is meshing 3D bodies or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
    <dt><tt> oIsMeshingBodies</tt>
   <dd>   The query result.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The query has been proceeded with success.
   <dt>E_FAIL</dt><dd>Query failed.
   </dl>
</dl>
</dl>
<a name="IsMeshingShapes"></a><a name="IsMeshingShapes(CATIFmtMeshPart*,CATBoolean&amp;)"></a> <dt> o <b>IsMeshingShapes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsMeshingShapes</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oIsMeshingShapes</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Queries the mesher to know if the <b>Mesh Part</b> is meshing 3D shapes or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
    <dt><tt> oIsMeshingShapes</tt>
   <dd>   The query result.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The query has been proceeded with success.
   <dt>E_FAIL</dt><dd>Query failed.
   </dl>
</dl>
</dl>
<a name="Mesh"></a><a name="Mesh(CATIFmtMeshPart*)"></a> <dt> o <b>Mesh</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Mesh</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Builds the mesh corresponding to the <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called to build the mesh from a <b>Mesh Part</b> according all 
 local and global specifications. 
 <br>The generated nodes and finite elements are created using the
 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesh','','CATIFmtMesh') </script> interface and the corresponding links with geometry are created using the 
<script type="text/javascript"> activateLinkAnchor('CATIFmtAssociativity','','CATIFmtAssociativity') </script> interface. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b> to mesh.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The mesh have been successfully generated.
   <dt>E_FAIL</dt><dd>The mesh operation failed.
   </dl>
</dl>
</dl>
<a name="OnMeshPartRemove"></a><a name="OnMeshPartRemove(CATIFmtMeshPart*)"></a> <dt> o <b>OnMeshPartRemove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OnMeshPartRemove</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Performs cleaning operations before removing a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called before removing a <b>Mesh Part</b> and 
 performs necessary cleaning operations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Cleaning operations successful.
   <dt>E_FAIL</dt><dd>Cleaning operations failed.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIFmtMesher.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFmtModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

