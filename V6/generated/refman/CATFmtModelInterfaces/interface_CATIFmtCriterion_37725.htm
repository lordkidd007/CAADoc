<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFmtModelInterfaces Interface CATIFmtCriterion</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFmtModelInterfaces.htm" href="../CATFmtModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFmtModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIFmtCriterion"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFmtModelInterfaces Interface CATIFmtCriterion</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIFmtCriterion_37725','CATIFmtCriterion','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../CATFmtModelInterfaces/class_CATFmtExtICriterion_40292.htm">CATFmtExtICriterion</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIFmtCriterion</b>
</p>
<p>
<b><i> Interface representing a finite element quality criterion.</i></b><br>

 <b>Role</b>: This interface should be re-implemented in order to add a new quality criteria 
 in the finite element quality analysis.
 <p><b>BOA information</b>: this interface can be implemented using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page. 
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Compute(CATFmtGeometricalEngine*,double&amp;)"><b>Compute</b></a>(CATFmtGeometricalEngine*,double&amp;)
<dd>  Computes the criterion for an finite element.
 <dt> o 
    <a href="#ComputeNormalizedValue(double,CATFmtCriterionInfos*,double&amp;,CATFmtCriterionQualityStatus&amp;)"><b>ComputeNormalizedValue</b></a>(double,CATFmtCriterionInfos*,double&amp;,CATFmtCriterionQualityStatus&amp;)
<dd>  Computes the criterion for an finite element.
 <dt> o 
    <a href="#GetInfos(CATIFmtConnectivity*)"><b>GetInfos</b></a>(CATIFmtConnectivity*)
<dd>  Returns informations on the quality criterion such as minimum and maximum value .
 <dt> o 
    <a href="#GetMagnitude()"><b>GetMagnitude</b></a>()
<dd>  Returns the name of the unit of criteria, empty string by default
 
 <dt> o 
    <a href="#GetName()"><b>GetName</b></a>()
<dd>  Returns the name of the quality criterion.
 <dt> o 
    <a href="#IsImplemented(CATIFmtConnectivity*,CATBoolean&amp;)"><b>IsImplemented</b></a>(CATIFmtConnectivity*,CATBoolean&amp;)
<dd>  Determines whether the criterion can be computed for a given connectivity or not.
 <dt> o 
    <a href="#IsVisible()"><b>IsVisible</b></a>()
<dd>  Returns if the criterion is useful by the mesh analysis quality.
 <dt> o 
    <a href="#NeedGeometricSupport()"><b>NeedGeometricSupport</b></a>()
<dd>  Returns if the criterion needs geometric support.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Compute"></a><a name="Compute(CATFmtGeometricalEngine*,double&amp;)"></a> <dt> o <b>Compute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Compute</b>(<td><script type="text/javascript"> activateLink('CATFmtGeometricalEngine','CATFmtGeometricalEngine*')</script> <td><tt>iGeometricalEngine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oCriterion</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Computes the criterion for an finite element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometricalEngine</tt>
   <dd>   Object which handles all informations on the finite element.
 </dd>
    <dt><tt> oCriterion</tt>
   <dd>   The computed value of the quality criterion.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The computation is succesfull.
   <dt>E_FAIL</dt><dd>The computation failed.
   </dl>
</dl>
</dl>
<a name="ComputeNormalizedValue"></a><a name="ComputeNormalizedValue(double,CATFmtCriterionInfos*,double&amp;,CATFmtCriterionQualityStatus&amp;)"></a> <dt> o <b>ComputeNormalizedValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ComputeNormalizedValue</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCriterion</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFmtCriterionInfos','CATFmtCriterionInfos*')</script> <td><tt>iCriterionInfos</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oNCriterion</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtCriterionQualityStatus','CATFmtCriterionQualityStatus&amp;')</script> <td><tt>oQStatus</tt>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Computes the criterion for an finite element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCriterion</tt>
   <dd>   value of quality criterion 
 </dd>
    <dt><tt> iCriterionInfos</tt>
   <dd>   Limit values for poor and bad to element
 </dd>
    <dt><tt> oNCriterion</tt>
   <dd>   The computed normalized value: 
   <br><b>Values</b>:
   <dl><dt>0.</dt><dd>Best element (requered).
   <dl><dt>.01</dt><dd>Poor element(advised).
   <dl><dt>.1</dt><dd>Bad element (advised).
   <dl><dt>1.</dt><dd>Worst element (requered).
   </dl>
 </dd>
    <dt><tt> oQStatus</tt>
   <dd>   <br><b>Legal values</b>:
   <dl><dt>CATFmtCriterionQualityGood</dt><dd>Good element.
   <dl><dt>CATFmtCriterionQualityPoor</dt><dd>Poor element.
   <dl><dt>CATFmtCriterionQualityBad</dt><dd>Bad element.
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The computation is succesfull.
   <dt>E_FAIL</dt><dd>The computation failed.
   </dl>
</dl>
</dl>
<a name="GetInfos"></a><a name="GetInfos(CATIFmtConnectivity*)"></a> <dt> o <b>GetInfos</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATFmtCriterionInfos','const CATFmtCriterionInfos *')</script>  <b>GetInfos</b>(<td> const <script type="text/javascript"> activateLink('CATIFmtConnectivity','CATIFmtConnectivity*')</script> <td><tt>iConnectivity</tt>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns informations on the quality criterion such as minimum and maximum value ...
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConnectivity</tt>
   <dd>   The finite element connectivity to be tested.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The CATMSHCriterionInfos for iConnectivity.
</dl>
</dl>
<a name="GetMagnitude"></a><a name="GetMagnitude()"></a> <dt> o <b>GetMagnitude</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','const CATUnicodeString &')</script>  <b>GetMagnitude</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the unit of criteria, empty string by default
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Possible values</b>:
   <dl><dt>"Length"</dt><dd>The criterion is a length.
   <dl><dt>"Angle"</dt><dd>The criterion is an angle.
   <dl><dt>""</dt><dd>Empty string for criterion whitout unit.
   <dl><dt>"xx"</dt><dd>Any name of magnitude compatible with CATParmDictionary.
   </dl>
</dl>
</dl>
<a name="GetName"></a><a name="GetName()"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','const CATUnicodeString &')</script>  <b>GetName</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the quality criterion.
</dl>
<a name="IsImplemented"></a><a name="IsImplemented(CATIFmtConnectivity*,CATBoolean&amp;)"></a> <dt> o <b>IsImplemented</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsImplemented</b>(<td> const <script type="text/javascript"> activateLink('CATIFmtConnectivity','CATIFmtConnectivity*')</script> <td><tt>iConnectivity</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oImplemented</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Determines whether the criterion can be computed for a given connectivity or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConnectivity</tt>
   <dd>   The finite element connectivity to be tested.
 </dd>
    <dt><tt>  oImplemented</tt>
   <dd> <ul>       <li>TRUE : the criterion can be computed.<br></li>
       <li>FALSE: the criterion can not be computed..</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The criterion can be computed.
   <dt>E_FAIL</dt><dd>The criterion has no meaning.
   </dl>
</dl>
</dl>
<a name="IsVisible"></a><a name="IsVisible()"></a> <dt> o <b>IsVisible</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsVisible</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns if the criterion is useful by the mesh analysis quality.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An int.
   <br><b>Legal values</b>:
   <dl><dt>0</dt><dd>The criterion is ignored.
   <dt>1</dt><dd>The criterion is use.
   </dl>
</dl>
</dl>
<a name="NeedGeometricSupport"></a><a name="NeedGeometricSupport()"></a> <dt> o <b>NeedGeometricSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>NeedGeometricSupport</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns if the criterion needs geometric support.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An int.
   <br><b>Legal values</b>:
   <dl><dt>0</dt><dd>The criterion don't need geometric support.
   <dt>1</dt><dd>The criterion needs geometric support.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIFmtCriterion.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFmtModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

