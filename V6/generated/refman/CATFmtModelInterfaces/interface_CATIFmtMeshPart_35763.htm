<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFmtModelInterfaces Interface CATIFmtMeshPart</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFmtModelInterfaces.htm" href="../CATFmtModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFmtModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIFmtMeshPart"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFmtModelInterfaces Interface CATIFmtMeshPart</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIFmtMeshPart_35763','CATIFmtMeshPart','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIFmtMeshPart</b>
</p>
<p>
<b><i> Interface representing a <b>Mesh Part</b>.</i></b><br>

 <b>Role</b>: This interface should be used to access all data associated to a <b>Mesh Part</b>, 
 such as global and local mesh specifications or geometry to be meshed (supports).
 <p>A Mesh Part is an <b>Analysis Set</b> which has some specific attributes (global specifications
 and supports) and can contain <b>Analysis Entities</b> which represent local mesh specifications.
 <p>Associated to each <b>Mesh Part</b>, there is a <b>Mesher</b> which is called to check the supports and
 to build the mesh, see <script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','','CATIFmtMesher') </script>.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Check()"><b>Check</b></a>()
<dd>  Check the <b>Mesh Part</b>.
 <dt> o 
    <a href="#CloseEdition(CATBoolean)"><b>CloseEdition</b></a>(CATBoolean)
<dd>  Exit the <b>Mesh Part</b> from the edition mode.
 <dt> o 
    <a href="#Contains(CATFmtElement*)"><b>Contains</b></a>(CATFmtElement*)
<dd>  Check if the <b>Mesh Part</b> contains a given finite element.
 <dt> o 
    <a href="#Copy(CATIFmtMeshPart*,CATMathTransformation*,int)"><b>Copy</b></a>(CATIFmtMeshPart*,CATMathTransformation*,int)
<dd>  Copy the content (nodes & elements) of a <b>Mesh Part</b> into the current one.
 <dt> o 
    <a href="#CreateLocalSpecification(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIFmtLocalSpecification*&amp;)"><b>CreateLocalSpecification</b></a>(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIFmtLocalSpecification*&amp;)
<dd>  Creates a new local specification within the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetActivity()"><b>GetActivity</b></a>()
<dd>  Returns the current state of the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetExternalReference(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*&amp;,int)"><b>GetExternalReference</b></a>(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*&amp;,int)
<dd>  Retreive an external reference in a global mesh specification.
 <dt> o 
    <a href="#GetFeature(CATString&amp;)"><b>GetFeature</b></a>(CATString&amp;)
<dd>  Returns features aggregated in the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetFirstMeshDomain()"><b>GetFirstMeshDomain</b></a>()
<dd>  Returns the first <b>Mesh Domain</b> of the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,int&amp;)"><b>GetGlobalSpecification</b></a>(CATString&amp;,CATUnicodeString&amp;,int&amp;)
<dd>  Retreives the integer value of a global mesh specification.
 <dt> o 
    <a href="#GetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,double&amp;)"><b>GetGlobalSpecification</b></a>(CATString&amp;,CATUnicodeString&amp;,double&amp;)
<dd>  Retreives the real double value of a global mesh specification.
 <dt> o 
    <a href="#GetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,CATBaseUnknown*&amp;)"><b>GetGlobalSpecification</b></a>(CATString&amp;,CATUnicodeString&amp;,CATBaseUnknown*&amp;)
<dd>  Retreives the pointer value of a global mesh specification.
 <dt> o 
    <a href="#GetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>GetGlobalSpecification</b></a>(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Retreives the character value of a global mesh specification.
 <dt> o 
    <a href="#GetLastMeshDomain()"><b>GetLastMeshDomain</b></a>()
<dd>  Returns the last <b>Mesh Domain</b> of the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetLocalSpecifications(CATString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"><b>GetLocalSpecifications</b></a>(CATString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Get local specifications of the <b>Mesh</b>.
 <dt> o 
    <a href="#GetMesh()"><b>GetMesh</b></a>()
<dd>  Returns the <b>Mesh</b> corresponding to the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetMeshManager()"><b>GetMeshManager</b></a>()
<dd>  Returns the <b>Mesh Manager</b> corresponding to the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetMeshVisibility()"><b>GetMeshVisibility</b></a>()
<dd>  Retrieves the visibility status of the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetNumberOfElements()"><b>GetNumberOfElements</b></a>()
<dd>  Returns the number of finite elements belonging to the <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetNumberOfExternalReferences(CATString&amp;,CATUnicodeString&amp;)"><b>GetNumberOfExternalReferences</b></a>(CATString&amp;,CATUnicodeString&amp;)
<dd>  Returns the number of references defined in a global mesh specification.
 <dt> o 
    <a href="#GetNumberOfSupports()"><b>GetNumberOfSupports</b></a>()
<dd>  Returns the number of supports defined.
 <dt> o 
    <a href="#GetParentMeshParts(CATFmtListOfPath*&amp;)"><b>GetParentMeshParts</b></a>(CATFmtListOfPath*&amp;)
<dd>  Retreives the parent <b>Mesh Parts</b> of the part.
 <dt> o 
    <a href="#GetSupport(CATFmtPath*&amp;,int)"><b>GetSupport</b></a>(CATFmtPath*&amp;,int)
<dd>  Retreives a support from it's number.
 <dt> o 
    <a href="#IsInEdition()"><b>IsInEdition</b></a>()
<dd>  Check if the <b>Mesh Part</b> is in edition mode.
 <dt> o 
    <a href="#IsOfType(CATUnicodeString&amp;)"><b>IsOfType</b></a>(CATUnicodeString&amp;)
<dd>  Query the <b>Mesh Part</b> about the type of mesh generated.
 <dt> o 
    <a href="#Next()"><b>Next</b></a>()
<dd>  Returns the next <b>Mesh Part</b> of the <b>Mesh</b>.
 <dt> o 
    <a href="#OpenEdition(CATBoolean)"><b>OpenEdition</b></a>(CATBoolean)
<dd>  Enter the <b>Mesh Part</b> into edition mode.
 <dt> o 
    <a href="#RemoveExternalReference(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*)"><b>RemoveExternalReference</b></a>(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*)
<dd>  Remove a support of an external reference in a global mesh specification.
 <dt> o 
    <a href="#RemoveMesh()"><b>RemoveMesh</b></a>()
<dd>  Remove the mesh corresponding to the <b>Mesh Part</b>.
 <dt> o 
    <a href="#RemoveSupport(CATFmtPath*)"><b>RemoveSupport</b></a>(CATFmtPath*)
<dd>  Remove a support.
 <dt> o 
    <a href="#SetActivity(int)"><b>SetActivity</b></a>(int)
<dd>  Set the current state of the <b>Mesh Part</b>.
 <dt> o 
    <a href="#SetExternalReference(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*,int,CATUnicodeString&amp;)"><b>SetExternalReference</b></a>(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*,int,CATUnicodeString&amp;)
<dd>  Valuates a global mesh specification with external reference.
 <dt> o 
    <a href="#SetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,int)"><b>SetGlobalSpecification</b></a>(CATString&amp;,CATUnicodeString&amp;,int)
<dd>  Valuates a global mesh specification to a integer value.
 <dt> o 
    <a href="#SetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,double)"><b>SetGlobalSpecification</b></a>(CATString&amp;,CATUnicodeString&amp;,double)
<dd>  Valuates a global mesh specification to a real double value.
 <dt> o 
    <a href="#SetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>SetGlobalSpecification</b></a>(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Valuates a global mesh specification to a character value.
 <dt> o 
    <a href="#SetMeshPartsToCapture(CATFmtListOfPath*)"><b>SetMeshPartsToCapture</b></a>(CATFmtListOfPath*)
<dd>  Set the list of candidate <b>Mesh Parts</b> for capture.
 <dt> o 
    <a href="#SetMeshVisibility(CATBoolean)"><b>SetMeshVisibility</b></a>(CATBoolean)
<dd>  Sets the <b>Mesh Part</b> visualization status.
 <dt> o 
    <a href="#SetSupport(CATFmtPath*,int,CATUnicodeString&amp;)"><b>SetSupport</b></a>(CATFmtPath*,int,CATUnicodeString&amp;)
<dd>  Defines a support.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Check"></a><a name="Check()"></a> <dt> o <b>Check</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Check</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Check the <b>Mesh Part</b>.
 <br><b>Role</b>: The <b>Mesh Part</b> is analysed to see if the supports are still valid.
 <br>The Check method is also called at the end of the SetSupport method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The supports are still valid
   <dt>E_FAIL</dt><dd>The supports are no longer valid, the <b>Mesh Part</b> can no longer be updated.
   </dl>
</dl>
</dl>
<a name="CloseEdition"></a><a name="CloseEdition(CATBoolean)"></a> <dt> o <b>CloseEdition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CloseEdition</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iUpTodate</tt><td><tt>= TRUE </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Exit the <b>Mesh Part</b> from the edition mode.
 <br><b>Role</b>: This method should be called after editing the content of the <b>Mesh Part</b>,
 i.e. after modifying nodes and elements independently from the meshser of the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUpTodate</tt>
   <dd>   <br><b>Legal values</b>: 
   <dl><dt>"TRUE"</dt><dd>The <b>Mesh Part</b> should be considered as up to date at the end of edition.
   <dt>"FALSE"</dt><dd>The <b>Mesh Part</b> is not up to date at the end of edition.</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The edition mode have been successfully exited.
   <dt>E_FAIL</dt><dd>Some problems encountered while exiting the edition mode.
   </dl>
</dl>
</dl>
<a name="Contains"></a><a name="Contains(CATFmtElement*)"></a> <dt> o <b>Contains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Contains</b>(<td><script type="text/javascript"> activateLink('CATFmtElement','CATFmtElement*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Check if the <b>Mesh Part</b> contains a given finite element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   The finite element to be checked.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An integer value:.
 <dl><dt>0</dt><dd>if the <b>Mesh Part</b> contains the finite element.
 <dt>1</dt><dd>otherwise.
 </dl>
</dl>
</dl>
<a name="Copy"></a><a name="Copy(CATIFmtMeshPart*,CATMathTransformation*,int)"></a> <dt> o <b>Copy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Copy</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation*')</script> <td><tt>iTransfo</tt><td><tt>= NULL </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDoNotCopyAssociativity</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Copy the content (nodes & elements) of a <b>Mesh Part</b> into the current one.
 <br><b>Role</b>: This method should be used only to copy nodes and elements of a <b>Mesh Part</b>
 while implementing a <b>Mesher</b>. See 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','Mesh','CATIFmtMesher.Mesh') </script> method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   <b>Mesh Parts</b> containing nodes and elements to copy.
 </dd>
    <dt><tt> iTransfo</tt>
   <dd>   Transformation to be applied during copy.
 </dd>
    <dt><tt> iDoNotCopyAssociativity</tt>
   <dd>   <br><b>Legal values</b>:
   <dl><dt>0</dt><dd>Nodes and elements associativity is copied.
   <dt>1</dt><dd>Nodes and elements associativity is not copied.
   </dl></dd>
</dl>
</dl>
</dl>
<a name="CreateLocalSpecification"></a><a name="CreateLocalSpecification(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIFmtLocalSpecification*&amp;)"></a> <dt> o <b>CreateLocalSpecification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateLocalSpecification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iLateType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIFmtLocalSpecification','CATIFmtLocalSpecification*&amp;')</script> <td><tt>oLocalSpec</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a new local specification within the <b>Mesh Part</b>.
 <br><b>Role</b>: This methods creates local specification within the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the local specification (Late type of the local specification). 
 </dd>
    <dt><tt> oLocalSpec</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer on the created local specification. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The local specification has been successfully set.
   <dt>E_FAIL</dt><dd>The local specification was not created.
   </dl>
</dl>
</dl>
<a name="GetActivity"></a><a name="GetActivity()"></a> <dt> o <b>GetActivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetActivity</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the current state of the <b>Mesh Part</b>.
 <br><b>Possible values</b>:
 <dl><dt>0</dt><dd><b>Mesh Part</b> is not active.
 <dt>1</dt><dd><b>Mesh Part</b> is active.
 </dl>
 <br>When a <b>Mesh Part</b> is active, all its elements are visible and will be taken into account for computation.
 <br>When a <b>Mesh Part</b> is not active, all its elements are not visible and will be ignored in any computation.
</dl>
<a name="GetExternalReference"></a><a name="GetExternalReference(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*&amp;,int)"></a> <dt> o <b>GetExternalReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetExternalReference</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*&amp;')</script> <td><tt>oReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumber</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retreive an external reference in a global mesh specification.
 <br><b>Role</b>: An external reference is defined by a Product Linkable Object ( PLO )
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global mesh specification. 
 </dd>
    <dt><tt> oReference</tt>
   <dd> [out, CATBaseUnknown#Release]   <b>Path</b> to the external reference.
 </dd>
    <dt><tt> iNumber</tt>
   <dd>   The reference number. Should be between 1 and the number of external reference.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The external reference has been successfully retreived.
   <dt>E_FAIL</dt><dd> The external reference has not been retreived.
   </dl>
</dl>
</dl>
<a name="GetFeature"></a><a name="GetFeature(CATString&amp;)"></a> <dt> o <b>GetFeature</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown *')</script>  <b>GetFeature</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>Type</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns features aggregated in the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   Type of the feature ("Mesh" or "Topology"). 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    the feature to access.
   <br><b>Lifecycle rules deviation</b>: No AddRef is done on returned value.
</dl>
</dl>
<a name="GetFirstMeshDomain"></a><a name="GetFirstMeshDomain()"></a> <dt> o <b>GetFirstMeshDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATFmtMeshDomain','CATFmtMeshDomain *')</script>  <b>GetFirstMeshDomain</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first <b>Mesh Domain</b> of the <b>Mesh Part</b>.
 <br>See 
<script type="text/javascript"> activateLinkAnchor('CATFmtMeshDomain','Next','CATFmtMeshDomain.Next') </script> method to scan the other <b>Mesh Domains</b>.
</dl>
<a name="GetGlobalSpecification"></a><a name="GetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,int&amp;)"></a> <dt> o <b>GetGlobalSpecification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGlobalSpecification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retreives the integer value of a global mesh specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global specification. 
 </dd>
    <dt><tt> oValue</tt>
   <dd>   Integer value of the specification. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The valuation successfully done.
   <dt>E_FAIL</dt><dd>Invalid specification.
   </dl>
</dl>
</dl>
<a name="GetGlobalSpecification"></a><a name="GetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,double&amp;)"></a> <dt> o <b>GetGlobalSpecification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGlobalSpecification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retreives the real double value of a global mesh specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global specification. 
 </dd>
    <dt><tt> oValue</tt>
   <dd>   Real double value of the specification.
   ( In case of Length, oValue is evaluated in millimeters ).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The valuation successfully done.
   <dt>E_FAIL</dt><dd>Invalid specification.
   </dl>
</dl>
</dl>
<a name="GetGlobalSpecification"></a><a name="GetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,CATBaseUnknown*&amp;)"></a> <dt> o <b>GetGlobalSpecification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGlobalSpecification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retreives the pointer value of a global mesh specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global specification. 
 </dd>
    <dt><tt> oValue</tt>
   <dd> [out, CATBaseUnknown#Release]   Pointer to the value of the specification. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The valuation successfully done.
   <dt>E_FAIL</dt><dd>Invalid specification.
   </dl>
</dl>
</dl>
<a name="GetGlobalSpecification"></a><a name="GetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetGlobalSpecification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGlobalSpecification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retreives the character value of a global mesh specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global specification. 
 </dd>
    <dt><tt> oValue</tt>
   <dd>   Character value of the specification. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The valuation successfully done.
   <dt>E_FAIL</dt><dd>Invalid specification.
   </dl>
</dl>
</dl>
<a name="GetLastMeshDomain"></a><a name="GetLastMeshDomain()"></a> <dt> o <b>GetLastMeshDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATFmtMeshDomain','CATFmtMeshDomain *')</script>  <b>GetLastMeshDomain</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the last <b>Mesh Domain</b> of the <b>Mesh Part</b>.
 <br>See 
<script type="text/javascript"> activateLinkAnchor('CATFmtMeshDomain','Previous','CATFmtMeshDomain.Previous') </script> method to scan the other <b>Mesh Domains</b>.
</dl>
<a name="GetLocalSpecifications"></a><a name="GetLocalSpecifications(CATString&amp;,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetLocalSpecifications</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLocalSpecifications</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iLateType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oListOfSpecifications</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get local specifications of the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iLateType</tt>
   <dd>   Name of the local specification. 
 </dd>
    <dt><tt> LocalSpec</tt>
   <dd>  Collection of local specifications</dd>
</dl>
</dl>
</dl>
<a name="GetMesh"></a><a name="GetMesh()"></a> <dt> o <b>GetMesh</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIFmtMesh','CATIFmtMesh *')</script>  <b>GetMesh</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the <b>Mesh</b> corresponding to the <b>Mesh Part</b>.
 <br><b>Lifecycle rules deviation</b>: No AddRef is done on returned value.
</dl>
<a name="GetMeshManager"></a><a name="GetMeshManager()"></a> <dt> o <b>GetMeshManager</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIFmtMeshManager','CATIFmtMeshManager *')</script>  <b>GetMeshManager</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the <b>Mesh Manager</b> corresponding to the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATBaseUnknown#Release
</dl>
</dl>
<a name="GetMeshVisibility"></a><a name="GetMeshVisibility()"></a> <dt> o <b>GetMeshVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GetMeshVisibility</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the visibility status of the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     A CATBoolean.
   <br><b>Legal values</b>:
   <dl><dt>FALSE</dt><dd>The <b>Mesh Part</b> is not visible.
   <dt>TRUE</dt><dd>The <b>Mesh Part</b> is visible.
   </dl>
</dl>
</dl>
<a name="GetNumberOfElements"></a><a name="GetNumberOfElements()"></a> <dt> o <b>GetNumberOfElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfElements</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of finite elements belonging to the <b>Mesh Part</b>.
</dl>
<a name="GetNumberOfExternalReferences"></a><a name="GetNumberOfExternalReferences(CATString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetNumberOfExternalReferences</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfExternalReferences</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of references defined in a global mesh specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global mesh specification. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    the number of references defined.
</dl>
</dl>
<a name="GetNumberOfSupports"></a><a name="GetNumberOfSupports()"></a> <dt> o <b>GetNumberOfSupports</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfSupports</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of supports defined.
</dl>
<a name="GetParentMeshParts"></a><a name="GetParentMeshParts(CATFmtListOfPath*&amp;)"></a> <dt> o <b>GetParentMeshParts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetParentMeshParts</b>(<td><script type="text/javascript"> activateLink('CATFmtListOfPath','CATFmtListOfPath*&amp;')</script> <td><tt>oParents</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retreives the parent <b>Mesh Parts</b> of the part.
 <br><b>Role</b>: A parent <b>Mesh Part</b>
 is a <b>Mesh Part</b> that should updated before the actual mesh. For example, in
 the case of a mesher connecting to geometric parts, the parents <b>Mesh Parts</b> are the one corresponding
 to these two parts (see 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','','CATIFmtMesher') </script> ). 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oParents</tt>
   <dd>   The list of <b>Paths</b> to the parent <b>Mesh Parts</b>. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The list has been successfully retreived.
   <dt>E_FAIL</dt><dd>The operation failed.
   </dl>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATFmtPath*&amp;,int)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*&amp;')</script> <td><tt>oSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumber</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retreives a support from it's number.
 <br><b>Role</b>: A support is defined by a CATFmtPath ( PLO )
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSupport</tt>
   <dd> [out, CATBaseUnknown#Release]   <b>Path</b> to the suppport of mesh part.
 </dd>
    <dt><tt> iNumber</tt>
   <dd>   Number of the requested support 
   <br><b>Legal values</b> between 1 and the number of supports.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The support has been successfully retreived.
   <dt>E_FAIL</dt><dd>The support can not be retreived for this <b>Mesh Part</b>. See Status output argument for a more detailed explanation.
   </dl>
</dl>
</dl>
<a name="IsInEdition"></a><a name="IsInEdition()"></a> <dt> o <b>IsInEdition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsInEdition</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Check if the <b>Mesh Part</b> is in edition mode.
 Returns:
   <br><b>Legal values</b>:
   <dl><dt>0</dt><dd>if the <b>Mesh Part</b> is in edition.
   <dt>1</dt><dd>if the <b>Mesh Part</b> is not in edition.
   </dl>
   <br>When a <b>Mesh Part</b> is active, all its elements are visible and will be taken into account for computation.
   <br>When a <b>Mesh Part</b> is not active, all its elements are not visible and will be ignored in any computation.
   </dl>
</dl>
<a name="IsOfType"></a><a name="IsOfType(CATUnicodeString&amp;)"></a> <dt> o <b>IsOfType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsOfType</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Query the <b>Mesh Part</b> about the type of mesh generated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   String representing the query made to the <b>Mesh Part</b>.
   <br><b>Legal values</b>: 
   <dl><dt>"1D"</dt><dd>Is the <b>Mesh Part</b> generating 1D finite elements?
   <dt>"2D"</dt><dd>Is the <b>Mesh Part</b> generating 2D finite elements?
   <dt>"3D"</dt><dd>Is the <b>Mesh Part</b> generating 3D finite elements?
   <dt>"Connection"</dt><dd>Is the <b>Mesh Part</b> generating connecting elements between meshes?</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The result of the query.
   <br><b>Legal values</b>:
   <dl><dt>1</dt><dd>The answer is yes.
   <dt>0</dt><dd>The answer is no.
   </dl>
</dl>
</dl>
<a name="Next"></a><a name="Next()"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart *')</script>  <b>Next</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the next <b>Mesh Part</b> of the <b>Mesh</b>.
 This method should be used with the 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesh','GetFirstMeshPart','CATIFmtMesh.GetFirstMeshPart') </script> method to scan all <b>Mesh Parts</b>. Take care of the fact that the order in which <b>Mesh Parts</b> are returned is arbitrary qnd
 that only <b>Mesh Parts</b> containing elements are returned.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATBaseUnknown#Release
</dl>
</dl>
<a name="OpenEdition"></a><a name="OpenEdition(CATBoolean)"></a> <dt> o <b>OpenEdition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OpenEdition</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iInvalidate</tt><td><tt>= TRUE </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Enter the <b>Mesh Part</b> into edition mode.
 <br><b>Role</b>: This method should be called before editing the content of the <b>Mesh Part</b>,
 i.e. before modifying nodes and elements independently from the meshser of the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInvalidate</tt>
   <dd>   <br><b>Legal values</b>: 
   <dl><dt>"TRUE"</dt><dd>The <b>Mesh Part</b> is no more up to date if edited.
   <dt>"FALSE"</dt><dd>The <b>Mesh Part</b> is still up to date if edited.</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The edition mode have been successfully activated.
   <dt>E_FAIL</dt><dd>Unable to enter in edition mode.
   </dl>
</dl>
</dl>
<a name="RemoveExternalReference"></a><a name="RemoveExternalReference(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*)"></a> <dt> o <b>RemoveExternalReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveExternalReference</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iSupport</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Remove a support of an external reference in a global mesh specification.
 <br><b>Role</b>: An object is defined by a Product Linkable Object ( PLO ).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   Type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global mesh specification. 
 </dd>
    <dt><tt> iSupport</tt>
   <dd>   <b>Path</b> to the external reference.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The support has been successfully removed.
   <dt>E_FAIL</dt><dd>The support removal of the external reference is not allowed for this local specification.
   </dl>
</dl>
</dl>
<a name="RemoveMesh"></a><a name="RemoveMesh()"></a> <dt> o <b>RemoveMesh</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveMesh</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Remove the mesh corresponding to the <b>Mesh Part</b>.
 <br><b>Role</b>: Deletes all the nodes and elements that have been generated by the <b>Mesher</b> corresponding to the 
 <b>Mesh Part</b>. 
   An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Mesh succesfuly removed.
   <dt>E_FAIL</dt><dd>Operation failed.
   </dl>
</dl>
<a name="RemoveSupport"></a><a name="RemoveSupport(CATFmtPath*)"></a> <dt> o <b>RemoveSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveSupport</b>(<td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iSupport</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Remove a support.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd>   <b>Path</b> to the support to be removed. If NULL all supports are removed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The support has been successfully removed.
   <dt>E_FAIL</dt><dd>The support is not allowed for this <b>Mesh Part</b>.
   </dl>
</dl>
</dl>
<a name="SetActivity"></a><a name="SetActivity(int)"></a> <dt> o <b>SetActivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetActivity</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iActivity</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Set the current state of the <b>Mesh Part</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActivity</tt>
   <dd> <br><b>Legal values</b>:
 <dl><dt>0</dt><dd>to set the <b>Mesh Part</b> unactive.
 <dt>1</dt><dd>to set the <b>Mesh Part</b> active.
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetExternalReference"></a><a name="SetExternalReference(CATString&amp;,CATUnicodeString&amp;,CATFmtPath*,int,CATUnicodeString&amp;)"></a> <dt> o <b>SetExternalReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetExternalReference</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt><td><tt>= 0 </tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iLinkType</tt><td><tt>= "" </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Valuates a global mesh specification with external reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global mesh specification. 
 </dd>
    <dt><tt> iSupport</tt>
   <dd>   <b>Path</b> to the external reference.
 </dd>
    <dt><tt> iMode</tt>
   <dd>   The mode used to valuate the reference global specification.
   <br><b>Legal values</b>: 
   <dl><dt>0</dt><dd>the global specification is defined as a single reference.
   <dt>1</dt><dd>the global specification is added to exising references.</dl>
 </dd>
    <dt><tt> iLinkType</tt>
   <dd>   Type of the created link pointing to the external reference. (Should be left blank)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The external reference has been successfully created.
   <dt>E_FAIL</dt><dd>The external reference is not allowed for this local specification.
   </dl>
</dl>
</dl>
<a name="SetGlobalSpecification"></a><a name="SetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>SetGlobalSpecification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGlobalSpecification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Valuates a global mesh specification to a integer value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global specification. 
 </dd>
    <dt><tt> iValue</tt>
   <dd>   Integer value to be used for the specification. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The valuation successfully done.
   <dt>E_FAIL</dt><dd>Invalid specification.
   </dl>
</dl>
</dl>
<a name="SetGlobalSpecification"></a><a name="SetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,double)"></a> <dt> o <b>SetGlobalSpecification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGlobalSpecification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Valuates a global mesh specification to a real double value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global specification. 
 </dd>
    <dt><tt> iValue</tt>
   <dd>   Real double value to be used for the specification. 
   ( In case of Length, iValue is evaluated in millimeters ).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The valuation successfully done.
   <dt>E_FAIL</dt><dd>Invalid specification.
   </dl>
</dl>
</dl>
<a name="SetGlobalSpecification"></a><a name="SetGlobalSpecification(CATString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetGlobalSpecification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGlobalSpecification</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Valuates a global mesh specification to a character value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   type of specification ("Mesh" or "Topology"). 
 </dd>
    <dt><tt> iName</tt>
   <dd>   Name of the global specification. 
 </dd>
    <dt><tt> iValue</tt>
   <dd>   Character value to be used for the specification. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The valuation successfully done.
   <dt>E_FAIL</dt><dd>Invalid specification.
   </dl>
</dl>
</dl>
<a name="SetMeshPartsToCapture"></a><a name="SetMeshPartsToCapture(CATFmtListOfPath*)"></a> <dt> o <b>SetMeshPartsToCapture</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMeshPartsToCapture</b>(<td><script type="text/javascript"> activateLink('CATFmtListOfPath','CATFmtListOfPath*')</script> <td><tt>iParents</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Set the list of candidate <b>Mesh Parts</b> for capture. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParents</tt>
   <dd>   List of candidate <b>Path</b> to <b>Mesh Parts</b> for capture.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Operation successful.
   <dt>E_FAIL</dt><dd>Operation failed.
   </dl>
</dl>
</dl>
<a name="SetMeshVisibility"></a><a name="SetMeshVisibility(CATBoolean)"></a> <dt> o <b>SetMeshVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMeshVisibility</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iVisibility</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the <b>Mesh Part</b> visualization status.
 <br><b>Role</b>: Hide / Show the mesh part.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVisibility</tt>
   <dd>   <br><b>Legal values</b>: 
   <dl><dt>FALSE</dt><dd>The <b>Mesh Part</b> is not visible
   <dt>TRUE</dt><dd>The <b>Mesh Part</b> is visible
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The mesh visibility status has been set.
   <dt>E_FAIL</dt><dd>The mesh visibility status cannot be set.
   </dl>
</dl>
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATFmtPath*,int,CATUnicodeString&amp;)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSupport</b>(<td><script type="text/javascript"> activateLink('CATFmtPath','CATFmtPath*')</script> <td><tt>iSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt><td><tt>= 0 </tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iType</tt><td><tt>= "" </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines a support.
 <br><b>Role</b>: A support is defined by a CATFmtPath
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd>   CATFmtPath object representing the support
 </dd>
    <dt><tt> iMode</tt>
   <dd>   The mode used to define support.
   <br><b>Legal values</b>: 
   <dl><dt>0</dt><dd>The support is defined as a single support.
   <dt>1</dt><dd>The support is added to exising supports.
 </dd>
    <dt><tt> iType</tt>
   <dd>   Type of the simulation connector which is created to point to the support.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The support has been successfully created.
   <dt>E_FAIL</dt><dd>The support is not allowed for this <b>Mesh Part</b>.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIFmtMeshPart.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFmtModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

