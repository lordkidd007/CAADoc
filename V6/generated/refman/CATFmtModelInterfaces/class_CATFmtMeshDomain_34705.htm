<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFmtModelInterfaces Class CATFmtMeshDomain</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFmtModelInterfaces.htm" href="../CATFmtModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFmtModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATFmtMeshDomain"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFmtModelInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmtMeshDomain</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmtMeshDomain_34705','CATFmtMeshDomain','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmtMeshDomain</b>
</p>
<p>
<b><i> Object representing a <b>Mesh Domain</b>.</i></b><br>

 <b>Role</b>: This interface should be used to access all data associated to a <b>Mesh Domain</b>. 
 A <b>Mesh Domain</b> is a group of finite elements, each finite elements is belonging to a single <b>Mesh Domain</b>
 which is assigned at creation.
 Use <script type="text/javascript"> activateLinkAnchor('CATIFmtMesh','SetCurrentMeshDomain','CATIFmtMesh.SetCurrentMeshDomain') </script> method to change the current domain to which are assigned to new finite elements.
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRef()"><b>AddRef</b></a>()
<dd>  Increments the reference count.
 <dt> o 
    <a href="#GetElements(CATFmtElement**&amp;)"><b>GetElements</b></a>(CATFmtElement**&amp;)
<dd>  Retreive all finite elements contained in the <b>Mesh Domain</b>.
 <dt> o 
    <a href="#GetMesh()"><b>GetMesh</b></a>()
<dd>  Returns the <b>Mesh</b> containing the <b>Mesh Domain</b>.
 <dt> o 
    <a href="#GetMeshPart()"><b>GetMeshPart</b></a>()
<dd>  Returns the <b>Mesh Part</b> containing the <b>Mesh Domain</b>.
 <dt> o 
    <a href="#GetNumberOfElements()"><b>GetNumberOfElements</b></a>()
<dd>  Returns the number of finite elements contained in the <b>Mesh Domain</b>.
 <dt> o 
    <a href="#GetTag()"><b>GetTag</b></a>()
<dd>  Returns the integer tag associated to the <b>Mesh Domain</b>.
 <dt> o 
    <a href="#IsInSameMeshPart(CATFmtMeshDomain*)"><b>IsInSameMeshPart</b></a>(CATFmtMeshDomain*)
<dd>  Checks if another domain in in same MeshPart 
 
 <dt> o 
    <a href="#Next()"><b>Next</b></a>()
<dd>  Returns the next <b>Mesh Domain</b> in the <b>Mesh</b>.
 <dt> o 
    <a href="#Previous()"><b>Previous</b></a>()
<dd>  Returns the previous <b>Mesh Domain</b> in the <b>Mesh</b>.
 <dt> o 
    <a href="#Release()"><b>Release</b></a>()
<dd>  Decrements the reference count.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRef"></a><a name="AddRef()"></a> <dt> o <b>AddRef</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline unsigned int')</script>  <b>AddRef</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Increments the reference count. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The reference count value. <br>This information is meant to be used for diagnostic/testing purposes only, because, in certain situations, the value may be unstable.
</dl>
</dl>
<a name="GetElements"></a><a name="GetElements(CATFmtElement**&amp;)"></a> <dt> o <b>GetElements</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetElements</b>(<td><script type="text/javascript"> activateLink('CATFmtElement','CATFmtElement**&amp;')</script> <td><tt>Elements</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retreive all finite elements contained in the <b>Mesh Domain</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElements</tt>
   <dd>   An array containing all pointers to finite elements contained in the <b>Mesh Domain</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of finite elements contained in the <b>Mesh Domain</b>.
</dl>
</dl>
<a name="GetMesh"></a><a name="GetMesh()"></a> <dt> o <b>GetMesh</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIFmtMesh','CATIFmtMesh *')</script>  <b>GetMesh</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the <b>Mesh</b> containing the <b>Mesh Domain</b>.
 <br><b>Lifecycle rules deviation</b>: No AddRef is done on returned value.
</dl>
<a name="GetMeshPart"></a><a name="GetMeshPart()"></a> <dt> o <b>GetMeshPart</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart *')</script>  <b>GetMeshPart</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the <b>Mesh Part</b> containing the <b>Mesh Domain</b>.
 <br><b>Lifecycle rules deviation</b>: No AddRef is done on returned value.
</dl>
<a name="GetNumberOfElements"></a><a name="GetNumberOfElements()"></a> <dt> o <b>GetNumberOfElements</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetNumberOfElements</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of finite elements contained in the <b>Mesh Domain</b>.
</dl>
<a name="GetTag"></a><a name="GetTag()"></a> <dt> o <b>GetTag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline unsigned int')</script>  <b>GetTag</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the integer tag associated to the <b>Mesh Domain</b>.
</dl>
<a name="IsInSameMeshPart"></a><a name="IsInSameMeshPart(CATFmtMeshDomain*)"></a> <dt> o <b>IsInSameMeshPart</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsInSameMeshPart</b>(<td><script type="text/javascript"> activateLink('CATFmtMeshDomain','CATFmtMeshDomain*')</script> <td><tt>Domain</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Checks if another domain in in same MeshPart 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  An integer. <br><b>Possible values</b>:
 <dl><dt>0</dt><dd>if the <b>Mesh Domains</b> belong to different <b>Mesh Parts</b>.
 <dt>1</dt><dd>if the <b>Mesh Domains</b> belong to the same <b>Mesh Part</b>.
 </dl>
</dl>
</dl>
<a name="Next"></a><a name="Next()"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmtMeshDomain','inline CATFmtMeshDomain *')</script>  <b>Next</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the next <b>Mesh Domain</b> in the <b>Mesh</b>. This method should be used with
 the 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesh','GetFirstMeshDomain','CATIFmtMesh.GetFirstMeshDomain') </script> method to scan all <b>Mesh Domains</b>.
</dl>
<a name="Previous"></a><a name="Previous()"></a> <dt> o <b>Previous</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmtMeshDomain','inline CATFmtMeshDomain *')</script>  <b>Previous</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the previous <b>Mesh Domain</b> in the <b>Mesh</b>. This method should be used with
 the 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesh','GetFirstMeshDomain','CATIFmtMesh.GetFirstMeshDomain') </script> method to scan all <b>Mesh Domains</b>.
</dl>
<a name="Release"></a><a name="Release()"></a> <dt> o <b>Release</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','unsigned int')</script>  <b>Release</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Decrements the reference count. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The reference count value. <br>This information is meant to be used for diagnostic/testing purposes only, because, in certain situations, the value may be unstable.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmtMeshDomain.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFmtModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

