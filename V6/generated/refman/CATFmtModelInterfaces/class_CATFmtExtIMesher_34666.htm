<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATFmtModelInterfaces Class CATFmtExtIMesher</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATFmtModelInterfaces.htm" href="../CATFmtModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATFmtModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATFmtExtIMesher"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATFmtModelInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmtExtIMesher</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmtExtIMesher_34666','CATFmtExtIMesher','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATFmtExtIMesher</b>
</p>
<p>
<b><i> Adapter for CATIFmtMesher interface.</i></b><br>


 <b>Role</b>: This class provides a default implementation for any extension of 
 <script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','','CATIFmtMesher') </script>. That means one should derive from this class to implement the mesher algorithm
 to build the finite element mesh of a <b>Mesh Part</b>.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','','CATIFmtMesher') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATFmtExtIMesher()"><b>CATFmtExtIMesher</b></a>()
<dd>  Constructor.
 <dt> o 
    <a href="#~CATFmtExtIMesher()"><b>~CATFmtExtIMesher</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AfterUpdating(CATIFmtMeshPart*)"><b>AfterUpdating</b></a>(CATIFmtMeshPart*)
<dd>  Performs cleaning operations after updating a <b>Mesh Part</b>.
 <dt> o 
    <a href="#BeforeUpdating(CATIFmtMeshPart*)"><b>BeforeUpdating</b></a>(CATIFmtMeshPart*)
<dd>  Performs initialization operations before updating a <b>Mesh Part</b>.
 <dt> o 
    <a href="#CloseEdition()"><b>CloseEdition</b></a>()
<dd>  Performs mesher-specific operations before exiting edition mode for a <b>Mesh Part</b>.
 <dt> o 
    <a href="#GetMeshedBodies(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"><b>GetMeshedBodies</b></a>(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)
<dd>  
 <dt> o 
    <a href="#GetMeshedShapes(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"><b>GetMeshedShapes</b></a>(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)
<dd>  
 <dt> o 
    <a href="#Invalidate(CATIFmtMeshPart*)"><b>Invalidate</b></a>(CATIFmtMeshPart*)
<dd>  Invalidates the mesh and the topology corresponding to the <b>Mesh Part</b>.
 <dt> o 
    <a href="#IsMeshingBodies(CATIFmtMeshPart*,CATBoolean&amp;)"><b>IsMeshingBodies</b></a>(CATIFmtMeshPart*,CATBoolean&amp;)
<dd>  Queries the mesher to know if the <b>Mesh Part</b> is meshing 3D bodies or not.
 <dt> o 
    <a href="#IsMeshingShapes(CATIFmtMeshPart*,CATBoolean&amp;)"><b>IsMeshingShapes</b></a>(CATIFmtMeshPart*,CATBoolean&amp;)
<dd>  Queries the mesher to know if the <b>Mesh Part</b> is meshing 3D shapes or not.
 <dt> o 
    <a href="#OnMeshPartRemove(CATIFmtMeshPart*)"><b>OnMeshPartRemove</b></a>(CATIFmtMeshPart*)
<dd>  Performs cleaning operations before removing a <b>Mesh Part</b>.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATFmtExtIMesher"></a><a name="CATFmtExtIMesher()"></a> <dt> o <b>CATFmtExtIMesher</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmtExtIMesher</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor.
</dl>
<a name="~CATFmtExtIMesher"></a><a name="~CATFmtExtIMesher()"></a> <dt> o <b>~CATFmtExtIMesher</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATFmtExtIMesher</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor. CATFmtExtIMesher
</dl>
 <h2>Methods</h2> <br>
<a name="AfterUpdating"></a><a name="AfterUpdating(CATIFmtMeshPart*)"></a> <dt> o <b>AfterUpdating</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AfterUpdating</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Performs cleaning operations after updating a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called after updating a <b>Mesh Part</b> and 
 should perform necessary cleaning operations.
 <br>Default implementation does nothing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Cleaning operations successful.
   <dt>E_FAIL</dt><dd>Cleaning operations failed.
   </dl>
</dl>
</dl>
<a name="BeforeUpdating"></a><a name="BeforeUpdating(CATIFmtMeshPart*)"></a> <dt> o <b>BeforeUpdating</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeforeUpdating</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Performs initialization operations before updating a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called before updating a <b>Mesh Part</b> and 
 should perform necessary cleaning operations.
 <br>Default implementation deletes all finite elements belonging to the <b>Mesh Part</b> (if any) and also deletes the corresponding
 nodes if they become free.
 <br>Take care when overloading this method to the potential impacts.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Initialization operations successful.
   <dt>E_FAIL</dt><dd>Initialization operations failed.
   </dl>
</dl>
</dl>
<a name="CloseEdition"></a><a name="CloseEdition()"></a> <dt> o <b>CloseEdition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CloseEdition</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Performs mesher-specific operations before exiting edition mode for a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called before exiting edition mode for a <b>Mesh Part</b> and 
 can be used to perform mesher-specific operations ( see 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMeshPart','CloseEdition','CATIFmtMeshPart.CloseEdition') </script> ). <br>Default implementation does not execute any operations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Operations successful.
   <dt>E_FAIL</dt><dd>Operations failed.
   </dl>
</dl>
</dl>
<a name="GetMeshedBodies"></a><a name="GetMeshedBodies(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"></a> <dt> o <b>GetMeshedBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMeshedBodies</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtListOfPath','CATFmtListOfPath*&amp;')</script> <td><tt>oMeshedBodies</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R417
 This method is replaced with 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','IsMeshingBodies','CATIFmtMesher.IsMeshingBodies') </script> Retrieves the 3D Bodies meshed by the <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called to retrieve the 3D Bodies meshed by the <b>Mesh Part</b>.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
    <dt><tt> oMeshedBodies</tt>
   <dd>   The 3D Bodies meshed by the <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The meshed 3D Bodies has been successfully retrieved.
   <dt>E_FAIL</dt><dd>The retrieval of the meshed 3D Bodies failed.
   </dl>
</dl>
</dl>
<a name="GetMeshedShapes"></a><a name="GetMeshedShapes(CATIFmtMeshPart*,CATFmtListOfPath*&amp;)"></a> <dt> o <b>GetMeshedShapes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMeshedShapes</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmtListOfPath','CATFmtListOfPath*&amp;')</script> <td><tt>oMeshedShapes</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R417
 This method is replaced with 
<script type="text/javascript"> activateLinkAnchor('CATIFmtMesher','IsMeshingShapes','CATIFmtMesher.IsMeshingShapes') </script> Retrieves the 3D Shapes meshed by the <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called to retrieve the 3D Shapes meshed by the <b>Mesh Part</b>.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
    <dt><tt> oMeshedShapes</tt>
   <dd>   The 3D Shapes meshed by the <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The meshed 3D Shapes has been successfully retrieved.
   <dt>E_FAIL</dt><dd>The retrieval of the meshed 3D Shapes failed.
   </dl>
</dl>
</dl>
<a name="Invalidate"></a><a name="Invalidate(CATIFmtMeshPart*)"></a> <dt> o <b>Invalidate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Invalidate</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Invalidates the mesh and the topology corresponding to the <b>Mesh Part</b>.
 The mesh and the topology will have to be regenerated.
 <br><b>Role</b>: This method is called to regenerate the mesh and the topology from scratch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Mesh and topology successfully invalidated.
   <dt>E_FAIL</dt><dd>Invalidation failed.
   </dl>
</dl>
</dl>
<a name="IsMeshingBodies"></a><a name="IsMeshingBodies(CATIFmtMeshPart*,CATBoolean&amp;)"></a> <dt> o <b>IsMeshingBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsMeshingBodies</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oIsMeshingBodies</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Queries the mesher to know if the <b>Mesh Part</b> is meshing 3D bodies or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
    <dt><tt> oIsMeshingBodies</tt>
   <dd>   The query result.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The query has been proceeded with success.
   <dt>E_FAIL</dt><dd>Query failed.
   </dl>
</dl>
</dl>
<a name="IsMeshingShapes"></a><a name="IsMeshingShapes(CATIFmtMeshPart*,CATBoolean&amp;)"></a> <dt> o <b>IsMeshingShapes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsMeshingShapes</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oIsMeshingShapes</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Queries the mesher to know if the <b>Mesh Part</b> is meshing 3D shapes or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
    <dt><tt> oIsMeshingShapes</tt>
   <dd>   The query result.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>The query has been proceeded with success.
   <dt>E_FAIL</dt><dd>Query failed.
   </dl>
</dl>
</dl>
<a name="OnMeshPartRemove"></a><a name="OnMeshPartRemove(CATIFmtMeshPart*)"></a> <dt> o <b>OnMeshPartRemove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OnMeshPartRemove</b>(<td><script type="text/javascript"> activateLink('CATIFmtMeshPart','CATIFmtMeshPart*')</script> <td><tt>iMeshPart</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Performs cleaning operations before removing a <b>Mesh Part</b>.
 <br><b>Role</b>: This method is called before removing a <b>Mesh Part</b> and 
 performs necessary cleaning operations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeshPart</tt>
   <dd>   The <b>Mesh Part</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Cleaning operations successful.
   <dt>E_FAIL</dt><dd>Cleaning operations failed.
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmtExtIMesher.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFmtModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

