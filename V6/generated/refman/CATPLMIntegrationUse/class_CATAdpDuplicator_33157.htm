<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationUse Class CATAdpDuplicator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationUse.htm" href="../CATPLMIntegrationUse.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationUse";	}
		function getCurrentObjectName() { 
 	return "CATAdpDuplicator"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationUse <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpDuplicator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpDuplicator_33157','CATAdpDuplicator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpDuplicator</b>
</p>
<p>
<b><i> Class to duplicate (clone) elements.</i></b><br>

 <br><b>Role</b>: <p>This class duplicates elements passed as input if they are clonable.
 In IRPC, only references and representations can be passed as input.</p>

 <p>A cloning scope is calculated dynamically. The following component may be duplicated
 (and returned in the result set) if aggregated under a given reference, even if not*
 specified in input :</p><ul>
   <li>Instances, Representation Instances, Connections and Ports</li>
   <li>MonoInstanciated Representations and their associated instance</li></ul>

 <p>If defined, the relevant PLMIdentificationInitialization business logic with 'Cloning'
 OperationId will be called on every impacted reference or representation. If not defined
 a default logic is applied by adding the given IdCloningString to the first string
 attribute of the identifier set (most of the time the attirbute PLM_ExternalID).</p>

 <p>If a specific attribute set is associated to a given component, those attributes will
 applied after the attributes defined by the previous business logic. It may overwrite some
 of them.</p>

 Example of usage :
 <pre>
 CATAdpDuplicator duplicator;
 while(<there are components>)
 {
   CATAdpAttributeSet attributeSet;
   // Code which specifies attributes to change, like attributes in the identificator set
   // ...
   if(FAILED(duplicator.AddElement(pMyComp, attributeSet))
   //Error management
 }
 </pre>
 Then :
 <pre>
 if(FAILED(duplicator.Duplicate())
 {
    CATIAdpPLMErrorReviewer pErrorReviewer = NULL;
    duplicator.GetErrorReviewer(pErrorReviewer);
    //manage errors
    CATSysReleasePtr(pErrorReviewer);
 }
 </pre>
 Or :
 <pre>
 CATAdpComponentsAssociation duplicatedComponents;
 if(SUCCEEDED(duplicator.Duplicate(duplicatedComponents))
 {
   CATAdpComponentsAssociationIter iter(duplicatedComponents.GetIterator());
   CATIAdpPLMIdentificator *pSource, *pDuplicated = NULL;
   while(S_OK == iter.NextComponent(pSource, pDuplicated))
   {
      //Do something
      CATSysReleasePtr(pSource);
      CATSysReleasePtr(pDuplicated);
   }
 }
 else
 {
    CATIAdpPLMErrorReviewer *pErrorReviewer = NULL;
    duplicator.GetErrorReviewer(pErrorReviewer);
    //manage errors
    CATSysReleasePtr(pErrorReviewer);
 }
</pre></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAdpDuplicator(CATIAdpPLMErrorReviewer*)"><b>CATAdpDuplicator</b></a>(CATIAdpPLMErrorReviewer*)
<dd>  Constructor
 
 <dt> o 
    <a href="#CATAdpDuplicator(CATUnicodeString&amp;,CATIAdpPLMErrorReviewer*)"><b>CATAdpDuplicator</b></a>(CATUnicodeString&amp;,CATIAdpPLMErrorReviewer*)
<dd>  <dt> o 
    <a href="#~CATAdpDuplicator()"><b>~CATAdpDuplicator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddElement(CATIAdpPLMIdentificator*)"><b>AddElement</b></a>(CATIAdpPLMIdentificator*)
<dd>  Add element to duplicate<br/>

 <b>Role</b>: Entry point to add elements to duplication.
 <dt> o 
    <a href="#AddElement(CATIAdpPLMIdentificator*,CATAdpAttributeSet&amp;)"><b>AddElement</b></a>(CATIAdpPLMIdentificator*,CATAdpAttributeSet&amp;)
<dd>  Add element to duplicate with specific attributes to be set on the clone.
 <dt> o 
    <a href="#Duplicate()"><b>Duplicate</b></a>()
<dd>  Launch duplication.
 <dt> o 
    <a href="#Duplicate(CATAdpComponentsAssociation&amp;)"><b>Duplicate</b></a>(CATAdpComponentsAssociation&amp;)
<dd>  Launch duplication.
 <dt> o 
    <a href="#GetErrorReviewer(CATIAdpPLMErrorReviewer*&amp;)"><b>GetErrorReviewer</b></a>(CATIAdpPLMErrorReviewer*&amp;)
<dd>  Get the error reviewer.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAdpDuplicator"></a><a name="CATAdpDuplicator(CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>CATAdpDuplicator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpDuplicator</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iopErrorReviewer</tt>
   <dd> An error reviewer.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMErrorReviewer','','CATIAdpPLMErrorReviewer') </script>
</dl>
</dl>
<a name="CATAdpDuplicator"></a><a name="CATAdpDuplicator(CATUnicodeString&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>CATAdpDuplicator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpDuplicator</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iIdCloningString</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATAdpDuplicator"></a><a name="~CATAdpDuplicator()"></a> <dt> o <b>~CATAdpDuplicator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAdpDuplicator</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddElement"></a><a name="AddElement(CATIAdpPLMIdentificator*)"></a> <dt> o <b>AddElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddElement</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>ipAdpIdentificator</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Add element to duplicate<br/>

 <b>Role</b>: Entry point to add elements to duplication. The elements will be duplicated only if the Duplicate method is called.
 When using this method, it is recommended that you also specify a non empty and unique iIdCloningString in the constructor. This
 string will be passed as input to the PLMIdentificationInitialization business logic or be set as prefix of the identifier set if
 no relevant business logic is found. If iIdCloningString is not specified and components are add this way, naming conflicts may
 prevent the cloning operation.
 Please note that CAA attributes are always copied.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> *ipAdpIdentificator</tt>
   <dd> [in] : The element to duplicate.   Elements must be of duplicable type (Reference, RepReference, Entity...), else an error will be put in the error monitor at duplication time.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Error were encountered, no duplication done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   <dt><code>E_UNEXPECTED</code> Error were encountered, no duplication done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="AddElement"></a><a name="AddElement(CATIAdpPLMIdentificator*,CATAdpAttributeSet&amp;)"></a> <dt> o <b>AddElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddElement</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>ipAdpIdentificator</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAdpAttributeSet','CATAdpAttributeSet&amp;')</script> <td><tt>iAdpAttributeSet</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Add element to duplicate with specific attributes to be set on the clone.<br/>

 <b>Role</b>: Entry point to add elements to duplication. The elements will be duplicated only if the Duplicate method is called.
 The attribute set 
<script type="text/javascript"> activateLinkAnchor('CATAdpAttributeSet','','CATAdpAttributeSet') </script> is associated to the adp identificator 
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','','CATIAdpPLMIdentificator') </script>. The given attributes will complete and may overwrite the ones retrieved through the PLMIdentificationInitialization business logic.
 Please note that CAA attributes are always copied.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> *ipAdpIdentificator</tt>
   <dd> [in] : The element to duplicate.   Elements must be of duplicable type (Reference, RepReference, Entity...), else an error will be put in the error monitor at duplication time.

 </dd>
    <dt><tt> &iAdpAttributeSet</tt>
   <dd> [in] : The attributes which will be overriden.   The modified attributes must only be of string type.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Error were encountered, no duplication done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   <dt><code>E_UNEXPECTED</code> Error were encountered, no duplication done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="Duplicate"></a><a name="Duplicate()"></a> <dt> o <b>Duplicate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Duplicate</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Launch duplication.<br/>

 <b>Role</b>: The duplication is done on the server at this very moment.
 Elements are allowed to be in session.
 Elements won't be replaced in session.
 This method won't return the cloned components.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Error were encountered, no duplication done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   <dt><code>E_UNEXPECTED</code> Error were encountered, no duplication done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="Duplicate"></a><a name="Duplicate(CATAdpComponentsAssociation&amp;)"></a> <dt> o <b>Duplicate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Duplicate</b>(<td><script type="text/javascript"> activateLink('CATAdpComponentsAssociation','CATAdpComponentsAssociation&amp;')</script> <td><tt>oComponentsAssociation</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Launch duplication.<br/>

 <b>Role</b>: The duplication is done on the server at this very moment.
 Elements are allowed to be in session.
 Elements won't be replaced in session.
 This method will return the cloned components.
 The components which were not added to this class but which were duplicated though (ie. instances, connexions, ports...)
 will be present in output.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oComponentsAssociation</tt>
   <dd> [out]   Association of original components and duplicata (output of duplication). Every duplicated component will be here.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Error were encountered, no duplication done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   <dt><code>E_UNEXPECTED</code> Error were encountered, no duplication done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="GetErrorReviewer"></a><a name="GetErrorReviewer(CATIAdpPLMErrorReviewer*&amp;)"></a> <dt> o <b>GetErrorReviewer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetErrorReviewer</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*&amp;')</script> <td><tt>oErrorReviewer</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the error reviewer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oErrorReviewer</tt>
   <dd> [out]   Reviewer containing errors
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMErrorReviewer','','CATIAdpPLMErrorReviewer') </script>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAdpDuplicator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationUse</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

