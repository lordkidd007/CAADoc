<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationUse Class CATAdpVersionMaker</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationUse.htm" href="../CATPLMIntegrationUse.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationUse";	}
		function getCurrentObjectName() { 
 	return "CATAdpVersionMaker"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationUse <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpVersionMaker</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpVersionMaker_36266','CATAdpVersionMaker','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpVersionMaker</b>
</p>
<p>
<b><i> Class enabling to perform a new Version of a Component.</i></b><br>

 <br><b>Role</b>: <p>This class creates new Components which are versions of given Components if compliant with Versioning protocol.
 In IRPC typing, only references and representations can be passed as input.</p>

 <p>A versioning scope is calculated dynamically. The following components may be transformed
 (and returned in the result set) if aggregated under a given reference, even if not
 specified in input :</p><ul>
   <li>Duplicated: Instances, Representation Instances, Connections and Ports</li>
   <li>Versioned: MonoInstanciated Representations</li></ul>

 Example of usage :
 <pre>
 CATAdpVersionMaker Versionator;
 Versionator.FromAnyVersion();
 while(<there are components>)
 {
   if(FAILED(Versionator.AddElement(pMyComp))
   //Error management
 }
 </pre>
 Then :
 <pre>
 if(FAILED(Versionator.RunVersioning())
 {
    CATIAdpPLMErrorReviewer pErrorReviewer = NULL;
    Versionator.GetErrorReviewer(pErrorReviewer);
    //manage errors
    CATSysReleasePtr(pErrorReviewer);
 }
 </pre>
 Or :
 <pre>
 CATAdpComponentsAssociation versionedComponents;
 if(SUCCEEDED(Versionator.RunVersioning(versionedComponents))
 {
   CATAdpComponentsAssociationIter iter(versionedComponents.GetIterator());
   CATIAdpPLMIdentificator *pSource, *pEvolved = NULL;
   while(S_OK == iter.NextComponent(pSource, pEvolved))
   {
      //Do something
      CATSysReleasePtr(pSource);
      CATSysReleasePtr(pEvolved);
   }
 }
 else
 {
    CATIAdpPLMErrorReviewer *pErrorReviewer = NULL;
    Evolutor.GetErrorReviewer(pErrorReviewer);
    //manage errors
    CATSysReleasePtr(pErrorReviewer);
 }
</pre></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAdpVersionMaker(CATIAdpPLMErrorReviewer*)"><b>CATAdpVersionMaker</b></a>(CATIAdpPLMErrorReviewer*)
<dd>  Constructor
 
 <dt> o 
    <a href="#CATAdpVersionMaker(CATTime&amp;,CATIAdpPLMErrorReviewer*)"><b>CATAdpVersionMaker</b></a>(CATTime&amp;,CATIAdpPLMErrorReviewer*)
<dd>  Constructor
 
 <dt> o 
    <a href="#~CATAdpVersionMaker()"><b>~CATAdpVersionMaker</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddElement(CATIAdpPLMIdentificator*)"><b>AddElement</b></a>(CATIAdpPLMIdentificator*)
<dd>  Add element to version<br/>
 <b>Role</b>: Entry point to add elements for Versioning operation.
 <dt> o 
    <a href="#AddElements(CATListPtrCATIAdpPLMIdentificator&amp;)"><b>AddElements</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Add elements to version<br/>
 <b>Role</b>: Entry point to add elements for Versioning operation.
 <dt> o 
    <a href="#AddPath(CATListPtrCATIAdpPLMIdentificator&amp;)"><b>AddPath</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Add a path of Components to version<br/>
 <b>Role</b>: Entry point to add a path of Components for Versioning operation.
 <dt> o 
    <a href="#FromAnyVersion()"><b>FromAnyVersion</b></a>()
<dd>  Set the ability to perform a save from any version.
 <dt> o 
    <a href="#GetErrorReviewer(CATIAdpPLMErrorReviewer*&amp;)"><b>GetErrorReviewer</b></a>(CATIAdpPLMErrorReviewer*&amp;)
<dd>  Get the error reviewer.
 <dt> o 
    <a href="#RunVersioning()"><b>RunVersioning</b></a>()
<dd>  Launch Versioning operation on the server.
 <dt> o 
    <a href="#RunVersioning(CATAdpComponentsAssociation&amp;)"><b>RunVersioning</b></a>(CATAdpComponentsAssociation&amp;)
<dd>  Launch Versioning operation on the server.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAdpVersionMaker"></a><a name="CATAdpVersionMaker(CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>CATAdpVersionMaker</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpVersionMaker</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iErrorReviewer</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iopErrorReviewer</tt>
   <dd> An error reviewer.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMErrorReviewer','','CATIAdpPLMErrorReviewer') </script>
</dl>
</dl>
<a name="CATAdpVersionMaker"></a><a name="CATAdpVersionMaker(CATTime&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>CATAdpVersionMaker</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpVersionMaker</b>(<td><script type="text/javascript"> activateLink('CATTime','CATTime&amp;')</script> <td><tt>iApplicabilityDate</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iErrorReviewer</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplicabilityDate</tt>
   <dd> [in] The applicability date of the new version of the component.
 </dd>
    <dt><tt> iopErrorReviewer</tt>
   <dd> An error reviewer.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMErrorReviewer','','CATIAdpPLMErrorReviewer') </script>
</dl>
</dl>
<a name="~CATAdpVersionMaker"></a><a name="~CATAdpVersionMaker()"></a> <dt> o <b>~CATAdpVersionMaker</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAdpVersionMaker</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddElement"></a><a name="AddElement(CATIAdpPLMIdentificator*)"></a> <dt> o <b>AddElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddElement</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iComponent</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Add element to version<br/>
 <b>Role</b>: Entry point to add elements for Versioning operation. The elements will be versioned only if the Version method is called.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComponent</tt>
   <dd> [in] : The Component to version.   Elements must be of a PLM type compliant with Versioning protocol, else an error will be put in the error monitor at versioning time.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Component cannot be versioned. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="AddElements"></a><a name="AddElements(CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>AddElements</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddElements</b>(<td> const <script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iComponents</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Add elements to version<br/>
 <b>Role</b>: Entry point to add elements for Versioning operation. The elements will be versioned only if the Version method is called.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComponents</tt>
   <dd> [in] : The Components to version.   Elements must be of a PLM type compliant with Versioning protocol, else an error will be put in the error monitor at versioning time.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Components cannot be versioned. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="AddPath"></a><a name="AddPath(CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>AddPath</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddPath</b>(<td> const <script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iPathOfComponents</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Add a path of Components to version<br/>
 <b>Role</b>: Entry point to add a path of Components for Versioning operation. The elements will be versioned only if the Version method is called.
 The whole branch will be versioned at once when calling the Version method, thus leading to the creation of a new branch of versions in the database.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathOfComponents</tt>
   <dd> [in] : The Components to version.   Elements must be of a PLM type compliant with Versioning protocol, else an error will be put in the error monitor at versioning time.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Components cannot be versioned. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="FromAnyVersion"></a><a name="FromAnyVersion()"></a> <dt> o <b>FromAnyVersion</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FromAnyVersion</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the ability to perform a save from any version.<br/>

 <b>Role</b>: Set the ability in the VersionEngine to perform a save from any version. 
 Be aware that this api must be called before any AddPath , AddElements or AddElement api call.
 Components from any version will be saved in the version up of the last version of a version family when the api RunVersioning
 will be used.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_UNEXPECTED</code> If the VersionEngine has been already initialized on the CATAdpVersionMaker object by any AddPath , AddElements, AddElement api call .Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="GetErrorReviewer"></a><a name="GetErrorReviewer(CATIAdpPLMErrorReviewer*&amp;)"></a> <dt> o <b>GetErrorReviewer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetErrorReviewer</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*&amp;')</script> <td><tt>oErrorReviewer</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the error reviewer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oErrorReviewer</tt>
   <dd> [out, CATBaseUnknown#Release]   Reviewer containing errors
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAdpPLMErrorReviewer','','CATIAdpPLMErrorReviewer') </script>
</dl>
</dl>
<a name="RunVersioning"></a><a name="RunVersioning()"></a> <dt> o <b>RunVersioning</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RunVersioning</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Launch Versioning operation on the server.<br/>

 <b>Role</b>: The new Versions are created on the server at this very moment.
 Elements won't be replaced in session.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Error were encountered, no version done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   <dt><code>E_UNEXPECTED</code> Error were encountered, no version done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<a name="RunVersioning"></a><a name="RunVersioning(CATAdpComponentsAssociation&amp;)"></a> <dt> o <b>RunVersioning</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RunVersioning</b>(<td><script type="text/javascript"> activateLink('CATAdpComponentsAssociation','CATAdpComponentsAssociation&amp;')</script> <td><tt>oComponentsAssociation</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Launch Versioning operation on the server.<br/>

 <b>Role</b>: The new Versions are created on the server at this very moment.
 Elements won't be replaced in session.
 This method will return the new versions pf the components.
 The components which were not added to this class but which were versioned/duplicated though (eg. instances, connexions, ports...)
 will be available in output.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oComponentsAssociation</tt>
   <dd> [out]   Association of original components and versions (output of versioning operation). Every versioned or duplicated component will be here.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><code>S_OK</code> Operation succeeded <dd>
   <dt><code>E_FAIL</code> Error were encountered, no version done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   <dt><code>E_UNEXPECTED</code> Error were encountered, no version done. See error reviewer content to fetch errors details. Nothing was done during the operation<dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAdpVersionMaker.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationUse</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

