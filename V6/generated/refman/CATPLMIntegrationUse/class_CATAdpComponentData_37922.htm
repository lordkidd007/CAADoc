<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationUse Class CATAdpComponentData</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationUse.htm" href="../CATPLMIntegrationUse.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationUse";	}
		function getCurrentObjectName() { 
 	return "CATAdpComponentData"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationUse <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpComponentData</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpComponentData_37922','CATAdpComponentData','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpComponentData</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAdpComponentData()"><b>CATAdpComponentData</b></a>()
<dd>  CATAdpComponentData default constructor.
 <dt> o 
    <a href="#~CATAdpComponentData()"><b>~CATAdpComponentData</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetComponent(CATIAdpPLMIdentificator*,IID&amp;,void**)"><b>GetComponent</b></a>(CATIAdpPLMIdentificator*,IID&amp;,void**)
<dd>  Gets a component corresponding to AdpId passed as input.
 <dt> o 
    <a href="#GetList(CATListPtrCATIPLMComponent&amp;)"><b>GetList</b></a>(CATListPtrCATIPLMComponent&amp;)
<dd>  Gets every components in a CATIPLMComponent list.
 <dt> o 
    <a href="#Next(IID&amp;,void**)"><b>Next</b></a>(IID&amp;,void**)
<dd>  Iterator on a chosen IID.
 <dt> o 
    <a href="#Rewind()"><b>Rewind</b></a>()
<dd>  Resets the iterator in order to access to the first component
 <dt> o 
    <a href="#Size()"><b>Size</b></a>()
<dd>  Returns the size of the list of opened components.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAdpComponentData"></a><a name="CATAdpComponentData()"></a> <dt> o <b>CATAdpComponentData</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpComponentData</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 CATAdpComponentData default constructor.
</dl>
<a name="~CATAdpComponentData"></a><a name="~CATAdpComponentData()"></a> <dt> o <b>~CATAdpComponentData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAdpComponentData</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetComponent"></a><a name="GetComponent(CATIAdpPLMIdentificator*,IID&amp;,void**)"></a> <dt> o <b>GetComponent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetComponent</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iId</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void**')</script> <td><tt>oOpenedElement</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Gets a component corresponding to AdpId passed as input.
 To get the full set of components, use the iterator.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>        AdpIndentifier from which we want the corresponding component
 </dd>
    <dt><tt> iIID</tt>
   <dd>        IID to cast to
 </dd>
    <dt><tt> oOpenedElement</tt>
   <dd> [out, CATBaseUnknown#Release]        Element casted. Use : (void**)&oOpenedElement
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         S_OK   : element found
        S_FALSE: element not found
        E_FAIL : if failure
</dl>
</dl>
<a name="GetList"></a><a name="GetList(CATListPtrCATIPLMComponent&amp;)"></a> <dt> o <b>GetList</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetList</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIPLMComponent','CATListPtrCATIPLMComponent&amp;')</script> <td><tt>oOpenedComponents</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets every components in a CATIPLMComponent list.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOpenedComponents</tt>
   <dd>        Element CATLISTP
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         S_OK   : no issue
        E_FAIL : if failure
</dl>
</dl>
<a name="Next"></a><a name="Next(IID&amp;,void**)"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Next</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void**')</script> <td><tt>oComponent</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Iterator on a chosen IID. Iterate until you get S_FALSE as return
 use with : while (S_OK == MyObj.Next(...))
 You will get every opened components.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIID</tt>
   <dd>        IID to cast to
 </dd>
    <dt><tt> oComponent</tt>
   <dd> [out, CATBaseUnknown#Release]        Element casted. Use : (void**)&oComponent
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         S_OK    : there are more elements to iterate through
        S_FALSE : end of iteration, no more element
        E_FAIL  : if failure
</dl>
</dl>
<a name="Rewind"></a><a name="Rewind()"></a> <dt> o <b>Rewind</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Rewind</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets the iterator in order to access to the first component
</dl>
<a name="Size"></a><a name="Size()"></a> <dt> o <b>Size</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>Size</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the size of the list of opened components.
</dl>
<hr>
 This object is included in the file: <b>CATAdpComponentData.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationUse</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

