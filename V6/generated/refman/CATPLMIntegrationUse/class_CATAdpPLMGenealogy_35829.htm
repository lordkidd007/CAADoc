<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationUse Class CATAdpPLMGenealogy</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationUse.htm" href="../CATPLMIntegrationUse.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationUse";	}
		function getCurrentObjectName() { 
 	return "CATAdpPLMGenealogy"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationUse <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpPLMGenealogy</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpPLMGenealogy_35829','CATAdpPLMGenealogy','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpPLMGenealogy</b>
</p>
<p>
<b><i> class to retrieve genealogy informations on components.</i></b><br>

 <br><b>Role</b>: Provide a way to retrieve genealogy informations on components
 <pre>
 CATListPtrCATIAdpPLMIdentificator ListCAAComponents = .....;
 CATAdpPLMGenealogy genealogy(ListCAAComponents);
 CATAdpPLMGenealogyInformation info;
 CATAdpPLMGenealogyInformationIter iter;
 // retrieve children on input components ....
 if (SUCCEEDED(genealogy.GetChildren(iter)))
 {
    while(S_OK == iter.NextInfos(info))
    {
       CATIAdpPLMIdentificator * pIdInput=NULL;
       CATAdpPLMLifecycleOperation::Operation operation;
       CATIAdpPLMIdentificator * pIdRelated=NULL;
       if (SUCCEEDED(info.GetInput(pIdInput)) && NULL != pIdInput && SUCCEEDED(info.GetOperation(operation)) && SUCCEEDED(info.GetRelated(pIdRelated)))
       {
          if (operation ==  CATAdpPLMLifecycleOperation::Duplicate)
          {
           // component of Id pIdRelated is a clone of component of Id pIdInput 
           .....  
          }
          else if (operation ==  CATAdpPLMLifecycleOperation::NoOperation)
          {
           // pIdRelated must be null . component of Id pIdInput has no child.
          }
          else if (operation == .....
          .....
       }
       CATSysReleasePtr(pIdInput);
       CATSysReleasePtr(pIdRelated); 
    }
    else // error management  ...
 }
 else // error management  ...
 // retrieve ancestors on input components ....
 if (SUCCEEDED(genealogy.GetAncestors(iter)))
 {
    while(S_OK == iter.NextInfos(info))
    {
       CATIAdpPLMIdentificator * pIdInput=NULL;
       CATAdpPLMLifecycleOperation::Operation operation;
       CATIAdpPLMIdentificator * pIdRelated=NULL;
       if (SUCCEEDED(info.GetInput(pIdInput)) && NULL != pIdInput && SUCCEEDED(info.GetOperation(operation)) && SUCCEEDED(info.GetRelated(pIdRelated)))
       {
          if (operation ==  CATAdpPLMLifecycleOperation::Duplicate)
          {
           // component of Id pIdInput is a clone of component of Id pIdRelated 
              .....  
          }
          else if (operation ==  CATAdpPLMLifecycleOperation::NoOperation)
          {
           // pIdRelated must be null . component of Id pIdInput has no ancestor.
          }
          else if (operation == .....
          .....
       }
       else // error management  ...
       CATSysReleasePtr(pIdInput);
       CATSysReleasePtr(pIdRelated); 
    }
 }
 else // error management  ...
</pre></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAdpPLMGenealogy(CATIAdpPLMIdentificator*,CATIAdpPLMErrorReviewer*)"><b>CATAdpPLMGenealogy</b></a>(CATIAdpPLMIdentificator*,CATIAdpPLMErrorReviewer*)
<dd>  Set the input component to get the child(ren) and/or the ancestor of this component
 <br><b>Role</b>: Constructor
 
 <dt> o 
    <a href="#CATAdpPLMGenealogy(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)"><b>CATAdpPLMGenealogy</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)
<dd>  Set the input list of components to get the child(ren) and/or the ancestor(s) of these components
 <br><b>Role</b>: Constructor
 
 <dt> o 
    <a href="#~CATAdpPLMGenealogy()"><b>~CATAdpPLMGenealogy</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAncestor(CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformation&amp;)"><b>GetAncestor</b></a>(CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformation&amp;)
<dd>  Get every ancestor of input components
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (ancestor) element, and the operation leading to the related element.
 <dt> o 
    <a href="#GetAncestors(CATAdpPLMGenealogyInformationIter&amp;)"><b>GetAncestors</b></a>(CATAdpPLMGenealogyInformationIter&amp;)
<dd>  Get every ancestor of input components
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (ancestor) element, and the operation leading to the related element.
 <dt> o 
    <a href="#GetChildren(CATAdpPLMGenealogyInformationIter&amp;)"><b>GetChildren</b></a>(CATAdpPLMGenealogyInformationIter&amp;)
<dd>  Get every children of input components
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (child) element(s), and the operation leading to the related element.
 <dt> o 
    <a href="#GetChildren(CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformationIter&amp;)"><b>GetChildren</b></a>(CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformationIter&amp;)
<dd>  Get every children of input component
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (child) element(s), and the operation leading to the related element.
 <dt> o 
    <a href="#GetInnerRelated(CATIAdpPLMIdentificator*,CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformation&amp;)"><b>GetInnerRelated</b></a>(CATIAdpPLMIdentificator*,CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformation&amp;)
<dd>  Get the relation between two components given in input, provided it exists
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (ancestor) element, and the operation leading to the related element.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAdpPLMGenealogy"></a><a name="CATAdpPLMGenealogy(CATIAdpPLMIdentificator*,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>CATAdpPLMGenealogy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpPLMGenealogy</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iComponent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iErrorReviewer</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the input component to get the child(ren) and/or the ancestor of this component
 <br><b>Role</b>: Constructor
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComponent</tt>
   <dd>        Component identificator on which query(ies) will be process to retrieve parents. The component may be a reference or a representation reference only.
        Query(ies) will be process in order to retrieve parents or children of this component when using the </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogy','GetChildren','CATAdpPLMGenealogy.GetChildren') </script> ,         
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogy','GetAncestors','CATAdpPLMGenealogy.GetAncestors') </script>, 
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogy','GetInnerRelated','CATAdpPLMGenealogy.GetInnerRelated') </script> methods. 
    <dt><tt> ioMonitor</tt>
   <dd>        The ErrorMonitor dedicated to store and handle all PLM Errors raised during the execution of this service.</dd>
</dl>
</dl>
</dl>
<a name="CATAdpPLMGenealogy"></a><a name="CATAdpPLMGenealogy(CATListPtrCATIAdpPLMIdentificator&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>CATAdpPLMGenealogy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpPLMGenealogy</b>(<td> const <script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>iComponents</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iErrorReviewer</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the input list of components to get the child(ren) and/or the ancestor(s) of these components
 <br><b>Role</b>: Constructor
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComponents</tt>
   <dd>        The list of components . Each component may be a reference or a representation reference only. Query (ies) will be process in order 
        to retrieve parents or children of these components when using the </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogy','GetChildren','CATAdpPLMGenealogy.GetChildren') </script> , 
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogy','GetAncestors','CATAdpPLMGenealogy.GetAncestors') </script>,         
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogy','GetInnerRelated','CATAdpPLMGenealogy.GetInnerRelated') </script> methods. 
    <dt><tt> ioMonitor</tt>
   <dd>        The ErrorMonitor dedicated to store and handle all PLM Errors raised during the execution of this service.</dd>
</dl>
</dl>
</dl>
<a name="~CATAdpPLMGenealogy"></a><a name="~CATAdpPLMGenealogy()"></a> <dt> o <b>~CATAdpPLMGenealogy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAdpPLMGenealogy</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAncestor"></a><a name="GetAncestor(CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformation&amp;)"></a> <dt> o <b>GetAncestor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAncestor</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMGenealogyInformation','CATAdpPLMGenealogyInformation&amp;')</script> <td><tt>oData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get every ancestor of input components
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (ancestor) element, and the operation leading to the related element.
 The query is generated once. See  
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformation','','CATAdpPLMGenealogyInformation') </script> for the structure. Then returns only the ancestor of the method's input component.
 It's possible to call other methods after this one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> &oData</tt>
   <dd> CATAdpPLMGenealogyInformation corresponding to found element if found. See  </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformation','','CATAdpPLMGenealogyInformation') </script> The order is : input, lifecycle operation relating the two elements, related is ancestor
 
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><code>S_OK</code> Operation was successful <dd>
 <dt><code>S_FALSE</code> <dd> No ancestor found, return parameter is not valid </dd>
 <dt><code>E_FAIL</code> An error was encountered. See the error monitor<dd>
 </dl>
</dl>
</dl>
</dl>
<a name="GetAncestors"></a><a name="GetAncestors(CATAdpPLMGenealogyInformationIter&amp;)"></a> <dt> o <b>GetAncestors</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAncestors</b>(<td><script type="text/javascript"> activateLink('CATAdpPLMGenealogyInformationIter','CATAdpPLMGenealogyInformationIter&amp;')</script> <td><tt>oData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get every ancestor of input components
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (ancestor) element, and the operation leading to the related element.
 The query is generated once. See  
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformation','','CATAdpPLMGenealogyInformation') </script> for the structure. It's possible to call other methods after this one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> &oData</tt>
   <dd> Iterator on the return set. See  </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformationIter','','CATAdpPLMGenealogyInformationIter') </script> elements not found are linken like this : input, NoOperation, NULL 
 The order is, for each element : input, lifecycle operation relating the two elements, related is ancestor
 
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><code>S_OK</code> Operation was successful <dd>
 <dt><code>S_FALSE</code> <dd> No ancestors </dd>
 <dt><code>E_FAIL</code> An error was encountered. See the error monitor<dd>
 </dl>
</dl>
</dl>
</dl>
<a name="GetChildren"></a><a name="GetChildren(CATAdpPLMGenealogyInformationIter&amp;)"></a> <dt> o <b>GetChildren</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetChildren</b>(<td><script type="text/javascript"> activateLink('CATAdpPLMGenealogyInformationIter','CATAdpPLMGenealogyInformationIter&amp;')</script> <td><tt>oData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get every children of input components
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (child) element(s), and the operation leading to the related element.
 The query is generated once. See  
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformation','','CATAdpPLMGenealogyInformation') </script> to retrieve these informations. Input can be found many times if multiple descendants were created.
 It's possible to call other methods after this one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> &oData</tt>
   <dd> Iterator on the return set. See  </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformationIter','','CATAdpPLMGenealogyInformationIter') </script> elements not found are linken like this : input, NoOperation, NULL 
 The order is, for each element : input, lifecycle operation relating the two elements, related is child
 
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><code>S_OK</code> Operation was successful <dd>
 <dt><code>S_FALSE</code> <dd> No children </dd>
 <dt><code>E_FAIL</code> An error was encountered. See the error monitor<dd>
 </dl>
</dl>
</dl>
</dl>
<a name="GetChildren"></a><a name="GetChildren(CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformationIter&amp;)"></a> <dt> o <b>GetChildren</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetChildren</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMGenealogyInformationIter','CATAdpPLMGenealogyInformationIter&amp;')</script> <td><tt>oData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get every children of input component
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (child) element(s), and the operation leading to the related element.
 The query is generated once. See  
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformation','','CATAdpPLMGenealogyInformation') </script> for the structure. Then returns only the children iterator of the method's input component.
 Input can be found many times if multiple descendants were created.
 It's possible to call other methods after this one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> &oData</tt>
   <dd> Iterator on the return set if any found. See  </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformationIter','','CATAdpPLMGenealogyInformationIter') </script> The order is, for each element : input, lifecycle operation relating the two elements, related is child
 
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><code>S_OK</code> Operation was successful <dd>
 <dt><code>S_FALSE</code> <dd> No children, iterator is not populated by the method </dd>
 <dt><code>E_FAIL</code> An error was encountered. See the error monitor<dd>
 </dl>
</dl>
</dl>
</dl>
<a name="GetInnerRelated"></a><a name="GetInnerRelated(CATIAdpPLMIdentificator*,CATIAdpPLMIdentificator*,CATAdpPLMGenealogyInformation&amp;)"></a> <dt> o <b>GetInnerRelated</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInnerRelated</b>(<td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iFirst</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMIdentificator','CATIAdpPLMIdentificator*')</script> <td><tt>iSecond</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMGenealogyInformation','CATAdpPLMGenealogyInformation&amp;')</script> <td><tt>oData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the relation between two components given in input, provided it exists
 <br><b>Role</b>: Make a query (if not already done) to generate the list of each input component 
 and its related (ancestor) element, and the operation leading to the related element.
 The query is generated once. See  
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformation','','CATAdpPLMGenealogyInformation') </script> for the structure. Then returns only the ancestor of the method's input couple.
 Query is the same as GetAncestors but only components given to constructor are bound to be taken into account.
 Search is done two ways, but result is always from child to ancestor.
 It's possible to call other methods after this one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> &oData</tt>
   <dd> CATAdpPLMGenealogyInformation corresponding to found element if found. See  </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMGenealogyInformation','','CATAdpPLMGenealogyInformation') </script> The order is : input, lifecycle operation relating the two elements, related is *always* ancestor
 
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><code>S_OK</code> Operation was successful <dd>
 <dt><code>S_FALSE</code> <dd> No relation found, return parameter is not valid</dd>
 <dt><code>E_FAIL</code> An error was encountered. See the error monitor<dd>
 <dt><code>E_INVALIDARG</code> One of the requested elements is not in input<dd>
 </dl>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAdpPLMGenealogy.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationUse</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

