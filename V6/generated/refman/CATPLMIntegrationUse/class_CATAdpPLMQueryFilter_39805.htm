<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationUse Class CATAdpPLMQueryFilter</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationUse.htm" href="../CATPLMIntegrationUse.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationUse";	}
		function getCurrentObjectName() { 
 	return "CATAdpPLMQueryFilter"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationUse <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpPLMQueryFilter</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpPLMQueryFilter_39805','CATAdpPLMQueryFilter','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpPLMQueryFilter</b>
</p>
<p>
<b><i> Class defining a Filter to adress a query with extension.</i></b><br>


 <br><b>Role</b>: provide a set of attributes made of an attribute name and a value and operators for query.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAdpPLMQueryFilter(CATAdpPLMQueryFilter&amp;)"><b>CATAdpPLMQueryFilter</b></a>(CATAdpPLMQueryFilter&amp;)
<dd> *
 Copy constructs a query filter.
 <dt> o 
    <a href="#CATAdpPLMQueryFilter(CATIType*,CATAdpPLMQueryAttributeSet&amp;,CATAdpPLMQueryAttributeOperator::PLMLogicalOperator&amp;)"><b>CATAdpPLMQueryFilter</b></a>(CATIType*,CATAdpPLMQueryAttributeSet&amp;,CATAdpPLMQueryAttributeOperator::PLMLogicalOperator&amp;)
<dd>  Constructs a Query Filter.
 <dt> o 
    <a href="#~CATAdpPLMQueryFilter(void)"><b>~CATAdpPLMQueryFilter</b></a>(void)
<dd>  Destructs an attribute set.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddFilterOnExtension(CATIType*,CATAdpPLMQueryAttributeSet&amp;,CATAdpPLMQueryAttributeOperator::PLMLogicalOperator&amp;)"><b>AddFilterOnExtension</b></a>(CATIType*,CATAdpPLMQueryAttributeSet&amp;,CATAdpPLMQueryAttributeOperator::PLMLogicalOperator&amp;)
<dd>  Adds an extension  on a query filter.
 <dt> o 
    <a href="#CaseSensitiveMode(CATBoolean&amp;)"><b>CaseSensitiveMode</b></a>(CATBoolean&amp;)
<dd>   Activate mode sensitive case for query 

 <br><b>Role</b>:Activate mode sensitive case for query on string.
 <dt> o 
    <a href="#ReturnQueryAttributes(PLMQueryFilterAttributesReturn)"><b>ReturnQueryAttributes</b></a>(PLMQueryFilterAttributesReturn)
<dd>   Activate completion of query result 

 <br><b>Role</b>: Enables to define the attributes which will be returned for every found Component.
 <dt> o 
    <a href="#operator =(CATAdpPLMQueryFilter&amp;)"><b>operator =</b></a>(CATAdpPLMQueryFilter&amp;)
<dd>  Affectation operator.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#PLMQueryFilterAttributesReturn"><b>PLMQueryFilterAttributesReturn</b></a>
<dd> </dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAdpPLMQueryFilter"></a><a name="CATAdpPLMQueryFilter(CATAdpPLMQueryFilter&amp;)"></a> <dt> o <b>CATAdpPLMQueryFilter</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpPLMQueryFilter</b>(<td> const <script type="text/javascript"> activateLink('CATAdpPLMQueryFilter','CATAdpPLMQueryFilter&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
*
 Copy constructs a query filter.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The copy of the query filter .
</dl>
</dl>
<a name="CATAdpPLMQueryFilter"></a><a name="CATAdpPLMQueryFilter(CATIType*,CATAdpPLMQueryAttributeSet&amp;,CATAdpPLMQueryAttributeOperator::PLMLogicalOperator&amp;)"></a> <dt> o <b>CATAdpPLMQueryFilter</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAdpPLMQueryFilter</b>(<td><script type="text/javascript"> activateLink('CATIType','CATIType*')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAdpPLMQueryAttributeSet','CATAdpPLMQueryAttributeSet&amp;')</script> <td><tt>iQueryAttributeSet</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAdpPLMQueryAttributeOperator::PLMLogicalOperator','CATAdpPLMQueryAttributeOperator::PLMLogicalOperator&amp;')</script> <td><tt>iCondition</tt><td><tt>=CATAdpPLMQueryAttributeOperator::AND</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Query Filter.
 <br><b>Role</b>: Constructs a Query filter and initializes it with a  CATAdpPLMQueryAttributeSet.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> [in]   The PLM  Type.  .
 </dd>
    <dt><tt> iQueryAttributeSet</tt>
   <dd> [in]   The set of attribute with a list of values and operators on a base PLM Type defining the filter.
 </dd>
    <dt><tt> iCondition[in]</tt>
   <dd>   The logical condition to be applied between each attribute constraint inside the query attribute set. Default value is 'AND'.
</dd>
</dl>
</dl>
</dl>
<a name="~CATAdpPLMQueryFilter"></a><a name="~CATAdpPLMQueryFilter(void)"></a> <dt> o <b>~CATAdpPLMQueryFilter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAdpPLMQueryFilter</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructs an attribute set.
</dl>
 <h2>Methods</h2> <br>
<a name="AddFilterOnExtension"></a><a name="AddFilterOnExtension(CATIType*,CATAdpPLMQueryAttributeSet&amp;,CATAdpPLMQueryAttributeOperator::PLMLogicalOperator&amp;)"></a> <dt> o <b>AddFilterOnExtension</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddFilterOnExtension</b>(<td><script type="text/javascript"> activateLink('CATIType','CATIType*')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMQueryAttributeSet','CATAdpPLMQueryAttributeSet&amp;')</script> <td><tt>iQueryAttributeSet</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAdpPLMQueryAttributeOperator::PLMLogicalOperator','CATAdpPLMQueryAttributeOperator::PLMLogicalOperator&amp;')</script> <td><tt>iCondition</tt><td><tt>=CATAdpPLMQueryAttributeOperator::AND</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds an extension  on a query filter.

 <br><b>Role</b>: Adds an extension query attribute set on a query filter.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> [in]   The extension PLM type.
 </dd>
    <dt><tt> iQueryAttributeSet</tt>
   <dd> [in]   The set of attribute with a list of values and operators which defines the query attribute set.
 </dd>
    <dt><tt> iCondition[in]</tt>
   <dd>   The logical condition to be applied between each attribute constraint inside the query attribute set. Default value is 'AND'. Between two query attribute sets 
   a AND condition is applied.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><code>S_OK</code> .</li>
   <li><code>S_FALSE</code> .</li>
   <li><code>E_FAIL</code> if an internal error occured.</li>
   <li><code>E_INVALIDARG</code> if an invalid input was provided.</li>
   </ul>
</dl>
</dl>
<a name="CaseSensitiveMode"></a><a name="CaseSensitiveMode(CATBoolean&amp;)"></a> <dt> o <b>CaseSensitiveMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CaseSensitiveMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iMode</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Activate mode sensitive case for query 

 <br><b>Role</b>:Activate mode sensitive case for query on string. By default,
                  the applied mode is not sensitive.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> [in]   Boolean value. If TRUE, the query is on case sensitive mode.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><code>S_OK</code> if everything ran ok.</li>
   </ul>

</dl>
</dl>
<a name="ReturnQueryAttributes"></a><a name="ReturnQueryAttributes(PLMQueryFilterAttributesReturn)"></a> <dt> o <b>ReturnQueryAttributes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReturnQueryAttributes</b>(<td><script type="text/javascript"> activateLink('PLMQueryFilterAttributesReturn','PLMQueryFilterAttributesReturn')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Activate completion of query result 

 <br><b>Role</b>: Enables to define the attributes which will be returned for every found Component.
 <ul>
 <li>No attribute is returned is <code>None</code> is given.</li>
 <li>Default mode: Attributes from the input filter (being part of the Query mask) are returned if <code>FromQueryMaskAttributes</code> is given. A warning is available for attributes which are not part of the Query mask.</li>
 <li>All attributes being part of the Query mask are returned if <code>CompleteQueryMaskAttributes</code> is given.</li>
 </ul>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> [in]   The filter on returned attributes from Query mask.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><code>S_OK</code> if everything ran ok.</li>
   </ul>

</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATAdpPLMQueryFilter&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAdpPLMQueryFilter','CATAdpPLMQueryFilter &')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATAdpPLMQueryFilter','CATAdpPLMQueryFilter&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Affectation operator.
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="PLMQueryFilterAttributesReturn"> <dt> o <b>PLMQueryFilterAttributesReturn</b>
<dl>
  <dd>
<pre>
enum <b>PLMQueryFilterAttributesReturn</b> {
  None,
  FromQueryMaskAttributes,
  CompleteQueryMaskAttributes
}
</pre>
</dl>
<hr>
 This object is included in the file: <b>CATAdpPLMQueryFilter.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationUse</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

