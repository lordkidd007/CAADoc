<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMUIInterfaces Interface CATIPLMNewFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMUIInterfaces.htm" href="../CATPLMUIInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMUIInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIPLMNewFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMUIInterfaces Interface CATIPLMNewFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPLMNewFactory_32532','CATIPLMNewFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPLMNewFactory</b>
</p>
<p>
<b><i> Interface representing factory for PLM New Entity Creation.</i></b><br>


 <br><b>Role</b>: allows you to get a handle on PLM object created by the interactive launch of PLM New command.
 It provides definition for the PLM entity creation. Only unitary object can be created by this protocole and
 only a subset of all possible PLM entities can be created by this protocole.<br>
 <br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATPLMNewServices','','CATPLMNewServices') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateCommand(CATStateCommand*&amp;)"><b>CreateCommand</b></a>(CATStateCommand*&amp;)
<dd>  Method to create the PLM New interactive command.
 <dt> o 
    <a href="#GetCreatedObject(CATBaseUnknown*&amp;)"><b>GetCreatedObject</b></a>(CATBaseUnknown*&amp;)
<dd>  Method to retrieve the PLM Object created through PLM New command.
 <dt> o 
    <a href="#SetCustomizationScope(CATString)"><b>SetCustomizationScope</b></a>(CATString)
<dd>  Method to OPTIONALLY specify which customization domain to use for PLM object creation.
 <dt> o 
    <a href="#SetModelingScope(CATClassId,CATString)"><b>SetModelingScope</b></a>(CATClassId,CATString)
<dd>  Mandatory Method to define the PLM object to create with the PLM Creation Method Name and the dedicated CAA interface.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateCommand"></a><a name="CreateCommand(CATStateCommand*&amp;)"></a> <dt> o <b>CreateCommand</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateCommand</b>(<td><script type="text/javascript"> activateLink('CATStateCommand','CATStateCommand*&amp;')</script> <td><tt>opNewCmd</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to create the PLM New interactive command.
 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opNewCmd</tt>
   <dd>       Output Interactive State command PLM New.<br>
             The returned command has not to be released because its life cycle is managed by DialogEngine.

   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul>
  <li><tt>S_OK</tt> : PLM New command creation succeeds.</li>
  <li><tt>E_FAIL</tt>: PLM New command creation failed.</li>
  </ul>
</dl>
</dl>
<a name="GetCreatedObject"></a><a name="GetCreatedObject(CATBaseUnknown*&amp;)"></a> <dt> o <b>GetCreatedObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCreatedObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oCAASpecialized</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to retrieve the PLM Object created through PLM New command.<br>

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCAASpecialized</tt>
   <dd>       Output Resulting interface of the created object. 
             The returned object has not to be released.

   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul>
  <li><tt>S_OK</tt> : The PLM object creation succeeds.</li>
  <li><tt>E_FAILED</tt>: The PLM object creation fails.</li>
  </ul>
</dl>
</dl>
<a name="SetCustomizationScope"></a><a name="SetCustomizationScope(CATString)"></a> <dt> o <b>SetCustomizationScope</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCustomizationScope</b>(<td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>iDomain</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Method to OPTIONALLY specify which customization domain to use for PLM object creation.<br>

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDomain</tt>
   <dd>     Input customization domain name. Is optional, can be undefined.<br>
    If this parameter is not set, then the data are created in the default authoring customization domain.<br>
    If this parameter is set, then the input customization domain is used to create the PLM data.<br>
    This domain is checked and set as current when the CreateCommand method is called and it stays as currrent 
    as long as the current class is not released or as long as another occurence of this class is called 
    to set the customization domain.<br>

   For instance iDomain="CAABodyPartView" to create "Body Part View" CAA sample Part Reference.

   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul>
  <li><tt>S_OK</tt> : Method succeeds.</li>
  <li><tt>E_FAIL</tt>: Method fails. </li>
  </ul>
</dl>
</dl>
<a name="SetModelingScope"></a><a name="SetModelingScope(CATClassId,CATString)"></a> <dt> o <b>SetModelingScope</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetModelingScope</b>(<td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iCAASpecializedItf</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString')</script> <td><tt>iPLMCreationMethodType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Mandatory Method to define the PLM object to create with the PLM Creation Method Name and the dedicated CAA interface.<br>
 Mandatory Method for a successful return code.

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCAASpecializedItf</tt>
   <dd>       Input CAA defining interface which the object must adhere to.
   </dd>
    <dt><tt> iPLMCreationMethodType</tt>
   <dd>       Input Name of PLM Creation Method Type (ex: “Drawing”).<br><br>

  Current implemented capabilities:
  <ul>
  <li><tt>iCAASpecializedItf = CATIPLMProducts::ClassName and iPLMCreationMethodType=""</tt> : To create a new Product.</li>
  <li><tt>iCAASpecializedItf = CATIPLMProducts::ClassName and iPLMCreationMethodType="3DPart"</tt> : To create a new 3DPart.</li>
  <li><tt>iCAASpecializedItf = CATIPsiRepresentationReference::ClassName and iPLMCreationMethodType="3DShape"</tt> : To create a new 3DShape.</li>
  <li><tt>iCAASpecializedItf = CATIPsiRepresentationReference::ClassName and iPLMCreationMethodType="Drawing"</tt> : To create a new Drawing.</li>
  </ul>

   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul>
  <li><tt>S_OK</tt> : Initialization successful.</li>
  <li><tt>E_FAIL</tt>: Initialization failed.</li>
  </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPLMNewFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMUIInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

