<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DELPPRLiveProcessInterfaces Interface DELIPPRLiveProcessContextualMenu</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DELPPRLiveProcessInterfaces.htm" href="../DELPPRLiveProcessInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DELPPRLiveProcessInterfaces";	}
		function getCurrentObjectName() { 
 	return "DELIPPRLiveProcessContextualMenu"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DELPPRLiveProcessInterfaces Interface DELIPPRLiveProcessContextualMenu</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DELIPPRLiveProcessContextualMenu_91361','DELIPPRLiveProcessContextualMenu','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>DELIPPRLiveProcessContextualMenu</b>
</p>
<p>
<b><i> DELIPPRLiveProcessContextualMenu is implemented to create a Contextual Menu for the Process Tile or process nodes on the left tree in Live Process Editor.</i></b><br>

  The class implementing this function should extend one of the folloging types (point of view UI):
	VPMFctProcessOccurrence: the root proces node on the Live Process Editor left tree.
	VPMFctProcessRootOccurrence: a process node on the Live Process Editor left tree.
	DELPPRLiveProxy: a process tile on the life process editor.
 <b>Role</b>: This interface has to be implemented to provide user defined contextual menus for a Process tile or process nodes on the left tree in Live Process Editor.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetContextualSubMenu(CATString&amp;,CATCmdContainer*&amp;)"><b>GetContextualSubMenu</b></a>(CATString&amp;,CATCmdContainer*&amp;)
<dd>   The implementantion of this function should add the contextual sub menu items 
  on the contairner identified with the name iSubMenuName.
 <dt> o 
    <a href="#GetContextualSubMenusNames(CATListValCATString*)"><b>GetContextualSubMenusNames</b></a>(CATListValCATString*)
<dd>   The implementantion of this function should declare the submenus names to be added.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetContextualSubMenu"></a><a name="GetContextualSubMenu(CATString&amp;,CATCmdContainer*&amp;)"></a> <dt> o <b>GetContextualSubMenu</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContextualSubMenu</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iSubMenuName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCmdContainer','CATCmdContainer*&amp;')</script> <td><tt>oMenu</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  The implementantion of this function should add the contextual sub menu items 
  on the contairner identified with the name iSubMenuName.
  This function will be called for each declared SubMenu group name added on the previous function
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  name</tt>
   <dd> of the actual submenu group to wich the submenu items will be added. This name corresponds to one of the names declared on the previous function  </dd>
    <dt><tt>  reference</tt>
   <dd> to a pointer to the container in wich the submenu items should be added.
  To see an example of the use of this function please refers to CAAPPRLPEProcessContextualMenu use case on the doc.      
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <ol>  
            <li>  S_OK sub menu entries has been added</li>  
            <li>  E_FAIL, E_NOTIMPL  otherwise, please remark that the submenu container itself won't be displayed if the implementantion of this function returns E_FAIL</li>    
    </ol>
</dl>
</dl>
<a name="GetContextualSubMenusNames"></a><a name="GetContextualSubMenusNames(CATListValCATString*)"></a> <dt> o <b>GetContextualSubMenusNames</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContextualSubMenusNames</b>(<td><script type="text/javascript"> activateLink('CATListValCATString','CATListValCATString*')</script> <td><tt>pListSubMenusNames</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  The implementantion of this function should declare the submenus names to be added. 
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>	pointer</tt>
   <dd> to the list to declare the wished Submenus groups to be added, For each element on the list 			the system will call GetContextualSubMenu function, to add the corresponding submenu items.
  To see an example of the use of this function please refers to CAAPPRLPEProcessContextualMenu use case on the doc.        
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <ol>  
            <li>  S_OK , SubMenus group names have been added</li>  
            <li>  E_FAIL, E_NOTIMPL  otherwise, no SubMenus will be added</li>    
    </ol>
</dl>
</dl>
<hr>
 This object is included in the file: <b>DELIPPRLiveProcessContextualMenu.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DELPPRLiveProcessItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

