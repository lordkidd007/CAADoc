<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SystemTS Class CATChar</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SystemTS.htm" href="../SystemTS.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SystemTS";	}
		function getCurrentObjectName() { 
 	return "CATChar"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SystemTS <script type="text/javascript" > writeClassCharacteristic(); </script> CATChar</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATChar_5859','CATChar','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATChar</b>
</p>
<p>
<b><i> Class to represent non-NLS Characters.</i></b><br>

 <b>Role</b>: Class for ISO 646 characters, i.e. codes from
 0 to 127 in decimal:
   - C0 ASCII control codes (see the unicode standard
     documentation): 0 to 31 in decimal
   - ASCII (contains digit characters, latin capital
     letters, latin small letters, punctuation characters ...)       
 Thus, this class does not support NLS
 (National Langage Support), at the opposite of
 <script type="text/javascript"> activateLinkAnchor('CATUnicodeChar','','CATUnicodeChar') </script>. Comparing this class to 
<script type="text/javascript"> activateLinkAnchor('CATUnicodeChar','','CATUnicodeChar') </script>, the very simple character set supported here, 
 once accepted the limitations it implies, enables to supress
 all the problems that arise with NLS complexity.
 Before using this class instead of CATUnicodeChar,
 check carefully that you will never need the NLS
 support.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATChar()"><b>CATChar</b></a>()
<dd>  Construct an empty CATChar.
 <dt> o 
    <a href="#CATChar(char)"><b>CATChar</b></a>(char)
<dd>  Construct a ISO 646 char from a char.
 <dt> o 
    <a href="#CATChar(CATChar&amp;)"><b>CATChar</b></a>(CATChar&amp;)
<dd>  <dt> o 
    <a href="#~CATChar()"><b>~CATChar</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#operator const char()"><b>operator const char</b></a>()
<dd>  Cast operator.
 <dt> o 
    <a href="#operator=(char)"><b>operator=</b></a>(char)
<dd>  Assignment operator.
 <dt> o 
    <a href="#operator=(CATChar&amp;)"><b>operator=</b></a>(CATChar&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATChar"></a><a name="CATChar()"></a> <dt> o <b>CATChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATChar</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Construct an empty CATChar.
</dl>
<a name="CATChar"></a><a name="CATChar(char)"></a> <dt> o <b>CATChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATChar</b>(<td> const <script type="text/javascript"> activateLink('char','char')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Construct a ISO 646 char from a char.
</dl>
<a name="CATChar"></a><a name="CATChar(CATChar&amp;)"></a> <dt> o <b>CATChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATChar</b>(<td> const <script type="text/javascript"> activateLink('CATChar','CATChar&amp;')</script> <td><tt>iChar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATChar"></a><a name="~CATChar()"></a> <dt> o <b>~CATChar</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATChar</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="operator const char"></a><a name="operator const char()"></a> <dt> o <b>operator const char</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>operator const char</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Cast operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChar</tt>
   <dd>   char* character</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(char)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATChar','CATChar&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('char','char')</script> <td><tt>iChar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChar</tt>
   <dd>   The character to assign to the current one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The class resulting from the assignment
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATChar&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATChar','CATChar&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATChar','CATChar&amp;')</script> <td><tt>iChar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChar</tt>
   <dd>   The character to assign to the current one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The class resulting from the assignment
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATChar.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSysTS</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

