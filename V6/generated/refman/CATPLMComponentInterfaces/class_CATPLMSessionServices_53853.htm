<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMComponentInterfaces Class CATPLMSessionServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMComponentInterfaces.htm" href="../CATPLMComponentInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMComponentInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATPLMSessionServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMComponentInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATPLMSessionServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATPLMSessionServices_53853','CATPLMSessionServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATPLMSessionServices</b>
</p>
<p>
<b><i> Class to create and delete a batch session.</i></b><br>


 <br><b>Role</b>: this class enables you to create and delete a batch PLM session. 
 These methods include the connection and the deconnection respectively.
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ClosePLMSession()"><b>ClosePLMSession</b></a>()
<dd>   Closes the connection and delete the batch session.
 <dt> o 
    <a href="#InitPLMSession()"><b>InitPLMSession</b></a>()
<dd>   Creates a batch session and connects to a repository.
 <dt> o 
    <a href="#SetPLMSessionParameter(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>SetPLMSessionParameter</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Declares a connection parameter.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ClosePLMSession"></a><a name="ClosePLMSession()"></a> <dt> o <b>ClosePLMSession</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ClosePLMSession</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Closes the connection and delete the batch session.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li><tt>S_OK</tt>  if successfully done.</li>
       <li><tt>E_FAIL</tt> if unexpected errors.</li>
      </ul>
</dl>
</dl>
<a name="InitPLMSession"></a><a name="InitPLMSession()"></a> <dt> o <b>InitPLMSession</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InitPLMSession</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Creates a batch session and connects to a repository.
  
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li><tt>S_OK</tt> if succesfully connected.</li>
       <li><tt>E_INVALIDARG</tt> in such cases :
           <ul>
            <li> invalid connection parameters such as Repository not defined.</li> 
           </ul>
       <li><tt>E_FAIL</tt> if unexpected errors.</li>
      </ul>
</dl>
</dl>
<a name="SetPLMSessionParameter"></a><a name="SetPLMSessionParameter(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetPLMSessionParameter</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPLMSessionParameter</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Declares a connection parameter.
 These properties define the connection parameters to a repository.
 They are :
    <ul>
    <li> <tt>Repository</tt> : the repository name (like PLM1) which is mandatory.</li> 
    <li> <tt>UserID</tt> : the  user  name  for  connection </li> 
    <li> <tt>UserPasswd</tt> : the  user  password  for  connection </li> 
    <li> <tt>SecurityCtx</tt> : the user security context server for connection </li> 
    <li> <tt>Server</tt> : the URL string used for  connection, expected  format  is  'protocol://ServerName:PortNumber/RootURI' .
     <BR> This parameter will be automatically dispatched to the following parameters : ServerProtocol, ServerName,ServerPort,and ServerRootURI.
     <BR> If you also set those parameters they will override the one from the 'Server' parameter. </li>
     <BR> It's not possible to give the user and password directly.
     <BR> You can of course use subsets like Server:Port Server/RootURI protocol://Server etc...
    <li> <tt>ServerName</tt> : the  server  name.</li>
    <li> <tt>ServerPort</tt> : the  server  port.</li>
    <li> <tt>ServerProtocole</tt> : the  server protocole.</li>
    <li> <tt>ServerRootURI</tt> : the Root URI to use </li> 
    </ul>
 A parameter must be declared only if its value is not null. The parameters definition order doesn't matter.
 Some repository does not need all parameters for connection please check documentation of the repository.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd> The  parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd> The  value of the parameter
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li><tt>S_OK</tt> if the property has been successfully added.</li>
       <li><tt>E_INVALIDARG</tt> if the parameter name is invalid or if the length of <tt>iKey</tt> is null.</li> 
       <li><tt>E_FAIL</tt> otherwise if it has failed.</li>
      </ul>  

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATPLMSessionServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMComponentInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

