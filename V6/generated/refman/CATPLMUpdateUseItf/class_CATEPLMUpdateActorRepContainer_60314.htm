<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMUpdateUseItf Class CATEPLMUpdateActorRepContainer</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMUpdateUseItf.htm" href="../CATPLMUpdateUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMUpdateUseItf";	}
		function getCurrentObjectName() { 
 	return "CATEPLMUpdateActorRepContainer"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMUpdateUseItf <script type="text/javascript" > writeClassCharacteristic(); </script> CATEPLMUpdateActorRepContainer</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATEPLMUpdateActorRepContainer_60314','CATEPLMUpdateActorRepContainer','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATEPLMUpdateActorRepContainer</b>
</p>
<p>
<b><i> Base implementation of actors that represents a representation container.</i></b><br>

 CATIPLMUpdateActor is implemeted in this file.
 It provides a generic behaviour for the GetUnitStatus and UnitPLMUpdate methods.
 This component must not be instanciated directly.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATEPLMUpdateActorRepContainer()"><b>CATEPLMUpdateActorRepContainer</b></a>()
<dd>  Constructs an empty CATEPLMUpdateActorRepContainer.
 <dt> o 
    <a href="#~CATEPLMUpdateActorRepContainer()"><b>~CATEPLMUpdateActorRepContainer</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAlias(CATUnicodeString&amp;)"><b>GetAlias</b></a>(CATUnicodeString&amp;)
<dd>   Get the alias of this representation container actor.
 <dt> o 
    <a href="#GetAssociatedRepRef()"><b>GetAssociatedRepRef</b></a>()
<dd>  Retrieves the associated Representation Reference.
 <dt> o 
    <a href="#GetUnitStatus(CATPLMUpdateStatus&amp;)"><b>GetUnitStatus</b></a>(CATPLMUpdateStatus&amp;)
<dd>  Retrieves unit status of this actor.
 <dt> o 
    <a href="#Init(CATBaseUnknown*,CATBaseUnknown*,CATUnicodeString)"><b>Init</b></a>(CATBaseUnknown*,CATBaseUnknown*,CATUnicodeString)
<dd>   Initialize this container actor with the specified RepRef and container.
 <dt> o 
    <a href="#UnitPLMUpdate(CATUnicodeString&amp;)"><b>UnitPLMUpdate</b></a>(CATUnicodeString&amp;)
<dd>  Updates this actor unitarily.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATEPLMUpdateActorRepContainer"></a><a name="CATEPLMUpdateActorRepContainer()"></a> <dt> o <b>CATEPLMUpdateActorRepContainer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATEPLMUpdateActorRepContainer</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty CATEPLMUpdateActorRepContainer.
</dl>
<a name="~CATEPLMUpdateActorRepContainer"></a><a name="~CATEPLMUpdateActorRepContainer()"></a> <dt> o <b>~CATEPLMUpdateActorRepContainer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATEPLMUpdateActorRepContainer</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAlias"></a><a name="GetAlias(CATUnicodeString&amp;)"></a> <dt> o <b>GetAlias</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAlias</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oAlias</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Get the alias of this representation container actor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAlias</tt>
   <dd> [out]   The returned alias.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok,
   <code>E_UNEXPECTED</code> if a serious error occured.
</dl>
</dl>
<a name="GetAssociatedRepRef"></a><a name="GetAssociatedRepRef()"></a> <dt> o <b>GetAssociatedRepRef</b>

<dt>  <table><tr><td>  protected <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script>  <b>GetAssociatedRepRef</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the associated Representation Reference.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The pointer _associatedRepRef on the associated Representation Reference is returned.
</dl>
</dl>
<a name="GetUnitStatus"></a><a name="GetUnitStatus(CATPLMUpdateStatus&amp;)"></a> <dt> o <b>GetUnitStatus</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUnitStatus</b>(<td><script type="text/javascript"> activateLink('CATPLMUpdateStatus','CATPLMUpdateStatus&amp;')</script> <td><tt>oUnitStatus</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves unit status of this actor.

 <br><b>Role</b>: This method retrieves the PLM Update unit status of this actor.

 <br><b>Default Behavior</b>: by default, all the features of this container are
   checked and the actor is UpToDate only if all the features are up to date.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUnitStatus</tt>
   <dd> [out]   The unit status of this actor.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok, 
   <code>E_UNEXPECTED</code> if an unexpected error occurs.
</dl>
</dl>
<a name="Init"></a><a name="Init(CATBaseUnknown*,CATBaseUnknown*,CATUnicodeString)"></a> <dt> o <b>Init</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Init</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iRepRef</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iContainer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iContainerType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Initialize this container actor with the specified RepRef and container.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRepRef</tt>
   <dd> [in]   The RepRef containing this container.
 </dd>
    <dt><tt> iContainer</tt>
   <dd> [in]   The container corresponding to this actor.
 </dd>
    <dt><tt> iContainerType</tt>
   <dd> [in]   The type name of the container. It could be retrieve from the container
   but this way is more convenient as we already have this information
   when calling this method.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok,
   <code>E_UNEXPECTED</code> if a serious error occured.
</dl>
</dl>
<a name="UnitPLMUpdate"></a><a name="UnitPLMUpdate(CATUnicodeString&amp;)"></a> <dt> o <b>UnitPLMUpdate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnitPLMUpdate</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oDisplayedError</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Updates this actor unitarily.

 <br><b>Role</b>: This method launches the process which will update
   this actor. At the end of this method, this method must be either
   up to date, or out of date with error (dynamic error).

 <br><b>Default Behavior</b>: by default, all the features of this container
   which are out of date are updated.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDisplayedError</tt>
   <dd> [out]   In case the update failed, this is the error to be displayed to the user.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if the update succeeded and the actor should be up to date now,
   <code>E_FAIL</code> if a dynamic error occured, in which case oDisplayedError is valued.
   <code>E_UNEXPECTED</code> if an unexpected error occurs.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATEPLMUpdateActorRepContainer.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMUpdateUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

