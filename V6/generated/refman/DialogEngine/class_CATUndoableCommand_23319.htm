<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DialogEngine Class CATUndoableCommand</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DialogEngine.htm" href="../DialogEngine.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DialogEngine";	}
		function getCurrentObjectName() { 
 	return "CATUndoableCommand"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DialogEngine <script type="text/javascript" > writeClassCharacteristic(); </script> CATUndoableCommand</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATUndoableCommand_23319','CATUndoableCommand','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATUndoableCommand</b>
</p>
<p>
<b><i> Class representing an undoable command.</i></b><br>

 <b>Role</b>: An undoable command adds an item in the Undo stack when it is activated,
 replaced by a new global one when it ends in order to enable the user to reverse what
 has been done during the command.
 <p>IMPORTANT NOTICE :</p>
 <p>To activate your command either in exclusive, shared or undefined mode,
 you must respectively call one of the following methods immediately after its creation:
 <ul>
 <li><tt>RequestStatusChange(CATCommandMsgRequestExclusiveMode);</tt></li>
 <li><tt>RequestStatusChange(CATCommandMsgRequestSharedMode);</tt></li>
 <li><tt>Activate(NULL,NULL);</tt></li>
 </ul></p>
 <p>To end your command, you must call <tt>RequestDelayedDestruction();</tt>
 <br>note: the command cannot end before it has been activated. So <script type="text/javascript"> activateLinkAnchor('','RequestDelayedDestruction','RequestDelayedDestruction') </script> cannot be called immediately after the (asynchronous) RequestStatusChange call
 if the command is exclusive or shared. Then you must call it at the end of the overriden
 
<script type="text/javascript"> activateLinkAnchor('','Activate','Activate') </script> method if the command is expected to end without any user interaction. <p>To localize your command, you must create a NLS file whose name is the command identifier.
 For example if you create an instance with <tt>"MyCommand"</tt> as identifier,
 you must create a <tt>MyCommand.CATNls</tt> file including the <tt>UndoTitle</tt> key definition.
 (for example : <tt>UndoTitle="Object Analysis"</tt>;)
 If for any reason you want to use another file or another key you must use the
 
<script type="text/javascript"> activateLinkAnchor('','SetResourceID','SetResourceID') </script> method to set them. </p>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATUndoableCommand(CATString&amp;)"><b>CATUndoableCommand</b></a>(CATString&amp;)
<dd>  Constructs an undoable command.
 <dt> o 
    <a href="#~CATUndoableCommand()"><b>~CATUndoableCommand</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Activate(CATCommand*,CATNotification*)"><b>Activate</b></a>(CATCommand*,CATNotification*)
<dd>  Activates a command.
 <dt> o 
    <a href="#Cancel(CATCommand*,CATNotification*)"><b>Cancel</b></a>(CATCommand*,CATNotification*)
<dd>  Cancels a command.
 <dt> o 
    <a href="#Desactivate(CATCommand*,CATNotification*)"><b>Desactivate</b></a>(CATCommand*,CATNotification*)
<dd>  Deactivates a command.
 <dt> o 
    <a href="#ExecuteUndoAtEnd()"><b>ExecuteUndoAtEnd</b></a>()
<dd>  Requests to undo the command when it ends.
 <dt> o 
    <a href="#GetGlobalUndo()"><b>GetGlobalUndo</b></a>()
<dd>  Returns the command global undo.
 <dt> o 
    <a href="#RequestDelayedDestruction()"><b>RequestDelayedDestruction</b></a>()
<dd>  Requests the command delayed destruction.
 <dt> o 
    <a href="#SetResourceID(CATString&amp;,CATString&amp;)"><b>SetResourceID</b></a>(CATString&amp;,CATString&amp;)
<dd>  Sets specific resource file name and key.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATUndoableCommand"></a><a name="CATUndoableCommand(CATString&amp;)"></a> <dt> o <b>CATUndoableCommand</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATUndoableCommand</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an undoable command.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The command identifier. It is used to identify both the resource file and the Undo title.</dd>
</dl>
</dl>
</dl>
<a name="~CATUndoableCommand"></a><a name="~CATUndoableCommand()"></a> <dt> o <b>~CATUndoableCommand</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATUndoableCommand</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Activate"></a><a name="Activate(CATCommand*,CATNotification*)"></a> <dt> o <b>Activate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATStatusChangeRC','CATStatusChangeRC')</script>  <b>Activate</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iFromClient</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotification</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Activates a command.
 <br><b>Role</b>: Gives the focus to the command.
 <br>If you override this method, the CATUndoableCommand::Activate method must be called
 at the beginning of your own method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFromClient</tt>
   <dd>   The command that requests to activate the current one
 </dd>
    <dt><tt> iNotification</tt>
   <dd>   The associated notification
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The command status.
</dl>
</dl>
<a name="Cancel"></a><a name="Cancel(CATCommand*,CATNotification*)"></a> <dt> o <b>Cancel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATStatusChangeRC','CATStatusChangeRC')</script>  <b>Cancel</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iFromClient</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotification</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Cancels a command.
 <br><b>Role</b>: Called by the command selector to definitely
 withdraw the focus from the command.
 The command should then request its destruction, using the 
<script type="text/javascript"> activateLinkAnchor('RequestDelayedDestruction','','RequestDelayedDestruction') </script> method. <br>If you override this method, the CATUndoableCommand::Cancel method must be called
 at the end of your own method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFromClient</tt>
   <dd>   The command that requests to cancel the current one
 </dd>
    <dt><tt> iNotification</tt>
   <dd>   The notification sent
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The command status.
</dl>
</dl>
<a name="Desactivate"></a><a name="Desactivate(CATCommand*,CATNotification*)"></a> <dt> o <b>Desactivate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATStatusChangeRC','CATStatusChangeRC')</script>  <b>Desactivate</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iFromClient</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotification</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deactivates a command.
 <br><b>Role</b>: Called by the command selector to temporarily
 withdraw the focus from the command.
 <br>If you override this method, the CATUndoableCommand::Desactivate method must be called
 anywhere in your own method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFromClient</tt>
   <dd>   The command that requests to deactivate the current one
 </dd>
    <dt><tt> iNotification</tt>
   <dd>   The associated notification
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The command status.
</dl>
</dl>
<a name="ExecuteUndoAtEnd"></a><a name="ExecuteUndoAtEnd()"></a> <dt> o <b>ExecuteUndoAtEnd</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ExecuteUndoAtEnd</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Requests to undo the command when it ends.
 <br><b>Role</b>: This method requests a global undo at the end of the command.
</dl>
<a name="GetGlobalUndo"></a><a name="GetGlobalUndo()"></a> <dt> o <b>GetGlobalUndo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCommandGlobalUndo','CATCommandGlobalUndo *')</script>  <b>GetGlobalUndo</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the command global undo.
 <br><b>Role</b>: Enables to add actions during Undo or Redo.
</dl>
<a name="RequestDelayedDestruction"></a><a name="RequestDelayedDestruction()"></a> <dt> o <b>RequestDelayedDestruction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RequestDelayedDestruction</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Requests the command delayed destruction.
 <br><b>Role</b>: The command will be destroyed as soon as this will be possible.
</dl>
<a name="SetResourceID"></a><a name="SetResourceID(CATString&amp;,CATString&amp;)"></a> <dt> o <b>SetResourceID</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetResourceID</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iRscFileName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iRscKey</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets specific resource file name and key.
 <br><b>Role</b>: Defines resource file and/or key for localization.
 <br>If you call this method, call it before the CATUndoableCommand::Activate method is called.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRscFileName</tt>
   <dd>   The resource file name
 </dd>
    <dt><tt> iRscKey</tt>
   <dd>   The resource key</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATUndoableCommand.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDialogEngine</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

