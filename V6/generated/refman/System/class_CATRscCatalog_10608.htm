<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATRscCatalog</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../System.htm" href="../System.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "System";	}
		function getCurrentObjectName() { 
 	return "CATRscCatalog"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>System <script type="text/javascript" > writeClassCharacteristic(); </script> CATRscCatalog</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATRscCatalog_10608','CATRscCatalog','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATRscCatalog</b>
</p>
<p>
<b><i> Resource catalog class.</i></b><br>
 
 <b>Role</b>: Processing a resource catalog file.
 The resource catalog file contains keys and their corresponding values. Values are parameterized non translatable
 messages (see <script type="text/javascript"> activateLinkAnchor('CATString','','CATString') </script> ) which may, for example, identify resources. NLS (National Langage Support) is not supported, this class must be compared to the 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','','CATMsgCatalog') </script> class: the current class must be used for all non hard-coded strings which must not be translated into other languages.</br>
 A common use of this class corresponds to the storage of resource identifications through the use of dedicated
 sub-keys. See for example the use of the Icon.Normal sub-key described into the 
<script type="text/javascript"> activateLinkAnchor('CATImplementHeaderResources','','CATImplementHeaderResources') </script> documentation.</br>
 A resource catalog file value may be used to represent a directly resource (for example, a
 workbench category, i.e. the place where a given
 workbench appears in the menu tree). It may also be used to represent a reference to a resource (for example,
 for an icon, you will put the icon file name).</br>
 The class does not support control characters (for example \a, \n, \t).</br>
 A value can be parameterized, ie contains parameters you
 value at run-time. A parameter begins with /p or /P in the value.</br>
 Here is an example of a resource catalog file content:
 <pre>
 Message1 = "This is a simple parameterized string.";
 Message2 = "This parameterized string includes the parameter /P1 that
             is valued by your application at run-time.";
 Message3 = "This is a", "compound ", "parameterized string.";</pre>
 A resource catalog file posess the .CATRsc suffix and is retrieved from the folders specified by the
 CATMsgCatalogPath variable. The localized version of the resource catalog is searched first. If it does not exist,
 the english version is taken.</br>
 Example: Suppose
 <ul>
 <li>we are on Windows</li>
 <li>the environment is Japanese</li>
 <li>the Tools\Customize\Options\"User Interface Language" combo is set to "Environment language (default)"</li>
 </ul>
 then, if the CATMsgCatalogPath variable is valued the following way:
 <pre>   CATMsgCatalogPath=C:\PersonalFolder;C:\Program Files\Dassault Systemes\B14</pre>
 CATIA will search the resource catalog file into the following paths:
 <pre>   1 - C:\PersonalFolder\Japanese
   2 - C:\PersonalFolder
   3 - C:\Program Files\Dassault Systemes\B14\Japanese
   4 - C:\Program Files\Dassault Systemes\B14</pre>
 The character set for the message key characters is the following:
 <ul>
 <li>within the A - Z range</li>
 <li>within the a - z range</li>
 <li>within the 0 - 9 range</li>
 <li>PERIOD (.), SPACING UNDERSCORE (_), LEFT SQUARE BRACKET ([) and RIGHT SQUARE BRACKET (]) characters</li>
 </ul>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATRscCatalog()"><b>CATRscCatalog</b></a>()
<dd>  Constructs a resource catalog.
 <dt> o 
    <a href="#CATRscCatalog(CATRscCatalog&amp;)"><b>CATRscCatalog</b></a>(CATRscCatalog&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATRscCatalog()"><b>~CATRscCatalog</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BuildResource(CATString&amp;,CATString&amp;,CATString&amp;,CATString*,int,CATString&amp;)"><b>BuildResource</b></a>(CATString&amp;,CATString&amp;,CATString&amp;,CATString*,int,CATString&amp;)
<dd>  Computes a message from an identified non translatable parameterized message of the catalog, given specified
 parameters values.
 <dt> o 
    <a href="#GetCatalogKeys(CATListValCATString*)"><b>GetCatalogKeys</b></a>(CATListValCATString*)
<dd>  Get the list of keys of the catalog.
 <dt> o 
    <a href="#GetCatalogRsc(CATString&amp;,CATString&amp;,CATString*,int)"><b>GetCatalogRsc</b></a>(CATString&amp;,CATString&amp;,CATString*,int)
<dd>  Computes a message from the resource catalog.
 <dt> o 
    <a href="#GetError()"><b>GetError</b></a>()
<dd>  Returns the first syntax error found.
 <dt> o 
    <a href="#LoadRscCatalog(CATString&amp;,char*)"><b>LoadRscCatalog</b></a>(CATString&amp;,char*)
<dd>  Loads a resource catalog by means of its name and (if desired)
 of a path.
 <dt> o 
    <a href="#UnloadRscCatalog(CATString&amp;)"><b>UnloadRscCatalog</b></a>(CATString&amp;)
<dd>  Unloads a resource catalog by means of its name.
 <dt> o 
    <a href="#operator =(CATRscCatalog&amp;)"><b>operator =</b></a>(CATRscCatalog&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATRscCatalog"></a><a name="CATRscCatalog()"></a> <dt> o <b>CATRscCatalog</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATRscCatalog</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a resource catalog.
</dl>
<a name="CATRscCatalog"></a><a name="CATRscCatalog(CATRscCatalog&amp;)"></a> <dt> o <b>CATRscCatalog</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATRscCatalog</b>(<td> const <script type="text/javascript"> activateLink('CATRscCatalog','CATRscCatalog&amp;')</script> <td><tt>iRscCatalog</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.</br>
 <b>Caution</b>: This method should rarely be used, in most cases the use of 
 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','BuildResource','CATRscCatalog.BuildResource') </script> is enough. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRscCatalog</tt>
   <dd>   Resource catalog to copy
</dd>
</dl>
</dl>
</dl>
<a name="~CATRscCatalog"></a><a name="~CATRscCatalog()"></a> <dt> o <b>~CATRscCatalog</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATRscCatalog</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="BuildResource"></a><a name="BuildResource(CATString&amp;,CATString&amp;,CATString&amp;,CATString*,int,CATString&amp;)"></a> <dt> o <b>BuildResource</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>BuildResource</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iCatalogName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oNonTranslatableMessage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString*')</script> <td><tt>iMsgParameters</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iParamNb</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iDefaultMsg</tt><td><tt>=(char*)NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes a message from an identified non translatable parameterized message of the catalog, given specified
 parameters values.
 <br><b>Role</b>: Computes an alphanumeric string from a non transtable message from a resource catalog using the 
 catalog name, the message key, the message parameters and (if needed) a default non translatable message.
 <p>
 The use of this service is as follows: call it at any moment
 you want during execution. You do not have to
 store the computed message for a future re-use. Effectively,
 this service is encapsulated. It takes into account the 
 following things:
 <ul>
 <li>If the catalog is not loaded, it does it (this 
 enables the calling code not to bother about the loading:
 it lets the managing of it to this service, the resource
 catalog will be present into the memory only once,
 whatever the count of softwares using it.</li>
 <li>Otherwise, from the input resource catalog identifier 
 (iCatalogName parameter, see below), the method find in its 
 own data the resource catalog pointer, among the other 
 resource catalog already loaded, through a method that 
 has its performances optimized: a hashtable. This technology 
 ensures there isn't any performance problem.</li>
 </ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd>   Name of the resource catalog file, without the .CATRsc suffix
 </dd>
    <dt><tt> iKey</tt>
   <dd>   Key of the non translatable message to be retrieved
 </dd>
    <dt><tt> oNonTranslatableMessage</tt>
   <dd>   The computed output resource string.
 </dd>
    <dt><tt> iMsgParameters</tt>
   <dd>   Array giving to the method possible parameter values
   which the method will integrate into the parameterized
   message. 
   The parameter value count should correspond to the message 
   parameter highest index (this is not exactly the parameter count: 
   the software authorizes parameter indices that are not
   consecutive, which would distinguish the message 
   parameters highest index from the parameter count).
   If the input parameter value count is not sufficient, a default 
   behaviour is foreseen: "?" characters are introduced into the
   computed output resource string. 
   NULL default value coresponds to no parameter values.
 </dd>
    <dt><tt> iParamNb</tt>
   <dd>   Parameter value count
 </dd>
    <dt><tt> iDefaultMsg</tt>
   <dd>   Non translatable message to be used if a problem occured while
   accessing the resource catalog file or the key. You may, for
   example, put in this message an information about an
   access problem. 
   We suggest you to deliver a valid value to this parameter, so that,
   if an error occurs, a valid return value be delivered by
   the service. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>: <tt>0: False</tt> 
   if a problem has occured, or <tt>Other: True</tt> 
   otherwise.
   Use 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','GetError','CATRscCatalog.GetError') </script> to retrieve the current error
</dl>
</dl>
<a name="GetCatalogKeys"></a><a name="GetCatalogKeys(CATListValCATString*)"></a> <dt> o <b>GetCatalogKeys</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetCatalogKeys</b>(<td><script type="text/javascript"> activateLink('CATListValCATString','CATListValCATString*')</script> <td><tt>oKey</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the list of keys of the catalog.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oKey</tt>
   <dd>   The key list. 
 <br><b>Lifecycle rules deviation</b>: the caller must allocate the object and manage so that, in input,
 the oKey size be equal to zero. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     Key count.
</dl>
</dl>
<a name="GetCatalogRsc"></a><a name="GetCatalogRsc(CATString&amp;,CATString&amp;,CATString*,int)"></a> <dt> o <b>GetCatalogRsc</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetCatalogRsc</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oNonTranslatableMessage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString*')</script> <td><tt>iMsgParameters</tt><td><tt>= NULL </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iParamNb</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes a message from the resource catalog.
 <br><b>Role</b>: Computes a message from the resource catalog using the message key.</br>
 <b>Caution</b>: This method should rarely be used, in most cases the use of 
 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','BuildResource','CATRscCatalog.BuildResource') </script> is enough. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>   Key of the resource to be retrieved
 </dd>
    <dt><tt> oNonTranslatableMessage</tt>
   <dd>   The computed output resource string.
 </dd>
    <dt><tt> iMsgParameters</tt>
   <dd>   Array giving to the method possible parameter values
   which the method will integrate into the parameterized
   message. 
   The parameter value count should correspond to the message 
   parameter highest index (this is not exactly the parameter count: 
   the software authorizes parameter indices that are not
   consecutive, which would distinguish the message 
   parameters highest index from the parameter count).
   If the input parameter value count is not sufficient, a default 
   behaviour is foreseen: "?" characters are introduced into the
   computed output resource string. 
   NULL default value coresponds to no parameter values.
 </dd>
    <dt><tt> iParamNb</tt>
   <dd>   Parameter value count
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>: <tt>0: False</tt> 
   if a problem occured, or <tt>Other: True</tt> 
   otherwise.
   Use 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','GetError','CATRscCatalog.GetError') </script> to retrieve the current error
</dl>
</dl>
<a name="GetError"></a><a name="GetError()"></a> <dt> o <b>GetError</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATString','const CATString')</script>  <b>GetError</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the first syntax error found.
 <br><b>Role</b>: Returns the first syntax error found after a call to 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','BuildResource','CATRscCatalog.BuildResource') </script> or 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','LoadRscCatalog','CATRscCatalog.LoadRscCatalog') </script> . See 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','BuildResource','CATMsgCatalog.BuildResource') </script> and 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','LoadRscCatalog','CATRscCatalog.LoadRscCatalog') </script> . 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    String containing the error message.
</dl>
</dl>
<a name="LoadRscCatalog"></a><a name="LoadRscCatalog(CATString&amp;,char*)"></a> <dt> o <b>LoadRscCatalog</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>LoadRscCatalog</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iCatalogName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iPath</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Loads a resource catalog by means of its name and (if desired)
 of a path.</br>
 <b>Caution</b>: This method should rarely be used, in most cases the use of 
 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','BuildResource','CATRscCatalog.BuildResource') </script> is enough. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd>   Name of the resource catalog file, without the .CATRsc suffix
 </dd>
    <dt><tt> iPath</tt>
   <dd>    Absolute path where the catalog must be searched for.</br>
    The localized version of the resource catalog is searched first. If it does not exist,
    the english version is taken.</br>
    Example:
    In a japanese Windows environment, if the iPath variable is valued the following way:
    <pre>      iPath="C:\PersonalFolder;C:\Program Files\Dassault Systemes\B14"</pre>
    then, CATIA search the resource catalog file into the following paths:
    <pre>      1 - C:\PersonalFolder\Japanese
      2 - C:\PersonalFolder
      3 - C:\Program Files\Dassault Systemes\B14\Japanese
      4 - C:\Program Files\Dassault Systemes\B14</pre>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>: <tt>0: False</tt> 
    if the resource catalog is not loaded, or <tt>Other: True</tt> 
    if the resource catalog is loaded.</br>
 If the execution gives a 0 value, debug the resource catalog file using 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','GetError','CATRscCatalog.GetError') </script> .
</dl>
</dl>
<a name="UnloadRscCatalog"></a><a name="UnloadRscCatalog(CATString&amp;)"></a> <dt> o <b>UnloadRscCatalog</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>UnloadRscCatalog</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iCatalogName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Unloads a resource catalog by means of its name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd>    Name of the resource catalog file, without the .CATRsc suffix
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>: <tt>0: False</tt> 
   if a problem has occured, or <tt>Other: True</tt> 
   otherwise.
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATRscCatalog&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATRscCatalog','CATRscCatalog &')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATRscCatalog','CATRscCatalog&amp;')</script> <td><tt>iRscCatalog</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.</br>
 <b>Caution</b>: This method should rarely be used, in most cases the use of 
 
<script type="text/javascript"> activateLinkAnchor('CATRscCatalog','BuildResource','CATRscCatalog.BuildResource') </script> is enough. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRscCatalog</tt>
   <dd>   The resource catalog to be copied
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The resource catalog resulting from the assignment
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATRscCatalog.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

