<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Typedef RequestCallback</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../System.htm" href="../System.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "System";	}
		function getCurrentObjectName() { 
 	return "RequestCallback"; } 
	function getCurrentType() { 
 	return "typedef"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>System Typedef RequestCallback</h1>
<pre>

    typedef int (*RequestCallback) (const char *iProductName,
                                    unsigned long iProductID,
                                    unsigned long ioData[2])</pre>
<b><i> This is the function to be implemented by the CAA2 partner and passed
 to <a href="#Initialize(char*,unsigned long,RequestCallback,Handle&)">Initialize</a>.</i></b><br>
 It is not part of CATSysCAALM but included here only for
 documentation purpose.
 <br>
 It is called when the licensing subsystem needs to probe, request,
 check, release... a license. Data returned represents a boolean 
 indicating whether the operation has succeeded or failed.
 <dl>
  <dt> <b>Values:</b>
  <dd>
    <dl>
    <dt><tt> iProductName</tt>
   <dd>   The name of the product of the form ABC.prd
 </dd>
    <dt><tt> iProductID</tt>
   <dd>   The 32-bit integer specified by the SetLicense of the product
   identity card.
 </dd>
    <dt><tt> ioData</tt>
   <dd>   Two 32-bit integers that are used for verification. If the operation
   succeeds then ioData[0] must be XORed with the partner key
   and ioData[1] must also by XORed the product ID (2nd parameter).
   Any other value implies that the operation has failed.<br>
   On input, bits 12-15 of the first word ((ioData[0] >> 12) & 0xf)
   represents a value describing the operation to be performed:
   <DIR>
      <LI>0 - check that the license is present
      <LI>1 - request the license
      <LI>2 - check that the license (previously requested) is still granted
      <LI>3 - release the license (previously requested)
      <LI>4 - check if the product must be displayed in Tools/Options/Licensing tab (success -> displayed)
   </DIR>

 Here is an example:
 int callback (const char *iProductName,
</dd>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATSysCAALM.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

