<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATUuid</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../System.htm" href="../System.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "System";	}
		function getCurrentObjectName() { 
 	return "CATUuid"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>System <script type="text/javascript" > writeClassCharacteristic(); </script> CATUuid</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATUuid_4836','CATUuid','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATUuid</b>
</p>
<p>
<b><i> Class that generates Unique Universal Identifier.</i></b><br>

 It is of the form :
    <Ethernet card address><pid><time in seconds><time in microseconds>
 Its size is 16 octets.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATUuid()"><b>CATUuid</b></a>()
<dd>  Constructs a Unique Universal Identifier.
 <dt> o 
    <a href="#CATUuid(char*)"><b>CATUuid</b></a>(char*)
<dd>  Constructs a Unique Universal Identifier.
 <dt> o 
    <a href="#CATUuid(CATUuid&amp;)"><b>CATUuid</b></a>(CATUuid&amp;)
<dd>  Copy constructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#UUID_to_chaine(char*,unsigned int)"><b>UUID_to_chaine</b></a>(char*,unsigned int)
<dd>  Transform a UUID into a character string.
 <dt> o 
    <a href="#UUID_to_struct(char*)"><b>UUID_to_struct</b></a>(char*)
<dd>  Transform a UUID into a C structure form.
 <dt> o 
    <a href="#get(unsigned char[16])"><b>get</b></a>(unsigned char[16])
<dd>  Method used to get the UUID value of the given object.
 <dt> o 
    <a href="#operator !=(CATUuid&amp;)"><b>operator !=</b></a>(CATUuid&amp;)
<dd>  Comparison operator.
 <dt> o 
    <a href="#operator =(char* const)"><b>operator =</b></a>(char* const)
<dd>  Affectation operator.
 <dt> o 
    <a href="#operator =(CATUuid&amp;)"><b>operator =</b></a>(CATUuid&amp;)
<dd>  Affectation operator.
 <dt> o 
    <a href="#operator ==(CATUuid&amp;)"><b>operator ==</b></a>(CATUuid&amp;)
<dd>  Comparison operator.
 <dt> o 
    <a href="#set(unsigned char[16])"><b>set</b></a>(unsigned char[16])
<dd>  Method used to set the UUID value of the given object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATUuid"></a><a name="CATUuid()"></a> <dt> o <b>CATUuid</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATUuid</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Unique Universal Identifier.
</dl>
<a name="CATUuid"></a><a name="CATUuid(char*)"></a> <dt> o <b>CATUuid</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATUuid</b>(<td><script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iChar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Unique Universal Identifier.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChar</tt>
   <dd>   the UUID in a character form.</dd>
</dl>
</dl>
</dl>
<a name="CATUuid"></a><a name="CATUuid(CATUuid&amp;)"></a> <dt> o <b>CATUuid</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATUuid</b>(<td> const <script type="text/javascript"> activateLink('CATUuid','CATUuid&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
 <h2>Methods</h2> <br>
<a name="UUID_to_chaine"></a><a name="UUID_to_chaine(char*,unsigned int)"></a> <dt> o <b>UUID_to_chaine</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>UUID_to_chaine</b>(<td><script type="text/javascript"> activateLink('char','char*')</script> <td><tt>oChar</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iMaxChaineSize</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Transform a UUID into a character string.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oChar</tt>
   <dd>   the UUID in a character form. This string (oChar) must have
   at least a size of CATUUID_BUFFSIZE, which is defined upper.
 </dd>
    <dt><tt> iMaxChaineSize</tt>
   <dd>	Used to define the maximum number of char writable in oChar.
	Default value is 0 and will write CATUUID_BUFFSIZE.</dd>
</dl>
</dl>
</dl>
<a name="UUID_to_struct"></a><a name="UUID_to_struct(char*)"></a> <dt> o <b>UUID_to_struct</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>UUID_to_struct</b>(<td><script type="text/javascript"> activateLink('char','char*')</script> <td><tt>oStruct</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Transform a UUID into a C structure form.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStruct</tt>
   <dd>   the UUID in a C structure form.</dd>
</dl>
</dl>
</dl>
<a name="get"></a><a name="get(unsigned char[16])"></a> <dt> o <b>get</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>get</b>(<td><script type="text/javascript"> activateLink('unsigned char[16','unsigned char[16]')</script> <td><tt>oChar</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Method used to get the UUID value of the given object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oChar</tt>
   <dd>   the output value of the UUID.</dd>
</dl>
</dl>
</dl>
<a name="operator !="></a><a name="operator !=(CATUuid&amp;)"></a> <dt> o <b>operator !=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator !=</b>(<td> const <script type="text/javascript"> activateLink('CATUuid','CATUuid&amp;')</script> <td><tt>iUUID</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Comparison operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUUID</tt>
   <dd>   the input UUID.</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(char* const)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUuid','CATUuid')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('char*','char* const')</script> <td><tt>iChar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Affectation operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChar</tt>
   <dd>   the input character form of a UUID.</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATUuid&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUuid','CATUuid')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATUuid','CATUuid&amp;')</script> <td><tt>iUUID</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Affectation operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUUID</tt>
   <dd>   the input UUID.</dd>
</dl>
</dl>
</dl>
<a name="operator =="></a><a name="operator ==(CATUuid&amp;)"></a> <dt> o <b>operator ==</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator ==</b>(<td> const <script type="text/javascript"> activateLink('CATUuid','CATUuid&amp;')</script> <td><tt>iUUID</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Comparison operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUUID</tt>
   <dd>   the input UUID.</dd>
</dl>
</dl>
</dl>
<a name="set"></a><a name="set(unsigned char[16])"></a> <dt> o <b>set</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>set</b>(<td><script type="text/javascript"> activateLink('unsigned char[16','unsigned char[16]')</script> <td><tt>iChar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Method used to set the UUID value of the given object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChar</tt>
   <dd>   the input value of the UUID.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATUuid.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

