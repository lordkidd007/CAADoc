<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Macro CATImplementClass</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../System.htm" href="../System.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "System";	}
		function getCurrentObjectName() { 
 	return "CATImplementClass"; } 
	function getCurrentType() { 
 	return "define"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>System Macro CATImplementClass</h1>
<pre>
Macro <b>CATImplementClass</b> (Class,Typeofclass,Basemeta,Impmeta)
</pre>
<b><i> Declares an implementation or extension class.</i></b><br>

 <b>Role</b>: Declares that the current class is either
 an implementation or an extension class.
 The class must derive from CATBaseUnknown.
 Use this macro in the class source (.cpp) file in conjunction with <script type="text/javascript"> activateLinkAnchor('CATDeclareClass','','CATDeclareClass') </script> in the class header file.
 End it with a semicolon.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Class</tt>
   <dd>   The name of the class
 </dd>
    <dt><tt> Typeofclass</tt>
   <dd>   The class type.
   <br><b>Legal values:</b>: it can be set to <tt>Implementation</tt>, <tt>DataExtension</tt>,
   <tt>CodeExtension</tt>, <tt>CacheExtension</tt> or <tt>TransientExtension</tt>
 </dd>
    <dt><tt> Basemeta</tt>
   <dd>   The class from which <tt>Class</tt> CNext-derives.
   <br><b>Legal values:</b>: it makes sense for implementation classes and extensions in BOA mode.
   For an implementation, set it to the name of the CNext base class.
   For an extension implementing an interface in BOA mode, set it to the name of the interface.
   For other kind of extensions, set it to </dd>
<script type="text/javascript"> activateLinkAnchor('CATBaseUnknown','','CATBaseUnknown') </script> or <tt>CATNull</tt>.  
    <dt><tt> Impmeta</tt>
   <dd>   The class for which <tt>Class</tt> is an extension.
   <br><b>Legal values:</b>: it makes sense for extension classes only.
   Set it to the implementation class name for the three extension types,
   and to <tt>CATNull</tt> for an implementation</dd>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMacForIUnknown.h</b><br>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

