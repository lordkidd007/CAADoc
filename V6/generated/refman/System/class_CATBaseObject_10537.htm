<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATBaseObject</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../System.htm" href="../System.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "System";	}
		function getCurrentObjectName() { 
 	return "CATBaseObject"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>System <script type="text/javascript" > writeClassCharacteristic(); </script> CATBaseObject</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATBaseObject_10537','CATBaseObject','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATBaseObject</b>
</p>
<p>
<b><i> Adaptor class for the CATIABase Interface.</i></b><br>

 <b>Role</b>: 
 This class provides a default implementation for the <tt>CATIABase</tt> interface. 
 All implementations of Automation interfaces being derived from <tt>CATIABase</tt> should inherit 
 from <tt>CATBaseObject</tt>.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIABase','','CATIABase') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATBaseObject()"><b>CATBaseObject</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#CATBaseObject(CATBaseDispatch*)"><b>CATBaseObject</b></a>(CATBaseDispatch*)
<dd>  Constructs a CATBaseObject with the given parent.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetItem(CATBSTR&amp;,CATBaseDispatch*&amp;)"><b>GetItem</b></a>(CATBSTR&amp;,CATBaseDispatch*&amp;)
<dd>  Retrieves an object with the specified name.
 <dt> o 
    <a href="#SetParent(CATBaseDispatch*)"><b>SetParent</b></a>(CATBaseDispatch*)
<dd>  Sets the parent of the CATBaseObject.
 <dt> o 
    <a href="#get_Application(CATIAApplication*&amp;)"><b>get_Application</b></a>(CATIAApplication*&amp;)
<dd>  Returns the application.
 <dt> o 
    <a href="#get_Name(CATBSTR&amp;)"><b>get_Name</b></a>(CATBSTR&amp;)
<dd>  Returns the name of the object.
 <dt> o 
    <a href="#get_Parent(CATBaseDispatch*&amp;)"><b>get_Parent</b></a>(CATBaseDispatch*&amp;)
<dd>  Returns the parent of the object.
 <dt> o 
    <a href="#put_Name(CATBSTR&amp;)"><b>put_Name</b></a>(CATBSTR&amp;)
<dd>  Sets the name of the object.
</dl>
<dl>
</dl>
<dl>
 <h2>Data Member Index</h2> <br>
 <dt> o 
    <a href="#_name"><b>_name</b></a>
<dd>  The name of the object.
 <dt> o 
    <a href="#_parent"><b>_parent</b></a>
<dd>  The stored parent.
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATBaseObject"></a><a name="CATBaseObject()"></a> <dt> o <b>CATBaseObject</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATBaseObject</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CATBaseObject"></a><a name="CATBaseObject(CATBaseDispatch*)"></a> <dt> o <b>CATBaseObject</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATBaseObject</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch*')</script> <td><tt>iParent</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATBaseObject with the given parent.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd>   The parent of the CATBaseObject</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetItem"></a><a name="GetItem(CATBSTR&amp;,CATBaseDispatch*&amp;)"></a> <dt> o <b>GetItem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetItem</b>(<td> const <script type="text/javascript"> activateLink('CATBSTR','CATBSTR&amp;')</script> <td><tt>iNameBSTR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch*&amp;')</script> <td><tt>oObject</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves an object with the specified name.
 See 
<script type="text/javascript"> activateLinkAnchor('CATIABase','GetItem','CATIABase.GetItem') </script> for a complete description of this method. All implementations must override this default implementation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNameBSTR</tt>
   <dd>   The specified name of the object to retrieve
 </dd>
    <dt><tt> oObject</tt>
   <dd>   The returned object</dd>
</dl>
</dl>
</dl>
<a name="SetParent"></a><a name="SetParent(CATBaseDispatch*)"></a> <dt> o <b>SetParent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetParent</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch*')</script> <td><tt>iParent</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the parent of the CATBaseObject.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd>   The parent of the CATBaseObject</dd>
</dl>
</dl>
</dl>
<a name="get_Application"></a><a name="get_Application(CATIAApplication*&amp;)"></a> <dt> o <b>get_Application</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>get_Application</b>(<td><script type="text/javascript"> activateLink('CATIAApplication','CATIAApplication*&amp;')</script> <td><tt>oApplication</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the application.
 See 
<script type="text/javascript"> activateLinkAnchor('CATIABase','get_Application','CATIABase.get_Application') </script> for a complete description of this method. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oApplication</tt>
   <dd>   The returned application</dd>
</dl>
</dl>
</dl>
<a name="get_Name"></a><a name="get_Name(CATBSTR&amp;)"></a> <dt> o <b>get_Name</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>get_Name</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR&amp;')</script> <td><tt>oNameBSTR</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the object.
 See 
<script type="text/javascript"> activateLinkAnchor('CATIABase','get_Name','CATIABase.get_Name') </script> for a complete description of this method. All implementations must override this default implementation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNameBSTR</tt>
   <dd>   The returned name</dd>
</dl>
</dl>
</dl>
<a name="get_Parent"></a><a name="get_Parent(CATBaseDispatch*&amp;)"></a> <dt> o <b>get_Parent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>get_Parent</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch*&amp;')</script> <td><tt>oParent</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the parent of the object.
 See 
<script type="text/javascript"> activateLinkAnchor('CATIABase','get_Parent','CATIABase.get_Parent') </script> for a complete description of this method. All implementations must override this default implementation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oParent</tt>
   <dd>   The returned parent</dd>
</dl>
</dl>
</dl>
<a name="put_Name"></a><a name="put_Name(CATBSTR&amp;)"></a> <dt> o <b>put_Name</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>put_Name</b>(<td> const <script type="text/javascript"> activateLink('CATBSTR','CATBSTR&amp;')</script> <td><tt>iNameBSTR</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the name of the object.
 See 
<script type="text/javascript"> activateLinkAnchor('CATIABase','put_Name','CATIABase.put_Name') </script> for a complete description of this method. All implementations must override this default implementation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNameBSTR</tt>
   <dd>   The name to set</dd>
</dl>
</dl>
</dl>
 <h2>Data Members</h2> <br>
<a name="_name"></a> <dt> o <b>_name</b>
<pre>
  protected CATUnicodeString _name</dt>
</pre>
<dl>
  <dd>
 The name of the object.
</dl>
<a name="_parent"></a> <dt> o <b>_parent</b>
<pre>
  protected CATBaseDispatch *_parent</dt>
</pre>
<dl>
  <dd>
 The stored parent.
</dl>
<hr>
 This object is included in the file: <b>CATBaseObject.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

