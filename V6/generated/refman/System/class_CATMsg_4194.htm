<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATMsg</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../System.htm" href="../System.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "System";	}
		function getCurrentObjectName() { 
 	return "CATMsg"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>System <script type="text/javascript" > writeClassCharacteristic(); </script> CATMsg</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMsg_4194','CATMsg','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMsg</b>
</p>
<p>
<b><i> Message from a message catalog.</i></b><br>

 <b>Role</b>: Processing a message from a message catalog (see <script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','','CATMsgCatalog') </script> ). A message is the unit cell that is the a message of a 
 message catalog (see 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','','CATMsgCatalog') </script> ).   A message is a parameterized alphanumerical
 string which can be used for any alphanumerical item of 
 information, a warning, a help or error message, and whenever you need to display any text in a
 dialog window, such a the caption on a push button.
 NLS (National Langage Support) is supported.
 <p>Syntaxically, a CATMsg object (which can be, as 
 you can see in its syntax below, constructed simply calling 
 the CATMsg class constructor, with no argument),
 corresponds precisely to an access to the message itself.
 <p>A given message of a message catalog contains a key.
 This key identifies a message. For example, the
 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','SubstituteCatalogMsg','CATMsgCatalog.SubstituteCatalogMsg') </script> method, to substitute a message in a given message catalog,
 takes as the input message identifier its key.
 <p>Regarding the parameters of a message, you reference them
 through a syntax of the following form: A parameter begins with /p or /P in 
 the message text. The following are examples of messages:
 <pre>
 Message1 = "This is a simple message.";
 Message2 = "This message includes the parameter /P1 that
             is valued by your application at run-time.";
 Message3 = "This is a", "compound ", "message.";
 Message4 = "You can use control characters such as \t or \n in your messages.";</pre>
 Messages can be easily translated, since they are stored outside of the
 code that handles them.</br>
 see 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','','CATMsgCatalog') </script> </br> see 
<script type="text/javascript"> activateLinkAnchor('CATUnicodeString','','CATUnicodeString') </script>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMsg()"><b>CATMsg</b></a>()
<dd>  Constructs an empty message.
 <dt> o 
    <a href="#CATMsg(CATMsg&amp;)"><b>CATMsg</b></a>(CATMsg&amp;)
<dd>   Copy constructor.
 <dt> o 
    <a href="#CATMsg(CATUnicodeString&amp;)"><b>CATMsg</b></a>(CATUnicodeString&amp;)
<dd>  Constructs a CATMsg instance from a CATUnicodeString instance.
 <dt> o 
    <a href="#~CATMsg()"><b>~CATMsg</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#operator=(CATMsg&amp;)"><b>operator=</b></a>(CATMsg&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMsg"></a><a name="CATMsg()"></a> <dt> o <b>CATMsg</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMsg</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty message.</br>
 <b>Caution</b>: This method should rarely be used, in most cases the use of 
 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','BuildMessage','CATMsgCatalog.BuildMessage') </script> is enough.
</dl>
<a name="CATMsg"></a><a name="CATMsg(CATMsg&amp;)"></a> <dt> o <b>CATMsg</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMsg</b>(<td> const <script type="text/javascript"> activateLink('CATMsg','CATMsg&amp;')</script> <td><tt>iMessage</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Copy constructor.</br>
 <b>Caution</b>: This method should rarely be used, in most cases the use of 
 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','BuildMessage','CATMsgCatalog.BuildMessage') </script> is enough. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMessage</tt>
   <dd>    The message to copy</dd>
</dl>
</dl>
</dl>
<a name="CATMsg"></a><a name="CATMsg(CATUnicodeString&amp;)"></a> <dt> o <b>CATMsg</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMsg</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iString</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATMsg instance from a CATUnicodeString instance.</br>
 <b>Caution</b>: This method should rarely be used, in most cases the use of 
 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','BuildMessage','CATMsgCatalog.BuildMessage') </script> is enough.
</dl>
<a name="~CATMsg"></a><a name="~CATMsg()"></a> <dt> o <b>~CATMsg</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATMsg</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="operator="></a><a name="operator=(CATMsg&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMsg','const CATMsg&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATMsg','CATMsg&amp;')</script> <td><tt>iMessage</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.</br>
 <b>Caution</b>: This method should rarely be used, in most cases the use of 
 
<script type="text/javascript"> activateLinkAnchor('CATMsgCatalog','BuildMessage','CATMsgCatalog.BuildMessage') </script> is enough. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMessage</tt>
   <dd>   Message of the right part of the equality
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      Message of the left part of the equality
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMsg.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

