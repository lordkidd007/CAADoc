<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATSysCAALM</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../System.htm" href="../System.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "System";	}
		function getCurrentObjectName() { 
 	return "CATSysCAALM"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>System <script type="text/javascript" > writeClassCharacteristic(); </script> CATSysCAALM</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATSysCAALM_7127','CATSysCAALM','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATSysCAALM</b>
</p>
<p>
<b><i> Class providing access to CATIA's licensing subsystem.</i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Initialize(char*,unsigned long,RequestCallback,Handle&amp;)"><b>Initialize</b></a>(char*,unsigned long,RequestCallback,Handle&amp;)
<dd>  Initializes the licensing subsystem with the CAA2 partner data.
 <dt> o 
    <a href="#IsProductAuthorized(char*)"><b>IsProductAuthorized</b></a>(char*)
<dd>  Checks whether a product is enabled or not.
 <dt> o 
    <a href="#LM_Setup()"><b>LM_Setup</b></a>()
<dd>  This is not a function member of the CATSysCAALM class but an entry 
 point to be defined in a shared library.
 <dt> o 
    <a href="#ReleaseProduct(Handle,char*)"><b>ReleaseProduct</b></a>(Handle,char*)
<dd>  Releases a product that is enabled.
 <dt> o 
    <a href="#RequestProduct(Handle,char*)"><b>RequestProduct</b></a>(Handle,char*)
<dd>  Requests a product for enabling.
 <dt> o 
    <a href="#Start()"><b>Start</b></a>()
<dd>  Initializes the licensing subsystem.
 <dt> o 
    <a href="#Stop(Handle)"><b>Stop</b></a>(Handle)
<dd>  Releases licenses requested and resources used by the CAA2 partner.
 <dt> o 
    <a href="#UpdateWorkbenches()"><b>UpdateWorkbenches</b></a>()
<dd>  Updates the workbenches, works only with a CATInteractiveApplication.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CATSysCAALMStatus"><b>CATSysCAALMStatus</b></a>
<dd>  Status code returned.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Initialize"></a><a name="Initialize(char*,unsigned long,RequestCallback,Handle&amp;)"></a> <dt> o <b>Initialize</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>Initialize</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iPartnerName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned long','unsigned long')</script> <td><tt>iPartnerKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('RequestCallback','RequestCallback')</script> <td><tt>iRCB</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Handle','Handle&amp;')</script> <td><tt>ohandle</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Initializes the licensing subsystem with the CAA2 partner data.
 This call should only be made by the <a href="#LM_Setup()">LM_Setup</a>
 entry point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPartnerName</tt>
   <dd>   The name of the CAA2 partner as specified by the SetPartner
   in the product identity card.
 </dd>
    <dt><tt> iPartnerKey</tt>
   <dd>   The confidential 32-bit integer assigned specifically to the
   CAA2 partner by DS.
 </dd>
    <dt><tt> iRCB</tt>
   <dd>   The pointer to a function implemented by the CAA2 partner that will
   be called for license operations. See <a href="#callback(char*,unsigned long,unsigned long[2])">RequestCallback</a> for details.
 </dd>
    <dt><tt> ohandle</tt>
   <dd>   A Handle variable that will contain the CAA2 partner data upon 
   return.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    success<br>
   invalidPartner<br>
</dl>
</dl>
<a name="IsProductAuthorized"></a><a name="IsProductAuthorized(char*)"></a> <dt> o <b>IsProductAuthorized</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>IsProductAuthorized</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iproductName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Checks whether a product is enabled or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProductName</tt>
   <dd>   The name of the product (ie "ABC.prd")
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    0 - the product is not enabled.<br>
   non 0 - the product is enabled.
</dl>
</dl>
<a name="LM_Setup"></a><a name="LM_Setup()"></a> <dt> o <b>LM_Setup</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>LM_Setup</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 This is not a function member of the CATSysCAALM class but an entry 
 point to be defined in a shared library.<br>
 Partners must normally deliver a shared library with a name
 of the form <B><EM>ABC</EM>_LM</B> where <B><EM>ABC</EM></B> is the
 partner name as defined in the product identification card.
 The purpose of this entry point is to let the partner code perform all
 required initializations and to call <a href="#Initialize(char*,unsigned long,RequestCallback,Handle&)">Initialize</a>.<br>
 Please note that <tt>LM_Setup</tt> should be declared as <tt>extern "C"</tt>.
 On Windows systems, it should also be declared as an exported symbol
 with <tt>__declspec (export)</tt>.
</dl>
<a name="ReleaseProduct"></a><a name="ReleaseProduct(Handle,char*)"></a> <dt> o <b>ReleaseProduct</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>ReleaseProduct</b>(<td><script type="text/javascript"> activateLink('Handle','Handle')</script> <td><tt>ihandle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iProductName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Releases a product that is enabled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihandle</tt>
   <dd>   The Handle variable that was passed to <a href="#Initialize(char*,unsigned long,RequestCallback,Handle&)">Initialize</a>.
 </dd>
    <dt><tt> iProductName</tt>
   <dd>   The name of the product like ABC.prd
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    sucess<br>
   error - data returned by the callback is invalid.<br>
   notInilialized<br>
   invalidProduct<br>
   invalidHandle<br>
</dl>
</dl>
<a name="RequestProduct"></a><a name="RequestProduct(Handle,char*)"></a> <dt> o <b>RequestProduct</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>RequestProduct</b>(<td><script type="text/javascript"> activateLink('Handle','Handle')</script> <td><tt>ihandle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iProductName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Requests a product for enabling.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihandle</tt>
   <dd>   The Handle variable that was passed to <a href="#Initialize(char*,unsigned long,RequestCallback,Handle&)">Initialize</a>.
 </dd>
    <dt><tt> iProductName</tt>
   <dd>   The name of the product like ABC.prd
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    sucess<br>
   error - data returned by the callback is invalid.<br>
   notInilialized<br>
   invalidProduct<br>
   invalidHandle<br>
</dl>
</dl>
<a name="Start"></a><a name="Start()"></a> <dt> o <b>Start</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>Start</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Initializes the licensing subsystem. This will call the  <a href="#LM_Setup()">LM_Setup</a>
 entry point. Use this method in non-interactive mode.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    success<br>
   error<br>
</dl>
</dl>
<a name="Stop"></a><a name="Stop(Handle)"></a> <dt> o <b>Stop</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>Stop</b>(<td><script type="text/javascript"> activateLink('Handle','Handle')</script> <td><tt>ihandle</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Releases licenses requested and resources used by the CAA2 partner.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iohandle</tt>
   <dd>   The Handle variable that was passed to <a href="#Initialize(char*,unsigned long,RequestCallback,Handle&)">Initialize</a>. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    success<br>
   invalidHandle<br>
</dl>
</dl>
<a name="UpdateWorkbenches"></a><a name="UpdateWorkbenches()"></a> <dt> o <b>UpdateWorkbenches</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>UpdateWorkbenches</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Updates the workbenches, works only with a CATInteractiveApplication.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    sucess<br>
   error - unable to update workbenches.<br>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CATSysCAALMStatus"> <dt> o <b>CATSysCAALMStatus</b>
<dl>
  <dd>
<pre>
enum <b>CATSysCAALMStatus</b> {
  success,
  error,
  notInitialized,
  alreadyInitialized,
  notRequested,
  invalidPartner,
  invalidProduct,
  invalidICPath,
  invalidHandle
}
</pre>
 Status code returned.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> success</tt>
   <dd>   The requested action has completed successfully.
 </dd>
    <dt><tt> error</tt>
   <dd>   Catch-all error code.
 </dd>
    <dt><tt> notInitialized</tt>
   <dd>   <tt>Initialize</tt> has not been called.
 </dd>
    <dt><tt> alreadyInitialized</tt>
   <dd>   The licensing subsystem is already initialized by way of Initialize
   or another CATIA's function. CAALM might not function.
 </dd>
    <dt><tt> invalidPartner</tt>
   <dd>   The specified CAA2 partner name and key are not recognized.
 </dd>
    <dt><tt> invavlidProduct</tt>
   <dd>   The specified product is unknown or cannot be handled by the current
   CAA2 partner.
 </dd>
    <dt><tt> invalidICPath</tt>
   <dd>   The specified directoty does not contain any product identity card.
 </dd>
    <dt><tt> invalidHandle</tt>
   <dd>   The specified Handle variable does not contain valid data.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATSysCAALM.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

