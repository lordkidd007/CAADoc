<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPLMRequirementModelerItf Interface PLMIReqRelation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VPLMRequirementModelerItf.htm" href="../VPLMRequirementModelerItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VPLMRequirementModelerItf";	}
		function getCurrentObjectName() { 
 	return "PLMIReqRelation"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VPLMRequirementModelerItf Interface PLMIReqRelation</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMIReqRelation_45268','PLMIReqRelation','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMIReqRelation</b>
</p>
<p>
<b><i> Interface to browse information on the Relations that exist between Requirement-related objects.</i></b><br>

 
 <b>Role</b>: The relations are always R-R and might be :
 <ul>
 <li>Sub Specification Folder
 <br>from: Specification Folder
 <br>to: Specification Folder
	</li>
 <li>Specification Folder Content
 <br>from: Specification Folder
 <br>to: Requirement Specification
	</li>
 <li>Specification Structure
		<ul>
		<li>
			<br>from: Requirement Specification
			<br>to: Chapter
		</li>
		<li>
			<br>from: Requirement Specification
			<br>to: Comment
		</li>
		<li>
			<br>from: Requirement Specification
			<br>to: Requirement
		</li>
		<li>
			<br>from: Chapter
			<br>to: Chapter
		</li>
		<li>
			<br>from: Chapter
			<br>to: Comment
		</li>
		<li>
			<br>from: Chapter
			<br>to: Requirement
		</li>
		</ul>
	</li>
 <li>Sub Requirement
 <br>from: Requirement
 <br>to: Requirement
	</li>
 <li>Derived Requirement
 <br>from: Requirement
 <br>to: Requirement
	</li>
 </ul>
 The "Derived Requirement" relation is used for R-R cross-DAG linking.
 <br> The "Specification Structure", and to some extent the "Sub Requirement" relations are used for intra-DAG.
 <br> The "Sub Specification Folder" and the "Specification Folder Content" relations are used as nodes for DAGs organization.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFromObject(CATBaseUnknown_var&amp;)"><b>GetFromObject</b></a>(CATBaseUnknown_var&amp;)
<dd>  Get the "from" object of the relation.
 <dt> o 
    <a href="#GetFromReqEntity(PLMIReqStructuralEntity_var&amp;)"><b>GetFromReqEntity</b></a>(PLMIReqStructuralEntity_var&amp;)
<dd>  Get the "from" entity within the Requirements model.
 <dt> o 
    <a href="#GetRelationClassification(PLMReqRelationClassification&amp;)"><b>GetRelationClassification</b></a>(PLMReqRelationClassification&amp;)
<dd>  Get high-level classification within the Requirements model.
 <dt> o 
    <a href="#GetToObject(CATBaseUnknown_var&amp;)"><b>GetToObject</b></a>(CATBaseUnknown_var&amp;)
<dd>  Get the "to" object of the relation.
 <dt> o 
    <a href="#GetToReqEntity(PLMIReqStructuralEntity_var&amp;)"><b>GetToReqEntity</b></a>(PLMIReqStructuralEntity_var&amp;)
<dd>  Get the "to" entity within the Requirements model.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFromObject"></a><a name="GetFromObject(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetFromObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFromObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oFrom</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get the "from" object of the relation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFrom</tt>
   <dd> Source entity. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<a name="GetFromReqEntity"></a><a name="GetFromReqEntity(PLMIReqStructuralEntity_var&amp;)"></a> <dt> o <b>GetFromReqEntity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFromReqEntity</b>(<td><script type="text/javascript"> activateLink('PLMIReqStructuralEntity_var','PLMIReqStructuralEntity_var&amp;')</script> <td><tt>oFrom</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get the "from" entity within the Requirements model.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFrom</tt>
   <dd> Source entity. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<a name="GetRelationClassification"></a><a name="GetRelationClassification(PLMReqRelationClassification&amp;)"></a> <dt> o <b>GetRelationClassification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRelationClassification</b>(<td><script type="text/javascript"> activateLink('PLMReqRelationClassification','PLMReqRelationClassification&amp;')</script> <td><tt>oClassification</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get high-level classification within the Requirements model.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oClassification</tt>
   <dd> classification of the entity. <ul>
 <li><code>PLMReqRelationClassification_SubGroup<code>
		Sub Specification Folder
 <li><code>PLMReqRelationClassification_GroupContent<code>
		Specification Folder Content
 <li><code>PLMReqRelationClassification_SpecificationStructure<code>
		Specification Structure
 <li><code>PLMReqRelationClassification_SubRequirement<code>
		Sub Requirement
 <li><code>PLMReqRelationClassification_DerivedRequirement<code>
		Derived Requirement
 </ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<a name="GetToObject"></a><a name="GetToObject(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetToObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetToObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oTo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get the "to" object of the relation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTo</tt>
   <dd> Target entity. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<a name="GetToReqEntity"></a><a name="GetToReqEntity(PLMIReqStructuralEntity_var&amp;)"></a> <dt> o <b>GetToReqEntity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetToReqEntity</b>(<td><script type="text/javascript"> activateLink('PLMIReqStructuralEntity_var','PLMIReqStructuralEntity_var&amp;')</script> <td><tt>oTo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get the "to" entity within the Requirements model.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTo</tt>
   <dd> Target entity. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMIReqRelation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>VPLMRequirementModelerItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

