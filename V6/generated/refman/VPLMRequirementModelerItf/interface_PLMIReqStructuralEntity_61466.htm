<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPLMRequirementModelerItf Interface PLMIReqStructuralEntity</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VPLMRequirementModelerItf.htm" href="../VPLMRequirementModelerItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VPLMRequirementModelerItf";	}
		function getCurrentObjectName() { 
 	return "PLMIReqStructuralEntity"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VPLMRequirementModelerItf Interface PLMIReqStructuralEntity</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_PLMIReqStructuralEntity_61466','PLMIReqStructuralEntity','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>PLMIReqStructuralEntity</b>
</p>
<p>
<b><i> Interface to Navigate from a Requirement-related object up/down the DAG structure (Direct Acyclic Graph) it belongs to.</i></b><br>

 
 <b>Role</b>: The structural entities are the Requirements, but also the other types of objects belonging to the Requirement Central data model.
 So, this includes the following types, and the types deriving from them (either provided by DS, either specialized in customized environments) :
 <ul>
 <li>Specification Folder
	</li>
 <li>Requirement Specification
	</li>
 <li>Chapter
	</li>
 <li>Comment
	</li>
 <li>Requirement
	</li>
 </ul>
 Some information is also provided about its high-level classification within the Requirements model (i.e. one of the high-level types).</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetReqChildren(CATLISTV(CATBaseUnknown_var)*,CATLISTV(CATBaseUnknown_var)*,PLMReqRelationClassification)"><b>GetReqChildren</b></a>(CATLISTV(CATBaseUnknown_var)*,CATLISTV(CATBaseUnknown_var)*,PLMReqRelationClassification)
<dd>  Navigate from a Requirement-related object down the structure it belongs to.
 <dt> o 
    <a href="#GetReqChildrenEntities(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)"><b>GetReqChildrenEntities</b></a>(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)
<dd>  Navigate from a Requirement-related object down the structure it belongs to.
 <dt> o 
    <a href="#GetReqChildrenRelations(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)"><b>GetReqChildrenRelations</b></a>(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)
<dd>  Navigate from a Requirement-related object down the structure it belongs to.
 <dt> o 
    <a href="#GetReqClassification(PLMReqEntityClassification&amp;)"><b>GetReqClassification</b></a>(PLMReqEntityClassification&amp;)
<dd>  Gets the high-level classification within the Requirements model.
 <dt> o 
    <a href="#GetReqParents(CATLISTV(CATBaseUnknown_var)*,CATLISTV(CATBaseUnknown_var)*,PLMReqRelationClassification)"><b>GetReqParents</b></a>(CATLISTV(CATBaseUnknown_var)*,CATLISTV(CATBaseUnknown_var)*,PLMReqRelationClassification)
<dd>  Navigate from a Requirement-related object up the structure it belongs to.
 <dt> o 
    <a href="#GetReqParentsEntities(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)"><b>GetReqParentsEntities</b></a>(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)
<dd>  Navigate from a Requirement-related object up the structure it belongs to.
 <dt> o 
    <a href="#GetReqParentsRelations(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)"><b>GetReqParentsRelations</b></a>(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)
<dd>  Navigate from a Requirement-related object up the structure it belongs to.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetReqChildren"></a><a name="GetReqChildren(CATLISTV(CATBaseUnknown_var)*,CATLISTV(CATBaseUnknown_var)*,PLMReqRelationClassification)"></a> <dt> o <b>GetReqChildren</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReqChildren</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)*')</script> <td><tt>oChildrenRels</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)*')</script> <td><tt>oChildren</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMReqRelationClassification','PLMReqRelationClassification')</script> <td><tt>iRelClassif</tt><td><tt>= PLMReqRelationClassification_Unknown </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Navigate from a Requirement-related object down the structure it belongs to.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oChildrenRels</tt>
   <dd> pointer to gain the list of direct children relations over the entity (might be NULL). </dd>
    <dt><tt> oChildren</tt>
   <dd> pointer to gain the list of direct children entities over the entity (might be NULL). </dd>
    <dt><tt> iRelClassif</tt>
   <dd> Specific Relation Classification used to filter (default PLMReqRelationClassification_Unknown means that all relations are considered). </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>E_FAIL</dt><dd>If both pointers are NULL</dd>
  <dt>S_OK</dt><dd>Otherwise</dd>
  </dl>
</dl>
</dl>
<a name="GetReqChildrenEntities"></a><a name="GetReqChildrenEntities(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)"></a> <dt> o <b>GetReqChildrenEntities</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReqChildrenEntities</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oChildren</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMReqRelationClassification','PLMReqRelationClassification')</script> <td><tt>iRelClassif</tt><td><tt>= PLMReqRelationClassification_Unknown </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Navigate from a Requirement-related object down the structure it belongs to.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oChildren</tt>
   <dd> list of direct children entities below the entity. </dd>
    <dt><tt> iRelClassif</tt>
   <dd> Specific Relation Classification used to filter (default PLMReqRelationClassification_Unknown means that all relations are considered). </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<a name="GetReqChildrenRelations"></a><a name="GetReqChildrenRelations(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)"></a> <dt> o <b>GetReqChildrenRelations</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReqChildrenRelations</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oChildrenRels</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMReqRelationClassification','PLMReqRelationClassification')</script> <td><tt>iRelClassif</tt><td><tt>= PLMReqRelationClassification_Unknown </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Navigate from a Requirement-related object down the structure it belongs to.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oChildrenRels</tt>
   <dd> list of direct children relations below the entity. </dd>
    <dt><tt> iRelClassif</tt>
   <dd> Specific Relation Classification used to filter (default PLMReqRelationClassification_Unknown means that all relations are considered). </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<a name="GetReqClassification"></a><a name="GetReqClassification(PLMReqEntityClassification&amp;)"></a> <dt> o <b>GetReqClassification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReqClassification</b>(<td><script type="text/javascript"> activateLink('PLMReqEntityClassification','PLMReqEntityClassification&amp;')</script> <td><tt>oClassification</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the high-level classification within the Requirements model.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oClassification</tt>
   <dd> classification of the entity. <ul>
 <li><code>PLMReqEntityClassification_ReqGroup<code>
		Specification Folder
 <li><code>PLMReqEntityClassification_ReqSpec<code>
		Requirement Specification
 <li><code>PLMReqEntityClassification_Chapter<code>
		Chapter
 <li><code>PLMReqEntityClassification_Comment<code>
		Comment
 <li><code>PLMReqEntityClassification_Requirement<code>
		Requirement
 </ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<a name="GetReqParents"></a><a name="GetReqParents(CATLISTV(CATBaseUnknown_var)*,CATLISTV(CATBaseUnknown_var)*,PLMReqRelationClassification)"></a> <dt> o <b>GetReqParents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReqParents</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)*')</script> <td><tt>oParentsRels</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)*')</script> <td><tt>oParents</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMReqRelationClassification','PLMReqRelationClassification')</script> <td><tt>iRelClassif</tt><td><tt>= PLMReqRelationClassification_Unknown </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Navigate from a Requirement-related object up the structure it belongs to.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oParentsRels</tt>
   <dd> pointer to gain the list of direct parent relations over the entity (might be NULL). </dd>
    <dt><tt> oParents</tt>
   <dd> pointer to gain the list of direct parent entities over the entity (might be NULL). </dd>
    <dt><tt> iRelClassif</tt>
   <dd> Specific Relation Classification used to filter (default PLMReqRelationClassification_Unknown means that all relations are considered). </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>E_FAIL</dt><dd>If both pointers are NULL</dd>
  <dt>S_OK</dt><dd>Otherwise</dd>
  </dl>
</dl>
</dl>
<a name="GetReqParentsEntities"></a><a name="GetReqParentsEntities(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)"></a> <dt> o <b>GetReqParentsEntities</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReqParentsEntities</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oParents</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMReqRelationClassification','PLMReqRelationClassification')</script> <td><tt>iRelClassif</tt><td><tt>= PLMReqRelationClassification_Unknown </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Navigate from a Requirement-related object up the structure it belongs to.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oParents</tt>
   <dd> list of direct parent entities over the entity. </dd>
    <dt><tt> iRelClassif</tt>
   <dd> Specific Relation Classification used to filter (default PLMReqRelationClassification_Unknown means that all relations are considered). </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<a name="GetReqParentsRelations"></a><a name="GetReqParentsRelations(CATLISTV(CATBaseUnknown_var)&amp;,PLMReqRelationClassification)"></a> <dt> o <b>GetReqParentsRelations</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReqParentsRelations</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oParentsRels</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('PLMReqRelationClassification','PLMReqRelationClassification')</script> <td><tt>iRelClassif</tt><td><tt>= PLMReqRelationClassification_Unknown </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Navigate from a Requirement-related object up the structure it belongs to.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oParentsRels</tt>
   <dd> list of direct parent relations over the entity. </dd>
    <dt><tt> iRelClassif</tt>
   <dd> Specific Relation Classification used to filter (default PLMReqRelationClassification_Unknown means that all relations are considered). </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   An HRESULT value.
  <br><strong>Legal Values</strong>:
  <dl>
  <dt>S_OK</dt><dd>Always</dd>
  </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMIReqStructuralEntity.h</b><br>
If needed, your Imakefile.mk should include the module: <b>VPLMRequirementModelerItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

