<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMValidationInterfaces Interface CATIREVReview</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMValidationInterfaces.htm" href="../PLMValidationInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMValidationInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIREVReview"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMValidationInterfaces Interface CATIREVReview</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIREVReview_37618','CATIREVReview','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIREVReview</b>
</p>
<p>
<b><i> Interface to manage a Review.</i></b><br>

   <br><b>Errors not documented on each method</b>:
   <dl>
     <dt>E_OUTOFMEMORY</dt>
     <dd>One memory allocation fails.</dd>
     <dt>E_UNEXPECTED</dt>
     <dd>There is an unexpected failure.</dd>
   </dl></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateSlide(CATIREVSlide*&amp;)"><b>CreateSlide</b></a>(CATIREVSlide*&amp;)
<dd>  Creates a Slide.
 <dt> o 
    <a href="#ImportFile(CATUnicodeString&amp;)"><b>ImportFile</b></a>(CATUnicodeString&amp;)
<dd>  Imports a file.
 <dt> o 
    <a href="#ListSlides(CATListValCATBaseUnknown_var&amp;)"><b>ListSlides</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves the list of Slides which belong to the Review.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateSlide"></a><a name="CreateSlide(CATIREVSlide*&amp;)"></a> <dt> o <b>CreateSlide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateSlide</b>(<td><script type="text/javascript"> activateLink('CATIREVSlide','CATIREVSlide*&amp;')</script> <td><tt>opiSlide</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Slide.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiSlide</tt>
   <dd> [out, CATBaseUnknown#Release]   The created Slide.
   <br><b>Legal values</b>:
   <dl>
     <dt>Valid</dt>
     <dd>The Slide is valid.</dd>
     <dt>NULL</dt>
     <dd>The Slide is not created.</dd>
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    HRESULT
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Slide is succesfully created.</dd>
     <dt>E_FAIL</dt>
     <dd>The Review is not valid.</dd>
   </dl>
   <br><b>Cases Matrix</b>:
   <table border="1">
     <tr><td>this                </td><td>opiSlide</td><td>HRESULT     </td></tr>
     <tr><td>Valid without Slides</td><td>Valid   </td><td>S_OK        </td></tr>
     <tr><td>Valid with Slides   </td><td>Valid   </td><td>S_OK        </td></tr>
     <tr><td>Not Valid           </td><td>NULL    </td><td>E_FAIL      </td></tr>
   </table>
</dl>
</dl>
<a name="ImportFile"></a><a name="ImportFile(CATUnicodeString&amp;)"></a> <dt> o <b>ImportFile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ImportFile</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iuFilePath</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Imports a file.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iuFilePath</tt>
   <dd>   The path of the file to be imported.
   <br><b>Legal values</b>:
   <dl>
     <dt>Valid</dt>
     <dd>The path and the file are valid.</dd>
     <dt>Not Valid</dt>
     <dd>The path or the file are not valid.</dd>
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    HRESULT
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The file is succesfully imported</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The path or the file are not valid.</dd>
     <dt>E_FAIL</dt>
     <dd>The Review is not valid.</dd>
   </dl>
   <br><b>Cases Matrix</b>:
   <table border="1">
     <tr><td>this     </td><td>iuFilePath</td><td>HRESULT     </td></tr>
     <tr><td>Valid    </td><td>Valid     </td><td>S_OK        </td></tr>
     <tr><td>Valid    </td><td>Not Valid </td><td>E_INVALIDARG</td></tr>
     <tr><td>Not Valid</td><td>Valid     </td><td>E_FAIL      </td></tr>
   </table>
</dl>
</dl>
<a name="ListSlides"></a><a name="ListSlides(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>ListSlides</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListSlides</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oSlidesList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of Slides which belong to the Review.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSlidesList</tt>
   <dd>   The list of Slides. Warning this list is cleaned before treatment.
   <br><b>Legal values</b>:
   <dl>
     <dt>Empty</dt>
     <dd>There is no Slides or there is an error.</dd>
     <dt>Filled</dt>
     <dd>There are some Slides (in this case the order is not specified).</dd>
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    HRESULT
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The list is successfully returned.</dd>
     <dt>E_FAIL</dt>
     <dd>The Review is not valid.</dd>
   </dl>
   <br><b>Cases Matrix</b>:
   <table border="1">
     <tr><td>this                </td><td>oSlidesList</td><td>HRESULT     </td></tr>
     <tr><td>Valid without Slides</td><td>Empty      </td><td>S_OK        </td></tr>
     <tr><td>Valid with Slides   </td><td>Filled     </td><td>S_OK        </td></tr>
     <tr><td>Not Valid           </td><td>Empty      </td><td>E_FAIL      </td></tr>
   </table>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIREVReview.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMValidationItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

