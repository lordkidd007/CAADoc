<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PLMValidationInterfaces Interface CATIVALCheck</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../PLMValidationInterfaces.htm" href="../PLMValidationInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "PLMValidationInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIVALCheck"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>PLMValidationInterfaces Interface CATIVALCheck</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIVALCheck_35898','CATIVALCheck','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIVALCheck</b>
</p>
<p>
<b><i> Interface to manage Check.</i></b><br>

   <br><b>Errors not documented on each method</b>:
   <dl>
     <dt>E_OUTOFMEMORY</dt>
     <dd>One memory allocation fails.</dd>
     <dt>E_UNEXPECTED</dt>
     <dd>There is an unexpected failure.</dd>
   </dl></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRequirement(CATBaseUnknown*)"><b>AddRequirement</b></a>(CATBaseUnknown*)
<dd>  Adds a Requirement.
 <dt> o 
    <a href="#ListRequirements(CATListValCATBaseUnknown_var&amp;)"><b>ListRequirements</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves the list of Requirements.
 <dt> o 
    <a href="#LoadRequirements()"><b>LoadRequirements</b></a>()
<dd>  Loads the Requirements.
 <dt> o 
    <a href="#RemoveRequirement(CATBaseUnknown*)"><b>RemoveRequirement</b></a>(CATBaseUnknown*)
<dd>  Removes a Requirement.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRequirement"></a><a name="AddRequirement(CATBaseUnknown*)"></a> <dt> o <b>AddRequirement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddRequirement</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipiRequirement</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a Requirement.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiRequirement</tt>
   <dd>   The Requirement to add.
   <br><b>Legal values</b>:
   <dl>
     <dt>Not exist</dt>
     <dd>The provide linkable can be a Requirement and is not already defined as Requirement.</dd>
     <dt>Exist</dt>
     <dd>The provide linkable can be a Requirement and is already defined as Requirement.</dd>
     <dt>Not valid</dt>
     <dd>The provide linkable cannot be a Requirement.</dd>
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    HRESULT
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The validated is successfully added.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The Requirement is not valid or already exists.</dd>
     <dt>E_FAIL</dt>
     <dd>The Validation is not alive.</dd>
   </dl>
   <br><b>Cases Matrix</b>:
   <table border="1">
     <tr><td>this                      </td><td>ipiRequirement</td><td>HRESULT     </td></tr>
     <tr><td>Alive                     </td><td>Not valid     </td><td>E_INVALIDARG</td></tr>
     <tr><td>Alive                     </td><td>Exist         </td><td>E_INVALIDARG</td></tr>
     <tr><td>Alive without Requirements</td><td>Not exist     </td><td>S_OK        </td></tr>
     <tr><td>Alive with Requirements   </td><td>Not exist     </td><td>S_OK        </td></tr>
     <tr><td>Not Alive                 </td><td>Not exist     </td><td>E_FAIL      </td></tr>
   </table>
</dl>
</dl>
<a name="ListRequirements"></a><a name="ListRequirements(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>ListRequirements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListRequirements</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oRequirementsList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of Requirements.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRequirementsList</tt>
   <dd>   The list of Requirements. Warning this list is cleaned before treatment.
   <br><b>Legal values</b>:
   <dl>
     <dt>Empty</dt>
     <dd>There is no Requirement or there is an error.</dd>
     <dt>Filled</dt>
     <dd>There are some Requirements (in this case the order is not specified).</dd>
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    HRESULT
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The list is successfully returned.</dd>
     <dt>E_FAIL</dt>
     <dd>The Validation is not alive.</dd>
   </dl>
   <br><b>Cases Matrix</b>:
   <table border="1">
     <tr><td>this                      </td><td>oRequirementsList</td><td>HRESULT     </td></tr>
     <tr><td>Alive without Requirements</td><td>Empty            </td><td>S_OK        </td></tr>
     <tr><td>Alive with Requirements   </td><td>Filled           </td><td>S_OK        </td></tr>
     <tr><td>Not Alive                 </td><td>Empty            </td><td>E_FAIL      </td></tr>
   </table>
</dl>
</dl>
<a name="LoadRequirements"></a><a name="LoadRequirements()"></a> <dt> o <b>LoadRequirements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LoadRequirements</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Loads the Requirements.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    HRESULT
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Requirements are successfully loaded.</dd>
     <dt>S_FALSE</dt>
     <dd>The Requirements are already in session.</dd>
     <dt>E_FAIL</dt>
     <dd>The Validation is not alive or there is no defined Requirements.</dd>
   </dl>
   <br><b>Cases Matrix</b>:
   <table border="1">
     <tr><td>this                                      </td><td>HRESULT</td></tr>
     <tr><td>Alive without Requirements                </td><td>E_FAIL </td></tr>
     <tr><td>Alive with removed Requirements           </td><td>E_FAIL </td></tr>
     <tr><td>Alive with Requirements already in session</td><td>S_FALSE</td></tr>
     <tr><td>Alive with Requirements not in session    </td><td>S_OK   </td></tr>
     <tr><td>Not Alive                                 </td><td>E_FAIL </td></tr>
   </table>
</dl>
</dl>
<a name="RemoveRequirement"></a><a name="RemoveRequirement(CATBaseUnknown*)"></a> <dt> o <b>RemoveRequirement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveRequirement</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipiRequirement</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a Requirement.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiRequirement</tt>
   <dd>   The ipiRequirement to remove.
   <br><b>Legal values</b>:
   <dl>
     <dt>Not exist</dt>
     <dd>The provide linkable can be a Requirement and is not already defined as Requirement.</dd>
     <dt>Exist</dt>
     <dd>The provide linkable can be a Requirement and is already defined as Requirement.</dd>
     <dt>Not valid</dt>
     <dd>The provide linkable cannot be a Requirement.</dd>
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    HRESULT
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The validated is successfully removed.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The Requirement is not valid or does not exist.</dd>
     <dt>E_FAIL</dt>
     <dd>The Validation is not alive.</dd>
   </dl>
   <br><b>Cases Matrix</b>:
   <table border="1">
     <tr><td>this                   </td><td>ipiRequirement</td><td>HRESULT     </td></tr>
     <tr><td>Alive                  </td><td>Not valid     </td><td>E_INVALIDARG</td></tr>
     <tr><td>Alive with Requirements</td><td>Not exist     </td><td>E_INVALIDARG</td></tr>
     <tr><td>Alive with Requirements</td><td>Exist         </td><td>S_OK        </td></tr>
     <tr><td>Not Alive              </td><td>Exist         </td><td>E_FAIL      </td></tr>
   </table>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIVALCheck.h</b><br>
If needed, your Imakefile.mk should include the module: <b>PLMValidationItf</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

