<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Class CATAttributeInfos</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATAttributeInfos"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATAttributeInfos</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAttributeInfos_33081','CATAttributeInfos','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAttributeInfos</b>
</p>
<p>
<b><i> Class to be used to define attributes of a Knowledge type.</i></b><br>
<br>
 <b>Role</b>: A Knowledge type is defined as a collection of attributes with names and characteristics. This class is the definition of such an attribute.<br>
 <p>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAttributesDescription','','CATIAttributesDescription') </script>, <script type="text/javascript"> activateLinkAnchor('CATITypeDictionary','CreateType','CATITypeDictionary.CreateType') </script>, <script type="text/javascript"> activateLinkAnchor('CATIType','','CATIType') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeObject','','CATICkeObject') </script>, <script type="text/javascript"> activateLinkAnchor('CATIAttributeComputed','','CATIAttributeComputed') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAttributeInfos(CATAttributeInfos&amp;)"><b>CATAttributeInfos</b></a>(CATAttributeInfos&amp;)
<dd>   Copy constructor.
 <dt> o 
    <a href="#CATAttributeInfos(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,boolean,boolean,boolean,CATUnicodeString&amp;)"><b>CATAttributeInfos</b></a>(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,boolean,boolean,boolean,CATUnicodeString&amp;)
<dd>  Constructor: this constructor is made for standard attributes creation.
 <dt> o 
    <a href="#~CATAttributeInfos()"><b>~CATAttributeInfos</b></a>()
<dd>   Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AccessByRule()"><b>AccessByRule</b></a>()
<dd>  This method returns a standard attribute accessor (to be passed as 7th argument in CATAttributeInfos constructor).
 <dt> o 
    <a href="#GetAttributeAccess()"><b>GetAttributeAccess</b></a>()
<dd>  Do Not Use this method.
 <dt> o 
    <a href="#GetAuthorizedValues(CATListOfDouble&amp;)"><b>GetAuthorizedValues</b></a>(CATListOfDouble&amp;)
<dd>  Returns the authorized values if any.
 <dt> o 
    <a href="#GetAuthorizedValues(CATListOfCATUnicodeString&amp;)"><b>GetAuthorizedValues</b></a>(CATListOfCATUnicodeString&amp;)
<dd>  Returns the authorized values if any.
 <dt> o 
    <a href="#GetCurrentUnitForManipulation(CATIType_var&amp;,CATAttributeInfos&amp;,CATICkeUnit_var&amp;,CATBaseUnknown_var&amp;)"><b>GetCurrentUnitForManipulation</b></a>(CATIType_var&amp;,CATAttributeInfos&amp;,CATICkeUnit_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Returns the current unit to use to manipulate the attribute in the user interface.
 <dt> o 
    <a href="#GetDefaultValue(CATICkeParm_var&amp;)"><b>GetDefaultValue</b></a>(CATICkeParm_var&amp;)
<dd>  Returns the default value if any.
 <dt> o 
    <a href="#GetHelpValues(CATListOfDouble&amp;)"><b>GetHelpValues</b></a>(CATListOfDouble&amp;)
<dd>  Returns the help values if any.
 <dt> o 
    <a href="#GetHelpValues(CATListOfCATUnicodeString&amp;)"><b>GetHelpValues</b></a>(CATListOfCATUnicodeString&amp;)
<dd>  Returns the help values if any.
 <dt> o 
    <a href="#GetMaxLength()"><b>GetMaxLength</b></a>()
<dd>  Returns the maximum length for a string attribute.
 <dt> o 
    <a href="#GetNLSName(CATIType_var&amp;,CATAttributeInfos&amp;,CATUnicodeString&amp;)"><b>GetNLSName</b></a>(CATIType_var&amp;,CATAttributeInfos&amp;,CATUnicodeString&amp;)
<dd>  Returns the NLS Name of an attribute in the context of a type.
 <dt> o 
    <a href="#IsComponent()"><b>IsComponent</b></a>()
<dd>  Returns the aggregability of the attribute.
 <dt> o 
    <a href="#IsComputed()"><b>IsComputed</b></a>()
<dd>  Indicates if the attribute is computed with an attribute access.
 <dt> o 
    <a href="#IsControlledByModeler()"><b>IsControlledByModeler</b></a>()
<dd>  Indicates if the attribute is controlled by the modeler or not.
 <dt> o 
    <a href="#IsDynamic()"><b>IsDynamic</b></a>()
<dd>  Returns the dynamicity of the attribute.
 <dt> o 
    <a href="#IsFaceted()"><b>IsFaceted</b></a>()
<dd>  Indicates if the attribute is faceted or not (used by index/search.
 <dt> o 
    <a href="#IsMandatory()"><b>IsMandatory</b></a>()
<dd>  Indicates if the attribute is mandatory.
 <dt> o 
    <a href="#IsMultiValuated()"><b>IsMultiValuated</b></a>()
<dd>   Indicates if this attribute is a multi valuated (in other word a list).
 <dt> o 
    <a href="#IsSimple()"><b>IsSimple</b></a>()
<dd>  Indicates if the attribute is a simple one (a value) or if it is a reference to an object, or list of object.
 <dt> o 
    <a href="#IsVisible()"><b>IsVisible</b></a>()
<dd>  Returns the visibility of the attribute.
 <dt> o 
    <a href="#IsWritable()"><b>IsWritable</b></a>()
<dd>  Returns the writability of the attribute.
 <dt> o 
    <a href="#Name()"><b>Name</b></a>()
<dd>  Returns the internal name of the attribute.
 <dt> o 
    <a href="#ReadDynamicProperty(CATUnicodeString&amp;,CATIValue_var&amp;)"><b>ReadDynamicProperty</b></a>(CATUnicodeString&amp;,CATIValue_var&amp;)
<dd>  Enable to retrieve a dynamic properties on an attribute.
 <dt> o 
    <a href="#RequireTranslationForValues(CATIType_var&amp;,CATAttributeInfos&amp;,CATBoolean&amp;,CATListOfCATUnicodeString*)"><b>RequireTranslationForValues</b></a>(CATIType_var&amp;,CATAttributeInfos&amp;,CATBoolean&amp;,CATListOfCATUnicodeString*)
<dd>  Indicates if the attribute values need to be translated.
 <dt> o 
    <a href="#SetDynamic()"><b>SetDynamic</b></a>()
<dd>  Indicates if the attribute is dynamically added on an object.
 <dt> o 
    <a href="#TranslateValues(CATIType_var&amp;,CATAttributeInfos&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"><b>TranslateValues</b></a>(CATIType_var&amp;,CATAttributeInfos&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)
<dd>  Translates the value of an attribute in the context of a type.
 <dt> o 
    <a href="#Type()"><b>Type</b></a>()
<dd>  Returns the type the attribute belongs to.
 <dt> o 
    <a href="#TypeForValues()"><b>TypeForValues</b></a>()
<dd>  Returns the type of values in case of multi valuated.
 <dt> o 
    <a href="#operator!=(CATAttributeInfos&amp;)"><b>operator!=</b></a>(CATAttributeInfos&amp;)
<dd>    Operator to compare difference.
 <dt> o 
    <a href="#operator=(CATAttributeInfos&amp;)"><b>operator=</b></a>(CATAttributeInfos&amp;)
<dd>    Operator to affect a value.
 <dt> o 
    <a href="#operator==(CATAttributeInfos&amp;)"><b>operator==</b></a>(CATAttributeInfos&amp;)
<dd>   Operator to compare equality.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAttributeInfos"></a><a name="CATAttributeInfos(CATAttributeInfos&amp;)"></a> <dt> o <b>CATAttributeInfos</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAttributeInfos</b>(<td> const <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos&amp;')</script> <td><tt>iInfos</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Copy constructor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInfos</tt>
   <dd> attribute to be copied.</dd>
</dl>
</dl>
</dl>
<a name="CATAttributeInfos"></a><a name="CATAttributeInfos(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,boolean,boolean,boolean,CATUnicodeString&amp;)"></a> <dt> o <b>CATAttributeInfos</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAttributeInfos</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iNLSName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>isWriteable</tt><td><tt>= 1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>isComponent</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>isVisible</tt><td><tt>= 1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeAccess</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor: this constructor is made for standard attributes creation. It is available for applications that are defining their types.
 For PLM attributes, see at the end of this header file.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>            Type the attribute is added to. </dd>
    <dt><tt> iName</tt>
   <dd>            Internal name of the attribute. </dd>
    <dt><tt> iNLSName</tt>
   <dd>         NLS (user) name of the attribute. </dd>
    <dt><tt> isWriteable</tt>
   <dd>      TRUE if the attribute can be modified, else FALSE. Default is TRUE. </dd>
    <dt><tt> isComponent</tt>
   <dd>      TRUE if the attribute contains a component. If TRUE,                         the component's owner should be the owner of the attribute, and its
                         name the attribute name. Default is FALSE.
 </dd>
    <dt><tt> isVisible</tt>
   <dd>        TRUE if the attribute is visible by the user, else FALSE. Default is TRUE. </dd>
    <dt><tt> iAttributeAccess</tt>
   <dd> Only Use the Default Value = "".<br>						  (Name of the CATIAttributeComputed implementation class used to
                         delegate the valuation of this particular attribute)
 Note finally, that by default, an attribute is not mandatory</dd>
</dl>
</dl>
</dl>
<a name="~CATAttributeInfos"></a><a name="~CATAttributeInfos()"></a> <dt> o <b>~CATAttributeInfos</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATAttributeInfos</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="AccessByRule"></a><a name="AccessByRule()"></a> <dt> o <b>AccessByRule</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>AccessByRule</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 This method returns a standard attribute accessor (to be passed as 7th argument in CATAttributeInfos constructor).
 that enables to read and/or write attributes by Knowledge rules. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The standard attribute accessor.
</dl>
</dl>
<a name="GetAttributeAccess"></a><a name="GetAttributeAccess()"></a> <dt> o <b>GetAttributeAccess</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUnicodeString','const CATUnicodeString&')</script>  <b>GetAttributeAccess</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Do Not Use this method.
 Returns the name of the CATIAttributeComputed implementation.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a string.
</dl>
</dl>
<a name="GetAuthorizedValues"></a><a name="GetAuthorizedValues(CATListOfDouble&amp;)"></a> <dt> o <b>GetAuthorizedValues</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAuthorizedValues</b>(<td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble&amp;')</script> <td><tt>oListValueAsDouble</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the authorized values if any.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListValueAsDouble</tt>
   <dd> The list if filled with values as double.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the attribute is not of type real/integer/dimension
 	 <li> S_OK	if authorized values have been filled. 	
   <li> S_FALSE	if no authorized values defined. List is emptied. 
  </ol>
</dl>
</dl>
<a name="GetAuthorizedValues"></a><a name="GetAuthorizedValues(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetAuthorizedValues</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAuthorizedValues</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oListValueAsString</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the authorized values if any.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListValueAsString</tt>
   <dd> The list is filled with values as strings.
 </dd>
    <dt><tt> opListValueAsStringNLS</tt>
   <dd> The list if filled with values as strings translated if necessary. If NULL, then it is not used
  <ol>
 	 <li> S_OK	if authorized values have been filled. 	
   <li> S_FALSE	if no authorized values defined. List is emptied. 
  </ol></dd>
</dl>
</dl>
</dl>
<a name="GetCurrentUnitForManipulation"></a><a name="GetCurrentUnitForManipulation(CATIType_var&amp;,CATAttributeInfos&amp;,CATICkeUnit_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetCurrentUnitForManipulation</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCurrentUnitForManipulation</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos&amp;')</script> <td><tt>iAttribute</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeUnit_var','CATICkeUnit_var&amp;')</script> <td><tt>oUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iScaleContext</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the current unit to use to manipulate the attribute in the user interface.<br>
 Depends on the Tools Options Settings by default.<br>
 If the unit to use has been precised in PLM Dictionary, it will be this one chosen.<br>
 If the unit to use for this attribute is overriden in settings, it is the one that will be chosen.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type that contains the attribute 
 </dd>
    <dt><tt> iAttribute</tt>
   <dd> The attribute	
 </dd>
    <dt><tt> oUnit</tt>
   <dd> The unit to manipulate it
 </dd>
    <dt><tt> iScaleContext</tt>
   <dd> the PLM Component owning the attribute. It allows to retrieve its scales which may change the unit to use
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>	 
 	 <li> E_INVALIDARG if the attribute is not an attribute with a magnitude, ot input are NULL
 	 <li> S_OK	if unit retrieved and was precised in the dictionary (different from the setting)
 	 <li> S_FALSE	if unit retrieved but was not precised in the dictionary (we return the unit of the setting)
  </ol>
</dl>
</dl>
<a name="GetDefaultValue"></a><a name="GetDefaultValue(CATICkeParm_var&amp;)"></a> <dt> o <b>GetDefaultValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDefaultValue</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oDefaultValue</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the default value if any.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDefaultValue</tt>
   <dd> Default value in output if any, NULL_var by default.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> S_OK	if default value has been defined. 	
   <li> S_FALSE	if no default value was defined.  
  </ol>
</dl>
</dl>
<a name="GetHelpValues"></a><a name="GetHelpValues(CATListOfDouble&amp;)"></a> <dt> o <b>GetHelpValues</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHelpValues</b>(<td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble&amp;')</script> <td><tt>oListValueAsDouble</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the help values if any.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListValueAsDouble</tt>
   <dd> The list if filled with values as double.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the attribute is not of type real/integer/dimension
 	 <li> S_OK	if help values have been filled. 	
   <li> S_FALSE	if no help values defined. List is emptied. 
  </ol>
</dl>
</dl>
<a name="GetHelpValues"></a><a name="GetHelpValues(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetHelpValues</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHelpValues</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oListValueAsString</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the help values if any.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListValueAsString</tt>
   <dd> The list if filled with values as strings.
 </dd>
    <dt><tt> opListValueAsStringNLS</tt>
   <dd> The list if filled with values as strings translated if necessary. If NULL, then it is not used
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> S_OK	if help values have been filled. 	
   <li> S_FALSE	if no help values defined. List is emptied.  
  </ol>
</dl>
</dl>
<a name="GetMaxLength"></a><a name="GetMaxLength()"></a> <dt> o <b>GetMaxLength</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetMaxLength</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the maximum length for a string attribute.<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  0 by default
</dl>
</dl>
<a name="GetNLSName"></a><a name="GetNLSName(CATIType_var&amp;,CATAttributeInfos&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetNLSName</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNLSName</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos&amp;')</script> <td><tt>iAttribute</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oNLSName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the NLS Name of an attribute in the context of a type. A same attribute can have 2 NLS names for two types of the same hierarchy.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type that contains the attribute 
 </dd>
    <dt><tt> iAttribute</tt>
   <dd> The attribute	
 </dd>
    <dt><tt> oNLSName</tt>
   <dd> The NLS Name in output
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>	 
 	 <li> E_INVALIDARG if the attribute is not part of this type
 	 <li> E_FAIL if the NLS name has not been found
 	 <li> S_OK	if NLS name has been retrieved
  </ol>
</dl>
</dl>
<a name="IsComponent"></a><a name="IsComponent()"></a> <dt> o <b>IsComponent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsComponent</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the aggregability of the attribute.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if it an aggregation, else FALSE.
</dl>
</dl>
<a name="IsComputed"></a><a name="IsComputed()"></a> <dt> o <b>IsComputed</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsComputed</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the attribute is computed with an attribute access.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if writable, else FALSE.
</dl>
</dl>
<a name="IsControlledByModeler"></a><a name="IsControlledByModeler()"></a> <dt> o <b>IsControlledByModeler</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsControlledByModeler</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the attribute is controlled by the modeler or not.
</dl>
<a name="IsDynamic"></a><a name="IsDynamic()"></a> <dt> o <b>IsDynamic</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsDynamic</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the dynamicity of the attribute. Default value is FALSE.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if it is a dynamic attribute, FALSE instead
</dl>
</dl>
<a name="IsFaceted"></a><a name="IsFaceted()"></a> <dt> o <b>IsFaceted</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsFaceted</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the attribute is faceted or not (used by index/search.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if Faceted, else FALSE.
</dl>
</dl>
<a name="IsMandatory"></a><a name="IsMandatory()"></a> <dt> o <b>IsMandatory</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsMandatory</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the attribute is mandatory. It means that this attribute must always be filled on the object. 

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if it is mandatory, else FALSE.
</dl>
</dl>
<a name="IsMultiValuated"></a><a name="IsMultiValuated()"></a> <dt> o <b>IsMultiValuated</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsMultiValuated</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Indicates if this attribute is a multi valuated (in other word a list).<br>
 Note that in this case, the type returned by the Type method is the type List.<br>
 If you want to access the type of the elements of the list (if any), you'll have to use the 

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if multi valuated, else FALSE.
</dl>
</dl>
<a name="IsSimple"></a><a name="IsSimple()"></a> <dt> o <b>IsSimple</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsSimple</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the attribute is a simple one (a value) or if it is a reference to an object, or list of object.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if simple, else FALSE.
</dl>
</dl>
<a name="IsVisible"></a><a name="IsVisible()"></a> <dt> o <b>IsVisible</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsVisible</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the visibility of the attribute.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if visible, else FALSE.
</dl>
</dl>
<a name="IsWritable"></a><a name="IsWritable()"></a> <dt> o <b>IsWritable</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>IsWritable</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the writability of the attribute.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if writable, else FALSE.
</dl>
</dl>
<a name="Name"></a><a name="Name()"></a> <dt> o <b>Name</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>Name</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the internal name of the attribute.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a string.
</dl>
</dl>
<a name="ReadDynamicProperty"></a><a name="ReadDynamicProperty(CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>ReadDynamicProperty</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReadDynamicProperty</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iDynamicPropertyName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Enable to retrieve a dynamic properties on an attribute.<br>
 A dynamic property is an information declared by an application in the metadata , that is not interpreted by generic toolkits & dictionary but that can be retrieved by applications on their types.
 Usage: All contexts (UI Layer (search, new), Modeler,..).<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDynamicPropertyName</tt>
   <dd> name of the dynamic property
 </dd>
    <dt><tt> oValue</tt>
   <dd> value read. Can be NULL if property not found
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> S_OK	if the property has been read
 	 <li> S_FALSE	if the property has not been found
 	 <li> E_FAIL	otherwise
  </ol>
</dl>
</dl>
<a name="RequireTranslationForValues"></a><a name="RequireTranslationForValues(CATIType_var&amp;,CATAttributeInfos&amp;,CATBoolean&amp;,CATListOfCATUnicodeString*)"></a> <dt> o <b>RequireTranslationForValues</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RequireTranslationForValues</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos&amp;')</script> <td><tt>iAttribute</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oRequiresTranslation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>pListOValue</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the attribute values need to be translated.<br>
 Must be called before calling TranslateValue for performance considerations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type that contains the attribute 
 </dd>
    <dt><tt> iAttribute</tt>
   <dd> The attribute	
 </dd>
    <dt><tt> oRequiresTranslation</tt>
   <dd> TRUE if the attribute values require translation
 </dd>
    <dt><tt> pListOValue</tt>
   <dd> If not NULL, will be filled with the list of values to be translated
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>	 
 	 <li> E_INVALIDARG if the attribute is not part of this type
 	 <li> S_OK	instead
  </ol>
</dl>
</dl>
<a name="SetDynamic"></a><a name="SetDynamic()"></a> <dt> o <b>SetDynamic</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetDynamic</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the attribute is dynamically added on an object.
</dl>
<a name="TranslateValues"></a><a name="TranslateValues(CATIType_var&amp;,CATAttributeInfos&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>TranslateValues</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>TranslateValues</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos&amp;')</script> <td><tt>iAttribute</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iListOfValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oListOfNLSValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Translates the value of an attribute in the context of a type.<br>
 You may call RequireTranslationForValues before to optimize performance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The type that contains the attribute 
 </dd>
    <dt><tt> iAttribute</tt>
   <dd> The attribute
 </dd>
    <dt><tt> iListOfValue</tt>
   <dd> The values to be translated (for performance consideration, a list is provided)
 </dd>
    <dt><tt> oListOfNLSValue</tt>
   <dd> The Values translated
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>	 
 	 <li> E_INVALIDARG if the attribute is not part of this type
 	 <li> S_FALSE if the value had no translation
 	 <li> S_OK	if NLS name has been retrieved
  </ol>
</dl>
</dl>
<a name="Type"></a><a name="Type()"></a> <dt> o <b>Type</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIType','CATIType_var')</script>  <b>Type</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the type the attribute belongs to.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a type.
</dl>
</dl>
<a name="TypeForValues"></a><a name="TypeForValues()"></a> <dt> o <b>TypeForValues</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIType','CATIType_var')</script>  <b>TypeForValues</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of values in case of multi valuated.<br>
 Returns also the type of value in case of mono valuated.<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a type. Returns NULL_var if type is not precised...
</dl>
</dl>
<a name="operator!="></a><a name="operator!=(CATAttributeInfos&amp;)"></a> <dt> o <b>operator!=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>operator!=</b>(<td> const <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos&amp;')</script> <td><tt>iInfos</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
   Operator to compare difference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInfos</tt>
   <dd> Attribute to be compared with. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Result of the comparison.
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATAttributeInfos&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos &')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos&amp;')</script> <td><tt>iInfos</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Operator to affect a value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInfos</tt>
   <dd> Value to valuate with. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Handler on the attribute itself
</dl>
</dl>
<a name="operator=="></a><a name="operator==(CATAttributeInfos&amp;)"></a> <dt> o <b>operator==</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>operator==</b>(<td> const <script type="text/javascript"> activateLink('CATAttributeInfos','CATAttributeInfos&amp;')</script> <td><tt>iInfos</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Operator to compare equality.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInfos</tt>
   <dd> Attribute to be compared with. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Result of the comparison.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAttributeInfos.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

