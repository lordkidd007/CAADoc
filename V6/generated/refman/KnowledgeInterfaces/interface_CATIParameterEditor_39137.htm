<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIParameterEditor</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIParameterEditor"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATIParameterEditor</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIParameterEditor_39137','CATIParameterEditor','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIParameterEditor</b>
</p>
<p>
<b><i> Interface to the standard parameter editor.</i></b><br>
 
 <b>Role</b>: It allows the user to manipulate a parameter editor.<br>
 To create a standard parameter editor instance, use the <script type="text/javascript"> activateLinkAnchor('CATIParameterEditorFactory','','CATIParameterEditorFactory') </script> This editor is dedicated for two kind of parameters: literal and volatile value.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIParameterEditorFactory','','CATIParameterEditorFactory') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetEditedParameter()"><b>GetEditedParameter</b></a>()
<dd>  Returns the edited parameter.
 <dt> o 
    <a href="#GetFrame()"><b>GetFrame</b></a>()
<dd>  Use this method to retrieve the parameter editor frame.
 <dt> o 
    <a href="#SetEditedParameter(CATICkeParm*)"><b>SetEditedParameter</b></a>(CATICkeParm*)
<dd>  Sets the parameter to be edited.
 <dt> o 
    <a href="#SetEditorStyle(CATParameterEditorStyle&amp;)"><b>SetEditorStyle</b></a>(CATParameterEditorStyle&amp;)
<dd>  Sets a style to the parameter editor frame (available only on R16 and upper level).
 <dt> o 
    <a href="#SetUnitToUse(CATICkeUnit_var&amp;)"><b>SetUnitToUse</b></a>(CATICkeUnit_var&amp;)
<dd>  <dt> o 
    <a href="#SetVisibleTextWidth(int)"><b>SetVisibleTextWidth</b></a>(int)
<dd>  Sets the editor wisible text width of the editor.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetEditedParameter"></a><a name="GetEditedParameter()"></a> <dt> o <b>GetEditedParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm *')</script>  <b>GetEditedParameter</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the edited parameter. It can be NULL. If it is not NULL, AddRef is called on the returned pointer.
</dl>
<a name="GetFrame"></a><a name="GetFrame()"></a> <dt> o <b>GetFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDlgFrame','CATDlgFrame *')</script>  <b>GetFrame</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Use this method to retrieve the parameter editor frame. 
 This frame can be used, for example to manage the dialog layout.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The frame that contains the parameter editor.
</dl>
</dl>
<a name="SetEditedParameter"></a><a name="SetEditedParameter(CATICkeParm*)"></a> <dt> o <b>SetEditedParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetEditedParameter</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm*')</script> <td><tt>iParameter</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the parameter to be edited.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameter</tt>
   <dd> The parameter to be edited. If this argument is NULL, the editor is emptied and cannot be used</dd>
</dl>
</dl>
</dl>
<a name="SetEditorStyle"></a><a name="SetEditorStyle(CATParameterEditorStyle&amp;)"></a> <dt> o <b>SetEditorStyle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetEditorStyle</b>(<td> const <script type="text/javascript"> activateLink('CATParameterEditorStyle','CATParameterEditorStyle&amp;')</script> <td><tt>iStyle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a style to the parameter editor frame (available only on R16 and upper level).
 The style allows to customize the editor display and the contextual menu.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStyle</tt>
   <dd> The style of the parameter editor.
 for example : WithoutLabel | NoCtxAddTolerance | RelationButtonDisabled</dd>
</dl>
</dl>
</dl>
<a name="SetUnitToUse"></a><a name="SetUnitToUse(CATICkeUnit_var&amp;)"></a> <dt> o <b>SetUnitToUse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetUnitToUse</b>(<td> const <script type="text/javascript"> activateLink('CATICkeUnit_var','CATICkeUnit_var&amp;')</script> <td><tt>ispUserDefinedUnitToDisplay</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="SetVisibleTextWidth"></a><a name="SetVisibleTextWidth(int)"></a> <dt> o <b>SetVisibleTextWidth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetVisibleTextWidth</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iWidth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the editor wisible text width of the editor.
 This method has no effect if the parameter editor's frame has been attached using its right hand side and if its grid column is resizable.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWidth</tt>
   <dd> The width of the text editor expressed in number of characters.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIParameterEditor.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

