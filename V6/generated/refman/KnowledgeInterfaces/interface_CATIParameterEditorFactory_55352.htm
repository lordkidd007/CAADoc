<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIParameterEditorFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIParameterEditorFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATIParameterEditorFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIParameterEditorFactory_55352','CATIParameterEditorFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIParameterEditorFactory</b>
</p>
<p>
<b><i> Interface giving access to a factory for standard parameters editors.</i></b><br>

 <b>Role</b>: It is implemented as an extension of CATApplicationFrame and CATInteractiveApplication object (you can use either one of them depending on the context)
 and is used to obtain a parameter editor.
 It concerns only the following parameters: literal and volatile value.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIParameterEditor','','CATIParameterEditor') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateParameterEditor(CATDialog*,CATString&amp;,CATBoolean,CATIParameterEditor*&amp;)"><b>CreateParameterEditor</b></a>(CATDialog*,CATString&amp;,CATBoolean,CATIParameterEditor*&amp;)
<dd>  Creates a standard parameter edition frame in a dialog.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateParameterEditor"></a><a name="CreateParameterEditor(CATDialog*,CATString&amp;,CATBoolean,CATIParameterEditor*&amp;)"></a> <dt> o <b>CreateParameterEditor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateParameterEditor</b>(<td> const <script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iParent</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iWithContextualMenu</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIParameterEditor','CATIParameterEditor*&amp;')</script> <td><tt>oParameterEditor</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a standard parameter edition frame in a dialog.<br>
 The caller has to manage grids layouts in the dialog by retrieving the underlying frame
 on CATIParameterEditor interface and to call the SetEditedParameter method of CATIParameterEditor 
 to pass the edited parameter
 <dl>
 <dt><b>Example:</b>
 <pre>
 CATApplicationFrame *pApplicationFrame = CATApplicationFrame::GetFrame();
 CATIParameterEditorFactory *poEditorFactory = NULL;
 HRESULT hr = pApplicationFrame->QueryInterface(CATIParameterEditorFactory::ClassId(), (void**) &poEditorFactory);
 if (SUCCEEDED(hr))
 {
  	 CATIParameterEditor *poParmEditor = NULL;
  	 hr = poEditorFactory->CreateParameterEditor(iParent, iName, 1, poParmEditor);
  	 if (SUCCEEDED(hr))
  	 {
  	 	 poParmEditor->SetParameter(iParameter);
  	 	 CATDlgFrame *pFrame = poParmEditor->GetFrame();
  	 	 pFrame->SetGridConstraints(...
  	 	 ...
  	 	 poParmEditor->Release();
 	 }
  	 poEditorFactory->Release();
 }
 </pre>
 </dl>
       
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd> The parent dialog. Must not be NULL
 </dd>
    <dt><tt> iName</tt>
   <dd> The name of the frame built by this method
 </dd>
    <dt><tt> iWithContextualMenu</tt>
   <dd> A flag to indicate wether a contextual menu is to be added
 </dd>
    <dt><tt> oParameterEditor</tt>
   <dd> A pointer to the CATIParameterEditor interface on the created parameter editor
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if iParent is NULL or if iName is empty, and S_OK otherwise
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIParameterEditorFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

