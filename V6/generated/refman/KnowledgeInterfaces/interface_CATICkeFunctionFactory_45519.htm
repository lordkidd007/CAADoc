<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeFunctionFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeFunctionFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeFunctionFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeFunctionFactory_45519','CATICkeFunctionFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeFunctionFactory</b>
</p>
<p>
<b><i>    Interface to create Knowledge functions.</i></b><br>

 Gathers also some basic services about literals and relations.
 <p>
 <b>Role</b>: This class provides a way to create your own Knowledge functions that can later be used in Knowledge expressions or Knowledge relations, and add them 
 to the dictionary.<br>
 This interface is mono implemented.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATITypeDictionary','','CATITypeDictionary') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddConstant(CATICkeParm_var&amp;)"><b>AddConstant</b></a>(CATICkeParm_var&amp;)
<dd>   Adds a constant (true, false).
 <dt> o 
    <a href="#CreateArg(CATUnicodeString&amp;,CATICkeType_var&amp;,CATICkeArg::Mode)"><b>CreateArg</b></a>(CATUnicodeString&amp;,CATICkeType_var&amp;,CATICkeArg::Mode)
<dd>  Creates an argument that will be added later to a signature.
 <dt> o 
    <a href="#CreateArg(CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)"><b>CreateArg</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)
<dd>  Creates an argument that will be added later to a signature.
 <dt> o 
    <a href="#CreateArgWithInfo(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)"><b>CreateArgWithInfo</b></a>(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)
<dd>  <dt> o 
    <a href="#CreateArgWithInfo(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)"><b>CreateArgWithInfo</b></a>(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)
<dd>  <dt> o 
    <a href="#CreateArgWithInfo(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATICkeArg::Mode)"><b>CreateArgWithInfo</b></a>(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATICkeArg::Mode)
<dd>  <dt> o 
    <a href="#CreateConstantFromEnumeratedType(CATIEnumere_var&amp;)"><b>CreateConstantFromEnumeratedType</b></a>(CATIEnumere_var&amp;)
<dd>   Creates constant relative to an Enumere type.
 <dt> o 
    <a href="#CreateEvaluationContext(CATBaseUnknown_var&amp;,int,int,CATCkeEvalContext::SourceKind)"><b>CreateEvaluationContext</b></a>(CATBaseUnknown_var&amp;,int,int,CATCkeEvalContext::SourceKind)
<dd>  Creates an evaluator context that can be given to the Knowledge function as input.
 <dt> o 
    <a href="#CreateEvent(CATUnicodeString&amp;)"><b>CreateEvent</b></a>(CATUnicodeString&amp;)
<dd>  Creates an event signature and add it to the dictionary.
 <dt> o 
    <a href="#CreateFunction(CATUnicodeString&amp;,CATICkeType_var&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)"><b>CreateFunction</b></a>(CATUnicodeString&amp;,CATICkeType_var&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)
<dd>  Creates a Knowledge function and adds it to the dictionary.
 <dt> o 
    <a href="#CreateFunction(CATUnicodeString&amp;,CATUnicodeString&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)"><b>CreateFunction</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)
<dd>  Creates a Knowledge function and add it to the dictionary.
 <dt> o 
    <a href="#GetStandardMagnitudeChecker()"><b>GetStandardMagnitudeChecker</b></a>()
<dd>  Returns the standard magnitude checker.
 <dt> o 
    <a href="#Methods()"><b>Methods</b></a>()
<dd>   Initializes the list of Knowledge functions and sort it.
 <dt> o 
    <a href="#ParseAndEval(CATUnicodeString&amp;,CATICkeMagnitude_var&amp;,CATCkeScale)"><b>ParseAndEval</b></a>(CATUnicodeString&amp;,CATICkeMagnitude_var&amp;,CATCkeScale)
<dd>   Evaluates a formula whithout parameters.
 <dt> o 
    <a href="#SendAttributeValuationError(CATKWEErrorSeverity::Severity,CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int)"><b>SendAttributeValuationError</b></a>(CATKWEErrorSeverity::Severity,CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int)
<dd>  Send attribute truncation error.
 <dt> o 
    <a href="#SendError(CATUnicodeString&amp;,CATKWEErrorSeverity::Severity,CATBaseUnknown_var&amp;,CATKWEEvaluationErrors::Code)"><b>SendError</b></a>(CATUnicodeString&amp;,CATKWEErrorSeverity::Severity,CATBaseUnknown_var&amp;,CATKWEEvaluationErrors::Code)
<dd>  Send Error.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddConstant"></a><a name="AddConstant(CATICkeParm_var&amp;)"></a> <dt> o <b>AddConstant</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddConstant</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParameter</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Adds a constant (true, false).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameter</tt>
   <dd> parameter to add to list of Constant.</dd>
</dl>
</dl>
</dl>
<a name="CreateArg"></a><a name="CreateArg(CATUnicodeString&amp;,CATICkeType_var&amp;,CATICkeArg::Mode)"></a> <dt> o <b>CreateArg</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script>  <b>CreateArg</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iArgType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeArg::Mode','CATICkeArg::Mode')</script> <td><tt>iMode</tt><td><tt>= CATICkeArg::In</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an argument that will be added later to a signature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgName</tt>
   <dd> argument name (example : "x")  </dd>
    <dt><tt> iArgType</tt>
   <dd> argument type (example : CATParmDictionary::RealType in our example) </dd>
    <dt><tt> iMode</tt>
   <dd> indicates if the argument is In, Out or InOut </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Argument created 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeSignature','AddArgument','CATICkeSignature.AddArgument') </script>
</dl>
</dl>
<a name="CreateArg"></a><a name="CreateArg(CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)"></a> <dt> o <b>CreateArg</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script>  <b>CreateArg</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeArg::Mode','CATICkeArg::Mode')</script> <td><tt>iArgMode</tt><td><tt>= CATICkeArg::In</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an argument that will be added later to a signature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgName</tt>
   <dd> argument name (example : "x")  </dd>
    <dt><tt> iArgType</tt>
   <dd> argument type (example : "Real" in our example) </dd>
    <dt><tt> iArgMode:</tt>
   <dd> indicates if the argument is In, Out or InOut </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Argument created 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeSignature','AddArgument','CATICkeSignature.AddArgument') </script>
</dl>
</dl>
<a name="CreateArgWithInfo"></a><a name="CreateArgWithInfo(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)"></a> <dt> o <b>CreateArgWithInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script>  <b>CreateArgWithInfo</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iArgType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>tai</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeArg::Mode','CATICkeArg::Mode')</script> <td><tt>iMode</tt><td><tt>= CATICkeArg::In</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="CreateArgWithInfo"></a><a name="CreateArgWithInfo(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)"></a> <dt> o <b>CreateArgWithInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script>  <b>CreateArgWithInfo</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iArgType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>tai</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>intellisenseArgs</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeArg::Mode','CATICkeArg::Mode')</script> <td><tt>iMode</tt><td><tt>= CATICkeArg::In</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="CreateArgWithInfo"></a><a name="CreateArgWithInfo(CATUnicodeString&amp;,CATICkeType_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATICkeArg::Mode)"></a> <dt> o <b>CreateArgWithInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script>  <b>CreateArgWithInfo</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iArgType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>tai</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>intellisenseArgs</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeArg::Mode','CATICkeArg::Mode')</script> <td><tt>iMode</tt><td><tt>= CATICkeArg::In</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="CreateConstantFromEnumeratedType"></a><a name="CreateConstantFromEnumeratedType(CATIEnumere_var&amp;)"></a> <dt> o <b>CreateConstantFromEnumeratedType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateConstantFromEnumeratedType</b>(<td> const <script type="text/javascript"> activateLink('CATIEnumere_var','CATIEnumere_var&amp;')</script> <td><tt>iEnumere</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Creates constant relative to an Enumere type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEnumere</tt>
   <dd> type of the enumere  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the input is NULL.
 	 <li> E_FAIL if the creation failed (most of the case because there already exist a constant with the same name.
 	 <li> S_OK	if the constants have been created successfully.
  </ol>
</dl>
</dl>
<a name="CreateEvaluationContext"></a><a name="CreateEvaluationContext(CATBaseUnknown_var&amp;,int,int,CATCkeEvalContext::SourceKind)"></a> <dt> o <b>CreateEvaluationContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCkeEvalContext','CATCkeEvalContext *')</script>  <b>CreateEvaluationContext</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAdditionalConstraints</tt><td><tt>=0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iBRContext</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCkeEvalContext::SourceKind','CATCkeEvalContext::SourceKind')</script> <td><tt>iSourceKind</tt><td><tt>= CATCkeEvalContext::Undefined</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Creates an evaluator context that can be given to the Knowledge function as input.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> relation that controls the evaluation. </dd>
    <dt><tt> iAdditionalConstraints</tt>
   <dd> always keep default value. </dd>
    <dt><tt> iBRContext</tt>
   <dd> always keep default value. </dd>
    <dt><tt> iSourceKind</tt>
   <dd> indicates what is the source of the evaluation context. From which object it is triggered. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the evaluation context created (it must be deallocated).
</dl>
</dl>
<a name="CreateEvent"></a><a name="CreateEvent(CATUnicodeString&amp;)"></a> <dt> o <b>CreateEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature','CATICkeSignature_var')</script>  <b>CreateEvent</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFunctionName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an event signature and add it to the dictionary.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFunctionName</tt>
   <dd> :  function name (example : "Instanciation") </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Event created
</dl>
</dl>
<a name="CreateFunction"></a><a name="CreateFunction(CATUnicodeString&amp;,CATICkeType_var&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)"></a> <dt> o <b>CreateFunction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature','CATICkeSignature_var')</script>  <b>CreateFunction</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFunctionName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iReturnedType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeFunctionEvaluator','CATCkeFunctionEvaluator')</script> <td><tt>iEvalFuncPtr</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeCheckMagnitude','CATCkeCheckMagnitude')</script> <td><tt>iCheckMagnitudeFuncPtr</tt><td><tt>= NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeSignature::Mode','CATICkeSignature::Mode')</script> <td><tt>iNotation</tt><td><tt>= CATICkeSignature::Function</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Knowledge function and adds it to the dictionary.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFunctionName</tt>
   <dd> function name (example : "sin") It is the name that will be used in formulas
 </dd>
    <dt><tt> iReturnedType</tt>
   <dd> returned type of the function (example : CATParmDictionary::RealType in our sinus example)  </dd>
    <dt><tt> iEvalFuncPtr</tt>
   <dd> function evaluator  </dd>
    <dt><tt> iCheckMagnitudeFuncPtr</tt>
   <dd> magnitude evaluator </dd>
    <dt><tt> iNotation</tt>
   <dd> notation </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Function created Use 
<script type="text/javascript"> activateLinkAnchor('CATITypeDictionary','AddMethodForPackage','CATITypeDictionary.AddMethodForPackage') </script> to register this function in a given package.
</dl>
</dl>
<a name="CreateFunction"></a><a name="CreateFunction(CATUnicodeString&amp;,CATUnicodeString&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)"></a> <dt> o <b>CreateFunction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature','CATICkeSignature_var')</script>  <b>CreateFunction</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFunctionName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iReturnedType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeFunctionEvaluator','CATCkeFunctionEvaluator')</script> <td><tt>iEvalFuncPtr</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeCheckMagnitude','CATCkeCheckMagnitude')</script> <td><tt>iCheckMagnitudePtr</tt><td><tt>= NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeSignature::Mode','CATICkeSignature::Mode')</script> <td><tt>iNotation</tt><td><tt>= CATICkeSignature::Function</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Knowledge function and add it to the dictionary.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFunctionName</tt>
   <dd>  function name (example : "sin") It is the name that will be used in formulas
 </dd>
    <dt><tt> iReturnedType</tt>
   <dd> returned type of the function (example : CATParmDictionary::RealType in our sinus example)  </dd>
    <dt><tt> iEvalFuncPtr</tt>
   <dd> function evaluator  </dd>
    <dt><tt> iCheckMagnitudePtr</tt>
   <dd> check magnitude evaluator </dd>
    <dt><tt> iNotation</tt>
   <dd> notation </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Function created
</dl>
</dl>
<a name="GetStandardMagnitudeChecker"></a><a name="GetStandardMagnitudeChecker()"></a> <dt> o <b>GetStandardMagnitudeChecker</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCkeCheckMagnitude','CATCkeCheckMagnitude')</script>  <b>GetStandardMagnitudeChecker</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the standard magnitude checker.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the standard magnitude checker.
</dl>
</dl>
<a name="Methods"></a><a name="Methods()"></a> <dt> o <b>Methods</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Methods</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Initializes the list of Knowledge functions and sort it.<br>
 Load all libraries if necessary
</dl>
<a name="ParseAndEval"></a><a name="ParseAndEval(CATUnicodeString&amp;,CATICkeMagnitude_var&amp;,CATCkeScale)"></a> <dt> o <b>ParseAndEval</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeInst','CATICkeInst_var')</script>  <b>ParseAndEval</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>itexte</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeMagnitude_var','CATICkeMagnitude_var&amp;')</script> <td><tt>imag</tt><td><tt>= NULL_var</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeScale','CATCkeScale')</script> <td><tt>iScale</tt><td><tt>= CATNormalScale</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
  Evaluates a formula whithout parameters.
 Ex : 3*10+sin(80) ou "Hello"+" World".<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> itexte</tt>
   <dd> is the texte of the formula.  </dd>
    <dt><tt> imag</tt>
   <dd> precises the magnitude in output </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the return value is in MKS unit
</dl>
</dl>
<a name="SendAttributeValuationError"></a><a name="SendAttributeValuationError(CATKWEErrorSeverity::Severity,CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>SendAttributeValuationError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SendAttributeValuationError</b>(<td> const <script type="text/javascript"> activateLink('CATKWEErrorSeverity::Severity','CATKWEErrorSeverity::Severity')</script> <td><tt>iSeverity</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSizeViolated</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Send attribute truncation error. Do not use, it is meaningless.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSeverity</tt>
   <dd> Severity. </dd>
    <dt><tt> iObject</tt>
   <dd> object that we attempt to valuate </dd>
    <dt><tt> iAttributeName</tt>
   <dd> name of the attribute that we try to valuate </dd>
    <dt><tt> iAttributeValue</tt>
   <dd> value that we tried to give to the attribute </dd>
    <dt><tt> iMaxSizeViolated</tt>
   <dd> Max size that was authorized and that has been violated </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SendError"></a><a name="SendError(CATUnicodeString&amp;,CATKWEErrorSeverity::Severity,CATBaseUnknown_var&amp;,CATKWEEvaluationErrors::Code)"></a> <dt> o <b>SendError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SendError</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iMessage</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATKWEErrorSeverity::Severity','CATKWEErrorSeverity::Severity')</script> <td><tt>iSeverity</tt><td><tt>= CATKWEErrorSeverity::Information</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSource</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATKWEEvaluationErrors::Code','CATKWEEvaluationErrors::Code')</script> <td><tt>iCode</tt><td><tt>= CATKWEEvaluationErrors::Anonymous</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Send Error. To be used in the definition of user functions.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMessage</tt>
   <dd> Message. Must be NLS. </dd>
    <dt><tt> iSeverity</tt>
   <dd> Severity. </dd>
    <dt><tt> iSource</tt>
   <dd> Source </dd>
    <dt><tt> iCode</tt>
   <dd> Code of the error </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeFunctionFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

