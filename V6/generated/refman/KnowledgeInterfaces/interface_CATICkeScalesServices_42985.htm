<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeScalesServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeScalesServices"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeScalesServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeScalesServices_42985','CATICkeScalesServices','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeScalesServices</b>
</p>
<p>
<b><i> <br><b>Role</b>: This interface is mono implemented.</i></b><br>
 It is obtained from CATCkeGlobalFunctions::GetScalesServices() method.
 <p>
 <script type="text/javascript"> activateLinkAnchor('CATCkeGlobalFunctions','','CATCkeGlobalFunctions') </script>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetActivatedScales()"><b>GetActivatedScales</b></a>()
<dd>   Gets the list of scales that are currently used
 
 <dt> o 
    <a href="#GetCATToleranceFromObject(CATBaseUnknown_var&amp;)"><b>GetCATToleranceFromObject</b></a>(CATBaseUnknown_var&amp;)
<dd>  This method returns the tolerance associated to the scale deduced from the object
 
 <dt> o 
    <a href="#GetCurrentScale()"><b>GetCurrentScale</b></a>()
<dd>  This method returns the current design range chosen in preferences
 
 <dt> o 
    <a href="#GetScaleFromObject(CATBaseUnknown_var&amp;,CATCkeScale&amp;)"><b>GetScaleFromObject</b></a>(CATBaseUnknown_var&amp;,CATCkeScale&amp;)
<dd>  This method allows retrieving the scale of the PLM Component containing the object passed in argument
 
 <dt> o 
    <a href="#GetScaleName(CATCkeScale)"><b>GetScaleName</b></a>(CATCkeScale)
<dd>  This method returns the NLS name of a given scale
 
 <dt> o 
    <a href="#IsScaleSettingLocked()"><b>IsScaleSettingLocked</b></a>()
<dd>  This method checks if the scale setting can be modified by the caller or not
 
 <dt> o 
    <a href="#SetCurrentScale(CATCkeScale)"><b>SetCurrentScale</b></a>(CATCkeScale)
<dd>  This method sets the current design range in preferences.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetActivatedScales"></a><a name="GetActivatedScales()"></a> <dt> o <b>GetActivatedScales</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt')</script>  <b>GetActivatedScales</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the list of scales that are currently used
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a list of integers : each integer is the result of the cast of a CATCkeScale enum value into integer
</dl>
</dl>
<a name="GetCATToleranceFromObject"></a><a name="GetCATToleranceFromObject(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetCATToleranceFromObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATTolerance','const CATTolerance&')</script>  <b>GetCATToleranceFromObject</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iObject</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method returns the tolerance associated to the scale deduced from the object
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> can be any linkable object. The tolerance is deduced from the scale retrieved from the PLM Component containing iObject
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the tolerance associated to the scale deduced from object. It returns normal scale tolerance if the scale cannot be deduced from the passed object
</dl>
</dl>
<a name="GetCurrentScale"></a><a name="GetCurrentScale()"></a> <dt> o <b>GetCurrentScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCkeScale','CATCkeScale')</script>  <b>GetCurrentScale</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method returns the current design range chosen in preferences
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the current scale
</dl>
</dl>
<a name="GetScaleFromObject"></a><a name="GetScaleFromObject(CATBaseUnknown_var&amp;,CATCkeScale&amp;)"></a> <dt> o <b>GetScaleFromObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScaleFromObject</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeScale','CATCkeScale&amp;')</script> <td><tt>oScale</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method allows retrieving the scale of the PLM Component containing the object passed in argument
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> can be any linkable object. The scale is retrieved from the PLM Component containing iObject
 </dd>
    <dt><tt> oScale</tt>
   <dd> the scale found on PLM component. It is equal to CATNormalScale if the PLM Component does not support scales management
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the method succeds, E_FAIL if passed object does not allow retrieving PLM component, E_POINTER if passed object is NULL_var
</dl>
</dl>
<a name="GetScaleName"></a><a name="GetScaleName(CATCkeScale)"></a> <dt> o <b>GetScaleName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetScaleName</b>(<td><script type="text/javascript"> activateLink('CATCkeScale','CATCkeScale')</script> <td><tt>iScale</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method returns the NLS name of a given scale
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iScale</tt>
   <dd> the scale whose name is looked for
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the translated name of the passed scale
</dl>
</dl>
<a name="IsScaleSettingLocked"></a><a name="IsScaleSettingLocked()"></a> <dt> o <b>IsScaleSettingLocked</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsScaleSettingLocked</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method checks if the scale setting can be modified by the caller or not
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if the setting is locked, FALSE otherwise
</dl>
</dl>
<a name="SetCurrentScale"></a><a name="SetCurrentScale(CATCkeScale)"></a> <dt> o <b>SetCurrentScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCurrentScale</b>(<td><script type="text/javascript"> activateLink('CATCkeScale','CATCkeScale')</script> <td><tt>iScale</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method sets the current design range in preferences. The setting mustn't be locked by an administrator
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iScale</tt>
   <dd> the scale factor to set as current one. This scale has to one of the activated scales (@see GetActivatedScales)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the method succeeds, E_FAIL otherwise
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeScalesServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

