<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeSetOfEquations</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeSetOfEquations"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeSetOfEquations</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeSetOfEquations_43055','CATICkeSetOfEquations','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeSetOfEquations</b>
</p>
<p>
<b><i> Interface dedicated to the management of Set of Equations relations.</i></b><br>

 This interface requires the Knowledge Advisor license.
 This interface is mono implemented</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ControlCallBackInitializing(int,int)"><b>ControlCallBackInitializing</b></a>(int,int)
<dd>  Control the initializing/finalizing CATIASubdefiniteCallBack.
 <dt> o 
    <a href="#DisplayStopDialog(int)"><b>DisplayStopDialog</b></a>(int)
<dd>  Get/set the flag which is indicated if the "Stop Dialog" should be created.
 <dt> o 
    <a href="#FindNextSolutions(unsigned)"><b>FindNextSolutions</b></a>(unsigned)
<dd>  Find several next solutions.
 <dt> o 
    <a href="#GetCalculationTime()"><b>GetCalculationTime</b></a>()
<dd>  Get current time (milliseconds).
 <dt> o 
    <a href="#GetConstraintDescription(long,CATUnicodeString&amp;,unsigned&amp;,boolean&amp;)"><b>GetConstraintDescription</b></a>(long,CATUnicodeString&amp;,unsigned&amp;,boolean&amp;)
<dd>  Get description of the constraint.
 <dt> o 
    <a href="#GetErrorDescription(CATUnicodeString&amp;)"><b>GetErrorDescription</b></a>(CATUnicodeString&amp;)
<dd>  Get error description.
 <dt> o 
    <a href="#GetExpectedTime()"><b>GetExpectedTime</b></a>()
<dd>  Get expected time (milliseconds).
 <dt> o 
    <a href="#GetMaxCalculationTime()"><b>GetMaxCalculationTime</b></a>()
<dd>  Get a maximal calculation time.
 <dt> o 
    <a href="#GetNumberOfSolutions()"><b>GetNumberOfSolutions</b></a>()
<dd>  Get number of the found solutions.
 <dt> o 
    <a href="#GetNumberOfSolutionsToFind()"><b>GetNumberOfSolutionsToFind</b></a>()
<dd>  Get a maximal number of solutions those should be found during calculations.
 <dt> o 
    <a href="#GetPrecision()"><b>GetPrecision</b></a>()
<dd>  Get a calculation precision.
 <dt> o 
    <a href="#GetSolutionsDistance()"><b>GetSolutionsDistance</b></a>()
<dd>  Get the minimal distance between solutions.
 <dt> o 
    <a href="#GetStatus(int&amp;)"><b>GetStatus</b></a>(int&amp;)
<dd>  Get the status of the set of equation.
 <dt> o 
    <a href="#GetUpdateNotification()"><b>GetUpdateNotification</b></a>()
<dd>  Get own notification.
 <dt> o 
    <a href="#NumberOfShownSolutions(int)"><b>NumberOfShownSolutions</b></a>(int)
<dd>  Set a number of shown solutions.
 <dt> o 
    <a href="#RestoreResults(CATBaseUnknown_var&amp;,int&amp;)"><b>RestoreResults</b></a>(CATBaseUnknown_var&amp;,int&amp;)
<dd>  Restore DesingTable (results of CS) and state.
 <dt> o 
    <a href="#RunHasToStop(int)"><b>RunHasToStop</b></a>(int)
<dd>  Get/set a terminate flag.
 <dt> o 
    <a href="#SelectSolution(unsigned)"><b>SelectSolution</b></a>(unsigned)
<dd>  Set the solution as a current one.
 <dt> o 
    <a href="#SetCalculationTime(unsigned long)"><b>SetCalculationTime</b></a>(unsigned long)
<dd>  Set current time.
 <dt> o 
    <a href="#SetExpectedTime(unsigned long)"><b>SetExpectedTime</b></a>(unsigned long)
<dd>  Set expected time.
 <dt> o 
    <a href="#SetMaxCalculationTime(unsigned long)"><b>SetMaxCalculationTime</b></a>(unsigned long)
<dd>  Set a maximal duration of the current model calculations.
 <dt> o 
    <a href="#SetNumberOfSolutionsToFind(unsigned long)"><b>SetNumberOfSolutionsToFind</b></a>(unsigned long)
<dd>  Set a maximal number of solutions those should be found during calculations.
 <dt> o 
    <a href="#SetParameterAsInput(CATICkeParm*)"><b>SetParameterAsInput</b></a>(CATICkeParm*)
<dd>  Specifies that the parameter must be considered as input parameter.
 <dt> o 
    <a href="#SetParameterAsOutput(CATICkeParm*)"><b>SetParameterAsOutput</b></a>(CATICkeParm*)
<dd>  Specifies that the parameter must be considered as output parameter.
 <dt> o 
    <a href="#SetParametersAsInput(CATCkeListOfParm)"><b>SetParametersAsInput</b></a>(CATCkeListOfParm)
<dd>  Specifies that the parameter must be considered as input parameter.
 <dt> o 
    <a href="#SetParametersAsOutput(CATCkeListOfParm)"><b>SetParametersAsOutput</b></a>(CATCkeListOfParm)
<dd>  Specifies that the parameter must be considered as output parameter.
 <dt> o 
    <a href="#SetPrecision(double)"><b>SetPrecision</b></a>(double)
<dd>  Set a calculation precision.
 <dt> o 
    <a href="#SetSolutionsDistance(double)"><b>SetSolutionsDistance</b></a>(double)
<dd>  Set the minimal distance between solutions.
 <dt> o 
    <a href="#SetStatus(int)"><b>SetStatus</b></a>(int)
<dd>  Set the status of the set of equation.
 <dt> o 
    <a href="#StoreResults(CATBaseUnknown_var&amp;,int)"><b>StoreResults</b></a>(CATBaseUnknown_var&amp;,int)
<dd>  Store DesingTable (results of CS) and state.
 <dt> o 
    <a href="#UseErrorDescription(int)"><b>UseErrorDescription</b></a>(int)
<dd>  Get/set status of using the Smart Error localization.
 <dt> o 
    <a href="#UseGaussElimination(int)"><b>UseGaussElimination</b></a>(int)
<dd>  Get/set status of using the Gauss method for linear equations.
 <dt> o 
    <a href="#UseWarningLevel(int)"><b>UseWarningLevel</b></a>(int)
<dd>  Get/set status of using additional warnings.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ControlCallBackInitializing"></a><a name="ControlCallBackInitializing(int,int)"></a> <dt> o <b>ControlCallBackInitializing</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>ControlCallBackInitializing</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iStep</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iState</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Control the initializing/finalizing CATIASubdefiniteCallBack.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStep</tt>
   <dd>  =0 - initializing;               =1 - finalizing.
 </dd>
    <dt><tt> iState</tt>
   <dd> =0 - doesn`t performs;               =1 - performs;
               =2 - performs, but only 1 time;
               =3 - show current state.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<a name="DisplayStopDialog"></a><a name="DisplayStopDialog(int)"></a> <dt> o <b>DisplayStopDialog</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>DisplayStopDialog</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iUsed</tt><td><tt>=2</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get/set the flag which is indicated if the "Stop Dialog" should be created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUsed</tt>
   <dd> =0 - don`t show "Stop Dialog";                  =1 - show "Stop Dialog";
                  =2 - get current status.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<a name="FindNextSolutions"></a><a name="FindNextSolutions(unsigned)"></a> <dt> o <b>FindNextSolutions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FindNextSolutions</b>(<td><script type="text/javascript"> activateLink('unsigned','unsigned')</script> <td><tt>iNsols</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Find several next solutions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNsols</tt>
   <dd> a number of calculated solutions. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="GetCalculationTime"></a><a name="GetCalculationTime()"></a> <dt> o <b>GetCalculationTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('long','unsigned long')</script>  <b>GetCalculationTime</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get current time (milliseconds).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  current time
</dl>
</dl>
<a name="GetConstraintDescription"></a><a name="GetConstraintDescription(long,CATUnicodeString&amp;,unsigned&amp;,boolean&amp;)"></a> <dt> o <b>GetConstraintDescription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConstraintDescription</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iCnt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oDescrition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned','unsigned&amp;')</script> <td><tt>oCount</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean&amp;')</script> <td><tt>oErr</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get description of the constraint. Work with Smart Error localization only.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCnt</tt>
   <dd> a number of the constraint. </dd>
    <dt><tt> oDescrition</tt>
   <dd> a view of the constraint. </dd>
    <dt><tt> oCount</tt>
   <dd> a number of calls of the constraint. </dd>
    <dt><tt> oErr</tt>
   <dd> 1 if the contradiction occured in the constraint. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="GetErrorDescription"></a><a name="GetErrorDescription(CATUnicodeString&amp;)"></a> <dt> o <b>GetErrorDescription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetErrorDescription</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oDescrition</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get error description.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDescrition</tt>
   <dd> error description </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="GetExpectedTime"></a><a name="GetExpectedTime()"></a> <dt> o <b>GetExpectedTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('long','unsigned long')</script>  <b>GetExpectedTime</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get expected time (milliseconds).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  expected time
</dl>
</dl>
<a name="GetMaxCalculationTime"></a><a name="GetMaxCalculationTime()"></a> <dt> o <b>GetMaxCalculationTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('long','unsigned long')</script>  <b>GetMaxCalculationTime</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get a maximal calculation time.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  maximal calculation time
</dl>
</dl>
<a name="GetNumberOfSolutions"></a><a name="GetNumberOfSolutions()"></a> <dt> o <b>GetNumberOfSolutions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfSolutions</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get number of the found solutions.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  number of solutions found
</dl>
</dl>
<a name="GetNumberOfSolutionsToFind"></a><a name="GetNumberOfSolutionsToFind()"></a> <dt> o <b>GetNumberOfSolutionsToFind</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('long','unsigned long')</script>  <b>GetNumberOfSolutionsToFind</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get a maximal number of solutions those should be found during calculations.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  maximal number of solutions those should be found during calculations.
</dl>
</dl>
<a name="GetPrecision"></a><a name="GetPrecision()"></a> <dt> o <b>GetPrecision</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetPrecision</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get a calculation precision.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the precision
</dl>
</dl>
<a name="GetSolutionsDistance"></a><a name="GetSolutionsDistance()"></a> <dt> o <b>GetSolutionsDistance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetSolutionsDistance</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get the minimal distance between solutions.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the minimal distance between solutions
</dl>
</dl>
<a name="GetStatus"></a><a name="GetStatus(int&amp;)"></a> <dt> o <b>GetStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStatus</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get the status of the set of equation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStatus</tt>
   <dd> 0 = unknown.
 1 = solved.
 2 = no solution found.
 3 = Evaluation error.
 4 = Interruption.
 5 = all solutions found.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="GetUpdateNotification"></a><a name="GetUpdateNotification()"></a> <dt> o <b>GetUpdateNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script>  <b>GetUpdateNotification</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get own notification.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  notification
</dl>
</dl>
<a name="NumberOfShownSolutions"></a><a name="NumberOfShownSolutions(int)"></a> <dt> o <b>NumberOfShownSolutions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('long','unsigned long')</script>  <b>NumberOfShownSolutions</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNSol</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set a number of shown solutions.
 The method is used to get a count of shown solutions to "Stop Dialog"
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNSol</tt>
   <dd> a number of solutions.         If iNSol==-1 then the count doesn`t modified.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current number of shown solutions.
</dl>
</dl>
<a name="RestoreResults"></a><a name="RestoreResults(CATBaseUnknown_var&amp;,int&amp;)"></a> <dt> o <b>RestoreResults</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RestoreResults</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oTable</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oState</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Restore DesingTable (results of CS) and state.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTable</tt>
   <dd> a table of solutions </dd>
    <dt><tt> oState</tt>
   <dd> a state of CS </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="RunHasToStop"></a><a name="RunHasToStop(int)"></a> <dt> o <b>RunHasToStop</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>RunHasToStop</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAction</tt><td><tt>=2</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get/set a terminate flag.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAction</tt>
   <dd> =0 - reset the flag;                =1 - set the flag;
                =2 - get the flag.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the flag
</dl>
</dl>
<a name="SelectSolution"></a><a name="SelectSolution(unsigned)"></a> <dt> o <b>SelectSolution</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SelectSolution</b>(<td><script type="text/javascript"> activateLink('unsigned','unsigned')</script> <td><tt>iIdxSol</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set the solution as a current one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIdxSol</tt>
   <dd> a number of the solution. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetCalculationTime"></a><a name="SetCalculationTime(unsigned long)"></a> <dt> o <b>SetCalculationTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCalculationTime</b>(<td><script type="text/javascript"> activateLink('unsigned long','unsigned long')</script> <td><tt>iTime</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set current time.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTime</tt>
   <dd> a current time (milliseconds) </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetExpectedTime"></a><a name="SetExpectedTime(unsigned long)"></a> <dt> o <b>SetExpectedTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetExpectedTime</b>(<td><script type="text/javascript"> activateLink('unsigned long','unsigned long')</script> <td><tt>iTime</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set expected time.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTime</tt>
   <dd> a expected time (milliseconds) </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetMaxCalculationTime"></a><a name="SetMaxCalculationTime(unsigned long)"></a> <dt> o <b>SetMaxCalculationTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMaxCalculationTime</b>(<td><script type="text/javascript"> activateLink('unsigned long','unsigned long')</script> <td><tt>iMaxTime</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set a maximal duration of the current model calculations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxTime</tt>
   <dd> a maximal time (seconds) </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetNumberOfSolutionsToFind"></a><a name="SetNumberOfSolutionsToFind(unsigned long)"></a> <dt> o <b>SetNumberOfSolutionsToFind</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetNumberOfSolutionsToFind</b>(<td><script type="text/javascript"> activateLink('unsigned long','unsigned long')</script> <td><tt>inSol</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set a maximal number of solutions those should be found during calculations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inSol</tt>
   <dd> a number of solutions </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetParameterAsInput"></a><a name="SetParameterAsInput(CATICkeParm*)"></a> <dt> o <b>SetParameterAsInput</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetParameterAsInput</b>(<td><script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm*')</script> <td><tt>iParameter</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies that the parameter must be considered as input parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameter</tt>
   <dd> The parameter to set up as input of the SetOfEquationObject </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetParameterAsOutput"></a><a name="SetParameterAsOutput(CATICkeParm*)"></a> <dt> o <b>SetParameterAsOutput</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetParameterAsOutput</b>(<td><script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm*')</script> <td><tt>iParameter</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies that the parameter must be considered as output parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameter</tt>
   <dd> The parameter to set up as input of the SetOfEquationObject </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetParametersAsInput"></a><a name="SetParametersAsInput(CATCkeListOfParm)"></a> <dt> o <b>SetParametersAsInput</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetParametersAsInput</b>(<td><script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script> <td><tt>iParameter</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies that the parameter must be considered as input parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameter</tt>
   <dd> The parameter to set up as input of the SetOfEquationObject </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetParametersAsOutput"></a><a name="SetParametersAsOutput(CATCkeListOfParm)"></a> <dt> o <b>SetParametersAsOutput</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetParametersAsOutput</b>(<td><script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script> <td><tt>iParameter</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies that the parameter must be considered as output parameter. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameter</tt>
   <dd> The parameter to set up as input of the SetOfEquationObject </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetPrecision"></a><a name="SetPrecision(double)"></a> <dt> o <b>SetPrecision</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPrecision</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iEps</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set a calculation precision.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEps</tt>
   <dd> calculation precision </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetSolutionsDistance"></a><a name="SetSolutionsDistance(double)"></a> <dt> o <b>SetSolutionsDistance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSolutionsDistance</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iEps</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set the minimal distance between solutions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEps</tt>
   <dd>  minimal distance between solutions. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="SetStatus"></a><a name="SetStatus(int)"></a> <dt> o <b>SetStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetStatus</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iStatus</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Set the status of the set of equation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStatus</tt>
   <dd> status  0 = unknown.
 1 = solved.
 2 = no solution found.
 3 = Evaluation error.
 4 = Interruption.
 5 = all solutions found.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="StoreResults"></a><a name="StoreResults(CATBaseUnknown_var&amp;,int)"></a> <dt> o <b>StoreResults</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>StoreResults</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iTable</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iState</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Store DesingTable (results of CS) and state.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTable</tt>
   <dd> a table of solutions </dd>
    <dt><tt> iState</tt>
   <dd> a current state of CS </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="UseErrorDescription"></a><a name="UseErrorDescription(int)"></a> <dt> o <b>UseErrorDescription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>UseErrorDescription</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iError</tt><td><tt>=2</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get/set status of using the Smart Error localization.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iError</tt>
   <dd> =0 - don`t use Smart Error localization;                  =1 - use Smart Error localization;
                  =2 - get current status.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<a name="UseGaussElimination"></a><a name="UseGaussElimination(int)"></a> <dt> o <b>UseGaussElimination</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>UseGaussElimination</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSymbolic</tt><td><tt>=2</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get/set status of using the Gauss method for linear equations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymbolic</tt>
   <dd> =0 - don`t use Gauss method;                  =1 - use Gauss method;
                  =2 - get current status.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<a name="UseWarningLevel"></a><a name="UseWarningLevel(int)"></a> <dt> o <b>UseWarningLevel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>UseWarningLevel</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iError</tt><td><tt>=2</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Get/set status of using additional warnings.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iError</tt>
   <dd> =0 - don`t show additional warnings;                  =1 - show additional warnings;
                  =2 - get current status.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a current status
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeSetOfEquations.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

