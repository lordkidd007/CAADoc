<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeOleSheet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeOleSheet"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeOleSheet</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeOleSheet_31740','CATICkeOleSheet','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeOleSheet</b>
</p>
<p>
<b><i> This interface is an encapsulation of an array of arrays (a sheet) of strings contained in a file.</i></b><br>


 The file has to be an excel or a lotus sheet file. Its format has to be :
 <table frame="border">
 <tr><td>string<sub>1,1</sub></td><td>string<sub>1,2</sub></td><td>...</td></tr>
 <tr><td colspan="3">(n-2 lines)</td></tr>
 <tr><td>string<sub>n,1</sub></td><td>string<sub>n,2</sub></td><td>...</td></tr>
 </table><br>
 Empty strings are allowed, but not in the first row because the number of
 columns is computed using the first row, except if you use the forceWidth
 argument of the <script type="text/javascript"> activateLinkAnchor('CATICkeSheet','UpdateLocalCopy','CATICkeSheet.UpdateLocalCopy') </script> method.<br>
 To create a CATICkeOleSheet, use the 
<script type="text/javascript"> activateLinkAnchor('CATICkeRelationFactory','CreateSheet','CATICkeRelationFactory.CreateSheet') </script> method with an excel or a lotus file path as argument.

 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIDesignTable','','CATIDesignTable') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeSheet','','CATICkeSheet') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeTextSheet','','CATICkeTextSheet') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetOleModifyAndCloseNotification()"><b>GetOleModifyAndCloseNotification</b></a>()
<dd>  Returns the notification associated with the modification of the OLE doc.
 <dt> o 
    <a href="#GetSheetIndex()"><b>GetSheetIndex</b></a>()
<dd>  Returns the index of the sheet in the workboook where data has to be found.
 <dt> o 
    <a href="#SetSheetIndex(int)"><b>SetSheetIndex</b></a>(int)
<dd>  Sets the index of the sheet in the workbook.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetOleModifyAndCloseNotification"></a><a name="GetOleModifyAndCloseNotification()"></a> <dt> o <b>GetOleModifyAndCloseNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script>  <b>GetOleModifyAndCloseNotification</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the notification associated with the modification of the OLE doc.
 The notification is sent when the OLE doc. has been modified, and Ole doc viewer closed
 (the sheet can't be parsed if Ole doc. is opened and sends notifications to CATIA)
</dl>
<a name="GetSheetIndex"></a><a name="GetSheetIndex()"></a> <dt> o <b>GetSheetIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSheetIndex</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the index of the sheet in the workboook where data has to be found.
</dl>
<a name="SetSheetIndex"></a><a name="SetSheetIndex(int)"></a> <dt> o <b>SetSheetIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSheetIndex</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>index</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the index of the sheet in the workbook. This method has to be called before any call of CATICkeSheet::UpdateLocalCopy
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> index</tt>
   <dd> index of the sheet in the workbook. Minimum value : 1</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeOleSheet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

