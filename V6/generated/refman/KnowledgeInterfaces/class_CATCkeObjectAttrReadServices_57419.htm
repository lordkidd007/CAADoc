<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Class CATCkeObjectAttrReadServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATCkeObjectAttrReadServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATCkeObjectAttrReadServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATCkeObjectAttrReadServices_57419','CATCkeObjectAttrReadServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATCkeObjectAttrReadServices</b>
</p>
<p>
<b><i> Services to easily read attribute values on a Knowledge object.</i></b><br>
<br>
 <b>Role</b>: A Knowledge object implements CATICkeObject. These services enable to read its attributes values.<br>
 Note that only simple (boolean, integer, real, string) and persistent values are accessed by those services. As opposed to computed values.<br>
 Note also that if the object does not publish its attributes in CAA (CATICkeObject::IsPublic), those services do not work.<br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIValue','','CATIValue') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeObject','','CATICkeObject') </script>, <script type="text/javascript"> activateLinkAnchor('CATCkeObjectAttrWriteServices','','CATCkeObjectAttrWriteServices') </script>, <script type="text/javascript"> activateLinkAnchor('CATIAttributeComputed','','CATIAttributeComputed') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeUnit','','CATICkeUnit') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAttributeNLSNameFromObject(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>GetAttributeNLSNameFromObject</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Produces the NLS name of an attribute for a given object.
 <dt> o 
    <a href="#GetListOfAttributes(CATICkeObject_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATLISTV(CATICkeParm_var)&amp;)"><b>GetListOfAttributes</b></a>(CATICkeObject_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATLISTV(CATICkeParm_var)&amp;)
<dd>  Returns all the PLM attributes of an object (it scans all types that the object supports including extensions).
 <dt> o 
    <a href="#GetValue(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)"><b>GetValue</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)
<dd>  Reads the value of an attribute in a generic manner (as a value).
 <dt> o 
    <a href="#GetValueAsBoolean(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean&amp;)"><b>GetValueAsBoolean</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean&amp;)
<dd>  Reads the value of an attribute as a boolean.
 <dt> o 
    <a href="#GetValueAsInteger(CATICkeObject_var&amp;,CATUnicodeString&amp;,int&amp;)"><b>GetValueAsInteger</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,int&amp;)
<dd>  Reads the value of an attribute as an integer.
 <dt> o 
    <a href="#GetValueAsReal(CATICkeObject_var&amp;,CATUnicodeString&amp;,double&amp;)"><b>GetValueAsReal</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,double&amp;)
<dd>  Reads the value of an attribute as a double.
 <dt> o 
    <a href="#GetValueAsString(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>GetValueAsString</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Reads the value of an attribute as a string.
 <dt> o 
    <a href="#GetValueAsTime(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATTime&amp;)"><b>GetValueAsTime</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATTime&amp;)
<dd>  Reads the value of an attribute as a Time.
 <dt> o 
    <a href="#IsSet(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean&amp;)"><b>IsSet</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean&amp;)
<dd>  Reads the value of an attribute and tests if it is set or not.
 <dt> o 
    <a href="#ListCustomerExtensions(CATICkeObject_var&amp;,CATListValCATIType_var&amp;)"><b>ListCustomerExtensions</b></a>(CATICkeObject_var&amp;,CATListValCATIType_var&amp;)
<dd>  Fills the given list with types supported by this object that correspond to customer extensions.
 <dt> o 
    <a href="#ProduceDisplayName(CATICkeObject_var&amp;,CATUnicodeString&amp;)"><b>ProduceDisplayName</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;)
<dd>  Returns a display name for the object in input.
 <dt> o 
    <a href="#RetrieveInstanceUsedForFederation(CATICkeObject_var&amp;,CATIType_var&amp;,CATICkeObject_var&amp;)"><b>RetrieveInstanceUsedForFederation</b></a>(CATICkeObject_var&amp;,CATIType_var&amp;,CATICkeObject_var&amp;)
<dd>  Extends an object by a virtual extension that contains only computed attributes.
 <dt> o 
    <a href="#ShowAttributeValue(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeUnit_var&amp;)"><b>ShowAttributeValue</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeUnit_var&amp;)
<dd>  Produces a string to represent the value of an attribute on an object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAttributeNLSNameFromObject"></a><a name="GetAttributeNLSNameFromObject(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetAttributeNLSNameFromObject</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAttributeNLSNameFromObject</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oNLSName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Produces the NLS name of an attribute for a given object. Used for edit properties/browse properties<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> object in input. A PLM object.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> oNLSName</tt>
   <dd> NLS Name of the attribute
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if iObject NULL of attribute not found
 	 <li> S_FALSE if no NLS translation found: we will return the name of the attribute
 	 <li> S_OK if translation found
  </ol>
</dl>
</dl>
<a name="GetListOfAttributes"></a><a name="GetListOfAttributes(CATICkeObject_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATLISTV(CATICkeParm_var)&amp;)"></a> <dt> o <b>GetListOfAttributes</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfAttributes</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>ioAttributeNameList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>ioAttributeValueAsStringList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATICkeParm_var)','CATLISTV(CATICkeParm_var)&amp;')</script> <td><tt>ioAttributeValueList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns all the PLM attributes of an object (it scans all types that the object supports including extensions). Or fills the values for a list of  attributes in input <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to list the attributes
 </dd>
    <dt><tt> ioAttributeNameList</tt>
   <dd> List in input that is filled by the method and that returns the attributes names. It should be empty before calling the method. If it is not empty, this method will fill the values for the attributes in this list.<br>
 </dd>
    <dt><tt> ioAttributeValueAsStringList</tt>
   <dd> List in input that is filled by the method and that returns the attributes values as strings. It should be empty before calling the method.
 </dd>
    <dt><tt> ioAttributeValueList</tt>
   <dd> List in input that is filled by the method and that returns the attributes values as values. It should be empty before calling the method.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if iObject is NULL. Or if one of the attributes in the list does not exist on the object.
 	 <li> S_OK	if the attributes have been read successfully.
  </ol>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetValue</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Reads the value of an attribute in a generic manner (as a value). Works in all cases. Must be used to read List attributes.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to read an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> oValue</tt>
   <dd> Value that we will read on the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the read operation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> S_OK	if the attribute has been read successfully.
  </ol>
</dl>
</dl>
<a name="GetValueAsBoolean"></a><a name="GetValueAsBoolean(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetValueAsBoolean</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetValueAsBoolean</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oValBoolean</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads the value of an attribute as a boolean. Works only on boolean attributes.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to read an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> oValBoolean</tt>
   <dd> Value that we will read on the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the read operation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> S_OK	if the attribute has been read successfully.
  </ol>
</dl>
</dl>
<a name="GetValueAsInteger"></a><a name="GetValueAsInteger(CATICkeObject_var&amp;,CATUnicodeString&amp;,int&amp;)"></a> <dt> o <b>GetValueAsInteger</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetValueAsInteger</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oValInt</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads the value of an attribute as an integer. Works on Integer, Real, Dimensioned attributes.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to read an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name): it should be
 </dd>
    <dt><tt> oValInt</tt>
   <dd> Value that we will read on the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the read operation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> S_OK	if the attribute has been read successfully.
  </ol>
</dl>
</dl>
<a name="GetValueAsReal"></a><a name="GetValueAsReal(CATICkeObject_var&amp;,CATUnicodeString&amp;,double&amp;)"></a> <dt> o <b>GetValueAsReal</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetValueAsReal</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oValReal</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads the value of an attribute as a double. Works on Integer, Real, Dimensioned attributes. Note that attributes defined as dimensions must be read as a double.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to read an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> oValReal</tt>
   <dd> Value that we will read on the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the read operation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> S_OK	if the attribute has been read successfully.
  </ol>
</dl>
</dl>
<a name="GetValueAsString"></a><a name="GetValueAsString(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetValueAsString</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetValueAsString</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oValString</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads the value of an attribute as a string. Works on String and enumerated attributes.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to read an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> oValString</tt>
   <dd> Value that we will read on the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the read operation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> S_OK	if the attribute has been read successfully.
  </ol>
</dl>
</dl>
<a name="GetValueAsTime"></a><a name="GetValueAsTime(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATTime&amp;)"></a> <dt> o <b>GetValueAsTime</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetValueAsTime</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATTime','CATTime&amp;')</script> <td><tt>oValTime</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads the value of an attribute as a Time. Works on date attributes<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to read an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name): it should be
 </dd>
    <dt><tt> oValTime</tt>
   <dd> Value that we will read on the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the read operation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> S_OK	if the attribute has been read successfully.
 	 <li> S_FALSE	if the attribute is Unset
  </ol>
</dl>
</dl>
<a name="IsSet"></a><a name="IsSet(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean&amp;)"></a> <dt> o <b>IsSet</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsSet</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oIsSetStatus</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Reads the value of an attribute and tests if it is set or not. Works in all cases. .<br>
 If you need to access the value afterwards, it is more efficient to use GetValue and to access the Unset status on the returned value.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to read an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> oIsSetStatus</tt>
   <dd> Unset/Set status of the attribute
  <ol>
 	 <li> TRUE if the attribute is set.
 	 <li> FALSE if the attribute is unset.
  </ol>
 TRUE is it is set, FALSE instead
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the read operation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> S_OK	if the attribute has been accessed successfully.
  </ol>
</dl>
</dl>
<a name="ListCustomerExtensions"></a><a name="ListCustomerExtensions(CATICkeObject_var&amp;,CATListValCATIType_var&amp;)"></a> <dt> o <b>ListCustomerExtensions</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListCustomerExtensions</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIType_var','CATListValCATIType_var&amp;')</script> <td><tt>iolListOfCATIType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Fills the given list with types supported by this object that correspond to customer extensions.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> the object in input. </dd>
    <dt><tt> iolListOfCATIType</tt>
   <dd> the filled list. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the object in input is NULL.
 	 <li> S_OK	if the type has been retrieved.
 	 <li> S_FALSE	if the list is empty
  </ol>
</dl>
</dl>
<a name="ProduceDisplayName"></a><a name="ProduceDisplayName(CATICkeObject_var&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>ProduceDisplayName</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ProduceDisplayName</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oDisplayName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns a display name for the object in input.<br>
 Note that information is computed each time we ask for it. There is no cache.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> the object in input. </dd>
    <dt><tt> oDisplayName</tt>
   <dd> the object in output. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ol>
 	 <li> E_INVALIDARG if the object in input is NULL.
 	 <li> S_OK	if the type has been retrieved.
 	 <li> S_FALSE	if the list is empty
  </ol>
</dl>
</dl>
<a name="RetrieveInstanceUsedForFederation"></a><a name="RetrieveInstanceUsedForFederation(CATICkeObject_var&amp;,CATIType_var&amp;,CATICkeObject_var&amp;)"></a> <dt> o <b>RetrieveInstanceUsedForFederation</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RetrieveInstanceUsedForFederation</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObjectToExtend</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iExtensionType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>oFederatedObject</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Extends an object by a virtual extension that contains only computed attributes.<br>
 This method returns an object that enables to access the computed attributes on the object to extend.<br>
 The implementation of the computed attributs must be done on a late type with a prefix CATInstanceFederation* where * is the name of the extension type.<br>
 The implementation implements CATIAttributeComputed
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectToDelegateTo</tt>
   <dd> object in input 
 </dd>
    <dt><tt> iExtensionType</tt>
   <dd> Type of the virtual extension
 </dd>
    <dt><tt> oFederatedObject</tt>
   <dd> Object used to federate attributes
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ol>
 	 <li> E_INVALIDARG if iObjectToExtend NULL or iExtension NULL).
 	 <li> S_OK	if the instance has been correctly created
 	 <li> E_FAIL	if we didn't find the factory that computes attribute
 	 <li> S_FALSE	if the implementation of the computed attribute cannot work on this object
  </ol>
</dl>
</dl>
<a name="ShowAttributeValue"></a><a name="ShowAttributeValue(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeUnit_var&amp;)"></a> <dt> o <b>ShowAttributeValue</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ShowAttributeValue</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oValueToShow</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeUnit_var','CATICkeUnit_var&amp;')</script> <td><tt>iUnit</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Produces a string to represent the value of an attribute on an object.<br>
 This method produces a value with unit for an attribute with a magnitude.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> object in input. A PLM object.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> oValueToShow</tt>
   <dd> Value to show
 </dd>
    <dt><tt> oUnit</tt>
   <dd> The unit to show the attribute. If set to NULL, the default unit will be chosen
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCkeObjectAttrReadServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

