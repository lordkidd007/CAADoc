<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeTextSheet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeTextSheet"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeTextSheet</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeTextSheet_33555','CATICkeTextSheet','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeTextSheet</b>
</p>
<p>
<b><i> This interface is an encapsulation of an array of arrays (a sheet) of strings contained in a file.</i></b><br>


 The file has to be a tabulated text file. Its format has to be :
 <table>
 <tr><td>string<sub>1,1</sub></td><td>TAB</td><td>string<sub>1,2</sub></td><td>...</td></tr>
 <tr><td colspan="3">(n-2 lines)</td></tr>
 <tr><td>string<sub>n,1</sub></td><td>TAB</td><td>string<sub>n,2</sub></td><td>...</td></tr>
 </table><br>
 Empty strings are allowed, but not in the first row because the number of
 columns is computed using the first row, except if you use the forceWidth
 argument of the the <script type="text/javascript"> activateLinkAnchor('CATICkeSheet','UpdateLocalCopy','CATICkeSheet.UpdateLocalCopy') </script> method.<br>
 To create a CATICkeTextSheet, use the 
<script type="text/javascript"> activateLinkAnchor('CATICkeParmFactory','CreateSheet','CATICkeParmFactory.CreateSheet') </script> method with a text file path as argument.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIDesignTable','','CATIDesignTable') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeSheet','','CATICkeSheet') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRow(CATListOfCATUnicodeString&amp;,CATCke::Boolean,CATCke::Boolean)"><b>AddRow</b></a>(CATListOfCATUnicodeString&amp;,CATCke::Boolean,CATCke::Boolean)
<dd>  This methods adds a row in the text file.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRow"></a><a name="AddRow(CATListOfCATUnicodeString&amp;,CATCke::Boolean,CATCke::Boolean)"></a> <dt> o <b>AddRow</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>AddRow</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>row</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>init</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>save</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This methods adds a row in the text file.
 For vertical sheets, this method is much more effective than several calls to SetCell
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> row</tt>
   <dd> the list of strings to add at the end of the file.
 </dd>
    <dt><tt> init</tt>
   <dd> opens the file if equal to CATCke::True
 </dd>
    <dt><tt> save</tt>
   <dd> saves the file if equal to CATCke::True
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATCke::True if the operations succeeds, CATCke::False else
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeTextSheet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

