<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIParmDictionary</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATIParmDictionary"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATIParmDictionary</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIParmDictionary_37468','CATIParmDictionary','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIParmDictionary</b>
</p>
<p>
<b><i>    Interface to manage the dictionary of types of values.</i></b><br>

 <b>Role</b>: It gathers static methods to value type dictionary management.
 It offers direct access to common types of values and it provides methods to find magnitudes and units by name.<br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIAddLibrary','','CATIAddLibrary') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeType','','CATICkeType') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeMagnitude','','CATICkeMagnitude') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeUnit','','CATICkeUnit') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CloseUnits()"><b>CloseUnits</b></a>()
<dd>  Delete the dictionary of units.
 <dt> o 
    <a href="#FindMagnitude(CATUnicodeString&amp;)"><b>FindMagnitude</b></a>(CATUnicodeString&amp;)
<dd>  Finds a magnitude from its internal coded name.
 <dt> o 
    <a href="#FindType(char*)"><b>FindType</b></a>(char*)
<dd>  Finds a value type by its coded name.
 <dt> o 
    <a href="#FindUnit(CATUnicodeString&amp;)"><b>FindUnit</b></a>(CATUnicodeString&amp;)
<dd>  Finds a unit from its coded name.
 <dt> o 
    <a href="#FindUnitFromSymbol(CATUnicodeString&amp;)"><b>FindUnitFromSymbol</b></a>(CATUnicodeString&amp;)
<dd>  Finds a unit from its symbol.
 <dt> o 
    <a href="#GetAngleType()"><b>GetAngleType</b></a>()
<dd>   Returns the Angle type.
 <dt> o 
    <a href="#GetBooleanType()"><b>GetBooleanType</b></a>()
<dd>   Returns the Boolean type.
 <dt> o 
    <a href="#GetDateType()"><b>GetDateType</b></a>()
<dd>   Returns the type for dates.
 <dt> o 
    <a href="#GetDimensionType()"><b>GetDimensionType</b></a>()
<dd>   Returns the Dimension type, which is the basic type for all magnitudes.
 <dt> o 
    <a href="#GetEnumType()"><b>GetEnumType</b></a>()
<dd>   Returns the Enum type, which is the basic type for all enumerated types of values.
 <dt> o 
    <a href="#GetFeatureType()"><b>GetFeatureType</b></a>()
<dd>   Returns the Feature type: main basic type for objects that can be manipulated by Knowledgeware.
 <dt> o 
    <a href="#GetIntegerType()"><b>GetIntegerType</b></a>()
<dd>   Returns the Integer type.
 <dt> o 
    <a href="#GetLengthType()"><b>GetLengthType</b></a>()
<dd>   Returns the Length type.
 <dt> o 
    <a href="#GetListType()"><b>GetListType</b></a>()
<dd>   Returns the type for lists.
 <dt> o 
    <a href="#GetLiteralType()"><b>GetLiteralType</b></a>()
<dd>   Returns the basic type for any literal (simple value).
 <dt> o 
    <a href="#GetRealType()"><b>GetRealType</b></a>()
<dd>   Returns the Real type.
 <dt> o 
    <a href="#GetStringType()"><b>GetStringType</b></a>()
<dd>   Returns the String type.
 <dt> o 
    <a href="#GetVoidType()"><b>GetVoidType</b></a>()
<dd>   Returns the Void type (used for defining arguments of functions or expressions).
 <dt> o 
    <a href="#GetVolatileFactory()"><b>GetVolatileFactory</b></a>()
<dd>   Use CATCkeGlobalFunctions instead.
 <dt> o 
    <a href="#Magnitudes(CATCkeListOfMagnitude)"><b>Magnitudes</b></a>(CATCkeListOfMagnitude)
<dd>  Returns the list of all magntitudes contained in the value type dictionary.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CloseUnits"></a><a name="CloseUnits()"></a> <dt> o <b>CloseUnits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CloseUnits</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Delete the dictionary of units.

</dl>
<a name="FindMagnitude"></a><a name="FindMagnitude(CATUnicodeString&amp;)"></a> <dt> o <b>FindMagnitude</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeMagnitude','CATICkeMagnitude_var')</script>  <b>FindMagnitude</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Finds a magnitude from its internal coded name. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> name of the magnitude  Unfortunately, there is no way to know the all list of coded name of magnitudes that exist for a V5 release. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the magnitude found
</dl>
</dl>
<a name="FindType"></a><a name="FindType(char*)"></a> <dt> o <b>FindType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>FindType</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iCodedName</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Finds a value type by its coded name.
 Unfortunately, there is no way to know the all list of coded name of units that exist for a V5 release. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCodedName</tt>
   <dd> : name of type to find  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the type found
</dl>
</dl>
<a name="FindUnit"></a><a name="FindUnit(CATUnicodeString&amp;)"></a> <dt> o <b>FindUnit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeUnit','CATICkeUnit_var')</script>  <b>FindUnit</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Finds a unit from its coded name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> name of the unit  Unfortunately, there is no way to know the all list of coded name of units that exist for a V5 release. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the unit found
</dl>
</dl>
<a name="FindUnitFromSymbol"></a><a name="FindUnitFromSymbol(CATUnicodeString&amp;)"></a> <dt> o <b>FindUnitFromSymbol</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeUnit','CATICkeUnit_var')</script>  <b>FindUnitFromSymbol</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>symbol</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Finds a unit from its symbol.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> symbol</tt>
   <dd> the string containing the symbol (eg. "mm" or "m3"). 
 <br>The empty string argument "" is not valid.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the unit (NULL_var if the unit wasn't found)
</dl>
</dl>
<a name="GetAngleType"></a><a name="GetAngleType()"></a> <dt> o <b>GetAngleType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetAngleType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Angle type.
</dl>
<a name="GetBooleanType"></a><a name="GetBooleanType()"></a> <dt> o <b>GetBooleanType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetBooleanType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Boolean type.
</dl>
<a name="GetDateType"></a><a name="GetDateType()"></a> <dt> o <b>GetDateType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetDateType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the type for dates.
</dl>
<a name="GetDimensionType"></a><a name="GetDimensionType()"></a> <dt> o <b>GetDimensionType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetDimensionType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Dimension type, which is the basic type for all magnitudes.
</dl>
<a name="GetEnumType"></a><a name="GetEnumType()"></a> <dt> o <b>GetEnumType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetEnumType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Enum type, which is the basic type for all enumerated types of values.
</dl>
<a name="GetFeatureType"></a><a name="GetFeatureType()"></a> <dt> o <b>GetFeatureType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetFeatureType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Feature type: main basic type for objects that can be manipulated by Knowledgeware.
</dl>
<a name="GetIntegerType"></a><a name="GetIntegerType()"></a> <dt> o <b>GetIntegerType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetIntegerType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Integer type.
</dl>
<a name="GetLengthType"></a><a name="GetLengthType()"></a> <dt> o <b>GetLengthType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetLengthType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Length type.
</dl>
<a name="GetListType"></a><a name="GetListType()"></a> <dt> o <b>GetListType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetListType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the type for lists.
</dl>
<a name="GetLiteralType"></a><a name="GetLiteralType()"></a> <dt> o <b>GetLiteralType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetLiteralType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the basic type for any literal (simple value).
</dl>
<a name="GetRealType"></a><a name="GetRealType()"></a> <dt> o <b>GetRealType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetRealType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Real type.
</dl>
<a name="GetStringType"></a><a name="GetStringType()"></a> <dt> o <b>GetStringType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetStringType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the String type.
</dl>
<a name="GetVoidType"></a><a name="GetVoidType()"></a> <dt> o <b>GetVoidType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetVoidType</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the Void type (used for defining arguments of functions or expressions).
</dl>
<a name="GetVolatileFactory"></a><a name="GetVolatileFactory()"></a> <dt> o <b>GetVolatileFactory</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParmFactory','CATICkeParmFactory_var')</script>  <b>GetVolatileFactory</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Use CATCkeGlobalFunctions instead.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the volatile factory.for values
</dl>
</dl>
<a name="Magnitudes"></a><a name="Magnitudes(CATCkeListOfMagnitude)"></a> <dt> o <b>Magnitudes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Magnitudes</b>(<td><script type="text/javascript"> activateLink('CATCkeListOfMagnitude','CATCkeListOfMagnitude')</script> <td><tt>ioListOfMagnitudes</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of all magntitudes contained in the value type dictionary.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioListOfMagnitudes:</tt>
   <dd> a pointer to an empty list of magnitudes.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIParmDictionary.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

