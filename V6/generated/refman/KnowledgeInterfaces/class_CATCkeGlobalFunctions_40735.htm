<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Class CATCkeGlobalFunctions</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATCkeGlobalFunctions"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATCkeGlobalFunctions</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATCkeGlobalFunctions_40735','CATCkeGlobalFunctions','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATCkeGlobalFunctions</b>
</p>
<p>
<b><i>    Returns global dictionnaries and factories.</i></b><br>

 <p>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIParmDictionary','','CATIParmDictionary') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeParmFactory','','CATICkeParmFactory') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeFunctionFactory','','CATICkeFunctionFactory') </script>, <script type="text/javascript"> activateLinkAnchor('CATIKweModelServices','','CATIKweModelServices') </script>, <script type="text/javascript"> activateLinkAnchor('CATIParmPublisher','','CATIParmPublisher') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AppendElement(CATIParmPublisher_var&amp;,CATBaseUnknown_var&amp;)"><b>AppendElement</b></a>(CATIParmPublisher_var&amp;,CATBaseUnknown_var&amp;)
<dd>   Services equivalent to CATIParmPublisher::AppendElement.
 <dt> o 
    <a href="#GetErrorManager()"><b>GetErrorManager</b></a>()
<dd>   Returns an interface that provides a way to catch Knowledge errors raised by methods (syntaxic or evaluation error).
 <dt> o 
    <a href="#GetFactory(CATIParmPublisher_var&amp;)"><b>GetFactory</b></a>(CATIParmPublisher_var&amp;)
<dd>   Services equivalent to CATIParmPublisher::GetFactory.
 <dt> o 
    <a href="#GetFunctionFactory()"><b>GetFunctionFactory</b></a>()
<dd>   Returns the factory of knowledge functions.
 <dt> o 
    <a href="#GetModelServices()"><b>GetModelServices</b></a>()
<dd>   Returns an interface that provides services on Knowledge Modeler.
 <dt> o 
    <a href="#GetParmDictionary()"><b>GetParmDictionary</b></a>()
<dd>   Returns the dictionary of types of values.
 <dt> o 
    <a href="#GetScalesServices()"><b>GetScalesServices</b></a>()
<dd>   Returns the interface providing some services about design range (model scale) services
 
 <dt> o 
    <a href="#GetVolatileFactory()"><b>GetVolatileFactory</b></a>()
<dd>   Returns the volatile factory of values (that generates volatile values).
 <dt> o 
    <a href="#InitializeLiteralsEnvironment()"><b>InitializeLiteralsEnvironment</b></a>()
<dd>  Initializes the magnitude and unit dictionary.
 <dt> o 
    <a href="#RemoveElement(CATIParmPublisher_var&amp;,CATBaseUnknown_var&amp;)"><b>RemoveElement</b></a>(CATIParmPublisher_var&amp;,CATBaseUnknown_var&amp;)
<dd>   Services equivalent to CATIParmPublisher::RemoveElement.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AppendElement"></a><a name="AppendElement(CATIParmPublisher_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>AppendElement</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AppendElement</b>(<td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iPublisher</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iObject</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Services equivalent to CATIParmPublisher::AppendElement.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPublisher</tt>
   <dd> the parameter publisher on which we will append the iObject. </dd>
    <dt><tt> iObject</tt>
   <dd> the aggregated object. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<a name="GetErrorManager"></a><a name="GetErrorManager()"></a> <dt> o <b>GetErrorManager</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATIKweErrorManager','CATIKweErrorManager_var')</script>  <b>GetErrorManager</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns an interface that provides a way to catch Knowledge errors raised by methods (syntaxic or evaluation error).
</dl>
<a name="GetFactory"></a><a name="GetFactory(CATIParmPublisher_var&amp;)"></a> <dt> o <b>GetFactory</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATICkeParmFactory','CATICkeParmFactory_var')</script>  <b>GetFactory</b>(<td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iPublisher</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
  Services equivalent to CATIParmPublisher::GetFactory.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPublisher</tt>
   <dd> the parameter publisher. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The factory.
</dl>
</dl>
<a name="GetFunctionFactory"></a><a name="GetFunctionFactory()"></a> <dt> o <b>GetFunctionFactory</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATICkeFunctionFactory','CATICkeFunctionFactory_var')</script>  <b>GetFunctionFactory</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the factory of knowledge functions.
</dl>
<a name="GetModelServices"></a><a name="GetModelServices()"></a> <dt> o <b>GetModelServices</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATIKweModelServices','CATIKweModelServices_var')</script>  <b>GetModelServices</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns an interface that provides services on Knowledge Modeler.
</dl>
<a name="GetParmDictionary"></a><a name="GetParmDictionary()"></a> <dt> o <b>GetParmDictionary</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATIParmDictionary','CATIParmDictionary_var')</script>  <b>GetParmDictionary</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the dictionary of types of values.
</dl>
<a name="GetScalesServices"></a><a name="GetScalesServices()"></a> <dt> o <b>GetScalesServices</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATICkeScalesServices','CATICkeScalesServices_var')</script>  <b>GetScalesServices</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the interface providing some services about design range (model scale) services
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the services interface handler
</dl>
</dl>
<a name="GetVolatileFactory"></a><a name="GetVolatileFactory()"></a> <dt> o <b>GetVolatileFactory</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATICkeParmFactory','CATICkeParmFactory_var')</script>  <b>GetVolatileFactory</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the volatile factory of values (that generates volatile values).
</dl>
<a name="InitializeLiteralsEnvironment"></a><a name="InitializeLiteralsEnvironment()"></a> <dt> o <b>InitializeLiteralsEnvironment</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>InitializeLiteralsEnvironment</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Initializes the magnitude and unit dictionary.<br>
 After this initialisation, it becomes possible to access to CATIParmDictionary and volatile and function factory.<br>
 In most scenarios, this intialization has already been performed. For example, it is performed when loading PLM data in the session.<br>
 This method can be called several times, it doesn't matter.
</dl>
<a name="RemoveElement"></a><a name="RemoveElement(CATIParmPublisher_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>RemoveElement</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveElement</b>(<td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iPublisher</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iObject</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Services equivalent to CATIParmPublisher::RemoveElement.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPublisher</tt>
   <dd> the parameter publisher on which we will remove the iObject. </dd>
    <dt><tt> iObject</tt>
   <dd> the to be removed object. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  classic HRESULT
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCkeGlobalFunctions.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

