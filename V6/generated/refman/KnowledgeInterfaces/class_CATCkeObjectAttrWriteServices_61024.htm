<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Class CATCkeObjectAttrWriteServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATCkeObjectAttrWriteServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces <script type="text/javascript" > writeClassCharacteristic(); </script> CATCkeObjectAttrWriteServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATCkeObjectAttrWriteServices_61024','CATCkeObjectAttrWriteServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATCkeObjectAttrWriteServices</b>
</p>
<p>
<b><i> Services to easily write attribute values on a Knowledge object.</i></b><br>
<br>
 <b>Role</b>: A Knowledge object implements CATICkeObject. These services enable to valuate its attributes values.<br>
 Note also that if the object does not publish its attributes it CAA (CATICkeObject::IsPublic), those services do not work.<br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIValue','','CATIValue') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeObject','','CATICkeObject') </script>, <script type="text/javascript"> activateLinkAnchor('CATCkeObjectAttrReadServices','','CATCkeObjectAttrReadServices') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateListOfValuesFromListOfStrings(CATIType_var&amp;,CATListOfCATUnicodeString*,CATListOfCATUnicodeString*,CATLISTV(CATICkeParm_var)&amp;)"><b>CreateListOfValuesFromListOfStrings</b></a>(CATIType_var&amp;,CATListOfCATUnicodeString*,CATListOfCATUnicodeString*,CATLISTV(CATICkeParm_var)&amp;)
<dd>  To prepare valuation of attributes from the explicit PLM factories we provide a service to create a list of Values from a list of type/attribute name and attribute value written as a string .
 <dt> o 
    <a href="#CreateValueFromString(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)"><b>CreateValueFromString</b></a>(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)
<dd>  To prepare valuation of attributes from the explicit PLM factories we provide a service to create a Value from a type/attribute name and attribute value written as a string .
 <dt> o 
    <a href="#SetValue(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)"><b>SetValue</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)
<dd>  Sets the value of an attribute in a generic manner (as a value) .
 <dt> o 
    <a href="#SetValueWithBoolean(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean)"><b>SetValueWithBoolean</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean)
<dd>  Sets the value of an attribute as a boolean .
 <dt> o 
    <a href="#SetValueWithInteger(CATICkeObject_var&amp;,CATUnicodeString&amp;,int)"><b>SetValueWithInteger</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,int)
<dd>  Sets the value of an attribute as an integer .
 <dt> o 
    <a href="#SetValueWithReal(CATICkeObject_var&amp;,CATUnicodeString&amp;,double)"><b>SetValueWithReal</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,double)
<dd>  Sets the value of an attribute as a double .
 <dt> o 
    <a href="#SetValueWithString(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>SetValueWithString</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Sets the value of an attribute as a string .
 <dt> o 
    <a href="#SetValueWithTime(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATTime&amp;)"><b>SetValueWithTime</b></a>(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATTime&amp;)
<dd>  Sets the value of an attribute as a time .
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateListOfValuesFromListOfStrings"></a><a name="CreateListOfValuesFromListOfStrings(CATIType_var&amp;,CATListOfCATUnicodeString*,CATListOfCATUnicodeString*,CATLISTV(CATICkeParm_var)&amp;)"></a> <dt> o <b>CreateListOfValuesFromListOfStrings</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateListOfValuesFromListOfStrings</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>piListAttributeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>piListValueAsString</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATICkeParm_var)','CATLISTV(CATICkeParm_var)&amp;')</script> <td><tt>oListOfValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 To prepare valuation of attributes from the explicit PLM factories we provide a service to create a list of Values from a list of type/attribute name and attribute value written as a string .<br>
 Note that this services only eases the creation of a CATIValue. It does not take into account information hold by the attribute like default value and so forth.<br>
 This service will work on basic values (boolean, string, integer, real, dimensions, enumerated values. It does not work on Lists.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> Knowledge type
 </dd>
    <dt><tt> piListAttributeName</tt>
   <dd> List containing names of the attribute
 </dd>
    <dt><tt> piListValueAsString</tt>
   <dd> List containing Value as a string to create the attribute. If you give "", we will create a parameter with default value<br>.
 The two list must have same size.
 </dd>
    <dt><tt> oListOfValue</tt>
   <dd> List that will be filled by the service. We do not empty the list at the beginning so that you can use the service several time.<br>
 In case of error for one element, we won't fill the list
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the creation of one of the values has failed (bad attribute regarding to type, or string cannot be converted).
 	 <li> S_OK	if the value has been successfully created.
 	 <li> E_FAIL otherwise.
  </ol>
</dl>
</dl>
<a name="CreateValueFromString"></a><a name="CreateValueFromString(CATIType_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>CreateValueFromString</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateValueFromString</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iValueAsString</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 To prepare valuation of attributes from the explicit PLM factories we provide a service to create a Value from a type/attribute name and attribute value written as a string .<br>
 Note that this services only eases the creation of a CATIValue. It does not take into account information hold by the attribute like default value and so forth.<br>
 This service will work on basic values (boolean, string, integer, real, dimensions, enumerated values. It does not work on Lists.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> Knowledge type
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute
 </dd>
    <dt><tt> iValueAsString</tt>
   <dd> Value as a string to create the attribute. If you give "", we will create a parameter with default value
 </dd>
    <dt><tt> oValue</tt>
   <dd> Value in output
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the creation of the value has failed (bad attribute regarding to type, or string cannot be converted.
 	 <li> S_OK	if the value has been successfully created.	 
 	 <li> E_FAIL otherwise.
  </ol>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of an attribute in a generic manner (as a value) .<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to write an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> iValue</tt>
   <dd> Value that we want to use to set the attribute value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the valuation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> E_ACCESSDENIED if the valuation has failed (read only attribute, object not editable).
 	 <li> S_OK	if the attribute has been set successfully.
 	 <li> E_FAIL otherwise.
  </ol>
</dl>
</dl>
<a name="SetValueWithBoolean"></a><a name="SetValueWithBoolean(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATBoolean)"></a> <dt> o <b>SetValueWithBoolean</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValueWithBoolean</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iValBoolean</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of an attribute as a boolean .Works only on boolean attributes<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to write an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> iValBoolean</tt>
   <dd> Value that we want to use to set the attribute value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the valuation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> E_ACCESSDENIED if the valuation has failed (read only attribute, object not editable).
 	 <li> S_OK	if the attribute has been set successfully.
 	 <li> E_FAIL otherwise.
  </ol>
</dl>
</dl>
<a name="SetValueWithInteger"></a><a name="SetValueWithInteger(CATICkeObject_var&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>SetValueWithInteger</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValueWithInteger</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iValInt</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of an attribute as an integer . Works on Integer, Real, Dimensioned attributes.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to write an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> iValInt</tt>
   <dd> Value that we want to use to set the attribute value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the valuation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> E_ACCESSDENIED if the valuation has failed (read only attribute, object not editable).
 	 <li> S_OK	if the attribute has been set successfully.
 	 <li> E_FAIL otherwise.
  </ol>
</dl>
</dl>
<a name="SetValueWithReal"></a><a name="SetValueWithReal(CATICkeObject_var&amp;,CATUnicodeString&amp;,double)"></a> <dt> o <b>SetValueWithReal</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValueWithReal</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iValReal</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of an attribute as a double .Works on Integer, Real, Dimensioned attributes. Note that attributes defined as dimensions must be written as a double.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to write an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> iValReal</tt>
   <dd> Value that we want to use to set the attribute value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the valuation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> E_ACCESSDENIED if the valuation has failed (read only attribute, object not editable).
 	 <li> S_OK	if the attribute has been set successfully.
 	 <li> E_FAIL otherwise.
  </ol>
</dl>
</dl>
<a name="SetValueWithString"></a><a name="SetValueWithString(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetValueWithString</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValueWithString</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iValString</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of an attribute as a string . Works on String and enumerated attributes.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to write an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> iValString</tt>
   <dd> Value that we want to use to set the attribute value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the valuation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> E_ACCESSDENIED if the valuation has failed (read only attribute, object not editable).
 	 <li> S_OK	if the attribute has been set successfully.
 	 <li> E_FAIL otherwise.
  </ol>
</dl>
</dl>
<a name="SetValueWithTime"></a><a name="SetValueWithTime(CATICkeObject_var&amp;,CATUnicodeString&amp;,CATTime&amp;)"></a> <dt> o <b>SetValueWithTime</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValueWithTime</b>(<td> const <script type="text/javascript"> activateLink('CATICkeObject_var','CATICkeObject_var&amp;')</script> <td><tt>iObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAttributeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTime','CATTime&amp;')</script> <td><tt>iValTime</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of an attribute as a time .Works only on Date attributes<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> Knowledge object on which we want to write an attribute.
 </dd>
    <dt><tt> iAttributeName</tt>
   <dd> Name of the attribute in the Knowledge dictionary (internal name)
 </dd>
    <dt><tt> iValTime</tt>
   <dd> Value that we want to use to set the attribute value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ol>
 	 <li> E_INVALIDARG if the valuation has failed (attribute non existing on object, attribute of a bad type).
 	 <li> E_ACCESSDENIED if the valuation has failed (read only attribute, object not editable).
 	 <li> S_OK	if the attribute has been set successfully.
 	 <li> E_FAIL otherwise.
  </ol>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCkeObjectAttrWriteServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

