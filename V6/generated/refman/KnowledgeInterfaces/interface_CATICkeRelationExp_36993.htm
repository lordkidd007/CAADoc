<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeRelationExp</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeRelationExp"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeRelationExp</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeRelationExp_36993','CATICkeRelationExp','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeRelationExp</b>
</p>
<p>
<b><i>    Interface dedicated to Knowledge relations with textual body management (formulas/Checks/Rules).</i></b><br>

 <b>Role</b>: An expressional relation is a relation whose links between parameters is defined 
 by a language contained in a text.<br>
 - Formulas valuate one parameter from several ones.<br>
 - Rules valuate several parameters from several ones.<br>
 - Checks use several parameters in input and produces a diagnosis.<br>
 - Set of equations use several parameters from several ones.
 This interface is implemented on those 3 objects<br>
 This interface is multi implemented.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeRelation','','CATICkeRelation') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Body(CATCke::Boolean&amp;,CATIParmPublisher_var&amp;)"><b>Body</b></a>(CATCke::Boolean&amp;,CATIParmPublisher_var&amp;)
<dd>  Get the relations body.
 <dt> o 
    <a href="#CatchEvaluationError(int)"><b>CatchEvaluationError</b></a>(int)
<dd>  Defines if the relation will catch evaluation error.
 <dt> o 
    <a href="#CheckMagnitude()"><b>CheckMagnitude</b></a>()
<dd>  Checks magnitude coherence.
 <dt> o 
    <a href="#IsEvaluationErrorCatched()"><b>IsEvaluationErrorCatched</b></a>()
<dd>  Indicates if an evaluation error has been caught.
 <dt> o 
    <a href="#Modify(CATCkeListOfParm,CATUnicodeString&amp;,CATIParmPublisher_var&amp;,CATCke::Boolean&amp;)"><b>Modify</b></a>(CATCkeListOfParm,CATUnicodeString&amp;,CATIParmPublisher_var&amp;,CATCke::Boolean&amp;)
<dd>  Modifies the body and the list of parameters.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Body"></a><a name="Body(CATCke::Boolean&amp;,CATIParmPublisher_var&amp;)"></a> <dt> o <b>Body</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>Body</b>(<td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean&amp;')</script> <td><tt>iReCompute</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iRoot</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the relations body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iReCompute</tt>
   <dd> true if body is to be recomputed </dd>
    <dt><tt>  iRoot</tt>
   <dd> used to name parameters with RelativeName (root) method  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  body
</dl>
</dl>
<a name="CatchEvaluationError"></a><a name="CatchEvaluationError(int)"></a> <dt> o <b>CatchEvaluationError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CatchEvaluationError</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>yes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines if the relation will catch evaluation error.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> yes</tt>
   <dd>	equal true if you want to catch evaluation error</dd>
</dl>
</dl>
</dl>
<a name="CheckMagnitude"></a><a name="CheckMagnitude()"></a> <dt> o <b>CheckMagnitude</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>CheckMagnitude</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Checks magnitude coherence.<br> 
 This method may raise syntax errors (CATCkeErrorMKS). No ability to catch them in CAA.<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: the test can be either <tt>CATCke::True</tt> if magnitude coherence is Ok
 <tt>CATCke::False</tt> if it isn't.
</dl>
</dl>
<a name="IsEvaluationErrorCatched"></a><a name="IsEvaluationErrorCatched()"></a> <dt> o <b>IsEvaluationErrorCatched</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsEvaluationErrorCatched</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if an evaluation error has been caught.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd> 	1 if true , else 0
</dl>
</dl>
<a name="Modify"></a><a name="Modify(CATCkeListOfParm,CATUnicodeString&amp;,CATIParmPublisher_var&amp;,CATCke::Boolean&amp;)"></a> <dt> o <b>Modify</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>Modify</b>(<td> const <script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script> <td><tt>iListParameters</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBody</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iRoot</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean&amp;')</script> <td><tt>iRealnames</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the body and the list of parameters.<br>
 Watch out: to use this service, you need to have the Knowledge Advisor license at runtime for rules, check, set of equation edition.<br> 
 This method may raise syntax error (CATCkeParseException). No ability to catch them in CAA.<br>
 This method may raise evaluation error (CATLifEvaluationError). No ability to catch them in CAA.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iListParameters</tt>
   <dd> list of parameters that can be used in the body </dd>
    <dt><tt>  iBody</tt>
   <dd> string describing the body </dd>
    <dt><tt>  iRoot</tt>
   <dd> used to name parameters with RelativeName (root) method <br>                     and so to be able to recognize parameters by their name<br>
                     Not used in realnames = false mode<br>
 </dd>
    <dt><tt> iRealnames</tt>
   <dd>  = 2 possibilities to name a parameter in the body. <br><b>Legal values</b>:
 <tt>CATCke::True</tt> names used are the one returned by RelativeName (root) and we try to recognize names used in the body with parameters of iListParameters..
 <tt>CATCke::False</tt> names used are a1,a2,a3,etc...<br>
                        a1 meaning the first parameter of iListParameters, a2, the second one, etc....<br>
 We advise you strongly to use this second method in your application to avoid NLS problems . 
 <p>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  true if parse OK, false instead.<br> if a syntax error occurs, a CATCkeParseException exception is raised in realname=true
 else a CATLifError is "raised" that you can catch with CATLifErrorManager services
 The parameters referenced must be in the same container as the relation. This rule will be enforced in future releases to allow the definition 
 of only supported models
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeRelationExp.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

