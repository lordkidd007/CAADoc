<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeParmFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeParmFactory"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeParmFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeParmFactory_37134','CATICkeParmFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeParmFactory</b>
</p>
<p>
<b><i>    Interface dedicated to parameters factory.</i></b><br>

 <b>Role</b>: This interface helps you to create parameters.<br>
 WATCH OUT : <br>
 Dont forget to Initialise Literals environnement on the<br> 
 Literals.feat catalog before any kind of work with parameters<br>
 This interface is implemented on any Feature containers: thus it creates persistant parameters.<br>
 It is also implemented on a volatile static object (CATCKEVolatileFactory): thus it creates volatile parameters.<br>
   <br>
     Usage :<br>
 //////////////////////////////////////////////////////////////////////////<br>
<br>
      #include "CATCke.h"<br>

      #include "CATICkeUnit.h"<br>
      #include "CATICkeMKSUnit.h"<br>
      #include "CATICkeMagnitude.h"<br>
      #include "CATICkeParmFactory.h"<br>
      #include "CATICkeParm.h"<br>

      //------------------------------------------------<br>
      // Get this factory from your feat container<br>
      // to create features (persistent)  <br>
      //------------------------------------------------<br>
      CATICkeParmFactory_var fact = cont; <br>
 <br>
      //------------------------------------------------<br>
      // Or use the Volatile factory<br>
      //------------------------------------------------<br>
      CATICkeParmFactory_var fact = CATCKEVolatileFactory; <br>
     <br>
      //------------------------------------------------<br>
      // you can create parameters<br>
      //------------------------------------------------<br>
      CATICkeParm_var p1 = fact->CreateLength ("L",3.3);<br>
<br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICkeMagnitude','','CATICkeMagnitude') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeUnit','','CATICkeUnit') </script>, <script type="text/javascript"> activateLinkAnchor('CATIEnumere','','CATIEnumere') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeParm','','CATICkeParm') </script>, <script type="text/javascript"> activateLinkAnchor('CATICkeRelation','','CATICkeRelation') </script>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Copy(CATICkeParm_var&amp;,CATCke::Boolean&amp;)"><b>Copy</b></a>(CATICkeParm_var&amp;,CATCke::Boolean&amp;)
<dd>  Creates a literal from another by copying its value.
 <dt> o 
    <a href="#CreateAngle(CATUnicodeString&amp;,double)"><b>CreateAngle</b></a>(CATUnicodeString&amp;,double)
<dd>  Creates angle parameter.
 <dt> o 
    <a href="#CreateBoolean(CATUnicodeString&amp;,CATCke::Boolean)"><b>CreateBoolean</b></a>(CATUnicodeString&amp;,CATCke::Boolean)
<dd>  Creates boolean parameter.
 <dt> o 
    <a href="#CreateDate(CATUnicodeString&amp;,CATTime&amp;)"><b>CreateDate</b></a>(CATUnicodeString&amp;,CATTime&amp;)
<dd>  Creates a date parameter.
 <dt> o 
    <a href="#CreateDimension(CATICkeMagnitude_var&amp;,CATUnicodeString&amp;,double)"><b>CreateDimension</b></a>(CATICkeMagnitude_var&amp;,CATUnicodeString&amp;,double)
<dd>  Creates dimension parameter.
 <dt> o 
    <a href="#CreateDimension(CATICkeMagnitude_var&amp;,CATUnicodeString&amp;,CATICkeInst_var&amp;)"><b>CreateDimension</b></a>(CATICkeMagnitude_var&amp;,CATUnicodeString&amp;,CATICkeInst_var&amp;)
<dd>  Creates dimension parameter.
 <dt> o 
    <a href="#CreateEnumere(CATIEnumere_var&amp;,CATUnicodeString&amp;,int)"><b>CreateEnumere</b></a>(CATIEnumere_var&amp;,CATUnicodeString&amp;,int)
<dd>  Creates an enumerated parameter from rank name (1 to n).
 <dt> o 
    <a href="#CreateEnumere(CATIEnumere_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>CreateEnumere</b></a>(CATIEnumere_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Creates an enumerated parameter from value.
 <dt> o 
    <a href="#CreateInteger(CATUnicodeString&amp;,int)"><b>CreateInteger</b></a>(CATUnicodeString&amp;,int)
<dd>  Creates integer parameter.
 <dt> o 
    <a href="#CreateLength(CATUnicodeString&amp;,double)"><b>CreateLength</b></a>(CATUnicodeString&amp;,double)
<dd>  Creates length parameter.
 <dt> o 
    <a href="#CreateList(CATUnicodeString&amp;)"><b>CreateList</b></a>(CATUnicodeString&amp;)
<dd>  Creates a List object.
 <dt> o 
    <a href="#CreateLiteral(CATICkeType_var&amp;,CATUnicodeString&amp;)"><b>CreateLiteral</b></a>(CATICkeType_var&amp;,CATUnicodeString&amp;)
<dd>  Creates a literal from its type.
 <dt> o 
    <a href="#CreateMKSUnit()"><b>CreateMKSUnit</b></a>()
<dd>  Creates a MKS Unit equivalent to a scalar.
 <dt> o 
    <a href="#CreateMKSUnit(CATICkeMKSUnit::Basic,int)"><b>CreateMKSUnit</b></a>(CATICkeMKSUnit::Basic,int)
<dd>  Creates a MKS Unit equivalent to a primitive magnitude.
 <dt> o 
    <a href="#CreateMKSUnit(int,int,int,int,int,int,int,int,int,int)"><b>CreateMKSUnit</b></a>(int,int,int,int,int,int,int,int,int,int)
<dd>  Creates a MKS Unit equivalent to a combination of primitive magnitude.
 <dt> o 
    <a href="#CreateMass(CATUnicodeString&amp;,double)"><b>CreateMass</b></a>(CATUnicodeString&amp;,double)
<dd>  Do not use it.
 <dt> o 
    <a href="#CreateObjectReference(CATBaseUnknown_var&amp;)"><b>CreateObjectReference</b></a>(CATBaseUnknown_var&amp;)
<dd>  Creates object reference.
 <dt> o 
    <a href="#CreateObjectReference(CATICkeType_var&amp;,CATUnicodeString&amp;)"><b>CreateObjectReference</b></a>(CATICkeType_var&amp;,CATUnicodeString&amp;)
<dd>  Creates an empty object reference of a given type.
 <dt> o 
    <a href="#CreateParmManipulator()"><b>CreateParmManipulator</b></a>()
<dd>  Creates a parm manipulator.
 <dt> o 
    <a href="#CreateReal(CATUnicodeString&amp;,double)"><b>CreateReal</b></a>(CATUnicodeString&amp;,double)
<dd>  Creates real parameter.
 <dt> o 
    <a href="#CreateString(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>CreateString</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Creates string parameter.
 <dt> o 
    <a href="#CreateTime(CATUnicodeString&amp;,double)"><b>CreateTime</b></a>(CATUnicodeString&amp;,double)
<dd>  Do not use it.
 <dt> o 
    <a href="#InitAndWakeUp()"><b>InitAndWakeUp</b></a>()
<dd>  Initialise Literals Catalog and wakes up all relations.
 <dt> o 
    <a href="#InitStartUps()"><b>InitStartUps</b></a>()
<dd>  Initialise LiteralFeatures environnement.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Copy"></a><a name="Copy(CATICkeParm_var&amp;,CATCke::Boolean&amp;)"></a> <dt> o <b>Copy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>Copy</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParameterToCopy</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean&amp;')</script> <td><tt>iWithFormula</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Creates a literal from another by copying its value.
 Note that at the end, the parameter is not aggregated.
 One option is to copy the existing formula that valuates the literal if any,<br>
 The formula is also not aggregated. It will reference the same input parameters as the original formula.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterToCopy</tt>
   <dd> parameter to copy </dd>
    <dt><tt> iWithFormula</tt>
   <dd> indicates if we wish to copy the formula (note that the formula copied won't be agregated to anything). <br><b>Legal values</b>: 
 <tt>0</tt> No copy of the formula.
 <tt>1</tt> Copy of the formula.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  literal copied
</dl>
</dl>
<a name="CreateAngle"></a><a name="CreateAngle(CATUnicodeString&amp;,double)"></a> <dt> o <b>CreateAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateAngle</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Creates angle parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value in MKS !!! (i.e. radian) In case of a persistent object, this parameter must be aggregated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateBoolean"></a><a name="CreateBoolean(CATUnicodeString&amp;,CATCke::Boolean)"></a> <dt> o <b>CreateBoolean</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateBoolean</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates boolean parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value In case of a persistent object, this parameter must be aggregated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateDate"></a><a name="CreateDate(CATUnicodeString&amp;,CATTime&amp;)"></a> <dt> o <b>CreateDate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateDate</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTime','CATTime&amp;')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a date parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value in MKS !!! (i.e. radian) In case of a persistent object, this parameter must be aggregated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateDimension"></a><a name="CreateDimension(CATICkeMagnitude_var&amp;,CATUnicodeString&amp;,double)"></a> <dt> o <b>CreateDimension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateDimension</b>(<td> const <script type="text/javascript"> activateLink('CATICkeMagnitude_var','CATICkeMagnitude_var&amp;')</script> <td><tt>iMagnitude</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Creates dimension parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMagnitude</tt>
   <dd> parameters type </dd>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value in MKS !!!  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateDimension"></a><a name="CreateDimension(CATICkeMagnitude_var&amp;,CATUnicodeString&amp;,CATICkeInst_var&amp;)"></a> <dt> o <b>CreateDimension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateDimension</b>(<td> const <script type="text/javascript"> activateLink('CATICkeMagnitude_var','CATICkeMagnitude_var&amp;')</script> <td><tt>iMagnitude</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeInst_var','CATICkeInst_var&amp;')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Creates dimension parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMagnitude</tt>
   <dd> parameters type </dd>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateEnumere"></a><a name="CreateEnumere(CATIEnumere_var&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>CreateEnumere</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateEnumere</b>(<td> const <script type="text/javascript"> activateLink('CATIEnumere_var','CATIEnumere_var&amp;')</script> <td><tt>iEnumereType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iParameterRank</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an enumerated parameter from rank name (1 to n).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEnumereType</tt>
   <dd> enumerated type  </dd>
    <dt><tt> iParameterName</tt>
   <dd> parameter name </dd>
    <dt><tt> iParameterRank</tt>
   <dd> parameter rank (from 1 to n) </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateEnumere"></a><a name="CreateEnumere(CATIEnumere_var&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CreateEnumere</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateEnumere</b>(<td> const <script type="text/javascript"> activateLink('CATIEnumere_var','CATIEnumere_var&amp;')</script> <td><tt>iEnumereType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an enumerated parameter from value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEnumereType</tt>
   <dd> enumerated type  </dd>
    <dt><tt> iParameterName</tt>
   <dd> parameter name </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateInteger"></a><a name="CreateInteger(CATUnicodeString&amp;,int)"></a> <dt> o <b>CreateInteger</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateInteger</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates integer parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd>  parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value In case of a persistent object, this parameter must be aggregated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateLength"></a><a name="CreateLength(CATUnicodeString&amp;,double)"></a> <dt> o <b>CreateLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateLength</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates length parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value in MKS !!! (i.e. meters) In case of a persistent object, this parameter must be aggregated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateList"></a><a name="CreateList(CATUnicodeString&amp;)"></a> <dt> o <b>CreateList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIList','CATIList_var')</script>  <b>CreateList</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a List object.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> name of the list. The object must be aggregated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  list created
</dl>
</dl>
<a name="CreateLiteral"></a><a name="CreateLiteral(CATICkeType_var&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CreateLiteral</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateLiteral</b>(<td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iParameterType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a literal from its type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterType</tt>
   <dd> parameter type </dd>
    <dt><tt> iParameterName</tt>
   <dd> parameter name </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateMKSUnit"></a><a name="CreateMKSUnit()"></a> <dt> o <b>CreateMKSUnit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeMKSUnit','CATICkeMKSUnit_var')</script>  <b>CreateMKSUnit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a MKS Unit equivalent to a scalar.
 This is a C++ object in any case.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  pMKS equivalent created
</dl>
</dl>
<a name="CreateMKSUnit"></a><a name="CreateMKSUnit(CATICkeMKSUnit::Basic,int)"></a> <dt> o <b>CreateMKSUnit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeMKSUnit','CATICkeMKSUnit_var')</script>  <b>CreateMKSUnit</b>(<td> const <script type="text/javascript"> activateLink('CATICkeMKSUnit::Basic','CATICkeMKSUnit::Basic')</script> <td><tt>iBasicMagnitude</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCoeff</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a MKS Unit equivalent to a primitive magnitude.<br>
 (example m2, s-1).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBasicMagnitude</tt>
   <dd> primitive magnitude </dd>
    <dt><tt> iCoeff</tt>
   <dd> exponent </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATICkeMKSUnit_var  MKSUnit created This is a C++ object in any case.
</dl>
</dl>
<a name="CreateMKSUnit"></a><a name="CreateMKSUnit(int,int,int,int,int,int,int,int,int,int)"></a> <dt> o <b>CreateMKSUnit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeMKSUnit','CATICkeMKSUnit_var')</script>  <b>CreateMKSUnit</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMeterCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKilogramCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSecondCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAmperCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iTemperatureCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCandelaCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMoleNumberCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPriceCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRadianCoeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSteradianCoeff</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a MKS Unit equivalent to a combination of primitive magnitude.<br>
 (example kgxs-2)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMeterCoeff</tt>
   <dd> exponent for length </dd>
    <dt><tt> iKilogramCoeff</tt>
   <dd> exponent for mass </dd>
    <dt><tt> iSecondCoeff</tt>
   <dd> exponent for time </dd>
    <dt><tt> iAmperCoeff</tt>
   <dd> exponent for amper </dd>
    <dt><tt> iTemperatureCoeff</tt>
   <dd> exponent for temperature </dd>
    <dt><tt> iCandelaCoeff</tt>
   <dd> exponent for candela </dd>
    <dt><tt> iMoleNumberCoeff</tt>
   <dd> exponent for mole number </dd>
    <dt><tt> iPriceCoeff</tt>
   <dd> exponent for price </dd>
    <dt><tt> iRadianCoeff</tt>
   <dd> exponent for radian </dd>
    <dt><tt> iSteradianCoeff</tt>
   <dd> exponent for steradian This is a C++ object in any case.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  pMKS equivalent created
</dl>
</dl>
<a name="CreateMass"></a><a name="CreateMass(CATUnicodeString&amp;,double)"></a> <dt> o <b>CreateMass</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateMass</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Do not use it. Use CreateDimension (CATParmDictionary::FindMagnitude("MASS")) instead
 Creates mass parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value in MKS !!! (i.e. gram) </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateObjectReference"></a><a name="CreateObjectReference(CATBaseUnknown_var&amp;)"></a> <dt> o <b>CreateObjectReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateObjectReference</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iFeature</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates object reference.<br>
 An object reference is a way to see an object as a parameter in order to use it in Knowledge expressions or Knowledge relations,<br>
 Such an object reference can only be used in input of Knowledgeware relations or expressions.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFeature</tt>
   <dd> feature to be referenced : should implement </dd>
<script type="text/javascript"> activateLinkAnchor('CATICkeFeature','','CATICkeFeature') </script> or @hret CATICkeObject. 
  <dt> <b>Returns:</b> 
  <dd>  CATICkeParm_var object reference created
</dl>
</dl>
</dl>
<a name="CreateObjectReference"></a><a name="CreateObjectReference(CATICkeType_var&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CreateObjectReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateObjectReference</b>(<td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an empty object reference of a given type.<br>
 We recommend not to use this method.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> type of the object reference </dd>
    <dt><tt> iName</tt>
   <dd> name of the object reference </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateParmManipulator"></a><a name="CreateParmManipulator()"></a> <dt> o <b>CreateParmManipulator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIParmManipulator','CATIParmManipulator_var')</script>  <b>CreateParmManipulator</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a parm manipulator. This manipulator will not change the persistent parameters range.
 This method is used to build a manipulator that will block temporarily the user manipulations.
 In no case this manipulator will change the persistent bounds of the parameter.
 If you want to persistently change the bounds of the parameter refer to the CATICkeParm interface.
 <br>
 Use only on Volatile Factory.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter manipulator created
</dl>
</dl>
<a name="CreateReal"></a><a name="CreateReal(CATUnicodeString&amp;,double)"></a> <dt> o <b>CreateReal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateReal</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates real parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value In case of a persistent object, this parameter must be aggregated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateString"></a><a name="CreateString(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CreateString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateString</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates string parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value In case of a persistent object, this parameter must be aggregated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="CreateTime"></a><a name="CreateTime(CATUnicodeString&amp;,double)"></a> <dt> o <b>CreateTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreateTime</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iParameterName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParameterValue</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Do not use it. Use CreateDimension (CATParmDictionary::FindMagnitude("TIME")) instead
 Creates time parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterName</tt>
   <dd> parameter name (never changed) </dd>
    <dt><tt> iParameterValue</tt>
   <dd> parameter value in MKS !!! (i.e. second) </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  parameter created
</dl>
</dl>
<a name="InitAndWakeUp"></a><a name="InitAndWakeUp()"></a> <dt> o <b>InitAndWakeUp</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>InitAndWakeUp</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Initialise Literals Catalog and wakes up all relations.<br>
 Should be done when creating a new container or loading it.<br>
 This method replaces InitStartups. It loads the Literals.feat catalog and does InitStartups on it.<br>
 This should be used on the feature container where relations have been stored.<br>
</dl>
<a name="InitStartUps"></a><a name="InitStartUps()"></a> <dt> o <b>InitStartUps</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>InitStartUps</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Initialise LiteralFeatures environnement.<br>
 It finds all startups needed in this container.<br>
 This method should be used on Literals.feat catalog container only.
</dl>
<hr>
 This object is included in the file: <b>CATICkeParmFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

