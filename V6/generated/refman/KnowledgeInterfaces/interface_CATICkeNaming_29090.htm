<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeNaming</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../KnowledgeInterfaces.htm" href="../KnowledgeInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "KnowledgeInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATICkeNaming"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>KnowledgeInterfaces Interface CATICkeNaming</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeNaming_29090','CATICkeNaming','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeNaming</b>
</p>
<p>
<b><i>     Interface dedicated to Knowledge relations naming.</i></b><br>
 
  <b>Role</b>: Parameters can be valuated by such an object.<br>
  It is implemented on relations.<br>
  The name is used to be shown to a user (it can be changed by user)<br>
  The comment gives an explanation of it (it can be changed by user)<br>
  The type of the object can not be changed<br></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#IsConst()"><b>IsConst</b></a>()
<dd>  Indicates if this object is const or not.
 <dt> o 
    <a href="#IsHidden()"><b>IsHidden</b></a>()
<dd>  Is this object hidden or shown.
 <dt> o 
    <a href="#SetConst(CATCke::Boolean)"><b>SetConst</b></a>(CATCke::Boolean)
<dd>  Sets Const facet.
 <dt> o 
    <a href="#SetHidden(CATCke::Boolean)"><b>SetHidden</b></a>(CATCke::Boolean)
<dd>  Sets HideShow facet.
 <dt> o 
    <a href="#SetUserAccess(CATICkeNaming::UserAccessMode)"><b>SetUserAccess</b></a>(CATICkeNaming::UserAccessMode)
<dd>  Sets the rights on this naming object.
 <dt> o 
    <a href="#Type()"><b>Type</b></a>()
<dd>  Returns the type of this object.
 <dt> o 
    <a href="#UserAccess()"><b>UserAccess</b></a>()
<dd>  Returns the rights on this naming object.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#UserAccessMode"><b>UserAccessMode</b></a>
<dd>  Rights defined on a naming object.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="IsConst"></a><a name="IsConst()"></a> <dt> o <b>IsConst</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsConst</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if this object is const or not.
 Default value is always not Const 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <b>Legal values</b>: <tt>CATCke::True</tt> if it is constant
 <tt>CATCke::False</tt> if it isn't.
</dl>
</dl>
<a name="IsHidden"></a><a name="IsHidden()"></a> <dt> o <b>IsHidden</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsHidden</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Is this object hidden or shown.
 Default value is always Shown<br> 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: 
 <tt>CATCke::True</tt> if it is hidden
 <tt>CATCke::False</tt> if it isn't.
</dl>
</dl>
<a name="SetConst"></a><a name="SetConst(CATCke::Boolean)"></a> <dt> o <b>SetConst</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetConst</b>(<td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>iConstant</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets Const facet.
 Default value is always not Const 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConstant</tt>
   <dd> <b>Legal values</b>:
 <tt>CATCke::True</tt> if it is constant
 <tt>CATCke::False</tt> if it isn't.</dd>
</dl>
</dl>
</dl>
<a name="SetHidden"></a><a name="SetHidden(CATCke::Boolean)"></a> <dt> o <b>SetHidden</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetHidden</b>(<td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>iHidden</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets HideShow facet.
 Default value is always Shown
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHidden</tt>
   <dd> <br><b>Legal values</b>:  <tt>CATCke::True</tt> if it is hidden
 <tt>CATCke::False</tt> if it isn't.</dd>
</dl>
</dl>
</dl>
<a name="SetUserAccess"></a><a name="SetUserAccess(CATICkeNaming::UserAccessMode)"></a> <dt> o <b>SetUserAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetUserAccess</b>(<td> const <script type="text/javascript"> activateLink('CATICkeNaming::UserAccessMode','CATICkeNaming::UserAccessMode')</script> <td><tt>iRights</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the rights on this naming object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRights:</tt>
   <dd> the rights <br><b>Legal values</b>:
 <tt>NotSeen</tt> this relation is not seen by the user.
 <tt>ReadOnly</tt> Default value : the relation will be seen but wont be modified
 <tt>ReadWrite</tt>   the relation object can be modified, deactivated
 <tt>User</tt> the relation can be modified or destroyed by end user</dd>
</dl>
</dl>
</dl>
<a name="Type"></a><a name="Type()"></a> <dt> o <b>Type</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>Type</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of this object.
</dl>
<a name="UserAccess"></a><a name="UserAccess()"></a> <dt> o <b>UserAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeNaming::UserAccessMode','CATICkeNaming::UserAccessMode')</script>  <b>UserAccess</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the rights on this naming object.  
 <br><b>Legal values</b>:
 <tt>NotSeen</tt> this relation is not seen by the user.
 <tt>ReadOnly</tt> Default value : the relation will be seen but wont be modified
 <tt>ReadWrite</tt>   the relation object can be modified, deactivated
 <tt>User</tt> the relation can be modified or destroyed by end user
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="UserAccessMode"> <dt> o <b>UserAccessMode</b>
<dl>
  <dd>
<pre>
enum <b>UserAccessMode</b> {
  NotSeen,
  ReadOnly,
  ReadWrite,
  User
}
</pre>
 Rights defined on a naming object.
 Used to define how this object can be used through Knowledgeware.<br>
 <br><b>Legal values</b>:
 <tt>NotSeen</tt> this relation is not seen by the user.
 <tt>ReadOnly</tt> Default value : the relation will be seen but wont be modified
 <tt>ReadWrite</tt>   the relation object can be modified, deactivated
 <tt>User</tt> the relation can be modified or destroyed by end user
 <tt>LockType</tt> the Type of Feature accepted in the list can not be modified or destroyed by end user
</dl>
<hr>
 This object is included in the file: <b>CATICkeNaming.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

