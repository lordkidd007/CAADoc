<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DataCommonProtocolUse Class DataCommonProtocolCCPServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../DataCommonProtocolUse.htm" href="../DataCommonProtocolUse.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "DataCommonProtocolUse";	}
		function getCurrentObjectName() { 
 	return "DataCommonProtocolCCPServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>DataCommonProtocolUse <script type="text/javascript" > writeClassCharacteristic(); </script> DataCommonProtocolCCPServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_DataCommonProtocolCCPServices_64052','DataCommonProtocolCCPServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>DataCommonProtocolCCPServices</b>
</p>
<p>
<b><i> Generic Copy and Paste services that operate on all objets implementing CATICutAndPastable interface.</i></b><br>

 For more specific details, please refer to the documentation of each entity.
 These services provide the same functionalities as the Edit -> Copy, Edit -> Paste and
 Edit -> Paste special in interactive application. They use the clipboard like the interactive commands,
 but flush the clipboard when done. Consequently, all data present in the clipboard is lost when one of
 theses services is called.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATICutAndPastable','','CATICutAndPastable') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CopyAndPasteSpecialTo(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"><b>CopyAndPasteSpecialTo</b></a>(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Copy and Paste special of entities.
 <dt> o 
    <a href="#CopyAndPasteTo(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATListValCATBaseUnknown_var&amp;)"><b>CopyAndPasteTo</b></a>(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATListValCATBaseUnknown_var&amp;)
<dd>  Copy and Paste of entities.
 <dt> o 
    <a href="#GetAvailableFormats(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATListOfCATUnicodeString&amp;)"><b>GetAvailableFormats</b></a>(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATListOfCATUnicodeString&amp;)
<dd>  Returns the list of available Paste special Formats.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CopyAndPasteSpecialTo"></a><a name="CopyAndPasteSpecialTo(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATUnicodeString&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>CopyAndPasteSpecialTo</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CopyAndPasteSpecialTo</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iEntitiesToCopy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iPasteTarget</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFormat</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oNewEntities</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy and Paste special of entities.
 <br><b>Role:</b> copies entities like Edit -> Paste special in interactive applications.
 <br>If the first Format in the list of available Paste special Formats (i.e. default the Format) is used
 this service will behave exactly as 
<script type="text/javascript"> activateLinkAnchor('','CopyAndPasteTo','CopyAndPasteTo') </script> service. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEntitiesToCopy</tt>
   <dd>   The entity on which the paste is done (the selected object when using Edit -> Paste interactively).
 </dd>
    <dt><tt> iPasteTarget</tt>
   <dd>   A path representing the target of the paste operation (equivalent to the path of the selected object when using Edit -> Paste interactively).
   If no element in the path implements CATICutAndPastable, the operation is forbidden and fails.
 </dd>
    <dt><tt> iFormat</tt>
   <dd>   the Paste Format (the Format to select in Edit -> Paste special dialog box  interactively).
 </dd>
    <dt><tt> oNewEntities</tt>
   <dd>   the copies (new objects).
   The list will contain some objects linked to the format and to the copy itself 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul><li><tt>S_OK</tt>: the operation completed sucessfully.</li>
      <li><tt>E_POINTER</tt>: an input parameter (at least) is null or invalid.</li>
      <li><tt>E_NOTIMPL</tt>: an input parameter (at least) does not support the Copy and Paste protocol.</li>
      <li><tt>E_FAIL</tt>: the operation could not be completed.<br>
              More information may be available via <tt>CATError::CATGetLastError</tt>.</li></ul>
</dl>
</dl>
<a name="CopyAndPasteTo"></a><a name="CopyAndPasteTo(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>CopyAndPasteTo</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CopyAndPasteTo</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iEntitiesToCopy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iPasteTarget</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oNewEntities</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy and Paste of entities.
 <br><b>Role:</b> copies entities like Edit -> Paste in interactive applications.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEntitiesToCopy</tt>
   <dd>   The list of entities to copy (would be the selected objects when using Edit -> Copy interactively).
 </dd>
    <dt><tt> iPasteTarget</tt>
   <dd>   A path representing the target of the paste operation (equivalent to the path of the selected object when using Edit -> Paste interactively).
   If no element in the path implements CATICutAndPastable, the operation is forbidden and fails.
 </dd>
    <dt><tt> oNewEntities</tt>
   <dd>   The copies (new objects).
   The list will contain some objects linked to the format and to the copy itself 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul><li><tt>S_OK</tt>: the operation completed sucessfully.</li>
      <li><tt>E_POINTER</tt>: an input parameter (at least) is null or invalid.</li>
      <li><tt>E_NOTIMPL</tt>: an input parameter (at least) does not support the Copy and Paste protocol.</li>
      <li><tt>E_FAIL</tt>: the operation could not be completed.<br>
              More information may be available via <tt>CATError::CATGetLastError</tt>.</li></ul>
</dl>
</dl>
<a name="GetAvailableFormats"></a><a name="GetAvailableFormats(CATListValCATBaseUnknown_var&amp;,CATBaseUnknown*,CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetAvailableFormats</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAvailableFormats</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iEntitiesToCopy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iPasteTarget</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oAvailableFormats</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of available Paste special Formats.
 <br><b>Role:</b> provides the list of Copy Paste Formats (as in Edit -> Paste special interactively)
 that can be used when copying iEntitiesToCopy to iPasteTarget.
 <br>The first Format in the list is the default Format, i.e. the Format used by Paste (not Paste special).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEntitiesToCopy</tt>
   <dd>   The entity on which the paste is done (the selected object when using Edit -> Paste interactively).
 </dd>
    <dt><tt> iPasteTarget</tt>
   <dd>   A path representing the target of the paste operation (equivalent to the path of the selected object when using Edit -> Paste interactively).
   If no element in the path implements CATICutAndPastable, the operation is forbidden and fails.
 </dd>
    <dt><tt> oAvailableFormats</tt>
   <dd>   The list of available Paste special Formats.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul><li><tt>S_OK</tt>: the operation completed sucessfully.</li>
      <li><tt>E_POINTER</tt>: an input parameter (at least) is null or invalid.</li>
      <li><tt>E_NOTIMPL</tt>: an input parameter (at least) does not support the Copy and Paste protocol.</li>
      <li><tt>E_FAIL</tt>: the operation could not be completed.<br>
              More information may be available via <tt>CATError::CATGetLastError</tt>.</li></ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>DataCommonProtocolCCPServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DataCommonProtocolUse</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

