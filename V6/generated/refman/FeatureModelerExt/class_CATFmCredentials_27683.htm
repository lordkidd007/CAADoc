<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FeatureModelerExt Class CATFmCredentials</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../FeatureModelerExt.htm" href="../FeatureModelerExt.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "FeatureModelerExt";	}
		function getCurrentObjectName() { 
 	return "CATFmCredentials"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>FeatureModelerExt <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmCredentials</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmCredentials_27683','CATFmCredentials','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmCredentials</b>
</p>
<p>
<b><i> Class representing an Accreditations Set.</i></b><br>

 <b>Role</b>: Applications must provide Accreditations to be allowed to interact with Feature Modeler entities. 
 Accreditations are obtained through and stored within this ( <script type="text/javascript"> activateLinkAnchor('CATFmCredentials','','CATFmCredentials') </script> ) class. <p>Accreditations are used to determine what operations are allowed for each object type: Feature, Feature Definition (StartUp) or Container.</p>
 <p>The registration methods can be called several times. An application with several catalogs will want to claim the ownership for each of them.
 An application can also be based on several infrastructures (when applicable only) and want to declare itself accordingly.</p>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmFeatureFacade','','CATFmFeatureFacade') </script>, <script type="text/javascript"> activateLinkAnchor('CATFmContainerFacade','','CATFmContainerFacade') </script>, <script type="text/javascript"> activateLinkAnchor('CATFmStartUpFacade','','CATFmStartUpFacade') </script>, <script type="text/javascript"> activateLinkAnchor('CATFmContainerServices','','CATFmContainerServices') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATFmCredentials()"><b>CATFmCredentials</b></a>()
<dd>  Constructs an empty Set of Accreditations.
 <dt> o 
    <a href="#CATFmCredentials(CATFmCredentials&amp;)"><b>CATFmCredentials</b></a>(CATFmCredentials&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATFmCredentials()"><b>~CATFmCredentials</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#RegisterAsApplicationBasedOn(CATFmInfrastructureID&amp;,CATUnicodeString&amp;)"><b>RegisterAsApplicationBasedOn</b></a>(CATFmInfrastructureID&amp;,CATUnicodeString&amp;)
<dd>  Registers oneself as an Application based on a given infrastructure.
 <dt> o 
    <a href="#RegisterAsCatalogOwner(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>RegisterAsCatalogOwner</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Registers oneself as the owner of a Feature Catalog.
 <dt> o 
    <a href="#operator+=(CATFmCredentials&amp;)"><b>operator+=</b></a>(CATFmCredentials&amp;)
<dd>  Addition assignment operator.
 <dt> o 
    <a href="#operator=(CATFmCredentials&amp;)"><b>operator=</b></a>(CATFmCredentials&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATFmCredentials"></a><a name="CATFmCredentials()"></a> <dt> o <b>CATFmCredentials</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmCredentials</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty Set of Accreditations.
</dl>
<a name="CATFmCredentials"></a><a name="CATFmCredentials(CATFmCredentials&amp;)"></a> <dt> o <b>CATFmCredentials</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmCredentials</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iCredentials</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 <br><b>Role</b>: This method creates an exact copy of a Credentials object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCredentials</tt>
   <dd> [in]   The Credentials object to copy.</dd>
</dl>
</dl>
</dl>
<a name="~CATFmCredentials"></a><a name="~CATFmCredentials()"></a> <dt> o <b>~CATFmCredentials</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATFmCredentials</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="RegisterAsApplicationBasedOn"></a><a name="RegisterAsApplicationBasedOn(CATFmInfrastructureID&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>RegisterAsApplicationBasedOn</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RegisterAsApplicationBasedOn</b>(<td> const <script type="text/javascript"> activateLink('CATFmInfrastructureID','CATFmInfrastructureID&amp;')</script> <td><tt>iInfrastructureId</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPartnerId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Registers oneself as an Application based on a given infrastructure.
 <br><b>Role</b>: This method allows the caller to be known as being based on a given infrastructure.
 The scope of actions that will be allowed after a successfull registration will depend on each infrastructure.<br>
 <p>FeatureModeler infrastructure.<br>
 Being known as a client of Feature Modeler infrastructure grants some rights to access containers.
 Allowed actions are then:
 <ul><li>Registering as the owner of a Feature Catalog ( 
<script type="text/javascript"> activateLinkAnchor('','RegisterAsCatalogOwner','RegisterAsCatalogOwner') </script> ).</li>     <li>Instantiation of Features (the ownership of which has been successfully claimed) in any container that has no specific access control.</li>
     <li>Scanning any container that has no specific access control for Features (the ownership of which has been successfully claimed).</li></ul></p>
 <p>Other infrastructures.<br>
 Refer to each application CAA documentation.</p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInfrastructure</tt>
   <dd> [in]   The Infrastructure Id. The Infrastructure Id of Feature Modeler is defined in <tt>CATFmFeatureModelerID.h</tt>.
   <br>Whether other Infrastructure Ids exist or not will depend on the level and choosen configuration.
 </dd>
    <dt><tt> iPartnerId</tt>
   <dd> [in]   The Partner Id. To be valid, it must be a non-empty string containing only (ASCII-7) letters and digits,
   and must also not start with a digit.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The operation completed successfully.</dd>
     <dt>E_INVALIDARG</dt>
     <dd><tt>iPartnerId</tt> is not valid.</dd>
     <dt>E_UNEXPECTED</dt>
     <dd>The application has already successfully been register with another PartnerId.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
  </dl>
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmContainerFacade','','CATFmContainerFacade') </script>
</dl>
</dl>
<a name="RegisterAsCatalogOwner"></a><a name="RegisterAsCatalogOwner(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>RegisterAsCatalogOwner</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RegisterAsCatalogOwner</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatalogName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatalogClientId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Registers oneself as the owner of a Feature Catalog.
 <br><b>Role</b>: This method allows the caller to be known as the owner of a given Feature Catalog.
 Being known by Feature Modeler as the owner of a catalog grants full control rights to the Feature instances.
 <br>A successful registration as an application based on Feature Modeler (<tt>RegisterAsApplicationBasedOn(CATFmFeatureModelerID, ...)</tt> is required,
 any attempt to register as a catalog owner would otherwise necessarily fail.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd> [in]   The catalog name (without its ".CATfct" extension).
 </dd>
    <dt><tt> iCatalogClientId</tt>
   <dd> [in]   Authentication of the request. This is the value of the "-client-id" argument used with the CATFctEditorAssistant.
   If iCatalogClientId is null, the Partner Id provided to register as an application based on Feature Modeler is used.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The operation completed successfully.</dd>
     <dt>E_FMOPERATIONNOTALLOWED</dt>
     <dd>The operation can succeed only when registered as an application based on Feature Modeler (see 
<script type="text/javascript"> activateLinkAnchor('','RegisterAsApplicationBasedOn','RegisterAsApplicationBasedOn') </script> ).</dd>     <dt>E_INVALIDARG</dt>
     <dd>iCatalogName is not the name of a valid catalog.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>iCatalogClientId is not correct.</dd>
     <dt>E_FMNOPLMSESSION</dt>
     <dd>No PLM session has been sucessfully opened.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
   </dl>
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmFeatureFacade','','CATFmFeatureFacade') </script>, <script type="text/javascript"> activateLinkAnchor('CATFmStartUpFacade','','CATFmStartUpFacade') </script>
</dl>
</dl>
<a name="operator+="></a><a name="operator+=(CATFmCredentials&amp;)"></a> <dt> o <b>operator+=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials &')</script>  <b>operator+=</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iCredentials</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Addition assignment operator.
 <br><b>Role</b>: This method adds the Accrediations of another Credentials object to this Credentials object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCredentials</tt>
   <dd> [in]   The Credentials object to incorporate.</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATFmCredentials&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials &')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iCredentials</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 <br><b>Role</b>: This method transforms this Credentials object an exact copy of another Credentials object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCredentials</tt>
   <dd> [in]   The Credentials object to copy.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmCredentials.h</b><br>
If needed, your Imakefile.mk should include the module: <b>FeatureModelerExt</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

