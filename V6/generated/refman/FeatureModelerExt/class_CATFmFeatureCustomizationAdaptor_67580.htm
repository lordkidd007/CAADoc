<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FeatureModelerExt Class CATFmFeatureCustomizationAdaptor</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../FeatureModelerExt.htm" href="../FeatureModelerExt.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "FeatureModelerExt";	}
		function getCurrentObjectName() { 
 	return "CATFmFeatureCustomizationAdaptor"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>FeatureModelerExt <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmFeatureCustomizationAdaptor</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmFeatureCustomizationAdaptor_67580','CATFmFeatureCustomizationAdaptor','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATFmFeatureCustomizationAdaptor</b>
</p>
<p>
<b><i> Adaptor providing an empty implementation for each method or the CATIFmFeatureBehaviorCustomization interface.</i></b><br>

 <p>Refer to the CAA Encyclopedia Feature Modeler pages, and more specifically the articles:<ul>
 <li>Understanding Delete Protocol Customization</li>
 <li>Cut, Copy Paste Customization</li>
 <li>Understanding Update </li></ul>
 before implementing <script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','','CATIFmFeatureBehaviorCustomization') </script> interface on the Late Types of your StartUps.</p> 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','','CATIFmFeatureBehaviorCustomization') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeforeRemove()"><b>BeforeRemove</b></a>()
<dd>  Performs additional applicative clean-up at a Feature removal.
 <dt> o 
    <a href="#Build()"><b>Build</b></a>()
<dd>  Generates the result of a Feature for the Update.
 <dt> o 
    <a href="#CanBeRemoved(CATBoolean&amp;)"><b>CanBeRemoved</b></a>(CATBoolean&amp;)
<dd>  Retrieves the deletability of a Feature from its application owner perspective.
 <dt> o 
    <a href="#CcpPaste(CATFmCCPContext&amp;)"><b>CcpPaste</b></a>(CATFmCCPContext&amp;)
<dd>  Creates the link between the copies and the paste targets.
 <dt> o 
    <a href="#CcpRegisterAdditionalObjectsForCopy(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"><b>CcpRegisterAdditionalObjectsForCopy</b></a>(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Computes the list of objects to take part in a Copy operation.
 <dt> o 
    <a href="#CcpRegisterAdditionalObjectsForRemove(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"><b>CcpRegisterAdditionalObjectsForRemove</b></a>(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Computes the list of objects to take part in a Cut operation.
 <dt> o 
    <a href="#CcpUpdate(CATFmCCPContext&amp;)"><b>CcpUpdate</b></a>(CATFmCCPContext&amp;)
<dd>  Integrates the created objects in their environment.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BeforeRemove"></a><a name="BeforeRemove()"></a> <dt> o <b>BeforeRemove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeforeRemove</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Performs additional applicative clean-up at a Feature removal.
 <br><b>Role</b>: This method is invoked on each feature when its logical removal is just beginning.
 <br>Override this method to perform additional model alteration related to the object removal,
 like the deletion of a singleton Feature that will become useless after the removal of the last Feature that used the singleton.
 <br>All the components (recursively) of the current feature will be deleted automatically. This is the default behavior.
 <br>Warnings:<ul>
 <li>This method is not intended to be used to stop/prevent the removal. DO NOT try to stop/prevent the removal.</li>
 <li>This method is not called during a document removal (either Close, Unload...) or undo/redo operations.</li></ul>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    This implementation just returns the HRESULT value <tt>E_NOTIMPL<tt>.
   <br>Check 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','BeforeRemove','CATIFmFeatureBehaviorCustomization.BeforeRemove') </script> to find the other legal value you can return if you override this method.
</dl>
</dl>
<a name="Build"></a><a name="Build()"></a> <dt> o <b>Build</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Build</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Generates the result of a Feature for the Update.
 <br><b>Role</b>: The build is launched by the Update Engine, after the Feature inputs (sp_in attributes) have been updated.
 <br>Override this method to compute the result of the Feature.
 <br>In the implementation:
 <ul><li>The Update Behavior or values of sp_IN attributes must not be changed.
         This would cause a reimpact, leaving the feature outdated after the Update</li>
     <li>The values of sp_OUT attributes, if any, can be changed.</li></ul>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    This implementation just returns the HRESULT value <tt>E_NOTIMPL<tt>.
   <br>Check 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','Build','CATIFmFeatureBehaviorCustomization.Build') </script> to find the other legal value you can return if you override this method.
</dl>
</dl>
<a name="CanBeRemoved"></a><a name="CanBeRemoved(CATBoolean&amp;)"></a> <dt> o <b>CanBeRemoved</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CanBeRemoved</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oDeletable</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the deletability of a Feature from its application owner perspective.
 <br><b>Role</b>: Services and algorithms may invoke this method to check if the removal of an applicative Feature is legitimate.
 <p>Override it to let the caller know if he should proceed with the removal. If this method is not overriden, the default rule is to allow the deletion
 of all Features that are not aggregated, and refuse the deletion of any aggregated Feature.</p>
 <p>Warnings:<ul>
 <li>This method is intended to be called at any time, even when the model MUST NOT be modified. DO NOT alter or try to alter the model.</li>
 <li>Not all services or algorithms invoke and check the result of this method.
 <br> 
<script type="text/javascript"> activateLinkAnchor('CATFmFeatureFacade','DeleteSelf','CATFmFeatureFacade.DeleteSelf') </script> is an example of a function that will not invoke this check. Since only the owner of the Feature can successfuly invoke the method <tt>DeleteSelf</tt>, the removal is done under
 the owner's responsibility and will not invoke this <tt>CanBeRemoved</tt> method that is also implemented by the Feature owner.</li></ul></p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDeletable</tt>
   <dd> [out]   Whether or not the Feature deletion is legitimate within the application design.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    This implementation just returns the HRESULT value <tt>E_NOTIMPL<tt>.
   <br>Check 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','CanBeRemoved','CATIFmFeatureBehaviorCustomization.CanBeRemoved') </script> to find the other legal value you can return if you override this method.
</dl>
</dl>
<a name="CcpPaste"></a><a name="CcpPaste(CATFmCCPContext&amp;)"></a> <dt> o <b>CcpPaste</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CcpPaste</b>(<td> const <script type="text/javascript"> activateLink('CATFmCCPContext','CATFmCCPContext&amp;')</script> <td><tt>iContext</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates the link between the copies and the paste targets.
 <br><b>Role</b>: Override this method to implement the final step of the paste operation.
 <br>This method will be invoked on the target Features, once all the copies have been created and updated.
 Depending on the applicative modelization, a link or aggregation link may have to be set between the Paste target(s) and the created copies.
 The default behavior is to do nothing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContext</tt>
   <dd> [in]   An object describing the context of the operation and providing additional inputs required to implement the method.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    This implementation just returns the HRESULT value <tt>E_NOTIMPL<tt>.
   <br>Check 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','CcpPaste','CATIFmFeatureBehaviorCustomization.CcpPaste') </script> to find the other legal value you can return if you override this method. 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmCCPContext','','CATFmCCPContext') </script>
</dl>
</dl>
<a name="CcpRegisterAdditionalObjectsForCopy"></a><a name="CcpRegisterAdditionalObjectsForCopy(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>CcpRegisterAdditionalObjectsForCopy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CcpRegisterAdditionalObjectsForCopy</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iInitialSetOfObjects</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oObjectToAddToBoundary</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Computes the list of objects to take part in a Copy operation.
 <br><b>Role</b>: Override this method to provide a list of additional objects that need to be copied along with the current Feature.
 <br>All the components and extensions (both recursively) of the current feature will necessarily be copied.
 This cannot be prevented and is considered as the default behavior. Adding components of the current feature is useless and may slow down the process.
 <br>Warning: this method is intended to be called at any time, even when the model MUST NOT be modified. DO NOT alter or try to alter the model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInitialSetOfObjects</tt>
   <dd> [in]   The set of objects intially selected to be duplicated by the Copy operation.
 </dd>
    <dt><tt> oObjectToAddToBoundary</tt>
   <dd> [out]   The additional objects that must also be copied and must be included in the Copy algorithm.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    This implementation just returns the HRESULT value <tt>E_NOTIMPL<tt>.
   <br>Check 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','CcpRegisterAdditionalObjectsForCopy','CATIFmFeatureBehaviorCustomization.CcpRegisterAdditionalObjectsForCopy') </script> to find the other legal value you can return if you override this method.
</dl>
</dl>
<a name="CcpRegisterAdditionalObjectsForRemove"></a><a name="CcpRegisterAdditionalObjectsForRemove(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>CcpRegisterAdditionalObjectsForRemove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CcpRegisterAdditionalObjectsForRemove</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iInitialSetOfObjects</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oObjectToAddToBoundary</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Computes the list of objects to take part in a Cut operation.
 <br><b>Role</b>: Override this method to provide a list of additional objects that need to be deleted along with the current Feature.
 <br>All the components and extensions (both recursively) of the current feature will necessarily be deleted.
 This cannot be prevented and is considered as the default behavior. Adding components of the current feature is useless and may slow down the process.
 <br>Note: Some implementations of the interactive Delete command are also based on the Cut algorithm internally.
 <br>Warning: this method is intended to be called at any time, even when the model MUST NOT be modified. DO NOT alter or try to alter the model.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInitialSetOfObjects</tt>
   <dd> [in]   The set of objects intially selected to be suppressed by the Cut operation.
 </dd>
    <dt><tt> oObjectToAddToBoundary</tt>
   <dd> [out]   The additional objects that must also be deleted and must be included in the Cut algorithm.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    This implementation just returns the HRESULT value <tt>E_NOTIMPL<tt>.
   <br>Check 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','CcpRegisterAdditionalObjectsForRemove','CATIFmFeatureBehaviorCustomization.CcpRegisterAdditionalObjectsForRemove') </script> to find the other legal value you can return if you override this method.
</dl>
</dl>
<a name="CcpUpdate"></a><a name="CcpUpdate(CATFmCCPContext&amp;)"></a> <dt> o <b>CcpUpdate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CcpUpdate</b>(<td> const <script type="text/javascript"> activateLink('CATFmCCPContext','CATFmCCPContext&amp;')</script> <td><tt>iContext</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Integrates the created objects in their environment.
 <br><b>Role</b>: Override this method to perform modification to the clone structure to adapt it to its new context.
 <br>Modifications to be performed in this method are for example the invalidation of a computed cache or result stored in an
 attribute value, or manage refrences to a singleton.
 <br>The deletion of any "copy" is to be avoided as it could prevent correct rerouting of links among the "copies" and lead to a corrupted model.
 <br>This method will be invoked on all "copy" Features, once all the copies have been created.
 A link set on a Feature that has been copied to itself or to another Feature also copied will be rerouted to reference the copy of its original target.
 This cannot be prevented and is considered as the default behavior.
 <br>Warnings:<ul>
   <li>This method has nothing to do with the Update mechanism and is not related to the 
<script type="text/javascript"> activateLinkAnchor('','Build','Build') </script> method described here-above.</li>   <li>The order in which the "copies" will be updated is not part of the specfication; any behavior, even repeatedly observed, may vary across
   runs, platforms or releases. No assumption must be made about an implicit order, no algorithm may depend on it.</li>
   <li>This method is intended to be called at times when the model is not necessarily fully consistent from the involved applications point of view.
   This method is invoked iteratively on many object. The final "Paste" step that links the copies to the targets has not yet been started.
   No operation that has impacts the model beyond the application control (such as an 
<script type="text/javascript"> activateLinkAnchor('CATFMFeatureFacade','Update','CATFMFeatureFacade.Update') </script> ) shall be done.</li></ul> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContext</tt>
   <dd> [in]   An object describing the context of the operation and providing additional inputs required to implement the method.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    This implementation just returns the HRESULT value <tt>E_NOTIMPL<tt>.
   <br>Check 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','CcpUpdate','CATIFmFeatureBehaviorCustomization.CcpUpdate') </script> to find the other legal value you can return if you override this method. 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmCCPContext','','CATFmCCPContext') </script>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmFeatureCustomizationAdaptor.h</b><br>
If needed, your Imakefile.mk should include the module: <b>FeatureModelerExt</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

