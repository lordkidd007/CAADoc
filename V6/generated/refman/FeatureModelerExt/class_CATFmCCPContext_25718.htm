<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FeatureModelerExt Class CATFmCCPContext</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../FeatureModelerExt.htm" href="../FeatureModelerExt.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "FeatureModelerExt";	}
		function getCurrentObjectName() { 
 	return "CATFmCCPContext"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>FeatureModelerExt <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmCCPContext</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmCCPContext_25718','CATFmCCPContext','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmCCPContext</b>
</p>
<p>
<b><i> Class defining the context of a Cut, Copy or Paste operation.</i></b><br>

 <p>Refer to the CAA Encyclopedia Feature Modeler pages, and more specifically the article "Cut, Copy Paste Customization".
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','','CATIFmFeatureBehaviorCustomization') </script>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCopyObjectFromSource(CATBaseUnknown*)"><b>GetCopyObjectFromSource</b></a>(CATBaseUnknown*)
<dd>  Returns the copy object from its source.
 <dt> o 
    <a href="#GetImpactedObjects(CATListValCATBaseUnknown_var&amp;)"><b>GetImpactedObjects</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves the impacted objects.
 <dt> o 
    <a href="#GetPasteTargets(CATListValCATBaseUnknown_var&amp;)"><b>GetPasteTargets</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves the target objects.
 <dt> o 
    <a href="#GetSourceObjectFromCopy(CATBaseUnknown*)"><b>GetSourceObjectFromCopy</b></a>(CATBaseUnknown*)
<dd>  Returns the source object from its copy.
 <dt> o 
    <a href="#IsSourceInClipBoard()"><b>IsSourceInClipBoard</b></a>()
<dd>  Returns information about the source context.
 <dt> o 
    <a href="#IsTargetInClipBoard()"><b>IsTargetInClipBoard</b></a>()
<dd>  Returns information about the target context.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCopyObjectFromSource"></a><a name="GetCopyObjectFromSource(CATBaseUnknown*)"></a> <dt> o <b>GetCopyObjectFromSource</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown_var')</script>  <b>GetCopyObjectFromSource</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iSource</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the copy object from its source.
 <br><b>Role</b>: This method gives access to the mapping between source and copy objects during a Copy or a Paste operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSource</tt>
   <dd> [in]   Any interface pointer to the source object as a <tt>CATBaseUnknown</tt> pointer.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    A smart pointer holding an interface pointer to the related copy object if applicable, or NULL_var.
   <br>Warning: the exact type of the interface returned as a <tt>CATBaseUnknown</tt> pointer
   is not part of the specification and may vary. Do not make any assumption about it.
</dl>
</dl>
<a name="GetImpactedObjects"></a><a name="GetImpactedObjects(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetImpactedObjects</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImpactedObjects</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oSetOfObjects</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the impacted objects.
 <br><b>Role</b>: This method retrieves the objects that will be impacted by the current operation.<ul>
 <li>When the current operation is 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','CcpUpdate','CATIFmFeatureBehaviorCustomization.CcpUpdate') </script> ,   the set contains all the objects on which the CcpUpdate method will be invoked.</li>
 <li>When the current operation is 
<script type="text/javascript"> activateLinkAnchor('CATIFmFeatureBehaviorCustomization','CcpPaste','CATIFmFeatureBehaviorCustomization.CcpPaste') </script> ,   the set contains the root objects that have been created and must be handled.</li></ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSetOfObjects</tt>
   <dd> [out]   A (caller provided) collection in which the list of objects that have to be processed during the operation will be stored.
   <br>If the method fails <tt>oSetOfObjects</tt> is not modified, it is otherwise overwritten with the retrieved value.
   <br>Warning: the exact type of the classes returned as <tt>CATBaseUnknown</tt> pointers
   is not part of the specification and may vary. Do not make any assumption about it.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The list has been successfuly retrieved.</dd>
     <dt>E_FAIL</dt>
     <dd>This list cannot be retrived for the current operation.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
  </dl>
</dl>
</dl>
<a name="GetPasteTargets"></a><a name="GetPasteTargets(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetPasteTargets</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPasteTargets</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oPasteTargets</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the target objects.
 <br><b>Role</b>: This method retrieves the list of targets for the paste operation.<ul>
 <li>In case of an Edit -> Copy action in an intercative application, this method will fail.</li>
 <li>In case of an Edit -> Paste action in an intercative application, this method will succeed.</li>
 <li>When invoked in batch, or by other commands like 
<script type="text/javascript"> activateLinkAnchor('DataCommonProtocolCCPServices','','DataCommonProtocolCCPServices') </script> , result will depend on the context.</li></ul> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPasteTargets</tt>
   <dd> [out]   A (caller provided) collection in which the the list of targets for the paste operation will be stored.
   <br>If the method fails <tt>oPasteTargets</tt> is not modified, it is otherwise overwritten with the retrieved value.
   <br>Warning: the exact type of the classes returned as <tt>CATBaseUnknown</tt> pointers
   is not part of the specification and may vary. Do not make any assumption about it.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The list has been successfuly retrieved.</dd>
     <dt>E_FAIL</dt>
     <dd>This list cannot be retrived for the current operation.</dd>
     <dt>Other</dt>
     <dd>Another failure has occured.</dd>
  </dl>
</dl>
</dl>
<a name="GetSourceObjectFromCopy"></a><a name="GetSourceObjectFromCopy(CATBaseUnknown*)"></a> <dt> o <b>GetSourceObjectFromCopy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown_var')</script>  <b>GetSourceObjectFromCopy</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iCopy</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the source object from its copy.
 <br><b>Role</b>: This method gives access to the mapping between source and copy objects during a Copy or a Paste operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCopy</tt>
   <dd> [in]   Any interface pointer to the copy object as a <tt>CATBaseUnknown</tt> pointer.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    A smart pointer holding an interface pointer to the related source object if applicable, or NULL_var.
   <br>Warning: the exact type of the interface returned as a <tt>CATBaseUnknown</tt> pointer
   is not part of the specification and may vary. Do not make any assumption about it.
</dl>
</dl>
<a name="IsSourceInClipBoard"></a><a name="IsSourceInClipBoard()"></a> <dt> o <b>IsSourceInClipBoard</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsSourceInClipBoard</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns information about the source context.
 <br><b>Role</b>: Call this method to know whether the <b>source</b> of the Cut/Copy Paste operation is in a clipboard.<ul>
 <li>In case of an Edit -> Copy action in an intercative application, this method will return FALSE</li>.
 <li>In case of an Edit -> Paste action in an intercative application, this method will return TRUE</li>.
 <li>When invoked in batch, or by other commands like 
<script type="text/javascript"> activateLinkAnchor('DataCommonProtocolCCPServices','','DataCommonProtocolCCPServices') </script> , result will depend on the context.</li></ul> 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An Boolean value.
   <dl>
     <dt>TRUE</dt>
     <dd>The objects to copy (source) of the current operation are in a clipboard.</dd>
     <dt>FALSE</dt>
     <dd>The objects to copy (source) of the current operation are not in a clipboard.</dd>
  </dl>
</dl>
</dl>
<a name="IsTargetInClipBoard"></a><a name="IsTargetInClipBoard()"></a> <dt> o <b>IsTargetInClipBoard</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsTargetInClipBoard</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns information about the target context.
 <br><b>Role</b>: Call this method to know whether the <b>target</b> of the Cut/Copy Paste operation is in a clipboard.<ul>
 <li>In case of an Edit -> Copy action in an intercative application, this method will return TRUE</li>.
 <li>In case of an Edit -> Paste action in an intercative application, this method will return FALSE</li>.
 <li>When invoked in batch, or by other commands like 
<script type="text/javascript"> activateLinkAnchor('DataCommonProtocolCCPServices','','DataCommonProtocolCCPServices') </script> , result will depend on the context.</li></ul> 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An Boolean value.
   <dl>
     <dt>TRUE</dt>
     <dd>The copies (target) of the current operation are in a clipboard.</dd>
     <dt>FALSE</dt>
     <dd>The copies (target) of the current operation are not in a clipboard.</dd>
  </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmCCPContext.h</b><br>
If needed, your Imakefile.mk should include the module: <b>FeatureModelerExt</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

