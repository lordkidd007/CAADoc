<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FeatureModelerExt Class CATFmCatalogFacade</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../FeatureModelerExt.htm" href="../FeatureModelerExt.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "FeatureModelerExt";	}
		function getCurrentObjectName() { 
 	return "CATFmCatalogFacade"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>FeatureModelerExt <script type="text/javascript" > writeClassCharacteristic(); </script> CATFmCatalogFacade</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATFmCatalogFacade_30093','CATFmCatalogFacade','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATFmCatalogFacade</b>
</p>
<p>
<b><i> Class representing a Catalog.</i></b><br>

 <b>Role</b>: This class is a Facade object providing access to a Catalog, according to the provided Accreditations. <br>
 It gathers in a single place all operations defined at the Feature Modeler level that can be performed on a Catalog.
 <p>LifeCycle information.<br>
   The recommended usage is to create Facades as local variables in functions and methods bodies.<br>
   Catalog Facades are valid during the whole PLM Session in which they have been bound.
   They are nevertheless not really intended to be used as global variables or class member data. The life cycle of Facades should not extend
   beyond the scope of the function in which they have been created.<p>
 <p><b>Access Control</b> information.<br>
   Interactions with Feature Modeler entities, either read-only or read+write, are subject to authorization.<br>
   On a Facade with no (or insufficient) Accreditations only the methods related to the Facade binding will succeed.
   All other methods, i.e. those for wich E_ACCESSDENIED is a legal return value, will fail.<br>
   To be allowed to interact with a Catalog, an application must be registered as the owner of the Catalog.</p>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmCredentials','','CATFmCredentials') </script>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATFmCatalogFacade()"><b>CATFmCatalogFacade</b></a>()
<dd>  Constructs an empty Catalog Facade.
 <dt> o 
    <a href="#CATFmCatalogFacade(CATFmCredentials&amp;)"><b>CATFmCatalogFacade</b></a>(CATFmCredentials&amp;)
<dd>   Constructs a Catalog Facade.
 <dt> o 
    <a href="#CATFmCatalogFacade(CATFmCatalogFacade&amp;)"><b>CATFmCatalogFacade</b></a>(CATFmCatalogFacade&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATFmCatalogFacade(CATFmCredentials&amp;,CATUnicodeString&amp;)"><b>CATFmCatalogFacade</b></a>(CATFmCredentials&amp;,CATUnicodeString&amp;)
<dd>  Constructs a Catalog Facade.
 <dt> o 
    <a href="#~CATFmCatalogFacade()"><b>~CATFmCatalogFacade</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BindTo(CATUnicodeString&amp;)"><b>BindTo</b></a>(CATUnicodeString&amp;)
<dd>  Binds the Facade to a Catalog.
 <dt> o 
    <a href="#Clear()"><b>Clear</b></a>()
<dd>  Unbinds the Facade from its bound Catalog.
 <dt> o 
    <a href="#CompareCatalogWith(CATFmCatalogFacade&amp;)"><b>CompareCatalogWith</b></a>(CATFmCatalogFacade&amp;)
<dd>  Compares the bound Catalogs of two Facades.
 <dt> o 
    <a href="#GetCatalogName(CATUnicodeString&amp;)"><b>GetCatalogName</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the name of the bound Catalog.
 <dt> o 
    <a href="#IsValid()"><b>IsValid</b></a>()
<dd>  Checks the Facade validity.
 <dt> o 
    <a href="#Subscribe(CATBaseUnknown&amp;,CATFmEventSubscriberMethod)"><b>Subscribe</b></a>(CATBaseUnknown&amp;,CATFmEventSubscriberMethod)
<dd>  Subscribes to events on all startups located in the bound Catalog.
 <dt> o 
    <a href="#operator!()"><b>operator!</b></a>()
<dd>  Logical-negation (or logical-NOT) operator.
 <dt> o 
    <a href="#operator=(CATFmCatalogFacade&amp;)"><b>operator=</b></a>(CATFmCatalogFacade&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATFmCatalogFacade"></a><a name="CATFmCatalogFacade()"></a> <dt> o <b>CATFmCatalogFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmCatalogFacade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty Catalog Facade.
 <br><b>Role</b>: This constructor creates a Facade with no accreditation and not bound to any Catalog.
 <br>Only the assignment operator can affect the Credentials Set of a Facade after its construction.
</dl>
<a name="CATFmCatalogFacade"></a><a name="CATFmCatalogFacade(CATFmCredentials&amp;)"></a> <dt> o <b>CATFmCatalogFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmCatalogFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iAccreditations</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructs a Catalog Facade.
 <br><b>Role</b>: Creates a Facade with the provided Credentials and not bound to any Catalog.
 <br>Only the assignment operator can affect the Credentials Set of a Facade after its construction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAccreditations</tt>
   <dd> [in]   The set of Accreditations obtained by the application.
   <br>These Accreditations will be used to authorize or not any operation attempted on the bound Catalog.
   <br><b>Lifecycle</b>: A Facade keeps a copy of the set of accreditations it created with.
   Any addition of accreditations performed on the Crendentials object after the Facade has been created will not be reflected.</dd>
</dl>
</dl>
</dl>
<a name="CATFmCatalogFacade"></a><a name="CATFmCatalogFacade(CATFmCatalogFacade&amp;)"></a> <dt> o <b>CATFmCatalogFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmCatalogFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmCatalogFacade','CATFmCatalogFacade&amp;')</script> <td><tt>iCatalogFacade</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 <br><b>Role</b>: This method creates an exact copy of a Catalog Facade.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogFacade</tt>
   <dd> [in]   The Facade to copy.</dd>
</dl>
</dl>
</dl>
<a name="CATFmCatalogFacade"></a><a name="CATFmCatalogFacade(CATFmCredentials&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CATFmCatalogFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATFmCatalogFacade</b>(<td> const <script type="text/javascript"> activateLink('CATFmCredentials','CATFmCredentials&amp;')</script> <td><tt>iAccreditations</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatalogName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Catalog Facade.
 <br><b>Role</b>: This constructor creates a Facade with the provided credentials and bound to a Catalog.
 <br>Only the assignment operator can affect the Credentials Set of a Facade after its construction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAccreditations</tt>
   <dd> [in]   The set of Accreditations obtained by the application.
   <br>These Accreditations will be used to authorize or not any operation attempted on the bound Catalog.
   <br><b>Lifecycle</b>: A Facade keeps a copy of the set of accreditations it created with.
   Any addition of accreditations performed on the Credentials object after the Facade has been created will not be reflected.
 </dd>
    <dt><tt> iCatalogName</tt>
   <dd> [in]   The name of the Catalog to bind, with its extension.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('','BindTo','BindTo') </script>
</dl>
</dl>
<a name="~CATFmCatalogFacade"></a><a name="~CATFmCatalogFacade()"></a> <dt> o <b>~CATFmCatalogFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATFmCatalogFacade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="BindTo"></a><a name="BindTo(CATUnicodeString&amp;)"></a> <dt> o <b>BindTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BindTo</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatalogName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Binds the Facade to a Catalog.
 <br>This method does not affect the Accreditations Set of the Facade.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd>   The name of the catalog.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Catalog has been found and the Facade bound to it.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The Catalog can not been found.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>Credentials do not grant access to this Catalog.</dd>
   </dl>
</dl>
</dl>
<a name="Clear"></a><a name="Clear()"></a> <dt> o <b>Clear</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmCatalogFacade','CATFmCatalogFacade &')</script>  <b>Clear</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Unbinds the Facade from its bound Catalog.
 <br>This method does not affect the Accreditations Set of the Facade.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    This Facade.
</dl>
</dl>
<a name="CompareCatalogWith"></a><a name="CompareCatalogWith(CATFmCatalogFacade&amp;)"></a> <dt> o <b>CompareCatalogWith</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>CompareCatalogWith</b>(<td> const <script type="text/javascript"> activateLink('CATFmCatalogFacade','CATFmCatalogFacade&amp;')</script> <td><tt>iCatalogFacade</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Compares the bound Catalogs of two Facades.
 <br><b>Role</b>: compares the bound Catalogs of two Facades without taking the Accreditations into account.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogFacade</tt>
   <dd> [in]   The Catalog to be compared to this.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    A boolean value.
   <br><b>Legal values</b>:
   <ul><li><tt>TRUE</tt>: if the Facades are either both invalid or both bound to the same Catalog.</li>
       <li><tt>FALSE</tt>: in any other case.</li></ul>
</dl>
</dl>
<a name="GetCatalogName"></a><a name="GetCatalogName(CATUnicodeString&amp;)"></a> <dt> o <b>GetCatalogName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCatalogName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oCatalogName</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the bound Catalog.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCatalogName</tt>
   <dd> [out]   A (caller provided) string in which the name of the Catalog will be stored.
   <br>If the method fails <tt>oCatalogName</tt> is not modified, it is otherwise overwritten with the retrieved value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Catalog name has been successfuly retrieved.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The Facade is not bound to a valid Catalog.</dd>
     <dt>E_ACCESSDENIED</dt>
     <dd>Credentials do not grant access to this Catalog.</dd>
     <dt>E_FAIL</dt>
     <dd>Another failure has occured.</dd>
  </dl>
</dl>
</dl>
<a name="IsValid"></a><a name="IsValid()"></a> <dt> o <b>IsValid</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsValid</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Checks the Facade validity.
 <br>A Catalog Facade remains valid until the PLM session is closed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    A boolean value.
   <br><b>Legal values</b>:
   <ul><li><tt>TRUE</tt>: if the Facade is valid.</li>
       <li><tt>FALSE</tt>: if the Facade is invalid.</li></ul>
</dl>
</dl>
<a name="Subscribe"></a><a name="Subscribe(CATBaseUnknown&amp;,CATFmEventSubscriberMethod)"></a> <dt> o <b>Subscribe</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Subscribe</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown&amp;')</script> <td><tt>iEventSubscriber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFmEventSubscriberMethod','CATFmEventSubscriberMethod')</script> <td><tt>iProcessingMethod</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Subscribes to events on all startups located in the bound Catalog.
 <br><b>Role</b>: Subscribes to all kinds of events occurring on all late types of startups located in the bound Catalog.
 <br> The unsubscribing task is automatically done when the event subscriber instance dies.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEventSubscriber</tt>
   <dd>   An instance of a user-defined class aimed at handling events.
 </dd>
    <dt><tt> iProcessingMethod</tt>
   <dd>   The method to call when an event is received.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The subscription has been successfully done.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>The Facade is not bound to a valid Catalog.</dd>
     <dt>E_FAIL</dt>
     <dd>Another failure has occured.</dd>
   </dl>
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('CATFmEventSubscriberMethod','','CATFmEventSubscriberMethod') </script>
</dl>
</dl>
<a name="operator!"></a><a name="operator!()"></a> <dt> o <b>operator!</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator!</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Logical-negation (or logical-NOT) operator.
 <br><b>Role</b>: Checks if the Facade is invalid.
 <br>A Catalog Facade remains valid until the PLM session is closed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An integer value.
   <br><b>Legal values</b>:
   <ul><li><tt>1</tt>: if the Facade is invalid.</li>
       <li><tt>0</tt>: if the Facade is valid.</li></ul>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATFmCatalogFacade&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFmCatalogFacade','CATFmCatalogFacade &')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATFmCatalogFacade','CATFmCatalogFacade&amp;')</script> <td><tt>iCatalogFacade</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 <br><b>Role</b>: This method transforms this Facade to an exact copy of another Catalog Facade.
 <br>Both the Credentials and the bound Catalog are copied.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogFacade</tt>
   <dd> [in]   The Facade to assign.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    This Facade.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATFmCatalogFacade.h</b><br>
If needed, your Imakefile.mk should include the module: <b>FeatureModelerExt</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

