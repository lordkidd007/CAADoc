<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerBase Class PLMPublicLinkFacade</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ObjectModelerBase.htm" href="../ObjectModelerBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ObjectModelerBase";	}
		function getCurrentObjectName() { 
 	return "PLMPublicLinkFacade"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ObjectModelerBase <script type="text/javascript" > writeClassCharacteristic(); </script> PLMPublicLinkFacade</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_PLMPublicLinkFacade_31414','PLMPublicLinkFacade','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>PLMPublicLinkFacade</b>
</p>
<p>
<b><i> Class representing a Link.</i></b><br>

 <b>Role</b>: This class is a Facade object providing access to a Link.
 <br>It gathers in a single place all operations and information gathering that can proceeded on a Link.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#PLMPublicLinkFacade()"><b>PLMPublicLinkFacade</b></a>()
<dd>  Constructs an empty PLMPublicLinkAccess.
 <dt> o 
    <a href="#PLMPublicLinkFacade(PLMPublicLinkFacade&amp;)"><b>PLMPublicLinkFacade</b></a>(PLMPublicLinkFacade&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~PLMPublicLinkFacade()"><b>~PLMPublicLinkFacade</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetPointedComponentIdentifiers(CATListPtrCATIAdpPLMIdentificator&amp;)"><b>GetPointedComponentIdentifiers</b></a>(CATListPtrCATIAdpPLMIdentificator&amp;)
<dd>  Retrieves the identifiers of the PLM Components referenced by the Link.
 <dt> o 
    <a href="#GetPointedObjectInContext(CATOmbObjectInContext_var&amp;)"><b>GetPointedObjectInContext</b></a>(CATOmbObjectInContext_var&amp;)
<dd>  Retrieves the pointed CATOmbObjectInContext instance value.
 <dt> o 
    <a href="#IsSynchronized()"><b>IsSynchronized</b></a>()
<dd>  Retrieves the Synchronization status of the Link.
 <dt> o 
    <a href="#Synchronize()"><b>Synchronize</b></a>()
<dd>  Synchronize the link (See IsSynchronized).
 <dt> o 
    <a href="#operator =(PLMPublicLinkFacade&amp;)"><b>operator =</b></a>(PLMPublicLinkFacade&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="PLMPublicLinkFacade"></a><a name="PLMPublicLinkFacade()"></a> <dt> o <b>PLMPublicLinkFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>PLMPublicLinkFacade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty PLMPublicLinkAccess.
</dl>
<a name="PLMPublicLinkFacade"></a><a name="PLMPublicLinkFacade(PLMPublicLinkFacade&amp;)"></a> <dt> o <b>PLMPublicLinkFacade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>PLMPublicLinkFacade</b>(<td> const <script type="text/javascript"> activateLink('PLMPublicLinkFacade','PLMPublicLinkFacade&amp;')</script> <td><tt>iLinkFacade</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 <br><b>Role</b>: This method creates an exact copy of a Link Facade.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLinkFacade</tt>
   <dd> [in]   The Facade to copy.</dd>
</dl>
</dl>
</dl>
<a name="~PLMPublicLinkFacade"></a><a name="~PLMPublicLinkFacade()"></a> <dt> o <b>~PLMPublicLinkFacade</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~PLMPublicLinkFacade</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="GetPointedComponentIdentifiers"></a><a name="GetPointedComponentIdentifiers(CATListPtrCATIAdpPLMIdentificator&amp;)"></a> <dt> o <b>GetPointedComponentIdentifiers</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPointedComponentIdentifiers</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIAdpPLMIdentificator','CATListPtrCATIAdpPLMIdentificator&amp;')</script> <td><tt>oIdentifiers</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the identifiers of the PLM Components referenced by the Link.
 See 
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','','CATIAdpPLMIdentificator') </script>. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIdentifiers</tt>
   <dd> [out]   A list that contains the identifiers. Use </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpOpener','','CATAdpOpener') </script> to load it if necessary.    <br>Don't forget to call 
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','Release','CATIAdpPLMIdentificator.Release') </script> on each returned identifiers when useless.   <br>In case of failure, list will be empty.
 
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The exhaustive non empty list of identifiers has been retrieved.</dd>
     <dt>E_PLMLINK_INVALIDFACADE</dt>
     <dd> The Facade is not valid.</dd>
     <dt>E_PLMLINK_INTRACOMPONENTLINK</dt>
     <dd> The Link is internal to the pointing PLM Component.</dd>
     <dt>E_UNEXPECTED</dt>
     <dd>The query failed for any other reason.</dd>
  </dl>
</dl>
</dl>
</dl>
<a name="GetPointedObjectInContext"></a><a name="GetPointedObjectInContext(CATOmbObjectInContext_var&amp;)"></a> <dt> o <b>GetPointedObjectInContext</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPointedObjectInContext</b>(<td><script type="text/javascript"> activateLink('CATOmbObjectInContext_var','CATOmbObjectInContext_var&amp;')</script> <td><tt>oObjectInContext</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the pointed CATOmbObjectInContext instance value.
 See 
<script type="text/javascript"> activateLinkAnchor('CATOmbObjectInContext','','CATOmbObjectInContext') </script>. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oObjectInContext</tt>
   <dd> [out]   A smart pointer to the object in context retrieved.
   <br>In case of failure, NULL will be assigned to it.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>A non NULL object in context has been retrieved.</dd>
     <dt>E_PLMLINK_INVALIDFACADE</dt>
     <dd> The Facade is not valid.</dd>
     <dt>Other</dt>
     <dd>Other hresults can occur if the set pointed PLM component could not be loaded or does not exist any more.
     <dd>In these cases, more information on the cause can be obtained with 
<script type="text/javascript"> activateLinkAnchor('CATOmbLinkStatusServices','GetLinkStatusFromRc','CATOmbLinkStatusServices.GetLinkStatusFromRc') </script>.</dd>  </dl>
</dl>
</dl>
<a name="IsSynchronized"></a><a name="IsSynchronized()"></a> <dt> o <b>IsSynchronized</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsSynchronized</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Synchronization status of the Link.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The link is synchronized.</dd>
     <dt>S_FALSE</dt>
     <dd>The link is not synchronized.</dd>
     <dt>E_PLMLINK_NOSYNCHRONIZATIONBEHAVIOR</dt>
     <dd> No Synchronization behavior is defined on the Link.</dd>
     <dt>E_PLMLINK_INVALIDFACADE</dt>
     <dd> The Facade is not valid.</dd>
     <dt>E_UNEXPECTED</dt>
     <dd>The query failed for any other reason.</dd>
  </dl>
</dl>
</dl>
<a name="Synchronize"></a><a name="Synchronize()"></a> <dt> o <b>Synchronize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Synchronize</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Synchronize the link (See IsSynchronized).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The link synchronization succeeded.</dd>
     <dt>S_FALSE</dt>
     <dd>The link is already synchronized.</dd>
     <dt>E_PLMLINK_NOSYNCHRONIZATIONBEHAVIOR</dt>
     <dd> No Synchronization behavior is defined on the Link.</dd>
     <dt>E_PLMLINK_INVALIDFACADE</dt>
     <dd> The Facade is not valid.</dd>
     <dt>E_UNEXPECTED</dt>
     <dd>The query failed for any other reason.</dd>
  </dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(PLMPublicLinkFacade&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('PLMPublicLinkFacade','PLMPublicLinkFacade &')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('PLMPublicLinkFacade','PLMPublicLinkFacade&amp;')</script> <td><tt>iLinkFacade</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 <br><b>Role</b>: This method transforms this Facade to an exact copy of another Feature Facade.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLinkFacade</tt>
   <dd> [in]   The Facade to copy.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    This Facade.
</dl>
</dl>
<hr>
 This object is included in the file: <b>PLMPublicLinkFacade.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectModelerBase</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

