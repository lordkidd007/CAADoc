<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerBase Class CATOmbObjectInContext</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ObjectModelerBase.htm" href="../ObjectModelerBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ObjectModelerBase";	}
		function getCurrentObjectName() { 
 	return "CATOmbObjectInContext"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ObjectModelerBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATOmbObjectInContext</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATOmbObjectInContext_36398','CATOmbObjectInContext','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATOmbObjectInContext</b>
</p>
<p>
<b><i> Class representing an object in a context.</i></b><br>

 <br>Role:</b>This class represents an object in a context. 
 A context means an occurrence or a representation occurrence
 which can be seen as a path of instances and/or a representation instance.
 An object a PLM object other that an instance (a connection, a port, a reference or a representation)
 or an internal object of a representation or of a connection.
 An object in a context means the usage of this object in the context of this occurrence.</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Compare(CATOmbObjectInContext*)"><b>Compare</b></a>(CATOmbObjectInContext*)
<dd>  Compares this object in context to an other object in context (same path of instances and/or representation instance, same object out of context).
 <dt> o 
    <a href="#CreateObjectInContext(CATLISTP(CATIPLMComponent)&amp;,CATIPLMComponent*,CATBaseUnknown*,CATOmbObjectInContext*&amp;)"><b>CreateObjectInContext</b></a>(CATLISTP(CATIPLMComponent)&amp;,CATIPLMComponent*,CATBaseUnknown*,CATOmbObjectInContext*&amp;)
<dd>  Creates a CATOmbObjectInContext for an object and a context.
 <dt> o 
    <a href="#CreateObjectInContext(CATLISTP(CATIPLMComponent)&amp;,CATIPLMComponent*,CATBaseUnknown*,CATOmbObjectInContext_var&amp;)"><b>CreateObjectInContext</b></a>(CATLISTP(CATIPLMComponent)&amp;,CATIPLMComponent*,CATBaseUnknown*,CATOmbObjectInContext_var&amp;)
<dd>  Creates a CATOmbObjectInContext_var for an object and a context.
 <dt> o 
    <a href="#GetContextRootReference(CATIPLMComponent*&amp;)"><b>GetContextRootReference</b></a>(CATIPLMComponent*&amp;)
<dd>  Retrieves the root PLM Reference of the context.
 <dt> o 
    <a href="#GetInstanceOfRepresentation(CATIPLMComponent*&amp;)"><b>GetInstanceOfRepresentation</b></a>(CATIPLMComponent*&amp;)
<dd>  Gets (if exists) the representation instance defining this CATOmbObjectInContext instance.
 <dt> o 
    <a href="#GetObjectOutOfContext(CATBaseUnknown*&amp;,IID&amp;)"><b>GetObjectOutOfContext</b></a>(CATBaseUnknown*&amp;,IID&amp;)
<dd>  Gets (if exists) the object defining this CATOmbObjectInContext instance.
 <dt> o 
    <a href="#GetPathOfInstances(CATLISTP(CATIPLMComponent)&amp;)"><b>GetPathOfInstances</b></a>(CATLISTP(CATIPLMComponent)&amp;)
<dd>  Gets (if exists) the path of instances defining this CATOmbObjectInContext instance.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Compare"></a><a name="Compare(CATOmbObjectInContext*)"></a> <dt> o <b>Compare</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Compare</b>(<td> const <script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*')</script> <td><tt>ipObjectInContextToCompare</tt>)<script type="text/javascript"> activateLink('0',' const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Compares this object in context to an other object in context (same path of instances and/or representation instance, same object out of context).

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ipObjectInContextToCompare</tt>
   <dd> [in]      The object in context to compare with. <br>
      This parameter MUST NOT be provided by caller as NULL. This method returns an error otherwise.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the method succeeds and the two object in context are identical. <br>
      <code>S_FALSE</code> if the method succeeds but the two object in context are different. <br>
      <code>E_INVALIDARG</code> if parameter provided are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="CreateObjectInContext"></a><a name="CreateObjectInContext(CATLISTP(CATIPLMComponent)&amp;,CATIPLMComponent*,CATBaseUnknown*,CATOmbObjectInContext*&amp;)"></a> <dt> o <b>CreateObjectInContext</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateObjectInContext</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATIPLMComponent)','CATLISTP(CATIPLMComponent)&amp;')</script> <td><tt>iPathOfInstances</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMComponent','CATIPLMComponent*')</script> <td><tt>iRepInstance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext','CATOmbObjectInContext*&amp;')</script> <td><tt>oObjectInContext</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a CATOmbObjectInContext for an object and a context.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathOfInstances</tt>
   <dd>    The path of instances describing the context of the object (optional).
 </dd>
    <dt><tt> iRepInstance</tt>
   <dd>    The instance of the representation containing the object (optional).
 </dd>
    <dt><tt> iObject</tt>
   <dd>    The object (optional).
 </dd>
    <dt><tt> oObjectInContext</tt>
   <dd> [out, CATBaseUnknown#Release]    The built CATOmbObjectInContext representing the object in this context.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul><li>S_OK if oObjectInContext has been successfully created.</li>
        <li>E_INVALIDARG if iPathOfInstances and iRepInstance do not represent a valid context for iObject</li>
        <li>E_FAIL otherwise.</li>
    </ul>
</dl>
</dl>
<a name="CreateObjectInContext"></a><a name="CreateObjectInContext(CATLISTP(CATIPLMComponent)&amp;,CATIPLMComponent*,CATBaseUnknown*,CATOmbObjectInContext_var&amp;)"></a> <dt> o <b>CreateObjectInContext</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateObjectInContext</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATIPLMComponent)','CATLISTP(CATIPLMComponent)&amp;')</script> <td><tt>iPathOfInstances</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMComponent','CATIPLMComponent*')</script> <td><tt>iRepInstance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOmbObjectInContext_var','CATOmbObjectInContext_var&amp;')</script> <td><tt>oObjectInContext</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a CATOmbObjectInContext_var for an object and a context.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathOfInstances</tt>
   <dd>    The path of instances describing the context of the object (optional).
 </dd>
    <dt><tt> iRepInstance</tt>
   <dd>    The instance of the representation containing the object (optional).
 </dd>
    <dt><tt> iObject</tt>
   <dd>    The object (optional).
 </dd>
    <dt><tt> oObjectInContext</tt>
   <dd>    The built CATOmbObjectInContext_var representing the object in this context.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul><li>S_OK if oObjectInContext has been successfully created.</li>
        <li>E_INVALIDARG if iPathOfInstances and iRepInstance do not represent a valid context for iObject</li>
        <li>E_FAIL otherwise.</li>
    </ul>
</dl>
</dl>
<a name="GetContextRootReference"></a><a name="GetContextRootReference(CATIPLMComponent*&amp;)"></a> <dt> o <b>GetContextRootReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContextRootReference</b>(<td><script type="text/javascript"> activateLink('CATIPLMComponent','CATIPLMComponent*&amp;')</script> <td><tt>oContextRootReference</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the root PLM Reference of the context.
 The root PLM Reference of the context is retrieved with the following algorithm:
 <ul>
 <li>If there is a path of PLM Instances,
     the root reference is the PLM Reference aggregating the first PLM Instance of the path</li>
 <li>If there is no path of PLM Instances but a PLM Representation instance,
     the root reference is the PLM Reference aggregating the PLM Representation instance</li>
 <li>If there is no PLM first instances and no PLM Representation instance,
     there is no context and therefore no Context Root Reference.</li>
 </ul>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oContextRootReference</tt>
   <dd> [CATBaseUnknown#Release]      A PLM Reference. <br>
      Output parameter. <br>
      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
      This parameter is valuated if method returns S_OK.
      This parameter is returned to caller as NULL if method returns S_FALSE. <br>
      This parameter is returned to caller as NULL if method fails. <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the method succeeds. <br>
      <code>S_FALSE</code> if the method succeeds but there no Context Root Reference to return. <br>
      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="GetInstanceOfRepresentation"></a><a name="GetInstanceOfRepresentation(CATIPLMComponent*&amp;)"></a> <dt> o <b>GetInstanceOfRepresentation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInstanceOfRepresentation</b>(<td><script type="text/javascript"> activateLink('CATIPLMComponent','CATIPLMComponent*&amp;')</script> <td><tt>opRepresentationInstance</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets (if exists) the representation instance defining this CATOmbObjectInContext instance.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  opRepresentationInstance</tt>
   <dd> [CATBaseUnknown#Release]      A Representation Instance. <br>
      Output parameter. <br>
      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
      This parameter is returned to caller as NULL if method fails. <br>
      This parameter is valuated if method succeeds.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the method succeeds. <br>
      <code>S_FALSE</code> if the method succeeds but there no defined representation instance. <br>
      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="GetObjectOutOfContext"></a><a name="GetObjectOutOfContext(CATBaseUnknown*&amp;,IID&amp;)"></a> <dt> o <b>GetObjectOutOfContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetObjectOutOfContext</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>opObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt><td><tt>=IID_CATBaseUnknown</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets (if exists) the object defining this CATOmbObjectInContext instance. <br>
 <u>Note</u>: The object can be a proxy if this CATOmbObjectInContext has been retrieved from a link.
 
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  opObject</tt>
   <dd> [CATBaseUnknown#Release]      The object if defined. <br>
      Output parameter. <br>
      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
      This parameter is returned to caller as NULL if method fails. <br>
      This parameter is valuated if method succeeds.
  </dd>
    <dt><tt>  iIID</tt>
   <dd>      The desired interface.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the method succeeds. <br>
      <code>S_FALSE</code> if the method succeeds but there no defined object. <br>
      <code>E_NOINTERFACE</code> if the method succeeds but there defined object does not adhere to the specified interface. <br>
      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<a name="GetPathOfInstances"></a><a name="GetPathOfInstances(CATLISTP(CATIPLMComponent)&amp;)"></a> <dt> o <b>GetPathOfInstances</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPathOfInstances</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATIPLMComponent)','CATLISTP(CATIPLMComponent)&amp;')</script> <td><tt>oPathOfInstances</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets (if exists) the path of instances defining this CATOmbObjectInContext instance. <br>
 In the case of a VO Descriptor only composed of an instance, it corresponds to a path of instances composed of a single instance.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   oPathOfInstances</tt>
   <dd>      A path of instances. <br>
      Output parameter. <br>
      This list MUST be provided by caller as empty. This method returns an error otherwise. <br>
      This list is returned to caller as empty if method fails.
      Items in this returned list must be released by the caller after use !!
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <code>S_OK</code> if the method succeeds and the path was successfully retrieved. <br>
      <code>S_FALSE</code> if the method succeeds but there no defined path. <br>
      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
      <code>E_FAIL</code> otherwise. <br>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATOmbObjectInContext.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectModelerBase</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

