<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerBase Class CATOmbLifeCycleRootsBag</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ObjectModelerBase.htm" href="../ObjectModelerBase.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ObjectModelerBase";	}
		function getCurrentObjectName() { 
 	return "CATOmbLifeCycleRootsBag"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ObjectModelerBase <script type="text/javascript" > writeClassCharacteristic(); </script> CATOmbLifeCycleRootsBag</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATOmbLifeCycleRootsBag_39868','CATOmbLifeCycleRootsBag','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATOmbLifeCycleRootsBag</b>
</p>
<p>
<b><i> Class allowing to hold PLM components in session.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATOmbLifeCycleRootsBag()"><b>CATOmbLifeCycleRootsBag</b></a>()
<dd>  Constructs an empty bag.
 <dt> o 
    <a href="#CATOmbLifeCycleRootsBag(CATOmbLifeCycleRootsBag&amp;)"><b>CATOmbLifeCycleRootsBag</b></a>(CATOmbLifeCycleRootsBag&amp;)
<dd>  Constructs a new handle referencing the same bag.
 <dt> o 
    <a href="#CATOmbLifeCycleRootsBag(CATIOmbLifeCycleOwnerNLSInfo&amp;)"><b>CATOmbLifeCycleRootsBag</b></a>(CATIOmbLifeCycleOwnerNLSInfo&amp;)
<dd>  Constructs an empty bag, with specific debug messages info.
 <dt> o 
    <a href="#~CATOmbLifeCycleRootsBag()"><b>~CATOmbLifeCycleRootsBag</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ChangeOwnerInfo(CATIOmbLifeCycleOwnerNLSInfo&amp;)"><b>ChangeOwnerInfo</b></a>(CATIOmbLifeCycleOwnerNLSInfo&amp;)
<dd>  Changes pointer to NLS info.
 <dt> o 
    <a href="#GetRoots(CATListPtrCATBaseUnknown&amp;)"><b>GetRoots</b></a>(CATListPtrCATBaseUnknown&amp;)
<dd>  Retrieves the roots components.
 <dt> o 
    <a href="#InsertRoot(IUnknown*)"><b>InsertRoot</b></a>(IUnknown*)
<dd>  Inserts a PLM component as root object kept by this bag.
 <dt> o 
    <a href="#RemoveAll()"><b>RemoveAll</b></a>()
<dd>  Empties this bag.
 <dt> o 
    <a href="#RemoveRoot(IUnknown*)"><b>RemoveRoot</b></a>(IUnknown*)
<dd>  Removes a PLM component from this bag.
 <dt> o 
    <a href="#operator!()"><b>operator!</b></a>()
<dd>  Checks if handle is referencing a bag.
 <dt> o 
    <a href="#operator=(CATOmbLifeCycleRootsBag&amp;)"><b>operator=</b></a>(CATOmbLifeCycleRootsBag&amp;)
<dd>  Assign a new reference to an existing handle.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATOmbLifeCycleRootsBag"></a><a name="CATOmbLifeCycleRootsBag()"></a> <dt> o <b>CATOmbLifeCycleRootsBag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATOmbLifeCycleRootsBag</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty bag.
</dl>
<a name="CATOmbLifeCycleRootsBag"></a><a name="CATOmbLifeCycleRootsBag(CATOmbLifeCycleRootsBag&amp;)"></a> <dt> o <b>CATOmbLifeCycleRootsBag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATOmbLifeCycleRootsBag</b>(<td> const <script type="text/javascript"> activateLink('CATOmbLifeCycleRootsBag','CATOmbLifeCycleRootsBag&amp;')</script> <td><tt>iCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a new handle referencing the same bag.
 The CATOmbLifeCycleRootsBag C++ object is a handle on a shared internal bag.
 The internal bag is deleted when the last handle is deleted.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCopy</tt>
   <dd>        An handle on the bag to be shared.</dd>
</dl>
</dl>
</dl>
<a name="CATOmbLifeCycleRootsBag"></a><a name="CATOmbLifeCycleRootsBag(CATIOmbLifeCycleOwnerNLSInfo&amp;)"></a> <dt> o <b>CATOmbLifeCycleRootsBag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATOmbLifeCycleRootsBag</b>(<td><script type="text/javascript"> activateLink('CATIOmbLifeCycleOwnerNLSInfo','CATIOmbLifeCycleOwnerNLSInfo&amp;')</script> <td><tt>iNLSInfo</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty bag, with specific debug messages info.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNLSInfo</tt>
   <dd>    A valid reference to an implementation of CATIOmbLifeCycleOwnerNLSInfo.</dd>
</dl>
</dl>
</dl>
<a name="~CATOmbLifeCycleRootsBag"></a><a name="~CATOmbLifeCycleRootsBag()"></a> <dt> o <b>~CATOmbLifeCycleRootsBag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATOmbLifeCycleRootsBag</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="ChangeOwnerInfo"></a><a name="ChangeOwnerInfo(CATIOmbLifeCycleOwnerNLSInfo&amp;)"></a> <dt> o <b>ChangeOwnerInfo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ChangeOwnerInfo</b>(<td><script type="text/javascript"> activateLink('CATIOmbLifeCycleOwnerNLSInfo','CATIOmbLifeCycleOwnerNLSInfo&amp;')</script> <td><tt>iNLSInfo</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Changes pointer to NLS info.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNLSInfo</tt>
   <dd>    A valid reference to an implementation of CATIOmbLifeCycleOwnerNLSInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Info successfully changed.</dd>
   </dl>
</dl>
</dl>
<a name="GetRoots"></a><a name="GetRoots(CATListPtrCATBaseUnknown&amp;)"></a> <dt> o <b>GetRoots</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRoots</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATBaseUnknown','CATListPtrCATBaseUnknown&amp;')</script> <td><tt>oListOfRoots</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the roots components.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfRoots</tt>
   <dd>    The list of root components inside the bag. 
    It must be empty before call. 
    Each object of the list must be released.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Components found.</dd>
     <dt>E_FAIL</dt>
     <dd>No components found.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>Called with non-empty output argument.</dd>
   </dl>
</dl>
</dl>
<a name="InsertRoot"></a><a name="InsertRoot(IUnknown*)"></a> <dt> o <b>InsertRoot</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertRoot</b>(<td><script type="text/javascript"> activateLink('IUnknown','IUnknown*')</script> <td><tt>iComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Inserts a PLM component as root object kept by this bag.
 Only reference and RepReference can be inserted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComp</tt>
   <dd>    The root component to insert in the bag.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The component was successfully inserted.</dd>
     <dt>S_FALSE</dt>
     <dd>The component was previously inserted, thus the bag contains it.</dd>
     <dt>E_FAIL</dt>
     <dd>The component has not been inserted.</dd>
   </dl>
</dl>
</dl>
<a name="RemoveAll"></a><a name="RemoveAll()"></a> <dt> o <b>RemoveAll</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAll</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Empties this bag.
 Every component which was kept in memory only because of this bag will
 be unloaded from the session. See also RemoveRoot method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>All components were successfully removed.</dd>
     <dt>E_FAIL</dt>
     <dd>An internal error occured.</dd>
   </dl>
</dl>
</dl>
<a name="RemoveRoot"></a><a name="RemoveRoot(IUnknown*)"></a> <dt> o <b>RemoveRoot</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveRoot</b>(<td><script type="text/javascript"> activateLink('IUnknown','IUnknown*')</script> <td><tt>iComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a PLM component from this bag.
 Every component which was kept in memory only because of this particular root will
 be unloaded from the session.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iComp</tt>
   <dd>    The root component to remove from the bag.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The component was successfully removed.</dd>
     <dt>E_FAIL</dt>
     <dd>The component has not been removed. An internal error occurred.</dd>
   </dl>
</dl>
</dl>
<a name="operator!"></a><a name="operator!()"></a> <dt> o <b>operator!</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>operator!</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Checks if handle is referencing a bag.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <dl>
     <dt>TRUE</dt>
     <dd>handle is not referencing a bag.</dd>
     <dt>FALSE</dt>
     <dd>handle is referencing a bag.</dd>
   </dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATOmbLifeCycleRootsBag&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATOmbLifeCycleRootsBag','CATOmbLifeCycleRootsBag&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATOmbLifeCycleRootsBag','CATOmbLifeCycleRootsBag&amp;')</script> <td><tt>iCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assign a new reference to an existing handle.
 The CATOmbLifeCycleRootsBag C++ object is a handle on a shared internal bag.
 If the handle was assigned to an existing bag, it will be released.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCopy</tt>
   <dd>        An handle on the bag to be shared.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         The current handle.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATOmbLifeCycleRootsBag.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectModelerBase</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

