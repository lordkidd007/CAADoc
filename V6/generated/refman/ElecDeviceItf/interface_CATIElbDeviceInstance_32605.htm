<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecDeviceItf Interface CATIElbDeviceInstance</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ElecDeviceItf.htm" href="../ElecDeviceItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ElecDeviceItf";	}
		function getCurrentObjectName() { 
 	return "CATIElbDeviceInstance"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ElecDeviceItf Interface CATIElbDeviceInstance</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIElbDeviceInstance_32605','CATIElbDeviceInstance','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIElbDeviceInstance</b>
</p>
<p>
<b><i> This interface is dedicated to the devices instance management.</i></b><br>

</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Connect(CATBaseUnknown*,CATBaseUnknown*,CATBaseUnknown*)"><b>Connect</b></a>(CATBaseUnknown*,CATBaseUnknown*,CATBaseUnknown*)
<dd>  Connects two devices together.
 <dt> o 
    <a href="#Disconnect(CATBaseUnknown*)"><b>Disconnect</b></a>(CATBaseUnknown*)
<dd>  Disconnects two devices connected together.
 <dt> o 
    <a href="#GetConnectedDevice(CATBaseUnknown*,CATBaseUnknown*&amp;,CATBaseUnknown*&amp;)"><b>GetConnectedDevice</b></a>(CATBaseUnknown*,CATBaseUnknown*&amp;,CATBaseUnknown*&amp;)
<dd>  Get the device connected to the current device through a given connection point.
 <dt> o 
    <a href="#GetInstanceName(CATUnicodeString&amp;)"><b>GetInstanceName</b></a>(CATUnicodeString&amp;)
<dd>  To retrieve the Name of the device instance in a CATUniCodeString.
 <dt> o 
    <a href="#GetType(CATUnicodeString&amp;)"><b>GetType</b></a>(CATUnicodeString&amp;)
<dd>  To retrieve the Type of the device instance in a CATUniCodeString.
 <dt> o 
    <a href="#ListSegmentEnds(CATBaseUnknown*,CATListValCATBaseUnknown_var*&amp;)"><b>ListSegmentEnds</b></a>(CATBaseUnknown*,CATListValCATBaseUnknown_var*&amp;)
<dd>  List the segment ends connected to the device
 through a segment connection point.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Connect"></a><a name="Connect(CATBaseUnknown*,CATBaseUnknown*,CATBaseUnknown*)"></a> <dt> o <b>Connect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Connect</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipFromCnctPt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipToDevice</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipToCnctPt</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Connects two devices together.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipFromCnctPt</tt>
   <dd>    The connection point reference on which the other device will be connected
 </dd>
    <dt><tt> ipToDevice</tt>
   <dd>    The device instance that will be connected to the current device
 </dd>
    <dt><tt> ipToCnctPt</tt>
   <dd>    The connection point reference of the other device that will be implied in the 'connection'.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds,<br>
   E_FAIL otherwise.
</dl>
</dl>
<a name="Disconnect"></a><a name="Disconnect(CATBaseUnknown*)"></a> <dt> o <b>Disconnect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Disconnect</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipToDevice</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Disconnects two devices connected together.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipToDevice</tt>
   <dd>    The device instance that will be disconnected from the current device instance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<a name="GetConnectedDevice"></a><a name="GetConnectedDevice(CATBaseUnknown*,CATBaseUnknown*&amp;,CATBaseUnknown*&amp;)"></a> <dt> o <b>GetConnectedDevice</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConnectedDevice</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipCnctPt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>opDevice</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>opCnctPt</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the device connected to the current device through a given connection point.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipCnctPt</tt>
   <dd>    The connection point on which the searched device is connected
    The connection point can be a Cavity, a CavityCnctPt, a ShellCnctPt, a ConnectorCnctPt or a BackShellCnctPt.
 </dd>
    <dt><tt> opDevice</tt>
   <dd>    The device instance connected to the current device
 </dd>
    <dt><tt> opCnctPt</tt>
   <dd>    The connection point reference of the searched device implied in the 'connection'.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds,<br>
   E_FAIL otherwise.
</dl>
</dl>
<a name="GetInstanceName"></a><a name="GetInstanceName(CATUnicodeString&amp;)"></a> <dt> o <b>GetInstanceName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInstanceName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oStrInstanceName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 To retrieve the Name of the device instance in a CATUniCodeString.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInstanceName</tt>
   <dd>    The device instance name of type CATUnicodeString returned.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<a name="GetType"></a><a name="GetType(CATUnicodeString&amp;)"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetType</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oStrType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 To retrieve the Type of the device instance in a CATUniCodeString.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>    The device instance type of type CATUnicodeString returned.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<a name="ListSegmentEnds"></a><a name="ListSegmentEnds(CATBaseUnknown*,CATListValCATBaseUnknown_var*&amp;)"></a> <dt> o <b>ListSegmentEnds</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListSegmentEnds</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipCnxPt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*&amp;')</script> <td><tt>opLSegmentEnds</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 List the segment ends connected to the device
 through a segment connection point.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipCnxPt</tt>
   <dd>    The Segment Connection point on which the segment ends are connected
 </dd>
    <dt><tt> opLSegmentEnds</tt>
   <dd>    The list of segment ends
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the method succeeds, or E_FAIL otherwise
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIElbDeviceInstance.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATElbInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

