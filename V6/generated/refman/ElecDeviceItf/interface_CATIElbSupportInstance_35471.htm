<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecDeviceItf Interface CATIElbSupportInstance</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../ElecDeviceItf.htm" href="../ElecDeviceItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "ElecDeviceItf";	}
		function getCurrentObjectName() { 
 	return "CATIElbSupportInstance"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>ElecDeviceItf Interface CATIElbSupportInstance</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIElbSupportInstance_35471','CATIElbSupportInstance','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIElbSupportInstance</b>
</p>
<p>
<b><i>  </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetNumberOfSections(int&amp;)"><b>GetNumberOfSections</b></a>(int&amp;)
<dd>   Gets the number of support sections.
 <dt> o 
    <a href="#ListAllSegments(CATLISTP_CATEhiSegmentInfo*&amp;)"><b>ListAllSegments</b></a>(CATLISTP_CATEhiSegmentInfo*&amp;)
<dd>  Gets the list of segments passing through the support through All sections.
 <dt> o 
    <a href="#ListSegmentsThroughSection(CATLISTP_CATEhiSegmentInfo*&amp;,int)"><b>ListSegmentsThroughSection</b></a>(CATLISTP_CATEhiSegmentInfo*&amp;,int)
<dd>  Gets the list of segments passing through the support through specified section.
 <dt> o 
    <a href="#SetSegmentPositions(CATLISTP_CATEhiSegmentInfo*,int)"><b>SetSegmentPositions</b></a>(CATLISTP_CATEhiSegmentInfo*,int)
<dd>  Sets the segment position in branch route.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetNumberOfSections"></a><a name="GetNumberOfSections(int&amp;)"></a> <dt> o <b>GetNumberOfSections</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNumberOfSections</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbSections</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the number of support sections.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbSections</tt>
   <dd>    Number of support sections.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while getting the Number of sections.</dd>
   </dl>
</dl>
</dl>
<a name="ListAllSegments"></a><a name="ListAllSegments(CATLISTP_CATEhiSegmentInfo*&amp;)"></a> <dt> o <b>ListAllSegments</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListAllSegments</b>(<td><script type="text/javascript"> activateLink('CATLISTP_CATEhiSegmentInfo','CATLISTP_CATEhiSegmentInfo*&amp;')</script> <td><tt>opListOfSegmentsPassingThroughSupport</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of segments passing through the support through All sections.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opListOfSegmentsPassingThroughSupport</tt>
   <dd>    Output list of segments passing through the support through All sections.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while getting segments.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>Input List not empty</dd>
   </dl>
</dl>
</dl>
<a name="ListSegmentsThroughSection"></a><a name="ListSegmentsThroughSection(CATLISTP_CATEhiSegmentInfo*&amp;,int)"></a> <dt> o <b>ListSegmentsThroughSection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListSegmentsThroughSection</b>(<td><script type="text/javascript"> activateLink('CATLISTP_CATEhiSegmentInfo','CATLISTP_CATEhiSegmentInfo*&amp;')</script> <td><tt>opListOfSegmentsPassingThroughSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSectionNumber</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of segments passing through the support through specified section.
  Note :- if no section is specified it will return the segments passing through sec 1
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opListOfSegmentsPassingThroughSection</tt>
   <dd>    Output list of segments passing through the support through specified section.
 </dd>
    <dt><tt> iSectionNumber</tt>
   <dd>    section from which list of segments passing through the support are required.
 Note :-If not specified iSectionNumber value then segments through Section 1 are returned.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while getting segments.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>Input List not empty</dd>
   </dl>
</dl>
</dl>
<a name="SetSegmentPositions"></a><a name="SetSegmentPositions(CATLISTP_CATEhiSegmentInfo*,int)"></a> <dt> o <b>SetSegmentPositions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSegmentPositions</b>(<td><script type="text/javascript"> activateLink('CATLISTP_CATEhiSegmentInfo','CATLISTP_CATEhiSegmentInfo*')</script> <td><tt>ipListOfSegmentsThroughSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSectionNumber</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the segment position in branch route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipListOfSegmentsThroughSection</tt>
   <dd> Input list of segments for which positions are to be set.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value. 
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>no error. </dd>
     <dt>E_FAIL </dt>
     <dd>Error occured while setting the segment positions.</dd>
     <dt>E_INVALIDARG</dt>
     <dd>Invalid input values</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIElbSupportInstance.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATElbInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2014, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

